name: Blazor-wasm test (local build)

on:
  #push:
  #  branches: [ main ]
  #pull_request:
  #  branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: main
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Init vs environment
      uses: egor-tensin/vs-shell@v2
      with:
        arch: x64
    - name: Build
      shell: pwsh
      run: |
        .\build.cmd -os browser -s mono+libs+pack -bl
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.3
      with:
        # Artifact name
        name: build-log
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{ github.workspace }}/artifacts/log/*/Build.binlog
    - name: Test
      shell: pwsh
      run: |
        cd ..
        mkdir t0
        cd t0
        Invoke-WebRequest -Uri https://dot.net/v1/dotnet-install.ps1 -Outfile dotnet-install.ps1
        ./dotnet-install.ps1 -Channel release/6.0.1xx-preview5 -InstallDir dotnet
        
        $Env:Path="$pwd\dotnet;$Env:Path"
        $Env:DOTNET_ROOT="$pwd\dotnet"
        
        which dotnet
        
        # new nugetconfig with dotnet6 feed
        
        dotnet new nugetconfig
        
        $nugetConfigPath = "$pwd\nuget.config"
        $doc = (Get-Content $nugetConfigPath) -As [Xml]
        $node = $doc.SelectSingleNode("/configuration/packageSources/add")
        
        $newNode = $doc.CreateElement("add")
        $newNode.SetAttribute("key", "dotnet6")
        $newNode.SetAttribute("value", "https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet6/nuget/v3/index.json")
        $doc.configuration.packageSources.InsertBefore($newNode, $node)
        $doc.Save($nugetConfigPath)
        
        type nuget.config
        
        # install workload
        dotnet workload install microsoft-net-sdk-blazorwebassembly-aot
        
        # blazorwasm
        mkdir project
        cd project
        dotnet new blazorwasm
        
        dotnet publish /p:RunAOTCompilation=true /bl
