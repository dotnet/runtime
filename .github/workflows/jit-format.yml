name: Format jit codebase

on:
  pull_request:
    paths:
      - '.github/workflows/jit-format.yml'
      - 'src/coreclr/jit/**'
    branches: [ main ]

jobs:
  format:
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: linux
            image: ubuntu-latest
            container: mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-cross-amd64-net9.0
            extension: '.sh'
            cross: '--cross'
            rootfs: '/crossrootfs/x64'
          - name: windows
            image: windows-latest
            extension: '.cmd'
            cross: ''
            rootfs: ''
    runs-on: ${{ matrix.os.image }}
    container: ${{ matrix.os.container }}
    name: Format jit codebase ${{ matrix.os.name }}
    steps:
      - name: Checkout jitutils
        uses: actions/checkout@v4
        with:
          path: jitutils
          repository: dotnet/jitutils
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Build jitutils
        run: |
          ./bootstrap${{ matrix.os.extension }}
        working-directory: jitutils
      - name: Checkout runtime
        uses: actions/checkout@v4
        with:
          path: runtime
      - name: Install Python
        uses: actions/setup-python@v5
      
      - name: Run jitformat.py
        run: |
          python3 runtime/src/coreclr/scripts/jitformat.py --jitutils jitutils -r runtime -o ${{ matrix.os.name }} -a x64 ${{ matrix.os.cross }}
        env:
          ROOTFS_DIR: ${{ matrix.os.rootfs }}
      
      - name: Publish format.patch
        uses: actions/upload-artifact@v4
        with:
          path: runtime/format.patch
          name: format.${{matrix.os.name}}.patch
        if: failure()