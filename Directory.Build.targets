<Project InitialTargets="ErrorForMissingPackageDescription">
  <PropertyGroup>
    <!--
    For non-SDK projects that import this file and then import Microsoft.Common.targets,
    tell Microsoft.Common.targets not to import Directory.Build.targets again
    -->
    <ImportDirectoryBuildTargets>false</ImportDirectoryBuildTargets>
  </PropertyGroup>

  <Import Project="Sdk.targets" Sdk="Microsoft.DotNet.Arcade.Sdk" />
  <Import Project="$(RepositoryEngineeringDir)liveBuilds.targets" />
  <Import Project="$(RepositoryEngineeringDir)python.targets" />

  <PropertyGroup>
    <!--
      Define this here (not just in Versions.props) because the SDK resets it
      unconditionally in Microsoft.NETCoreSdk.BundledVersions.props.
    -->
    <NETCoreAppMaximumVersion>$(MajorVersion).$(MinorVersion)</NETCoreAppMaximumVersion>
    <EnableNETAnalyzers Condition="'$(EnableAnalyzers)' != 'true'">false</EnableNETAnalyzers>
    <!-- SDK sets product to assembly but we want it to be our product name -->
    <Product>Microsoft%AE .NET</Product>
    <!-- Use the .NET product branding version for informational version description -->
    <InformationalVersion Condition="'$(InformationalVersion)' == '' and '$(VersionSuffix)' == ''">$(ProductVersion)</InformationalVersion>
    <InformationalVersion Condition="'$(InformationalVersion)' == '' and '$(VersionSuffix)' != ''">$(ProductVersion)-$(VersionSuffix)</InformationalVersion>
  </PropertyGroup>

  <!-- Packaging -->
  <ItemGroup Condition="'$(IsPackable)' == 'true'">
    <!-- The sfxproj files add the license themselves. -->
    <None Include="$(LicenseFile)"
          PackagePath="$([System.IO.Path]::GetFileName('$(LicenseFile)'))"
          Pack="true"
          Condition="'$(MSBuildProjectExtension)' != '.sfxproj'" />
    <None Include="$(PackageThirdPartyNoticesFile)"
          PackagePath="$([System.IO.Path]::GetFileName('$(PackageThirdPartyNoticesFile)'))"
          Pack="true" />
  </ItemGroup>

  <PropertyGroup>
    <PackageDescription Condition="'$(PackageDescription)' == '' and '$(Description)' != ''">$(Description)</PackageDescription>
    <RuntimePackageDisclaimer>Internal implementation package not meant for direct consumption. Please do not reference directly.</RuntimePackageDisclaimer>
    <UseRuntimePackageDisclaimer Condition="'$(UseRuntimePackageDisclaimer)' == '' and
                                            ($(MSBuildProjectName.StartsWith('runtime.native')) or '$(PackageTargetRuntime)' != '')">true</UseRuntimePackageDisclaimer>
    <PackageDescription Condition="'$(PackageDescription)' != '' and '$(UseRuntimePackageDisclaimer)' == 'true'">$(RuntimePackageDisclaimer) %0A$(PackageDescription)</PackageDescription>
    <PackageDescription Condition="'$(PackageDescription)' == '' and '$(UseRuntimePackageDisclaimer)' == 'true'">$(RuntimePackageDisclaimer)</PackageDescription>
    <!-- Keep in sync as required by the Packaging SDK in Arcade. -->
    <Description>$(PackageDescription)</Description>
  </PropertyGroup>

  <!-- Remove when https://github.com/NuGet/Home/issues/10405 is implemented and consumed. -->
  <Target Name="ErrorForMissingPackageDescription"
          Condition="'$(IsPackable)' == 'true' and '$(PackageDescription)' == ''">
    <Error Text="Required property 'PackageDescription' is missing for $(MSBuildProjectName)." />
  </Target>
</Project>