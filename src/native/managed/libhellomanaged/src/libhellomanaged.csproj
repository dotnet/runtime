<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>$(NetCoreAppToolCurrent)</TargetFramework>
    <Description>Example managed library that will be included in a NativeAOT compiled binary</Description>
    <EnableDefaultItems>true</EnableDefaultItems>
    <Nullable>enable</Nullable>
    <IncludeSymbols>true</IncludeSymbols>
    <Serviceable>true</Serviceable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <IsShipping>true</IsShipping>
    <!-- this assembly should not produce a public package, rather it's meant to be shipped as part of the runtime -->
    <IsShippingPackage>false</IsShippingPackage>
  </PropertyGroup>

  <PropertyGroup>
      <PublishAot>true</PublishAot>
      <SelfContained>true</SelfContained>
  </PropertyGroup>

  <PropertyGroup>
    <!-- in net9.0 we can do this -->
    <SharedLibraryInstallName>@rpath/$(MSBuildProjectName).dylib</SharedLibraryInstallName>
  </PropertyGroup>

  <ItemGroup>
      <NativeLibraryCmakeFragmentIncludePath Include="$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)..\inc'))" />
  </ItemGroup>

  <ItemGroup>
      <!-- passed by compile-native.proj to set - -gcc-toolchain=$(ROOTFS_DIR)/usr -->
      <CustomLinkerArg Condition="'$(CustomLinkerArgToolchainArg)' != ''" Include="$(CustomLinkerArgToolchainArg)" />
  </ItemGroup>

  <ItemGroup>
      <ProjectReference Include="..\..\..\..\tools\Microsoft.DotNet.HelloManaged\src\Microsoft.DotNet.HelloManaged.csproj" />
  </ItemGroup>

  <Import Project="..\..\write-nativelib-cmake.targets" />

</Project>
