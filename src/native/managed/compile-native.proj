<Project Sdk="Microsoft.Build.Traversal">
    <PropertyGroup>
    	<!-- we always want to make shared libs -->
        <NativeLibKind Condition="'$(NativeLibKind)' == ''">shared</NativeLibKind>

	<!-- When we publish, we want to ensure the SDK does the same thing as though we ran 'dotnet publish' -->
	<TraversalPublishGlobalProperties>$(TraversalPublishGlobalProperties);_IsPublishing=true</TraversalPublishGlobalProperties>
    </PropertyGroup>

    <ItemGroup>
        <!-- add new projects here -->
        <!-- NativeLibsProjectsToBuild Include="$(MSBuildThisFileDirectory)libhellomanaged/src/libhellomanaged.csproj" -->
        <NativeLibsProjectsToBuild Include="$(MSBuildThisFileDirectory)cdacreader/src/cdacreader.csproj" />
    </ItemGroup>

    <!-- Decide if we're going to do the NativeAOT builds -->
    <PropertyGroup>
        <!-- disable on Mono, for now -->
        <SupportsNativeAotComponents Condition="'$(SupportsNativeAotComponents)' == '' and '$(RuntimeFlavor)' == 'Mono'">false</SupportsNativeAotComponents>
        <!-- disable on linux-bionic, for now -->
        <SupportsNativeAotComponents Condition="'$(SupportsNativeAotComponents)' == '' and '$(TargetsLinuxBionic)' == 'true'">false</SupportsNativeAotComponents>
        <!-- NativeAOT doesn't support cross-OS compilation. disable for crossdac-->
        <SupportsNativeAotComponents Condition="'$(SupportsNativeAotComponents)' == '' and '$(HostOS)' != '$(TargetOS)'">false</SupportsNativeAotComponents>
        <!-- unsupported targets -->
        <SupportsNativeAotComponents Condition="'$(SupportsNativeAotComponents)' == '' and '$(DotNetBuildSourceOnly)' == 'true'">false</SupportsNativeAotComponents>
        <SupportsNativeAotComponents Condition="'$(SupportsNativeAotComponents)' == '' and ('$(TargetArchitecture)' == 'arm' or '$(TargetArchitecture)' == 'armel' or '$(TargetArchitecture)' == 'x86' or '$(TargetArchitecture)' == 'riscv64')">false</SupportsNativeAotComponents>
        <SupportsNativeAotComponents Condition="'$(SupportsNativeAotComponents)' == '' and ('$(TargetsWindows)' == 'true' or '$(TargetsOSX)' == 'true' or ('$(TargetsLinux)' == 'true' and '$(TargetsAndroid)' != 'true' and '$(TargetsLinuxMusl)' != 'true'))">true</SupportsNativeAotComponents>
        <SupportsNativeAotComponents Condition="'$(SupportsNativeAotComponents)' == ''">false</SupportsNativeAotComponents>
    </PropertyGroup>

    <!-- some special kinds of runtime builds need extra NativeAOT flags -->
    <PropertyGroup>
        <SysRoot Condition="'$(CrossBuild)' == 'true' and '$(HostOS)' != 'windows'">$(ROOTFS_DIR)</SysRoot>
        <LinkerFlavor Condition="'$(CrossBuild)' == 'true' and '$(TargetsLinux)' == 'true'">lld</LinkerFlavor>
        <CustomLinkerArgToolchainArg Condition="'$(CrossBuild)' == 'true' and '$(_hostArchitecture)' == '$(_targetArchitecture)' and '$(_hostOS)' != 'windows'">--gcc-toolchain=$(ROOTFS_DIR)/usr</CustomLinkerArgToolchainArg>
    </PropertyGroup>

    <ItemGroup>
        <!-- additional native compilation-specific properties to pass down to the ProjectReference -->
        <SubprojectProps Include="NativeLib" Value="$(NativeLibKind)"/>

        <SubprojectProps Condition="'$(SysRoot)' != ''" Include="SysRoot" Value="$(SysRoot)" />
        <SubprojectProps Condition="'$(LinkerFlavor)' != ''" Include="LinkerFlavor" Value="$(LinkerFlavor)" />
        <SubprojectProps Condition="'$(CustomLinkerArgToolchainArg)' != ''" Include="CustomLinkerArgToolchainArg" Value="$(CustomLinkerArgToolchainArg)" />
    </ItemGroup>

    <Import Project=".\subproject.props" />
    
    <ItemGroup>
        <ProjectReference Include="@(NativeLibsProjectsToBuild)"
                          ReferenceOutputAssembly="false"
                          AdditionalProperties="%(AdditionalProperties);$(SplitSubprojectProps)"
                          Targets="LinkNative"
                          Condition="$(SupportsNativeAotComponents)"/>
    </ItemGroup>
</Project>
