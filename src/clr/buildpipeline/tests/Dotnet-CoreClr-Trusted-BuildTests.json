{
  "build": [
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": false,
      "displayName": "Run AgentTools/Begin.ps1",
      "timeoutInMinutes": 0,
      "condition": "succeededOrFailed()",
      "task": {
        "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "targetType": "inline",
        "filePath": "",
        "arguments": "",
        "script": "if (Test-Path \"$(AgentToolsPath)\\Begin.ps1\") {\n     \"Begin.ps1 script found. Executing...\"\n     cd $(AgentToolsPath)\n     & $(AgentToolsPath)\\Begin.ps1\n} else {\n   \"Begin.ps1 script does not exist. Moving on...\"\n}",
        "errorActionPreference": "continue",
        "failOnStderr": "false",
        "ignoreLASTEXITCODE": "true",
        "workingDirectory": ""
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Setup vs dev env",
      "timeoutInMinutes": 0,
      "condition": "and(succeeded(), ne(variables['PB_SkipTests'], 'true'))",
      "refName": "Task1",
      "task": {
        "id": "bfc8bf76-e7ac-4a8c-9a55-a944a9f632fd",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "setup_vs_tools.cmd",
        "arguments": "",
        "modifyEnvironment": "true",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run clean.cmd",
      "timeoutInMinutes": 0,
      "condition": "and(succeeded(), ne(variables['PB_SkipTests'], 'true'))",
      "refName": "Task2",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "clean.cmd",
        "arguments": "-all",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run sync.cmd",
      "timeoutInMinutes": 0,
      "condition": "and(succeeded(),ne(variables['PB_SkipTests'], 'true'))",
      "refName": "Task3",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "sync.cmd",
        "arguments": "-ab -AzureAccount=$(CloudDropAccountName) -AzureToken=$(CloudDropAccessToken) -Container=$(ParentContainerName) -RuntimeId=$(Rid) -BlobNamePrefix=$(ParentBlobNamePrefix)$(ParentBuildType)/TestNativeBins/$(Rid) -- /p:DownloadDirectory=$(Build.SourcesDirectory)/packages/TestNativeBins/$(Rid)/$(ParentBuildType)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Generate version props file",
      "timeoutInMinutes": 0,
      "condition": "and(succeeded(), ne(variables['PB_SkipTests'], 'true'))",
      "refName": "Task4",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "msbuild",
        "arguments": "createVersionFile.proj /p:OfficialBuildId=$(ParentOfficialBuildId)",
        "workingFolder": "src",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run build-test.cmd",
      "timeoutInMinutes": 0,
      "condition": "and(succeeded(), ne(variables['PB_SkipTests'], 'true'))",
      "refName": "Task5",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "build-test.cmd",
        "arguments": "$(ParentBuildType) $(Architecture) buildagainstpackages runtimeid $(Rid) $(TargetsNonWindowsArg) $(CrossgenArg) -Priority=$(Priority) -- /p:OfficialBuildId=$(ParentOfficialBuildId) /p:OverwriteCoreClrPackageVersion=true /p:IntermediateAzureFeed=$(IntermediateAzureFeed)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Send job to Helix",
      "timeoutInMinutes": 0,
      "condition": "and(succeeded(), ne(variables['PB_SkipTests'], 'true'))",
      "refName": "Task6",
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "msbuild",
        "arguments": "helixpublish.proj /p:CloudDropAccessToken=$(CloudDropAccessToken) /p:CloudDropAccountName=$(CloudDropAccountName) /p:ContainerName=$(ParentContainerName) /p:Platform=$(Architecture) /p:BuildType=$(ParentBuildType) /p:CloudResultsAccountName=$(CloudResultsAccountName) /p:CloudResultsAccessToken=$(CloudResultsAccessToken) /p:TargetsWindows=$(TargetsWindows) /p:OverwriteOnUpload=true /p:Rid=$(Rid) /p:TargetQueues=\"$(TargetQueues)\" /p:TestProduct=$(TestProduct) /p:Branch=$(SourceBranch) /p:HelixApiAccessKey=$(HelixApiAccessKey) /p:HelixApiEndpoint=$(HelixApiEndpoint) /p:FilterToOSGroup=$(FilterToOSGroup) /p:FilterToTestTFM=$(FilterToTestTFM) /p:TimeoutInSeconds=1800 /p:HelixJobType=$(HelixJobType) /fileloggerparameters:Verbosity=diag;LogFile=helix.log",
        "workingFolder": "tests",
        "failOnStandardError": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Copy Files to: $(Build.StagingDirectory)\\BuildLogs",
      "timeoutInMinutes": 0,
      "condition": "succeededOrFailed()",
      "refName": "CopyFiles1",
      "task": {
        "id": "5bfb729a-a7c8-4a78-a7c3-8d717bb7c13c",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "SourceFolder": "",
        "Contents": "**/*.log",
        "TargetFolder": "$(Build.StagingDirectory)\\BuildLogs",
        "CleanTargetFolder": "false",
        "OverWrite": "false",
        "flattenFolders": "false"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Publish Artifact: BuildLogs",
      "timeoutInMinutes": 0,
      "condition": "succeededOrFailed()",
      "refName": "PublishBuildArtifacts1",
      "task": {
        "id": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "PathtoPublish": "$(Build.StagingDirectory)\\BuildLogs",
        "ArtifactName": "BuildLogs",
        "ArtifactType": "Container",
        "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)",
        "Parallel": "false",
        "ParallelCount": "8"
      }
    },
    {
      "environment": {},
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Run AgentTools/End.ps1",
      "timeoutInMinutes": 0,
      "condition": "succeededOrFailed()",
      "task": {
        "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "targetType": "inline",
        "filePath": "",
        "arguments": "",
        "script": "if (Test-Path \"$(AgentToolsPath)\\End.ps1\") {\n     \"End.ps1 script found. Executing...\"\n     cd $(AgentToolsPath)\n     & $(AgentToolsPath)\\End.ps1\n} else {\n   \"End.ps1 script does not exist. Moving on...\"\n}",
        "errorActionPreference": "continue",
        "failOnStderr": "false",
        "ignoreLASTEXITCODE": "true",
        "workingDirectory": ""
      }
    }
  ],
  "options": [
    {
      "enabled": false,
      "definition": {
        "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
      },
      "inputs": {
        "workItemType": "234347",
        "assignToRequestor": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "57578776-4c22-4526-aeb0-86b6da17ee9c"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "5d58cc01-7c75-450c-be18-a388ddb129ec"
      },
      "inputs": {
        "branchFilters": "[\"+refs/heads/*\"]",
        "additionalFields": "{}"
      }
    }
  ],
  "variables": {
    "system.debug": {
      "value": "false",
      "allowOverride": true
    },
    "PB_BuildType": {
      "value": "Release",
      "allowOverride": true
    },
    "Architecture": {
      "value": "x64",
      "allowOverride": true
    },
    "Priority": {
      "value": "1"
    },
    "CloudDropAccountName": {
      "value": "dotnetbuildoutput"
    },
    "CloudDropAccessToken": {
      "value": null,
      "isSecret": true
    },
    "OfficialBuildId": {
      "value": "$(Build.BuildNumber)",
      "allowOverride": true
    },
    "Label": {
      "value": "$(Build.BuildNumber)",
      "allowOverride": true
    },
    "PB_SkipTests": {
      "value": "false",
      "allowOverride": true
    },
    "CloudResultsAccountName": {
      "value": "dotnetjobresults"
    },
    "CloudResultsAccessToken": {
      "value": null,
      "isSecret": true
    },
    "TargetsWindows": {
      "value": "false"
    },
    "Rid": {
      "value": "linux-x64"
    },
    "TargetQueues": {
      "value": "debian.82.amd64,fedora.23.amd64,redhat.72.amd64,ubuntu.1404.amd64,ubuntu.1604.amd64,ubuntu.1610.amd64"
    },
    "TestProduct": {
      "value": "coreclr"
    },
    "SourceBranch": {
      "value": "master"
    },
    "HelixApiAccessKey": {
      "value": null,
      "isSecret": true
    },
    "ParentContainerName": {
      "value": "",
      "allowOverride": true
    },
    "ParentBlobNamePrefix": {
      "value": "",
      "allowOverride": true
    },
    "ParentBuildType": {
      "value": "",
      "allowOverride": true
    },
    "ParentOfficialBuildId": {
      "value": "",
      "allowOverride": true
    },
    "HelixApiEndpoint": {
      "value": "https://helix.dot.net/api/2016-09-12/jobs"
    },
    "FilterToOSGroup": {
      "value": "Dummy"
    },
    "FilterToTestTFM": {
      "value": "Dummy"
    },
    "PB_ContainerName": {
      "value": "$(Label)-$(TestContainerSuffix)-test"
    },
    "TestContainerSuffix": {
      "value": "linux"
    },
    "IntermediateAzureFeed": {
      "value": "https://dotnetbuildoutput.blob.core.windows.net/$(ParentContainerName)/$(ParentBlobNamePrefix)$(ParentBuildType)/pkg/index.json"
    },
    "RuntimeIDArg": {
      "value": "runtimeid linux-x64"
    },
    "TargetsNonWindowsArg": {
      "value": ""
    },
    "CrossgenArg": {
      "value": ""
    }
  },
  "retentionRules": [
    {
      "branches": [
        "+refs/heads/*"
      ],
      "artifacts": [],
      "artifactTypesToDelete": [
        "FilePath",
        "SymbolStore"
      ],
      "daysToKeep": 10,
      "minimumToKeep": 1,
      "deleteBuildRecord": true,
      "deleteTestResults": true
    }
  ],
  "buildNumberFormat": "$(date:yyyyMMdd)$(rev:-rr)-$(Rid)",
  "jobAuthorizationScope": "projectCollection",
  "jobTimeoutInMinutes": 180,
  "jobCancelTimeoutInMinutes": 5,
  "repository": {
    "properties": {
      "labelSources": "0",
      "reportBuildStatus": "true",
      "fetchDepth": "0",
      "gitLfsSupport": "false",
      "skipSyncSource": "false",
      "cleanOptions": "0",
      "checkoutNestedSubmodules": "false",
      "labelSourcesFormat": "$(build.buildNumber)"
    },
    "id": "670e3783-ab4f-44fc-9786-d332007da311",
    "type": "TfsGit",
    "name": "DotNet-CoreCLR-Trusted",
    "url": "https://devdiv.visualstudio.com/DevDiv/_git/DotNet-CoreCLR-Trusted",
    "defaultBranch": "refs/heads/master",
    "clean": "true",
    "checkoutSubmodules": false
  },
  "processParameters": {},
  "quality": "definition",
  "drafts": [],
  "queue": {
    "_links": {
      "self": {
        "href": "https://devdiv.visualstudio.com/DefaultCollection/_apis/build/Queues/330"
      }
    },
    "id": 330,
    "name": "DotNetCore-Build",
    "url": "https://devdiv.visualstudio.com/DefaultCollection/_apis/build/Queues/330",
    "pool": {
      "id": 97,
      "name": "DotNetCore-Build"
    }
  },
  "id": 5159,
  "name": "Dotnet-CoreClr-Trusted-BuildTests",
  "path": "\\",
  "type": "build",
  "queueStatus": "enabled",
  "project": {
    "id": "0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "name": "DevDiv",
    "description": "Visual Studio and DevDiv team project for git source code repositories.  Work items will be added for Adams, Dev14 work items are tracked in vstfdevdiv.  ",
    "url": "https://devdiv.visualstudio.com/DefaultCollection/_apis/projects/0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "state": "wellFormed",
    "revision": 418098432,
    "visibility": "organization"
  }
}
