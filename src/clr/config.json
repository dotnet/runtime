{
  "settings": {
    "CloudDropAccessToken": {
      "description": "Azure access token",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "CloudDropAccountName": {
      "description": "Azure account name.",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "__PublishPackages": {
      "description": "Specifies whether to publish product packages.",
      "valueType": "property",
      "values": [ true, false ],
      "defaultValue": true
    },
    "__PublishSymbols": {
      "description": "Specifies whether to publish symbol packages.",
      "valueType": "property",
      "values": [ true, false ],
      "defaultValue": true
    },
    "BuildNumberMajor": {
      "description": "Product build major number.",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "BuildNumberMinor": {
      "description": "Product build minor number.",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "ContainerName": {
      "description": "Container name for Azure upload.",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "__BlobNamePrefix": {
      "description": "Blob Prefix for Azure download.",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "MsBuildFileLogging": {
      "description": "MsBuild logging options.",
      "valueType": "passThrough",
      "values": [],
      "defaultValue": "/flp:v=normal"
    },
    "MsBuildEventLogging": {
      "description": "MsBuild logging options.",
      "valueType": "passThrough",
      "values": [],
      "defaultValue": "/l:BinClashLogger,Tools/net46/Microsoft.DotNet.Build.Tasks.dll;LogFile=binclash.log"
    },
    "FilterToOSGroup": {
      "description": "Specifies the OSGroup.",
      "valueType": "property",
      "values": [ "Windows_NT", "Linux", "Unix", "OSX", "Android" ],
      "defaultValue": "${OSName}"
    },
    "RestoreNETCorePlatforms": {
      "description": "MsBuild target that restores the NETCore packages.",
      "valueType": "target",
      "values": [],
      "defaultValue": ""
    },
    "RestoreOptData": {
      "description": "MsBuild target that restores optimization profile data.",
      "valueType": "target",
      "values": [],
      "defaultValue": ""
    },
    "RestoreDuringBuild": {
      "description": "Enables/disables package restore.",
      "valueType": "property",
      "values": [ true, false ],
      "defaultValue": true
    },
    "Project": {
      "description": "Project where the commands are going to be applied.",
      "valueType": "passThrough",
      "values": [],
      "defaultValue": ""
    },
    "__BuildType": {
      "description": "Specifies the configuration to publish packages",
      "valueType": "property",
      "values": [ "release", "debug", "checked" ],
      "defaultValue": "debug"
    },
    "__BuildArch": {
      "description": "Specifies the architecture to publish packages",
      "valueType": "property",
      "values": [ "x64", "x86", "arm", "arm64" ],
      "defaultValue": "${CPUArch}"
    },
    "__BuildOS": {
      "description": "Specifies the OS to publish packages.",
      "valueType": "property",
      "values": [ "Linux", "OSX", "FreeBSD", "OpenBSD", "NetBSD", "SunOS", "Windows_NT", "Android" ],
      "defaultValue": "${OSName}"
    },
    "__DistroRid": {
      "description": "Specifies the distro rid for Unix OS.",
      "valueType": "property",
      "values": [],
      "defaultValue": "${OSRid}"
    },
    "__VSVersion": {
      "description": "Sets the Visual Studio version to use.",
      "valueType": "property",
      "values": [],
      "defaultValue": "vs2015"
    },
    "__ProjectDir": {
      "description": "Directory of the dir.props file.",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "__SourceDir": {
      "description": "Source directory.",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "__PackagesDir": {
      "description": "Packages directory.",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "__RootBinDir": {
      "description": "Root bin directory.",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "__BinDir": {
      "description": "Bin directory of specific OS, Arch and Type being built.",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "__IntermediatesDir": {
      "description": "Intermediates bin directory.",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "__PackagesBinDir": {
      "description": "Packages bin directory.",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "__TestWorkingDir": {
      "description": "Test working directory.",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "GenerateVersionHeader": {
      "description": "Generates _version.h",
      "valueType": "passThrough",
      "values": [],
      "defaultValue": "/t:GenerateVersionHeader /p:GenerateVersionHeader=true"
    },
    "GenerateVersionSourceFile": {
      "description": "Generate version.cpp",
      "valueType": "passThrough",
      "values": [],
      "defaultValue": "/t:GenerateVersionSourceFile /p:GenerateVersionSourceFile=true"
    },
    "NativeVersionSourceFile": {
      "description": "Provides location for version.cpp",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "NativeVersionHeaderFile": {
      "description": "Provides location for _version.h",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "OverwriteCoreClrPackageVersion": {
      "description": "Sets the property specifying to overwrite CoreClr Package version using OfficialBuildId",
      "valueType": "property",
      "values": [ true, false ],
      "defaultValue": true
    },
    "OfficialBuildId": {
      "description": "Official Build Id.",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "Configuration": {
      "description": "Specifies the build type for native build.",
      "valueType": "property",
      "values": [ "debug", "release", "checked" ],
      "defaultValue": "debug"
    },
    "EnableProfileGuidedOptimization": {
      "description": "Enables IBC profile optimizations if profile data are available.",
      "valueType": "property",
      "values": [ true, false ],
      "defaultValue": false
    },
    "RestoreDefaultOptimizationDataPackage": {
      "description": "Instructs BuildTools to restore the default OptimizationData package.",
      "valueType": "property",
      "values": [ true, false ],
      "defaultValue": true
    },
    "UsePartialNGENOptimization": {
      "description": "Adds the `-partialNGEN -minify` arguments when invoking IBCMerge.",
      "valueType": "property",
      "values": [ true, false ],
      "defaultValue": true
    },
    "OptimizationDataDir": {
      "description": "Sets the path where the build should look for IBC profile data.",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "UseEnv": {
      "description": "Set when building for arm64.",
      "valueType": "property",
      "values": [ true, false ],
      "defaultValue": true
    },
    "Platform": {
      "description": "Sets the build arch for native build.",
      "valueType": "property",
      "values": [ "x86", "x64", "arm", "arm64" ],
      "defaultValue": "${CPUArch}"
    },
    "PortableBuild": {
      "description": "Indicates if this is a portable build.",
      "valueType": "property",
      "values": [ "false", "true"],
      "defaultValue": "true"
    },
    "Rebuild": {
      "description": "Specifies rebuild target.",
      "valueType": "target",
      "values": [],
      "defaultValue": ""
    },
    "MsBuildLog": {
      "description": "Specifies build logs for build alias.",
      "valueType": "passThrough",
      "values": [],
      "defaultValue": ""
    },
    "MsBuildWrn": {
      "description": "Specifies build logs for build alias.",
      "valueType": "passThrough",
      "values": [],
      "defaultValue": ""
    },
    "MsBuildErr": {
      "description": "Specifies build logs for build alias.",
      "valueType": "passThrough",
      "values": [],
      "defaultValue": ""
    },
    "BuildNugetPackage": {
      "description": "Specifies to build nuget packages.",
      "valueType": "property",
      "values": [ true, false ],
      "defaultValue": true
    },
    "SignType": {
      "description": "Sets the SignType.",
      "valueType": "property",
      "values": [ "real" ],
      "defaultValue": ""
    },
    "CLRTestPriorityToBuild": {
      "description": "Sets priority to build test.",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "CreateTestOverlay": {
      "description": "Runs CreateTestOverlay target.",
      "valueType": "target",
      "values": [],
      "defaultValue": ""
    },
    "CreateNonWindowsTestOverlay": {
      "description": "Runs CreateNonWindowsTestOverlay target.",
      "valueType": "target",
      "values": [],
      "defaultValue": ""
    },
    "Verbosity": {
      "description": "Sets build verbosity.",
      "valueType": "passThrough",
      "values": [],
      "defaultValue": "/v:normal"
    },
    "Build": {
      "description": "Runs the build target.",
      "valueType": "target",
      "values": [],
      "defaultValue": ""
    },
    "UseSharedCompilation": {
      "description": "Sets the use shared compilation property.",
      "valueType": "property",
      "values": [ true, false ],
      "defaultValue": true
    },
    "UpdateInvalidPackageVersions": {
      "description": "Runs the target to update package versions.",
      "valueType": "target",
      "values": [],
      "defaultValue": ""
    },
    "GenerateRuntimeLayout": {
      "description": "Generates Core_Root folder",
      "valueType": "property",
      "values": [ true, false ],
      "defaultValue": true
    },
    "BuildTestsAgainstPackages": {
      "description": "Sets the property specifying if we're building tests against packages",
      "valueType": "property",
      "values": [ true, false ],
      "defaultValue": true
    },
    "TargetsWindows": {
      "description": "Sets the property specifying if the tests we're building will target Windows",
      "valueType": "property",
      "values": [ true, false ],
      "defaultValue": true
    },
    "PublishTestNativeBins": {
      "description": "Publishes test native binaries to Azure on non-windows",
      "valueType": "property",
      "values": [ true, false ],
      "defaultValue": true
    },
    "BuildWrappers": {
      "description": "Builds test Xunit wrappers",
      "valueType": "property",
      "values": [ true, false ],
      "defaultValue": true
    },
    "Crossgen": {
      "description": "Determines if we're running Crossgen tests",
      "valueType": "property",
      "values": [ true, false ],
      "defaultValue": true
    },
    "RuntimeId": {
      "description": "Specifies the OS to build Core_Root for",
      "valueType": "property",
      "values": [ "debian.8-x64", "fedora.24-x64", "fedora.25-x64", "opensuse.42.1-x64", "osx.10.12-x64", "rhel.7-x64", "ubuntu.14.04-x64", "ubuntu.16.04-x64", "ubuntu.16.10-x64", "android.21-arm64" ],
      "defaultValue": "${__RuntimeId}"
    },
    "BatchRestorePackages": {
      "description": "MsBuild target that restores the packages.",
      "valueType": "target",
      "values": [],
      "defaultValue": ""
    },
    "BinPlaceRef": {
      "description": "Place mscorlib.dll in bin/Product ref folder for building tests against",
      "valueType": "target",
      "values": [],
      "defaultValue": ""
    },
    "BinPlaceProduct": {
      "description": "Place test dependencies in bin/Product folder for building tests against",
      "valueType": "target",
      "values": [],
      "defaultValue": ""
    },
    "CopyCrossgenToProduct": {
      "description": "Place crossgen.exe in bin/Product folder for building tests against",
      "valueType": "target",
      "values": [],
      "defaultValue": ""
    },
    "OptionalToolSource": {
      "description": "URL of the nuget feed used by 'optional-tools'",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "OptionalToolSourceUser": {
      "description": "User name for authenticating to the optional tools feed",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "OptionalToolSourcePassword": {
      "description": "VSTS token for authenticating to the optional tools feed; requires 'package(READ)' permission",
      "valueType": "property",
      "values": [],
      "defaultValue": ""
    },
    "ExtraParameters": {
      "description": "Extra parameters will be passed to the selected command.",
      "valueType": "passThrough",
      "values": [],
      "defaultValue": ""
    }
  },
  "commands": {
    "build": {
      "alias": {
        "generateHeaderWindows": {
          "description": "Generates _version.h",
          "settings": {
            "GenerateVersionHeader": "default",
            "NativeVersionHeaderFile": "default"
          }
        },
        "generateHeaderUnix": {
          "description": "Generates version.cpp",
          "settings": {
            "GenerateVersionSourceFile": "default",
            "NativeVersionSourceFile": "default"
          }
        },
        "verbose": {
          "description": "Sets the verbosity",
          "settings": {
            "Verbosity": "/v:detailed"
          }
        },
        "disableoss": {
          "description": "Sets the sign type.",
          "settings": {
            "SignType": "real"
          }
        },
        "buildType": {
          "description": "Sets buildtype.",
          "settings": {
            "__BuildType": "default"
          }
        },
        "buildArch": {
          "description": "Sets buildarch.",
          "settings": {
            "__BuildArch": "default"
          }
        },
        "buildOS": {
          "description": "Sets the OS to build.",
          "settings": {
            "__BuildOS": "default"
          }
        },
        "testOverlay": {
          "description": "Runs test overlay target.",
          "settings": {
            "CreateTestOverlay": "default"
          }
        },
        "priority": {
          "description": "Sets CLRTestPriorityToBuild property.",
          "settings": {
            "CLRTestPriorityToBuild": "default"
          }
        },
        "skipRestore": {
          "description": "Skips restoring packages during build.",
          "settings": {
            "RestoreDuringBuild": false
          }
        },
        "BuildTarget": {
          "description": "Runs the build target.",
          "settings": {
            "Build": "default"
          }
        }
      },
      "defaultValues": {
        "toolName": "msbuild",
        "settings": {
          "MsBuildLog": "default",
          "MsBuildWrn": "default",
          "MsBuildErr": "default",
          "MsBuildEventLogging": "default",
          "RestoreDefaultOptimizationDataPackage": "false",
          "PortableBuild": "true",
          "UsePartialNGENOptimization": "false"
        }
      }
    },
    "sync": {
      "alias": {
        "p": {
          "description": "Restores all NuGet packages for repository.",
          "settings": {
            "Project": "./build.proj",
            "RestoreDuringBuild": true,
            "RestoreNETCorePlatforms": "default"
          }
        },
        "optdata": {
          "description": "Restores optimization profile data for the repository.",
          "settings": {
            "Project": "./build.proj",
            "RestoreDuringBuild": true,
            "RestoreOptData": "default"
          }
        },
        "ab": {
          "description": "Downloads the latests product packages from Azure. The values for '-AzureAccount' and '-AzureToken' are required",
          "settings": {
            "Project": "./src/syncAzure.proj"
          }
        },
        "n": {
          "description": "Downloads test native binaries. The values for '-AzureAccount', '-AzureToken', and '-Container' are required",
          "settings": {
            "Project": "./src/syncAzure.proj",
            "PublishTestNativeBins": "true"
          }
        },
        "azureToken": {
          "description": "Account token to connect to Azure Blob storage.",
          "settings": {
            "CloudDropAccessToken": "default"
          }
        },
        "azureAccount": {
          "description": "Account name to connect to Azure Blob storage.",
          "settings": {
            "CloudDropAccountName": "default"
          }
        },
        "container": {
          "description": "Container name to download from in Azure Blob storage.",
          "settings": {
            "ContainerName": "default"
          }
        },
        "blobNamePrefix": {
          "description": "Blob Prefix to download from in Azure container.",
          "settings": {
            "__BlobNamePrefix": "default"
          }
        },
        "runtimeId": {
          "description": "Runtime ID of the binaries in the specified container.",
          "settings": {
            "RuntimeId": "default"
          }
        },
        "verbose": {
          "description": "Passes /flp:v=diag to the msbuild command or the value passed by the user.",
          "settings": {
            "MsBuildFileLogging": "/flp:v=diag;LogFile=sync.log"
          }
        },
        "buildMajor": {
          "description": "To download a specific group of product packages, specify build number. The value for -BuildMinor required.",
          "settings": {
            "BuildNumberMajor": "default"
          }
        },
        "buildMinor": {
          "description": "To download a specific group of product packages, specify build number. The value for -BuildMajor required.",
          "settings": {
            "BuildNumberMinor": "default"
          }
        }
      },
      "defaultValues": {
        "toolName": "msbuild",
        "settings": {
          "MsBuildFileLogging": "/flp:v=detailed;LogFile=sync.log"
        }
      }
    },
    "publish-packages": {
      "alias": {
        "azureToken": {
          "description": "Account token to connect to Azure Blob storage.",
          "settings": {
            "CloudDropAccessToken": "default"
          }
        },
        "azureAccount": {
          "description": "Account name to connect to Azure Blob storage.",
          "settings": {
            "CloudDropAccountName": "default"
          }
        },
        "container": {
          "description": "Container name to upload into in Azure Blob storage.",
          "settings": {
            "ContainerName": "default"
          }
        },
        "buildArch": {
          "description": "Specifies architecture to publish, can be x64, x86, arm or arm64",
          "settings": {
            "__BuildArch": "default"
          }
        },
        "buildType": {
          "description": "Specifies configuration to publish, can be Release, Debug or Checked.",
          "settings": {
            "__BuildType": "default"
          }
        },
        "buildOS": {
          "description": "Specifies the OS to publish packages.",
          "settings": {
            "__BuildOS": "default"
          }
        },
        "distroRid": {
          "description": "Specifies distro rid for Unix OS.",
          "settings": {
            "__DistroRid": "default"
          }
        },
        "PublishTestNativeBins": {
          "description": "Publishes test native binaries.",
          "settings": {
            "PublishTestNativeBins": "default"
          }
        },
        "PublishPackages": {
          "description": "Publishes product packages.",
          "settings": {
            "__PublishPackages": "default"
          }
        },
        "PublishSymbols": {
          "description": "Publishes symbol packages.",
          "settings": {
            "__PublishSymbols": "default"
          }
        },
      },
      "defaultValues": {
        "toolName": "msbuild",
        "settings": {
          "__BuildOS": "default",
          "Project": "./src/publish.proj",
          "MsBuildFileLogging": "/flp:v=detailed;LogFile=publish-packages.log"
        }
      }
    },
    "build-packages": {
      "alias": {
        "buildArch": {
          "description": "Specifies architecture to publish, can be x64, x86, arm or arm64",
          "settings": {
            "__BuildArch": "default"
          }
        },
        "buildType": {
          "description": "Specifies configuration to publish, can be Release, Debug or Checked.",
          "settings": {
            "__BuildType": "default"
          }
        },
        "distroRid": {
          "description": "Specifies distro rid for Unix OS.",
          "settings": {
            "__DistroRid": "default"
          }
        }
      },
      "defaultValues": {
        "toolName": "msbuild",
        "settings": {
          "__BuildOS": "default",
          "MsBuildFileLogging": "/flp:v=detailed;Append;LogFile=build-packages.log",
          "MsBuildEventLogging": "default",
          "PortableBuild": "true",
          "Project": "src/.nuget/packages.builds"
        }
      }
    }
  },
  "tools": {
    "msbuild": {
      "osSpecific": {
        "windows": {
          "defaultParameters": "/nologo /verbosity:minimal /clp:Summary /maxcpucount /nodeReuse:false",
          "path": "Tools/msbuild.cmd"
        },
        "unix": {
          "defaultParameters": "/nologo /verbosity:minimal /clp:Summary /maxcpucount",
          "path": "Tools/msbuild.sh"
        }
      },
      "valueTypes": {
        "property": "/p:{name}={value}",
        "target": "/t:{name}",
        "internal": "/{name}"
      }
    },
    "terminal": {
      "run": {
        "windows": "cmd",
        "unix": "sh"
      },
      "valueTypes": {}
    }
  }
}
