<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <!--Leaf project Properties-->
    <PropertyGroup>

        <UserIncludes>
            $(UserIncludes);
            .;
            ..;
            ..\..\inc;
            ..\..\..\inc;
            ..\..\..\fusion\inc
        </UserIncludes>
    
        <DllEntryPoint Condition="'$(FeatureCoreclr)'=='true'">CoreDllMain</DllEntryPoint>
        <DllEntryPoint Condition="'$(FeatureCoreclr)'!='true'">_DllMainCRTStartup</DllEntryPoint>
        <TargetType Condition="'$(TargetType)'==''">DYNLINK</TargetType>
        <LinkSubsystem>windows</LinkSubsystem>

        <NoLinkGdi32>true</NoLinkGdi32>
        <LinkAdditionalOptions>$(LinkAdditionalOptions) /NXCOMPAT</LinkAdditionalOptions>
        <!-- /NOVCFEATURE forces linker to emit old .pdb format. It is required for scan.exe tool to work -->
        <LinkAdditionalOptions Condition="'$(BuildType)' == 'Checked' and '$(UseCoreToolset)' != 'true'">$(LinkAdditionalOptions) /NOVCFEATURE</LinkAdditionalOptions>
        <LinkGenerateManifest Condition="'$(BuildForCoreSystem)' == 'true'">false</LinkGenerateManifest>
        <CDefines>$(CDefines);UNICODE;_UNICODE</CDefines>
        <PCHHeader>stdafx.h</PCHHeader>
        <EnableCxxPCHHeaders>true</EnableCxxPCHHeaders>
        <PCHCompile>..\stdafx.cpp</PCHCompile>
        <LinkWarningsAsErrors>false</LinkWarningsAsErrors>

        <CDefines Condition="'$(_BuildType)' == 'dbg'">$(CDefines);SPECIAL_BUILD</CDefines>      
        <DllDef Condition="'$(TargetType)'=='DYNLINK'">$(IntermediateOutputDirectory)\$(MainClrModuleName).def</DllDef>

        <ExtDelayImpLib>true</ExtDelayImpLib>
        <DoNotAddCrtLibPath>true</DoNotAddCrtLibPath>
        <LinkUseDefaultLib>false</LinkUseDefaultLib>
    </PropertyGroup>
    
    <PropertyGroup Condition="'$(BuildForCoreSystem)' != 'true'">
        <LinkDelayLoad Condition="'$(LinkDelayLoad)'!=''">$(LinkDelayLoad);</LinkDelayLoad>
        <LinkDelayLoad>$(LinkDelayLoad)ole32.dll;OLEAUT32.dll;mpr.dll</LinkDelayLoad>
        <LinkDelayLoad Condition="'$(FeatureCoreclr)'!='true'">$(LinkDelayLoad);urlmon.dll;mscoree.dll;wintrust.dll</LinkDelayLoad>
        <LinkDelayLoad>$(LinkDelayLoad);wtsapi32.dll</LinkDelayLoad>
        <LinkDelayLoad Condition="'$(FeatureCrypto)'=='true'">$(LinkDelayLoad);crypt32.dll</LinkDelayLoad>
        <LinkDelayLoad Condition="'$(FeatureFusion)'=='true'">$(LinkDelayLoad);wininet.dll;cabinet.dll</LinkDelayLoad>
        <LinkDelayLoad Condition="'$(FeatureWatson)'=='true'">$(LinkDelayLoad);version.dll</LinkDelayLoad>
        <LinkDelayLoad Condition="'$(FeatureCominterop)'=='true'">$(LinkDelayLoad);api-ms-win-core-winrt-l1-1-0.dll</LinkDelayLoad>
        <LinkDelayLoad Condition="'$(FeatureCominterop)'=='true'">$(LinkDelayLoad);api-ms-win-core-winrt-string-l1-1-0.dll</LinkDelayLoad>
        <LinkDelayLoad Condition="'$(FeatureCominterop)'=='true'">$(LinkDelayLoad);api-ms-win-ro-typeresolution-l1-1-0.dll</LinkDelayLoad>
        <LinkDelayLoad Condition="'$(FeatureCominterop)'=='true'">$(LinkDelayLoad);api-ms-win-core-winrt-roparameterizediid-l1-1-0.dll</LinkDelayLoad>
        <LinkDelayLoad Condition="'$(FeatureCominterop)'=='true'">$(LinkDelayLoad);bcrypt.dll</LinkDelayLoad>
        <LinkDelayLoad Condition="'$(FeatureFusion)'=='true'">$(LinkDelayLoad);Rstrtmgr.dll</LinkDelayLoad>
        <LinkDelayLoad Condition="'$(FeatureFusion)'=='true'">$(LinkDelayLoad);msi.dll</LinkDelayLoad>
    </PropertyGroup>

    <PropertyGroup Condition="'$(BuildForCoreSystem)' != 'true' and '$(DebugBuild)' == 'true'">
        <MsdisDll Condition="'$(TargetCpu)'=='i386' or '$(TargetCpu)' == 'amd64'">msvcdis$(VC_NONCRT_ProdVerX).dll</MsdisDll>
        <CDefines Condition="'$(TargetCpu)'=='i386' or '$(TargetCpu)' == 'amd64'">$(CDefines);MSDIS_DLL="\"$(MsdisDll)\""</CDefines>
        <LinkDelayLoad Condition="'$(TargetCpu)'=='i386' or '$(TargetCpu)' == 'amd64'">$(LinkDelayLoad);$(MsdisDll)</LinkDelayLoad>
    </PropertyGroup>
  
    <ItemGroup Condition="'$(BuildArchitecture)' == 'arm'">
        <!--Merge GC write barrier descriptors into read-only data section.-->
        <LinkMergeSections Include=".clrwb=.rdata"/>
    </ItemGroup>

    <!--Leaf Project Items-->
    <ItemGroup Condition="'$(BuildForCoreSystem)' == 'true'" >
        <TargetLib Include="$(CoreSystemCrt)" />
        <TargetLib Include="$(SdkLibPath)\uuid.lib" />
        <TargetLib Condition="'$(FeatureCominterop)'=='true'" Include="$(SdkLibPath)\1.0\api-ms-win-core-winrt-l1.lib" />
        <TargetLib Condition="'$(FeatureCominterop)'=='true'" Include="$(SdkLibPath)\1.0\api-ms-win-core-winrt-string-l1.lib" />
        <TargetLib Condition="'$(FeatureCominterop)'=='true'" Include="$(SdkLibPath)\1.0\api-ms-win-ro-typeresolution-l1.lib" />
        <TargetLib Condition="'$(FeatureCominterop)'=='true'" Include="$(SdkLibPath)\api-ms-win-core-winrt-roparameterizediid-l1-1-0.lib" />
    </ItemGroup>
    <ItemGroup Condition="'$(BuildForCoreSystem)' == 'true' and '$(BuildForWindows7)' == 'true'">
      <TargetLib Include="$(SdkLibPath)\bcrypt.lib" />
      <TargetLib Include="$(SdkLibPath)\crypt32.lib" />
      <TargetLib Include="$(SdkLibPath)\cryptspp.lib" />
      <TargetLib Include="$(SdkLibPath)\oleaut32.lib" />
      <TargetLib Include="$(SdkLibPath)\mincore_fw.lib" />
    </ItemGroup>
    <ItemGroup Condition="'$(BuildForCoreSystem)' == 'true' and '$(BuildForWindows7)' != 'true'">
      <TargetLib Include="$(SdkLibPath)\mincore.lib" />
      <TargetLib Include="$(SdkLibPath)\mincore_legacy.lib" />
      <TargetLib Include="$(SdkLibPath)\mincore_private.lib" />
      <TargetLib Include="$(SdkLibPath)\mincore_obsolete.lib" />
    </ItemGroup>

    <ItemGroup>
        <ImportLib Condition="'$(FeatureFusion)'=='true'" Include="$(ExternalAPIsPath)\Whidbey\lib\$(BuildArchitecture)\isolation_whidbey$(BuildSuffix).lib" />
        <ImportLib Condition="'$(UseMsvcrt)'!='true' and '$(DebugBuild)' == 'true' and '$(BuildForCoreSystem)' != 'true'" Include="$(CrtLibPath)\libcpmtd.lib" />
    </ItemGroup>

    <ItemGroup Condition="'$(FeatureMergeJitAndEngine)' == 'true'">
        <ImportLib Include="$(ClrLibPath)\clrjit.lib" />

        <!-- We build RyuJIT only for amd64 and arm64, and use JIT32 for ARM and x86 -->
        <ProjectReference Condition="'$(BuildArchitecture)' == 'amd64' or  '$(BuildArchitecture)' == 'arm64'" Include="$(ClrSrcDirectory)jit\dll\jit.nativeproj" />
        <ProjectReference Condition="'$(BuildArchitecture)' != 'amd64' and '$(BuildArchitecture)' != 'arm64'" Include="$(ClrSrcDirectory)jit32\dll\jit.nativeproj" />
    </ItemGroup>

    <ItemGroup>
        <ImportLib Include="$(ClrLibPath)\cee_wks.lib">
            <ProjectReference>$(ClrSrcDirectory)vm\wks\wks.nativeproj</ProjectReference>
        </ImportLib>
        <LinkPreCrtLibs Include="$(ClrLibPath)\cee_wks.lib" />

        <ImportLib Include="$(ClrLibPath)\utilcode.lib">
            <ProjectReference>$(ClrSrcDirectory)utilcode\dyncrt\dyncrt.nativeproj</ProjectReference>
        </ImportLib>
        <LinkPreCrtLibs Include="$(ClrLibPath)\utilcode.lib" />

        <ImportLib Include="$(ClrLibPath)\ildbsymlib.lib">
            <ProjectReference>$(ClrSrcDirectory)debug\ildbsymlib\HostLocal\ildbsymlib.nativeproj</ProjectReference>
        </ImportLib>
        <ImportLib Condition="'$(FeatureFusion)'=='true'" Include="$(ClrLibPath)\fusionasmc.lib">
            <ProjectReference>$(ClrSrcDirectory)fusion\asmcache\asmcache.nativeproj</ProjectReference>
        </ImportLib>
        <ImportLib Condition="'$(FeatureFusion)'=='true'" Include="$(ClrLibPath)\fusionbind.lib">
            <ProjectReference>$(ClrSrcDirectory)fusion\binder\binder.nativeproj</ProjectReference>
        </ImportLib>
        <ImportLib Condition="'$(FeatureFusion)'=='true'" Include="$(ClrLibPath)\fusiondl.lib">
            <ProjectReference>$(ClrSrcDirectory)fusion\download\download.nativeproj</ProjectReference>
        </ImportLib>
        <ImportLib Condition="'$(FeatureFusion)'=='true'" Include="$(ClrLibPath)\fusionmparse.lib">
            <ProjectReference>$(ClrSrcDirectory)fusion\mparse\mparse.nativeproj</ProjectReference>
        </ImportLib>
        <ImportLib Condition="'$(FeatureFusion)'=='true'" Include="$(ClrLibPath)\fusionutils.lib">
            <ProjectReference>$(ClrSrcDirectory)fusion\utils\utils.nativeproj</ProjectReference>
        </ImportLib>
        <ImportLib Condition="'$(FeatureFusion)'=='true'" Include="$(ClrLibPath)\fusioninterface.lib">
            <ProjectReference>$(ClrSrcDirectory)fusion\interface\interface.nativeproj</ProjectReference>
        </ImportLib>
        <ImportLib Include="$(ClrLibPath)\strongname_wks.lib">
            <ProjectReference>$(ClrSrcDirectory)strongname\api\wks\strongname_wks.nativeproj</ProjectReference>
        </ImportLib>
        <ImportLib Condition="'$(FeatureFusion)'=='true'" Include="$(ClrLibPath)\usagelog.lib">
            <ProjectReference>$(ClrSrcDirectory)usagelog\usagelog.nativeproj</ProjectReference>
        </ImportLib>
        <ImportLib Condition="'$(FeatureFusion)'=='true'" Include="$(ClrLibPath)\nativebinder.lib">
            <ProjectReference>$(ClrSrcDirectory)nativebinder\nativebinder.nativeproj</ProjectReference>
        </ImportLib>
        <ImportLib Condition="'$(FeatureFusion)'=='true'" Include="$(ClrLibPath)\xmlparser.lib">
            <ProjectReference>$(ClrSrcDirectory)xmlparser\xmlparser.nativeproj</ProjectReference>
        </ImportLib>
        <ImportLib Condition="'$(FeatureNativeImageGeneration)'=='true'" Include="$(ClrLibPath)\corzap.lib">
            <ProjectReference>$(ClrSrcDirectory)zap\wks\zap.nativeproj</ProjectReference>
        </ImportLib>
        <ImportLib Condition="'$(PerfcountersSupportedBuild)'=='true'" Include="$(ClrLibPath)\perfcounters.lib">
            <ProjectReference>$(ClrSrcDirectory)profile\counters\counters.nativeproj</ProjectReference>
        </ImportLib>
        <ImportLib Condition="'$(DebuggingSupportedBuild)'=='true'" Include="$(ClrLibPath)\cordbee_wks.lib">
            <ProjectReference>$(ClrSrcDirectory)debug\ee\wks\wks.nativeproj</ProjectReference>
        </ImportLib>
        <ImportLib Condition="'$(FeatureDbgipcTransportVM)' == 'true'" Include="$(ClrLibPath)\dbgrawconn.lib">
            <ProjectReference>$(ClrSrcDirectory)debug\dbgrawconn\dbgrawconn.nativeproj</ProjectReference>
        </ImportLib>
        <TargetLib Include="@(ImportLib)"/>
    </ItemGroup>

    <ItemGroup>
        <TargetLib Condition="'$(TargetCpu)'=='amd64' or '$(TargetCpu)' == 'arm' or '$(TargetCpu)' == 'arm64'" Include="$(ClrLibPath)\gcinfo.lib">
            <ProjectReference>$(ClrSrcDirectory)gcinfo\lib\gcinfo.nativeproj</ProjectReference>
        </TargetLib>
        <TargetLib Condition="'$(FeatureIpcman)'=='true'" Include="$(ClrLibPath)\ipcmanager.lib">
            <ProjectReference>$(ClrSrcDirectory)ipcman\ipcman\ipcman.nativeproj</ProjectReference>
        </TargetLib>
        <TargetLib Include="$(ClrLibPath)\MDCompiler_wks.lib">
            <ProjectReference>$(ClrSrcDirectory)md\compiler\wks\mdcompiler_wks.nativeproj</ProjectReference>
        </TargetLib>
        <TargetLib Include="$(ClrLibPath)\MDRuntime.lib">
            <ProjectReference>$(ClrSrcDirectory)md\runtime\wks\mdruntime.nativeproj</ProjectReference>
        </TargetLib>
        <TargetLib Include="$(ClrLibPath)\MDRuntimeRW.lib">
            <ProjectReference>$(ClrSrcDirectory)md\enc\wks\mdruntimerw.nativeproj</ProjectReference>
        </TargetLib>
        <TargetLib Include="$(ClrLibPath)\MDWinMD_wks.lib">
            <ProjectReference>$(ClrSrcDirectory)md\winmd\wks\MDWinMD_wks.nativeproj</ProjectReference>
        </TargetLib>
        <TargetLib Include="$(ClrLibPath)\MDHotData.lib">
            <ProjectReference>$(ClrSrcDirectory)md\hotdata\full\mdhotdata.nativeproj</ProjectReference>
        </TargetLib>
        <TargetLib Include="$(ClrLibPath)\comfloat_wks.lib">
            <ProjectReference>$(ClrSrcDirectory)classlibnative\float\float.nativeproj</ProjectReference>
        </TargetLib>
        <TargetLib Include="$(ClrLibPath)\comnls_wks.lib">
            <ProjectReference>$(ClrSrcDirectory)classlibnative\nls\nls.nativeproj</ProjectReference>
        </TargetLib>
        <TargetLib Include="$(ClrLibPath)\comcrypt_wks.lib">
            <ProjectReference>$(ClrSrcDirectory)classlibnative\cryptography\cryptography.nativeproj</ProjectReference>
        </TargetLib>
        <TargetLib Include="$(ClrLibPath)\bcltype.lib">
            <ProjectReference>$(ClrSrcDirectory)classlibnative\bcltype\bcltype.nativeproj</ProjectReference>
        </TargetLib>
        <TargetLib Condition="'$(FeatureRemoting)'=='true'" Include="$(ClrLibPath)\remoting.lib">
            <ProjectReference>$(ClrSrcDirectory)classlibnative\remoting\remoting.nativeproj</ProjectReference>
        </TargetLib>
        <TargetLib Include="$(ClrLibPath)\ceefgen.lib">
            <ProjectReference>$(ClrSrcDirectory)md\ceefilegen\ceefgen.nativeproj</ProjectReference>
        </TargetLib>
        <TargetLib Condition="'$(FeatureFusion)'!='true'" Include="$(ClrLibPath)\v3binder.lib">
            <ProjectReference>$(ClrSrcDirectory)binder\v3binder\v3binder.nativeproj</ProjectReference>
        </TargetLib>
        <TargetLib Condition="'$(FeatureCoreclr)'!='true'" Include="$(ClrLibPath)\shimload.lib">
            <ProjectReference>$(ClrSrcDirectory)shimload\shimload.nativeproj</ProjectReference>
        </TargetLib>
        <TargetLib Condition="'$(FeatureCoreClr)'!='true'" Include="$(ClrLibPath)\delayimp.lib">
            <ProjectReference>$(ClrSrcDirectory)delayimp\delayimp.nativeproj</ProjectReference>
        </TargetLib>
    </ItemGroup>

    <ItemGroup>
        <TargetLib Include="$(ClrLibPath)\corguids.lib" />
        <TargetLib Condition="'$(FeatureCoreclr)'!='true'" Include="$(SdkLibPath)\mscoree.lib" />
    </ItemGroup>

    <ItemGroup Condition="'$(BuildForCoreSystem)' != 'true'" >
        <TargetLib Include="$(VCToolsLibPath)\diaguids.lib" />
        <TargetLib Include="$(SdkLibPath)\ntdll.lib" />
        <TargetLib Include="$(SdkLibPath)\kernel32.lib" />
        <TargetLib Include="$(SdkLibPath)\user32.lib" />
        <TargetLib Include="$(SdkLibPath)\advapi32.lib" />
        <TargetLib Include="$(SdkLibPath)\ole32.lib" />
        <TargetLib Include="$(SdkLibPath)\uuid.lib" />
        <TargetLib Include="$(SdkLibPath)\oleaut32.lib" />
        <TargetLib Include="$(SdkLibPath)\wintrust.lib" />
        <TargetLib Include="$(SdkLibPath)\shlwapi.lib" />
        <TargetLib Condition="'$(FeatureCrypto)'=='true' or '$(FeatureX509)'=='true'" Include="$(SdkLibPath)\crypt32.lib" />
        <TargetLib Condition="'$(FeatureCominterop)'=='true'" Include="$(SdkLibPath)\urlmon.lib" />
        <TargetLib Condition="'$(FeatureCominterop)'=='true'" Include="$(SdkLibPath)\bcrypt.lib" />
        <TargetLib Condition="'$(FeatureCominterop)'=='true'" Include="$(SdkLibPath)\RuntimeObject.lib" />
        <TargetLib Condition="'$(FeatureFusion)'=='true'" Include="$(SdkLibPath)\cabinet.lib" />
        <TargetLib Condition="'$(FeatureFusion)'=='true'" Include="$(SdkLibPath)\wininet.lib" />
        <TargetLib Include="$(SdkLibPath)\mpr.lib" />
        <TargetLib Include="$(SdkLibPath)\version.lib" />
        <TargetLib Include="$(SdkLibPath)\aux_ulib.lib" />
        <TargetLib Include="$(SdkLibPath)\wtsapi32.lib" />
        <TargetLib Condition="'$(FeatureFusion)'=='true'" Include="$(SdkLibPath)\Rstrtmgr.lib" />
        <TargetLib Condition="'$(FeatureFusion)'=='true'" Include="$(SdkLibPath)\msi.lib" />
        <TargetLib Condition="'$(FeatureDbgipcTransportVM)' == 'true'" Include="$(SdkLibPath)\ws2_32.lib" />
    </ItemGroup>

    <ItemGroup>
        <TargetLib Condition="('$(TargetCpu)'=='i386' or '$(TargetCpu)' == 'amd64') and '$(BuildForCoreSystem)' != 'true'" Include="$(VCToolsLibPath)\msvcdis.lib" />
    </ItemGroup>

    <ItemGroup>
        <RCResourceFile Include="..\Native.rc" />
        <CppPreprocess Include="..\mscorwks_ntdef.src">
            <Defines>@(CommonPreprocessDefines);$(CDefines);$(TargetDefines)</Defines>
            <OutputFile>$(DllDef)</OutputFile>
            <AdditionalOptions>/TC</AdditionalOptions>
        </CppPreprocess>
    </ItemGroup>

    <ItemGroup>
        <CppCompile Include="..\MSCoree.cpp" />
    </ItemGroup>

    <ItemGroup>
        <CppCompile Include="..\ComCallUnmarshal.cpp" />
        <CppCompile Include="..\DelayLoad.cpp" />
    </ItemGroup>

    <ItemGroup Condition="'$(FeatureCoreclr)'=='true'">
        <CppCompile Include="..\unixinterface.cpp" />
    </ItemGroup>
</Project>
