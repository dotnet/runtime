<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <Win32WinNt>0x0602</Win32WinNt>
  </PropertyGroup>

  <ItemGroup>
    <CppCompile Include="$(VmSourcesDir)\class.cpp" />
    <CppCompile Include="$(VmSourcesDir)\AppDomain.cpp" />
    <CppCompile Include="$(VmSourcesDir)\AppDomainHelper.cpp" />
    <CppCompile Include="$(VmSourcesDir)\AppDomainNative.cpp" />
    <CppCompile Include="$(VmSourcesDir)\appdomainstack.cpp" />
    <CppCompile Include="$(VmSourcesDir)\AppXUtil.cpp" Condition="'$(FeatureAppX)' == 'true'" />
    <CppCompile Include="$(VmSourcesDir)\aptca.cpp" Condition="'$(FeatureAptca)' == 'true'" />
    <CppCompile Include="$(VmSourcesDir)\array.cpp" />
    <CppCompile Include="$(VmSourcesDir)\Assembly.cpp" />
    <CppCompile Include="$(VmSourcesDir)\AssemblyName.cpp" />
    <CppCompile Include="$(VmSourcesDir)\AssemblyNative.cpp" />
    <CppCompile Include="$(VmSourcesDir)\AssemblySpec.cpp" />
    <CppCompile Include="$(VmSourcesDir)\AssemblySink.cpp" />
    <CppCompile Include="$(VmSourcesDir)\binder.cpp" />
    <CppCompile Include="$(VmSourcesDir)\cachelinealloc.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ceeload.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ceemain.cpp" />
    <CppCompile Include="$(VmSourcesDir)\certificatecache.cpp" />
    <CppCompile Include="$(VmSourcesDir)\classhash.cpp" />
    <CppCompile Include="$(VmSourcesDir)\clrex.cpp" />
    <CppCompile Include="$(VmSourcesDir)\CLRPrivBinderUtil.cpp" />
    <CppCompile Include="$(VmSourcesDir)\CLRPrivBinderAppX.cpp" Condition="'$(FeatureAppXBinder)' == 'true'" />
    <CppCompile Include="$(VmSourcesDir)\CLRPrivBinderFusion.cpp" Condition="'$(FeatureFusion)' == 'true'" />
    <CppCompile Include="$(VmSourcesDir)\CLRPrivBinderLoadFile.cpp" Condition="'$(FeatureCoreclr)' != 'true'" />
    <CppCompile Include="$(VmSourcesDir)\CLRPrivBinderReflectionOnlyWinRT.cpp" Condition="'$(FeatureCoreclr)' != 'true'" />
    <CppCompile Include="$(VmSourcesDir)\CLRPrivBinderWinRT.cpp" Condition="'$(FeatureCominterop)' == 'true'" />
    <CppCompile Include="$(VmSourcesDir)\CLRPrivTypeCacheWinRT.cpp" Condition="'$(FeatureCominterop)' == 'true'" />
    <CppCompile Include="$(VmSourcesDir)\CLRPrivTypeCacheReflectionOnlyWinRT.cpp" Condition="'$(FeatureCoreclr)' != 'true'" />
    <CppCompile Include="$(VmSourcesDir)\clsload.cpp" />
    <CppCompile Include="$(VmSourcesDir)\CLRVarArgs.cpp" />
    <CppCompile Include="$(VmSourcesDir)\codeman.cpp" />
    <CppCompile Include="$(VmSourcesDir)\compile.cpp" Condition="'$(FeatureNativeImageGeneration)'=='true'" />
    <CppCompile Include="$(VmSourcesDir)\ConfigHelper.cpp" Condition="'$(FeatureCoreclr)' != 'true'" />
    <CppCompile Include="$(VmSourcesDir)\ConstrainedExecutionRegion.cpp" />
    <CppCompile Include="$(VmSourcesDir)\COMDateTime.cpp" />
    <CppCompile Include="$(VmSourcesDir)\COMDelegate.cpp" />
    <CppCompile Include="$(VmSourcesDir)\COMDynamic.cpp" />
    <CppCompile Include="$(VmSourcesDir)\COMIsolatedStorage.cpp" />
    <CppCompile Include="$(VmSourcesDir)\COMMemoryFailPoint.cpp" />
    <CppCompile Include="$(VmSourcesDir)\COMMethodRental.cpp" />
    <CppCompile Include="$(VmSourcesDir)\Domainfile.cpp" />
    <CppCompile Include="$(VmSourcesDir)\testhookmgr.cpp" />
    <CppCompile Include="$(VmSourcesDir)\BaseAssemblySpec.cpp" />
    <CppCompile Include="$(VmSourcesDir)\corebindresult.cpp" />
    <CppCompile Include="$(VmSourcesDir)\coreassemblyspec.cpp" />
    <CppCompile Include="$(VmSourcesDir)\COMDependentHandle.cpp" />
    <CppCompile Include="$(VmSourcesDir)\COMModule.cpp" />
    <CppCompile Include="$(VmSourcesDir)\CompactLayoutWriter.cpp" Condition="'$(MDILGenerator)' == 'true'"  />
    <CppCompile Include="$(VmSourcesDir)\MarshalNative.cpp" />
    <CppCompile Include="$(VmSourcesDir)\CompatibilitySwitch.cpp"/>
    <CppCompile Include="$(VmSourcesDir)\COMSynchronizable.cpp" />
    <CppCompile Include="$(VmSourcesDir)\COMThreadPool.cpp" />
    <CppCompile Include="$(VmSourcesDir)\COMUtilNative.cpp" />
    <CppCompile Include="$(VmSourcesDir)\COMWaitHandle.cpp" />
    <CppCompile Include="$(VmSourcesDir)\CorHost.cpp" />
    <CppCompile Include="$(VmSourcesDir)\CustomMarshalerInfo.cpp" />
    <CppCompile Include="$(VmSourcesDir)\CrossDomainCalls.cpp" />
    <CppCompile Include="$(VmSourcesDir)\callhelpers.cpp" />
    <CppCompile Include="$(VmSourcesDir)\crst.cpp" />
    <CppCompile Include="$(VmSourcesDir)\contexts.cpp" />
    <CppCompile Include="$(VmSourcesDir)\CustomAttribute.cpp" />
    <CppCompile Include="$(VmSourcesDir)\dataimage.cpp" Condition="'$(FeatureNativeImageGeneration)'=='true'"/>
    <CppCompile Include="$(VmSourcesDir)\debugHelp.cpp" />
    <CppCompile Include="$(VmSourcesDir)\decodeMD.cpp" />
    <CppCompile Include="$(VmSourcesDir)\DebugDebugger.cpp" />
    <CppCompile Include="$(VmSourcesDir)\DebugInfoStore.cpp" />
    <CppCompile Include="$(VmSourcesDir)\DynamicMethod.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ecall.cpp" />
    <CppCompile Include="$(VmSourcesDir)\eeconfig.cpp" />
    <CppCompile Include="$(VmSourcesDir)\AssemblyNamesConfigFactory.cpp" Condition="'$(FeatureCoreclr)' != 'true'"/>
    <CppCompile Include="$(VmSourcesDir)\ngenoptout.cpp" Condition="'$(FeatureCoreclr)' != 'true'"/>
    <CppCompile Include="$(VmSourcesDir)\eeconfigfactory.cpp" Condition="'$(FeatureCoreclr)' != 'true'"/>
    <CppCompile Include="$(VmSourcesDir)\eecontract.cpp" />
    <CppCompile Include="$(VmSourcesDir)\eedbginterfaceimpl.cpp" />
    <CppCompile Include="$(VmSourcesDir)\eehash.cpp" />
    <CppCompile Include="$(VmSourcesDir)\EEMessageBox.cpp" />
    <CppCompile Include="$(VmSourcesDir)\EEPolicy.cpp" />
    <CppCompile Include="$(VmSourcesDir)\EEToProfInterfaceImpl.cpp" />
    <CppCompile Include="$(VmSourcesDir)\EETwain.cpp" />
    <CppCompile Include="$(VmSourcesDir)\eventreporter.cpp" />
    <CppCompile Include="$(VmSourcesDir)\EventStore.cpp" />
    <CppCompile Include="$(VmSourcesDir)\eventtrace.cpp" />
    <CppCompile Include="$(VmSourcesDir)\excep.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ExState.cpp" />
    <CppCompile Include="$(VmSourcesDir)\fcall.cpp" />
    <CppCompile Include="$(VmSourcesDir)\Field.cpp" />
    <CppCompile Include="$(VmSourcesDir)\finalizerthread.cpp" />
    <CppCompile Include="$(VmSourcesDir)\formattype.cpp" />
    <CppCompile Include="$(VmSourcesDir)\fptrstubs.cpp" />
    <CppCompile Include="$(VmSourcesDir)\frames.cpp" />
    <CppCompile Include="$(VmSourcesDir)\FrameworkExceptionLoader.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ThreadPoolRequest.cpp" />
    <CppCompile Include="$(VmSourcesDir)\TypeEquivalenceHash.cpp" />
    <CppCompile Include="$(VmSourcesDir)\fusioninit.cpp" Condition="'$(FeatureFusion)' == 'true'"/>
    <CppCompile Include="$(VmSourcesDir)\FusionSink.cpp" Condition="'$(FeatureFusion)' == 'true'"/>
    <CppCompile Include="$(VmSourcesDir)\FusionBind.cpp" Condition="'$(FeatureFusion)' == 'true'"/>
    <CppCompile Include="$(VmSourcesDir)\GCDecode.cpp" />
    <CppCompile Include="$(VmSourcesDir)\gcenv.ee.cpp" />
    <CppCompile Include="$(VmSourcesDir)\gcenv.os.cpp" />
    <CppCompile Include="$(VmSourcesDir)\gchelpers.cpp" />
    <CppCompile Include="$(VmSourcesDir)\gchost.cpp" />
    <CppCompile Include="$(VmSourcesDir)\genericdict.cpp" />
    <CppCompile Include="$(VmSourcesDir)\generics.cpp" />
    <CppCompile Include="$(VmSourcesDir)\genmeth.cpp" />
    <CppCompile Include="$(VmSourcesDir)\hash.cpp" />
    <CppCompile Include="$(VmSourcesDir)\hillclimbing.cpp" />
    <CppCompile Include="$(VmSourcesDir)\hosting.cpp" />
    <CppCompile Include="$(VmSourcesDir)\HostExecutionContext.cpp" />
    <CppCompile Include="$(VmSourcesDir)\IBCLogger.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ILMarshalers.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ILStubCache.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ILStubResolver.cpp" />
    <CppCompile Include="$(VmSourcesDir)\instmethhash.cpp" />
    <CppCompile Include="$(VmSourcesDir)\InteropConverter.cpp" />
    <CppCompile Include="$(VmSourcesDir)\interoputil.cpp" />
    <CppCompile Include="$(VmSourcesDir)\interpreter.cpp" />
    <CppCompile Include="$(VmSourcesDir)\inlinetracking.cpp" />
    <CppCompile Include="$(VmSourcesDir)\WinRTTypeNameConverter.cpp" />
    <CppCompile Include="$(VmSourcesDir)\InvokeUtil.cpp" />
    <CppCompile Include="$(VmSourcesDir)\contractImpl.cpp" />
    <CppCompile Include="$(VmSourcesDir)\jithelpers.cpp" />
    <CppCompile Include="$(VmSourcesDir)\JITInterface.cpp" />
    <CppCompile Include="$(VmSourcesDir)\LoaderAllocator.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ListLock.cpp" />
    <CppCompile Include="$(VmSourcesDir)\marvin32.cpp" Condition="'$(FeatureRandomizedStringHashing)' == 'true'"/>
    <CppCompile Include="$(VmSourcesDir)\memberload.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ManagedMdImport.cpp" />
    <CppCompile Include="$(VmSourcesDir)\message.cpp" />
    <CppCompile Include="$(VmSourcesDir)\Method.cpp" />
    <CppCompile Include="$(VmSourcesDir)\MethodIter.cpp" />
    <CppCompile Include="$(VmSourcesDir)\MethodImpl.cpp" />
    <CppCompile Include="$(VmSourcesDir)\MethodTable.cpp" />
    <CppCompile Include="$(VmSourcesDir)\methodtablebuilder.cpp" />
    <CppCompile Include="$(VmSourcesDir)\mixedmode.cpp" Condition="'$(FeatureMixedMode)' == 'true'" />
    <CppCompile Include="$(VmSourcesDir)\mscorlib.cpp">
        <DisablePrecompiledHeaders>true</DisablePrecompiledHeaders>
    </CppCompile>
    <CppCompile Include="$(VmSourcesDir)\stubcache.cpp" />
    <CppCompile Include="$(VmSourcesDir)\mlinfo.cpp" />
    <CppCompile Include="$(VmSourcesDir)\NativeOverlapped.cpp" />
    <CppCompile Include="$(VmSourcesDir)\NewCompressedStack.cpp" Condition="'$(FeatureCompressedstack)' == 'true'" />
    <CppCompile Include="$(VmSourcesDir)\DllImport.cpp" />
    <CppCompile Include="$(VmSourcesDir)\DllImportCallback.cpp" />
    <CppCompile Include="$(VmSourcesDir)\FieldMarshaler.cpp" />
    <CppCompile Include="$(VmSourcesDir)\object.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ObjectClone.cpp" Condition="'$(FeatureRemoting)' == 'true'" />
    <CppCompile Include="$(VmSourcesDir)\ObjectList.cpp" />
    <CppCompile Include="$(VmSourcesDir)\OleVariant.cpp" />
    <CppCompile Include="$(VmSourcesDir)\PEFile.cpp" />
    <CppCompile Include="$(VmSourcesDir)\PEFingerprint.cpp" />
    <CppCompile Include="$(VmSourcesDir)\PEImage.cpp" />
    <CppCompile Include="$(VmSourcesDir)\PEImageLayout.cpp" />
    <CppCompile Include="$(VmSourcesDir)\pendingload.cpp" />
    <CppCompile Include="$(VmSourcesDir)\PerfDefaults.cpp" />
    <CppCompile Include="$(VmSourcesDir)\Prestub.cpp" />
    <CppCompile Include="$(VmSourcesDir)\Precode.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ProfilerMetadataEmitValidator.cpp"/>
    <CppCompile Include="$(VmSourcesDir)\MulticoreJIT.cpp" Condition="'$(FeatureMulticoreJIT)' == 'true'" />
    <CppCompile Include="$(VmSourcesDir)\MulticoreJITPlayer.cpp" Condition="'$(FeatureMulticoreJIT)' == 'true'" />
    <CppCompile Include="$(VmSourcesDir)\ProfilingEnumerators.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ProfilingHelper.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ProfToEEInterfaceImpl.cpp" />
    <CppCompile Include="$(VmSourcesDir)\QCall.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ReadyToRunInfo.cpp" Condition="'$(FeatureReadyToRun)' == 'true'" />
    <CppCompile Include="$(VmSourcesDir)\ReflectClassWriter.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ReflectionInvocation.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ReJit.cpp" />
    <CppCompile Include="$(VmSourcesDir)\remoting.cpp" Condition="'$(FeatureRemoting)' == 'true'" />
    <CppCompile Include="$(VmSourcesDir)\RtlFunctions.cpp" />
    <CppCompile Include="$(VmSourcesDir)\RuntimeHandles.cpp" />
    <CppCompile Include="$(VmSourcesDir)\rwlock.cpp" />
    <CppCompile Include="$(VmSourcesDir)\SafeHandle.cpp" />
    <CppCompile Include="$(VmSourcesDir)\security.cpp" />
    <CppCompile Include="$(VmSourcesDir)\SecurityAttributes.cpp" />
    <CppCompile Include="$(VmSourcesDir)\SecurityConfig.cpp" />
    <CppCompile Include="$(VmSourcesDir)\SecurityDeclarative.cpp" />
    <CppCompile Include="$(VmSourcesDir)\SecurityDeclarativeCache.cpp" />
    <CppCompile Include="$(VmSourcesDir)\SecurityDescriptor.cpp" />
    <CppCompile Include="$(VmSourcesDir)\SecurityHostProtection.cpp" />
    <CppCompile Include="$(VmSourcesDir)\SecurityDescriptorAppdomain.cpp" />
    <CppCompile Include="$(VmSourcesDir)\SecurityDescriptorAssembly.cpp" />
    <CppCompile Include="$(VmSourcesDir)\securitymeta.cpp" />
    <CppCompile Include="$(VmSourcesDir)\SecurityImperative.cpp" Condition="'$(FeatureCoreclr)' != 'true'" />
    <CppCompile Include="$(VmSourcesDir)\SecurityPolicy.cpp" />
    <CppCompile Include="$(VmSourcesDir)\SecurityStackWalk.cpp" Condition="'$(FeatureCasPolicy)' == 'true'" />
    <CppCompile Include="$(VmSourcesDir)\SecurityTransparentAssembly.cpp" />
    <CppCompile Include="$(VmSourcesDir)\siginfo.cpp" />
    <CppCompile Include="$(VmSourcesDir)\SigFormat.cpp" />
    <CppCompile Include="$(VmSourcesDir)\SimpleRWLock.cpp" />
    <CppCompile Include="$(VmSourcesDir)\SourceLine.cpp" />
    <CppCompile Include="$(VmSourcesDir)\spinlock.cpp" />
    <CppCompile Include="$(VmSourcesDir)\StackingAllocator.cpp" />
    <CppCompile Include="$(VmSourcesDir)\stacksampler.cpp" />
    <CppCompile Include="$(VmSourcesDir)\stackwalk.cpp" />
    <CppCompile Include="$(VmSourcesDir)\StackBuilderSink.cpp" Condition="'$(FeatureRemoting)' == 'true'" />
    <CppCompile Include="$(VmSourcesDir)\StackCompressor.cpp" Condition="'$(FeatureCompressedstack)' == 'true'" />
    <CppCompile Include="$(VmSourcesDir)\stublink.cpp" />
    <CppCompile Include="$(VmSourcesDir)\StringLiteralMap.cpp" />
    <CppCompile Include="$(VmSourcesDir)\stubmgr.cpp" />
    <CppCompile Include="$(VmSourcesDir)\stubgen.cpp" />
    <CppCompile Include="$(VmSourcesDir)\stubhelpers.cpp" />
    <CppCompile Include="$(VmSourcesDir)\syncblk.cpp" />
    <CppCompile Include="$(VmSourcesDir)\synch.cpp" />
    <CppCompile Include="$(VmSourcesDir)\SyncClean.cpp" />
    <CppCompile Include="$(VmSourcesDir)\synchronizationcontextnative.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ThreadDebugBlockingInfo.cpp" />
    <CppCompile Include="$(VmSourcesDir)\threads.cpp" />
    <CppCompile Include="$(VmSourcesDir)\threadsuspend.cpp" />
    <CppCompile Include="$(VmSourcesDir)\threadstatics.cpp" />
    <CppCompile Include="$(VmSourcesDir)\typectxt.cpp" />
    <CppCompile Include="$(VmSourcesDir)\typedesc.cpp" />
    <CppCompile Include="$(VmSourcesDir)\typehandle.cpp" />
    <CppCompile Include="$(VmSourcesDir)\typehash.cpp" />
    <CppCompile Include="$(VmSourcesDir)\typeparse.cpp" />
    <CppCompile Include="$(VmSourcesDir)\typestring.cpp" />
    <CppCompile Include="$(VmSourcesDir)\umthunkhash.cpp" Condition="'$(FeatureMixedMode)' == 'true'"/>
    <CppCompile Include="$(VmSourcesDir)\util.cpp" />
    <CppCompile Include="$(VmSourcesDir)\validator.cpp" Condition="'$(FeatureCoreclr)' != 'true'"/>
    <CppCompile Include="$(VmSourcesDir)\vars.cpp" />
    <CppCompile Include="$(VmSourcesDir)\verifier.cpp" />
    <CppCompile Include="$(VmSourcesDir)\VirtualCallStub.cpp" />
    <CppCompile Include="$(VmSourcesDir)\WeakReferenceNative.cpp" />
    <CppCompile Include="$(VmSourcesDir)\Win32Threadpool.cpp" />
    <CppCompile Include="$(VmSourcesDir)\zapsig.cpp" />
  </ItemGroup>

  <ItemGroup>
    <CppCompile Include="$(ClrSrcDirectory)\gc\gccommon.cpp" />
    <CppCompile Include="$(ClrSrcDirectory)\gc\gcEEsvr.cpp" />
    <CppCompile Include="$(ClrSrcDirectory)\gc\gcEEwks.cpp" />
    <CppCompile Include="$(ClrSrcDirectory)\gc\gcsvr.cpp" />
    <CppCompile Include="$(ClrSrcDirectory)\gc\gcwks.cpp" />
    <CppCompile Include="$(ClrSrcDirectory)\gc\gcscan.cpp" />
    <CppCompile Include="$(ClrSrcDirectory)\gc\handletable.cpp" />
    <CppCompile Include="$(ClrSrcDirectory)\gc\handletableCache.cpp" />
    <CppCompile Include="$(ClrSrcDirectory)\gc\handletableCore.cpp" />
    <CppCompile Include="$(ClrSrcDirectory)\gc\handletableScan.cpp" />
    <CppCompile Include="$(ClrSrcDirectory)\gc\objecthandle.cpp" />
  </ItemGroup>

  <!-- SOURCES_NONPAL -->
  <ItemGroup>
    <CppCompile Include="$(VmSourcesDir)\AssemblyNativeResource.cpp" />
    <CppCompile Include="$(VmSourcesDir)\coverage.cpp" />
    <CppCompile Include="$(VmSourcesDir)\DbgGcInfoDecoder.cpp" />
    <CppCompile Include="$(VmSourcesDir)\dwreport.cpp" />
    <CppCompile Include="$(VmSourcesDir)\EnCEE.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ExceptionHandling.cpp" />
    <CppCompile Include="$(VmSourcesDir)\gcCover.cpp" />
    <CppCompile Include="$(VmSourcesDir)\GcInfoDecoder.cpp" />
    <CppCompile Include="$(VmSourcesDir)\mda.cpp" Condition="'$(FeatureMdaSupported)' == 'true'"/>
    <CppCompile Include="$(VmSourcesDir)\mdaassistants.cpp" Condition="'$(FeatureMdaSupported)' == 'true'"/>
    <CppCompile Include="$(VmSourcesDir)\mdadac.cpp" Condition="'$(FeatureMdaSupported)' == 'true'"/>
    <CppCompile Include="$(VmSourcesDir)\ProfAttach.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ProfAttachClient.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ProfAttachServer.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ProfDetach.cpp" />
    <CppCompile Include="$(VmSourcesDir)\SecurityPrincipal.cpp" />
    <CppCompile Include="$(VmSourcesDir)\Crypto\SHA1.cpp" Condition="'$(FeatureCoreclr)' != 'true'"/>
    <CppCompile Include="$(VmSourcesDir)\SHA1.cpp" Condition="'$(FeatureCoreclr)' == 'true'"/>
    <CppCompile Include="$(VmSourcesDir)\StackProbe.cpp" Condition="'$(FeatureStackProbe)' == 'true'" />
  </ItemGroup>
  <ItemGroup Condition="'$(FeatureCominterop)' == 'true'">
    <CppCompile Include="$(VmSourcesDir)\classcompat.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ClassFactory.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ComCache.cpp" />
    <CppCompile Include="$(VmSourcesDir)\COMtoCLRCall.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ComCallableWrapper.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ComConnectionPoints.cpp" />
    <CppCompile Include="$(VmSourcesDir)\COMInterfaceMarshaler.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ComMTMemberInfoMap.cpp" />
    <CppCompile Include="$(VmSourcesDir)\CLRtoCOMCall.cpp" />
    <CppCompile Include="$(VmSourcesDir)\RuntimeCallableWrapper.cpp" />
    <CppCompile Include="$(VmSourcesDir)\COMTypeLibConverter.cpp" Condition="'$(FeatureCominteropTlbSupport)' == 'true'"/>
    <CppCompile Include="$(VmSourcesDir)\DispatchInfo.cpp" />
    <CppCompile Include="$(VmSourcesDir)\DispParamMarshaler.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ExtensibleClassFactory.cpp" />
    <CppCompile Include="$(VmSourcesDir)\mngstdinterfaces.cpp" />
    <CCompile Include="$(VmSourcesDir)\Microsoft.ComServices_i.c" />
    <CppCompile Include="$(VmSourcesDir)\NotifyExternals.cpp" />
    <CppCompile Include="$(VmSourcesDir)\OleContextHelpers.cpp" />
    <CppCompile Include="$(VmSourcesDir)\stdinterfaces.cpp" />
    <CppCompile Include="$(VmSourcesDir)\stdinterfaces_wrapper.cpp" />
    <CppCompile Include="$(VmSourcesDir)\tlbexport.cpp" Condition="'$(FeatureCominteropTlbSupport)' == 'true'"/>
    <CppCompile Include="$(VmSourcesDir)\rcwwalker.cpp" />
    <CppCompile Include="$(VmSourcesDir)\rcwrefcache.cpp" />
    <CppCompile Include="$(VmSourcesDir)\WinRtHelpers.cpp" />
  </ItemGroup>
  <!-- AMD64_SOURCES -->
  <ItemGroup Condition="'$(BuildArchitecture)' == 'amd64'">
    <CppCompile Include="$(Amd64SourcesDir)\cGenAMD64.cpp" />
    <CppCompile Include="$(Amd64SourcesDir)\ExcepAMD64.cpp" />
    <CppCompile Include="$(Amd64SourcesDir)\gmsAMD64.cpp" />
    <CppCompile Include="$(Amd64SourcesDir)\JitHelpersAMD64.cpp" />
    <CppCompile Include="$(Amd64SourcesDir)\JITinterfaceAMD64.cpp" />
    <CppCompile Include="$(Amd64SourcesDir)\Profiler.cpp" />
    <CppCompile Include="$(Amd64SourcesDir)\RemotingAMD64.cpp" Condition="'$(FeatureRemoting)' == 'true'" />
    <CppCompile Include="$(Amd64SourcesDir)\StubLinkerAMD64.cpp" />
    <CppCompile Include="$(VmSourcesDir)\JITinterfaceGen.cpp" />
  </ItemGroup>
  <ItemGroup Condition="'$(BuildArchitecture)' == 'amd64'">
    <AssembleAmd64 Include="$(Amd64SourcesDir)\AsmHelpers.asm" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\CallDescrWorkerAMD64.asm" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\ComCallPreStub.asm" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\CrtHelpers.asm" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\GenericComCallStubs.asm" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\GenericComPlusCallStubs.asm" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\getstate.asm" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\InstantiatingStub.asm" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\JitHelpers_Fast.asm" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\JitHelpers_FastWriteBarriers.asm" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\JitHelpers_InlineGetAppDomain.asm" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\JitHelpers_InlineGetThread.asm" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\JitHelpers_Slow.asm" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\PInvokeStubs.asm" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\RedirectedHandledJITCase.asm" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\RemotingThunksAMD64.asm" Condition="'$(FeatureRemoting)' == 'true'" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\ThePreStubAMD64.asm" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\ExternalMethodFixupThunk.asm" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\TlsGetters.asm" Condition="'$(FeatureImplicitTls)' != 'true'" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\UMThunkStub.asm" />
    <AssembleAmd64 Include="$(Amd64SourcesDir)\VirtualCallStubAMD64.asm" />
  </ItemGroup>
  <!-- I386_SOURCES -->
  <ItemGroup Condition="'$(BuildArchitecture)' == 'i386'">
    <CppCompile Include="$(I386SourcesDir)\cgenx86.cpp" />
    <CppCompile Include="$(I386SourcesDir)\ExcepX86.cpp" />
    <CppCompile Include="$(I386SourcesDir)\gmsx86.cpp" />
    <CppCompile Include="$(I386SourcesDir)\JITinterfaceX86.cpp" />
    <CppCompile Include="$(I386SourcesDir)\Profiler.cpp" />
    <CppCompile Include="$(I386SourcesDir)\remotingx86.cpp" Condition="'$(FeatureRemoting)' == 'true'" />
    <CppCompile Include="$(I386SourcesDir)\StubLinkerX86.cpp" />
    <CppCompile Include="$(VmSourcesDir)\ExInfo.cpp" />
  </ItemGroup>
  <ItemGroup Condition="'$(BuildArchitecture)' == 'i386'">
    <Assemble386 Include="$(I386SourcesDir)\asmhelpers.asm" />
    <Assemble386 Include="$(I386SourcesDir)\fptext.asm" />
    <Assemble386 Include="$(I386SourcesDir)\gmsasm.asm" />
    <Assemble386 Include="$(I386SourcesDir)\jithelp.asm" />
    <Assemble386 Include="$(I386SourcesDir)\RedirectedHandledJITCase.asm" />
  </ItemGroup>
  <!-- ARM_SOURCES -->
  <ItemGroup Condition="'$(BuildArchitecture)' == 'arm'">
    <CppCompile Include="$(ArmSourcesDir)\stubs.cpp" />
    <CppCompile Include="$(ArmSourcesDir)\ExcepArm.cpp" />
    <CppCompile Include="$(ArmSourcesDir)\ArmSingleStepper.cpp" />
    <CppCompile Include="$(ArmSourcesDir)\JitHelpersARM.cpp" />
    <CppCompile Include="$(ArmSourcesDir)\profiler.cpp" />
  </ItemGroup>
  <ItemGroup Condition="'$(BuildArchitecture)' == 'arm'">
    <PreprocessAssembleArm Include="$(ArmSourcesDir)\asmhelpers.asm" />
    <PreprocessAssembleArm Include="$(ArmSourcesDir)\crthelpers.asm" />
    <PreprocessAssembleArm Include="$(ArmSourcesDir)\ehhelpers.asm" />
    <PreprocessAssembleArm Include="$(ArmSourcesDir)\pinvokestubs.asm" />
    <PreprocessAssembleArm Include="$(ArmSourcesDir)\memcpy.asm" />
    <PreprocessAssembleArm Include="$(ArmSourcesDir)\patchedcode.asm" />
    <AssembleArm Include="$(IntermediateOutputDirectory)\asmhelpers.i" />
    <AssembleArm Include="$(IntermediateOutputDirectory)\crthelpers.i" />
    <AssembleArm Include="$(IntermediateOutputDirectory)\ehhelpers.i" />
    <AssembleArm Include="$(IntermediateOutputDirectory)\pinvokestubs.i" />
    <AssembleArm Include="$(IntermediateOutputDirectory)\memcpy.i" />
    <AssembleArm Include="$(IntermediateOutputDirectory)\patchedcode.i" />
  </ItemGroup>
  <!-- ARM64_SOURCES -->
  <ItemGroup Condition="'$(BuildArchitecture)' == 'arm64'">
    <CppCompile Include="$(Arm64SourcesDir)\stubs.cpp" />
    <CppCompile Include="$(Arm64SourcesDir)\cGenArm64.cpp" />
  </ItemGroup>
  <ItemGroup Condition="'$(BuildArchitecture)' == 'arm64'">
    <PreprocessAssembleArm Include="$(Arm64SourcesDir)\CallDescrWorkerARM64.asm" />
    <PreprocessAssembleArm Include="$(Arm64SourcesDir)\asmHelpers.asm" />
    <PreprocessAssembleArm Include="$(Arm64SourcesDir)\PInvokeStubs.asm" />
    <PreprocessAssembleArm Include="$(Arm64SourcesDir)\crtHelpers.asm" />
    <AssembleArm64 Include="$(IntermediateOutputDirectory)\CallDescrWorkerARM64.i" />
    <AssembleArm64 Include="$(IntermediateOutputDirectory)\asmHelpers.i" />
    <AssembleArm64 Include="$(IntermediateOutputDirectory)\PInvokeStubs.i" />
    <AssembleArm64 Include="$(IntermediateOutputDirectory)\crtHelpers.i" />
  </ItemGroup>
  <ItemGroup>
    <CppCompile Condition="'$(FeatureTraceLogging)' == 'true'" Include="$(VmSourcesDir)\clrtracelogging.cpp" />
 </ItemGroup>
</Project>
