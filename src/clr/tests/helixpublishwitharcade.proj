<Project Sdk="Microsoft.DotNet.Helix.Sdk" DefaultTargets="SubmitTestsToHelix">

  <!-- This project uses the helix SDK, documented at
       https://github.com/dotnet/arcade/tree/master/src/Microsoft.DotNet.Helix/Sdk,
       to send test jobs to helix. -->

  <Import Project="..\dir.props" />

  <PropertyGroup>
    <HelixArchitecture>$(BuildArch)</HelixArchitecture>
    <HelixConfiguration Condition=" '$(Scenario)' == 'normal' ">$(BuildType)</HelixConfiguration>
    <HelixConfiguration Condition=" '$(Scenario)' != 'normal' ">$(BuildType)-$(Scenario)</HelixConfiguration>

    <Creator>$(_Creator)</Creator>
    <HelixAccessToken>$(_HelixAccessToken)</HelixAccessToken>
    <HelixTargetQueues>$(_HelixTargetQueues)</HelixTargetQueues>

    <EnableAzurePipelinesReporter>$(_PublishTestResults)</EnableAzurePipelinesReporter>
    <EnableAzurePipelinesReporter Condition=" '$(EnableAzurePipelinesReporter)' == '' ">false</EnableAzurePipelinesReporter>

    <HelixBuild>$(_HelixBuild)</HelixBuild>
    <HelixSource>$(_HelixSource)</HelixSource>
    <HelixType>$(_HelixType)</HelixType>

    <TimeoutInMinutes>$(_TimeoutInMinutes)</TimeoutInMinutes>
    <TimeoutInMinutes Condition=" '$(TimeoutInMinutes)' == '' ">5</TimeoutInMinutes>

    <WaitForWorkItemCompletion>true</WaitForWorkItemCompletion>
    <CoreRootDirectory>$(TestWorkingDir)\Tests\Core_Root</CoreRootDirectory>
    <TestEnvFileExtension Condition=" '$(TargetsWindows)' == 'true' ">.cmd</TestEnvFileExtension>
    <TestEnvFileExtension Condition=" '$(TargetsWindows)' != 'true' ">.sh</TestEnvFileExtension>
  </PropertyGroup>

  <ItemGroup>
    <HelixCorrelationPayload Include="$(CoreRootDirectory)" />
    <XUnitWrapperDlls Include="$(TestWorkingDir)\**\*.XUnitWrapper.dll" />
    <Scenarios Include="$(_Scenarios.Split(','))" />
  </ItemGroup>

  <Target Name="CreateTestEnvFiles">
    <!-- This target will create one __TestEnv file per XUnitWrapper/Scenario combination -->
    <ItemGroup>
      <_XUnitWrapperDirectoryWithScenario Include="@(XUnitWrapperDlls->'%(RootDir)%(Directory)')">
        <Scenario>%(Scenarios.Identity)</Scenario>
      </_XUnitWrapperDirectoryWithScenario>

      <_TestEnvProjectsToBuild Include=".\testenvironment.proj">
        <Properties>Scenario=%(_XUnitWrapperDirectoryWithScenario.Scenario);TestEnvFileName=%(Identity)\SetStressModes_%(Scenario)$(TestEnvFileExtension);TargetsWindows=$(TargetsWindows)</Properties>
      </_TestEnvProjectsToBuild>
    </ItemGroup>

    <MSBuild Projects="@(_TestEnvProjectsToBuild)" Targets="CreateTestEnvFile" BuildInParallel="false" StopOnFirstFailure="true" UnloadProjectsOnCompletion="true" />
  </Target>

  <Target Name="SubmitTestsToHelix" DependsOnTargets="CreateTestEnvFiles">
    <ItemGroup>
      <_ProjectsToBuild Include="$(MSBuildProjectFile)">
        <Properties>Scenario=%(Scenarios.Identity)</Properties>
      </_ProjectsToBuild>
    </ItemGroup>

    <PropertyGroup>
      <_BuildInParallel>false</_BuildInParallel>
      <_BuildInParallel Condition=" '@(_ProjectsToBuild->Count())' > '1' ">true</_BuildInParallel>
    </PropertyGroup>

    <MSBuild Projects="@(_ProjectsToBuild)" Targets="Test" BuildInParallel="$(_BuildInParallel)" StopOnFirstFailure="false" UnloadProjectsOnCompletion="true" />
  </Target>

  <Target Name="BuildHelixWorkItem" BeforeTargets="Test">
    <PropertyGroup>
      <EnableXUnitReporter>true</EnableXUnitReporter>
      <FailOnMissionControlTestFailure>true</FailOnMissionControlTestFailure>
      <TestRunNamePrefix Condition=" '$(Scenario)' == 'normal' ">$(BuildOS) $(BuildArch) $(BuildType) @ </TestRunNamePrefix>
      <TestRunNamePrefix Condition=" '$(Scenario)' != 'normal' ">$(BuildOS) $(BuildArch) $(BuildType) $(Scenario) @ </TestRunNamePrefix>
      <_XUnitRunnerArgs>-parallel collections -nocolor -noshadow -xml testResults.xml -notrait category=outerloop -notrait category=failing</_XUnitRunnerArgs>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(TargetsWindows)' == 'true' ">
      <_CoreRun>%CORE_ROOT%\CoreRun.exe</_CoreRun>
      <_XUnitRunnerDll>%CORE_ROOT%\xunit.console.dll</_XUnitRunnerDll>
      <_HelixPreCommands>set CORE_ROOT=%HELIX_CORRELATION_PAYLOAD%;set __TestEnv=%HELIX_WORKITEM_PAYLOAD%\SetStressModes_$(Scenario)$(TestEnvFileExtension);type %__TestEnv%</_HelixPreCommands>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(TargetsWindows)' != 'true' ">
      <_CoreRun>$CORE_ROOT/corerun</_CoreRun>
      <_XUnitRunnerDll>$CORE_ROOT/xunit.console.dll</_XUnitRunnerDll>
      <_HelixPreCommands>export CORE_ROOT=$HELIX_CORRELATION_PAYLOAD;export __TestEnv=$HELIX_WORKITEM_PAYLOAD/SetStressModes_$(Scenario)$(TestEnvFileExtension);cat $__TestEnv</_HelixPreCommands>
    </PropertyGroup>

    <ItemGroup>
      <HelixWorkItem Include="@(XUnitWrapperDlls->'%(FileName)'->Replace('.XUnitWrapper', ''))">
        <PayloadDirectory>%(RootDir)%(Directory)</PayloadDirectory>
        <PreCommands>$(_HelixPreCommands)</PreCommands>
        <Command>$(_CoreRun) $(_XUnitRunnerDll) %(FileName)%(Extension) $(_XUnitRunnerArgs)</Command>
        <Timeout>$([System.TimeSpan]::FromMinutes($(TimeoutInMinutes)))</Timeout>
      </HelixWorkItem>
    </ItemGroup>
  </Target>

</Project>
