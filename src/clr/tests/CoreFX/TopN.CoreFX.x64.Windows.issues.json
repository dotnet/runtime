// The expected format of this file can be found at https://github.com/dotnet/coreclr/blob/master/Documentation/building/testing-with-corefx.md
[
    {
        "name": "System.Console.Tests",
        "enabled": true, 
        "exclusions": {
            "namespaces": null,
            "classes": null,
            "methods": [
                {
                    "name": "WindowAndCursorProps.SetWindowPosition_GetWindowPosition_ReturnsExpected",
                    "reason": "Xunit.Sdk.EqualException Assert.Equal() Failure\\r\\n          ↓ (pos 0)\\r\\nExpected: top\\r\\nActual:   left\\r\\n          ↑ (pos 0)"
                },
                {
                    "name": "WindowAndCursorProps.GetCursorPosition",
                    "reason": "Xunit.Sdk.EqualException Assert.Equal() Failure\\r\\nExpected: 12\\r\\nActual:   13"
                }
            ]
        }
    },
    {
        "name": "System.Drawing.Common.Tests",
        "enabled": true, 
        "exclusions": {
            "namespaces": null,
            "classes": null,
            "methods": [
                {
                    "name": "System.Drawing.Tests.GraphicsTests.InterpolationMode_SetInvalid_ThrowsInvalidEnumArgumentException",
                    "reason": "Xunit.Sdk.ThrowsException Assert.Throws() Failure\\r\\nExpected: typeof(System.ComponentModel.InvalidEnumArgumentException)\\r\\nActual:   typeof(System.ComponentModel.InvalidEnumArgumentException): The value of argument 'value' (-2) is invalid for Enum type 'InterpolationMode'.\\r\\nParameter name: value"
                },
                {
                    "name": "System.Drawing.Tests.GraphicsTests.CompositingQuality_SetInvalid_ThrowsInvalidEnumArgumentException",
                    "reason": "Xunit.Sdk.ThrowsException Assert.Throws() Failure\\r\\nExpected: typeof(System.ComponentModel.InvalidEnumArgumentException)\\r\\nActual:   typeof(System.ComponentModel.InvalidEnumArgumentException): The value of argument 'value' (-2) is invalid for Enum type 'CompositingQuality'.\\r\\nParameter name: value"
                },
                {
                    "name": "System.Drawing.Tests.GraphicsTests.PixelOffsetMode_SetInvalid_ThrowsInvalidEnumArgumentException",
                    "reason": "Xunit.Sdk.ThrowsException Assert.Throws() Failure\\r\\nExpected: typeof(System.ComponentModel.InvalidEnumArgumentException)\\r\\nActual:   typeof(System.ComponentModel.InvalidEnumArgumentException): The value of argument 'value' (-2) is invalid for Enum type 'PixelOffsetMode'.\\r\\nParameter name: value"
                },
                {
                    "name": "System.Drawing.Tests.GraphicsTests.PageUnit_SetInvalid_ThrowsInvalidEnumArgumentException",
                    "reason": "Xunit.Sdk.ThrowsException Assert.Throws() Failure\\r\\nExpected: typeof(System.ComponentModel.InvalidEnumArgumentException)\\r\\nActual:   typeof(System.ComponentModel.InvalidEnumArgumentException): The value of argument 'value' (-1) is invalid for Enum type 'GraphicsUnit'.\\r\\nParameter name: value"
                },
                {
                    "name": "System.Drawing.Tests.GraphicsTests.SmoothingMode_SetInvalid_ThrowsInvalidEnumArgumentException",
                    "reason": "Xunit.Sdk.ThrowsException Assert.Throws() Failure\\r\\nExpected: typeof(System.ComponentModel.InvalidEnumArgumentException)\\r\\nActual:   typeof(System.ComponentModel.InvalidEnumArgumentException): The value of argument 'value' (-2) is invalid for Enum type 'SmoothingMode'.\\r\\nParameter name: value"
                },
                {
                    "name": "System.Drawing.Tests.GraphicsTests.CompositingMode_SetInvalid_ThrowsInvalidEnumArgumentException",
                    "reason": "Xunit.Sdk.ThrowsException Assert.Throws() Failure\\r\\nExpected: typeof(System.ComponentModel.InvalidEnumArgumentException)\\r\\nActual:   typeof(System.ComponentModel.InvalidEnumArgumentException): The value of argument 'value' (-1) is invalid for Enum type 'CompositingMode'.\\r\\nParameter name: value"
                },
                {
                    "name": "System.Drawing.Tests.GraphicsTests.TextRenderingHint_SetInvalid_ThrowsInvalidEnumArgumentException",
                    "reason": "Xunit.Sdk.ThrowsException Assert.Throws() Failure\\r\\nExpected: typeof(System.ComponentModel.InvalidEnumArgumentException)\\r\\nActual:   typeof(System.ComponentModel.InvalidEnumArgumentException): The value of argument 'value' (-1) is invalid for Enum type 'TextRenderingHint'.\\r\\nParameter name: value"
                },
                {
                    "name": "System.Drawing.Tests.Graphics_DrawBezierTests.DrawBezier_PointFs",
                    "reason": "Xunit.Sdk.EqualException Assert.Equal() Failure\\r\\nExpected: Byte[] [208, 0, 8, 33, 6, ...]\\r\\nActual:   Byte[] [153, 27, 131, 228, 197, ...]"
                },
                {
                    "name": "System.Drawing.Tests.Graphics_DrawLineTests.DrawLines_PointFs",
                    "reason": "Xunit.Sdk.EqualException Assert.Equal() Failure\\r\\nExpected: Byte[] [142, 194, 251, 180, 222, ...]\\r\\nActual:   Byte[] [212, 29, 140, 217, 143, ...]"
                }
            ]
        }
    },
    {
        "name": "System.Security.Cryptography.X509Certificates.Tests",
        "enabled": true, "exclusions": {
            "namespaces": null,
            "classes": null,
            "methods": [
                {
                    "name": "System.Security.Cryptography.X509Certificates.Tests.X509StoreTests.Constructor_DefaultStoreName",
                    "reason": "Xunit.Sdk.EqualException Assert.Equal() Failure\\r\\n           ↓ (pos 1)\\r\\nExpected: My\\r\\nActual:   MY\\r\\n           ↑ (pos 1)"
                }
            ]
        }
    },
    {
        "name": "System.Data.SqlClient.ManualTesting.Tests",
        "enabled": false,
        "exclusions": {
            "namespaces": null,
            "classes": null,
            "methods": null
        }
    },
    {
        "name": "System.Data.SqlClient.Stress.Tests",
        "enabled": false,
        "exclusions": {
            "namespaces": null,
            "classes": null,
            "methods": null
        }
    },
    {
        "name": "System.Data.SqlClient.Tests",
        "enabled": false,
        "exclusions": {
            "namespaces": null,
            "classes": null,
            "methods": null
        }
    },
    {
        "name": "System.Threading.Tests",
        "enabled": true, 
        "exclusions": {
            "namespaces": null,
            "classes": null,
            "methods": [
                {
                    "name": "System.Threading.Tests.EventWaitHandleTests.Ctor_InvalidMode",
                    "reason": "Xunit.Sdk.EqualException Assert.Equal() Failure\\r\\nExpected: (null)\\r\\nActual:   mode"
                }
            ]
        }
    },
    {
        "name": "System.Xml.Xsl.XslTransformApi.Tests",
        "enabled": true, 
        "exclusions": {
            "namespaces": null,
            "classes": null,
            "methods": [
                {
                    "name": "System.Xml.Tests.CXmlResolverTest.TC_AbsolutePath_Transform",
                    "reason": "Xunit.Sdk.TrueException Assert.True() Failure\\r\\nExpected: True\\r\\nActual:   False"
                },
                {
                    "name": "System.Xml.Tests.CTransformResolverTest.TC_AbsolutePath_Transform",
                    "reason": "Xunit.Sdk.TrueException Assert.True() Failure\\r\\nExpected: True\\r\\nActual:   False"
                }
            ]
        }
    }
]
