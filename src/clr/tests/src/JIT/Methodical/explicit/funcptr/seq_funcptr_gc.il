// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.





.assembly extern mscorlib
{
  
  
}
.assembly funcptr_gc
{

}
.module test.exe
// MVID: {CF23CD68-3FF2-4D1F-B49B-866DA656D91D}


.file alignment 512


// =============== CLASS MEMBERS DECLARATION ===================
//   note that class flags, 'extends' and 'implements' clauses
//          are provided here for information only

.class private sequential ansi sealed beforefieldinit AA
       extends [mscorlib]System.Object
// =============================================================

{
  .field public unsigned int8 tmp1
  .field public unsigned int8 tmp2
  .field public unsigned int8 tmp3
  .field private native int func_ptr
  .field public unsigned int8 tmp4

  .method private hidebysig static int32 ret_code() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  1
    ldc.i4.s   100
    ret
  } // end of method AA::ret_code

  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [mscorlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method TestApp::.ctor
  
  .method private hidebysig static int32 
          Main() cil managed
  {
    .entrypoint
    // Code size       31 (0x1f)
    .maxstack  3
    .locals init (class AA V_0, int32 V_1)
    newobj    instance void AA::.ctor()
    stloc.0
    ldloc.0
    ldftn      int32 AA::ret_code()
    stfld      native int AA::func_ptr
    ldloc.0
    ldfld      native int AA::func_ptr
    calli       int32 *()
    ret
  } // end of method AA::Main

} // end of class AA


// =============================================================

//*********** DISASSEMBLY COMPLETE ***********************
// WARNING: Created Win32 resource file funcptr_val.res
