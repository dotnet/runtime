// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.




.file alignment 512

.assembly extern mscorlib {}
.assembly livecall // as "livecall"
{
}
.module livecall.exe
// MVID: {6300FB9B-B24E-45DA-9A61-2556746FEEEF}
.namespace MS
{
  .class value private auto ansi sealed VT
         extends [mscorlib]System.ValueType
  {
    .field private float64 v
    .method private hidebysig static void 
            DoAnything(value class MS.VT& vt) il managed
    {
      // Code size       16 (0x10)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.r8     20.
      IL_000a:  stfld      float64 MS.VT::v
      IL_000f:  ret
    } // end of method VT::DoAnything

    .method private hidebysig static int32
            Main() il managed
    {
      .entrypoint
      // Code size       74 (0x4a)
      .maxstack  2
      .locals (value class MS.VT V_0, value class MS.VT V_1)
      IL_0000:  ldloca.s   V_0
      IL_0002:  initobj    MS.VT
      IL_0008:  ldloca.s   V_0
      IL_000a:  ldc.r8     1.
      IL_0013:  stfld      float64 MS.VT::v
      			ldloc.0
      IL_0018:  ldloca.s   V_0
      IL_001a:  call       void MS.VT::DoAnything(value class MS.VT&)
      
      			stloc.1
      IL_001f:  ldloca.s   V_1
      IL_0021:  ldfld      float64 MS.VT::v
      IL_0026:  ldc.r8     1.
      IL_002f:  bne.un.s   IL_003e

      IL_0031:  ldstr      "PASSED"
      IL_0036:  call       void [mscorlib]System.Console::WriteLine(class System.String)
      IL_003b:  ldc.i4.s   100
      			ret

      IL_003e:  ldstr      "FAILED"
      IL_0043:  call       void [mscorlib]System.Console::WriteLine(class System.String)
      IL_0048:  ldc.i4.1
      IL_0049:  ret
    } // end of method VT::Main

  } // end of class VT

} // end of namespace MS

//*********** DISASSEMBLY COMPLETE ***********************
