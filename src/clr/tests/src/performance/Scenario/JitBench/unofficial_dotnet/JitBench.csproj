<Project Sdk="Microsoft.NET.Sdk">

  <!--The common test dirs props expects Platform to be empty in order to initialize it and
      by default this project style appears to set it as "AnyCPU" so we need to clear it -->
  <PropertyGroup>
    <Platform></Platform>
    <Platforms>AnyCPU;x64</Platforms>
    <Configuration></Configuration>
  </PropertyGroup>

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\dir.props" />
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    
    <!-- the common test dirs props pushes all tests to use a more recent NTM unless we explictly opt-out -->
    <NuGetTargetMoniker>.NETCoreApp,Version=v2.0</NuGetTargetMoniker>
    <NuGetTargetMonikerShort>netcoreapp2.0</NuGetTargetMonikerShort>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="CommandLineParser">
      <Version>$(CommandLineParserVersion)</Version>
    </PackageReference>
    <PackageReference Include="Microsoft.Diagnostics.Tracing.TraceEvent">
      <Version>$(MicrosoftDiagnosticsTracingTraceEventPackageVersion)</Version>
    </PackageReference>
    <PackageReference Include="xunit.performance.api">
      <Version>$(XunitPerformanceApiPackageVersion)</Version>
    </PackageReference>
    <PackageReference Include="xunit.performance.core">
      <Version>$(XunitPerformanceApiPackageVersion)</Version>
    </PackageReference>
    <PackageReference Include="xunit.performance.execution">
      <Version>$(XunitPerformanceApiPackageVersion)</Version>
    </PackageReference>
    <PackageReference Include="xunit.performance.metrics">
      <Version>$(XunitPerformanceApiPackageVersion)</Version>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\**\*.cs" />
  </ItemGroup>

  <ItemGroup>
    <!-- BaselineMicrosoftNetCoreAppPackageVersion comes from dependencies.props in the root of the coreclr tree -->
    <VersioningConstantsLines Include="namespace JitBench { public static class VersioningConstants { public static string MicrosoftNetCoreAppPackageVersion=&quot;$(BaselineMicrosoftNetCoreAppPackageVersion)&quot;%3B } }" />
    <Compile Include="$(BaseIntermediateOutputPath)AutoGeneratedVersioningConstants.cs" />
  </ItemGroup>
    
  <Target Name="GenerateVersioningConstantsFile" BeforeTargets="CoreCompile"> 
    <WriteLinesToFile File="$(BaseIntermediateOutputPath)AutoGeneratedVersioningConstants.cs" Lines="@(VersioningConstantsLines)" Overwrite="true" Encoding="Unicode" /> 
   </Target> 

  <!-- The CoreCLR test build system requires a target named RestorePackage in order to do BatchRestore -->
  <Target Name="RestorePackage" DependsOnTargets="Restore" />

</Project>
