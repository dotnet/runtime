<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
      <PackageTestRuntimeFolder>$(PackagesDir)test.Microsoft.NETCore.Runtime.CoreClr\1.1.1</PackageTestRuntimeFolder>
  </PropertyGroup>

  <ItemGroup>
    <!-- TODO This should come from some package -->
    <CoreRootFiles Include="$(CORE_ROOT)\crossgen.exe" /> 
    <CoreRootFiles Include="$(CORE_ROOT)\ildasm.exe" /> 
    <CoreRootFiles Include="$(CORE_ROOT)\ilasm.exe" /> 

    <!-- TODO these files should get copied to core_root but does not as they are xunit files. Using temporary workaround for now -->
    <CoreRootFiles Include="$(PackagesDir)Microsoft.DotNet.xunit.performance\1.0.0-alpha-build0028\lib\dotnet\xunit.performance.core.dll" />
    <CoreRootFiles Include="$(PackagesDir)xunit.extensibility.core\2.1.0\lib\dotnet\xunit.core.dll" />
  </ItemGroup>

  <!-- replace *.lock.json to be that of actual tests than XunitWrapper -->
  <Target Name="ReplaceProjectLockJson"
          BeforeTargets="CopyTestToTestDirectory">
    <PropertyGroup>
      <ProjectLockJson></ProjectLockJson>
      <TestRuntimeProjectLockJson></TestRuntimeProjectLockJson>
    </PropertyGroup>
    <ItemGroup>
      <TestNugetProjectLockFile Include="$(SourceDir)$(Category)\**\project.lock.json"/>
    </ItemGroup>
  </Target>

  <Target Name="CopyProductInPackagesFolder"
          BeforeTargets="CopyTestToTestDirectory">

    <Copy
      SourceFiles="@(CoreRootFiles)"
      DestinationFolder="$(PackageTestRuntimeFolder)"
      SkipUnchangedFiles="false"
      OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
      Retries="$(CopyRetryCount)"
      RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
      UseHardlinksIfPossible="$(CreateHardLinksForCopyFilesToOutputDirectoryIfPossible)">
    </Copy>
 
  </Target>


  <Target Name="AddFilesToAssemblyList" 
          BeforeTargets="CreateAssemblyListTxt">

    <ItemGroup>

      <ToReplace Include="$(PackageTestRuntimeFolder)\*" />

      <!-- In helix xunit tests are run using xunit.console.exe instead of msbuild xunitrunner.
           This dependency should ideally be added in some project.json. But in the package the assemblies are present in tools folder.
           Assemblies in tools folder are not resolved during restore. Therefore forcing addition direclty. -->
      <XunitConsoleExe Include="$(PackagesDir)xunit.runner.console\**\xunit.console.exe" />
      <XunitConsoleExe Include="$(PackagesDir)xunit.runner.console\**\xunit.runner.utility.desktop.dll" />

      <ToRemove Include="@(_TestCopyLocalByFileNameWithoutDuplicates)" Condition="'%(_TestCopyLocalByFileNameWithoutDuplicates.Filename)' == 'xunit.performance.core'"/>
      <ToRemove Include="@(_TestCopyLocalByFileNameWithoutDuplicates)" Condition="'%(_TestCopyLocalByFileNameWithoutDuplicates.Filename)' == 'xunit.core'"/>

      <_TestCopyLocalByFileNameWithoutDuplicates Remove="@(ToRemove)" />

      <_TestCopyLocalByFileNameWithoutDuplicates Include="@(ToReplace)">
        <NugetPackageId>test.Microsoft.NETCore.Runtime.CoreClr</NugetPackageId>
        <SourcePath>%(ToReplace.Identity)</SourcePath>
      </_TestCopyLocalByFileNameWithoutDuplicates>

      <_TestCopyLocalByFileNameWithoutDuplicates Include="@(XunitConsoleExe)">
        <NugetPackageId>xunit.runner.console</NugetPackageId>
        <SourcePath>%(XunitConsoleExe.Identity)</SourcePath>
      </_TestCopyLocalByFileNameWithoutDuplicates>
    </ItemGroup>
  </Target>

</Project>
