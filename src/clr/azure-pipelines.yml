
# Temporarily set a build number format that includes a large revision
# number that won't conflict with buildpipeline official builds.
name: $(Date:yyyyMMdd)$(Rev:.7r)

variables:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

resources:
  containers:
  - container: ubuntu_1404_arm_cross_build_image
    image: microsoft/dotnet-buildtools-prereqs:ubuntu-14.04-cross-e435274-20180426002420

  - container: ubuntu_1604_arm64_cross_build_image
    image: microsoft/dotnet-buildtools-prereqs:ubuntu-16.04-cross-arm64-a3ae44b-20180315221921

  - container: musl_x64_build_image
    image: microsoft/dotnet-buildtools-prereqs:alpine-3.6-WithNode-f4d3fe3-20181220200247

  - container: centos7_x64_build_image
    image: microsoft/dotnet-buildtools-prereqs:centos-7-d485f41-20173404063424

  - container: centos6_x64_build_image
    image: microsoft/dotnet-buildtools-prereqs:centos-6-376e1a3-20174311014331

trigger:
- master

pr:
- master

jobs:

##   The following is the matrix of test runs that we have. This is
##   duplicated for each os/arch combination in platform-matrix.yml.

##
##   Product build       Test build              Test run
##   (Azure DevOps)      (Azure DevOps)          (helix)
##
##   ###########################################################################################
##
##   Debug
##
##   Checked ----------> Pri0 -----------------> plain runtests
##           |
##           \---------> Pri1 -----------------> plain runtests
##           |                \----------------> jitstress
##           |                \----------------> gcstress
##           |                \----------------> maybe more (dynamically selected runtest modes)
##           |
##           \---------> Pri1 crossgen --------> plain runtests
##                                     \-------> jitstress
##                                     \-------> gcstress
##                                     \-------> maybe more (dynamically selected runtest modes)
##
##   Release ----------> Pri1 -----------------> plain runtests
##           |
##           \---------> Pri1 crossgen --------> plain runtests
##
##

## Each build or test job is defined in Azure DevOps, and will show
## up in the UI in the order in which they are defined here. The
## build and test build job matrix is defined statically, but
## queue-time inputs can be used to control whether a job executes
## (used to select which jobs run in ci vs for official builds), or
## to select test modes. This should eventually be used to enable
## requesting specific test runs from pull requests.


##
## Templates used to define jobs:
## Please update this if the factoring changes.
##
## This file defines the set of jobs in a platform-agnostic manner,
## using the platform-matrix.yml template. This will create one job
## for each platform from the passed-in jobTemplate (either a build
## job or a test job). The build-job.yml and test-job.yml templates
## use xplat-job.yml to handle some of the common logic for
## abstracting over platforms. Finally, xplat-job.yml uses the arcade
## base.yml job template, which sets up telemetry and signing support.

## azure-pipelines.yml -> platform-matrix.yml -------> build-job.yml -------> xplat-job.yml -> base.yml
##                                            |  (passed-in jobTemplate)  |                    (arcade)
##                                            \------> test-job.yml ------/

# TODO: simplify logic surrounding official build/ci. See
# https://github.com/Microsoft/azure-pipelines-yaml/pull/46 for more information

#
# Debug build (Pull Request)
#
- ${{ if and(eq(variables['System.TeamProject'], 'public'), eq(variables['Build.Reason'], 'PullRequest')) }}:
  - template: eng/platform-matrix.yml
    parameters:
      jobTemplate: build-job.yml
      buildConfig: debug

#
# Checked build
#
- ${{ if eq(variables['System.TeamProject'], 'public') }}:
  - template: eng/platform-matrix.yml
    parameters:
      jobTemplate: build-job.yml
      buildConfig: checked

#
# Release build (Official Build, Pull Request)
#
- ${{ if xor(eq(variables['System.TeamProject'], 'internal'), eq(variables['Build.Reason'], 'PullRequest')) }}:
  - template: eng/platform-matrix.yml
    parameters:
      jobTemplate: build-job.yml
      buildConfig: release
      jobParameters:
        # Publishing packages to blob feeds sometimes takes a long time
        # due to waiting for an exclusive lock on the feed.
        # See https://github.com/dotnet/arcade/blob/master/Documentation/CorePackages/AsyncPublishing.md
        timeoutInMinutes: 120

#
# Checked test builds
#

# Pri0 (Pull Request)
- ${{ if and(eq(variables['System.TeamProject'], 'public'), eq(variables['Build.Reason'], 'PullRequest')) }}:
  - template: eng/platform-matrix.yml
    parameters:
      jobTemplate: test-job.yml
      buildConfig: checked
      jobParameters:
        priority: 0
        scenarios:
          asString: 'normal,no_tiered_compilation'
          asArray:
          - normal
          - no_tiered_compilation
        # "Total" includes building tests, waiting for a queue in Helix to become available, and running the tests.
        # In case test-job.yml gets split into two separate jobs (e.g. build-test-job.yml and run-test.yml)
        # this number should be adjusted accordingly.
        timeoutTotalInMinutes: 240
        # "PerCollection" is time needed for the "biggest" xUnit test collection to complete.
        # In case xUnit test wrappers get refactored this number should also be adjusted.
        timeoutPerTestCollectionInMinutes: 30
        # "PerTest" corresponds to individual test running time (i.e. __TestTimeout).
        timeoutPerTestInMinutes: 10

# Pri1 (CI)
- ${{ if and(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI')) }}:
  - template: eng/platform-matrix.yml
    parameters:
      jobTemplate: test-job.yml
      buildConfig: checked
      jobParameters:
        priority: 1
        scenarios:
          asString: 'normal,no_tiered_compilation'
          asArray:
          - normal
          - no_tiered_compilation
        timeoutTotalInMinutes: 360
        timeoutPerTestCollectionInMinutes: 60
        timeoutPerTestInMinutes: 10

# Pri1 ReadyToRun (CI)
- ${{ if and(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI')) }}:
  - template: eng/platform-matrix.yml
    parameters:
      jobTemplate: test-job.yml
      buildConfig: checked
      jobParameters:
        priority: 1
        readyToRun: true
        scenarios:
          asString: 'normal,no_tiered_compilation'
          asArray:
          - normal
          - no_tiered_compilation
        timeoutTotalInMinutes: 360
        timeoutPerTestCollectionInMinutes: 60
        timeoutPerTestInMinutes: 10

# Pri1 (Schedule, Manual)
- ${{ if and(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'Schedule', 'Manual')) }}:
  - template: eng/platform-matrix.yml
    parameters:
      jobTemplate: test-job.yml
      buildConfig: checked
      jobParameters:
        priority: 1
        scenarios:
          asString: 'normal,no_tiered_compilation,jitstress1,jitstress2,jitstress1_tiered,jitstress2_tiered,jitstressregs1,jitstressregs2,jitstressregs3,jitstressregs4,jitstressregs8,jitstressregs0x10,jitstressregs0x80,jitstressregs0x1000,jitminopts'
          asArray:
          - normal
          - no_tiered_compilation
          - jitstress1
          - jitstress2
          - jitstress1_tiered
          - jitstress2_tiered
          - jitstressregs1
          - jitstressregs2
          - jitstressregs3
          - jitstressregs4
          - jitstressregs8
          - jitstressregs0x10
          - jitstressregs0x80
          - jitstressregs0x1000
          - jitminopts
        timeoutTotalInMinutes: 480
        # TODO: Adjust this number as soon as we have more data on how long it takes to run these jobs in Helix.
        timeoutPerTestCollectionInMinutes: 120
        timeoutPerTestInMinutes: 30


#
# Release test builds
#

# Pri1 (Official Build)
- ${{ if and(eq(variables['System.TeamProject'], 'internal'), ne(variables['Build.Reason'], 'PullRequest')) }}:
  - template: eng/platform-matrix.yml
    parameters:
      jobTemplate: test-job.yml
      buildConfig: release
      jobParameters:
        priority: 1
        scenarios:
          asString: 'normal,no_tiered_compilation'
          asArray:
          - normal
          - no_tiered_compilation
        timeoutTotalInMinutes: 360
        timeoutPerTestCollectionInMinutes: 60
        timeoutPerTestInMinutes: 10

# Pri1 ReadyToRun (Official Build)
- ${{ if and(eq(variables['System.TeamProject'], 'internal'), ne(variables['Build.Reason'], 'PullRequest')) }}:
  - template: eng/platform-matrix.yml
    parameters:
      jobTemplate: test-job.yml
      buildConfig: release
      jobParameters:
        priority: 1
        readyToRun: true
        scenarios:
          asString: 'normal,no_tiered_compilation'
          asArray:
          - normal
          - no_tiered_compilation
        timeoutTotalInMinutes: 360
        timeoutPerTestCollectionInMinutes: 60
        timeoutPerTestInMinutes: 10


# Publish build information to Build Assets Registry

# This job gathers build assets from the pipeline (from each official
# product build job), and publishes them to the build assets
# registry. Its dependencies should be updated to include all of the
# official builds if we add more platform/arch combinations.

- ${{ if and(eq(variables['System.TeamProject'], 'internal'), ne(variables['Build.Reason'], 'PullRequest')) }}:
  - template: /eng/common/templates/job/publish-build-assets.yml
    parameters:
      configuration: Release
      pool:
        name: dotnet-internal-temp
      dependsOn:
      - build_Linux_arm_release
      - build_Linux_arm64_release
      - build_Linux_musl_x64_release
      - build_Linux_rhel6_x64_release
      - build_Linux_x64_release
      - build_FreeBSD_x64_release
      - build_OSX_x64_release
      - build_Windows_NT_x64_release
      - build_Windows_NT_x86_release
      - build_Windows_NT_arm_release
      - build_Windows_NT_arm64_release
