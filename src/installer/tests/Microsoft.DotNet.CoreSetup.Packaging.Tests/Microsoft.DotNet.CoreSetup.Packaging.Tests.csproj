<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>$(TestInfraTargetFramework)</TargetFramework>

    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <ItemGroup>
    <!-- reference nuget binaries directly to avoid restoring it's package dependency closure -->    
    <PackageDownloadAndReference Include="NuGet.Common" Version="$(NugetFrameworksVersion)" Folder="lib/netstandard2.0" Private="true" />
    <PackageDownloadAndReference Include="NuGet.Frameworks" Version="$(NugetFrameworksVersion)" Folder="lib/netstandard2.0" Private="true" />
    <PackageDownloadAndReference Include="NuGet.Packaging" Version="$(NugetPackagingVersion)" Folder="lib/netstandard2.0"  Private="true"  />
    <PackageDownloadAndReference Include="NuGet.ProjectModel" Version="$(NugetProjectModelVersion)" Folder="lib/netstandard2.0"  Private="true" />
    <PackageDownloadAndReference Include="NuGet.Versioning" Version="$(NugetVersioningVersion)" Folder="lib/netstandard2.0"  Private="true" />
  </ItemGroup>
  
  <Import Project="$(RepositoryEngineeringDir)PackageDownloadAndReference.targets" />

  <ItemGroup>
    <ProjectReference Include="..\TestUtils\TestUtils.csproj" />
    <OrderProjectReference Include="@(PkgprojProjectToBuild)" />
  </ItemGroup>

  <!--
    Ensure the packaging projects build first. Don't do this in VS: the build takes too long and
    isn't incremental.
  -->
  <Target Name="EnsureOrder"
          Condition="
            '$(SkipBuildingSharedFrameworkTestDependencies)' != 'true' and
            '$(BuildingInsideVisualStudio)' != 'true'"
          BeforeTargets="Build">
    <MSBuild
      Projects="@(OrderProjectReference)"
      Targets="Build"
      BuildInParallel="$(BuildInParallel)" />
  </Target>

</Project>
