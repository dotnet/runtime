<Project>
  <Import Project="$(RepositoryEngineeringDir)targetingpacks.targets" />

  <Import Project="$([MSBuild]::GetPathOfFileAbove(Directory.Build.targets, $(MSBuildThisFileDirectory)..))" />

  <PropertyGroup>
    <UseAppHost Condition="'$(UseAppHost)' == '' and '$(SelfContained)' != 'true'">false</UseAppHost>
  </PropertyGroup>

  <!-- Override target from targetingpacks.targets. Use Version instead of ProductVersion (written into runtimeconfig.json).
       Host tests are run against the built shared framework that has the normal version (with suffixes)  -->
  <Target Name="UpdateRuntimeFrameworkVersion"
          Condition="'$(UseLocalTargetingRuntimePack)' == 'true'"
          AfterTargets="ResolveTargetingPackAssets">
    <PropertyGroup>
      <_UpdatedVersion>$(Version)</_UpdatedVersion>
      <!-- When package versions are stabilized, they do not have version suffixes. Because these are
           non-shipping tests assets, the Version property will still include suffixes (unlike for shipping
           assets), so we explicitly use the ProductVersion (without suffixes) in the stabilized case. -->
      <_UpdatedVersion Condition="'$(StabilizePackageVersion)' == 'true'">$(ProductVersion)</_UpdatedVersion>
    </PropertyGroup>
    <ItemGroup>
      <RuntimeFramework Version="$(_UpdatedVersion)"
                        Condition="'%(RuntimeFramework.FrameworkName)' == '$(LocalFrameworkOverrideName)'" />
    </ItemGroup>
  </Target>
</Project>
