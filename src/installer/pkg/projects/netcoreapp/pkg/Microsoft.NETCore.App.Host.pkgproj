<Project Sdk="Microsoft.NET.Sdk">

  <!--
    Create AppHost Pack based on legacy DotNetAppHost package. This can be collapsed once the legacy
    package is no longer used.
  -->
  <Import Project="..\..\Microsoft.NETCore.DotNetAppHost\Microsoft.NETCore.DotNetAppHost.props" />

  <!--
    These files are not signed, because they're templates: they are modified by the SDK on the
    user's machine before use. We have a signing validation exception for Visual Studio insertion's
    signature validation. However, the exceptions are based on the file IDs, which are not stable
    because product version is in the path. We need to force these IDs to be stable by modifying
    the WiX source file. https://github.com/dotnet/core-setup/issues/7327
  -->
  <ItemGroup>
    <HeatOutputFileElementToStabilize Include="native\apphost.exe" ReplacementId="apphosttemplateapphostexe" />
    <HeatOutputFileElementToStabilize Include="native\comhost.dll" ReplacementId="comhosttemplatecomhostdll" />
  </ItemGroup>

  <!--
    See https://github.com/dotnet/core-setup/issues/7846. Cross-arch MSI installers are needed for
    C++/CLI project system support.
  -->
  <ItemGroup>
    <CrossArchSdkMsiInstallerArch Include="x64;x86" />
  </ItemGroup>

  <PropertyGroup>
    <SkipBuildOnRuntimePackOnlyOS>true</SkipBuildOnRuntimePackOnlyOS>
  </PropertyGroup>
</Project>