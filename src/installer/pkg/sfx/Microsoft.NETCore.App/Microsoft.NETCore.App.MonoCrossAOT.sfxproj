<Project>
  <!--
    This one project file represents all of the cross-os targeting Mono AOT Compilers.
    Unlike Crossgen2 or ILCompiler, the Mono AOT Compiler is target-specific.
    As a result, we end up building this project for each "target cross RID" with
    the current "RuntimeIdentifier" as the host RID.
    NuGet doesn't handle restoring the same project with different global properties,
    so we always restore at most one (usually RIDless) instance of this project
    and point all variables that need to depend on results of Restore to the restore output
    in that project.
  -->
  <PropertyGroup>
    <OutDirName Condition="'$(TargetCrossRid)' != ''">monocrossaot-pack.$(TargetCrossRid)</OutDirName>
    <OutDirName Condition="'$(TargetCrossRid)' == '' or '$(MSBuildRestoreSessionId)' != ''">monocrossaot-pack.restore</OutDirName>
    <RestoreOutputPath>$([System.IO.Path]::GetFullPath('$(ArtifactsObjDir)monocrossaot-pack.restore\'))</RestoreOutputPath>
    <ProjectAssetsFile>$(RestoreOutputPath)\project.assets.json</ProjectAssetsFile>
    <MSBuildProjectExtensionsPath>$(RestoreOutputPath)</MSBuildProjectExtensionsPath>
  </PropertyGroup>
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />
  <Import Project="Sdk.props" Sdk="Microsoft.DotNet.SharedFramework.Sdk" />

  <PropertyGroup>
    <SkipValidatePackage>true</SkipValidatePackage>
    <PlatformPackageType>ToolPack</PlatformPackageType>
    <SharedFrameworkName>Microsoft.NETCore.App.MonoCrossAOT</SharedFrameworkName>
    <OverridePackageId>Microsoft.NETCore.App.Runtime.AOT.$(RuntimeIdentifier).Cross.$(TargetCrossRid)</OverridePackageId>
    <RuntimeIdentifiers>linux-x64;linux-arm64;linux-musl-x64;linux-musl-arm64;osx-x64;osx-arm64;win-x64;win-arm64</RuntimeIdentifiers>
    <GenerateInstallers>false</GenerateInstallers>
    <PermitDllAndExeFilesLackingFileVersion>true</PermitDllAndExeFilesLackingFileVersion>
    <AotCompilerFileName>mono-aot-cross$(ExeSuffix)</AotCompilerFileName>
    <SkipInstallersPackageReference>true</SkipInstallersPackageReference>
  </PropertyGroup>

  <ItemGroup>
    <NativeRuntimeAsset Include="$(IntermediateOutputPath)$(TargetCrossRid).Sdk.props" TargetPath="Sdk/Sdk.props" />
    <NativeRuntimeAsset Condition="!$([MSBuild]::IsOsPlatform('Windows'))" Include="$(IntermediateOutputPath)Microsoft.NETCore.App.MonoCrossAOT.UnixFilePermissions.xml" TargetPath="data/UnixFilePermissions.xml" />
  </ItemGroup>

  <Target Name="WriteTemplateFiles" BeforeTargets="ValidateProperties">
    <PropertyGroup>
      <AotCompilerPath Condition="'$(TestingWorkloads)' == 'true'">$(MonoAotCrossDir)</AotCompilerPath>
      <AotCompilerPath Condition="'$(TestingWorkloads)' != 'true'">$(MonoAotCrossDir)$(TargetCrossRid)\</AotCompilerPath>
    </PropertyGroup>

    <ItemGroup>
      <_ToolFile Include="$(AotCompilerPath)**" />
      <_ToolFileExcludingSymbols Include="@(_ToolFile)" Condition="'%(Extension)' != '.dwarf' and '%(Extension)' != '.dbg'" />
      <NativeRuntimeAsset Include="@(_ToolFile)" TargetPath="tools/" />

      <_SdkPropsProperties Condition="!$([MSBuild]::IsOsPlatform('Windows'))" Include="ExeSuffix" Value="" />
      <_SdkPropsProperties Condition="$([MSBuild]::IsOsPlatform('Windows'))" Include="ExeSuffix" Value=".exe" />
      <_SdkPropsProperties Include="TargetRid" Value="$(TargetCrossRid)" />
    </ItemGroup>
    <PropertyGroup>
      <_PermissionsFiles>@(_ToolFileExcludingSymbols -> '&lt;File Path=&quot;tools/%(RecursiveDir)%(FileName)%(Extension)&quot; Permission=&quot;755&quot; /&gt;', ' ')</_PermissionsFiles>
    </PropertyGroup>
    <ItemGroup>
      <_PermissionsProperties Include="PermissionsProperties" Value="$(_PermissionsFiles)" />
    </ItemGroup>

    <GenerateFileFromTemplate
      Condition="!$([MSBuild]::IsOsPlatform('Windows'))"
      TemplateFile="Microsoft.NETCore.App.MonoCrossAOT.UnixFilePermissions.xml.in"
      Properties="@(_PermissionsProperties->'%(Identity)=%(Value)')"
      OutputPath="$(IntermediateOutputPath)Microsoft.NETCore.App.MonoCrossAOT.UnixFilePermissions.xml" />
    <GenerateFileFromTemplate
      TemplateFile="Microsoft.NETCore.App.MonoCrossAOT.Sdk.props.in"
      Properties="@(_SdkPropsProperties->'%(Identity)=%(Value)')"
      OutputPath="$(IntermediateOutputPath)$(TargetCrossRid).Sdk.props" />
  </Target>

  <Target Name="ValidateProperties" BeforeTargets="GetFilesToPackage">
    <Error Condition="'$(TargetCrossRid)' == ''" Text="TargetCrossRid not set" />
    <Error Condition="!Exists('$(AotCompilerPath)$(AotCompilerFileName)')" Text="Cross compiler not found in $(AotCompilerPath). MonoAotCrossDir=$(MonoAotCrossDir)" />
  </Target>

  <Import Project="Sdk.targets" Sdk="Microsoft.DotNet.SharedFramework.Sdk" />
  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />
</Project>
