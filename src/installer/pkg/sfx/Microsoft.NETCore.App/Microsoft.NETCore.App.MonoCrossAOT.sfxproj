<Project Sdk="Microsoft.NET.Sdk">
  <Sdk Name="Microsoft.DotNet.SharedFramework.Sdk" />

  <PropertyGroup>
    <SkipValidatePackage>true</SkipValidatePackage>
    <PlatformPackageType>RuntimePack</PlatformPackageType>
    <SharedFrameworkName>Microsoft.NETCore.App.MonoCrossAOT</SharedFrameworkName>
    <OverridePackageId>Microsoft.NETCore.App.Runtime.AOT.$(RuntimeIdentifier).Cross.$(TargetCrossRid)</OverridePackageId>
    <ArchiveName>dotnet-monocrossaot</ArchiveName>
    <SharedFrameworkHostFileNameOverride>monocrossaot</SharedFrameworkHostFileNameOverride>
    <RuntimeIdentifiers>linux-x64;osx-x64;win-x64</RuntimeIdentifiers>
    <GenerateInstallers>false</GenerateInstallers>
    <PublishReadyToRun>false</PublishReadyToRun>
    <HostJsonTargetPath>tools/</HostJsonTargetPath>
    <PermitDllAndExeFilesLackingFileVersion>true</PermitDllAndExeFilesLackingFileVersion>
    <AotCompilerFileName>mono-aot-cross</AotCompilerFileName>
    <AotCompilerFileName Condition="$([MSBuild]::IsOsPlatform('Windows'))">$(AotCompilerFileName).exe</AotCompilerFileName>
  </PropertyGroup>

  <ItemGroup>
    <NativeRuntimeAsset Include="$(IntermediateOutputPath)$(TargetCrossRid).Sdk.props" TargetPath="Sdk/Sdk.props" />
    <NativeRuntimeAsset Condition="!$([MSBuild]::IsOsPlatform('Windows'))" Include="$(IntermediateOutputPath)Microsoft.NETCore.App.MonoCrossAOT.UnixFilePermissions.xml" TargetPath="data/UnixFilePermissions.xml" />
  </ItemGroup>

  <Target Name="WriteTemplateFiles" BeforeTargets="ValidateProperties">
    <PropertyGroup>
      <AotCompilerPath Condition="'$(TestingWorkloads)' == 'true'">$(MonoAotCrossDir)</AotCompilerPath>
      <AotCompilerPath Condition="'$(TestingWorkloads)' != 'true'">$(MonoAotCrossDir)$(TargetCrossRid)\</AotCompilerPath>
    </PropertyGroup>

    <ItemGroup>
      <_ToolFile Include="$(AotCompilerPath)**" />
      <NativeRuntimeAsset Include="@(_ToolFile)" TargetPath="tools/" />

      <_SdkPropsProperties Condition="!$([MSBuild]::IsOsPlatform('Windows'))" Include="ExeSuffix" Value="" />
      <_SdkPropsProperties Condition="$([MSBuild]::IsOsPlatform('Windows'))" Include="ExeSuffix" Value=".exe" />
      <_SdkPropsProperties Include="TargetRid" Value="$(TargetCrossRid)" />
    </ItemGroup>
    <PropertyGroup>
      <_PermissionsFiles>@(_ToolFile -> '&lt;File Path=&quot;tools/%(RecursiveDir)%(FileName)%(Extension)&quot; Permission=&quot;755&quot; /&gt;', ' ')</_PermissionsFiles>
    </PropertyGroup>
    <ItemGroup>
      <_PermissionsProperties Include="PermissionsProperties" Value="$(_PermissionsFiles)" />
    </ItemGroup>

    <GenerateFileFromTemplate
      Condition="!$([MSBuild]::IsOsPlatform('Windows'))"
      TemplateFile="Microsoft.NETCore.App.MonoCrossAOT.UnixFilePermissions.xml.in"
      Properties="@(_PermissionsProperties)"
      OutputPath="$(IntermediateOutputPath)Microsoft.NETCore.App.MonoCrossAOT.UnixFilePermissions.xml" />
    <GenerateFileFromTemplate
      TemplateFile="Microsoft.NETCore.App.MonoCrossAOT.Sdk.props.in"
      Properties="@(_SdkPropsProperties)"
      OutputPath="$(IntermediateOutputPath)$(TargetCrossRid).Sdk.props" />
  </Target>

  <Target Name="ValidateProperties" BeforeTargets="GetFilesToPackage">
    <Error Condition="'$(TargetCrossRid)' == ''" Text="TargetCrossRid not set" />
    <Error Condition="!Exists('$(AotCompilerPath)$(AotCompilerFileName)')" Text="Cross compiler not found in $(AotCompilerPath). MonoAotCrossDir=$(MonoAotCrossDir)" />
  </Target>
</Project>
