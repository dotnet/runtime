<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Required by Common.Targets but not used by publishing projects. -->
  <Target Name="CreateManifestResourceNames" />
  <Target Name="CoreCompile" />

  <!--
    Look through the downloaded artifacts to figure out how to ship them. Creates item groups for
    other types of publishing to use.

    DownloadDirectory is expected to have some directory inside, which then contains a dir for each
    build job name. For example, this nupkg would be found:

      $(DownloadDirectory)IntermediateUnsignedArtifacts\Windows_x64\Shipping\a.nupkg
  -->
  <Target Name="FindDownloadedArtifacts">
    <ItemGroup>
      <DownloadedArtifactFile Include="$(DownloadDirectory)**" />

      <DownloadedSymbolNupkgFile Include="$(DownloadDirectory)**\*.symbols.nupkg" />
      <DownloadedNupkgFile
        Include="$(DownloadDirectory)**\*.nupkg"
        Exclude="@(DownloadedSymbolNupkgFile)" />

      <!-- Add files that are not affected by filtering. -->
      <UploadToBlobStorageFile
        Include="@(DownloadedArtifactFile)"
        Exclude="@(DownloadedSymbolNupkgFile);@(DownloadedNupkgFile)" />

      <!--
        Filter out the RID-specific (Runtime) nupkgs and RID-agnostic nupkgs. RID-specific packages
        are published from every job. RID-agnostic nupkgs are built with the same ID/version by
        every job, so one specific job's outputs must be picked to sign and publish.
      -->

      <!-- RID-specific framework packs. -->
      <RuntimeNupkgFile
        Include="
          $(DownloadDirectory)**\Microsoft.*.Runtime.*.nupkg;
          $(DownloadDirectory)**\Microsoft.*.App.Host.*.nupkg"
        Exclude="@(DownloadedSymbolNupkgFile)" />

      <!-- VS insertion packages, carrying RID-specific installers. -->
      <RuntimeNupkgFile
        Include="$(DownloadDirectory)**\VS.Redist.Common.*.nupkg"
        Exclude="@(DownloadedSymbolNupkgFile)" />

      <!--
        Runtime packages associated with some identity packages. Need to exclude "runtime.native.*"
        because Libraries produces some "runtime.native.Foo" packages with
        "runtime.<rid>.runtime.native.Foo" identity packages.
      -->
      <RuntimeNupkgFile
        Include="$(DownloadDirectory)**\runtime.*.nupkg"
        Exclude="
          $(DownloadDirectory)**\runtime.native.*.nupkg;
          @(DownloadedSymbolNupkgFile)" />

      <!--
        Packages that aren't matched above as RID-specific are considered RID-agnostic. Also include
        the AllConfigurations packages from the Libraries build.
      -->
      <RidAgnosticNupkgToPublishFile
        Include="
          $(DownloadDirectory)*\$(PublishRidAgnosticPackagesFromPlatform)\**\*.nupkg;
          $(DownloadDirectory)*\Libraries_AllConfigurations\**\*.nupkg"
        Exclude="@(RuntimeNupkgFile);@(DownloadedSymbolNupkgFile)" />

      <NupkgToPublishFile Include="@(RuntimeNupkgFile);@(RidAgnosticNupkgToPublishFile)" />

      <UploadToBlobStorageFile Include="@(NupkgToPublishFile)" />

      <!--
        Assuming all symbol packages ship and can be found by turning .nupkg => .symbols.nupkg, find
        them. Don't check for missing symbol packages here: some nupkgs don't have them for valid
        reasons, such as the VS insertion packages that transport MSIs. Symbol package validation
        will check for symbol completeness with file-by-file granularity rather than looking for
        missing symbols.nupkg files: https://github.com/dotnet/arcade/issues/2499.

        Handles several conventions:
        * NonShipping packages have symbol nupkgs that are Shipping.
        * Shipping packages have symbol packages in a "symbols" subdirectory.
      -->
      <PotentialSymbolNupkgToPublishFile
        Include="
          @(NupkgToPublishFile->Replace('\NonShipping\', '\Shipping\')->Replace('.nupkg', '.symbols.nupkg'));
          @(NupkgToPublishFile->Replace('\Shipping\', '\Shipping\symbols\')->Replace('.nupkg', '.symbols.nupkg'))" />

      <SymbolNupkgToPublishFile
        Include="@(PotentialSymbolNupkgToPublishFile)"
        Condition="Exists('%(Identity)')" />

      <UploadToBlobStorageFile Include="@(SymbolNupkgToPublishFile)" />
    </ItemGroup>

    <Error
      Condition="'@(SymbolNupkgToPublishFile)' == ''"
      Text="No symbol packages found." />

    <!--
      Duplicate RuntimeNupkgFile items mean artifact upload will fail, but only after another hour
      of signing. Detect this early. It's possible to automatically "fix" this with Distinct(),
      however the patterns should be fairly specific: this is likely a build infra mistake that
      should be corrected.
    -->
    <Error
      Text="Duplicate RuntimeNupkgFile entries for: %(RuntimeNupkgFile.Identity)"
      Condition="@(RuntimeNupkgFile->Count()) &gt; 1" />
  </Target>

  <Import Project="..\Directory.Build.targets" />
</Project>