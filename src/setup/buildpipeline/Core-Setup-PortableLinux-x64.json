{
  "build": [
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "git checkout",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "git",
        "arguments": "checkout $(SourceVersion)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Create host machine tools sandbox",
      "timeoutInMinutes": 0,
      "task": {
        "id": "5bfb729a-a7c8-4a78-a7c3-8d717bb7c13c",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "SourceFolder": "pkg",
        "Contents": "**",
        "TargetFolder": "$(DockerHost_Sandbox)",
        "CleanTargetFolder": "false",
        "OverWrite": "false",
        "flattenFolders": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Initialize tools for host machine",
      "timeoutInMinutes": 0,
      "task": {
        "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptPath": "$(DockerHost_Sandbox)/init-tools.sh",
        "args": "",
        "disableAutoCwd": "false",
        "cwd": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Initialize Docker",
      "timeoutInMinutes": 0,
      "task": {
        "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptPath": "$(DockerHost_ToolsDirectory)/scripts/docker/init-docker.sh",
        "args": "$(DockerImageName)",
        "disableAutoCwd": "false",
        "cwd": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run build in Docker container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptPath": "scripts/dockerrun-as-current-user.sh",
        "args": "-t --rm --sig-proxy=true --name $(DockerContainerName) -v $(Build.SourcesDirectory):/opt/code -w /opt/code -e CONNECTION_STRING -e PUBLISH_TO_AZURE_BLOB $(DockerImageName) /bin/bash -c \"HOME=/opt/code; git clean -X -d -f; ./build.sh $(BuildArguments)\"",
        "disableAutoCwd": "false",
        "cwd": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Copy built Portable binaries to staging directory",
      "timeoutInMinutes": 0,
      "task": {
        "id": "5bfb729a-a7c8-4a78-a7c3-8d717bb7c13c",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "SourceFolder": "$(Build.SourcesDirectory)/artifacts/linux-x64/intermediate/sharedFrameworkPublish",
        "Contents": "**",
        "TargetFolder": "$(Build.StagingDirectory)/sharedFrameworkPublish",
        "CleanTargetFolder": "false",
        "OverWrite": "false",
        "flattenFolders": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Build Ubuntu.14.04 docker image",
      "timeoutInMinutes": 0,
      "task": {
        "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptPath": "scripts/dockerbuild.sh",
        "args": "-d $(Build.SourcesDirectory)/scripts/docker/ubuntu.14.04 -t ubuntu.14.04-coresetup",
        "disableAutoCwd": "false",
        "cwd": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Build Debian Installer in Ubuntu.14.04 docker container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptPath": "scripts/dockerrun-as-current-user.sh",
        "args": "--rm $(DockerBuildEnvironmentVariables) -e CLI_NUGET_API_KEY -e CLI_NUGET_FEED_URL -e CLI_NUGET_SYMBOLS_FEED_URL -v $(Build.SourcesDirectory):/opt/code/ -v $(Build.StagingDirectory)/sharedFrameworkPublish/:/opt/sharedFrameworkPublish/ -w /opt/code ubuntu.14.04-coresetup /bin/bash -c \"HOME=/opt/code; git clean -X -d -f; ./build.sh --skip-prereqs --configuration Release --targets $(InstallerOnlyBuildArguments)\"",
        "disableAutoCwd": "false",
        "cwd": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Build Ubuntu.16.04 docker image",
      "timeoutInMinutes": 0,
      "task": {
        "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptPath": "scripts/dockerbuild.sh",
        "args": "-d $(Build.SourcesDirectory)/scripts/docker/ubuntu.16.04 -t ubuntu.16.04-coresetup",
        "disableAutoCwd": "false",
        "cwd": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Build Debian Installer in Ubuntu.16.04 docker container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptPath": "scripts/dockerrun-as-current-user.sh",
        "args": "--rm $(DockerBuildEnvironmentVariables) -v $(Build.SourcesDirectory):/opt/code/ -v $(Build.StagingDirectory)/sharedFrameworkPublish/:/opt/sharedFrameworkPublish/ -w /opt/code ubuntu.16.04-coresetup /bin/bash -c \"HOME=/opt/code; git clean -X -d -f; ./build.sh --skip-prereqs --configuration Release --targets $(InstallerOnlyBuildArguments)\"",
        "disableAutoCwd": "false",
        "cwd": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Build Ubuntu.16.10 docker image",
      "timeoutInMinutes": 0,
      "task": {
        "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptPath": "scripts/dockerbuild.sh",
        "args": "-d $(Build.SourcesDirectory)/scripts/docker/ubuntu.16.10 -t ubuntu.16.10-coresetup",
        "disableAutoCwd": "false",
        "cwd": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Build Debian Installer in Ubuntu 16.10 docker container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptPath": "scripts/dockerrun-as-current-user.sh",
        "args": "--rm $(DockerBuildEnvironmentVariables) -v $(Build.SourcesDirectory):/opt/code/ -v $(Build.StagingDirectory)/sharedFrameworkPublish/:/opt/sharedFrameworkPublish/ -w /opt/code ubuntu.16.10-coresetup /bin/bash -c \"HOME=/opt/code; git clean -X -d -f; ./build.sh --skip-prereqs --configuration Release --targets $(InstallerOnlyBuildArguments)\"",
        "disableAutoCwd": "false",
        "cwd": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Build Debian.8 docker image ",
      "timeoutInMinutes": 0,
      "task": {
        "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptPath": "scripts/dockerbuild.sh",
        "args": "-d $(Build.SourcesDirectory)/scripts/docker/debian.8 -t debian.8-coresetup",
        "disableAutoCwd": "false",
        "cwd": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Build Debian Installer in Debian.8 docker container",
      "timeoutInMinutes": 0,
      "task": {
        "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
        "versionSpec": "2.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptPath": "scripts/dockerrun-as-current-user.sh",
        "args": "--rm $(DockerBuildEnvironmentVariables) -v $(Build.SourcesDirectory):/opt/code/ -v $(Build.StagingDirectory)/sharedFrameworkPublish/:/opt/sharedFrameworkPublish/ -w /opt/code debian.8-coresetup /bin/bash -c \"HOME=/opt/code; git clean -X -d -f; ./build.sh --skip-prereqs --configuration Release --targets $(InstallerOnlyBuildArguments)\"",
        "disableAutoCwd": "false",
        "cwd": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Cleanup Docker",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "perl",
        "arguments": "$(DockerHost_ToolsDirectory)/scripts/docker/cleanup-docker.sh",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Copy Publish Artifact: Build Logs",
      "timeoutInMinutes": 0,
      "task": {
        "id": "1d341bb0-2106-458c-8422-d00bcea6512a",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "CopyRoot": "",
        "Contents": "**/*.log",
        "ArtifactName": "Build Logs",
        "ArtifactType": "Container",
        "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Cleanup VSTS Agent",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(DockerHost_ToolsDirectory)/msbuild.sh",
        "arguments": "cleanupagent.proj /p:AgentDirectory=$(Agent.HomeDirectory) /p:DoClean=$(PB_CleanAgent)",
        "workingFolder": "$(DockerHost_ToolsDirectory)/scripts/vstsagent/",
        "failOnStandardError": "false"
      }
    }
  ],
  "options": [
    {
      "enabled": false,
      "definition": {
        "id": "5bc3cfb7-6b54-4a4b-b5d2-a3905949f8a6"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "7c555368-ca64-4199-add6-9ebaf0b0137d"
      },
      "inputs": {
        "multipliers": "[]",
        "parallel": "false",
        "continueOnError": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
      },
      "inputs": {
        "workItemType": "4777",
        "assignToRequestor": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "57578776-4c22-4526-aeb0-86b6da17ee9c"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    }
  ],
  "variables": {
    "BuildConfiguration": {
      "value": "Release",
      "allowOverride": true
    },
    "BuildArguments": {
      "value": "--skip-prereqs --configuration $(BuildConfiguration) --targets Default $(PB_PortableBuild)",
      "allowOverride": true
    },
    "DockerImageName": {
      "value": "microsoft/dotnet-buildtools-prereqs:rhel7_prereqs_2"
    },
    "DockerContainerName": {
      "value": "core-setup-portablelinux-$(Build.BuildId)",
      "allowOverride": true
    },
    "CONNECTION_STRING": {
      "value": "PassedViaPipeBuild"
    },
    "PUBLISH_TO_AZURE_BLOB": {
      "value": "true",
      "allowOverride": true
    },
    "NUGET_FEED_URL": {
      "value": "https://dotnet.myget.org/F/dotnet-core/api/v2/package"
    },
    "NUGET_API_KEY": {
      "value": "PassedViaPipeBuild"
    },
    "GITHUB_PASSWORD": {
      "value": "PassedViaPipeBuild"
    },
    "PB_CleanAgent": {
      "value": "true"
    },
    "PB_PortableBuild": {
      "value": "",
      "allowOverride": true
    },
    "DockerHost_Sandbox": {
      "value": "$(Build.StagingDirectory)/HostSandbox"
    },
    "DockerHost_ToolsDirectory": {
      "value": "$(DockerHost_Sandbox)/Tools"
    },
    "NUGET_SYMBOLS_FEED_URL": {
      "value": "https://dotnet.myget.org/F/dotnet-core/symbols/api/v2/package"
    },
    "REPO_ID": {
      "value": "PassedViaPipeBuild"
    },
    "REPO_USER": {
      "value": "dotnet"
    },
    "REPO_PASS": {
      "value": "PassedViaPipeBuild"
    },
    "REPO_SERVER": {
      "value": "azure-apt-cat.cloudapp.net"
    },
    "DockerBuildEnvironmentVariables": {
      "value": "-e PORTABLE_BUILD_STAGING_LOCATION=/opt/sharedFrameworkPublish -e CONNECTION_STRING -e PUBLISH_TO_AZURE_BLOB -e REPO_ID -e REPO_USER -e REPO_PASS -e REPO_SERVER -e NUGET_FEED_URL -e NUGET_API_KEY -e NUGET_SYMBOLS_FEED_URL -e GITHUB_PASSWORD"
    },
    "InstallerOnlyBuildArguments": {
      "value": "Init,Prepare,InitPackage,GenerateVersionBadge,GenerateInstaller,TestInstaller,PublishInstallers"
    },
    "CLI_NUGET_API_KEY": {
      "value": "PassedViaPipeBuild"
    },
    "CLI_NUGET_FEED_URL": {
      "value": "https://dotnet.myget.org/F/cli-deps/api/v2/package"
    },
    "CLI_NUGET_SYMBOLS_FEED_URL": {
      "value": "https://dotnet.myget.org/F/cli-deps/symbols/api/v2/package"
    }
  },
  "demands": [
    "Agent.OS -equals linux"
  ],
  "retentionRules": [
    {
      "branches": [
        "+refs/heads/*"
      ],
      "artifacts": [],
      "artifactTypesToDelete": [
        "FilePath",
        "SymbolStore"
      ],
      "daysToKeep": 7,
      "minimumToKeep": 1,
      "deleteBuildRecord": true,
      "deleteTestResults": true
    }
  ],
  "buildNumberFormat": "$(Date:yyyMMdd)$(Rev:.r)",
  "jobAuthorizationScope": "projectCollection",
  "jobTimeoutInMinutes": 90,
  "jobCancelTimeoutInMinutes": 5,
  "badgeEnabled": true,
  "repository": {
    "properties": {
      "connectedServiceId": "f4c31735-42d2-4c3a-bc47-7ac06fd0dccc",
      "apiUrl": "https://api.github.com/repos/dotnet/core-setup",
      "branchesUrl": "https://api.github.com/repos/dotnet/core-setup/branches",
      "cloneUrl": "https://github.com/dotnet/core-setup.git",
      "refsUrl": "https://api.github.com/repos/dotnet/core-setup/git/refs",
      "gitLfsSupport": "false",
      "skipSyncSource": "false",
      "fetchDepth": "0",
      "cleanOptions": "0"
    },
    "id": "https://github.com/dotnet/core-setup.git",
    "type": "GitHub",
    "name": "dotnet/core-setup",
    "url": "https://github.com/dotnet/core-setup.git",
    "defaultBranch": "master",
    "clean": "true",
    "checkoutSubmodules": false
  },
  "quality": "definition",
  "queue": {
    "id": 36,
    "name": "DotNet-Build",
    "pool": {
      "id": 39,
      "name": "DotNet-Build"
    }
  },
  "id": 4573,
  "name": "Core-Setup-PortableLinux-x64",
  "path": "\\",
  "type": "build",
  "project": {
    "id": "0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "name": "DevDiv",
    "description": "Visual Studio and DevDiv team project for git source code repositories.  Work items will be added for Adams, Dev14 work items are tracked in vstfdevdiv.  ",
    "url": "https://devdiv.visualstudio.com/DefaultCollection/_apis/projects/0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "state": "wellFormed",
    "revision": 418097642
  }
}