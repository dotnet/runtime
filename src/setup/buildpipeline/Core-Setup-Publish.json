{
  "build": [
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Install Signing Plugin",
      "timeoutInMinutes": 0,
      "condition": "and(succeeded(), in(variables.PB_SignType, 'real', 'test'))",
      "task": {
        "id": "30666190-6959-11e5-9f96-f56098202fef",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "signType": "real",
        "zipSources": "true",
        "version": "",
        "feedSource": "https://devdiv.pkgs.visualstudio.com/DefaultCollection/_packaging/MicroBuildToolset/nuget/v3/index.json"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": false,
      "displayName": "Cleanup previous build if present",
      "timeoutInMinutes": 0,
      "task": {
        "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptType": "inlineScript",
        "scriptName": "",
        "arguments": "-path \"$(PB_SourcesDirectory)\"",
        "workingFolder": "",
        "inlineScript": "param($path)\n\nif (Test-Path $path){\n    # this will print out an error each time a file can't be deleted.\n    Remove-Item -Recurse -Force $path\n }\n\nif (Test-Path $path){\n    # in case vbcs is still alive\n     $p = Get-Process -Name \"VBCS\"\n     Stop-Process -InputObject $p\n }",
        "failOnStandardError": "true"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": false,
      "displayName": "Cleanup previous tools source if present",
      "timeoutInMinutes": 0,
      "task": {
        "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptType": "inlineScript",
        "scriptName": "",
        "arguments": "-path \"$(PB_VsoToolsDir)\"",
        "workingFolder": "",
        "inlineScript": "param($path)\n\nif (Test-Path $path){\n    # this will print out an error each time a file can't be deleted.\n    Remove-Item -Recurse -Force $path\n }\n\nif (Test-Path $path){\n    # in case vbcs is still alive\n     $p = Get-Process -Name \"VBCS\"\n     Stop-Process -InputObject $p\n }",
        "failOnStandardError": "true"
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": false,
      "displayName": "Cleanup previous tools if present",
      "timeoutInMinutes": 0,
      "task": {
        "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptType": "inlineScript",
        "scriptName": "",
        "arguments": "-path \"$(PB_ToolsRoot)\"",
        "workingFolder": "",
        "inlineScript": "param($path)\n\nif (Test-Path $path){\n    # this will print out an error each time a file can't be deleted.\n    Remove-Item -Recurse -Force $path\n }\n\nif (Test-Path $path){\n    # in case vbcs is still alive\n     $p = Get-Process -Name \"VBCS\"\n     Stop-Process -InputObject $p\n }",
        "failOnStandardError": "true"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run script $(VS140COMNTOOLS)\\VsDevCmd.bat",
      "timeoutInMinutes": 0,
      "task": {
        "id": "bfc8bf76-e7ac-4a8c-9a55-a944a9f632fd",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(VS140COMNTOOLS)\\VsDevCmd.bat",
        "arguments": "",
        "modifyEnvironment": "true",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Clone tools",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "git",
        "arguments": "clone $(PB_VsoToolsRepo) $(PB_VsoToolsDir)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Fetch symbol signing tooling",
      "timeoutInMinutes": 0,
      "task": {
        "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "scriptType": "filePath",
        "scriptName": "$(PB_VsoToolsDir)\\scripts\\DotNet-Trusted-Publish\\Fetch-Tools.ps1",
        "arguments": "$(PB_ToolsRoot)",
        "workingFolder": "",
        "inlineScript": "",
        "failOnStandardError": "true"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Clone repo",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "git",
        "arguments": "clone $(PB_VsoRepoUrl) $(PB_SourcesDirectory)",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "git checkout",
      "timeoutInMinutes": 0,
      "task": {
        "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "git",
        "arguments": "checkout $(SourceVersion)",
        "workingFolder": "$(PB_SourcesDirectory)",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Run init-tools.cmd",
      "timeoutInMinutes": 0,
      "task": {
        "id": "bfc8bf76-e7ac-4a8c-9a55-a944a9f632fd",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "$(PB_SourcesDirectory)\\init-tools.cmd",
        "arguments": "",
        "modifyEnvironment": "false",
        "workingFolder": "$(PB_SourcesDirectory)",
        "failOnStandardError": "false"
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Initialize tooling",
      "timeoutInMinutes": 0,
      "task": {
        "id": "c6c4c611-aa2e-4a33-b606-5eaba2196824",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "solution": "$(PB_SourcesDirectory)\\build.proj",
        "platform": "$(PB_TargetArchitecture)",
        "configuration": "$(BuildConfiguration)",
        "msbuildArguments": "/t:BatchRestorePackages;BuildCustomTasks",
        "clean": "false",
        "maximumCpuCount": "false",
        "restoreNugetPackages": "false",
        "logProjectEvents": "false",
        "createLogFile": "false",
        "msbuildLocationMethod": "version",
        "msbuildVersion": "Latest",
        "msbuildArchitecture": "x64",
        "msbuildLocation": ""
      }
    },
    {
      "enabled": true,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Publish",
      "condition": "and(succeeded(), ne(variables.PB_PublishType, ''))",
      "timeoutInMinutes": 0,
      "task": {
        "id": "c6c4c611-aa2e-4a33-b606-5eaba2196824",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "solution": "$(PB_SourcesDirectory)\\publish\\publish.proj",
        "platform": "$(PB_TargetArchitecture)",
        "configuration": "$(BuildConfiguration)",
        "msbuildArguments": "/p:Configuration=$(BuildConfiguration) $(PB_CommonMSBuildArgs) /p:SignType=$(PB_SignType) /p:NuGetFeedUrl=$(NUGET_FEED_URL) /p:NuGetSymbolsFeedUrl=$(NUGET_SYMBOLS_FEED_URL) /p:NuGetApiKey=$(NUGET_API_KEY) /p:AzureAccountName=$(PB_AzureAccountName) /p:ContainerName=$(PB_ContainerName) /p:AzureAccessToken=$(PB_AzureAccessToken) /p:ChecksumAzureAccountName=$(PB_ChecksumAzureAccountName) /p:ChecksumContainerName=$(PB_ChecksumContainerName) /p:ChecksumAzureAccessToken=$(PB_ChecksumAzureAccessToken) /p:PackagesUrl=$(PB_PackagesUrl) /p:SymbolPackagesUrl=$(PB_SymbolPackagesUrl) /p:TransportFeedAccessToken=$(PB_TransportFeedAccessToken) /p:OfficialPublish=true /p:GitHubUser=$(PB_GitHubUser) /p:GitHubEmail=$(PB_GitHubEmail) /p:GitHubAuthToken=$(GITHUB_PASSWORD) /p:VersionsRepoOwner=$(PB_VersionsRepoOwner) /p:VersionsRepo=$(PB_VersionsRepo) /p:VersionsRepoPath=build-info/dotnet/$(PB_RepoName)/$(SourceBranch) /p:Finalize=true /p:DotNetToolDir=$(DotNetToolDir) /p:EmbedIndexToolDir=$(EmbedIndexToolDir) /flp:v=detailed;LogFile=$(PB_SourcesDirectory)\\publish.log",
        "clean": "false",
        "maximumCpuCount": "false",
        "restoreNugetPackages": "false",
        "logProjectEvents": "false",
        "createLogFile": "false",
        "msbuildLocationMethod": "version",
        "msbuildVersion": "Latest",
        "msbuildArchitecture": "x64",
        "msbuildLocation": ""
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": true,
      "displayName": "Clean Up Agent",
      "timeoutInMinutes": 0,
      "task": {
        "id": "c6c4c611-aa2e-4a33-b606-5eaba2196824",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "solution": "$(PB_SourcesDirectory)\\Tools\\scripts\\vstsagent\\cleanupagent.proj",
        "platform": "$(PB_TargetArchitecture)",
        "configuration": "$(BuildConfiguration)",
        "msbuildArguments": "/p:AgentDirectory=$(Agent.HomeDirectory) /p:DoClean=$(PB_CleanAgent)",
        "clean": "false",
        "maximumCpuCount": "false",
        "restoreNugetPackages": "false",
        "logProjectEvents": "false",
        "createLogFile": "false",
        "msbuildLocationMethod": "version",
        "msbuildVersion": "latest",
        "msbuildArchitecture": "x64",
        "msbuildLocation": ""
      }
    },
    {
      "enabled": true,
      "continueOnError": true,
      "alwaysRun": false,
      "displayName": "Perform Cleanup Tasks",
      "timeoutInMinutes": 0,
      "task": {
        "id": "521a94ea-9e68-468a-8167-6dcf361ea776",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {}
    },
    {
      "enabled": false,
      "continueOnError": false,
      "alwaysRun": false,
      "displayName": "Publish Build Artifacts",
      "timeoutInMinutes": 0,
      "task": {
        "id": "bfc8bf76-e7ac-4a8c-9a55-a944a9f632fd",
        "versionSpec": "1.*",
        "definitionType": "task"
      },
      "inputs": {
        "filename": "build.cmd",
        "arguments": "-Configuration $(BuildConfiguration) -Targets Prepare,Publish",
        "modifyEnvironment": "false",
        "workingFolder": "",
        "failOnStandardError": "false"
      }
    }
  ],
  "options": [
    {
      "enabled": false,
      "definition": {
        "id": "5bc3cfb7-6b54-4a4b-b5d2-a3905949f8a6"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "7c555368-ca64-4199-add6-9ebaf0b0137d"
      },
      "inputs": {
        "multipliers": "[]",
        "parallel": "false",
        "continueOnError": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
      },
      "inputs": {
        "workItemType": "4777",
        "assignToRequestor": "true",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "57578776-4c22-4526-aeb0-86b6da17ee9c"
      },
      "inputs": {
        "additionalFields": "{}"
      }
    }
  ],
  "variables": {
    "BuildConfiguration": {
      "value": "Release",
      "allowOverride": true
    },
    "NUGET_FEED_URL": {
      "value": "https:%2F%2Fdotnet.myget.org/F/dotnet-core/api/v2/package"
    },
    "NUGET_API_KEY": {
      "value": null,
      "isSecret": true
    },
    "GITHUB_PASSWORD": {
      "value": null,
      "isSecret": true
    },
    "NUGET_SYMBOLS_FEED_URL": {
      "value": "https:%2F%2Fdotnet.myget.org/F/dotnet-core/symbols/api/v2/package"
    },
    "PB_SourcesDirectory": {
      "value": "$(Build.SourcesDirectory)\\core-setup"
    },
    "PB_VsoRepoUrl": {
      "value": "--branch $(SourceBranch) https://$(PB_VsoAccountName):$(PB_VsoPassword)@devdiv.visualstudio.com/DevDiv/_git/DotNet-Core-Setup-Trusted"
    },
    "PB_AzureAccountName": {
      "value": "dotnetcli"
    },
    "PB_ContainerName": {
      "value": "dotnet"
    },
    "PB_AzureAccessToken": {
      "value": null,
      "isSecret": true
    },
    "PB_TransportFeedAccountName": {
      "value": "dotnetfeed"
    },
    "PB_TransportFeedContainerName": {
      "value": "dotnet-core"
    },
    "PB_TransportFeedAccessToken": {
      "value": null,
      "isSecret": true
    },
    "PB_PackagesUrl": {
      "value": "https://$(PB_TransportFeedAccountName).blob.core.windows.net/$(PB_TransportFeedContainerName)/index.json"
    },
    "PB_SymbolPackagesUrl": {
      "value": "https://$(PB_TransportFeedAccountName).blob.core.windows.net/$(PB_TransportFeedContainerName)/index.json"
    },
    "PB_ChecksumAzureAccountName": {
      "value": "dotnetclichecksums"
    },
    "PB_ChecksumContainerName": {
      "value": "dotnet"
    },
    "PB_ChecksumAzureAccessToken": {
      "value": null,
      "isSecret": true
    },
    "PB_VsoAccountName": {
      "value": "dn-bot"
    },
    "PB_VsoPassword": {
      "value": null,
      "isSecret": true
    },
    "SourceVersion": {
      "value": "HEAD"
    },
    "PB_CommonMSBuildArgs": {
      "value": "/p:ConfigurationGroup=$(BuildConfiguration) /p:TargetArchitecture=$(PB_TargetArchitecture)"
    },
    "OfficialBuildId": {
      "value": "$(Build.BuildNumber)"
    },
    "PB_TargetArchitecture": {
      "value": "x64",
      "allowOverride": true
    },
    "PB_GitHubUser": {
      "value": "dotnet-build-bot"
    },
    "PB_VersionsRepoOwner": {
      "value": "dotnet"
    },
    "PB_VersionsRepo": {
      "value": "versions"
    },
    "PB_RepoName": {
      "value": "core-setup"
    },
    "PB_GitHubEmail": {
      "value": "dotnet-build-bot@microsoft.com"
    },
    "PB_CleanAgent": {
      "value": "true"
    },
    "TeamName": {
      "value": "DotNetCore"
    },
    "PB_VsoToolsRepo": {
      "value": "https://$(PB_VsoAccountName):$(PB_VsoPassword)@devdiv.visualstudio.com/DevDiv/_git/DotNet-BuildPipeline"
    },
    "PB_VsoToolsDir": {
      "value": "$(Build.SourcesDirectory)\\toolsSource"
    },
    "PB_ToolsRoot": {
      "value": "$(Build.SourcesDirectory)\\tools"
    },
    "SymbolCatalogCertificateId": {
      "value": "400"
    }
  },
  "demands": [
    "Agent.OS -equals Windows_NT",
    "WindowsKit",
  ],
  "retentionRules": [
    {
      "branches": [
        "+refs/heads/*"
      ],
      "artifacts": [],
      "artifactTypesToDelete": [
        "FilePath",
        "SymbolStore"
      ],
      "daysToKeep": 2,
      "minimumToKeep": 1,
      "deleteBuildRecord": true,
      "deleteTestResults": true
    }
  ],
  "buildNumberFormat": "$(date:yyyyMMdd)$(rev:-rr)",
  "jobAuthorizationScope": "projectCollection",
  "jobTimeoutInMinutes": 120,
  "jobCancelTimeoutInMinutes": 5,
  "badgeEnabled": true,
  "repository": {
    "properties": {
      "labelSources": "0",
      "reportBuildStatus": "true",
      "fetchDepth": "0",
      "gitLfsSupport": "false",
      "skipSyncSource": "true",
      "cleanOptions": "3",
      "labelSourcesFormat": "$(build.buildNumber)",
      "checkoutNestedSubmodules": "false"
    },
    "id": "c19ea379-feb7-4ca5-8f7f-5f2b5095ea62",
    "type": "TfsGit",
    "name": "DotNet-Core-Setup-Trusted",
    "url": "https://devdiv.visualstudio.com/DevDiv/_git/DotNet-Core-Setup-Trusted",
    "defaultBranch": "refs/heads/master",
    "clean": "false",
    "checkoutSubmodules": false
  },
  "processParameters": {},
  "quality": "definition",
  "queue": {
    "id": 36,
    "name": "DotNet-Build",
    "pool": {
      "id": 39,
      "name": "DotNet-Build"
    }
  },
  "id": 6301,
  "name": "Core-Setup-Publish",
  "url": "https://devdiv.visualstudio.com/DefaultCollection/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_apis/build/Definitions/6301",
  "path": "\\",
  "type": "build",
  "project": {
    "id": "0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "name": "DevDiv",
    "description": "Visual Studio and DevDiv team project for git source code repositories.  Work items will be added for Adams, Dev14 work items are tracked in vstfdevdiv.  ",
    "url": "https://devdiv.visualstudio.com/DefaultCollection/_apis/projects/0bdbc590-a062-4c3f-b0f6-9383f67865ee",
    "state": "wellFormed",
    "revision": 418097676
  }
}
