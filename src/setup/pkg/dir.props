<Project ToolsVersion="12.0" DefaultTargets="Build" InitialTargets="ValidateArgs" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--
    $(OS) is set to Unix/Windows_NT. This comes from an environment variable on Windows and MSBuild on Unix.
  -->
  <PropertyGroup>
    <!-- Temp change to make OS X build behave as a Linux build -->
    <OsEnvironment Condition="'$(OsEnvironment)'=='' AND '$(OS)'=='OSX'">Unix</OsEnvironment>
    <OsEnvironment Condition="'$(OsEnvironment)'==''">$(OS)</OsEnvironment>
  </PropertyGroup>
  <PropertyGroup>
    <ProjectDir>$(MSBuildThisFileDirectory)</ProjectDir>

    <!-- Output directories -->
    <BinDir Condition="'$(BinDir)'==''">$(ProjectDir)bin/</BinDir>
    <TestWorkingDir Condition="'$(TestWorkingDir)'==''">$(BinDir)tests/</TestWorkingDir>
    <PackagesOutDir Condition="'$(PackagesOutDir)'==''">$(BinDir)packages/</PackagesOutDir>
    <SymbolPackagesOutDir Condition="'$(SymbolPackagesOutDir)'==''">$(PackagesOutDir)</SymbolPackagesOutDir>

    <!-- Input Directories -->
    <PackagesDir Condition="'$(PackagesDir)'==''">$(ProjectDir)packages/</PackagesDir>
    <ToolRuntimePath Condition="'$(ToolRuntimePath)'==''">$(ProjectDir)Tools/</ToolRuntimePath>
    <ToolsDir Condition="'$(UseToolRuntimeForToolsDir)'=='true'">$(ToolRuntimePath)</ToolsDir>
    <ToolsDir Condition="'$(ToolsDir)'==''">$(ProjectDir)Tools/</ToolsDir>
    <BuildToolsTaskDir Condition="'$(BuildToolsTargets45)' == 'true' OR '$(MSBuildRuntimeType)' != 'Core'">$(ToolsDir)net45/</BuildToolsTaskDir>
    <PackagingTaskDir Condition="'$(BuildToolsTaskDir)' != ''">$(BuildToolsTaskDir)</PackagingTaskDir>
    <UseRoslynCompilers Condition="'$(UseRoslynCompilers)'=='' and '$(OSEnvironment)'!='Windows_NT'">false</UseRoslynCompilers>
  </PropertyGroup>

  <PropertyGroup>
    <BaseOutputPath Condition="'$(BaseOutputPath)'==''">$(BinDir)</BaseOutputPath>
  </PropertyGroup>

  <Import Project="version.props" Condition="Exists('version.props')" />

  <PropertyGroup>
    <PackageOutputPath>$(PackagesOutDir)</PackageOutputPath>
    <SymbolPackageOutputPath>$(SymbolPackagesOutDir)</SymbolPackageOutputPath>
    <RuntimeIdGraphDefinitionFile>$(ProjectDir)packages\Microsoft.NETCore.Platforms\1.2.0-beta-24822-03\runtime.json</RuntimeIdGraphDefinitionFile>
    <PackageLicenseFile>$(ProjectDir)projects/dotnet_library_license.txt</PackageLicenseFile>
    <PackageThirdPartyNoticesFile>$(ProjectDir)projects/ThirdPartyNotices.txt</PackageThirdPartyNoticesFile>
    <PackageDescriptionFile>$(ProjectDir)projects/descriptions.json</PackageDescriptionFile>
    <!-- This link should be updated for each release milestone, currently this points to 1.0.0 -->
    <ReleaseNotes>https://go.microsoft.com/fwlink/?LinkID=799417</ReleaseNotes>
    <ProjectUrl>https://dot.net</ProjectUrl>
    <PackagePlatform Condition="'$(PackagePlatform)' == ''">$(Platform)</PackagePlatform>
    <PackagePlatform Condition="'$(PackagePlatform)' == 'amd64'">x64</PackagePlatform>
  </PropertyGroup>

  <!-- Add required legal files to packages -->
  <ItemGroup Condition="'$(MSBuildProjectExtension)' == '.pkgproj'">
    <File Condition="Exists('$(PackageLicenseFile)')"
          Include="$(PackageLicenseFile)" >
      <SkipPackageFileCheck>true</SkipPackageFileCheck>
    </File>
    <File Condition="Exists('$(PackageThirdPartyNoticesFile)')"
          Include="$(PackageThirdPartyNoticesFile)" >
      <SkipPackageFileCheck>true</SkipPackageFileCheck>
    </File>
  </ItemGroup>

  <PropertyGroup>
    <PreReleaseSuffix></PreReleaseSuffix>
    <PreReleaseSuffix Condition="'$(EnsureStableVersion)'=='false'">-$(PreReleaseLabel)-$(BuildNumberMajor)-$(BuildNumberMinor)</PreReleaseSuffix>
    <HostPolicyFullVersion>$(HostPolicyVersion)$(PreReleaseSuffix)</HostPolicyFullVersion>
    <HostResolverFullVersion>$(HostResolverVersion)$(PreReleaseSuffix)</HostResolverFullVersion>
    <HostFullVersion>$(HostVersion)$(PreReleaseSuffix)</HostFullVersion>
  </PropertyGroup>

  <Import Project="$(ToolsDir)Build.Common.props" Condition="Exists('$(ToolsDir)Build.Common.props')" />

  <ItemGroup>
    <NuGetSource Include="https:%2F%2Fdotnet.myget.org/F/dotnet-core-dev-eng/api/v3/index.json" />
    <NuGetSource Include="https:%2F%2Fdotnet.myget.org/F/dotnet-core/api/v3/index.json" />
    <!-- needed for Microsoft.DiaSymReader.Native, potentially find a better feed -->
    <NuGetSource Include="https:%2F%2Fapi.nuget.org/v3/index.json" />
  </ItemGroup>

  <PropertyGroup>
    <DotNetTool Condition="'$(DotNetTool)' == '' and '$(OsEnvironment)'!='Unix'">$(DotnetCliPath)dotnet.exe</DotNetTool>
    <DotNetTool Condition="'$(DotNetTool)' == '' and '$(OsEnvironment)'=='Unix'">$(DotnetCliPath)dotnet</DotNetTool>
    <DotNetRestoreCommand>"$(DotNetTool)" restore</DotNetRestoreCommand>
    <DotNetRestoreCommand>$(DotNetRestoreCommand) --packages "$(PackagesDir.TrimEnd('/\'.ToCharArray()))"</DotNetRestoreCommand>
    <DotNetRestoreCommand>$(DotNetRestoreCommand) @(NuGetSource->'--source %(Identity)', ' ')</DotNetRestoreCommand>
    <DnuRestoreCommand>$(DotNetRestoreCommand)</DnuRestoreCommand>
  </PropertyGroup>

  <Target Name="ValidateArgs" Condition="'$(CLIBuildVersion)'==''">
    <Error Condition="'$(EnsureStableVersion)'==''" Text="EnsureStableVersion is undefined" />
    <Error Condition="'$(HostPolicyVersion)'==''" Text="HostPolicyVersion is undefined" />
    <Error Condition="'$(HostResolverVersion)'==''" Text="HostResolverVersion is undefined" />
    <Error Condition="'$(HostVersion)'==''" Text="HostVersion is undefined" />
  </Target>

  <Target Name="ValidatePreReleaseStrings" Condition="'$(EnsureStableVersion)'=='false'">
    <Error Condition="'$(PreReleaseLabel)'==''" Text="PreReleaseLabel is undefined" />
    <Error Condition="'$(BuildNumberMajor)'==''" Text="BuildNumberMajor is undefined" />
    <Error Condition="'$(BuildNumberMinor)'==''" Text="BuildNumberMinor is undefined" />
  </Target>

</Project>
