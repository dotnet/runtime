<Project>

  <PropertyGroup>
    <!--
      Windows arm/arm64 jobs don't have MSIs to sign. Keep it simple: allow not finding any matches
      here and rely on overall signing validation.
    -->
    <AllowEmptySignList>true</AllowEmptySignList>
  </PropertyGroup>

  <ItemGroup>
    <!--
      Replace the default items to sign with the specific set we want. This allows the build to call
      Arcade's Sign.proj multiple times for different sets of files as the build progresses.
    -->
    <ItemsToSign Remove="@(ItemsToSign)" />
  </ItemGroup>

  <ItemGroup Condition="'$(SignBinaries)' == 'true'">
    <ItemsToSign Include="$(BaseOutputRootPath)corehost/**/hostfxr.dll" />
    <ItemsToSign Include="$(BaseOutputRootPath)corehost/**/hostpolicy.dll" />
    <ItemsToSign Include="$(BaseOutputRootPath)corehost/**/dotnet.exe" />
    <ItemsToSign Include="$(BaseOutputRootPath)corehost/**/ijwhost.dll" />
    <ItemsToSign Include="$(BaseOutputRootPath)corehost/**/winrthost.dll" />
    <ItemsToSign Include="$(BaseOutputRootPath)corehost/**/nethost.dll" />
    <!-- Note: apphost is not signed, by design. -->

    <ItemsToSign Include="$(CrossGenRootPath)**/*.dll" />

    <ItemsToSign Include="$(ArtifactsBinDir)Microsoft.DotNet.PlatformAbstractions/**/*.dll" />
    <ItemsToSign Include="$(ArtifactsBinDir)Microsoft.Extensions.DependencyModel/**/*.dll" />
    <ItemsToSign Include="$(ArtifactsBinDir)Microsoft.NET.HostModel/**/*.dll" />
  </ItemGroup>

  <ItemGroup Condition="'$(SignMsiFiles)' == 'true'">
    <ItemsToSign Include="$(ArtifactsPackagesDir)**/*.msi" />
    <ItemsToSign Include="$(ArtifactsPackagesDir)**/*.cab" />
  </ItemGroup>

  <ItemGroup Condition="'$(SignBurnEngineFiles)' == 'true'">
    <ItemsToSign Include="$(ArtifactsPackagesDir)**/*engine.exe" />
  </ItemGroup>

  <ItemGroup Condition="'$(SignBurnBundleFiles)' == 'true'">
    <ItemsToSign Include="$(ArtifactsPackagesDir)**/*.exe" />
    <!-- Note: wixstdba is internal to the engine bundle and does not get signed. -->
  </ItemGroup>

  <ItemGroup Condition="'$(SignFinalPackages)' == 'true'">
    <DownloadedSymbolPackages Include="$(DownloadDirectory)**\*.symbols.nupkg" />
    <ItemsToSign Include="$(DownloadDirectory)**\*.nupkg" Exclude="@(DownloadedSymbolPackages)" />

    <ItemsToSign Include="$(DownloadDirectory)**\*.deb" />
    <ItemsToSign Include="$(DownloadDirectory)**\*.rpm" />
  </ItemGroup>

  <ItemGroup>
    <!-- External files -->
    <ItemsToSign Remove="@(ItemsToSign->WithMetadataValue('Filename', 'Newtonsoft.Json'))" />
  </ItemGroup>

  <ItemGroup>
    <ItemsToSign Update="@(ItemsToSign)" Authenticode="$(CertificateId)" />
  </ItemGroup>

  <ItemGroup>
    <FileExtensionSignInfo Include=".msi" CertificateName="Microsoft400" />
    <FileExtensionSignInfo Include=".pkg" CertificateName="8003" />
    <FileExtensionSignInfo Include=".deb;.rpm" CertificateName="LinuxSign" />
  </ItemGroup>

</Project>
