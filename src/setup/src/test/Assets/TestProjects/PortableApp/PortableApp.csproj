<Project>

  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />

  <PropertyGroup>
    <TargetFramework>$(NETCoreAppFramework)</TargetFramework>
    <OutputType>Exe</OutputType>
    <RuntimeFrameworkVersion>$(MNAVersion)</RuntimeFrameworkVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Newtonsoft.Json" Version="9.0.1" />
  </ItemGroup>

  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />

  <!--
    Work around "dotnet store" relying on Microsoft.NETCore.App. See MNADeprecationWorkaround.props.

    Explicit Sdk.targets import is required to override this.
  -->

  <!-- BEGIN copy: Taken and modified from 'Tools\dotnetcli\sdk\2.1.401\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.CrossGen.targets' -->

  <Target Name="_RestoreCrossgen"
          DependsOnTargets="PrepforRestoreForComposeStore;
                           _SetupStageForCrossgen;"
          Condition="$(SkipOptimization) != 'true' ">
    <!-- Was:
    <MSBuild Projects="$(MSBuildProjectFullPath)"
                 Targets="Restore"
                 Properties="RestoreGraphProjectInput=$(MSBuildProjectFullPath);
                             DisableImplicitFrameworkReferences=true;
                             RestoreOutputPath=$(_CrossProjFileDir);
                             StorePackageName=$(MicrosoftNETPlatformLibrary);
                             StorePackageVersion=$(RuntimeFrameworkVersion);"/>
    -->
    <MSBuild Projects="$(MSBuildProjectFullPath)"
                 Targets="Restore"
                 Properties="RestoreGraphProjectInput=$(MSBuildProjectFullPath);
                             DisableImplicitFrameworkReferences=true;
                             RestoreOutputPath=$(_CrossProjFileDir);
                             StorePackageName=Microsoft.NETCore.App.Internal;
                             StorePackageVersion=$(RuntimeFrameworkVersion);"/>

    <ResolvePublishAssemblies ProjectPath="$(MSBuildProjectFullPath)"
                              AssetsFilePath="$(_CrossProjAssetsFile)"
                              TargetFramework="$(_TFM)"
                              RuntimeIdentifier="$(RuntimeIdentifier)"
                              PlatformLibraryName="$(MicrosoftNETPlatformLibrary)"
                              ExcludeFromPublishPackageReferences="@(_ExcludeFromPublishPackageReference)"
                              IsSelfContained="$(SelfContained)"
                              PreserveStoreLayout="false">

      <Output TaskParameter="AssembliesToPublish" ItemName="CrossgenResolvedAssembliesToPublish" />
    </ResolvePublishAssemblies>

    <!-- Copy managed files to  a flat temp directory for passing it as ref for crossgen -->
    <Copy SourceFiles = "@(CrossgenResolvedAssembliesToPublish)"
          DestinationFolder="$(_NetCoreRefDir)"
          OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
          Retries="$(CopyRetryCount)"
          RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
          UseHardlinksIfPossible="$(CreateHardLinksForPublishFilesIfPossible)"
          UseSymboliclinksIfPossible="$(CreateSymbolicLinksForPublishFilesIfPossible)">

      <Output TaskParameter="DestinationFiles" ItemName="FileWrites"/>
    </Copy>
  </Target>

  <!-- END copy -->

</Project>
