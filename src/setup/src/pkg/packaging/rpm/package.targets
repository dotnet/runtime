<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
<Import Project='package.props' />

  <UsingTask TaskName="ReplaceFileContents" AssemblyFile="$(LocalBuildToolsTaskDir)core-setup.tasks.dll"/>
  <UsingTask TaskName="BuildFPMToolPreReqs" AssemblyFile="$(LocalBuildToolsTaskDir)core-setup.tasks.dll"/>

  <Target Name="GenerateRpms"
          DependsOnTargets="TestFPMTool;BuildRpms;"
          Condition="'$(BuildRpmPackage)'=='true'" />
  
  <Target Name="GenerateRuntimeRpms" 
          DependsOnTargets="GenerateSharedHostRpm;GenerateHostFxrRpm;GenerateSharedFrameworkRpm"
          Condition="'$(BuildRuntimeRpms)' == 'true'" />

  <Target Name="BuildRpms"
          DependsOnTargets="GenerateRuntimeRpms; GenerateRuntimeDependenciesRpm"
          Condition="'$(BuildRpmPackage)'=='true' and '$(FPMPresent)'=='true'" />

  <Target Name="GenerateSharedHostRpm">
    <PropertyGroup>
      <RpmPackageName>$(SharedHostRpmPkgName)</RpmPackageName>
      <RpmPackageVersion>$(HostPackageVersion)</RpmPackageVersion>
      <InputRoot>$(SharedHostPublishRoot)</InputRoot>
      <RpmFile>$(SharedHostInstallerFile)</RpmFile>
      <ManPagesDir>$(ProjectDir)Documentation/manpages</ManPagesDir>
      <ConfigJsonName>dotnet-sharedhost-rpm_config.json</ConfigJsonName>
      <ConfigJsonFile>$(rpmPackagingConfigPath)$(ConfigJsonName)</ConfigJsonFile>
      <RpmIntermediatesDir>$(PackagesIntermediateDir)$(RpmPackageName)/$(RpmPackageVersion)</RpmIntermediatesDir>
      <UsrShareDotnetPath>usr/share/dotnet/</UsrShareDotnetPath>
    </PropertyGroup>

    <PropertyGroup>
      <rpmLayoutDirectory>$(RpmIntermediatesDir)/rpmLayoutDirectory/</rpmLayoutDirectory>
      <rpmLayoutPackageRoot>$(rpmLayoutDirectory)package_root/</rpmLayoutPackageRoot>
      <rpmLayoutUsrShareDotnetDir>$(rpmLayoutPackageRoot)$(UsrShareDotnetPath)</rpmLayoutUsrShareDotnetDir>
      <rpmLayoutUsrBinDir>$(rpmLayoutPackageRoot)usr/bin/</rpmLayoutUsrBinDir>
      <rpmLayoutDocs>$(rpmLayoutDirectory)docs</rpmLayoutDocs>                <!-- Man Pages -->
      <rpmLayoutTemplates>$(rpmLayoutDirectory)templates</rpmLayoutTemplates> <!-- Copyright, Changelog -->
    </PropertyGroup>

    <RemoveDir Condition="Exists('$(RpmIntermediatesDir)')" Directories="$(RpmIntermediatesDir)" />
    <MakeDir Directories="$(RpmIntermediatesDir)" />
    
    <!-- Create empty rpm layout -->
    <RemoveDir Condition="Exists('$(rpmLayoutDirectory)')" Directories="$(rpmLayoutDirectory)" />
    <MakeDir Directories="$(rpmLayoutDirectory)" />
    <MakeDir Directories="$(rpmLayoutPackageRoot)" />
    <MakeDir Directories="$(rpmLayoutUsrShareDotnetDir)" />
    <MakeDir Directories="$(rpmLayoutUsrBinDir)" />
    <MakeDir Directories="$(rpmLayoutDocs)" />
    <MakeDir Directories="$(rpmLayoutTemplates)" />

    <!-- Copy files to rpm layout -->
    <ItemGroup>
        <SHFiles Include="$(InputRoot)/**/*" />
        <SHManpages Include="$(ManPagesDir)/**/*" />
        <SHTemplatesFiles Include="$(TemplatesDir)/**/*" />
    </ItemGroup>

    <Copy SourceFiles="@(SHFiles)" DestinationFiles="@(SHFiles->'$(rpmLayoutUsrShareDotnetDir)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(SHManpages)" DestinationFiles="@(SHManpages->'$(rpmLayoutDocs)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(SHTemplatesFiles)" DestinationFiles="@(SHTemplatesFiles->'$(rpmLayoutTemplates)/%(RecursiveDir)%(Filename)%(Extension)')" />

    <!--
      Create symlink so the dotnet host is in PATH. It points to where dotnet will be installed, so
      it may seem to point to the wrong place in the build machine's layout.
    -->
    <Exec Command="ln -sf &quot;/$(UsrShareDotnetPath)dotnet&quot; &quot;$(rpmLayoutUsrBinDir)dotnet&quot;" />

    <!-- Replace config json variables -->
    <ItemGroup>
      <SharedHostTokenValue Include="%SHARED_HOST_BRAND_NAME%">
        <ReplacementString>$(SharedHostBrandName)</ReplacementString>
      </SharedHostTokenValue>
      <SharedHostTokenValue Include="%SHARED_HOST_REVISION%">
        <ReplacementString>$(HostPackageRelease)</ReplacementString>
      </SharedHostTokenValue>
    </ItemGroup>

    <ReplaceFileContents InputFile="$(ConfigJsonFile)"
                         DestinationFile="$(rpmLayoutDirectory)$(rpmConfigJsonName)"
                         ReplacementItems="@(SharedHostTokenValue)" />
    
    <!-- Call the task to build the pre-reqs (parameters, copyright, changelog) for calling the FPM tool -->
    <BuildFPMToolPreReqs  InputDir="$(rpmLayoutDirectory)"
                          OutputDir="$(RpmIntermediatesDir)"
                          PackageVersion="$(RpmPackageVersion)"
                          ConfigJsonFile="$(rpmLayoutDirectory)$(rpmConfigJsonName)">
                          <Output TaskParameter="FPMParameters" PropertyName="FPMCmdParameters" />
    </BuildFPMToolPreReqs>

    <!-- Build the RPM package by calling the FPM tool and passing the parameter list -->
    <Exec Command="fpm $(FPMCmdParameters)" WorkingDirectory="$(RpmIntermediatesDir)" />

   <!-- Copy package to output -->   
    <ItemGroup>
      <GeneratedRpmFiles Remove="@(GeneratedRpmFiles)" />
      <GeneratedRpmFiles Include="$(RpmIntermediatesDir)/*.rpm" />
    </ItemGroup>

    <Error Text="@(GeneratedRpmFiles->Count()) .rpm files generated." Condition="'@(GeneratedRpmFiles->Count())' != 1" />

    <Copy SourceFiles="@(GeneratedRpmFiles)"
          DestinationFiles="$(RpmFile)"
          OverwriteReadOnlyFiles="True"
          SkipUnchangedFiles="False"
          UseHardlinksIfPossible="False" />

    <!--
      Clean up dotnet symlink. Later build steps are confused and fail because the symlink points to
      a path that doesn't exist on the build machine.
    -->
    <Delete Files="$(rpmLayoutUsrBinDir)dotnet" />
  </Target>

  <Target Name="GenerateHostFxrRpm">
    <PropertyGroup>
      <RpmPackageName>$(HostFxrRpmPkgName)</RpmPackageName>
      <RpmPackageVersion>$(HostResolverPackageVersion)</RpmPackageVersion>
      <InputRoot>$(HostFxrPublishRoot)</InputRoot>
      <RpmFile>$(HostFxrInstallerFile)</RpmFile>
      <ConfigJsonName>dotnet-hostfxr-rpm_config.json</ConfigJsonName>
      <ConfigJsonFile>$(rpmPackagingConfigPath)$(ConfigJsonName)</ConfigJsonFile>
      <RpmIntermediatesDir>$(PackagesIntermediateDir)$(RpmPackageName)/$(RpmPackageVersion)</RpmIntermediatesDir>
    </PropertyGroup>

    <PropertyGroup>
      <rpmLayoutDirectory>$(RpmIntermediatesDir)/rpmLayoutDirectory/</rpmLayoutDirectory>
      <rpmLayoutPackageRoot>$(rpmLayoutDirectory)package_root</rpmLayoutPackageRoot>
      <rpmLayoutDocs>$(rpmLayoutDirectory)docs</rpmLayoutDocs>
      <rpmLayoutTemplates>$(rpmLayoutDirectory)templates</rpmLayoutTemplates> <!-- Copyright, Changelog -->
    </PropertyGroup>

    <RemoveDir Condition="Exists('$(RpmIntermediatesDir)')" Directories="$(RpmIntermediatesDir)" />
    <MakeDir Directories="$(RpmIntermediatesDir)" />

    <!-- Create empty rpm layout -->
    <RemoveDir Condition="Exists('$(rpmLayoutDirectory)')" Directories="$(rpmLayoutDirectory)" />
    <MakeDir Directories="$(rpmLayoutDirectory)" />
    <MakeDir Directories="$(rpmLayoutPackageRoot)" />
    <MakeDir Directories="$(rpmLayoutDocs)" />
    <MakeDir Directories="$(rpmLayoutTemplates)" />

    <!-- Copy files to rpm layout -->
    <ItemGroup>
        <HFFiles Include="$(InputRoot)/**/*" />
        <HFTemplatesFiles Include="$(TemplatesDir)/**/*" />
    </ItemGroup>

    <Copy SourceFiles="@(HFFiles)" DestinationFiles="@(HFFiles->'$(rpmLayoutPackageRoot)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(HFTemplatesFiles)" DestinationFiles="@(HFTemplatesFiles->'$(rpmLayoutTemplates)/%(RecursiveDir)%(Filename)%(Extension)')" />

    <!-- Replace config json variables -->
    <ItemGroup>
      <HostFxrTokenValue Include="%HOSTFXR_BRAND_NAME%">
        <ReplacementString>$(HostFxrBrandName)</ReplacementString>
      </HostFxrTokenValue>
      <HostFxrTokenValue Include="%SHARED_HOST_RPM_VERSION%">
        <ReplacementString>$(HostPackageVersion)</ReplacementString>
      </HostFxrTokenValue>
      <HostFxrTokenValue Include="%HOSTFXR_NUGET_VERSION%">
        <ReplacementString>$(HostResolverPackageVersion)</ReplacementString>
      </HostFxrTokenValue>
      <HostFxrTokenValue Include="%HOSTFXR_RPM_PACKAGE_NAME%">
        <ReplacementString>$(RpmPackageName)</ReplacementString>
      </HostFxrTokenValue>
      <HostFxrTokenValue Include="%HOSTFXR_REVISION%">
        <ReplacementString>$(HostResolverPackageRelease)</ReplacementString>
      </HostFxrTokenValue>
    </ItemGroup>

    <ReplaceFileContents InputFile="$(ConfigJsonFile)"
                         DestinationFile="$(rpmLayoutDirectory)$(rpmConfigJsonName)"
                         ReplacementItems="@(HostFxrTokenValue)" />

    <!-- Call the task to build the pre-reqs (parameters, copyright, changelog) for calling the FPM tool -->
    <BuildFPMToolPreReqs  InputDir="$(rpmLayoutDirectory)"
                          OutputDir="$(RpmIntermediatesDir)"
                          PackageVersion="$(RpmPackageVersion)"
                          ConfigJsonFile="$(rpmLayoutDirectory)$(rpmConfigJsonName)">
                          <Output TaskParameter="FPMParameters" PropertyName="FPMCmdParameters" />
    </BuildFPMToolPreReqs>

    <!-- Build the RPM package by calling the FPM tool and passing the parameter list -->
    <Exec Command="fpm $(FPMCmdParameters)"  WorkingDirectory="$(RpmIntermediatesDir)" />
    
    <!-- Copy package to output -->
    <ItemGroup>
      <GeneratedRpmFiles Remove="@(GeneratedRpmFiles)" />
      <GeneratedRpmFiles Include="$(RpmIntermediatesDir)/*.rpm" />
    </ItemGroup>

    <Error Text="@(GeneratedRpmFiles->Count()) .rpm files generated." Condition="'@(GeneratedRpmFiles->Count())' != 1" />

    <Copy SourceFiles="@(GeneratedRpmFiles)"
          DestinationFiles="$(RpmFile)"
          OverwriteReadOnlyFiles="True"
          SkipUnchangedFiles="False"
          UseHardlinksIfPossible="False" />

  </Target>

  <Target Name="GenerateSharedFrameworkRpm">
    <PropertyGroup>
      <RpmPackageName>$(SharedFxRpmPkgName)</RpmPackageName>
      <RpmPackageVersion>$(RuntimePackageVersion)</RpmPackageVersion>
      <InputRoot>$(SharedFrameworkPublishRoot)</InputRoot>
      <RpmFile>$(SharedFrameworkInstallerFile)</RpmFile>
      <ConfigJsonName>dotnet-sharedframework-rpm_config.json</ConfigJsonName>
      <ConfigJsonFile>$(rpmPackagingConfigPath)$(ConfigJsonName)</ConfigJsonFile>
      <RpmIntermediatesDir>$(PackagesIntermediateDir)$(RpmPackageName)/$(RpmPackageVersion)</RpmIntermediatesDir>
    </PropertyGroup>

    <PropertyGroup>
      <rpmLayoutDirectory>$(RpmIntermediatesDir)/rpmLayoutDirectory/</rpmLayoutDirectory>
      <rpmLayoutPackageRoot>$(rpmLayoutDirectory)package_root</rpmLayoutPackageRoot>
      <rpmLayoutDocs>$(rpmLayoutDirectory)docs</rpmLayoutDocs>
      <rpmLayoutTemplates>$(rpmLayoutDirectory)templates</rpmLayoutTemplates> <!-- Copyright, Changelog -->
    </PropertyGroup>

    <RemoveDir Condition="Exists('$(RpmIntermediatesDir)')" Directories="$(RpmIntermediatesDir)" />
    <MakeDir Directories="$(RpmIntermediatesDir)" />

    <!-- Create empty rpm layout -->
    <RemoveDir Condition="Exists('$(rpmLayoutDirectory)')" Directories="$(rpmLayoutDirectory)" />
    <MakeDir Directories="$(rpmLayoutDirectory)" />
    <MakeDir Directories="$(rpmLayoutPackageRoot)" />
    <MakeDir Directories="$(rpmLayoutDocs)" />
    <MakeDir Directories="$(rpmLayoutTemplates)" />

    <!-- Copy files to rpm layout -->
    <ItemGroup>
        <SFFiles Include="$(InputRoot)/**/*" />
        <SFTemplatesFiles Include="$(TemplatesDir)/**/*" />
    </ItemGroup>

    <Copy SourceFiles="@(SFFiles)" DestinationFiles="@(SFFiles->'$(rpmLayoutPackageRoot)/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(SFTemplatesFiles)" DestinationFiles="@(SFTemplatesFiles->'$(rpmLayoutTemplates)/%(RecursiveDir)%(Filename)%(Extension)')" />

    <!-- Replace config json variables -->
    <ItemGroup>
      <SharedFrameworkTokenValue Include="%HOSTFXR_RPM_PACKAGE_NAME%">
        <ReplacementString>$(HostFxrRpmPkgName)</ReplacementString>
      </SharedFrameworkTokenValue>
      <SharedFrameworkTokenValue Include="%HOSTFXR_NUGET_VERSION%">
        <ReplacementString>$(HostResolverPackageVersion)</ReplacementString>
      </SharedFrameworkTokenValue>
      <SharedFrameworkTokenValue Include="%RUNTIME_DEPS_RPM_PACKAGE_NAME%">
        <ReplacementString>$(RuntimeDependenciesRpmPkgName)</ReplacementString>
      </SharedFrameworkTokenValue>
      <SharedFrameworkTokenValue Include="%RUNTIME_DEPS_VERSION%">
        <ReplacementString>$(RuntimeDepsRpmPackageVersion)</ReplacementString> 
      </SharedFrameworkTokenValue>
      <SharedFrameworkTokenValue Include="%SHARED_FRAMEWORK_RPM_PACKAGE_NAME%">
        <ReplacementString>$(SharedFxRpmPkgName)</ReplacementString>
      </SharedFrameworkTokenValue>
      <SharedFrameworkTokenValue Include="%SHARED_FRAMEWORK_NUGET_NAME%">
        <ReplacementString>$(SharedFrameworkName)</ReplacementString>
      </SharedFrameworkTokenValue>
      <SharedFrameworkTokenValue Include="%SHARED_FRAMEWORK_NUGET_VERSION%">
        <ReplacementString>$(RuntimePackageVersion)</ReplacementString>
      </SharedFrameworkTokenValue>
      <SharedFrameworkTokenValue Include="%SHARED_FRAMEWORK_BRAND_NAME%">
        <ReplacementString>$(SharedFrameworkBrandName)</ReplacementString>
      </SharedFrameworkTokenValue>
      <SharedFrameworkTokenValue Include="%SHARED_FRAMEWORK_REVISION%">
        <ReplacementString>$(RuntimePackageRelease)</ReplacementString>
      </SharedFrameworkTokenValue>
    </ItemGroup>

    <ReplaceFileContents InputFile="$(ConfigJsonFile)"
                         DestinationFile="$(rpmLayoutDirectory)$(rpmConfigJsonName)"
                         ReplacementItems="@(SharedFrameworkTokenValue)" />

    <!-- Call the task to build the pre-reqs (parameters, copyright, changelog) for calling the FPM tool -->
    <BuildFPMToolPreReqs  InputDir="$(rpmLayoutDirectory)"
                          OutputDir="$(RpmIntermediatesDir)"
                          PackageVersion="$(RpmPackageVersion)"
                          ConfigJsonFile="$(rpmLayoutDirectory)$(rpmConfigJsonName)">
                          <Output TaskParameter="FPMParameters" PropertyName="FPMCmdParameters" />
    </BuildFPMToolPreReqs>

    <!-- Build the RPM package by calling the FPM tool and passing the parameter list -->
    <Exec Command="fpm $(FPMCmdParameters)"  WorkingDirectory="$(RpmIntermediatesDir)" />
    
    <!-- Copy package to output -->
    <ItemGroup>
      <GeneratedRpmFiles Remove="@(GeneratedRpmFiles)" />
      <GeneratedRpmFiles Include="$(RpmIntermediatesDir)/*.rpm" />
    </ItemGroup>

    <Error Text="@(GeneratedRpmFiles->Count()) .rpm files generated." Condition="'@(GeneratedRpmFiles->Count())' != 1" />

    <Copy SourceFiles="@(GeneratedRpmFiles)"
          DestinationFiles="$(RpmFile)"
          OverwriteReadOnlyFiles="True"
          SkipUnchangedFiles="False"
          UseHardlinksIfPossible="False" />

  </Target>
  
  <Target Name="GenerateRuntimeDependenciesRpm">
    <PropertyGroup>
      <RpmPackageName>$(RuntimeDependenciesRpmPkgName)</RpmPackageName>
      <RpmPackageVersion>$(RuntimeDepsRpmPackageVersion)</RpmPackageVersion>
      <RpmFile>$(DotnetRuntimeDependenciesPackageInstallerFile)</RpmFile>
      <ConfigJsonName>dotnet-runtime-deps-rpm_config_$(OutputRid).json</ConfigJsonName>
      <ConfigJsonFile>$(rpmPackagingConfigPath)$(ConfigJsonName)</ConfigJsonFile>
      <RpmIntermediatesDir>$(PackagesIntermediateDir)$(RpmPackageName)/$(RpmPackageVersion)</RpmIntermediatesDir>
    </PropertyGroup>

    <PropertyGroup>
      <RpmLayoutDirectory>$(RpmIntermediatesDir)/rpmLayoutDirectory/</RpmLayoutDirectory>
      <RpmLayoutPackageRoot>$(RpmLayoutDirectory)package_root</RpmLayoutPackageRoot>
      <RpmLayoutDocs>$(RpmLayoutDirectory)docs</RpmLayoutDocs>
      <RpmLayoutTemplates>$(RpmLayoutDirectory)templates</RpmLayoutTemplates> <!-- Copyright, Changelog -->
    </PropertyGroup>

    <!-- Error out if the configuration file doesn't exist -->
    <Error Condition="!Exists('$(ConfigJsonFile)')" Text="Config file does not exist : '$(ConfigJsonFile)'" />

    <RemoveDir Condition="Exists('$(RpmIntermediatesDir)')" Directories="$(RpmIntermediatesDir)" />
    <MakeDir Directories="$(RpmIntermediatesDir)" />

    <!-- Create empty rpm layout -->
    <RemoveDir Condition="Exists('$(RpmLayoutDirectory)')" Directories="$(RpmLayoutDirectory)" />
    <MakeDir Directories="$(RpmLayoutDirectory)" />
    <MakeDir Directories="$(RpmLayoutPackageRoot)" />
    <MakeDir Directories="$(RpmLayoutDocs)" />
    <MakeDir Directories="$(RpmLayoutTemplates)" />
    
     <!-- Copy files to rpm layout -->
    <ItemGroup>
         <RDTemplatesFiles Include="$(TemplatesDir)/**/*" />
    </ItemGroup>

    <Copy SourceFiles="@(RDTemplatesFiles)" DestinationFiles="@(RDTemplatesFiles->'$(RpmLayoutTemplates)/%(RecursiveDir)%(Filename)%(Extension)')" />

    <!-- Replace config json variables -->
    <ItemGroup>
      <RuntimeDependenciesTokenValue Include="%RUNTIME_DEPS_RPM_PACKAGE_NAME%">
        <ReplacementString>$(RuntimeDependenciesRpmPkgName)</ReplacementString>
      </RuntimeDependenciesTokenValue>
      <RuntimeDependenciesTokenValue Include="%RUNTIME_DEPS_VERSION%">
        <ReplacementString>$(RuntimeDepsRpmPackageVersion)</ReplacementString> 
      </RuntimeDependenciesTokenValue>
      <RuntimeDependenciesTokenValue Include="%RUNTIME_DEPS_REVISION%">
        <ReplacementString>$(RuntimeDepsRpmPackageRelease)</ReplacementString>
      </RuntimeDependenciesTokenValue>
    </ItemGroup>
    
    <ReplaceFileContents InputFile="$(ConfigJsonFile)"
                         DestinationFile="$(RpmLayoutDirectory)$(rpmConfigJsonName)"
                         ReplacementItems="@(RuntimeDependenciesTokenValue)" />

    <!-- Call the task to build the pre-reqs (parameters, copyright, changelog) for calling the FPM tool -->
    <BuildFPMToolPreReqs  InputDir="$(RpmLayoutDirectory)"
                          OutputDir="$(RpmIntermediatesDir)"
                          PackageVersion="$(RpmPackageVersion)"
                          ConfigJsonFile="$(RpmLayoutDirectory)$(rpmConfigJsonName)">
                          <Output TaskParameter="FPMParameters" PropertyName="FPMCmdParameters" />
    </BuildFPMToolPreReqs>

    <!-- Build the RPM package by calling the FPM tool and passing the parameter list -->
    <Exec Command="fpm $(FPMCmdParameters)"  WorkingDirectory="$(RpmIntermediatesDir)" />

    <!-- Copy package to output -->
    <ItemGroup>
      <GeneratedRpmFiles Remove="@(GeneratedRpmFiles)" />
      <GeneratedRpmFiles Include="$(RpmIntermediatesDir)/*.rpm" />
    </ItemGroup>

    <Error Text="@(GeneratedRpmFiles->Count()) .rpm files generated." Condition="'@(GeneratedRpmFiles->Count())' != 1" />

    <Copy SourceFiles="@(GeneratedRpmFiles)"
          DestinationFiles="$(RpmFile)"
          OverwriteReadOnlyFiles="True"
          SkipUnchangedFiles="False"
          UseHardlinksIfPossible="False" />

  </Target>

</Project>
