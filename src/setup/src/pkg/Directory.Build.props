<Project>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory).., Directory.Build.props))\Directory.Build.props" />

  <PropertyGroup>
    <Platform>$(TargetArchitecture)</Platform>
    <DotNetHostBinDir>$(BaseOutputRootPath)corehost</DotNetHostBinDir>
  </PropertyGroup>

  <PropertyGroup>
    <PackageLicenseFile>$(ProjectDir)LICENSE.TXT</PackageLicenseFile>
    <PackageThirdPartyNoticesFile>$(ProjectDir)THIRD-PARTY-NOTICES.TXT</PackageThirdPartyNoticesFile>
    <LicenseUrl>https://github.com/dotnet/core-setup/blob/master/LICENSE.TXT</LicenseUrl>
    <PackageDescriptionFile>$(ProjectDir)src/pkg/projects/descriptions.json</PackageDescriptionFile>
    <!-- This link should be updated for each release milestone, currently this points to 1.0.0 -->
    <ReleaseNotes>https://go.microsoft.com/fwlink/?LinkID=799417</ReleaseNotes>
    <ProjectUrl>https://dot.net</ProjectUrl>
    <PackagePlatform Condition="'$(PackagePlatform)' == ''">$(Platform)</PackagePlatform>
    <PackagePlatform Condition="'$(PackagePlatform)' == 'amd64'">x64</PackagePlatform>

    <PackageIndexFile>$(MSBuildThisFileDirectory)packageIndex.json</PackageIndexFile>

    <!-- this repo doesn't currently use the index so don't force it to be in sync -->
    <SkipIndexCheck>true</SkipIndexCheck>
  </PropertyGroup>

  <PropertyGroup>
    <PackagingToolsDir>$(MSBuildThisFileDirectory)packaging-tools/</PackagingToolsDir>

    <PackagesIntermediateDir>$(IntermediateOutputRootPath)packages/</PackagesIntermediateDir>

    <RpmTemplatesDir>$(MSBuildThisFileDirectory)packaging/rpm/templates/</RpmTemplatesDir>

    <!--
      Intermediate dir the debtool project is copied to. Use DebtoolAssemblyFile for "dotnet
      deb-tool" commands, after depending on InitializeDotnetDebTool target.
    -->
    <DebToolBinDir>$(BinDir)dotnet-deb-tool\</DebToolBinDir>
    <DebtoolAssemblyFile>$(DebToolBinDir)$(Configuration)\netcoreapp3.0\dotnet-deb-tool.dll</DebtoolAssemblyFile>
    <DotnetDebToolSourceDir>$(ProjectDir)tools-local/setuptools/dotnet-deb-tool/</DotnetDebToolSourceDir>

    <IsDebianBasedDistro
      Condition="
        $(PackageTargetRid.StartsWith('ubuntu')) or
        $(PackageTargetRid.StartsWith('debian')) or
        $(PackageTargetRid.StartsWith('linuxmint'))">true</IsDebianBasedDistro>
    <BuildDebPackage Condition="'$(IsDebianBasedDistro)' == true and '$(TargetArchitecture)' == 'x64'">true</BuildDebPackage>

    <IsRPMBasedDistro Condition="'$(InstallerExtension)' == '.rpm'">true</IsRPMBasedDistro>
    <BuildRpmPackage Condition="'$(IsRPMBasedDistro)' == true and '$(TargetArchitecture)' == 'x64'">true</BuildRpmPackage>

    <!--
      Some Debian and RPM packages only need to be built once for all supported distros, as the bits
      are portable. By default, build these packages, but in the official build this can be turned
      off to avoid producing redundant packages.
    -->
    <BuildDistroIndependentInstallers Condition="'$(BuildDistroIndependentInstallers)' == ''">true</BuildDistroIndependentInstallers>

    <WixVersion>3.10.4</WixVersion>
    <WixToolsDir>$(IntermediateOutputRootPath)WixTools.$(WixVersion)/</WixToolsDir>
    <!-- Used in WiX targets to locate files. -->
    <WixInstallPath>$(WixToolsDir)</WixInstallPath>
    <WixTargetsPath>$(WixToolsDir)wix.targets</WixTargetsPath>
    <WixObjRoot>$(IntermediateOutputRootPath)wix/</WixObjRoot>
    <WixObjDir>$(WixObjRoot)$(MSBuildProjectName)/</WixObjDir>
    <MsiArch>$(TargetArchitecture)</MsiArch>
    <MicrosoftEulaFile>$(MSBuildThisFileDirectory)packaging/windows/eula.rtf</MicrosoftEulaFile>

    <GenerateMSI>true</GenerateMSI>
    <GenerateMSI Condition="'$(TargetArchitecture)' == 'arm' or '$(TargetArchitecture)' == 'arm64'">false</GenerateMSI>
    <GenerateMSI Condition="'$(OSGroup)' != 'Windows_NT'">false</GenerateMSI>

    <GeneratePkg Condition="'$(OSGroup)' == 'OSX'">true</GeneratePkg>

    <!--
      Allow packaging one build's outputs for a different RID. For example, package portable bits
      for multiple Debian-based distros.
    -->
    <InstallerSourceOSPlatformConfig Condition="'$(InstallerSourceOSPlatformConfig)' == ''">$(OSPlatformConfig)</InstallerSourceOSPlatformConfig>
  </PropertyGroup>

  <ItemGroup>
    <PackageIndex Include="$(PackageIndexFile)" />
  </ItemGroup>

  <Target Name="ValidateArgs" Condition="'$(CLIBuildVersion)'==''">
    <Error Condition="'$(HostPolicyVersion)'==''" Text="HostPolicyVersion is undefined" />
    <Error Condition="'$(HostResolverVersion)'==''" Text="HostResolverVersion is undefined" />
    <Error Condition="'$(HostVersion)'==''" Text="HostVersion is undefined" />
    <Error Condition="'$(AppHostVersion)'==''" Text="AppHostVersion is undefined" />
  </Target>

  <Target Name="ValidatePreReleaseStrings" Condition="'$(StabilizePackageVersion)'!='true'">
    <Error Condition="'$(PreReleaseVersionLabel)'==''" Text="PreReleaseVersionLabel is undefined" />
    <Error Condition="'$(BuildNumberMajor)'==''" Text="BuildNumberMajor is undefined" />
    <Error Condition="'$(BuildNumberMinor)'==''" Text="BuildNumberMinor is undefined" />
  </Target>
</Project>
