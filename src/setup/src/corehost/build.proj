<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="dir.props" />
  <Import Project="..\..\dir.targets" />
  <Import Project="..\..\dir.traversal.targets" />

  <!-- Target that builds dotnet, hostfxr and hostpolicy with the same version as what NetCoreApp will be built for
       since the build produced artifacts should always version the same (even if they may not get used).
  -->
  <Target Name="Build" DependsOnTargets="BuildCoreHostUnix;BuildCoreHostWindows" /> 

  <PropertyGroup Condition="'$(OSGroup)' != 'Windows_NT'">
    <GenerateVersionSourceFile>true</GenerateVersionSourceFile>
    <NativeVersionSourceFile>$(BaseIntermediateOutputPath)version.cpp</NativeVersionSourceFile>
  </PropertyGroup>

  <Target Name="BuildCoreHostUnix"
          Condition="'$(OSGroup)' != 'Windows_NT'"
          DependsOnTargets="GetLatestCommitHash;GenerateVersionSourceFile">
    <PropertyGroup>
      <CMakeBuildDir>$(IntermediateOutputRootPath)corehost\cmake\</CMakeBuildDir>
    
      <BuildArgs>--configuration $(ConfigurationGroup) --arch $(TargetArchitecture) --apphostver $(AppHostVersion) --hostver $(HostVersion) --fxrver $(HostResolverVersion) --policyver $(HostPolicyVersion) --commithash $(LatestCommit)</BuildArgs>
      <BuildArgs Condition="'$(PortableBuild)' == 'true'">$(BuildArgs) -portable</BuildArgs>     
      <BuildArgs Condition="'$(CrossBuild)' == 'true'">$(BuildArgs) --cross</BuildArgs>  
      <BuildArgs Condition="'$(StripSymbols)' == 'true'">$(BuildArgs) --stripsymbols</BuildArgs>   
    </PropertyGroup>

    <Message Text="$(MSBuildProjectDirectory)\build.sh $(BuildArgs)" Importance="High"/>
    <Exec Command="$(MSBuildProjectDirectory)\build.sh $(BuildArgs)" />
  </Target>

  <Target Name="BuildCoreHostWindows"
          Condition="'$(OSGroup)' == 'Windows_NT'"
          DependsOnTargets="GetLatestCommitHash">

    <!-- Generate Version files -->
    <ItemGroup>
      <HostFiles Include="dotnet">
       <FileDescription>.NET Core Host</FileDescription>
      </HostFiles>
      <HostFiles Include="hostfxr">
        <FileDescription>.NET Core Host Resolver - $(HostResolverVersion)</FileDescription>
      </HostFiles>
      <HostFiles Include="hostpolicy">
        <FileDescription>.NET Core Host Policy - $(HostPolicyVersion)</FileDescription>
      </HostFiles>
      <HostFiles Include="comhost">
        <FileDescription>.NET Core COM Host</FileDescription>
      </HostFiles>
    </ItemGroup>
    
    <MSBuild Projects="$(MSBuildProjectFullPath)"
             Properties="GenerateNativeVersionInfo=true;FileDescription=%(HostFiles.FileDescription);NativeVersionFileDir=$(IntermediateOutputRootPath)hostResourceFiles\%(HostFiles.Identity);NativeVersionHeaderFile=$(IntermediateOutputRootPath)hostResourceFiles\%(HostFiles.Identity)\version_info.h"
             Targets="GenerateVersionHeader" 
             Condition="'$(IncrementalNativeBuild)' != 'true'"/>
    <PropertyGroup>
      <BuildArgs>$(ConfigurationGroup) $(TargetArchitecture) apphostver $(AppHostVersion) hostver $(HostVersion) fxrver $(HostResolverVersion) policyver $(HostPolicyVersion) commit $(LatestCommit) rid $(OutputRid)</BuildArgs>
      <BuildArgs Condition="'$(PortableBuild)' == 'true'">$(BuildArgs) portable</BuildArgs>  
      <BuildArgs Condition="'$(IncrementalNativeBuild)' == 'true'">$(BuildArgs) incremental-native-build</BuildArgs>
    </PropertyGroup>

    <!-- Run script that invokes Cmake to create VS files, and then calls msbuild to compile them -->
    <Message Text="$(MSBuildProjectDirectory)\build.cmd $(BuildArgs)" Importance="High"/>
    <Exec Command="$(MSBuildProjectDirectory)\build.cmd $(BuildArgs)" />
  </Target>
</Project>
