// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

// Generated by Fuzzlyn v1.2 on 2021-08-16 20:49:50
// Run on .NET 6.0.0-dev on X86 Windows
// Seed: 5524807387112568570
// Reduced from 260.9 KiB to 0.8 KiB in 00:20:16
// Crashes the runtime
using System.Runtime.CompilerServices;

struct S0
{
    public uint F0;
}

public class Runtime_57061_2
{
    static S0 s_2;
    static uint[] s_13;
    static sbyte[][] s_110;
    static int[] s_111;
    private static int Main()
    {
        s_2 = s_2;
        return Foo();
    }
    public static int Foo()
    {
        if (M34())
        {
            ref S0 vr1 = ref s_2;
            try
            {
                M33();
            }
            finally
            {
                vr1.F0 = s_13[0];
            }
        }

        for (int vr2 = 0; vr2 < Bound(); vr2++)
        {
            int[] vr3 = s_111;
            try
            {
                sbyte vr4 = s_110[0][0];
            }
            finally
            {
                int vr5 = vr3[0];
            }
        }

        return 100;
    }

    static bool M33()
    {
        return default(bool);
    }

    static bool M34()
    {
        return default(bool);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static int Bound() => 0;
}