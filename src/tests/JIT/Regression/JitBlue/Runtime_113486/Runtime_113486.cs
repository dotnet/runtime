// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

// Generated by Fuzzlyn v2.5 on 2025-03-13 04:40:20
// Run on Arm Linux
// Seed: 13401882525903110030
// Reduced from 421.9 KiB to 1.1 KiB in 00:03:35
// Hits JIT assert in Release:
// Assertion failed '!"Detected conflicting incoming edges when homing parameter registers"' in 'Program:M42(S0,byte,byte):S0' during 'Generate code' (IL size 83; hash 0x8f48ed9b; FullOpts)
// 
//     File: /__w/1/s/src/coreclr/jit/codegencommon.cpp Line: 3225
// 
using System;
using Xunit;

public class Runtime_113486
{
    static IRuntime s_rt;
    static S0[,, ] s_14;
    static sbyte[][] s_44 = new sbyte[][]
    {
        new sbyte[]
        {
            0
        }
    };
    
    [Fact]
    public static void TestEntryPoint()
    {
        try
        {
            var vr5 = new S0();
            var vr6 = s_44[0][0];
            M42(vr5, vr6, 0);
        }
        catch
        {
        }
    }

    static S0 M42(S0 arg0, sbyte arg2, sbyte arg3)
    {
        for (int var0 = 0; var0 < 1; var0++)
        {
            ushort var1 = (ushort)(-M44());
            arg0.F0 = var1++;
            s_rt.WriteLine("c_223", var1);
        }

        arg3 = arg2;
        arg0.F1 = arg0.F0;
        s_rt.WriteLine("c_231", arg3);
        return arg0;
    }

    static ushort M44()
    {
        return s_14[0, 0, 0].F1--;
    }
    
    struct S0
    {
        public ushort F0;
        public ushort F1;
    }

    interface IRuntime
    {
        void WriteLine<T>(string site, T value);
    }

    class Runtime : IRuntime
    {
        public void WriteLine<T>(string site, T value) => System.Console.WriteLine(value);
    }
}


