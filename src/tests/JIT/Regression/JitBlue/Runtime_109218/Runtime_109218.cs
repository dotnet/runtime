// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
using System.Runtime.CompilerServices;
using Xunit;

// Generated by Fuzzlyn v2.4 on 2024-11-14 16:26:37
// Run on Arm64 Linux
// Seed: 3815705679905334064-vectort,vector64,vector128,armsve
// Reduced from 78.3 KiB to 0.4 KiB in 00:00:23
// Hits JIT assert in Release:
// Assertion failed 'isVectorRegister(reg3)' in 'Program:Main(Fuzzlyn.ExecutionServer.IRuntime)' during 'Generate code' (IL size 52; hash 0xade6b36b; FullOpts)
//
//     File: /home/swagai01/dotnet/runtime/src/coreclr/jit/emitarm64sve.cpp Line: 4067
//
using System;
using System.Numerics;
using System.Runtime.Intrinsics;
using System.Runtime.Intrinsics.Arm;

public class Runtime_109218
{
    public static sbyte s_1;

    [Fact]
    public static void TestEntryPoint()
    {
        if (Sve.IsSupported)
        {
            var vr4 = Vector.Create<double>(0);
            var vr5 = Sve.MinNumberAcross(vr4);
            var vr6 = Sve.AddAcross(vr5);
            var vr7 = Vector.Create<double>(0);
            s_1 = (sbyte)Sve.GetActiveElementCount(vr6, vr7);
            Consume(s_1);
        }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void Consume<T>(T v)
    {
    }
}
