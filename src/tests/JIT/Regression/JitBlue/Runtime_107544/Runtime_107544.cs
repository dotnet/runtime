// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

// Generated by Fuzzlyn v2.4 on 2024-09-07 16:30:11
// Run on Arm64 MacOS
// Seed: 10786757047583438810-vectort,vector64,vector128,armadvsimd,armadvsimdarm64,armaes,armarmbase,armarmbasearm64,armcrc32,armcrc32arm64,armdp,armrdm,armrdmarm64,armsha1,armsha256
// Reduced from 183.1 KiB to 0.6 KiB in 00:00:45
// Hits JIT assert in Release:
// Assertion failed '!fgIsCommaThrow(morphedTree)' in 'Program:Main(Fuzzlyn.ExecutionServer.IRuntime)' during 'Morph - Global' (IL size 56; hash 0xade6b36b; FullOpts)
// 
//     File: /Users/runner/work/1/s/src/coreclr/jit/morph.cpp Line: 11580
// 
using System;
using System.Numerics;
using System.Runtime.Intrinsics;
using System.Runtime.Intrinsics.Arm;
using Xunit;

public class Runtime_107173
{
    [Fact]
    public static void TestEntryPoint()
    {
        if (AdvSimd.IsSupported && Dp.IsSupported)
        {
            try
            {
                ushort vr7 = default(ushort);
                var vr5 = (byte)vr7;
                Vector128<uint> vr10 = Vector128.Create<uint>(0);
                var vr11 = Vector128.Create<byte>(0);
                var vr12 = Vector128.CreateScalar(vr5);
                var vr13 = Dp.DotProductBySelectedQuadruplet(vr10, vr11, vr12, 13); // throws AE
                vr10 = AdvSimd.Multiply(vr13, vr10);
                Console.WriteLine(vr10);
            }
            catch (ArgumentException)
            {
                return;
            }
            throw new Exception("ArgumentException was not thrown");
        }
    }
}
