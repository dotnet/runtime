// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

// Generated by Fuzzlyn v2.4 on 2025-03-09 16:36:14
// Run on Arm Linux
// Seed: 13540383471703664398
// Reduced from 54.8 KiB to 0.6 KiB in 00:00:43
// Debug: Outputs 0
// Release: Outputs 1
using System;
using System.Runtime.CompilerServices;
using Xunit;

public class Runtime_113321
{
    private static IRuntime s_rt;
    
    [Fact]
    public static int TestEntryPoint()
    {
        s_rt = new Runtime();
        var vr1 = new S0();
        M6(vr1, 1);
        return ((Runtime)s_rt).Code;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void M6(S0 arg0, short arg1)
    {
        arg1 = arg0.F0;
        s_rt.Check(arg1);
    }
    
    private struct S0
    {
        public short F0;
        public sbyte F2;
    }
}

public interface IRuntime
{
    void Check<T>(T value);
}

public class Runtime : IRuntime
{
    public int Code;
    public void Check<T>(T value) => Code = (short)(object)value == 0 ? 100 : 101;
}