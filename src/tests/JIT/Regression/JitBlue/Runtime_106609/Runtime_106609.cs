// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

// Generated by Fuzzlyn v2.2 on 2024-08-17 17:16:59
// Run on Arm64 Windows
// Seed: 18124298882625099135-vectort,vector64,vector128,armadvsimd,armadvsimdarm64,armaes,armarmbase,armarmbasearm64,armcrc32,armcrc32arm64,armdp,armsha1,armsha256
// Reduced from 129.5 KiB to 0.4 KiB in 00:04:55
// Hits JIT assert in Release:
// Assertion failed 'link' in 'Program:Main(Fuzzlyn.ExecutionServer.IRuntime)' during 'Optimize Valnum CSEs' (IL size 39; hash 0xade6b36b; FullOpts)
// 
//     File: D:\a\_work\1\s\src\coreclr\jit\optcse.cpp Line: 5295
// 
using System.Runtime.CompilerServices;
using System.Runtime.Intrinsics;
using System.Runtime.Intrinsics.Arm;
using Xunit;

public class Runtime_106609
{
    [Fact]
    public static void TestEntrypoint()
    {
        if (AdvSimd.IsSupported)
        {
            try
            {
                Test();
            }
            catch
            {
            }
        }
    }

    public static float[] s_2;
    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void Test()
    {
        for (int vr8 = 0; vr8 < 2; vr8++)
        {
            var vr9 = Vector64.Create<uint>(0);
            s_2[0] = (float)(-(-(double)AdvSimd.Extract(vr9, 0)));
        }
    }
}