// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

// Generated by Fuzzlyn v2.5 on 2025-04-06 16:30:45
// Run on X64 Windows
// Seed: 13621799076737484256-vectort,vector128,vector256,x86aes,x86avx,x86avx2,x86avx512bw,x86avx512bwvl,x86avx512cd,x86avx512cdvl,x86avx512dq,x86avx512dqvl,x86avx512f,x86avx512fvl,x86avx512fx64,x86bmi1,x86bmi1x64,x86bmi2,x86bmi2x64,x86fma,x86lzcnt,x86lzcntx64,x86pclmulqdq,x86popcnt,x86popcntx64,x86sse,x86ssex64,x86sse2,x86sse2x64,x86sse3,x86sse41,x86sse41x64,x86sse42,x86sse42x64,x86ssse3,x86x86base
// Reduced from 20.1 KiB to 0.7 KiB in 00:01:13
// Debug: Runs successfully
// Release: Throws 'System.NullReferenceException'
using System;
using System.Numerics;
using System.Runtime.Intrinsics;
using System.Runtime.Intrinsics.X86;
using Xunit;

public class Runtime_114324
{
    public static ulong[] s_3;

    [Fact]
    public static void TestEntryPoint()
    {
        if (Avx512F.VL.IsSupported)
        {
            var vr1 = Vector128.Create<int>(1);
            Vector128<int> vr2 = Avx512F.VL.TernaryLogic(
                    vr1,
                    Sse2.ShiftLeftLogical128BitLane(
                        Vector128.Create<int>((int)Sse42.Crc32(M2(), 0)),
                        0),
                    Avx512F.VL.ConvertToVector128Int32(Vector256.Create<ulong>(s_3[0])),
                    221);
            System.Console.WriteLine(vr2);
            Assert.Equal(Vector128.Create(-1,-1,-1,-1), vr2);
        }
    }

    public static uint M2()
    {
        s_3 = new ulong[]
        {
            0
        };
        return M3();
    }

    public static byte M3()
    {
        return default(byte);
    }
}
