// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

// Generated by Fuzzlyn v3.3 on 2025-09-13 15:16:13
// Run on X64 Linux
// Seed: 5323876322163207211-vectort,vector128,vector256,x86aes,x86avx,x86avx2,x86bmi1,x86bmi1x64,x86bmi2,x86bmi2x64,x86fma,x86lzcnt,x86lzcntx64,x86pclmulqdq,x86popcnt,x86popcntx64,x86sse,x86ssex64,x86sse2,x86sse2x64,x86sse3,x86sse41,x86sse41x64,x86sse42,x86sse42x64,x86ssse3,x86x86base
// Reduced from 76.6 KiB to 0.5 KiB in 00:01:00
// Debug: Prints 1 line(s)
// Release: Prints 0 line(s)

using System;
using System.Runtime.CompilerServices;
using Xunit;

public class Runtime_119710
{
    public static long[] s_7;

    [Fact]
    public static void TestEntryPoint()
    {
        s_7 = new long[]
        {
            4512670148869529163L
        };
        byte vr10 = M6();
        if (vr10 != 42)
        {
            throw new InvalidOperationException();
        }
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    public static byte M6()
    {
        if ((19361 + (short)(-(1 - s_7[0]))) < 1)
        {
            return 42;
        }

        ulong vr12 = default(ulong);
        return (byte)vr12;
    }
}
