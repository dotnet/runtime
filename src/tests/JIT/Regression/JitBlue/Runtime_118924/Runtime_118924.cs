// Generated by Fuzzlyn v3.3 on 2025-08-20 10:58:52
// Run on Arm64 Linux
// Seed: 1357987998247197787-async,runtimeasync,vectort,vector64,vector128,armadvsimd,armadvsimdarm64,armaes,armarmbase,armarmbasearm64,armcrc32,armcrc32arm64,armdp,armrdm,armrdmarm64,armsha1,armsha256,armsve,armsve2
// Reduced from 80.8 KiB to 0.7 KiB in 00:00:53
// Hits JIT assert for Release with Runtime Async:
// Assertion failed 'isScalableVectorSize(size)' in 'Program:M0()' during 'Generate code' (IL size 98; hash 0xaf50ff37; FullOpts)
//
//     File: /__w/1/s/src/coreclr/jit/emitarm64sve.cpp Line: 2685
//
using System.Numerics;
using System.Threading.Tasks;
using System.Runtime.Intrinsics;
using System.Runtime.Intrinsics.Arm;
using Xunit;

public class Runtime_118924
{
    [Fact]
    public static void TestEntryPoint()
    {
        M0().GetAwaiter().GetResult();
    }

    private static async Task M0()
    {
        for (int lvar0 = -2147483648; lvar0 < -2147483646; lvar0++)
        {
            var vr1 = Vector128.CreateScalar(715424757U).AsVector();
            var vr2 = Vector.Create<uint>(0);
            var vr0 = Sve.Or(vr1, vr2);
            if (1 <= Sve.SaturatingIncrementByActiveElementCount(lvar0, vr0))
            {
                await Task.Yield();
            }
        }
    }
}
