// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

// Generated by Fuzzlyn v3.1 on 2025-05-29 20:01:16
// Run on X64 Windows
// Seed: 14412340127944514498-vectort,vector128,vector256,x86aes,x86avx,x86avx2,x86avx512bw,x86avx512bwvl,x86avx512cd,x86avx512cdvl,x86avx512dq,x86avx512dqvl,x86avx512f,x86avx512fvl,x86avx512fx64,x86bmi1,x86bmi1x64,x86bmi2,x86bmi2x64,x86fma,x86lzcnt,x86lzcntx64,x86pclmulqdq,x86popcnt,x86popcntx64,x86sse,x86ssex64,x86sse2,x86sse2x64,x86sse3,x86sse41,x86sse41x64,x86sse42,x86sse42x64,x86ssse3,x86x86base
// Reduced from 53.8 KiB to 0.7 KiB in 00:02:59
// Debug: Prints 1 line(s)
// Release: Prints 0 line(s)

using System;
using System.Runtime.CompilerServices;
using Xunit;

public class Runtime_116125
{
    [Fact]
    public static void TestEntryPoint()
    {
        ushort y = 0;
        Problem(0, ref y);
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static void Problem(ulong x, ref ushort y)
    {
        if (x / ((0UL & y) | 1) <= 0)
        {
            
        }
        else
        {
            throw new InvalidOperationException();
        }
    }
}
