// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

// Generated by Fuzzlyn v2.2 on 2024-08-05 19:14:52
// Run on Arm64 MacOS
// Seed: 16897731911671998240-vectort,vector64,vector128,armadvsimd,armadvsimdarm64,armaes,armarmbase,armarmbasearm64,armcrc32,armcrc32arm64,armdp,armrdm,armrdmarm64,armsha1,armsha256
// Reduced from 67.3 KiB to 0.3 KiB in 00:00:23
// Hits JIT assert in Debug:
// Assertion failed '(imm < maxVal) || ((imm & signBitsMask) == signBitsMask)' in 'Program:Main(Fuzzlyn.ExecutionServer.IRuntime)' during 'Generate code' (IL size 16; hash 0xade6b36b; MinOpts)
// 
//     File: /Users/runner/work/1/s/src/coreclr/jit/emitarm64.cpp Line: 2676
// 
using System;
using System.Numerics;
using System.Runtime.Intrinsics;
using Xunit;

public class Runtime_106020
{
    [Fact]
    public static void Method0()
    {
        int vr2 = 0;
        var result = Vector128.Create<short>((short)((0 * vr2) + 2147483647));
        Assert.Equal(result, Vector128.Create<short>(-1));
    }
}