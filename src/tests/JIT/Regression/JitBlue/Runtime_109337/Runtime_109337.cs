// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

// Generated by Fuzzlyn v2.4 on 2024-10-27 16:58:11
// Run on X86 Windows
// Seed: 13886187988830061152-vectort,vector128,vector256,x86aes,x86avx,x86avx2,x86avx512bw,x86avx512bwvl,x86avx512cd,x86avx512cdvl,x86avx512dq,x86avx512dqvl,x86avx512f,x86avx512fvl,x86bmi1,x86bmi2,x86fma,x86lzcnt,x86pclmulqdq,x86popcnt,x86sse,x86sse2,x86sse3,x86sse41,x86sse42,x86ssse3,x86x86base
// Reduced from 241.5 KiB to 0.6 KiB in 00:05:21
// Debug: Prints 0 line(s)
// Release: Prints 1 line(s)
using Xunit;

public class Runtime_109337
{
    private struct S0
    {
        public uint F1;
        public ushort F2;
    }

    [Fact]
    public static void TestEntryPoint()
    {
        var vr4 = new S0();
        Assert.Equal(0, TestDiv(vr4));

        vr4.F1 = 2147483649u;
        Assert.Equal(0, TestMod(vr4));
    }

    private static int TestDiv(S0 argThis)
    {
        if (((long)(17731708739983220386UL / (ushort)(argThis.F2 | 1))) >= 0)
        {
            return 1;
        }

        return 0;
    }

    private static int TestMod(S0 argThis)
    {
        if (((int)(2147483648u % argThis.F1)) >= 0)
        {
            return 1;
        }

        return 0;
    }
}
