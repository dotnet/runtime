// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

// Generated by Fuzzlyn v3.0 on 2025-05-25 16:50:09
// Run on Arm64 MacOS
// Seed: 18178428402533635742-vectort,vector64,vector128,armadvsimd,armadvsimdarm64,armaes,armarmbase,armarmbasearm64,armcrc32,armcrc32arm64,armdp,armrdm,armrdmarm64,armsha1,armsha256
// Reduced from 127.3 KiB to 0.6 KiB in 00:01:07
// Hits JIT assert in Release:
// Assertion failed 'm_blockLayout->CanAssignFrom(m_src->GetLayout(m_comp))' in 'Program:Main(Fuzzlyn.ExecutionServer.IRuntime)' during 'Morph - Global' (IL size 75; hash 0xade6b36b; FullOpts)
// 
//     File: /Users/runner/work/1/s/src/coreclr/jit/morphblock.cpp Line: 668
// 

using System;
using System.Runtime.CompilerServices;
using System.Runtime.Intrinsics;
// using System.Numerics;
using Xunit;

public class C1
{
}

public struct S1
{
    public Vector64<short> F0;
    public long F2;
    public C1 F6;
    public ulong F7;
}

public struct S3
{
    public C1 F4;
    public S1 F6;
    public S3(C1 f4, S1 f6) : this()
    {
        F4 = f4;
        F6 = f6;
    }
}

public class Runtime_115979
{
    [Fact]
    public static int Test()
    {
        int result = -1;
        try
        {
            Problem();
        }
        catch (NullReferenceException)
        {
            result = 100;
        }
        return result;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    static void Problem()
    {
        S1[] vr0 = default(S1[]);
        S3 vr1 = new S3(new C1(), new S1());
        S3 vr2 = new S3(vr0[0].F6, vr1.F6);
        System.Console.WriteLine(vr2.F6.F0);
    }
}