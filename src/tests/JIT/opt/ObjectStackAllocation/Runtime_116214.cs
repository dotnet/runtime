// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

using System;
using System.Runtime.Intrinsics;
using Xunit;

// Generated by Fuzzlyn v3.1 on 2025-05-30 09:51:10
// Run on Arm64 MacOS
// Seed: 1654487800225229357-vectort,vector64,vector128,armadvsimd,armadvsimdarm64,armaes,armarmbase,armarmbasearm64,armcrc32,armcrc32arm64,armdp,armrdm,armrdmarm64,armsha1,armsha256
// Reduced from 20.8 KiB to 0.7 KiB in 00:00:16
// Hits JIT assert for Release:
// Assertion failed 'm_blockLayout->CanAssignFrom(m_src->GetLayout(m_comp))' in 'Program:M1():ubyte' during 'Morph - Global' (IL size 62; hash 0x3f34c1f3; FullOpts)
// 
//     File: /Users/runner/work/1/s/src/coreclr/jit/morphblock.cpp Line: 668
// 

public class C0
{
}

public struct S0
{
    public C0 F0;
    public bool F2;
    public C0 F4;
    public byte F6;
    public S0(C0 f4) : this()
    {
        F4 = f4;
    }
}

public struct S1
{
    public S0 F2;
    public Vector64<uint> F4;
    public S1(S0 f2)
    {
        F2 = f2;
    }
}

public class Runtime_116124
{
    [Fact]
    public static void Test()
    {
        bool vr1 = M1();
    }

    static bool M1()
    {
        S1 var0 = new S1(new S0(new C0()));
        var0.F2 = var0.F2;
        byte var5 = var0.F2.F6++;
        return var0.F2.F2;
    }
}
