// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

// Generated by Fuzzlyn v3.1 on 2025-05-15 14:08:16
// Run on X64 Windows
// Seed: 200623394434482114-async,runtimeasync,vectort,vector128,vector256,x86aes,x86avx,x86avx2,x86bmi1,x86bmi1x64,x86bmi2,x86bmi2x64,x86fma,x86lzcnt,x86lzcntx64,x86pclmulqdq,x86pclmulqdqv256,x86popcnt,x86popcntx64,x86sse,x86ssex64,x86sse2,x86sse2x64,x86sse3,x86sse41,x86sse41x64,x86sse42,x86sse42x64,x86ssse3,x86x86base
// Reduced from 71.0 KiB to 0.9 KiB in 00:02:38
// Hits JIT assert for Release with Runtime Async:
// Assertion failed '(resultLcl->TypeGet() == TYP_STRUCT) == (call->gtReturnType == TYP_STRUCT)' in 'Program:M5():ubyte' during 'Transform async' (IL size 13; hash 0x6dd3c0f7; FullOpts)
//
//     File: C:\dev\dotnet\runtime2\src\coreclr\jit\async.cpp Line: 1509
//
using System;
using System.Numerics;
using System.Runtime.Intrinsics;
using System.Threading.Tasks;
using Xunit;

public class Runtime_115613
{
    private static ulong[][] s_11 = new ulong[][]
    {
        new ulong[]
        {
            1,
            1,
            0,
            1
        }
    };
    private static Vector128<uint>[] s_16;
    [Fact]
    public static void TestEntryPoint()
    {
        bool vr6 = M5().GetAwaiter().GetResult();
    }

    private static async2 Task<bool> M5()
    {
        var vr5 = await M7();
        return false;
    }

    private static async2 Task<Vector128<short>> M7()
    {
        var vr2 = new uint[]
        {
            0
        };
        var vr1 = (short)M9(ref s_16);
        return Vector128.Create<short>(vr1);
    }

    private static uint M9(ref Vector128<uint>[] arg5)
    {
        return default(uint);
    }
}