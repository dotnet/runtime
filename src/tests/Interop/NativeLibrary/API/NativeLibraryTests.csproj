<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <!-- Finalize in different assembly from Dispose, tries to load the assembly with Dispose after the ALC unload started -->
    <UnloadabilityIncompatible>true</UnloadabilityIncompatible>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="*.cs" />
    <Compile Include="../NativeLibraryToLoad/NativeLibraryToLoad.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="../NativeLibraryToLoad/NativeLibrary.cpp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="$(TestSourceDir)Common/CoreCLRTestLibrary/CoreCLRTestLibrary.csproj" />
    <CMakeProjectReference Include="../NativeLibraryToLoad/CMakeLists.txt" />
  </ItemGroup>

  <Target Name="SetUpSubdirectory" AfterTargets="CopyNativeProjectBinaries">
    <PropertyGroup>
      <NativeLibrarySubdirectory>$(OutDir)/subdirectory</NativeLibrarySubdirectory>
      <FileNameSuffix>-in-subdirectory</FileNameSuffix>
    </PropertyGroup>
    <ItemGroup>
      <AssembliesToCopy Include="$(OutDir)/libNativeLibrary.*" />
      <AssembliesToCopy Include="$(OutDir)/NativeLibrary.*" />
      <AssembliesToCopy Include="$(OutDir)/$(TargetName).dll" />
    </ItemGroup>
    <Copy SourceFiles="@(AssembliesToCopy)" DestinationFiles="@(AssembliesToCopy -> '$(NativeLibrarySubdirectory)/%(Filename)$(FileNameSuffix)%(Extension)')" />
  </Target>
</Project>
