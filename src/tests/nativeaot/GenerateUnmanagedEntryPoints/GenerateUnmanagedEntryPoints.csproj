<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <IlcExportUnmanagedEntrypoints>true</IlcExportUnmanagedEntrypoints>
    <!--
      For some reason, this particular test hits some case in AddressSanitizer where it fails to intercept methods correctly, causing failures.
      Disable for now.
    -->
    <DisableProjectBuild Condition="'$(EnableNativeSanitizers)' != ''">true</DisableProjectBuild>
    <HasMergedInTests>true</HasMergedInTests>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="GenerateUnmanagedEntryPoints.cs" />
    <ProjectReference Include="$(MSBuildThisFileDirectory)ReferencedAssembly1\ReferencedAssembly1.csproj" />
    <ProjectReference Include="$(MSBuildThisFileDirectory)ReferencedAssembly2\ReferencedAssembly2.csproj" />
  </ItemGroup>

  <!-- Expose additional unmanaged entry points from ReferencedAssembly1 -->
  <ItemGroup>
    <UnmanagedEntryPointsAssembly Include="ReferencedAssembly1" />
  </ItemGroup>

  <!--
    Treat this test as a merged test runner.
    This test needs to be its own executable to validate the UnmanagedEntryPointsAssembly feature,
    but we want to run this test on mobile platforms as well.
    However, mobile platforms don't support tests that require process isolation, so we can't use RequiresProcessIsolation.
    Instead, we treat this test as a merged test runner itself, so that it can run on mobile platforms.
  -->
  <Import Project="$(TestSourceDir)MergedTestRunner.targets" />
</Project>
