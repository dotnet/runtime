<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworkIdentifier>.NETCoreApp</TargetFrameworkIdentifier>
    <OutputType>Library</OutputType>
    <CLRTestKind>SharedLibrary</CLRTestKind>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <IsTestProject>false</IsTestProject>
  </PropertyGroup>

  <PropertyGroup Condition="'$(GitHubRepositoryName)' == 'runtime'">
    <DefineConstants>$(DefineConstants);DIAGNOSTICS_RUNTIME</DefineConstants>
    <NoWarn>CS1591,CS8073,CS0162</NoWarn>
  </PropertyGroup>

  <PropertyGroup>
    <!-- On Linux arm coreclr, the updated tracing/eventpipe/common/Microsoft.Diagnostics.NETCore.Client/Microsoft.Diagnostics.NETCore.Client.csproj project
         does not yet work for several eventpipe runtime tests. We segment those tests with the following property and symbol -->
    <UseUpdatedNETCoreClient Condition="!('$(TargetOS)' == 'Linux' And '$(TargetArchitecture)' == 'arm' And '$(RuntimeFlavor)' == 'coreclr')">true</UseUpdatedNETCoreClient>
    <DefineConstants Condition="'$(UseUpdatedNETCoreClient)' == 'true'">$(DefineConstants);UPDATED_NETCORE_CLIENT</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <Compile Condition="'$(UseUpdatedNETCoreClient)' == 'true'" Include="IpcTraceTest.cs" />
    <Compile Condition="'$(UseUpdatedNETCoreClient)' != 'true'" Include="IpcTraceTest.legacy.cs" />
    <Compile Include="IpcUtils.cs" />
    <Compile Include="Reverse.cs" />
    <Compile Include="StreamProxy.cs" />
    <ProjectReference Condition="'$(UseUpdatedNETCoreClient)' == 'true'" Include="Microsoft.Diagnostics.NETCore.Client/Microsoft.Diagnostics.NETCore.Client.csproj" />
  </ItemGroup>
</Project>
