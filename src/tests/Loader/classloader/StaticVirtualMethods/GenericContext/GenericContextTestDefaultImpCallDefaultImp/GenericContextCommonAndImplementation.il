// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

// THIS FILE IS AUTOGENERATED EDIT Generator/Program.cs instead and rerun the generator
.assembly extern System.Console {}
.assembly extern xunit.core {}
.assembly extern mscorlib {}
.assembly extern System.Runtime {}
.assembly extern GenericContextCommonCs {}
.assembly GenericContextCommonAndImplementation {}
.class interface public abstract auto ansi IFaceNonGeneric
{
    .method public newslot virtual abstract static void NormalMethod() {}
    .method public newslot virtual abstract static void GenericMethod<U>() {}
}

.class interface public abstract auto ansi IFaceGeneric`1<T>
{
    .method public newslot virtual abstract static void NormalMethod() {}
    .method public newslot virtual abstract static void GenericMethod<U>() {}
}

.class interface public abstract auto ansi IFaceCuriouslyRecurringGeneric`1<(class IFaceCuriouslyRecurringGeneric`1<!0>) T> 
{
    .method public newslot virtual abstract static void NormalMethod() {}
    .method public newslot virtual abstract static void GenericMethod<U>() {}
}

.class interface public abstract auto ansi IFaceNonGenericDefaultImp
{
    .method public newslot virtual static void NormalMethod()
    {
        ldstr "IFaceNonGenericDefaultImp.NormalMethod"
        stsfld string [GenericContextCommonCs]Statics::String
        ret
    }
    .method public newslot virtual static void GenericMethod<U>()
    {
        ldstr "IFaceNonGenericDefaultImp.GenericMethod<"
        ldtoken !!0
        call string[GenericContextCommonCs] Statics::MakeName(valuetype[System.Runtime]System.RuntimeTypeHandle)
        ldstr ">"
        call string[System.Runtime] System.String::Concat(string, string, string)
        stsfld string [GenericContextCommonCs]Statics::String
        ret
    }
}

.class interface public abstract auto ansi IFaceGenericDefaultImp`1<T>
{
    .method public newslot virtual static void NormalMethod()
    {
        ldstr "IFaceGenericDefaultImp`1<"
        ldtoken !0
        call string[GenericContextCommonCs] Statics::MakeName(valuetype[System.Runtime]System.RuntimeTypeHandle)
        ldstr ">.NormalMethod"
        call string[System.Runtime] System.String::Concat(string, string, string)
        stsfld string [GenericContextCommonCs]Statics::String
        ret
    }
    .method public newslot virtual static void GenericMethod<U>()
    {
        ldstr "IFaceGenericDefaultImp`1<"
        ldtoken !0
        call string[GenericContextCommonCs] Statics::MakeName(valuetype[System.Runtime]System.RuntimeTypeHandle)
        ldstr ">.GenericMethod<"
        ldtoken !!0
        call string[GenericContextCommonCs] Statics::MakeName(valuetype[System.Runtime]System.RuntimeTypeHandle)
        ldstr ">"
        call string[System.Runtime] System.String::Concat(string, string, string)
        call string[System.Runtime] System.String::Concat(string, string, string)
        stsfld string [GenericContextCommonCs]Statics::String
        ret
    }
}

.class interface public abstract auto ansi IFaceCuriouslyRecurringGenericDefaultImp`1<(class IFaceCuriouslyRecurringGenericDefaultImp`1<!0>) T> 
{
    .method public newslot virtual static void NormalMethod()
    {
        ldstr "IFaceCuriouslyRecurringGenericDefaultImp`1<"
        ldtoken !0
        call string[GenericContextCommonCs] Statics::MakeName(valuetype[System.Runtime]System.RuntimeTypeHandle)
        ldstr ">.NormalMethod"
        call string[System.Runtime] System.String::Concat(string, string, string)
        stsfld string [GenericContextCommonCs]Statics::String
        ret
    }
    .method public newslot virtual static void GenericMethod<U>()
    {
        ldstr "IFaceCuriouslyRecurringGenericDefaultImp`1<"
        ldtoken !0
        call string[GenericContextCommonCs] Statics::MakeName(valuetype[System.Runtime]System.RuntimeTypeHandle)
        ldstr ">.GenericMethod<"
        ldtoken !!0
        call string[GenericContextCommonCs] Statics::MakeName(valuetype[System.Runtime]System.RuntimeTypeHandle)
        ldstr ">"
        call string[System.Runtime] System.String::Concat(string, string, string)
        call string[System.Runtime] System.String::Concat(string, string, string)
        stsfld string [GenericContextCommonCs]Statics::String
        ret
    }
}

.class public sealed auto ansi GenericStruct`1<T>
       extends[System.Runtime] System.ValueType
{
}
.class public auto ansi NonGenericClass
       extends [System.Runtime]System.Object
       implements IFaceNonGenericDefaultImp,
                  class IFaceGenericDefaultImp`1<string>,
                  class IFaceGenericDefaultImp`1<object>,
                  class IFaceCuriouslyRecurringGenericDefaultImp`1<class NonGenericClass>
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [System.Runtime]System.Object::.ctor()
    IL_0006:  ret
  }

} // end of class NonGenericClass
.class public auto ansi sealed NonGenericValuetype
       extends [System.Runtime]System.ValueType
       implements IFaceNonGenericDefaultImp,
                  class IFaceGenericDefaultImp`1<string>,
                  class IFaceGenericDefaultImp`1<object>,
                  class IFaceCuriouslyRecurringGenericDefaultImp`1<valuetype NonGenericValuetype>
{

} // end of class NonGenericValuetype
.class public auto ansi GenericClass`1<T>
       extends [System.Runtime]System.Object
       implements IFaceNonGenericDefaultImp,
                  class IFaceGenericDefaultImp`1<string>,
                  class IFaceGenericDefaultImp`1<object>,
                  class IFaceCuriouslyRecurringGenericDefaultImp`1<class GenericClass`1<!0>>
{
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [System.Runtime]System.Object::.ctor()
    IL_0006:  ret
  }

} // end of class GenericClass`1
.class public auto ansi sealed GenericValuetype`1<T>
       extends [System.Runtime]System.ValueType
       implements IFaceNonGenericDefaultImp,
                  class IFaceGenericDefaultImp`1<string>,
                  class IFaceGenericDefaultImp`1<object>,
                  class IFaceCuriouslyRecurringGenericDefaultImp`1<valuetype GenericValuetype`1<!0>>
{

} // end of class GenericValuetype`1
