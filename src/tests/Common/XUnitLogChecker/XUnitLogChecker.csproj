<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>$(NetCoreAppToolCurrent)</TargetFramework>
    <GenerateRuntimeConfigurationFiles>true</GenerateRuntimeConfigurationFiles>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <XUnitLogCheckerLibrariesHelixDirectory>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'helix', 'tests', 'XUnitLogChecker'))</XUnitLogCheckerLibrariesHelixDirectory>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="XUnitLogChecker.cs" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="../Coreclr.TestWrapper/CoreclrTestWrapperLib.cs" Link="CoreclrTestWrapperLib.cs" />
    <Compile Include="../Coreclr.TestWrapper/MobileAppHandler.cs" Link="MobileAppHandler.cs" />
  </ItemGroup>

  <Target Name="Test">
    <!-- This avoids attempting to run tests on this assembly because it is being included in libs.tests.
         TODO: Build XUnitLogChecker once, in a common location for coreclr and libraries, then zip and upload it once,
         and then consume the same payload in both the coreclr and libraries tests. -->
  </Target>
 
  <Target Name="ZipTestArchive" AfterTargets="PrepareForRun" Condition="'$(IsXUnitLogCheckerSupported)' == 'true'">
    <!-- TODO: This project gets excluded from the libraries ones, preventing it from getting zipped and uploaded along
         with the others, so we need to have a copy of the target here. This may be removed once we consolidate coreclr with libraries
         in a common location that will work for both. -->
    <MakeDir Directories="$(XUnitLogCheckerLibrariesHelixDirectory)" />
    <Message Importance="High" Text="XUnitLogCheckerLibrariesHelixDirectory: $(XUnitLogCheckerLibrariesHelixDirectory)" />
    <Message Importance="High" Text="ArtifactsBinDir: $(ArtifactsBinDir)" />
    <ZipDirectory SourceDirectory="$(OutDir)"
                  DestinationFile="$(XUnitLogCheckerLibrariesHelixDirectory)$(MSBuildProjectName).zip"
                  Overwrite="true" />
  </Target>

</Project>
