<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <DefineConstants>$(DefineConstants);XMLSERIALIZERGENERATORTESTS</DefineConstants>
    <TargetFrameworks>$(NetCoreAppCurrent)</TargetFrameworks>
    <SkipTestsOnPlatform Condition="'$(TargetsMobile)' == 'true' or '$(TargetOS)' == 'FreeBSD' or '$(TargetArchitecture)' == 'arm' or '$(TargetArchitecture)' == 'arm64' or '$(TargetArchitecture)' == 'armel' or '$(TargetArchitecture)' == 'wasm'">true</SkipTestsOnPlatform>
  </PropertyGroup>

  <ItemGroup Condition=" '$(SkipTestsOnPlatform)' != 'true'">
    <Compile Include="SGenTests.cs" />
    <Compile Include="$(CommonTestPath)System\Runtime\Serialization\Utils.cs" />
    <Compile Include="$(TestSourceFolder)..\..\System.Private.Xml\tests\XmlSerializer\XmlSerializerTests.cs" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="AlwaysPassTest.cs" />
    <None Include="Expected.XmlSerializers.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <Content Include="$(GeneratorRuntimeConfig)">
      <!-- Rename it to match the Generator application name -->
      <Link>dotnet-Microsoft.XmlSerializer.Generator.runtimeconfig.json</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup Condition=" '$(SkipTestsOnPlatform)' != 'true'">
    <ProjectReference Include="..\src\Microsoft.XmlSerializer.Generator.csproj" />
    <ProjectReference Include="SerializableAssembly.csproj" />
  </ItemGroup>

  <!-- This target runs before binplacing as it needs to provide a test assembly to binplace, and depends on CopyFilesToOutputDirectory
       so that the Generator app dll and runtimeconfig will be copied to the OutputPath -->
  <Target Name="GenerateSerializationAssembly" DependsOnTargets="CopyFilesToOutputDirectory" AfterTargets="PrepareForRun" Condition=" '$(SkipTestsOnPlatform)' != 'true' ">
    <PropertyGroup>
      <SerializerName>SerializableAssembly.XmlSerializers</SerializerName>
    </PropertyGroup>
    <Message Text="Running Serialization Tool" Importance="normal" />
    <Csc Condition="Exists('$(OutputPath)Expected.XmlSerializers.cs') == 'true'" OutputAssembly="$(OutputPath)$(SerializerName).dll" References="@(ReferencePath);@(IntermediateAssembly)" EmitDebugInformation="$(DebugSymbols)" DebugType="$(DebugType)" Sources="$(OutputPath)Expected.XmlSerializers.cs" TargetType="Library" ToolExe="$(CscToolExe)" ToolPath="$(CscToolPath)" DisabledWarnings="$(NoWarn), 219" UseSharedCompilation="true" />
    <Warning Condition="Exists('$(OutputPath)$(SerializerName).dll') != 'true'" Text="Fail to generate $(OutputPath)$(SerializerName).dll" />
    <ItemGroup>
      <!-- Include the Serializer in ReferenceCopyLocalPaths so that it will be binplaced -->
      <ReferenceCopyLocalPaths Include="$(OutputPath)$(SerializerName).dll" />
    </ItemGroup>
  </Target>
  <ItemGroup>
    <AdditionalFiles Remove="C:\Users\smolloy\.nuget\packages\microsoft.dotnet.codeanalysis\6.0.0-beta.21366.1\build\..\content\PinvokeAnalyzer_Win32Apis.txt" />
  </ItemGroup>
</Project>
