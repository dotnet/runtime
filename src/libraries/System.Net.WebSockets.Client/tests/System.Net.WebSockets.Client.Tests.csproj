<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <StringResourcesPath>../src/Resources/Strings.resx</StringResourcesPath>
    <TargetFrameworks>$(NetCoreAppCurrent);$(NetCoreAppCurrent)-Browser</TargetFrameworks>
    <DefineConstants>$(DefineConstants);NETSTANDARD</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetOS)' == 'Browser'">
    <!-- This doesn't run on V8 because it lacks websocket support -->
    <Scenario>WasmTestOnBrowser</Scenario>
    <TestArchiveTestsRoot>$(TestArchiveRoot)browserornodejs/</TestArchiveTestsRoot>
    <TestArchiveTestsDir>$(TestArchiveTestsRoot)$(OSPlatformConfig)/</TestArchiveTestsDir>
    <DefineConstants>$(DefineConstants);TARGET_BROWSER</DefineConstants>
  </PropertyGroup>

  <Import Condition="'$(TargetOS)' == 'Browser'" Project="$(CommonTestPath)System/Net/Prerequisites/LocalEchoServer.props" />

  <ItemGroup>
    <WasmExtraFilesToDeploy Include="package.json" />
    <WasmExtraFilesToDeploy Include="package-lock.json" />
  </ItemGroup>

  <Target Name="ProvideNpmRestoreScripts" BeforeTargets="GenerateRunScript">
    <ItemGroup Condition="'$(OS)' != 'Windows_NT'">
      <!-- WebSocket tests use self-signed certificates for wss protocol that are refused by NodeJS -->
      <SetScriptCommands Include="if [[ &quot;$SCENARIO&quot; == &quot;WasmTestOnNodeJs&quot; || &quot;$SCENARIO&quot; == &quot;wasmtestonnodejs&quot; ]]; then export NODE_TLS_REJECT_UNAUTHORIZED=0; fi" />
      <SetScriptCommands Include="if [[ &quot;$SCENARIO&quot; == &quot;WasmTestOnNodeJs&quot; || &quot;$SCENARIO&quot; == &quot;wasmtestonnodejs&quot; ]]; then export WasmXHarnessMonoArgs=&quot;$WasmXHarnessMonoArgs --setenv=NPM_MODULES=ws:WebSocket&quot;; fi" />
      <!-- Restore NPM packages -->
      <RunScriptCommands Include="if [[ &quot;$SCENARIO&quot; == &quot;WasmTestOnNodeJs&quot; || &quot;$SCENARIO&quot; == &quot;wasmtestonnodejs&quot; ]]; then npm ci; fi" />
    </ItemGroup>
    <ItemGroup Condition="'$(OS)' == 'Windows_NT'">
      <!-- WebSocket tests use self-signed certificates for wss protocol that are refused by NodeJS -->
      <SetScriptCommands Include="if /I [%SCENARIO%]==[WasmTestOnNodeJS] ( set &quot;NODE_TLS_REJECT_UNAUTHORIZED=0&quot; )" />
      <SetScriptCommands Include="if /I [%SCENARIO%]==[WasmTestOnNodeJS] ( set &quot;WasmXHarnessMonoArgs=%WasmXHarnessMonoArgs% --setenv=NPM_MODULES^=ws:WebSocket&quot; )" />
      <!-- Restore NPM packages -->
      <RunScriptCommands Include="if /I [%SCENARIO%]==[WasmTestOnNodeJS] ( call npm ci )" />
    </ItemGroup>
  </Target>

  <!-- Browser specific files -->
  <ItemGroup Condition="'$(TargetOS)' == 'Browser'">
    <ProjectReference Include="$(CommonTestPath)System/Net/Prerequisites/NetCoreServer/NetCoreServer.csproj" ReferenceOutputAssembly="false"/>
    <ProjectReference Include="$(CommonTestPath)System/Net/Prerequisites/RemoteLoopServer/RemoteLoopServer.csproj" ReferenceOutputAssembly="false"/>
    <Compile Include="$(CommonTestPath)System\Net\WebSockets\WebSocketStream.cs"
             Link="Common\System\Net\WebSockets\WebSocketStream.cs" />
  </ItemGroup>

  <!-- Do not reference these assemblies from the TargetingPack since we are building part of the source code for tests. -->
  <ItemGroup>
    <DefaultReferenceExclusion Include="System.Configuration" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="$(CommonTestPath)System\Net\Capability.Security.cs"
             Link="Common\System\Net\Capability.Security.cs" />
    <Compile Include="$(CommonTestPath)System\Net\Configuration.cs"
             Link="Common\System\Net\Configuration.cs" />
    <Compile Include="$(CommonTestPath)System\Net\Configuration.Certificates.cs"
             Link="Common\System\Net\Configuration.Certificates.cs" />
    <Compile Include="$(CommonTestPath)System\Net\Configuration.Http.cs"
             Link="Common\System\Net\Configuration.Http.cs" />
    <Compile Include="$(CommonTestPath)System\Net\Configuration.Security.cs"
             Link="Common\System\Net\Configuration.Security.cs" />
    <Compile Include="$(CommonTestPath)System\Net\Configuration.WebSockets.cs"
             Link="Common\System\Net\Configuration.WebSockets.cs" />
    <Compile Include="$(CommonTestPath)System\Net\EventSourceTestLogging.cs"
             Link="Common\System\Net\EventSourceTestLogging.cs" />
    <Compile Include="$(CommonTestPath)System\Net\Http\LoopbackProxyServer.cs"
             Link="Common\System\Net\Http\LoopbackProxyServer.cs" />
    <Compile Include="$(CommonTestPath)System\Net\Http\LoopbackServer.cs"
             Link="Common\System\Net\Http\LoopbackServer.cs" />
    <Compile Include="$(CommonTestPath)System\Net\Http\GenericLoopbackServer.cs"
             Link="Common\System\Net\Http\GenericLoopbackServer.cs" />
    <Compile Include="$(CommonTestPath)System\Security\Cryptography\PlatformSupport.cs"
             Link="CommonTest\System\Security\Cryptography\PlatformSupport.cs" />
    <Compile Include="$(CommonTestPath)System\Threading\Tasks\TaskTimeoutExtensions.cs"
             Link="Common\System\Threading\Tasks\TaskTimeoutExtensions.cs" />
    <Compile Include="AbortTest.cs" />
    <Compile Include="CancelTest.cs" />
    <Compile Include="ClientWebSocketOptionsTests.cs" />
    <Compile Include="ClientWebSocketTestBase.cs" />
    <Compile Include="ClientWebSocketUnitTest.cs" />
    <Compile Include="CloseTest.cs" />
    <Compile Include="ConnectTest.cs" />
    <Compile Include="KeepAliveTest.cs" />
    <Compile Include="LoopbackHelper.cs" />
    <Compile Include="ResourceHelper.cs" />
    <Compile Include="SendReceiveTest.cs" />
    <Compile Include="WebSocketData.cs" />
    <Compile Include="WebSocketHelper.cs" />
    <Compile Include="DeflateTests.cs" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="System.Net.TestData" Version="$(SystemNetTestDataVersion)" />
  </ItemGroup>
</Project>
