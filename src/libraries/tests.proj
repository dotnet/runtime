<Project Sdk="Microsoft.Build.Traversal">

  <PropertyGroup>
    <TestInParallel Condition="'$(Coverage)' == 'true'">false</TestInParallel>
    <!-- For tests we want to continue running if a test run failed. -->
    <TestContinueOnError>ErrorAndContinue</TestContinueOnError>
    <TraversalGlobalProperties>BuildAllProjects=true</TraversalGlobalProperties>
    <CoverageReportInputPath>$(ArtifactsBinDir)\*.Tests\**\coverage.opencover.xml</CoverageReportInputPath>
    <CoverageReportDir>$(ArtifactsDir)coverage</CoverageReportDir>
    <EnableCoverageSupport>true</EnableCoverageSupport>
  </PropertyGroup>
  
  <!-- Projects that don't support code coverage measurement. -->
  <ItemGroup Condition="'$(Coverage)' == 'true'">
    <ProjectExclusions Include="$(CommonTestPath)Common.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)Microsoft.XmlSerializer.Generator\tests\Microsoft.XmlSerializer.Generator.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Transactions.Local\tests\System.Transactions.Local.Tests.csproj" />
  </ItemGroup>

  <ItemGroup>
    <!-- We currently only test with C# projects. -->
    <ProjectReference Include="$(MSBuildThisFileDirectory)*\tests\**\*.Tests.csproj"
                      Exclude="@(ProjectExclusions)"
                      Condition="'$(BuildAllConfigurations)' != 'true'" />
    <ProjectReference Include="$(MSBuildThisFileDirectory)pkg\test\testPackages.proj"
                      Condition="'$(BuildAllConfigurations)' == 'true'" />
  </ItemGroup>

  <Target Name="GenerateMergedCoverageReport"
          Condition="'$(Coverage)' == 'true'"
          AfterTargets="Test"
          DependsOnTargets="GenerateCoverageReport" />

</Project>
