<Project Sdk="Microsoft.Build.Traversal">

  <PropertyGroup>
    <TestInParallel Condition="'$(Coverage)' == 'true'">false</TestInParallel>
    <!-- For tests we want to continue running if a test run failed. -->
    <TestContinueOnError>ErrorAndContinue</TestContinueOnError>
    <TraversalGlobalProperties>BuildAllProjects=true</TraversalGlobalProperties>
    <CoverageReportInputPath>$(ArtifactsBinDir)\*.Tests\**\coverage.opencover.xml</CoverageReportInputPath>
    <CoverageReportDir>$(ArtifactsDir)coverage</CoverageReportDir>
    <EnableCoverageSupport>true</EnableCoverageSupport>
    <TestAssemblies Condition="'$(TestAssemblies)' == ''">true</TestAssemblies>
    <TestPackages Condition="'$(TestPackages)' == ''">false</TestPackages>
    <TestTrimming Condition="'$(TestTrimming)' == ''">false</TestTrimming>
  </PropertyGroup>
  
  <!-- Projects that don't support code coverage measurement. -->
  <ItemGroup Condition="'$(Coverage)' == 'true'">
    <ProjectExclusions Include="$(CommonTestPath)Common.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)Microsoft.XmlSerializer.Generator\tests\Microsoft.XmlSerializer.Generator.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Transactions.Local\tests\System.Transactions.Local.Tests.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetOS)' == 'Browser' and '$(RunDisabledWasmTests)' != 'true'">
    <!-- Builds currently do not pass -->
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Data.Common\tests\System.Data.Common.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Diagnostics.DiagnosticSource\tests\TestWithConfigSwitches\System.Diagnostics.DiagnosticSource.Switches.Tests.csproj" />

    <!-- Mono-Browser ignores runtimeconfig.template.json (e.g. for these two it has "System.Globalization.Invariant": true) -->
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Globalization\tests\Invariant\Invariant.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Globalization.Calendars\tests\CalendarTestWithConfigSwitch\System.Globalization.CalendarsWithConfigSwitch.Tests.csproj" />

    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.IO.FileSystem\tests\System.IO.FileSystem.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Linq.Parallel\tests\System.Linq.Parallel.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Net.Http\tests\FunctionalTests\System.Net.Http.Functional.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Net.Primitives\tests\FunctionalTests\System.Net.Primitives.Functional.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Net.Primitives\tests\PalTests\System.Net.Primitives.Pal.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Net.WebSockets.Client\tests\System.Net.WebSockets.Client.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.ObjectModel\tests\System.ObjectModel.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Private.Uri\tests\FunctionalTests\System.Private.Uri.Functional.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Threading.Thread\tests\System.Threading.Thread.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.ValueTuple\tests\System.ValueTuple.Tests.csproj" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="$(MSBuildThisFileDirectory)*\tests\**\*.Tests.csproj"
                      Exclude="@(ProjectExclusions)"
                      Condition="'$(TestAssemblies)' == 'true'" />
    <ProjectReference Include="$(MSBuildThisFileDirectory)pkg\test\testPackages.proj"
                      Condition="'$(TestPackages)' == 'true'" />
    <ProjectReference Include="$(MSBuildThisFileDirectory)*\tests\**\*.TrimmingTests.proj"
                      Exclude="@(ProjectExclusions)"
                      Condition="'$(TestTrimming)' == 'true'" />
  </ItemGroup>

  <Target Name="GenerateMergedCoverageReport"
          AfterTargets="Test"
          DependsOnTargets="GenerateCoverageReport"
          Condition="'$(TestAssemblies)' == 'true' and
                     '$(Coverage)' == 'true'" />

</Project>
