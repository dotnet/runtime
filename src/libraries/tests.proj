<Project Sdk="Microsoft.Build.Traversal">

  <PropertyGroup>
    <TestInParallel Condition="'$(Coverage)' == 'true'">false</TestInParallel>
    <!-- For tests we want to continue running if a test run failed. -->
    <TestContinueOnError>ErrorAndContinue</TestContinueOnError>
    <TraversalGlobalProperties>BuildAllProjects=true</TraversalGlobalProperties>
    <CoverageReportInputPath>$(ArtifactsBinDir)\*.Tests\**\coverage.opencover.xml</CoverageReportInputPath>
    <CoverageReportDir>$(ArtifactsDir)coverage</CoverageReportDir>
    <EnableCoverageSupport>true</EnableCoverageSupport>
  </PropertyGroup>
  
  <!-- Projects that don't support code coverage measurement. -->
  <ItemGroup Condition="'$(Coverage)' == 'true'">
    <ProjectExclusions Include="$(CommonTestPath)Common.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)Microsoft.XmlSerializer.Generator\tests\Microsoft.XmlSerializer.Generator.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Transactions.Local\tests\System.Transactions.Local.Tests.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetOS)' == 'Browser'">
    <!-- Mysteriously won't build on Wasm -->
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Runtime.Serialization.Formatters\tests\System.Runtime.Serialization.Formatters.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Data.Common\tests\System.Data.Common.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)Microsoft.Extensions.DependencyModel\tests\Microsoft.Extensions.DependencyModel.Tests.csproj" />
    <!-- Builds and runs but hangs -->
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Threading.Tasks\tests\System.Threading.Tasks.Tests.csproj" />
    <!-- Builds and runs but fails hard enough to not produce any output XML -->
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)Microsoft.Extensions.DependencyInjection\tests\Microsoft.Extensions.DependencyInjection.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)Microsoft.Extensions.Http\tests\Microsoft.Extensions.Http.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)Microsoft.Extensions.Logging.EventSource\tests\Microsoft.Extensions.Logging.EventSource.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)Microsoft.Extensions.Logging\tests\Microsoft.Extensions.Logging.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Collections.Concurrent\tests\System.Collections.Concurrent.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.ComponentModel.EventBasedAsync\tests\System.ComponentModel.EventBasedAsync.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Configuration.ConfigurationManager\tests\System.Configuration.ConfigurationManager.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Diagnostics.DiagnosticSource\tests\System.Diagnostics.DiagnosticSource.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.IO.Pipelines\tests\System.IO.Pipelines.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.IO\tests\System.IO.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Linq.Parallel\tests\System.Linq.Parallel.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Net.Http.Json.Functional\tests\System.Net.Http.Json.Functional.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Net.Mail.Functional\tests\System.Net.Mail.Functional.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Net.NetworkInformation.Functional\tests\System.Net.NetworkInformation.Functional.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Net.Requests\tests\System.Net.Requests.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Net.WebClient\tests\System.Net.WebClient.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Net.WebSockets\tests\System.Net.WebSockets.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Net.WebSockets.WebSocketProtocol\tests\System.Net.WebSockets.WebSocketProtocol.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Reflection.Emit.ILGeneration\tests\System.Reflection.Emit.ILGeneration.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Text.Json\tests\System.Text.Json.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Threading.Channels\tests\System.Threading.Channels.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Threading.Tasks.Dataflow\tests\System.Threading.Tasks.Dataflow.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Threading.Tasks.Extensions\tests\System.Threading.Tasks.Extensions.Tests.csproj" />
    <ProjectExclusions Include="$(MSBuildThisFileDirectory)System.Threading\tests\System.Threading.Tests.csproj" />
  </ItemGroup>

  <ItemGroup>
    <!-- We currently only test with C# projects. -->
    <ProjectReference Include="$(MSBuildThisFileDirectory)*\tests\**\*.Tests.csproj"
                      Exclude="@(ProjectExclusions)"
                      Condition="'$(BuildAllConfigurations)' != 'true'" />
    <ProjectReference Include="$(MSBuildThisFileDirectory)pkg\test\testPackages.proj"
                      Condition="'$(BuildAllConfigurations)' == 'true'" />
  </ItemGroup>

  <Target Name="GenerateMergedCoverageReport"
          Condition="'$(Coverage)' == 'true'"
          AfterTargets="Test"
          DependsOnTargets="GenerateCoverageReport" />

</Project>
