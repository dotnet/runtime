<Project Sdk="Microsoft.Build.Traversal">

  <Import Project="$(RepositoryEngineeringDir)testing\coverage.props" Condition="'$(Coverage)' == 'true'" />

  <PropertyGroup>
    <TestInParallel Condition="'$(Coverage)' != 'true'">true</TestInParallel>
    <!-- For tests we want to continue running if a test run failed. -->
    <TestContinueOnError>ErrorAndContinue</TestContinueOnError>
    <TraversalGlobalProperties>BuildAllProjects=true</TraversalGlobalProperties>
    <CoverageReportInputPath>$(ArtifactsBinDir)*.Tests/**/coverage.xml</CoverageReportInputPath>
    <CoverageReportDir>$(ArtifactsDir)coverage</CoverageReportDir>
  </PropertyGroup>

  <ItemGroup>
    <!-- We currently only test with C# projects. -->
    <ProjectReference Include="$(MSBuildThisFileDirectory)*\tests\**\*.Tests.csproj"
                      Exclude="@(ProjectExclusions)"
                      Condition="'$(BuildAllConfigurations)' != 'true'" />
    <ProjectReference Include="$(MSBuildThisFileDirectory)pkg\test\testPackages.proj"
                      Condition="'$(BuildAllConfigurations)' == 'true'" />
  </ItemGroup>

  <Target Name="GenerateCoverageReport"
          Condition="'$(Coverage)' == 'true' and '$(SkipCoverageReport)' != 'true'"
          AfterTargets="Test"
          Inputs="$(CoverageReportInputPath)"
          Outputs="$(CoverageReportResultsPath)">
    <Exec Command="$(CoverageReportCommandLine)" />
  </Target>

  <Import Project="$(RepositoryEngineeringDir)testing\coverage.targets" Condition="'$(Coverage)' == 'true'" />

</Project>
