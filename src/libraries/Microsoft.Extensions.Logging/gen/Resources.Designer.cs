//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Extensions.Logging.Generators {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Extensions.Logging.Generators.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument {0} is not referenced from the logging message.
        /// </summary>
        internal static string ArgumentHasNoCorrespondingTemplateMessage {
            get {
                return ResourceManager.GetString("ArgumentHasNoCorrespondingTemplateMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument is not referenced from the logging message.
        /// </summary>
        internal static string ArgumentHasNoCorrespondingTemplateTitle {
            get {
                return ResourceManager.GetString("ArgumentHasNoCorrespondingTemplateTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging method names cannot start with _.
        /// </summary>
        internal static string InvalidLoggingMethodNameMessage {
            get {
                return ResourceManager.GetString("InvalidLoggingMethodNameMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging method names cannot start with _.
        /// </summary>
        internal static string InvalidLoggingMethodNameTitle {
            get {
                return ResourceManager.GetString("InvalidLoggingMethodNameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging method parameter names cannot start with _.
        /// </summary>
        internal static string InvalidLoggingMethodParameterNameMessage {
            get {
                return ResourceManager.GetString("InvalidLoggingMethodParameterNameMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging method parameter names cannot start with _.
        /// </summary>
        internal static string InvalidLoggingMethodParameterNameTitle {
            get {
                return ResourceManager.GetString("InvalidLoggingMethodParameterNameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods cannot have a body.
        /// </summary>
        internal static string LoggingMethodHasBodyMessage {
            get {
                return ResourceManager.GetString("LoggingMethodHasBodyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods cannot have a body.
        /// </summary>
        internal static string LoggingMethodHasBodyTitle {
            get {
                return ResourceManager.GetString("LoggingMethodHasBodyTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging class cannot be in nested types.
        /// </summary>
        internal static string LoggingMethodInNestedTypeMessage {
            get {
                return ResourceManager.GetString("LoggingMethodInNestedTypeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging class cannot be in nested types.
        /// </summary>
        internal static string LoggingMethodInNestedTypeTitle {
            get {
                return ResourceManager.GetString("LoggingMethodInNestedTypeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods cannot be generic.
        /// </summary>
        internal static string LoggingMethodIsGenericMessage {
            get {
                return ResourceManager.GetString("LoggingMethodIsGenericMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods cannot be generic.
        /// </summary>
        internal static string LoggingMethodIsGenericTitle {
            get {
                return ResourceManager.GetString("LoggingMethodIsGenericTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods must be partial.
        /// </summary>
        internal static string LoggingMethodMustBePartialMessage {
            get {
                return ResourceManager.GetString("LoggingMethodMustBePartialMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods must be partial.
        /// </summary>
        internal static string LoggingMethodMustBePartialTitle {
            get {
                return ResourceManager.GetString("LoggingMethodMustBePartialTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods must return void.
        /// </summary>
        internal static string LoggingMethodMustReturnVoidMessage {
            get {
                return ResourceManager.GetString("LoggingMethodMustReturnVoidMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods must return void.
        /// </summary>
        internal static string LoggingMethodMustReturnVoidTitle {
            get {
                return ResourceManager.GetString("LoggingMethodMustReturnVoidTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods must be static.
        /// </summary>
        internal static string LoggingMethodShouldBeStaticMessage {
            get {
                return ResourceManager.GetString("LoggingMethodShouldBeStaticMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods must be static.
        /// </summary>
        internal static string LoggingMethodShouldBeStaticTitle {
            get {
                return ResourceManager.GetString("LoggingMethodShouldBeStaticTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the arguments to a logging method must implement the Microsoft.Extensions.Logging.ILogger interface.
        /// </summary>
        internal static string MissingLoggerArgumentMessage {
            get {
                return ResourceManager.GetString("MissingLoggerArgumentMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the arguments to a logging method must implement the Microsoft.Extensions.Logging.ILogger interface.
        /// </summary>
        internal static string MissingLoggerArgumentTitle {
            get {
                return ResourceManager.GetString("MissingLoggerArgumentTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t find a field of type Microsoft.Extensions.Logging.ILogger in class {0}.
        /// </summary>
        internal static string MissingLoggerFieldMessage {
            get {
                return ResourceManager.GetString("MissingLoggerFieldMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t find a field of type Microsoft.Extensions.Logging.ILogger.
        /// </summary>
        internal static string MissingLoggerFieldTitle {
            get {
                return ResourceManager.GetString("MissingLoggerFieldTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A LogLevel value must be supplied in the LoggerMessage attribute or as a parameter to the logging method.
        /// </summary>
        internal static string MissingLogLevelMessage {
            get {
                return ResourceManager.GetString("MissingLogLevelMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A LogLevel value must be supplied in the LoggerMessage attribute or as a parameter to the logging method.
        /// </summary>
        internal static string MissingLogLevelTitle {
            get {
                return ResourceManager.GetString("MissingLogLevelTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find definition for type {0}.
        /// </summary>
        internal static string MissingRequiredTypeMessage {
            get {
                return ResourceManager.GetString("MissingRequiredTypeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a required type definition.
        /// </summary>
        internal static string MissingRequiredTypeTitle {
            get {
                return ResourceManager.GetString("MissingRequiredTypeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found multiple fields of type Microsoft.Extensions.Logging.ILogger in class {0}.
        /// </summary>
        internal static string MultipleLoggerFieldsMessage {
            get {
                return ResourceManager.GetString("MultipleLoggerFieldsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found multiple fields of type Microsoft.Extensions.Logging.ILogger.
        /// </summary>
        internal static string MultipleLoggerFieldsTitle {
            get {
                return ResourceManager.GetString("MultipleLoggerFieldsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove redundant qualifier (Info:, Warning:, Error:, etc) from the logging message since it is implicit in the specified log level..
        /// </summary>
        internal static string RedundantQualifierInMessageMessage {
            get {
                return ResourceManager.GetString("RedundantQualifierInMessageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redundant qualifier in logging message.
        /// </summary>
        internal static string RedundantQualifierInMessageTitle {
            get {
                return ResourceManager.GetString("RedundantQualifierInMessageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t include a template for {0} in the logging message since it is implicitly taken care.
        /// </summary>
        internal static string ShouldntMentionExceptionInMessageMessage {
            get {
                return ResourceManager.GetString("ShouldntMentionExceptionInMessageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t include exception parameters as templates in the logging message.
        /// </summary>
        internal static string ShouldntMentionExceptionInMessageTitle {
            get {
                return ResourceManager.GetString("ShouldntMentionExceptionInMessageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t include a template for {0} in the logging message since it is implicitly taken care of.
        /// </summary>
        internal static string ShouldntMentionLoggerInMessageMessage {
            get {
                return ResourceManager.GetString("ShouldntMentionLoggerInMessageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t include logger parameters as templates in the logging message.
        /// </summary>
        internal static string ShouldntMentionLoggerInMessageTitle {
            get {
                return ResourceManager.GetString("ShouldntMentionLoggerInMessageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t include a template for {0} in the logging message since it is implicitly taken care of.
        /// </summary>
        internal static string ShouldntMentionLogLevelInMessageMessage {
            get {
                return ResourceManager.GetString("ShouldntMentionLogLevelInMessageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t include log level parameters as templates in the logging message.
        /// </summary>
        internal static string ShouldntMentionLogLevelInMessageTitle {
            get {
                return ResourceManager.GetString("ShouldntMentionLogLevelInMessageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple logging methods are using event id {0} in class {1}.
        /// </summary>
        internal static string ShouldntReuseEventIdsMessage {
            get {
                return ResourceManager.GetString("ShouldntReuseEventIdsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple logging methods cannot use the same event id within a class.
        /// </summary>
        internal static string ShouldntReuseEventIdsTitle {
            get {
                return ResourceManager.GetString("ShouldntReuseEventIdsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template {0} is not provided as argument to the logging method.
        /// </summary>
        internal static string TemplateHasNoCorrespondingArgumentMessage {
            get {
                return ResourceManager.GetString("TemplateHasNoCorrespondingArgumentMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging template has no corresponding method argument.
        /// </summary>
        internal static string TemplateHasNoCorrespondingArgumentTitle {
            get {
                return ResourceManager.GetString("TemplateHasNoCorrespondingArgumentTitle", resourceCulture);
            }
        }
    }
}
