<Project>
  <PropertyGroup>
    <BuildHelixWorkItemsDependsOn>$(BuildHelixWorkItemsDependsOn);PrepareForBuildHelixWorkItems_Mobile</BuildHelixWorkItemsDependsOn>
    <EnableDefaultBuildHelixWorkItems>false</EnableDefaultBuildHelixWorkItems>
  </PropertyGroup>

  <ItemDefinitionGroup Condition="'$(TargetOS)' == 'MacCatalyst'">
    <XHarnessAppBundleToTest>
      <Targets>maccatalyst</Targets>
      <TestTimeout>$(_workItemTimeout)</TestTimeout>
      <LaunchTimeout>$(_workItemTimeout)</LaunchTimeout>
    </XHarnessAppBundleToTest>
  </ItemDefinitionGroup>

  <ItemDefinitionGroup Condition="'$(TargetOS)' == 'iOS' or '$(TargetOS)' == 'tvOS'">
    <XHarnessAppBundleToTest>
      <Targets Condition="'$(TargetArchitecture)' == 'arm'">ios-device</Targets>
      <Targets Condition="'$(TargetArchitecture)' == 'arm64'">ios-device</Targets>
      <TestTimeout>$(_workItemTimeout)</TestTimeout>
      <LaunchTimeout>$(_workItemTimeout)</LaunchTimeout>
    </XHarnessAppBundleToTest>
  </ItemDefinitionGroup>

  <ItemDefinitionGroup Condition="'$(TargetOS)' == 'iOSSimulator' or '$(TargetOS)' == 'tvOSSimulator'">
    <XHarnessAppBundleToTest>
      <Targets Condition="'$(TargetArchitecture)' == 'arm64'">ios-simulator-64</Targets>
      <Targets Condition="'$(TargetArchitecture)' == 'x64'">ios-simulator-64</Targets>
      <Targets Condition="'$(TargetArchitecture)' == 'x86'">ios-simulator-32</Targets>
      <TestTimeout>$(_workItemTimeout)</TestTimeout>
      <LaunchTimeout>$(_workItemTimeout)</LaunchTimeout>
    </XHarnessAppBundleToTest>
  </ItemDefinitionGroup>

  <ItemDefinitionGroup Condition="'$(TargetOS)' == 'Android'">
    <XHarnessApkToTest>
        <Targets Condition="'$(TargetArchitecture)' == 'arm'">armeabi-v7a</Targets>
        <Targets Condition="'$(TargetArchitecture)' == 'arm64'">arm64-v8a</Targets>
        <Targets Condition="'$(TargetArchitecture)' == 'x64'">x86_64</Targets>
        <Targets Condition="'$(TargetArchitecture)' == 'x86'">x86</Targets>
        <AndroidInstrumentationName>net.dot.MonoRunner</AndroidInstrumentationName>
        <TestTimeout>$(_workItemTimeout)</TestTimeout>
    </XHarnessApkToTest>
  </ItemDefinitionGroup>

  <Target Name="PrepareForBuildHelixWorkItems_Mobile">

    <PropertyGroup Condition="'$(TargetOS)' == 'iOS' or '$(TargetOS)' == 'tvOS' or '$(TargetOS)' == 'iOSSimulator' or '$(TargetOS)' == 'tvOSSimulator' or '$(TargetOS)' == 'MacCatalyst'">
      <AppleTestTarget Condition="'$(TargetOS)' == 'iOSSimulator'">ios-simulator-64</AppleTestTarget>
      <AppleTestTarget Condition="'$(TargetOS)' == 'tvOSSimulator'">tvos-simulator</AppleTestTarget>
      <AppleTestTarget Condition="'$(TargetOS)' == 'iOS'">ios-device</AppleTestTarget>
      <AppleTestTarget Condition="'$(TargetOS)' == 'tvOS'">tvos-device</AppleTestTarget>
      <AppleTestTarget Condition="'$(TargetOS)' == 'MacCatalyst'">maccatalyst</AppleTestTarget>
    </PropertyGroup>

    <ItemGroup Condition="'$(TargetOS)' == 'iOS' or '$(TargetOS)' == 'tvOS' or '$(TargetOS)' == 'iOSSimulator' or '$(TargetOS)' == 'tvOSSimulator' or '$(TargetOS)' == 'MacCatalyst'">
      <!-- Create work items for test apps -->
      <XHarnessAppBundleToTest
        Include="$([System.IO.Directory]::GetDirectories('$(TestArchiveTestsRoot)', '*.app', System.IO.SearchOption.AllDirectories))">
        <TestTarget>$(AppleTestTarget)</TestTarget>
      </XHarnessAppBundleToTest>

      <!--
        Create work items for run-only apps

        Note: We're excluding iOS and tvOS device runonly as mlaunch does not seem to return and times out.
      -->
      <XHarnessAppBundleToTest
        Condition="Exists('$(TestArchiveRoot)runonly') and '$(TargetOS)' != 'tvOS' and '$(TargetOS)' != 'iOS'"
        Include="$([System.IO.Directory]::GetDirectories('$(TestArchiveRoot)runonly', '*.app', System.IO.SearchOption.AllDirectories))" >
        <!-- The sample app doesn't need test runner -->
        <IncludesTestRunner>false</IncludesTestRunner>
        <!-- The sample's C# Main method returns 42 so it should be considered by xharness as a success -->
        <ExpectedExitCode>42</ExpectedExitCode>
        <TestTarget>$(AppleTestTarget)</TestTarget>
      </XHarnessAppBundleToTest>
    </ItemGroup>

    <ItemGroup Condition="'$(TargetOS)' == 'Android'">
      <_apks Include="$(TestArchiveTestsRoot)**/*.apk" />
      <XHarnessApkToTest Include="@(_apks)">
        <AndroidPackageName>net.dot.%(Filename)</AndroidPackageName>
      </XHarnessApkToTest>
      <_runonlyApks Include="$(TestArchiveRoot)runonly/**/*.apk" />
      <XHarnessApkToTest Include="@(_runonlyApks)">
        <AndroidPackageName>net.dot.%(Filename)</AndroidPackageName>
        <!-- The android sample returns 42 so it should be considered by xharness as a success -->
        <ExpectedExitCode>42</ExpectedExitCode>
      </XHarnessApkToTest>
    </ItemGroup>
  </Target>
</Project>
