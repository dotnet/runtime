// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

using System.Collections.Generic;
using Microsoft.DotNet.XUnitExtensions;
using Test.Cryptography;
using Xunit;

namespace System.Security.Cryptography.Tests
{
    public static partial class MLDsaTests
    {
        [ConditionalTheory(typeof(MLDsa), nameof(MLDsa.IsSupported))]
        [MemberData(nameof(AllMLDsaAlgorithms))]
        public static void GenerateSignVerifyNoContext(MLDsaAlgorithm algorithm)
        {
            using MLDsa mldsa = MLDsa.GenerateKey(algorithm);
            byte[] data = [ 1, 2, 3, 4, 5 ];
            byte[] signature = new byte[mldsa.Algorithm.SignatureSizeInBytes];
            Assert.Equal(signature.Length, mldsa.SignData(data, signature));
            Assert.True(mldsa.VerifyData(data, signature));

            data[0] ^= 1;
            Assert.False(mldsa.VerifyData(data, signature));

            data[0] ^= 1;
            Assert.True(mldsa.VerifyData(data, signature));

            signature[0] ^= 1;
            Assert.False(mldsa.VerifyData(data, signature));
        }

        [ConditionalTheory(typeof(MLDsa), nameof(MLDsa.IsSupported))]
        [MemberData(nameof(AllMLDsaAlgorithms))]
        public static void GenerateSignVerifyWithContext(MLDsaAlgorithm algorithm)
        {
            using MLDsa mldsa = MLDsa.GenerateKey(algorithm);
            byte[] context = [ 1, 1, 3, 5, 6 ];
            byte[] data = [ 1, 2, 3, 4, 5 ];
            byte[] signature = new byte[mldsa.Algorithm.SignatureSizeInBytes];
            Assert.Equal(signature.Length, mldsa.SignData(data, signature, context));
            Assert.True(mldsa.VerifyData(data, signature, context));
            Assert.False(mldsa.VerifyData(data, signature));

            data[0] ^= 1;
            Assert.False(mldsa.VerifyData(data, signature, context));

            data[0] ^= 1;
            Assert.True(mldsa.VerifyData(data, signature, context));

            signature[0] ^= 1;
            Assert.False(mldsa.VerifyData(data, signature, context));

            signature[0] ^= 1;
            Assert.True(mldsa.VerifyData(data, signature, context));

            context[0] ^= 1;
            Assert.False(mldsa.VerifyData(data, signature, context));
        }

        [ConditionalTheory(typeof(MLDsa), nameof(MLDsa.IsSupported))]
        [MemberData(nameof(AllMLDsaAlgorithms))]
        public static void GenerateSignExportPublicVerifyWithPublicOnly(MLDsaAlgorithm algorithm)
        {
            byte[] publicKey;
            byte[] data = [ 1, 2, 3, 4, 5 ];
            byte[] signature;

            using (MLDsa mldsa = MLDsa.GenerateKey(algorithm))
            {
                signature = new byte[algorithm.SignatureSizeInBytes];
                Assert.Equal(signature.Length, mldsa.SignData(data, signature));
                Assert.True(mldsa.VerifyData(data, signature));

                publicKey = new byte[algorithm.PublicKeySizeInBytes];
                Assert.Equal(publicKey.Length, mldsa.ExportMLDsaPublicKey(publicKey));
            }

            using MLDsa mldsaPub = MLDsa.ImportMLDsaPublicKey(algorithm, publicKey);

            Assert.True(mldsaPub.VerifyData(data, signature));
            data[0] ^= 1;
            Assert.False(mldsaPub.VerifyData(data, signature));
        }

        [ConditionalTheory(typeof(MLDsa), nameof(MLDsa.IsSupported))]
        [MemberData(nameof(AllMLDsaAlgorithms))]
        public static void GenerateExportSecretKeySignAndVerify(MLDsaAlgorithm algorithm)
        {
            byte[] secretKey;
            byte[] data = [ 1, 2, 3, 4, 5 ];
            byte[] signature;

            using (MLDsa mldsaTmp = MLDsa.GenerateKey(algorithm))
            {
                signature = new byte[algorithm.SignatureSizeInBytes];
                Assert.Equal(signature.Length, mldsaTmp.SignData(data, signature));

                secretKey = new byte[algorithm.SecretKeySizeInBytes];
                Assert.Equal(secretKey.Length, mldsaTmp.ExportMLDsaSecretKey(secretKey));
            }

            using MLDsa mldsa = MLDsa.ImportMLDsaSecretKey(algorithm, secretKey);

            Assert.True(mldsa.VerifyData(data, signature));

            ((Span<byte>)signature).Fill(0);
            Assert.Equal(signature.Length, mldsa.SignData(data, signature));

            Assert.True(mldsa.VerifyData(data, signature));
            data[0] ^= 1;
            Assert.False(mldsa.VerifyData(data, signature));
        }

        [ConditionalTheory(typeof(MLDsa), nameof(MLDsa.IsSupported))]
        [MemberData(nameof(AllMLDsaAlgorithms))]
        public static void GenerateExportPrivateSeedSignAndVerify(MLDsaAlgorithm algorithm)
        {
            byte[] privateSeed;
            byte[] data = [ 1, 2, 3, 4, 5 ];
            byte[] signature;

            using (MLDsa mldsaTmp = MLDsa.GenerateKey(algorithm))
            {
                signature = new byte[algorithm.SignatureSizeInBytes];
                Assert.Equal(signature.Length, mldsaTmp.SignData(data, signature));

                privateSeed = new byte[algorithm.PrivateSeedSizeInBytes];
                Assert.Equal(privateSeed.Length, mldsaTmp.ExportMLDsaPrivateSeed(privateSeed));
            }

            using MLDsa mldsa = MLDsa.ImportMLDsaPrivateSeed(algorithm, privateSeed);

            Assert.True(mldsa.VerifyData(data, signature));

            ((Span<byte>)signature).Fill(0);
            Assert.Equal(signature.Length, mldsa.SignData(data, signature));

            Assert.True(mldsa.VerifyData(data, signature));
            data[0] ^= 1;
            Assert.False(mldsa.VerifyData(data, signature));
        }

        [ConditionalFact(typeof(MLDsa), nameof(MLDsa.IsSupported))]
        public static void NistImportPublicKeyVerify()
        {
            MLDsaAlgorithm algorithm = MLDsaAlgorithm.MLDsa44;
            string pubKeyHex = "8DDF48136E57F2EF242382612DDAADFE417FFC335337C07DB85FBE2BDB977E6019A10B0F643638C947B14E6B42D6A30EB9C6B33C2E349C1875B0E5C4F3016FEB3569A81F0385920038B7F6E740830B62220FF81976EF3FEC9808D6A90A727E9616E51F6A92F70FC7FB569EA27C4CA198EA10B00000DADEC74A0B4B6277C2691A041BF073003D0EFCAD5CCD7AED8AA77CB079C7C3DC1649001DB19D1CEE1EF1013565E8238CF74164FADD44B67ECA1FE939CA793841E64C62BB47EE2F67282A6D44D36AB8E010ADB64EAC09F8107CB6BB709A92303640E4370C9FB1D3DABF2B19AE07A22EE0799E8B26A4779F2973F3B9470112817C5B972E7CDF15C6F1A9F9A1DBB442372A1BE632D5684A59D9E648C993469A9CBC5C6AAE238EE0595854CB04C1527DD364AC01A5841F152212B247594C458852EF9F9377EA415E979C0D2C8BA6EF67CDF7A9B39D7D4387455E71B6C89BD54114A01947379E6B1008E142F60805CE1F425BF18FA767069F7ECD4FA0064472304014C259AD3E5B1A288F24E58A419B4C746452FB478E802DB6F9E46751A3D5B74AAFC140FD21A82B58E151107517B1F74182339172FE4FCFB6E8E927EF7AF754E8DC2279AA16D8E89409417E09375DC22FEC3D3A34277EC2AE20B0B106218D7AB084B4EB875F12C0FA58AF2443E72A97DF725CC7B469248D0B2B7532D73E224336314E9D2311C4F271C0116F6A8DCD7CA94B11A4C66C3E9AF0DA0BA297B01309A20F3FBD87E125ACAD221AC189149C97FD898E933BCFF959C037299CF5B484C7228C17C96CD6C5E18C59DC4686D41D4E59E805F164F751922A2620A355E40FE6660D979831EE799E8D736D9877330BB32976D194F2D8942628578B41936514C2AD5CB225C42D889E781593A5E4B437A39FA255E1462E29655E8B6B46CC2B1C4B29E1686A9A8156686D88F18E512428E6C7E115E6EA7BAF47A4F42655DCCAD5DF2E3C9769849F34BFC2776313908CCC1B9622C4D73D6B285AB5DE4839FB161CAEE1699E7D53BDF2E6C7DCC514FAC00D809FC31F1F022229E0CFB44FD9A73C8BACFBC5946DEC85BDB264BA1A49C2FFFA033BA32E67451A8D94828C135170F4078F6A0F05483004F85DAE152F5F758C07AE392FF6409E0E8208BB4B9272568F191B7870B44EFB3D38EB6A8B483CBADD02B74D17A69FE22FFEBFF7CD5E97F154562A88E5DF45BFB64AE2B662AF2C67BB6E8EF7490460C03A9D93FC15D734CE68572A142806A7563A91B96875A3CE12A7240503274ECD3870733303103A453237556B5CBFD71AAE2A200B3315D2DC25BD3DC5C27FE583CF986275CF9C1DC55CE891B0D1EEB4C165CCD1FFBE13B04479319B054DC055344411935CE4B72479B9DEC8B17CA58DFB0501963336DDB572C7A5E0830999310255FA5ABE52F347E395D864846E033079F795EC17964C82CDAA80B75C75DD45ED458E2BF097EC3C06CC28CD4DC5FC6D00B740EAF6E2FF5A8A8EB9D2BB167FE7793C3864370E5B5DDE98E475C83E1C81636BC5ADEAD4F9D5CF104574120C4DE99A67A4F1CCF9B5E244CE230F2D83E6505C6A5AF99B3D35889838FCA0A7F76A5556A525DFA58587614BCB5CCF4D96F69D6379D695BC8CFAC9B8E4DCCA32E8749AB3D6965BFB43C41C7B1C33CA8B09DEE23516A5B9621A8A3D064FB2ADB6501AA8F6D7BC1A0076D2AFC6AC22A7BD85A18377ED5DAE99A86AB1EB3720AA35AD4CB857A6C5C074F1CE6B4BCCF289CB9C19DBB4068B7FABA0D61233FB9ABFC8F0ECF570704BB9F4CFA4ADB0E86F13D9603B1F79F073C0E56C78FBBF00F50AE33B13CBC7739AE46BF71BB3CC0DA0AA1224319B64E6C9F1E4E4C4F4B0EB";
            string msgHex = "";
            string contextHex = "7ED22840C607F95D48271A8A8A0BBB4451736A4035B4E247BBB7196EC1542D069D9CF7941C390A42136F133E6064D81942C6E236EE09D575664479D1490DCD5C657BEE6324FD0A33A9584A0A2A498B3589637B8EB193818BFF1C91266DB39B5D7A3E87EC99617CBE5593C97095D592F86BE784E46A479BED6788C4A1BB5FC773C8E0DFBC41F71C0D48";
            string sigHex

            byte[] pubKey = pubKeyHex.HexToByteArray();
            byte[] msg = msgHex.HexToByteArray();
            byte[] sig = sigHex.HexToByteArray();
            byte[] context = contextHex.HexToByteArray();
            using MLDsa mldsa = MLDsa.ImportMLDsaPublicKey(algorithm, pubKey);
            Assert.True(mldsa.VerifyData(msg, sig, context));
        }

        public static IEnumerable<object[]> AllMLDsaAlgorithms()
        {
            yield return new object[] { MLDsaAlgorithm.MLDsa44 };
            yield return new object[] { MLDsaAlgorithm.MLDsa65 };
            yield return new object[] { MLDsaAlgorithm.MLDsa87 };
        }
    }
}
