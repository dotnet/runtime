<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Arg_KeyNotFoundWithKey" xml:space="preserve">
    <value>The given key '{0}' was not present in the dictionary.</value>
  </data>
  <data name="ArrayInitializedStateNotEqual" xml:space="preserve">
    <value>Object is not an array with the same initialization state as the array to compare it to.</value>
  </data>
  <data name="ArrayLengthsNotEqual" xml:space="preserve">
    <value>Object is not an array with the same number of elements as the array to compare it to.</value>
  </data>
  <data name="CannotFindOldValue" xml:space="preserve">
    <value>Cannot find the old value</value>
  </data>
  <data name="CapacityMustBeGreaterThanOrEqualToCount" xml:space="preserve">
    <value>Capacity was less than the current Count of elements.</value>
  </data>
  <data name="CapacityMustEqualCountOnMove" xml:space="preserve">
    <value>MoveToImmutable can only be performed when Count equals Capacity.</value>
  </data>
  <data name="CollectionModifiedDuringEnumeration" xml:space="preserve">
    <value>Collection was modified; enumeration operation may not execute.</value>
  </data>
  <data name="DuplicateKey" xml:space="preserve">
    <value>An element with the same key but a different value already exists. Key: '{0}'</value>
  </data>
  <data name="InvalidEmptyOperation" xml:space="preserve">
    <value>This operation does not apply to an empty instance.</value>
  </data>
  <data name="InvalidOperationOnDefaultArray" xml:space="preserve">
    <value>This operation cannot be performed on a default instance of ImmutableArray&lt;T&gt;.  Consider initializing the array, or checking the ImmutableArray&lt;T&gt;.IsDefault property.</value>
  </data>
  <data name="Arg_HTCapacityOverflow" xml:space="preserve">
    <value>Hashtable's capacity overflowed and went negative. Check load factor, capacity and the current size of the table.</value>
  </data>
  <data name="Arg_RankMultiDimNotSupported" xml:space="preserve">
    <value>Only single dimensional arrays are supported for the requested action.</value>
  </data>
  <data name="Arg_NonZeroLowerBound" xml:space="preserve">
    <value>The lower bound of target array must be zero.</value>
  </data>
  <data name="Arg_ArrayPlusOffTooSmall" xml:space="preserve">
    <value>Destination array is not long enough to copy all the items in the collection. Check array index and length.</value>
  </data>
  <data name="Argument_IncompatibleArrayType" xml:space="preserve">
    <value>Target array type is not compatible with the type of items in the collection.</value>
  </data>
  <data name="ArgumentOutOfRange_NeedNonNegNum" xml:space="preserve">
    <value>Non-negative number required.</value>
  </data>
</root>
