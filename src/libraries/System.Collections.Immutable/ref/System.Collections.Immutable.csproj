<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>$(NetCoreAppCurrent);netstandard1.0;netstandard1.3;netstandard2.0;net461</TargetFrameworks>
    <ExcludeCurrentNetCoreAppFromPackage>true</ExcludeCurrentNetCoreAppFromPackage>
    <Nullable>enable</Nullable>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="System.Collections.Immutable.cs" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == '$(NetCoreAppCurrent)'">
    <ProjectReference Include="..\..\System.Collections\ref\System.Collections.csproj" />
    <ProjectReference Include="..\..\System.Runtime\ref\System.Runtime.csproj" />
    <ProjectReference Include="..\..\System.Runtime.InteropServices\ref\System.Runtime.InteropServices.csproj" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard1.3' or
                        '$(TargetFramework)' == 'netstandard2.0' or
                        $(TargetFramework.StartsWith('net4'))">
    <PackageReference Include="System.Memory" Version="$(SystemMemoryVersion)" />
  </ItemGroup>
  <!-- Include these transitive dependencies to overrule NuGet's ProjectReference over PackageReferene behavior. -->
  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard1.3'">
    <PackageReference Include="System.Runtime.InteropServices" Version="$(SystemRuntimeInteropServicesVersion)" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard1.3' or '$(TargetFramework)' == 'netstandard1.0'">
    <PackageReference Include="System.Runtime" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Collections" Version="$(SystemCollectionsVersion)" />
  </ItemGroup>
</Project>