<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="$(LibrariesProjectRoot)shims\netfxreference.props" />
  <PropertyGroup>
    <BinPlaceRef>true</BinPlaceRef>
    <BinPlaceRuntime>true</BinPlaceRuntime>
    <NuGetDeploySourceItem>Reference</NuGetDeploySourceItem>
    <NETStandardSupportPackageId>NETStandard.Library.NETFramework</NETStandardSupportPackageId>
    <NETStandardSupportPackageVersion>2.0.1-servicing-26011-01</NETStandardSupportPackageVersion>
    <NETStandardSupportRoot>$(NuGetPackageRoot)$(NETStandardSupportPackageId.ToLower())\$(NETStandardSupportPackageVersion)\build</NETStandardSupportRoot>
    <AddNetStandardSupportPackage Condition="'$(TargetFramework)' == 'net461' or '$(TargetFramework)' == 'net462' or '$(TargetFramework)' == 'net47'">true</AddNetStandardSupportPackage>
    <TargetFrameworks>net45;net451;net46;net461;net462;net47;net471;net472</TargetFrameworks>
    <!-- if we aren't building all configurations, ensure we populate NetFxRefPath for netcoreapp by building this project -->
    <TargetFrameworks Condition="'$(BuildAllConfigurations)' != 'true'">$(TargetFrameworks);$(NetCoreAppCurrent)</TargetFrameworks>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)' == '$(NetCoreAppCurrent)'">
    <!-- For things not .NETFramework we need the net472 targeting pack to generate facades -->
    <AssetTargetFallback>$(NetFrameworkCurrent)</AssetTargetFallback>
    <TargetingPackNugetPackageId>Microsoft.TargetingPack.NETFramework.v4.7.2</TargetingPackNugetPackageId>
  </PropertyGroup>

  <!-- Split $(TargetFramework) (e.g. net45) into short identifier and short version (e.g. 'net' and '45'). -->
  <PropertyGroup Condition="'$(TargetFramework)' != '' and !$(TargetFramework.Contains(',')) and !$(TargetFramework.Contains('+'))">
   <_ShortFrameworkIdentifier>$(TargetFramework.TrimEnd('.0123456789'))</_ShortFrameworkIdentifier>
   <_ShortFrameworkVersion>$(TargetFramework.Substring($(_ShortFrameworkIdentifier.Length)))</_ShortFrameworkVersion>
  </PropertyGroup>
  
  <!-- Map short name to long name. See earlier comment for example of how to work with identifiers that are not recognized here. -->
  <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == ''">
    <TargetFrameworkIdentifier Condition="'$(_ShortFrameworkIdentifier)' == 'netstandard'">.NETStandard</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_ShortFrameworkIdentifier)' == 'netcoreapp'">.NETCoreApp</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_ShortFrameworkIdentifier)' == 'net'">.NETFramework</TargetFrameworkIdentifier>
  </PropertyGroup>

  <!-- Versions with dots are taken as is and just given leading 'v'. -->
  <PropertyGroup Condition="'$(TargetFrameworkVersion)' == '' and '$(_ShortFrameworkVersion)' != '' and $(_ShortFrameworkVersion.Contains('.'))">
    <TargetFrameworkVersion>v$(_ShortFrameworkVersion)</TargetFrameworkVersion>
  </PropertyGroup>

  <!-- Versions with no dots and up to 3 characters get leading 'v' and implicit dots between characters. -->
  <PropertyGroup Condition="'$(TargetFrameworkVersion)' == '' and '$(_ShortFrameworkVersion)' != ''">
    <TargetFrameworkVersion Condition="$(_ShortFrameworkVersion.Length) == 1">v$(_ShortFrameworkVersion[0]).0</TargetFrameworkVersion>
    <TargetFrameworkVersion Condition="$(_ShortFrameworkVersion.Length) == 2">v$(_ShortFrameworkVersion[0]).$(_ShortFrameworkVersion[1])</TargetFrameworkVersion>
    <TargetFrameworkVersion Condition="$(_ShortFrameworkVersion.Length) == 3">v$(_ShortFrameworkVersion[0]).$(_ShortFrameworkVersion[1]).$(_ShortFrameworkVersion[2])</TargetFrameworkVersion>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetsNetFx)' == 'true'">
    <TargetingPackNugetPackageId>Microsoft.TargetingPack.NETFramework.$(TargetFrameworkVersion)</TargetingPackNugetPackageId>
  </PropertyGroup>

  <ItemGroup>
    <!-- For things not .NETFramework binplace to the NETFX ref path -->
    <BinPlaceTargetFrameworks Condition="'$(TargetsNetFx)' != 'true'" Include="$(TargetFramework)">
      <RefPath>$(NetFxRefPath)</RefPath>
    </BinPlaceTargetFrameworks>

    <!-- For things .NETFramework binplace to refpath -->
    <BinPlaceTargetFrameworks Condition="'$(TargetsNetFx)' == 'true'" Include="$(TargetFramework)">
      <RefPath>$(RefPath)</RefPath>
    </BinPlaceTargetFrameworks>
  </ItemGroup>

  <PropertyGroup>
    <_TargetingPackVersion>1.0.1</_TargetingPackVersion>
    <_TargetingPackVersion Condition="'$(TargetingPackNugetPackageId)' == 'Microsoft.TargetingPack.NETFramework.v4.7.1' or '$(TargetingPackNugetPackageId)' == 'Microsoft.TargetingPack.NETFramework.v4.7.2'">1.0.0</_TargetingPackVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="$(TargetingPackNugetPackageId)" NoWarn="NU1701">
      <Version >$(_TargetingPackVersion)</Version>
    </PackageReference>
    <PackageReference Include="System.Memory" Condition="'$(TargetFramework)' == 'net45' or '$(TargetFramework)' == 'net46'">
      <Version>4.5.2</Version>
    </PackageReference>
    <PackageReference Include="System.Numerics.Vectors" Condition="'$(TargetFramework)' == 'net461' or '$(TargetFramework)' == '$(NetFrameworkCurrent)'">
      <Version>4.5.0</Version>
    </PackageReference>
    <PackageReference Include="System.Buffers" Condition="'$(TargetFramework)' == 'net461' or '$(TargetFramework)' == '$(NetFrameworkCurrent)'">
      <Version>4.5.0</Version>
    </PackageReference>
    <PackageReference Include="$(NETStandardSupportPackageId)" Condition="'$(AddNetStandardSupportPackage)' == 'true'">
      <Version>$(NETStandardSupportPackageVersion)</Version>
    </PackageReference>

    <FileToExclude Include="System.EnterpriseServices" />
    <FileToExclude Include="System.EnterpriseServices.Thunk" />
    <FileToExclude Include="System.EnterpriseServices.Wrapper" />
  </ItemGroup>

  <Target Name="AddNETStandardShims" AfterTargets="FilterNugetPackages"
          Condition="'$(AddNetStandardSupportPackage)' == 'true'">
    <ItemGroup>
      <_netStandardReference Condition="'$(TargetFramework)' != 'net461' and '$(TargetFramework)' != 'net462'"
                             Include="$(NETStandardSupportRoot)\net47\lib\*.dll"
                             Exclude="@(_netStandardReference->'$(NETStandardSupportRoot)\net47\lib\%(FileName).dll')" />
      <_netStandardReference Condition="'$(TargetFramework)' != 'net461'"
                             Include="$(NETStandardSupportRoot)\net462\lib\*.dll"
                             Exclude="@(_netStandardReference->'$(NETStandardSupportRoot)\net462\lib\%(FileName).dll')" />
      <_netStandardReference Include="$(NETStandardSupportRoot)\net461\lib\*.dll"
                             Exclude="@(_netStandardReference->'$(NETStandardSupportRoot)\net461\lib\%(FileName).dll')" />

      <_netStandardReference>
        <Private>False</Private>
        <NuGetPackageId>$(NETStandardSupportPackageId)</NuGetPackageId>
        <NuGetPackageVersion>$(NETStandardSupportPackageVersion)</NuGetPackageVersion>
      </_netStandardReference>

      <_referenceByFileName Include="@(Reference->'%(FileName)%(Extension)')">
        <OriginalIdentity>%(Identity)</OriginalIdentity>
      </_referenceByFileName>
      <_netStandardReferenceByFileName Include="@(_netStandardReference->'%(FileName)%(Extension)')" />

      <_remainingReferenceByFileName Include="@(_referenceByFileName)" Exclude="@(_netStandardReferenceByFileName)" />
      <_remainingReference Include="@(_remainingReferenceByFileName->'%(OriginalIdentity)')" />

      <Reference Remove="@(Reference)" />
      <Reference Include="@(_remainingReference);@(_netStandardReference)" />
    </ItemGroup>
  </Target>
</Project>
