[33mcommit a27996839841a021120aa3326a8f71371c5b96c7[m
Merge: 38ad2a3 6a16e3b
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Thu Mar 3 10:07:31 2016 -0800

    Merge branch 'master' of https://github.com/dotnet/corefx into btversion

[33mcommit 6a16e3b9e5931018a32aa9d72e2736df1c920a2e[m
Merge: 8599612 6dd6548
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Mar 3 11:13:22 2016 -0500

    Merge pull request #6608 from stephentoub/console_listener
    
    Add ConsoleEventListener for debugging

[33mcommit 859961255b3179b78c45c7da6c7ad5f006511ed2[m
Merge: 9142cb8 5a26b24
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Mar 3 11:09:39 2016 -0500

    Merge pull request #6609 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 9142cb8de7da16cbf28fb435c11f7e09e8999056[m
Merge: 664b573 c53ada3
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Thu Mar 3 07:45:25 2016 -0800

    Merge pull request #6601 from ericstj/fixS.R.IS.ref
    
    Remove ProjectReferences from S.R.IS ref assembly

[33mcommit 5a26b24ad0080850c8eceb6cf2d2b08b161448ef[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Mar 3 07:17:28 2016 -0800

    **Suppress implementation dependencies from compile.**
    
    Packages with ref and lib list all their dependencies
    in a single section for that target framework.
    
    This creates a couple problems:
    1. Folks end up taking a dependency on the fact that a package
    happens to use another package in its implementation.
    2. For packages that have multiple implementations for the
    same TFM and different RID all dependencies appear in the
    same section even though some may be RID specific.
    Those RID speicific dependencies will compatibility
    errors during restore since the packages won't be supported
    on all RIDs.
    In lieu of the NuGet feature to represent RID-specific
    dependencies https://github.com/nuget/home/issues/1660
    we can at least suppress the compatibility error by
    excluding these implementation specific depdencies from
    compile.
    
    Further details are here:
    https://github.com/dotnet/buildtools/commit/d40435b1c460416768cc53a27091e57d948be171#diff-abe065d40d7c72dbdc1ad1957148d23fR14
    
    [tfs-changeset: 1581170]

[33mcommit 6dd654837b6e7f0a1950a3729aa6024e73337cd9[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Mar 3 09:46:21 2016 -0500

    Add ConsoleEventListener for debugging
    
    I often find it useful when debugging, especially on Linux, to enable EventSource tracing and have all events dumped to the console.  This commit just adds such a helper class, which can be added to a test project and used like:
    ```C#
    using (new ConsoleEventListener())
    {
        ... // code here will have tracing to the console enabled
    }
    ```

[33mcommit 664b573ed6a6536ed26e8cfe3676096d9ae374d3[m
Merge: 16204bb a64acd8
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Wed Mar 2 22:08:50 2016 -0800

    Merge pull request #6604 from Priya91/groovy
    
    Use powershell script for unpacker on WinNano.

[33mcommit a64acd85fe56e4addcf942498e9642aac9aa427c[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Wed Mar 2 22:05:40 2016 -0800

    Add outerloop tag to winnano flow jobs.

[33mcommit cecd05f1e872e3d366cc6e30fe1ccef0bcb0d297[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Wed Mar 2 21:32:46 2016 -0800

    Use powershell script for unpacker on WinNano.

[33mcommit 38ad2a309cda8518a323c011f6b1b653a1874bd6[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Wed Mar 2 17:01:11 2016 -0800

    try1

[33mcommit 16204bba9afe5f421bd12e692e8ac361d280aa12[m
Merge: ee23af7 43195d8
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Mar 2 19:31:04 2016 -0500

    Merge pull request #6600 from justinvp/credentialcache_dictionaryenumerator
    
    System.Net.CredentialCache: Avoid dictionary enumerator allocations

[33mcommit c53ada337912927ea813391e469a178930c260e7[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Mar 2 16:11:51 2016 -0800

    Remove ProjectReferences from S.R.IS ref assembly
    
    Reference assemblies should never use project references since that will
    will cause them to automatically update their dependency versions when
    another reference assembly updates.
    
    This project was using project references as a point-in-time workaround
    as API was added in another contract in the same change.

[33mcommit ee23af7efa2bf5444cf881b8e1d38de1e147236c[m
Merge: d98dc1d 933d187
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Mar 2 18:54:30 2016 -0500

    Merge pull request #6488 from stephentoub/console_fixes
    
    Multiple System.Console fixes

[33mcommit d98dc1dc82350206bfb7dd3528a91ae5a2ecd0f1[m
Merge: 7b06904 c88c3f1
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Wed Mar 2 15:52:38 2016 -0800

    Merge pull request #6097 from saurabh500/sqldbcolumnschema
    
    Add the GetColumnSchema API to SqlDataReader

[33mcommit 7b069042ead9391b8b5d11f4178ca18b935a1d1d[m
Merge: cadc81f a5ce0f1
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Mar 2 15:19:35 2016 -0800

    Merge pull request #6599 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 43195d88b5068fd27545a9d17eb761e7aebe3afb[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Wed Mar 2 15:15:54 2016 -0800

    System.Net.CredentialCache: Avoid dictionary enumerator allocations
    
    Use Dictionary's struct enumerator with foreach instead of using the
    enumerator as IDictionaryEnumerator, which boxes the struct.

[33mcommit c88c3f1cc7ab850ef57628df1190aa0caa38424c[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Tue Mar 1 23:47:26 2016 -0800

    SqlClient depends on Data.Common 23829 for DbColumn API dependency

[33mcommit a5ce0f107d986ef29b9b6bbd42b9bc95e37e5b0c[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Mar 2 13:29:43 2016 -0800

    List more explicit TargetGroup's for 3 projects
    
    These TargetGroup's are all used in the builds files, but are not listed in the "VS Default Config Helper" block. This adds them to that block.
    
    RuntimeInformation listed "net46" in that block, but really targets net45. The builds file agrees.
    
    [tfs-changeset: 1580811]

[33mcommit e1625d7048c735113826b9886380206989ababa4[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Mar 2 13:21:17 2016 -0800

    Fix net461 configuration placeholder in System.ComponentModel.Annotations.csproj.
    
    This was not causing any functional problems, but the "Default Configurations" block for Visual Studio was wrong, listing 46 instead of 461 as the target group.
    
    [tfs-changeset: 1580806]

[33mcommit fc97aeb821e8dad260024d34474904ab1969e841[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Sat Feb 13 10:24:51 2016 -0800

    Adding the implementation of the GetColumnSchema API
    
    Address PR comments

[33mcommit cadc81f31bf1bfffe55f87038f15879ba0805bf0[m
Merge: c132e5e f12d3a6
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Wed Mar 2 13:07:31 2016 -0800

    Merge pull request #6594 from saurabh500/sqlclientdep
    
    Update SqlClient to Data.Common rc3-23901

[33mcommit c132e5eae16e93845a839290f2afbc826bd7c757[m
Merge: 5789152 7e857ea
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Mar 2 15:58:37 2016 -0500

    Merge pull request #6593 from Priya91/groovy
    
    Fix bug in groovy.

[33mcommit f12d3a67730d337d37f01e21dd63f686e56a1533[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Wed Mar 2 12:22:54 2016 -0800

    Migrate Sql Client to Data.Common rc3-23901

[33mcommit 7e857ea1170dcdbc1391d6f8fc66269965a1e82c[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Wed Mar 2 12:04:08 2016 -0800

    Fix bug in groovy.

[33mcommit 5789152d9886b24bdd60a67b64f5f66b27c410ce[m
Merge: 804f505 df390b1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Mar 2 14:17:47 2016 -0500

    Merge pull request #6586 from leemgs/upstream3
    
    Resolve build folder of managed corefx on Ubuntu 14.04 in  release mode.

[33mcommit 804f505f451b1b2febacb3145279cb69b5b1983c[m
Merge: ecdd6c1 c201972
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Mar 2 13:06:51 2016 -0500

    Merge pull request #6585 from leemgs/upstream2
    
    Enabling cross building of native corefx for Ubuntu 14.04 ARM target

[33mcommit ecdd6c12e276de09a251a5a7eae82eb806559f84[m
Merge: 8ad1d79 55246a7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Mar 2 09:51:10 2016 -0500

    Merge pull request #6587 from stephentoub/update_packages
    
    Upgrade package versions to rc3-23901

[33mcommit 55246a7fc60807d021fded5e333784956a662a51[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Mar 2 07:40:12 2016 -0500

    Upgrade package versions to rc3-23901

[33mcommit 8ad1d799300f6ab5c3bb46e4d8ca3211b38cb76f[m
Merge: 8c7312b 90f69dd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Mar 2 07:29:20 2016 -0500

    Merge pull request #6575 from krytarowski/netbsd-support-10
    
    Add NetBSD support for the sysconf(_SC_NPROCESSORS_ONLN) call

[33mcommit df390b127ace6abeac20b0e4354415ce60220983[m
Author: Geunsik Lim <geunsik@samsung.com>
Date:   Wed Mar 2 16:33:29 2016 +0900

    Resolve build folder of managed corefx on Ubuntu 14.04 in release mode.
    
    We can build managed corefx with debug mode (by default) on Ubuntu 14.04 PC.
    Although we run "corefx@u14$> build.sh managed release clean" command to build
    managed corefx with release mode, the 'build.sh' script generates
    "./bin/AnyOS.AnyCPU.Debug" folder instead of "AnyOS.AnyCPU.Release" folder.
    This patch resolves the build folder of managed corefx for release mode on
    Ubuntu 14.04 64bit pc and Windows 7 pc.
    
    Signed-off-by: Geunsik Lim <geunsik.lim@samsung.com>
    Signed-off-by: Prajwal A N <an.prajwal@samsung.com>
    Signed-off-by: MyungJoo Ham <myungjoo.ham@samsung.com>

[33mcommit 8c7312b83c554a6c5714ece012bd0030d516f0b7[m
Merge: e19bb5b 4d6e290
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Tue Mar 1 23:06:07 2016 -0800

    Merge pull request #6569 from saurabh500/baseclass_interface
    
    Add the Interfaces on the Base Class

[33mcommit c201972f024cd1be1f4e27292a425a82157eb024[m
Author: Geunsik Lim <geunsik.lim@samsung.com>
Date:   Thu Feb 25 22:53:17 2016 +0900

    Enabling cross building of native corefx for Ubuntu 14.04 ARM target
    
    Using the cross build process of coreclr, enable cross building
    of native corefx components for Ubuntu 14.04 ARM target.
    (e.g. u14.04$> ROOTFS_DIR=/work/dotnet/rootfs-corefx/arm \
    		./build.sh native arm clean cross )
    
    Signed-off-by: MyungJoo Ham <myungjoo.ham@samsung.com>
    Signed-off-by: Geunsik Lim <geunsik.lim@samsung.com>
    Signed-off-by: Prajwal A N <an.prajwal@samsung.com>

[33mcommit e19bb5b457a631a8f953d626757bd444db9c6a52[m
Merge: a75ad30 8b70bae
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Mar 1 19:14:18 2016 -0800

    Merge pull request #6583 from Priya91/new
    
    Remove readme badges on newly added outerloop jobs.

[33mcommit 8b70baeabc6b139d07686a4fe4bea7a47d1d63ab[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Tue Mar 1 19:05:11 2016 -0800

    Remove readme badges on newly added outerloop jobs.

[33mcommit a75ad30504a46afb23bd38896fe7aa2447f26566[m
Merge: d1c16a8 ca520a1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Mar 1 22:04:07 2016 -0500

    Merge pull request #6552 from stephentoub/console_tests
    
    Add a test for remove_CancelKeyPress

[33mcommit d1c16a8c6450504e568b27714d62348083c0fe08[m
Merge: ad934b0 60690fb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Mar 1 21:53:46 2016 -0500

    Merge pull request #6570 from ericeil/5234
    
    Fix race in several Sockets tests

[33mcommit ad934b067105781bb2c45d157046177ba514fde7[m
Merge: 23d1b9d 348774f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Mar 1 21:52:24 2016 -0500

    Merge pull request #6577 from krytarowski/netbsd-support-12
    
    Support symlinking syntax on NetBSD in ReparsePointUtilities.cs

[33mcommit 23d1b9df1a26ad91a6c644d0543de4765c9fe5bd[m
Merge: a52c213 951ce58
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Tue Mar 1 18:18:57 2016 -0800

    Merge pull request #6582 from Priya91/updatereadme
    
    Run the tests as sudo on outerloop linux.

[33mcommit 951ce582377598bd4244b3d928bfdba20159ee89[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Tue Mar 1 18:11:04 2016 -0800

    Run the tests as sudo on outerloop linux.

[33mcommit a52c21365712d7e2e49dd155e76f5a9dfd016bfd[m
Merge: 92aa3c0 d8052d5
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Tue Mar 1 18:07:11 2016 -0800

    Merge pull request #6539 from Priya91/readme
    
    Update README.md to include ubuntu15.10, rhel7.2, centos7.1 and opensuse13.2 outerloop badges.

[33mcommit 92aa3c06764fab32bf7976ced52aa9a36abd2fef[m
Merge: 7ca39af f822328
Author: Cory Rivera <corivera@microsoft.com>
Date:   Tue Mar 1 17:35:03 2016 -0800

    Merge pull request #6581 from dotnet/SupressNativeErrorsFix
    
    Add MANAGED_SNI tags to ManualTests to suppress version-difference errors between managed and native SNI

[33mcommit 348774f7395acdf8db042d5b209f76e0ce982630[m
Author: Kamil Rytarowski <n54@gmx.com>
Date:   Wed Mar 2 01:20:44 2016 +0100

    Support symlinking syntax on NetBSD in ReparsePointUtilities.cs
    
    For now assume that all non-Windows paltforms support Unix syntax.

[33mcommit 7ca39af876f180713df8fb81f759a09672a1ebe6[m
Merge: 7881939 d2c7d72
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Mar 1 20:25:47 2016 -0500

    Merge pull request #6576 from krytarowski/netbsd-support-11
    
    Add new platform check: IsNetBSD

[33mcommit 4d6e2908f20e1b27a1f9b8e31d601a81789c00e6[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Tue Mar 1 16:09:11 2016 -0800

    Address PR feedback

[33mcommit f82232855dc876733953e6c4e554504ef8d7321e[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Tue Mar 1 16:40:40 2016 -0800

    Add MANAGED_SNI tags to ManualTests to suppress version-difference errors between managed and native SNI

[33mcommit 7881939490be63dd5bf9e3abe2965595f08b91f4[m
Merge: d73289f 21d463c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Mar 1 19:18:55 2016 -0500

    Merge pull request #6567 from krytarowski/netbsd-support-8
    
    Adds sysconf(3) support to check PAGESIZE on NetBSD

[33mcommit 60690fb4bc12223c421b3f4ec50b64269a2fc5bf[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Tue Mar 1 16:12:47 2016 -0800

    Synchronize with exceptions as well as success.

[33mcommit d2c7d72dfc24e87d6ee05ae4650f3845a3f79edc[m
Author: Kamil Rytarowski <n54@gmx.com>
Date:   Wed Mar 2 00:57:01 2016 +0100

    Add new platform check: IsNetBSD

[33mcommit d73289fdbbfc81f9caa2ffb58841dc5f4f466012[m
Merge: a702be9 5684480
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Mar 1 18:44:48 2016 -0500

    Merge pull request #6559 from ericeil/UnregisterReadAssert
    
    Remove special EOF handling in SocketAsyncContext event loop

[33mcommit 90f69dd60778fc820ef853622375645ae1cae1cb[m
Author: Kamil Rytarowski <n54@gmx.com>
Date:   Wed Mar 2 00:41:58 2016 +0100

    Add NetBSD support for the sysconf(_SC_NPROCESSORS_ONLN) call
    
    /usr/include/sys/unistd.h:#define       _SC_NPROCESSORS_ONLN    1002

[33mcommit a702be9f52e9b52b6472aa9c190ea80a215f0c9e[m
Merge: 212b556 6ffebba
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Mar 1 15:40:56 2016 -0800

    Merge pull request #6407 from nguerrera/custom-attribute-decoder
    
    Add custom attribute decoder to S.R.Metadata vNext

[33mcommit 212b556f35aebde2b5aaf40cea41b5af1c82a98f[m
Merge: 1b2aa19 7c9209c
Author: Pallavi Taneja <pallavit@users.noreply.github.com>
Date:   Tue Mar 1 15:32:13 2016 -0800

    Merge pull request #6557 from pallavit/Issue#5381
    
    Expose System.Reflection APIs in TypeInfo and MethodInfo

[33mcommit 1b2aa19196d1bd040c723bac0d7288894229d798[m
Merge: 7900705 275c849
Author: David Mason <davmason@microsoft.com>
Date:   Tue Mar 1 15:26:28 2016 -0800

    Merge pull request #6565 from davmason/master
    
    Refactor EventSource tests to pass on a chk runtime.

[33mcommit 0ce9afab1f582af3a6c2bb5ef8f8b41d948ef030[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Tue Mar 1 15:21:55 2016 -0800

    Removed ActiveIssue attributes for #5234.

[33mcommit 213e13dd6faee787aa3f8f0510ea6e100b2983c0[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Tue Mar 1 15:18:44 2016 -0800

    Fix race in several Sockets tests
    
    These tests were comparing against some checksum values without waiting until those values were actually generated/stored.  This change adds synchronization to ensure that the "sender" side of the test is done before validating the received data.  A nice side benefit of this is that any assertions and cleanup in the sender will also complete before we return from the test case, keeping it better isolated from other tests.

[33mcommit 217239d0b511bf56977e44e236aca1730d44a1d6[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Tue Mar 1 15:00:13 2016 -0800

    Add the Interfaces on the Base Class

[33mcommit 79007057e76eee76b97c9842cdac218c566ed3cd[m
Merge: 2ae3be8 a8a84a3
Author: Cory Rivera <corivera@microsoft.com>
Date:   Tue Mar 1 14:39:16 2016 -0800

    Merge pull request #6566 from dotnet/IncreaseConnPoolTestVerbosity
    
    Increase verbosity of SqlClient ConnectionPool tests

[33mcommit 2ae3be8a933b6049a5034597d9051a3e5c1829a7[m
Merge: 69036d2 442e4ac
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Mar 1 17:23:41 2016 -0500

    Merge pull request #6558 from stephentoub/appcontext_resources
    
    Stop including resources in the coreclr build of System.AppContext

[33mcommit d8052d5ef18587aa0eabba526b6be3f9c7499aab[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Tue Mar 1 14:23:14 2016 -0800

    Change outerloop job names to prefix outerloop_.

[33mcommit 69036d24191d3747411ff0263f141a6b2460b42d[m
Merge: d35782e 0f391f9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Mar 1 17:21:14 2016 -0500

    Merge pull request #6560 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 21d463c2c470a1063cb374b6aeae42d096b43e91[m
Author: Kamil Rytarowski <n54@gmx.com>
Date:   Tue Mar 1 23:17:14 2016 +0100

    Adds sysconf(3) support to check PAGESIZE on NetBSD
    
    /usr/include/sys/unistd.h:#define	_SC_PAGESIZE		28

[33mcommit a8a84a37cec74b6b3cb01d2b2fc64ddaa8f9c4a2[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Tue Mar 1 14:15:43 2016 -0800

    Increase verbosity of SqlClient ConnectionPool tests

[33mcommit 275c849e2266230ab6c7364adef739791cb60b70[m
Author: David Mason <davmason@microsoft.com>
Date:   Tue Mar 1 14:12:51 2016 -0800

    Refactor EventSource tests to pass on a chk runtime.

[33mcommit 021ced743af6b3040f5c82f3c2bb572e0c8b9ae2[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Tue Mar 1 13:59:46 2016 -0800

    Separate linux outerloop OSes that can't build into new outerloop job.

[33mcommit d35782e38be7467173206d9ee7b569696a88c409[m
Merge: 011469a 2c1fa3a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Mar 1 15:47:16 2016 -0500

    Merge pull request #6549 from stephentoub/ri_coverage
    
    Slightly improve RuntimeInformation coverage

[33mcommit 011469a2c4517ff5cc8640a9b882006622dbfc6c[m
Merge: 64ccb0a add567b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Mar 1 14:52:48 2016 -0500

    Merge pull request #6553 from stephentoub/bitvector_assert
    
    Removing an assert in BitVector32

[33mcommit 0f391f9eed763c06d7f4e8e77e71efb29df3eb5b[m
Author: Khoa Dang <khdang@microsoft.com>
Date:   Tue Mar 1 11:44:17 2016 -0800

    Bump up versions for serialization packages
    
         •	System.Runtime.Serialization.Primitives -> 4.1.1
         •	System.Runtime.Serialization.Xml  -> 4.1.1
         •	System.Runtime.Serialization.Json -> 4.0.2
         •	System.Private.DataContractSerialization -> 4.1.1
    
    [tfs-changeset: 1580283]

[33mcommit ca520a1cc8836675b9d391da45da08f9c917f2ff[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Mar 1 11:41:27 2016 -0500

    Add a test for remove_CancelKeyPress

[33mcommit 709bc09e4b33517101895e07e17d5f4f65a05ddd[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Mar 1 11:30:17 2016 -0500

    Allow control over profiling of launched test processes
    
    We originally disabled such profiling because of issues with OpenCover.  I think these issues have been fixed.  For now, I'm making it an option to disable profiling but having it on by default.  If we find there are still problems, we can selectively disable those that are problematic.

[33mcommit 5684480c269d094ecfbe1f96883da5117c487367[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Tue Mar 1 11:35:26 2016 -0800

    Remove special EOF handling in SocketAsyncContext event loop
    
    This code makes the assumption that if the other end of a socket is closed, all reads that will ever be issued on this end are already pending, so it's ok to shut down the read queue.  This is not necessarily true; we need to allow other threads to continue to issue reads until they've actually read all data.
    
    This is resulting in assert failures (#6506) and is a likely cause of erroneous OperationAborted failures (#5750).
    
    It's not clear to me what value the EOF handling is providing currently; currently, aside from erroneously shutting down the queue, the only difference from the normal read event logic is that we also unregister from read events.  Since we no longer are able to free handles, etc, on unregistration, it's not clear that we get any benefit from unregistering an event we'll probably never receive again.
    
    This change therefore simply removes this logic.

[33mcommit 442e4acc7d875f97b8b19584f5291f7e6508dc6f[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Mar 1 14:26:49 2016 -0500

    Stop including resources in the coreclr build of System.AppContext
    
    They're not used, don't include 'em.

[33mcommit 64ccb0a7920f2bd7e49ebab00d619fda6b6b5bef[m
Merge: 36f5cf3 f2b8d97
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Mar 1 10:49:39 2016 -0800

    Merge pull request #6505 from jasonwilliams200OK/docs-pcl
    
    Update Unix build docs removing mono requirement

[33mcommit 36f5cf364d13764e7be9c2c0a50f2a2153948750[m
Merge: c20fcbe fb5c7f2
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Tue Mar 1 09:05:21 2016 -0800

    Merge pull request #6527 from justinvp/sqlclient_collectionbase
    
    Remove System.Collection.NonGeneric from SqlClient contract

[33mcommit add567bfea9698c3d07471d695fbacdab70419e9[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Mar 1 11:57:20 2016 -0500

    Removing an assert in BitVector32
    
    This assert came over from the full framework source.  This should really have been a check-and-throw-exception, as the assert will be compiled out in release code and this is a public method.  We can't add that exception now, and we have tests that are explicitly calling this method, which is triggering debug assert failures and causing unnecessary failure details in our CI logs.  I'm just removing it.

[33mcommit f2b8d9788f447f4083f5f0d9d4d7c8c9a5566dc6[m
Author: Peter Jas <necmon@yahoo.com>
Date:   Mon Feb 29 19:46:39 2016 +0000

    Add prerequisites and script usage

[33mcommit 3be151ec393340e92b8546bef1124e9076ef5f7e[m
Author: Peter Jas <necmon@yahoo.com>
Date:   Sun Feb 28 23:18:15 2016 +0000

    Update Unix build docs removing mono requirement
    
    Mono and PCL reference assemblies are not required anymore to build
    CoreFX on Unix - 6077.
    
    Also, PDBs are now generated by Roslyn for Unix, so removed that from
    known issues - 2449.

[33mcommit c20fcbec2832e52c86b008db89617e2d879bea29[m
Merge: f5d318c d1d4b7b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Mar 1 11:34:18 2016 -0500

    Merge pull request #6545 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit f5d318c6103da0f99910e6410ed605e75833de0d[m
Merge: d9f3749 bee25a0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Mar 1 10:41:43 2016 -0500

    Merge pull request #6511 from hughbe/runtime-tests-array-segment
    
    Cleanup ArraySegment tests

[33mcommit d9f37492e8b6fc7254390691c5906a3e712acd9e[m
Merge: 297f922 332b1dd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Mar 1 10:31:02 2016 -0500

    Merge pull request #6551 from bartonjs/chaintests_verificationtime
    
    Set the VerificationTime value in all ChainTests tests.

[33mcommit 332b1ddff912fa31dd2a10ecea8d417177fce095[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Mar 1 06:58:13 2016 -0800

    Set the VerificationTime value in all ChainTests tests.
    
    BuildChain_WithCertificatePolicy_Match seemed to be the only one in this file missing it.

[33mcommit 297f922f8241c0e897914b402e4f399cd329df3b[m
Merge: 9a11fb5 fda87b4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Mar 1 09:03:02 2016 -0500

    Merge pull request #6547 from axelheer/patch-1
    
    Update net-standard-applications.md

[33mcommit 2c1fa3a6de1f2fc5ae6f8e2678e6a5402dfb4d7c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Mar 1 09:00:38 2016 -0500

    Add tests to cover a few more branches of RuntimeInformation

[33mcommit e3784fc61d59d88e309fc58ce37e13c04ea52c9d[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Mar 1 09:00:07 2016 -0500

    Caching the RuntimeInformation.FrameworkDescription string

[33mcommit fda87b43c9a7d4959980e06f9c11e81a68f91a2d[m
Author: Axel Heer <axel@heer.eu>
Date:   Tue Mar 1 14:21:28 2016 +0100

    Update net-standard-applications.md
    
    Fix minor typo

[33mcommit d1d4b7b503dd8db1f21d1a6b66f636cb0c6cf33a[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Mar 1 00:19:23 2016 -0800

    Update buildtools to fix Unix build
    
    Unix build was failing due to missing MicroBuild.Core.targets.
    
    [tfs-changeset: 1580191]

[33mcommit 9a11fb54d385ae931de587c903ca9ea08fda7ca3[m
Merge: 61c48b4 ce213ef
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 29 22:42:11 2016 -0500

    Merge pull request #6536 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 61c48b4b3ad0bfa068997faba3ee2e60cdda9397[m
Merge: 03cd690 382368c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 29 22:41:50 2016 -0500

    Merge pull request #6537 from stephentoub/open_max
    
    Use sysconf(_SC_OPEN_MAX) instead of OPEN_MAX in an assert

[33mcommit 03cd69053aba7c8981832534aadf1f1f8924d85d[m
Merge: 785e2ac a9c7155
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 29 22:41:16 2016 -0500

    Merge pull request #6540 from krytarowski/netbsd-support-7
    
    Mark disabled tests on Linux&OSX also disabled on NetBSD

[33mcommit 785e2ac0ce48686de3281a691f2b24025a3cdbb4[m
Merge: a4414ac ba6f295
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Mon Feb 29 19:22:02 2016 -0800

    Merge pull request #6525 from tarekgh/AotResourceManager
    
    Enable ResourceManager fallback in AOT

[33mcommit a9c7155de21cf11ff270a0f9d89cfc7cb82ff2ec[m
Author: Kamil Rytarowski <n54@gmx.com>
Date:   Tue Mar 1 02:48:19 2016 +0100

    Mark disabled tests on Linux&OSX also disabled on NetBSD

[33mcommit 7500fb1a5ec832763d4c8e877b11e9c4e299f8ae[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Mon Feb 29 17:30:08 2016 -0800

    Update README.md

[33mcommit 382368c8b031fdcc94d5f964c18e377a7ae23a76[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 29 20:06:37 2016 -0500

    Use sysconf(_SC_OPEN_MAX) instead of OPEN_MAX in an assert
    
    Use the actual limit rather than one hardcoded in a .h file.

[33mcommit 6ffebba142ec4f9b500a646da8d5754eb4576f07[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Feb 29 17:18:07 2016 -0800

    Add test coverage for CustomAttributeDecoder

[33mcommit 46dcf613b6ea8602f8468d7d1b5298dbdbb170da[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Feb 29 14:27:16 2016 -0800

    Respond to PR feedback
    
    * make fields readonly where possible
    * use ImmutableArray.Builder + MoveToImmutable() where possible
    * update copyright headers

[33mcommit a4414acf47ea37e1ad8b46687396f67ea3e8dcb6[m
Merge: d3d9191 129610d
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Mon Feb 29 17:19:39 2016 -0800

    Merge pull request #6526 from Priya91/outerloop
    
    Enable outerloop runs for centos, rhel, opensuse, ubuntu15.10.

[33mcommit 7c9209ca662271f32f8ead65abf24eea0348e065[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Mon Feb 29 14:09:25 2016 -0800

    Expose MethodInfo methods in System.Reflection

[33mcommit ce213ef4cfba2dc7a6ac4655cf7feaf116594584[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Mon Feb 29 17:07:28 2016 -0800

    Fixing build breaks mirrored from open.
    
    Update validation of DNXCore50 > netstandardapp1.5
    Add new xamarin frameworks to TFS-only & WCF projects
    Update paths in MS.NETCore.Portable.Compatibility to use netstandard
    instead of dotnet and dnxcore50.
    Update buildtools version to fix incorrect baseline dependency
    calculation.
    
    [tfs-changeset: 1580002]

[33mcommit ba6f2955580a029037d920c4be836e9850427e46[m
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Mon Feb 29 13:41:34 2016 -0800

    Support AOT ResourceManager fallback
    
    This change is to have the resource manager fallback to the assembly neutral
    language when couldn't get the resource string using the input culture.
    Also there is small change moving some code from System.Private.CoreLib,WinRtInterop
    to minimize the dependency between these 2 libraries so eventually we can fully
    get rid of this dependency for the sake of flexibility changing any of them without
    worrying of change the other
    
    Conflicts:
    	src/System.Resources.ResourceManager/src/netcore50aot/project.json

[33mcommit 933d187df900ded441c57a99bc3dc7cc92bfd53e[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 29 19:52:48 2016 -0500

    Reinitialize terminal on SIGCHLD in addition to SIGCONT

[33mcommit 129610d02da71cacbc2fcc33c8b44055d7221172[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Mon Feb 29 16:44:00 2016 -0800

    Define OSShortnames for outerloop linux OSes.

[33mcommit d3d919171315d839b182042bf048ad8b6d003eeb[m
Merge: 326e9d5 ca4b68b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 29 19:25:14 2016 -0500

    Merge pull request #6519 from stephentoub/socket_error_values
    
    Fix SocketException error codes and messages on Unix

[33mcommit 326e9d5701c885bf862e4d8b3c47638980d2cbf3[m
Merge: 2d18c46 3a2ac29
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Mon Feb 29 15:45:18 2016 -0800

    Merge pull request #6520 from ericstj/removeDNXCore
    
    Remove DNXCore50 mentions from packages

[33mcommit 2d18c4662eb663e67d89d9688c67f660737c0b7a[m
Merge: 5969310 9c7da0d
Author: Cory Rivera <corivera@microsoft.com>
Date:   Mon Feb 29 15:41:22 2016 -0800

    Merge pull request #6528 from dotnet/RemoveCheckinSuitesReference
    
    Remove references to SqlClientCheckinSuitesDb in Tests

[33mcommit b9bc4f4a0799f0e236f8d8b4bb6b42dc9c7cf3d8[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Feb 29 18:37:30 2016 -0500

    Address PR feedback

[33mcommit 5969310c9a17e23ae07f00db3f488ffa447ee2b6[m
Merge: c8e52c3 f8adc19
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 29 18:30:41 2016 -0500

    Merge pull request #6521 from stephentoub/mkdir_perms
    
    Fix Directory.CreateDirectory permissions mask on Unix

[33mcommit 9c7da0db02ee5b31a155e0cbf0f0e5d1908a1f26[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Mon Feb 29 14:53:01 2016 -0800

    Remove references to SqlClientCheckinSuitesDb in SqlClient tests

[33mcommit 3a2ac29245c7bfa04950e268b7165c38c879ea2f[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Mon Feb 29 11:05:52 2016 -0800

    Update validation for .NET 4.6.2 specific API
    
    Some packages added API only supported in .NET 4.6.2 and later.
    
    Now that buildtools understands .NET 4.6.2 add the correct validation
    in these packages.

[33mcommit c5e9a0bbfd1472f8abb3c2e35140b83ac1bcdcef[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Mon Feb 29 11:04:09 2016 -0800

    Fix System.ComponentModel.Annotations package
    
    Fixes #4450
    
    System.ComponentModel.Annotations previously added API that
    was only supported on 4.6.1 or later for desktop.  We couldn't put
    the reference assembly in the correct folder at the time because
    NuGet wasn't mapping that folder to UWP.  Now that is fixed and
    we can clean that up.

[33mcommit baf425fa935f4ecd32712448be627604067cf1d3[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Mon Feb 29 09:39:47 2016 -0800

    Add support for new Xamarin frameworks
    
    The latest build tools contains framework lists for two new Xamarin fxs:
      Xamarin.TVOS
      Xamarin.WatchOS
    
    This adds placeholders for those frameworks so that they can support
    the packages with inbox facades.

[33mcommit 7c50768be0a2008480aa22ddb8038fdcb0e8039b[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Mon Feb 29 08:51:56 2016 -0800

    Update buildtools and change validation framework
    
    Update BuildTools to 1.0.25-prerelease-00180
    
    Change validation framework moniker from dnxcore50 to
    netstandardapp1.5.

[33mcommit 6008326984df7bddff751d0fec678ee29d821a59[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Mon Feb 29 06:31:43 2016 -0800

    Remove use of DNXCore from packages
    
    This changes every package that used the DNXCore50 moniker to use a
    NETStandard moniker instead.

[33mcommit ad9a47d3595192d69f48fb0c2f53acb3ba0e3080[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Mon Feb 29 13:56:36 2016 -0800

    Enable outerloop runs for centos, rhel, opensuse, ubuntu15.10.

[33mcommit 1f2632f15859e293865ca14f8da882be26dcfbac[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Thu Feb 25 18:28:06 2016 -0800

    Expose System.Reflection.TypeInfo APIs.

[33mcommit c8e52c34c494a2bad225cbe6d0ece35c6e66153d[m
Merge: 81d51eb 9b84035
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 29 17:04:55 2016 -0500

    Merge pull request #6524 from pallavit/UpdatePackages
    
    Update packages to rc3-23829

[33mcommit fb5c7f28ad714bf67f6df9e07cb25323e4076bc1[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Sat Feb 27 20:02:28 2016 -0800

    SqlBulkCopyColumnMappingCollection: Remove dependency on CollectionBase
    
    Changes SqlBulkCopyColumnMappingCollection to implement IList
    directly instead of deriving from CollectionBase, using List<T> as
    the private backing collection. Includes tests to verify the behavior
    remains the same as when the implementation came from CollectionBase.

[33mcommit 9a89b743a324c13f54ad5e15cc02eb2a78b2f4cc[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Sat Feb 27 15:42:34 2016 -0800

    SqlClient contract: Remove dependency on System.Collections.NonGeneric
    
    Change SqlBulkCopyColumnMappingCollection to no longer inherit from
    CollectionBase in the SqlClient contract, along the lines of other
    collections like X509CertificateCollection, XmlArrayItemAttributes,
    XmlAnyElementAttributes, etc.

[33mcommit 9b8403541bfbd4b1956944723b68167ad12fbf29[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Mon Feb 29 13:07:48 2016 -0800

    Fix packages issues due to the update

[33mcommit be7151b45a54577c2e28c56977408d7d61ed0ea9[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Mon Feb 29 10:51:29 2016 -0800

    Update the packages

[33mcommit 81d51ebf8792b799bbcff156da3e2aded9dc154a[m
Merge: 4c0d92e fccb022
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 29 15:40:56 2016 -0500

    Merge pull request #6507 from stephentoub/sockets_asserts
    
    Add Debug.Assert messages to System.Net.Sockets Unix code

[33mcommit 4c0d92ecf49a060a0aab15f4cf85b479015753df[m
Merge: eadc527 5373a8c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 29 14:40:27 2016 -0500

    Merge pull request #6504 from stephentoub/ctrlc_test
    
    Add a test for ctrl-C handling on Unix

[33mcommit ca4b68b5a4c97a6728624ade1abfba3f8d4ab1b7[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Feb 29 13:59:37 2016 -0500

    Address PR feedback
    
    - Put back the Message override

[33mcommit a9673d14bd4637357d15df5d9907405176c7c1bb[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Feb 29 13:38:06 2016 -0500

    Fix SocketException error codes and messages on Unix
    
    SocketException's public ctor takes an int, which it treats as as both a SocketError and the native error code, passing it down to the base Win32Exception to get the platform-specific message for the error.  However, SocketError is only the same as the native error code on Windows; on Unix, a translation is required, but that translation is missing.  As a result, every SocketException thrown from System.Net.Sockets on Unix comes out with an unhelpful message "Unknown error 12345", where 12345 is the value for the SocketError, and the base native error code is set inappropriately as the SocketError's value rather than as the real errno value.
    
    This change puts a reverse mapping in place, such that the SocketError provided to SocketException is then translated back (as best as possible) into the underlying platform's native error code, which is then both stored on the base exception and used to get the appropriate platform-specific error message. So, for example, rather than getting an error like:
    ```
    System.Net.Sockets.SocketException: Unknown error 10047
    ```
    you now get an error like:
    ```
    System.Net.Sockets.SocketException: Address family not supported by protocol
    ```
    
    Additionally, several SocketErrors map to errno values that weren't included in our Interop.Errors enum.  I've added them.
    
    And, SocketException had dead code in the form of an "internal SocketException(EndPoint endPoint)" ctor that was never used.  As a result, the private _endPoint field was always null, and the Message property would always just return base.Message.  I've removed the constructor, the field, and the Message property override.  SocketException also had an ErrorCode property in the implementation that wasn't in the ref contract; I've removed it from the implementation, too.

[33mcommit f8adc194bee9d26417fb22223d9a1b5bed0032fc[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Feb 29 14:18:42 2016 -0500

    Fix Directory.CreateDirectory permissions mask on Unix
    
    The mkdir utility uses 777 & umask as the permissions for new directory.  Directory.CreateDirectory should do the same, but it's currently using 700.  This fixes it to match.

[33mcommit eadc527467d6f27927952c7d9a8cd767d409eea3[m
Merge: ed35d78 4d19ccc
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Feb 29 10:33:25 2016 -0800

    Merge pull request #6341 from hughbe/fix-6338
    
    Fix inconsistent Equals implementations for Complex

[33mcommit ed35d78df534a97351cee91196241ee093e8fb33[m
Merge: 704e4d6 bb3759f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 29 12:14:22 2016 -0500

    Merge pull request #6514 from stephentoub/multicast_nullref
    
    Fix a NullReferenceException on Unix in SetMulticastOption

[33mcommit bb3759fc7885000ec80c93170e6596077f4f57d1[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Feb 29 07:55:20 2016 -0500

    Fix a NullReferenceException on Unix with SocketOptionName.AddMembership
    
    The implementation was assuming that LocalAddress is always set, but it'll be null if an interface index was provided.

[33mcommit 704e4d6b37e726c07fd5a04b49d7aa6737290c3c[m
Merge: 516a897 d1abb7a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 28 22:17:04 2016 -0500

    Merge pull request #6509 from dotnet/stephentoub-osxbadges
    
    Add OSX outer loop badges to README.md

[33mcommit d1abb7a849cf60c16d5865c0fb180efa3401a2f8[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 28 21:55:38 2016 -0500

    Adds OSX outer loop badges to README.md

[33mcommit 516a897f091f76868e8b4ffa3820d4cdac697527[m
Merge: 38fa8a1 c5340d4
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Sun Feb 28 18:36:32 2016 -0800

    Merge pull request #6508 from Priya91/addnanoouterloop
    
    Add required scripts to archive in nano bld.

[33mcommit c5340d44a8d252fa17f78dac3319f933f5dac40c[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Fri Feb 26 18:23:07 2016 -0800

    Add required scripts to archive in nano bld.

[33mcommit 38fa8a1fa4aba587209652c69006dbf46381b704[m
Merge: 53ae3f2 30093f3
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 28 20:31:09 2016 -0500

    Merge pull request #6390 from hughbe/globalization-tests-text-info
    
    Cleanup TextInfo tests

[33mcommit fccb022e77c878f79f9b401ee4d413bcaf8823a3[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Feb 28 20:29:37 2016 -0500

    Add Debug.Assert messages to System.Net.Sockets Unix code
    
    With the current lack of PDB support on Unix, Debug.Assert failures don't include file / line number information, which makes it harder to debug, especially when there are multiple asserts in a single function.  This commit adds messages to all of the Debug.Asserts in the Unix-specific code in System.Net.Sockets.

[33mcommit 53ae3f2f3b34383efdd52ece28b4cb698fe5209c[m
Merge: 378ce37 36c02ae
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 28 19:52:24 2016 -0500

    Merge pull request #6490 from hughbe/text-encoding-tests-ascii
    
    Cleanup ASCIIEncoding tests

[33mcommit 378ce3785afae5044df7aa215d00c61493cff39a[m
Merge: f8b1d74 a6eee4c
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sun Feb 28 16:41:00 2016 -0800

    Merge pull request #6500 from davidsh/winhttpwebsocket_dispose
    
    Release pinned buffers correctly for WinHttpHandler, WinHttpWebSocket

[33mcommit 5373a8c0d13faf7a889ad7f0c3214bfc7cfaf095[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Feb 28 19:22:57 2016 -0500

    Disable SIGQUIT test on OS X

[33mcommit 30093f3bb497a9dbddcc842c69d71c7ba9a4584a[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Mon Feb 29 00:04:17 2016 +0000

    Respond to PR feedback

[33mcommit 36c02ae3445b2910398d68dd2e474fe92a9c6c9a[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sun Feb 28 23:54:49 2016 +0000

    PR feedback

[33mcommit f8b1d744a94061afc2320ca557ccdc38acba880d[m
Merge: eb13e17 1d953e8
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 28 15:31:17 2016 -0500

    Merge pull request #6503 from justinvp/primitives
    
    System.Net.Primitives: Remove dependency on non-generic collections

[33mcommit 2b0eab15eafb1c214b5be3ff2c552237b7d7e0fa[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Feb 27 08:18:24 2016 -0500

    Multiple System.Console fixes
    
    - Lifetime of terminal attribute settings. Previously we were setting up the terminal's attributes (e.g. disabling echo) the first time the console was used, and leaving those settings for the duration of the process.  This has the very bad effect of leaving such settings on the terminal while other code using that terminal runs.  For example, if you launch a process with Process.Start and that process expects input, echo will still be disabled, and you won't be able to see the input.  This commit significantly changes how we do these attributes.  Instead of setting them and leaving them, we only set them while a read operation is in progress, reverting the settings immediately after.
    
    - Reapplication of terminal settings upon process resumption.  If the program was suspended with ctrl-z, when it was later resumed, both terminal settings and the application mode settings previously applied were lost.  With this commit, we now properly restore the application mode (which impacts how some keys, such as the arrows, are interpreted).  And if a read was in progress, we also restore the terminal settings.
    
    - EOL.  Typing ctrl-D is supposed to signal an end-of-line.  Previously we weren't doing anything special for it.  Now we look up the EOL characters in the terminal settings and act on them appropriately.
    
    - Console.Read.  This method, like ReadLine, is supposed to block until Enter, but it was only blocking until the first byte was available.  This commit fixes that.  It also makes it respond appropriately to EOL, return -1.
    
    - Cursor position robustness.  The protocol involved in getting the current cursor position involves writing an escape sequence to stdout and then reading a response that's written by the terminal to stdin.  Since the user can also be providing stdin input concurrently, this can lead to some flakiness, and with the current implementation, if we were to miss some of the input that comes from the terminal, we could end up hanging, waiting indefinitely for that input to arrive.  This commit adds a timeout so we'll only wait for a second on each read before giving up.

[33mcommit 1d953e85fb12928bfabf9101ec63367f6f86f585[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Sun Feb 28 09:28:24 2016 -0800

    System.Net.Primitives: Remove dependency on non-generic collections
    
    System.Net.Primitives depended on System.Collections.NonGeneric only
    for the non-generic SortedList. We can instead use the generic
    SortedList<TKey, TValue>, allowing us to remove the dependency on the
    legacy collections.

[33mcommit a6eee4cec6bf663a030c8cd41f7a3fc3349b01e3[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sat Feb 27 20:46:01 2016 -0800

    Release pinned buffers correctly for WinHttpHandler, WinHttpWebSocket
    
    Both WinHttpHandler and WinHttpWebSocket use pinned buffers for receiving and sending data. The pinned GCHandle was being freed during the dispose of the WinHttpHandler or WinHttpWebSocket objects. The problem is that the buffer should not be unpinned until the async operation is done. It's possible for any async operation to be in flight (and where native code uses the buffer) when the object is explicitly or implicitly disposed.
    
    This fix moves the ownership of the pinned GCHandle to their respective state objects (WinHttRequestState, WinHttpWebSocketState). These objects are strongly rooted and are not released until all async operations are completed and the WinHTTP handles are fully closed. That makes these state objects a safe place to own and free the pinned buffers.
    
    Fixes #2508 and #6142

[33mcommit eb13e17ca8080d0a603b7c9d72214aeb3ba41cb7[m
Merge: 6791732 b55b808
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 28 10:35:28 2016 -0500

    Merge pull request #6499 from hughbe/runtime-extensions-namespaces
    
    Add namespaces to tests in System.Runtime.Extensions

[33mcommit b55b8085528d0199bd14fb417d3b764e643b8533[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sun Feb 28 12:42:13 2016 +0000

    Add namespaces to tests in System.Runtime.Extensions
    
    Contributes to #2898
    Append ?w=1 to the url to see a cleaner diff

[33mcommit 990bf9907ae509fdb3bab68d8175e7b71b2e89d6[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Thu Feb 25 16:50:54 2016 +0000

    Cleanup TextInfo
    
    - Take advantage of xunit
    - Cleanup multiple files for the same method into a single one (more
    clean and easier to understand what's going on)
    
    Contributes to #2336
    
    Also fixes some nits that went unresolved in #6290

[33mcommit 1fa4fc96d6faa224c778bf3c8207de72b8416cfc[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Feb 27 21:58:41 2016 -0500

    Add a test for ctrl-C handling on Unix
    
    I'd previously added one, but then removed it because it involved sending a ctrl-C to the current process, which would cancel the remainder of the xunit tests in the process.  This commit reinstitutes the test, but in a manner that does the interesting work in a separate process so that it's canceled rather than xunit getting canceled.

[33mcommit 6791732af308613b3660d27545d27ae00024e4c9[m
Merge: ab1e51c e4b22d9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 27 20:53:46 2016 -0500

    Merge pull request #6366 from bartonjs/csp_safehandles
    
    Improve SafeHandle management in S.S.C.Csp.

[33mcommit ab1e51ccff2171ad11de2b81a8185a9b6d408b8e[m
Merge: 1037aaa 4d46512
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 27 20:35:49 2016 -0500

    Merge pull request #6492 from krytarowski/netbsd-support-6
    
    Remove additional attribution of maxProcesses

[33mcommit 1037aaaf330af87c460d69db8e483c82b5df6658[m
Merge: ee14201 3a30621
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 27 19:54:08 2016 -0500

    Merge pull request #6198 from hughbe/path-tests
    
    Cleanup Path tests

[33mcommit 4d46512cddeb2938e1b05fd43bdd8e3ff49c27e0[m
Author: Kamil Rytarowski <n54@gmx.com>
Date:   Sun Feb 28 01:31:59 2016 +0100

    Remove additional attribution of maxProcesses
    
    It's leftover from #6491

[33mcommit ee14201fb18696f112e4d10e886f430d0c557f93[m
Merge: 8bdc0a0 ae8c5c0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 27 18:43:43 2016 -0500

    Merge pull request #6491 from krytarowski/netbsd-support-5
    
    Introduce new test target OS: NetBSD

[33mcommit ae8c5c0717d9dda2b7d01c6655afe52e62eef68b[m
Author: Kamil Rytarowski <n54@gmx.com>
Date:   Sat Feb 27 23:13:12 2016 +0100

    Introduce new test target OS: NetBSD

[33mcommit 8bdc0a0ebdd6d98c2d0fc845220f8bf98b28fe19[m
Merge: 5da137f d34ed6e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 27 10:51:24 2016 -0500

    Merge pull request #6295 from hughbe/runtime-tests-stringbuilder
    
    Cleanup StringBuilder tests

[33mcommit 3fdec68d88d2d5ce9eafc988c3a42158e5b50f70[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sat Feb 27 15:40:14 2016 +0000

    Cleanup ASCIIEncoding tests
    
    - Rename tests to follow guidelines, instead of "PosTest1" and
    "NegTest2"
    - Take advantage of xunit
    - Shorten tests by using quicker and newer code

[33mcommit 5da137f17874864c982a651c8ff54bdc29f24c46[m
Merge: aecea46 476c6c7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 27 06:45:14 2016 -0500

    Merge pull request #6483 from dotnet/SmiMetaDataNullReferenceFix
    
    Reorder some static initializers in SmiMetaDataProperty to prevent null values being stored in EmptyInstance.

[33mcommit aecea467ff6dfd259a03105e667ac397c006f6ea[m
Merge: e29adab 33c7fa6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 27 06:43:28 2016 -0500

    Merge pull request #6482 from Priya91/addnanoouterloop
    
    Add archival to Nano bld job.

[33mcommit e29adab19d543b8f88995d4cabddfaad6aaf2742[m
Merge: 21469f8 7dbe409
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 27 06:34:10 2016 -0500

    Merge pull request #6484 from Clockwork-Muse/PLINQ_nameof_fixup
    
    Plinq nameof fixup

[33mcommit 7dbe409ee23ada5bfa8fcfb202067fbd20d9e6ac[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Sat Feb 27 11:29:23 2016 +0900

    Remove casts for test source data

[33mcommit 68b6c8a7f2e3d701405703afb37e70116377917f[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Sun Feb 21 00:23:02 2016 +0900

    Correct nameof to refer to correct source class.

[33mcommit 33c7fa673dddaea8de4324ff335b7b9ef6063a5e[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Fri Feb 26 18:23:07 2016 -0800

    Add archival to Nano bld job.

[33mcommit 476c6c79eece7d51bcc824a90cc412a1a279d81a[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Fri Feb 26 18:12:28 2016 -0800

    Reorder some static initializers in SmiMetaDataProperty to prevent null values being stored in the static EmptyInstance.

[33mcommit 21469f8d570e914c88b7d28e6b704e2666fe10a2[m
Merge: 92f4b35 7cea040
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 26 21:05:10 2016 -0500

    Merge pull request #6299 from hughbe/runtime-tests-guid
    
    Cleanup Guid tests

[33mcommit 92f4b3598883c3dcf7ef91d584665a673f1fa852[m
Merge: 6d7a33a 32be803
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 26 20:47:35 2016 -0500

    Merge pull request #6480 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 32be80387ac10835bda88c26e48791172a366061[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Fri Feb 26 16:33:03 2016 -0800

    Reducing MyGet feeds to reduce traffic caused by NuGet queries.
    
    [tfs-changeset: 1579444]

[33mcommit d34ed6ec1f2e2452bbac071bae4944d3c7cf1811[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sat Feb 27 00:28:25 2016 +0000

    Respond to PR feedback
    
    - Fix some comments
    - Merged tests testing the same functionality but different overloads
    - Added some tests, especially for methods that can take empty strings
    and StringBuilders with multiple chunks

[33mcommit 6d7a33a12c3a3236ca313cc0b1523bd008b65c7e[m
Merge: 0b43b1a 6c4dfb5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 26 19:08:25 2016 -0500

    Merge pull request #6478 from sokket/tests
    
    Fixing bug #5700 to stabilize a flaky test

[33mcommit 0b43b1a683615455a59563b03722201efe1bf59e[m
Merge: 70b1cc0 3d3641f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 26 19:06:27 2016 -0500

    Merge pull request #6474 from stephentoub/remove_templates
    
    Remove the issue and PR templates

[33mcommit 70b1cc048a1b95a3ea963e39fcda7a8ad31c61a6[m
Merge: 3bb762d b2b3886
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 26 17:34:42 2016 -0500

    Merge pull request #6475 from stephentoub/reflection_nameof
    
    Use nameof in System.Reflection.TypeExtensions

[33mcommit 3bb762dfa5aab9add006ee8cff6e74890bd996a5[m
Merge: 9cc4f66 d6a5bbb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 26 17:34:27 2016 -0500

    Merge pull request #6470 from stephentoub/fix_argbugs
    
    Fix a few ArgumentException changes previously reverted

[33mcommit 6c4dfb5dd438e425cd3ef3976ed456d8d6b7a9a8[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Fri Feb 26 14:32:31 2016 -0800

    Fixing bug #5700 where a test validating a rename scenario could
    fail under high load since the OS X file watcher will send a
    delete event if a rename pair is split into two notification
    payloads

[33mcommit 9cc4f667cd77b101551bfd290a8f5f7da088d410[m
Merge: 3efb8ea 908c81d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 26 16:36:24 2016 -0500

    Merge pull request #6473 from stephentoub/remove_buffer_usage
    
    Remove problematic ArrayPool usage

[33mcommit b2b3886877e3f40cf703ab1d1d853f670ada8448[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Feb 26 16:01:59 2016 -0500

    Use nameof in System.Reflection.TypeExtensions
    
    It has its own Requires.NotNull.  This changes them to use nameof rather than hardcoded strings.

[33mcommit 3d3641f542dca224f0fdf7cb52a8b6dde3c8c03a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Feb 26 15:49:13 2016 -0500

    Remove the issue and PR templates
    
    We can replace them later with guidance, examples, etc.   Any such thing would need to be in a different form (e.g. the rendered view of these .md files is very different from the content, where a lot of the guidance is in comments that don't render), so I'm simply deleting these for now.

[33mcommit 908c81d7a8c98f3f4dc1f6302ad7690a952c33c4[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Feb 26 15:36:52 2016 -0500

    Remove problematic ArrayPool usage
    
    We decided in the design meeting today that we should only be using ArrayPool in corefx itself in places where we can guarantee the types/methods won't cause corruption, even if due to misuse. Some of the usage we've already put in place doesn't meet this bar and needs to be removed.   For example, we use ```ArrayPool<byte>.Shared``` in a special CopyToAsync implementation, but in doing so we hand a buffer from the pool out to the constiuent streams, and a poorly behaving stream could end up holding on to the buffer even after CopyToAsync has returned to the pool, such as if a Stream.WriteAsync implementation had a bug and completed the returned task before it was actually done with the buffer.
    
    This commit removes all such usage (which we only very recently added).

[33mcommit d6a5bbb4954dce4434cf9e66aa993461d76ed8fa[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Feb 26 14:08:46 2016 -0500

    Fix a few ArgumentException changes previously reverted
    
    This reverts commit 1667fb568f05cb02eace29243b1d1b166d67d566.
    
    We agreed in the design meeting today that these are acceptable changes.

[33mcommit 3efb8ea77cbb5f1716472ed8c9ca025b2c916203[m
Merge: 1c61d6d b5523a9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 26 13:30:53 2016 -0500

    Merge pull request #6404 from dagood/fix-ubuntu-dependency-compat
    
    Fix restore compatability errors on Ubuntu/OSX

[33mcommit b5523a9e9af40942a011e3018ae20c8d77284c58[m
Author: Davis Goodin <dagood@microsoft.com>
Date:   Fri Feb 26 09:39:56 2016 -0600

    Add redirect from netcore50aot to netcore50 project.json fork.

[33mcommit 1c61d6d4886c6d7bdd83a1e39caf1d5f30244437[m
Merge: 3a05c32 15a267e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 26 09:51:28 2016 -0500

    Merge pull request #6307 from hughbe/globalization-tests-number-format-info
    
    Cleanup TextElementEnumerator tests

[33mcommit 3a05c32375824bff918d64fb04f5ba04a718c12d[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 26 07:28:30 2016 -0500

    Update contributing.md

[33mcommit 632d96b39799eedc2d40008e969c6f28864fb14a[m
Merge: 76eb973 dc65b88
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 26 07:20:42 2016 -0500

    Merge pull request #6356 from pallavit/Issue#4636
    
    Expose Console.InputEncoding and Console.OutputEncoding

[33mcommit 76eb973846cb1dd961d55f699089508a361d6f89[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 26 07:14:43 2016 -0500

    Update issue_template.md

[33mcommit 42998246d70b033b0ab2dd3378656cdf84bf349f[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 26 07:08:52 2016 -0500

    Update pull_request_template.md

[33mcommit 9ef07650c24acf967bbc3136b6389f8a60228e5a[m
Merge: 2684d65 bb40376
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 26 07:05:06 2016 -0500

    Merge pull request #6347 from dotnet/6167-issue-templates
    
    Add template for issues and pull requests

[33mcommit 2684d6586686791cd6417eb6917dc27581c33a22[m
Merge: 422e71b 595c98a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 26 07:00:57 2016 -0500

    Merge pull request #6413 from Priya91/nano
    
    Remove git setup from nano test job, to not clone source to Nano box.

[33mcommit 422e71b9e0bcde023dc0c5cfcc6ba15304dda004[m
Merge: 81c5ac6 096efbc
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Thu Feb 25 22:43:15 2016 -0800

    Merge pull request #6396 from saurabh500/sqlbulkcopy
    
    Adding SqlBulkCopy contract to System.Data.SqlClient

[33mcommit 096efbc6860a1ba7a99a13a410226feb6e3dcef6[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Thu Feb 25 22:42:22 2016 -0800

    Change tab to spaces

[33mcommit 81c5ac66a5f43c42b046ca0e401b1317d752d53b[m
Merge: 7b28768 e54f1b9
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Feb 25 21:12:29 2016 -0800

    Merge pull request #6401 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 7b287680b1c755830d23d254bbd2b57fa24d2696[m
Merge: 5056f53 5cf5f2e
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Feb 25 19:58:56 2016 -0800

    Merge pull request #6246 from chcosta/debian.8
    
    Add debian.8.2 to RID graph during transition period

[33mcommit 5056f53c8cf72d8dd7f1f474955de541bfd00c2a[m
Merge: 297f837 8116d10
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Thu Feb 25 19:21:55 2016 -0800

    Merge pull request #6412 from dotnet/Priya91-patch-1
    
    Update README.md

[33mcommit 595c98aa87135d44bb8243bc6794d76db45684f7[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Thu Feb 25 19:17:36 2016 -0800

    Remove git setup from nano test job, to not clone source to box.

[33mcommit 8116d10f66db0cb743d451c31f52c3e082a1dd27[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Thu Feb 25 18:50:42 2016 -0800

    Fix the readme badge links.

[33mcommit 601ad6d69d3c5f01aae18ce5ecccd3cc006597b0[m
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Thu Feb 25 18:23:45 2016 -0800

    Update README.md

[33mcommit 297f837d5c8b58456d9bc24998d9d0fa386841aa[m
Merge: f8f1649 91cb2a8
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Thu Feb 25 18:11:12 2016 -0800

    Merge pull request #6411 from Priya91/addnanoouterloop
    
    Add configuration switch to github PR trigger on outerloop nano.

[33mcommit 91cb2a83b6a36ad5fa81890ee36c0745e1a37bf1[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Thu Feb 25 18:07:17 2016 -0800

    Add configuration switch to github PR trigger on outerloop nano.

[33mcommit f8f16495de7404079ecf3f65131b0d735a6ba2c0[m
Merge: 0d639c3 b0a009f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 25 21:01:32 2016 -0500

    Merge pull request #6409 from hughbe/package-typos
    
    Fix typos in descriptions.json

[33mcommit 0d639c39f884de45f4325c6a9218b849b834a4fb[m
Merge: 37bbcbf 0291b44
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 25 20:50:32 2016 -0500

    Merge pull request #6322 from justinvp/curl_headers
    
    Reduce CurlHandler header parse allocations

[33mcommit 37bbcbf4ac4b778fae8dac6b6fc4c78d1cbc4df3[m
Merge: 53dc387 4c27253
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 25 20:47:21 2016 -0500

    Merge pull request #6387 from stephentoub/runtimeinfo_native
    
    Move RuntimeInformation name detection into System.Native

[33mcommit e54f1b90d016cf1601afa3f8284dccc049b6d64b[m
Merge: 52b7ca9 5fe085b
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Feb 25 16:33:01 2016 -0800

    Merge remote-tracking branch 'dotnet/master' into HEAD
    
    Conflicts:
    	dir.targets

[33mcommit 53dc387a4774def495d6a1e745fd3087dca74a0e[m
Merge: a311e29 43ba2e8
Author: Nate Amundson <naamunds@microsoft.com>
Date:   Thu Feb 25 18:16:23 2016 -0600

    Merge pull request #6175 from naamunds/AddSyncSh
    
    Add sync.sh for dev workflow

[33mcommit b0a009f0bfd04c3c965b0f1df09573ff317c3a24[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Thu Feb 25 23:44:03 2016 +0000

    Fix typos in descriptions.json
    
    Several small changes I spotted. Has NFC.

[33mcommit 96503d398e759510b7dd611130d317bdb5d5c072[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Feb 25 14:51:58 2016 -0800

    Add custom attribute decoder to S.R.Metadata vNext
    
    Port from dev/metadata branch.
    
    It is internalized out of the upcoming release as with the metadata
    writer and signature decoder, and equally subject to API review.

[33mcommit 786de67bd3203808bd165e5f186c7883fa926181[m
Author: Davis Goodin <dagood@microsoft.com>
Date:   Thu Feb 25 16:34:31 2016 -0600

    Fork netcore50 in System.Xml.XmlSerializer, lift package to compatibility in System.Security.Principal.
    
    This fixes the combination of upgrading CLI and the .NETStandard rename.

[33mcommit a311e2935705566e3369c3f9a8c659dc08abb992[m
Merge: 581d8ec 9bf2e78
Author: Cory Rivera <corivera@microsoft.com>
Date:   Thu Feb 25 14:29:23 2016 -0800

    Merge pull request #6403 from dotnet/corivera_FixAuthorsTableReference
    
    Fixes test issue where SELECT INTO statements can't find pubs..authors table, despite it being present in the database

[33mcommit 581d8ec923f57a33c43f3fbccdf47cd527010c47[m
Merge: 031e806 1667fb5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 25 17:21:44 2016 -0500

    Merge pull request #6389 from stephentoub/arg_names
    
    Fix use of nameof with ArgumentException

[33mcommit 031e8069c3f8f46c30b76922c646ca239026638a[m
Merge: 44cea4e e00cca2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 25 17:21:32 2016 -0500

    Merge pull request #6400 from stephentoub/fix_test_timeout
    
    Increase timeout on a threading test

[33mcommit 44cea4ed55141db200f2b8535aa552763806ffdc[m
Merge: 2d83421 ca82fbb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 25 17:21:12 2016 -0500

    Merge pull request #6391 from stephentoub/backspace_handling
    
    Fix Console.ReadKey() backspace handling on OSX

[33mcommit 2d83421ca64b069a47dccc8f71b564e5747f13f8[m
Merge: 5fe085b 4ded9c9
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Thu Feb 25 14:19:10 2016 -0800

    Merge pull request #6357 from Priya91/addnanoouterloop
    
    [Do Not Merge] Add Windows Nano Server outerloop job to Jenkins.

[33mcommit 9bf2e781d30155f871dacc7b33682be6c7d2d38e[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Thu Feb 25 14:15:08 2016 -0800

    Fixes test issue where SELECT INTO statements can't find pubs..authors table, despite it being present in the database

[33mcommit 4ded9c9f9c5c7f7bf294b1bb0538644824c98eb4[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Tue Feb 23 14:40:27 2016 -0800

    Add Windows Nano Server outerloop job to Jenkins.

[33mcommit 5fe085b1840047c928d5c0f8a617da73c48b8156[m
Merge: 632d3e7 41433ca
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Feb 25 13:34:25 2016 -0800

    Merge pull request #6077 from mellinoe/eliminate-pcl-warning-2
    
    Remove build dependency on PCL reference assemblies

[33mcommit 4c272534c40caea265a7824e0a579943ce2fdf75[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Feb 25 16:13:39 2016 -0500

    Consolidate RuntimeInformation packages

[33mcommit 632d3e7db4400cab0c7076e6ebbc8413714adf4b[m
Merge: e77ce63 f2b4777
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Feb 25 13:00:49 2016 -0800

    Merge pull request #6392 from davidsh/winhttprequeststate_leak
    
    Fix memory leak caused by cycle reference in WinHttpRequestState

[33mcommit e00cca28b9bbff891d7175b35303ef9da17aa5cd[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Feb 25 15:43:52 2016 -0500

    Increase timeout on a threading test

[33mcommit e77ce63242b55923e1f3e4119ee05f215f86a20e[m
Merge: 97bce74 4de57e4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 25 15:09:36 2016 -0500

    Merge pull request #6394 from ericeil/LongerLinger
    
    Increase linger time in SendRecvAsync tests

[33mcommit 1667fb568f05cb02eace29243b1d1b166d67d566[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Feb 25 15:07:33 2016 -0500

    Put back bugs :-(

[33mcommit 5b74152b938832e7ff8d45be42449dd1098a7d95[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Thu Feb 25 11:53:51 2016 -0800

    Adding SqlBulkCopy contract to System.Data.SqlClient

[33mcommit 97bce741c3d5ddf629dbd90cf44dc1af2333b108[m
Merge: e477daf c6e39e1
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Thu Feb 25 11:36:22 2016 -0800

    Merge pull request #6348 from joperezr/CleanToolRuntime
    
    Correctly cleaning up the ToolRuntime folder once a new version is required.

[33mcommit 52b7ca946eda509e47039267f21e14c3f362e33b[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Feb 25 11:35:40 2016 -0800

    Fix assemblyversion bug introduced by cs #1578917
    
    [tfs-changeset: 1578922]

[33mcommit 9fc5bd461c86bf0483b870f6ef198f53ae3a8922[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Feb 25 11:35:16 2016 -0800

    Enable merging optimization data
    
    When building CoreFx from TFS we need to inject build
    targets that merge optimization data into the binary.
    
    Previously we did this as a post-build step that would
    copy the binary to a different location.  When we moved
    packages to the open this changed the package to pick
    up the binary from the open build location instead of
    the internal copy with optimization data.  To fix this,
    inject the optimization step into the open build.
    
    Eventually we need to port the optimization merge
    task to buildtools so that we don't have to rely on
    this internal-only build step.
    
    [tfs-changeset: 1578918]

[33mcommit c21ea9f88392d4b4cf559294eef6520a290c604a[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Feb 25 11:23:13 2016 -0800

    Fix build issue #790094 - clash in doc file for s.r.m between v1.2 and v1.3
    
    [tfs-changeset: 1578917]

[33mcommit 4de57e46c073f3750d68fb6baa573e01bf879714[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Thu Feb 25 11:21:06 2016 -0800

    Increase linger time in SendRecvAsync tests
    
    These tests are failing with an OperationAborted status code on OSX, very rarely.  I can't reproduce the problem locally, even if I try to artifically induce the failure.  I'm guessing that the timing works out differently on the CI machines, making this (somewhat) more likely, and the only legitimate case I can see where this would happen is if the client closes the TCP connection before the server has finished reading all bytes.  Increasing the linger time should help with that, so let's give it a try.

[33mcommit 0291b44d95777cc3ea5521194a7f9c88be987959[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Tue Feb 23 09:10:00 2016 -0800

    Address PR feedback

[33mcommit 8aab95829d92185966ec9b79702101a2f167cd49[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Thu Feb 18 15:13:09 2016 -0800

    Reduce CurlHandler header parse allocations
    
    Use existing known header and reason phrase instances instead of
    always allocating new strings and avoid unnecessary intermediate
    string allocations.

[33mcommit 5cf5f2e7a9048d9d8d92678048e309f438164015[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Feb 25 10:35:30 2016 -0800

    Add debian.8.2 to RID graph during transition period

[33mcommit f2b47770d9014423ab830285b0fee47b75c44c02[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Feb 25 09:51:38 2016 -0800

    Fix memory leak caused by cycle reference in WinHttpRequestState
    
    The fix made in PR #6285 for this memory leak turned out to be insufficient. The request handle object for the stream (SafeWinHttpHandle) was part of the strong root chain in WinHttpRequestState. And even when the WinHttpResponseStream object was finalized (implicit Dispose), the request handle was not finalized and thus leaks were happening.
    
    To address this, the request handle object reference is now cleared from the WinHttpRequestState object (along with other object references) once the WinHttpResponseStream is created. WinHttpResponseStream then gets passed the request handle reference. Then normal finalizer rules can apply to both WinHttpResponseStream and the request handle. Once the request handle gets disposed (via finalizing), native WinHTTP will send a final status callback (HANDLE_CLOSING) and that is how the state object will then get unrooted and freed.
    
    Tested this fix with WCF streaming scenarios and used WinDBG to verify the heaps.
    
    There are future plans to improve this code via refactoring as part of #2501.
    
    Fixes 5927.

[33mcommit e477dafbccba8969836203c9a1ddf95654fbac94[m
Merge: 2017401 d71ddfd
Author: Kurniawan Kurniawan <kkurni@gmail.com>
Date:   Thu Feb 25 09:26:49 2016 -0800

    Merge pull request #6334 from kkurni/fix-routing-message
    
    Move routing and failover message ONLY for Login Timeout Error

[33mcommit ca82fbb32ece8c64140391aecce47eec0d550cca[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Feb 25 11:42:38 2016 -0500

    Fix Console.ReadKey() backspace handling on OSX
    
    The terminfo files for xterm* on OSX contain ```^H``` for the kbs entry (Backspace key); this can be seen, for example, with ```infocmp -1 xterm-256color | grep kbs```.  However, the terminal is sending ```^?```.  This commit addresses the discrepancy by consulting the termios control codes and using them as an override for what's in termios.

[33mcommit 3a306215fe2f8f29e6999debf6c02ed996339dbc[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Thu Feb 18 10:27:55 2016 +0000

    Cleanup Path tests
    - Use xunit InlineData
    - Follow some consistent test guidelines

[33mcommit 368fdfd86ee3a3bf1bca2a6c339ee590f3d6505d[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Sat Feb 20 10:10:01 2016 +0900

    Fix use of nameof with ArgumentException
    
    Correct instances of new "ArgumentException(nameof(..." so names are in the correct parameter.  Where possible, I chose the resource string I felt best fit the situation.  Otherwise, I created a new entry (I'm assuming there's some extra work that needs to be done there, but don't know what it is offhand).

[33mcommit 2017401b5d4992bbdd2ba847b339f57dbbfc8df3[m
Merge: 0b79f10 69afa5d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 25 10:16:41 2016 -0500

    Merge pull request #6385 from stephentoub/disable_compression
    
    Ensure OpenSSL compression is disabled

[33mcommit dbb7a3f2d3938b9b888b876ba4b2fd45fdc10985[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Feb 25 00:07:19 2016 -0500

    Move RuntimeInformation name detection into System.Native
    
    We currently build a managed .dll for each supported platform, purely for the purpose of a single string denoting the target platform's name.  Since we already need to build System.Native per platform anyway, we can just expose the name from there.  With this change, a single System.Runtime.InteropServices.RuntimeInformation.dll can be shared by all flavors of Unix, and in the future we won't need to specialize it or its packages to bring up additonal platforms.

[33mcommit 69afa5dea30cd94357119ae3a0e00e8bd2da2cd2[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 24 22:30:14 2016 -0500

    Ensure OpenSSL compression is disabled
    
    It's disabled by default since OpenSSL v1.1.0.  This ensures it's disabled even in cases where we're building with a version older than that.

[33mcommit 0b79f105ba35869f7708de7b892f8647e43203f4[m
Merge: 120f2f0 3c7911d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 25 00:17:39 2016 -0500

    Merge pull request #6365 from JonHanna/return_self_on_nop_skip_take
    
    Return self on nop Skip or Take

[33mcommit 120f2f0f7de8b0b2e52269055d1a2b3e16d3f447[m
Merge: 8e6c738 41e0c91
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 24 22:42:56 2016 -0500

    Merge pull request #6345 from ericeil/HandleTable2
    
    Stability improvements for *nix Sockets

[33mcommit 8e6c7380d310cf4b474a592ccb7799b37bcaff0f[m
Merge: 34d81a6 3fbf632
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 24 22:42:07 2016 -0500

    Merge pull request #6354 from hughbe/uri-builder-tests
    
    Add Uri Builder tests

[33mcommit 41433cafa28dd0759c7b42cf41c9c6f019b5fe4e[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Feb 24 19:03:21 2016 -0800

    Simply MSBuild overrides and add comments

[33mcommit 34d81a6560c5eef984457d5c6f84f46ba6497017[m
Merge: 5023872 e26c132
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Wed Feb 24 18:50:06 2016 -0800

    Merge pull request #6359 from saurabh500/interfaces
    
    Interfaces in ADO.Net

[33mcommit 50238720efe40a8114bac9f83e02f89708f802f3[m
Merge: aa44f64 3ddac0a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 24 21:39:59 2016 -0500

    Merge pull request #6379 from stephentoub/openssl_decrypt_fix
    
    Fix Interop.OpenSsl.Decrypt to handle decompression

[33mcommit b9dcea3300a58b236c83e44c0b8f25aa2150cd9c[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Feb 24 17:41:14 2016 -0800

    Additional System.Composition.* fixes
    
    These libraries need to now reference Microsoft.NETCore.Platforms.

[33mcommit e49f570bf97d0d81f3c461970155dc6cdd6aee8c[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Feb 5 17:29:17 2016 -0800

    Fix compilation issues in various libraries when compiling without PCL reference assemblies

[33mcommit 70e4e0df4370803cb63b68fc9a6189c3f3c59f80[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Feb 5 16:48:45 2016 -0800

    Use NuGet references in System.Threading.Tasks.Dataflow
    
    Additionally, clean up the cruft in the project files and remove some
    unused using statements.

[33mcommit ed55c74c9be4439a010d8a6c54dd8d2e78a67f76[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Feb 5 13:44:46 2016 -0800

    Use NuGet references in System.Composition, clean up source and projects
    
    This library was still using PCL references. I've switched this to use
    NuGet references like the rest of our libraries. There were some unused
    using statements that were invalid without the PCL references. I've also
    cleaned up the project files as they had a lot of legacy cruft in them
    that is no longer useful or relevant.

[33mcommit 8eb202dce7c45b9b307d53063804c2a19b6fc678[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Feb 4 17:24:08 2016 -0800

    Don't use PCL references for System.Collections.Immutable

[33mcommit 2e472795aa78989dadabecd78ab30dbeb4dd9d2e[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Feb 4 16:37:11 2016 -0800

    Fix Cryptography.Cng build issues
    
    There were a variety of unused-using-statements which were causing build errors when PCL reference assemblies are unavailable

[33mcommit 76ce52cc13bf775e15d8aef81113fa3c873044d1[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Feb 4 16:26:11 2016 -0800

    Eliminate PCL Profile warning messages

[33mcommit aa44f64c3f4d8343e58ed9e406a911fe93e6b894[m
Merge: 61bcf94 a427495
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 24 20:23:26 2016 -0500

    Merge pull request #6352 from chcosta/snp_binclash
    
    Fix binclash in System.Net.Primitives

[33mcommit 61bcf94314c069812f92106f0635b48c732a85f3[m
Merge: c0e4eec bcc9828
Author: Cory Rivera <corivera@microsoft.com>
Date:   Wed Feb 24 17:19:59 2016 -0800

    Merge pull request #6380 from dotnet/corivera_FixManualTestsEncoding
    
    Convert SqlClient test files to UTF8 encoding.

[33mcommit dc65b8829aa51bbda2e4f080a079b626394f612f[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Wed Feb 24 17:17:18 2016 -0800

    Incorporate feedback comments

[33mcommit bcc982884b025f693ec2eaf6914cfce96f240937[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Wed Feb 24 17:08:43 2016 -0800

    Convert SqlClient test files to UTF8.

[33mcommit c0e4eec3da3f47532ead255e780a5c43406bd176[m
Merge: 78dc663 4435f9f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 24 19:56:13 2016 -0500

    Merge pull request #6369 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 78dc663d56c4c3baf60de36088ad2982fe805366[m
Merge: de03b80 c449c9a
Author: Cory Rivera <corivera@microsoft.com>
Date:   Wed Feb 24 16:47:21 2016 -0800

    Merge pull request #6376 from dotnet/corivera_PlatformNotSupportedTestFix
    
    Add checks for PlatformNotSupported exceptions in Named Pipe ManualTests when running on non-Windows platforms.

[33mcommit 3c7911de954f02c0785aacda2d035702185a2b33[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Feb 23 23:21:04 2016 +0000

    Alias on return from Skip and Take when applicable.
    
    Avoid allocation by returning a sequence when a Skip or Take is a nop.

[33mcommit 41e0c913b2e43084204e24a4f8d83f7307b49aff[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Wed Feb 24 16:27:48 2016 -0800

    Handle ObjectDisposedException in UnregisterRead

[33mcommit 3ddac0a769a6b7f21be550194ae15173bc9ff16a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Feb 24 18:54:37 2016 -0500

    Fix Interop.OpenSsl.Decrypt to handle decompression
    
    The Interop.OpenSsl.Decrypt implementation is assuming that data to be decrypted will never have output larger than the input, but that's not a valid assumption, such as when compression is employed and the received data to be decrypted may get longer when decompressed.  This is causing failures in SslStream on OS X, which appears to be using compression as part of the underlying OpenSSL implementation.

[33mcommit de03b808a0fbd441343c67ab37451efc459638d5[m
Merge: 1049084 10c9482
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 24 18:58:14 2016 -0500

    Merge pull request #6360 from sepidehMS/RemoveErrorMsgsXNodeBuilder
    
    Rewrite some non-failing xNodeBuilder tests so they dont print mismatch messages

[33mcommit 1049084207600ddd9ebedfa99c2a3e423b2d2c3b[m
Merge: 0b73e57 4b2ceb1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 24 18:56:45 2016 -0500

    Merge pull request #6368 from stephentoub/lang_script
    
    Ensure LANG is set when running tests on Unix

[33mcommit c449c9aca5337149d4fe0eeae3db1eec247b2dd5[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Wed Feb 24 15:11:23 2016 -0800

    Convert DataStreamTest.cs to UTF-8, rather than UTF-8 BOM

[33mcommit f6a4464feb0c206184b458587df5cc4c24026fea[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Wed Feb 24 14:53:47 2016 -0800

    Fix encoding issue with DataStreamTest.cs

[33mcommit 7f9432d1750112353a75f5aaa47c65c8a752afcb[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Wed Feb 24 14:18:35 2016 -0800

    Add checks for PlatformNotSupported exceptions in Named Pipe ManualTests when running on non-Windows platforms.

[33mcommit 10c9482df13b95e88e30c3caa6f750e80ac9ebab[m
Author: sepidehMS <sekho@microsoft.com>
Date:   Wed Feb 24 14:02:44 2016 -0800

    Apply feedback (remove catch(ArgumentException) and add new line)

[33mcommit 0b73e57f692838deb324013a76980c97889fcc5a[m
Merge: 41adbf8 84a1856
Author: Cory Rivera <corivera@microsoft.com>
Date:   Wed Feb 24 11:33:45 2016 -0800

    Merge pull request #6363 from dotnet/corivera_RemoveAdventureWorksReference
    
    Remove references to AdventureWorks sample database in SqlClient Manual Tests

[33mcommit 829375dca4f075c98d9561f11613bff35f48f236[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Wed Feb 24 11:20:08 2016 -0800

    Address PR feedback

[33mcommit c912b3e1e23eed2c5eda1fe4e1cfb05146e04084[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Wed Feb 24 11:05:44 2016 -0800

    Better fail-fast text

[33mcommit 41adbf861d3918be6a70335fa8cc6a896e996eff[m
Merge: 46a3090 9b677b4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 24 12:34:37 2016 -0500

    Merge pull request #6290 from hughbe/globalization-tests-string_info
    
    Cleanup StringInfo tests

[33mcommit e4b22d9373fd82b657375744b5a9fb5c4138bc03[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Feb 23 19:00:57 2016 -0800

    Improve SafeHandle management in S.S.C.Csp.
    
    * Declare the handle allocating methods as out, instead of ref.
    * Propagate that change to calling methods
    * Dispose any handles that were allocated right before exceptions are thrown
    * Factor all of the complicated CspKeyContainerInfo property gets into two
    helper methods
        * And ensure that the temporary handles are disposed on exceptional paths
    * Delete SafeProvHandle::ReleaseProvider, in the VM it was tracking needing to
    free an allocated BStr.
    * Delete the "else if" block in UpgradeRSA, it was unreachable.
    * Change RSACryptoServiceProvider to use lock (_parameters) instead of lock(this)
    * Changed _parameters to be readonly, since it could be.
    * Move most reads/writes of the SafeHandles in RSACryptoServiceProvider to
    properties
        * Ensures proper locking on allocation
        * Ensures proper disposing of previous values on re-assignment
    
    There were also some cleanup elements that snuck in:
    * Removed some stale comments
    * Corrected some others
    * Clipped down the long lines in RSACryptoServiceProvider
    * Removed unused using-import statements.

[33mcommit 4b45dca00d66389aabf66ba45631fb47aec02319[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Feb 22 15:07:25 2016 -0800

    Make CSP SafeHandle types reuse InvalidHandle values
    
    The CSP SafeHandle types each had an InvalidHandle property which returned
    a new object per call.  This led to a lot of finalization being required, since
    no one would really think to dispose a value which was explicitly the
    InvalidHandle output.

[33mcommit 3803a0f1a6223eb49744b2c42a9b57a494e5c1cd[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Feb 22 11:39:12 2016 -0800

    Register parent dependency to CSP SafeHandle types.
    
    After writing some scaffolding to ensure that the finalizer race condition from
    GetProviderParameter always happened in the bad order, this change was
    introduced and was seen to fix the problem.

[33mcommit 3fbf6328fa7e7dd7e4096715a94cbe4fb0b5f794[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Wed Feb 24 14:33:45 2016 +0000

    Cleanup UriBuilder tests
    
    Adds tests for all members of UriBuilder, bringing code coverage up to
    almost 100%
    
    Fixes #6353

[33mcommit 4b2ceb1d4a0d80e8fe31287aacf7ec45a8d3b59b[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Feb 23 13:17:37 2016 -0500

    Ensure LANG is set when running tests on Unix
    
    Various tests depend on CurrentCulture, and when run in the service in CI, LANG is defaulting to empty which then causes the locale to default to "POSIX", which causes problems for some of the expectations in various tests.  This ensures that LANG is set.

[33mcommit 4435f9f2776ae007e05f4454675e56cf76a51975[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Feb 23 20:18:17 2016 -0800

    Rename "dotnet" to "NETStandard"
    
    Fixes https://github.com/dotnet/corefx/issues/5707
    
    We are changing the .NET packages to no longer use the ‘dotnet’, ‘dotnet5.x’, and ‘dnxcore50’ monikers.  This is thee first stage of the change for dotnet->netstandard.
    
    The replacements are as follows
    
    Old moniker | New moniker
    ----------------- | ------------------
    dotnet5.x | netstandard1.y  (where y = x -1)
    DNXCore50 | netstandardapp1.5
    dotnet | netstandard1.3
    
    To prepare for this change you can do the following to your project.json.  This change will require a recent build of NuGet or dotnet.exe and can be done prior to consuming the packages with the breaking change.  These packages will not work with DNX.
    
    For a project targeting dotnet5.6
    ```
        "frameworks": {
            "netstandard1.5": {
                "imports": [ "dotnet5.6" ]
            }
        },
    ```
    
    For a project targeting dnxcore50
    ```
        "frameworks": {
            "netstandardapp1.5": {
                "imports": [ "dnxcore50", "portable-net45+win8" ]
            }
        },
    ```
    
    [tfs-changeset: 1578321]

[33mcommit e5e7e23fe52188e3d09470bc51fd0d80f8d2354f[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Feb 23 20:09:29 2016 -0800

    Fix dependencies of runtime.any packages
    
    The ExternalOnTargetFramework entry was causing a placeholder
    dependency group to be added to the any packages for netcore50
    which was causing all the dependencies to be dropped when restoring
    for netcore50.
    
    [tfs-changeset: 1578314]

[33mcommit e26c132e6a7ce8211054a2b5072c35b3397fd691[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Tue Feb 23 20:09:13 2016 -0800

    Reducing the scope of DataRowVersion to Default value

[33mcommit 46a3090055d1a21062cc859194a3965bc58cc166[m
Merge: ea16fb9 65f0e32
Author: Cory Rivera <corivera@microsoft.com>
Date:   Tue Feb 23 17:25:36 2016 -0800

    Merge pull request #6364 from dotnet/corivera_AmendTestReadme
    
    Add note to README about removing UnsupportedPlatforms tag before trying to run ManualTests

[33mcommit f6be5125c68360b974c54a2718595c47e45f493c[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Tue Feb 23 17:18:56 2016 -0800

    On SocketEvents.ReadClose, complete all reads, rather than aborting them.

[33mcommit ea16fb999633bcc33bfb4ce4014ac912c94e5f89[m
Merge: 2768555 f731c83
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 23 19:56:50 2016 -0500

    Merge pull request #6340 from hughbe/globalization-calendar-tests-japanese-calendar
    
    Cleanup JapaneseCalendar tests

[33mcommit 65f0e3266a60528cf3b25ad3d9c922eca06751e9[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Tue Feb 23 16:55:07 2016 -0800

    Add note to README about removing UnsupportedPlatforms tag before trying to run ManualTests

[33mcommit b84ef301e0462aaa3ce955444bbd60cbd3a17e93[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Tue Feb 23 16:48:04 2016 -0800

    Remove extra comment line

[33mcommit 27685550d3570cfc3dc5b1cd0f5d6283864185e6[m
Merge: 18109f6 853cd2b
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Tue Feb 23 16:47:22 2016 -0800

    Merge pull request #6362 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 2282c79ec62da24d8c65789f5bd95d92eb9ccb6d[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Tue Feb 23 16:46:07 2016 -0800

    Moving interfaces to TargetGroup out of net45

[33mcommit 18109f6a9eae9b4374fff62c80579fe896b5547c[m
Merge: 2c13ce4 a95d851
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Tue Feb 23 16:46:05 2016 -0800

    Merge pull request #6337 from dagood/newcli
    
    Upgrade dotnet CLI version

[33mcommit 84a1856c179f47ef3298addc74d3a94652eb667d[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Tue Feb 23 16:35:29 2016 -0800

    Remove references to AdventureWorks sample database in SqlClient ManualTests

[33mcommit 147f14da513da22003c4631d3509862540014a2d[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Tue Feb 23 16:33:34 2016 -0800

    Change formatting to Allman

[33mcommit a4c4ef12cc63b823ce7669d7dcad3ffa0a7e2773[m
Author: sepidehMS <sekho@microsoft.com>
Date:   Tue Feb 23 15:21:40 2016 -0800

    Rewrite some non-failing xNodeBuilder tests so they dont print mismatch messages

[33mcommit 2c13ce442dd6e8e9ea2be3781059e351e9203c13[m
Merge: b87d9f1 51f9509
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Tue Feb 23 15:18:06 2016 -0800

    Merge pull request #6336 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit b4f502c77ddc9fa0bab1ae54b5e8b0b4a2cece79[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Tue Feb 23 15:15:47 2016 -0800

    Fixing license and removing internal bug references

[33mcommit 4c8ae2fed88b3cdf29dc79ecd3f4ee23079a3cd3[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Tue Feb 23 15:05:50 2016 -0800

    Adding the interfaces to the contracts

[33mcommit b87d9f1a7ac14b9eba0f0296f2a06e34cb424c44[m
Merge: 2fee362 75e1b22
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 23 17:35:37 2016 -0500

    Merge pull request #6332 from stephentoub/outerloop_test_failures
    
    Fix a bunch of Xml OuterLoop test failures on Unix

[33mcommit bee25a0f76b348f6ec68b9eb68ed1cb4e72a6200[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Tue Feb 23 22:22:59 2016 +0000

    Cleanup ArraySegment tests
    
    - Take advantage of xunit
    - Add missing tests
    - Coverage increased to 100%
    
    Contibutes to #6286

[33mcommit 2fee36234c7d342e66be259cc37afadafc55e627[m
Merge: 362c166 56175e5
Author: VSadov <vsadov@microsoft.com>
Date:   Tue Feb 23 14:15:32 2016 -0800

    Merge pull request #6330 from stephentoub/format_linq
    
    Format LINQ code

[33mcommit 4c42cbeb3b7fc94cebaa69822c545c8714824c94[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Tue Feb 23 13:17:13 2016 -0800

    Expose Console.InputEncoding and Console.OutputEncoding
    
    As of now we always used native Console\Terminal encoding to set up the
    Console stream encoding. However, we now expose the setter's as well.
    On windows this means updating both the stream encoding and the console encoding.
    On Linux, however this only translates to stream encoding as there is no good way to update the terminal encoding.
    
    Also, since Console does not emit the prefix irrespective of whether the Console encoding supports it or not,
    we wrap every encoding under ConsoleEncoding. This made no difference when the Encoding properties were not exposed.
    However, once they are exposed, it would be unexpected for people to see the getter return a different value from the setter.
    To prevent this, I have changed the location where the streams actually wrap up the encoding under ConsoleEncoding.
    
    Also, while implementing the encoding APIs I found that SetIn and SetOut are prone to issues due to thread caching.
    On Desktop the _in, _out are declared as volatile ensuring the write and read barriers to be in place, however in corefx
    we do not declare them as volatile and hence manually adding the barriers where required.

[33mcommit bb40376fe6b0f0e00044ca02b3f5ec2a7c2db173[m
Author: Immo Landwerth <immol@microsoft.com>
Date:   Tue Feb 23 13:56:51 2016 -0800

    Address feedback
    
    This uses HTML comments to separate instructions from actual template
    text. This should help to visually separate different sections and also
    has the nice benefit that it becomes invisible even when not deleted.

[33mcommit 74c26a6050b290e660f9c1abf788cad75a5bbe66[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Tue Feb 23 13:33:53 2016 -0800

    Adding base class implementation of IDataRecord

[33mcommit 362c166cdd7369fc9ee4b2ce6284d25684efbe00[m
Merge: 9c915f9 37443d8
Author: Cory Rivera <corivera@microsoft.com>
Date:   Tue Feb 23 13:12:03 2016 -0800

    Merge pull request #6350 from dotnet/corivera_SqlClientTestReadMe
    
    Add README for SqlClient Manual Tests

[33mcommit a42749562c1a221c34dffd942a3bfb10dbb47fd4[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Tue Feb 23 13:09:18 2016 -0800

    Fix binclash in System.Net.Primitives

[33mcommit 853cd2b294b73b06f133fdf3fa46fa339d673f61[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Feb 23 13:08:38 2016 -0800

    Modify Wes's condition on NuGetTargetMoniker slightly in System.Xml.XmlSerializer.csproj. We should only NOT set this property for the net46 TargetGroup, because the default TargetGroup and the netcore50 TargetGroup should both use dotnet5.4 assets. I've simply changed the condition to check if the TargetGroup is not equal to net46.
    
    [tfs-changeset: 1578167]

[33mcommit 37443d8cce1fcabf32523392b9d9df25e01eb904[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Tue Feb 23 12:57:16 2016 -0800

    Add README for SqlClient Manual Tests

[33mcommit c6e39e1e0dd2ac6b9d3615ddbecc562c6fff7107[m
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Tue Feb 23 12:26:33 2016 -0800

    Correctly cleaning up the ToolRuntime folder once a new version is required.

[33mcommit d10effdc6bfec59c5a8160f00e53271cacd30c32[m
Author: Immo Landwerth <immol@microsoft.com>
Date:   Tue Feb 23 12:01:55 2016 -0800

    Add template for issues and pull requests
    
    Fixes #6167.

[33mcommit b02211527b348522117400e403f97496faefb9e9[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Tue Feb 23 11:37:06 2016 -0800

    Minor cleanup

[33mcommit 7268d41f044cc211aa653449978966c324db2337[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Tue Feb 23 11:35:46 2016 -0800

    Fix formatting

[33mcommit f68e10977d49ea724c27191ac6cc75a6524af9cc[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Tue Feb 23 10:03:55 2016 -0800

    Dequeue operations before completing them
    Now that we're using SafeHandles everywhere, it's possible for TryComplete*, in a race with Socket.Dispose, to end up releasing the last reference to the SafeHandle.  That results in a call to SocketAsyncContext.Close, which attempts to abort pending operations.  So we need to dequeue operations prior to completing them, so that we won't try to abort them.

[33mcommit b83cb07022ee7238e9bb2bbbfd0523242065485e[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Thu Feb 18 14:28:44 2016 -0800

    Fix issues with new SocketAsyncEngine handle table

[33mcommit 730df62e8948846f8661189811980ac341559d1a[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Wed Feb 17 17:41:19 2016 -0800

    Fix race in SocketAsyncEngine
    
    In  SocketAsyncEngine.EventLoop , there is a window where  WaitForSocketEvents  has returned an event for a socket, but we have not yet deferenced the event's  GCHandle  to obtain the socket's  SocketAsyncContext . In that window, another thread may close the socket and free the  GCHandle . This can lead to some problems, depending on what else happens in this window. The most egregious of these is probably as follows:
    
    If another  GCHandle  is allocated for another  SocketAsyncContext , when we will misattribute the events to the new socket. For the most part this won't matter, as it will simply mean that we have to retry some operation again. But if the new socket has a pending "connect" operation, and we receive a "write" event, we'll think the new socket is connected, and there is likely no way we can recover from this.
    
    This change switches to a new handle allocation strategy that does not permit re-use of a given handle with a given event port.  Handle values increase monotonically until we reach the handle's maximum size; at that point, we allocate a new event port, and start allocating handle values from zero.  The old port will be freed once all of the handles associated with that port have been freed.
    
    On 64-bit platforms, the maximum handle value is long.MaxValue, which effectively means that we will never need to allocate a new event port.  On 32-bit platforms, we top out at int.MaxValue, and so a long-running process may occasionally need to allocate a new port.  Since this limit is reachable on 32-bit, but is in any case hard to reach, we artifically impose a very low limit in "debug" builds, so we can be sure to exercise the rollover to the new event port.

[33mcommit 17a54886fa8c1da4148cb4422dae55c0f701f269[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Mon Feb 22 09:47:43 2016 -0800

    Fix a couple of issues with SafeHandles in SocketAsyncContext:
    1. Don't attempt to unregister the socket file descriptor from the event port after the socket has been closed.
    2. If a socket is in the process of closing, using the SafeCloseSocket may result in ObjectDisposedException.  These need to be translated into SocketError.OperationAborted, rather than propagating to the caller.

[33mcommit a95d85171c7907aae7f5b4430ec567cc7e0e2332[m
Merge: 44f1796 51f9509
Author: Davis Goodin <dagood@microsoft.com>
Date:   Tue Feb 23 13:12:49 2016 -0600

    Merge remote-tracking branch 'bot/from-tfs' into newcli

[33mcommit 9c915f98119bee851fbce59f4aaab2c38469eb8a[m
Merge: 331690a 0cd64fc
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Tue Feb 23 11:02:55 2016 -0800

    Merge pull request #6301 from hughbe/globalization-tests-datetime-format-info
    
    Cleanup DateTimeFormatInfo tests

[33mcommit 4d19ccc82bcedeefcd0eb902228329fbd823a7bf[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Tue Feb 23 18:33:04 2016 +0000

    Fix inconsistent Equals implementations for Complex
    
    Now Complex.Equals(object) and Complex.Equals(Complex) will always
    return consistent results.
    
    Existing test data already cover this, but I removed a workaround for
    this bug from the test code.
    
    Fixes #6338

[33mcommit f731c8348243cb7d30394597affeb1f203813f0b[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Tue Feb 23 18:27:27 2016 +0000

    Cleanup JapeneseCalendar tests
    
    Pretty small cleanup stuff here, but still worth doing.
    
    Contributes to #2336

[33mcommit 44f179607213459f6f7a9043a43c9b16ef1cd25f[m
Author: Davis Goodin <dagood@microsoft.com>
Date:   Wed Feb 17 15:01:53 2016 -0600

    Add new dotnet CLI, buildtools, and fixes to make restore work.
    
    Include capitalization fixes for NETNative packages to avoid xplat nuget race condition.

[33mcommit 51f9509d67a3e0ae700a4026b72872c6d62a220c[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Tue Feb 23 09:21:38 2016 -0800

    Fix the build break by explicitly adding the <NuGetTargetMoniker Condition="'$(TargetGroup)' == ''">.NETPlatform,Version=v5.4</NuGetTargetMoniker> to the project so our asset selection tasks picked the right references.
    
    [tfs-changeset: 1578120]

[33mcommit d71ddfdbc4b5142b98eaf374c53920c6cb5b26fd[m
Author: kkurni <kkurni@microsoft.com>
Date:   Tue Feb 23 08:51:04 2016 -0800

    Fix the condition to include the failover and routing message ONLY in "Login Timeout"
    
    -------------------------------------
         Background :
         - During Timeout this routing and failover message always included in the error message even if it is not "Login Timeout error"
         This was caused confusion as this Routing and Failover message was specifically detailed for Login Timeout.
    
         It seems it was never intended to be included in the first place as there was a bug condition which caused this condition always be "true".
         (see the original comment above the changes)
    
         -------------------------------------
         Changes :
         Fix the condition to include the failover and routing message ONLY in "Login Timeout"

[33mcommit 75e1b229450fafe5191946ab2de00c88e5688626[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Feb 23 11:38:28 2016 -0500

    Disable a failing OuterLoop test

[33mcommit b35910b591628d8500d8e85ba9e77cb4b5d9aa79[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Feb 23 11:29:52 2016 -0500

    Use NewLineChars instead of assuming NewLine is \r\n

[33mcommit 34c72dfe139e4fbc3dd6e5747e393ad15fe5aa82[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Feb 23 09:26:46 2016 -0500

    Fix XML test paths causing Unix test failures

[33mcommit 331690a2293d497e3727f2cb4e99b55e5c2e3da8[m
Merge: c918d6a ac2aa4e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 23 09:08:08 2016 -0500

    Merge pull request #6320 from Priya91/arm64
    
    [Api-Addition] Add Arm64 to RuntimeInformation APIs.

[33mcommit c918d6a4ec11ea54966ca952a61bddeae2c48f40[m
Merge: bae3d54 ad39dbd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 23 09:07:33 2016 -0500

    Merge pull request #6328 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit bae3d54ded6ea85e1db821e1391a1b699659001b[m
Merge: c657cc9 6c9ed93
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 23 07:55:39 2016 -0500

    Merge pull request #6317 from kouvel/ReaderWriterLockFix
    
    Fix assertion failure in ReaderWriterLockSlim

[33mcommit 56175e59f64d0bb18602117aa480354e6fa55742[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Feb 23 07:14:58 2016 -0500

    Address PR feedback

[33mcommit 0cd64fce0990e5840fb99b13eccc2fb1c9924d1e[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Mon Feb 22 00:20:54 2016 +0000

    Cleanup DateTimeFormatInfo tests

[33mcommit 79e59d8b54dd0642547e8bb32303838e26ee0b06[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Feb 23 00:01:08 2016 -0500

    Use nameof in calls to Error.*

[33mcommit 83ebd71d8b776bc6ae2839e9858c5a78e2a9275b[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Feb 22 23:44:41 2016 -0500

    Format LINQ code
    
    Almost entirely automated formatting of LINQ code, via VS refactorings (e.g. renaming fields to follow corefx naming guidelines), StyleCop rules (e.g. using braces in many more places), and CodeFormatter (e.g. inserting blank lines in various places, adding readonly in several places).

[33mcommit ad39dbd0df55b712f5dc3550dc891ab2b7d423dd[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Feb 22 20:20:07 2016 -0800

    Fix bad merge comming as the System.IO.FileSystem\project.json netcore50 section should be the one under the netcore50 folder and not be in the root project.json file as we need to workaround some guardrails issues about missing runtime assets.
    
    [tfs-changeset: 1577964]

[33mcommit 6c9ed93bf6c3468fe72dff8066049d2cd20e1eb5[m
Author: Koundinya Veluri <kouvel@microsoft.com>
Date:   Mon Feb 22 11:36:26 2016 -0800

    Fix for assertion failure in ReaderWriterLockSlim
    
    In 965ff756f3911ba355409a2a9a14bae57f86613b, some assertions were added to the path were waiting readers are released.
    - It was expected that there are no waiting writers when readers are released
    - When an upgradeable reader holds the write lock and releases the write lock, there is still a reader holding the lock, so waiting writers are not released
    - When there are waiting writers, waiting readers should not be released
    - It was releasing the waiting reader threads even though they would not acquire the lock, hitting an assertion failure
    
    Fix was to check for waiting writers on all paths that attempt to release waiting reader threads.

[33mcommit c657cc9957704d8c284d56119f2204e9f6641b09[m
Merge: dd43e45 ee59986
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Feb 22 18:34:54 2016 -0800

    Merge pull request #6297 from hughbe/runtime-tests-decimal
    
    Cleanup Decimal tests

[33mcommit dd43e45d79159227e248f07c5c81a3710409be62[m
Merge: 045f73c 4258742
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 22 21:14:33 2016 -0500

    Merge pull request #6325 from dsgouda/btversion
    
    Updating buildtools version

[33mcommit 045f73cf2db59ce0914696ff7176d83924b83a49[m
Merge: 0a6c9f8 bf3be38
Author: Matt Ellis <matell@microsoft.com>
Date:   Mon Feb 22 17:18:16 2016 -0800

    Merge pull request #6324 from ellismg/update-globalization-assembly
    
    Fix missing types from S.Globalization.Calendars

[33mcommit 4258742bee904f080033d485410b3484a1a846d3[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Mon Feb 22 17:02:22 2016 -0800

    Updating buildtools version

[33mcommit 0a6c9f802c17a84dcf88f937ae24b4acecd995bd[m
Merge: 4398bb1 13c549e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 22 19:44:00 2016 -0500

    Merge pull request #6300 from hughbe/runtime-tests-intptr-uintptr
    
    Cleanup IntPtr and UIntPtr tests

[33mcommit 4398bb1990569ee3033de7516769b5e12c45a3df[m
Merge: a1896b7 7c02c3d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 22 19:36:38 2016 -0500

    Merge pull request #6323 from stephentoub/fix_syncctx
    
    Fix sporadic TaskAwaiter test failure

[33mcommit bf3be388ddee2a74b68e4b3dcfae01819000d50d[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Mon Feb 22 16:28:00 2016 -0800

    Fix missing types from S.Globalization.Calendars
    
    System.Globalization.Calendars should be a facade assembly, but in
    030e29992f6be20ffb9d9d3e799118f3354bce22 we accidently made it facade
    only for net46.
    
    We didn't catch this during testing because the test assembly was always
    running against the package version, but in Helix, where we test against
    packages all the time, we hit the issue.
    
    Make the assembly a partial facade all the time and update the test
    project so we actually test agains the live code (doing so caused the
    test to fail before the above fix, so it lets us know we won't miss this
    issue in the future).

[33mcommit 7c02c3d09583794216d0a4b7f9a05267fc6a896f[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Feb 22 18:58:52 2016 -0500

    Fix sporadic TaskAwaiter test failure
    
    Due to a race condition, we sometimes end up running a test with xunit's SynchronizationContext, which causes the test to fail.  This change makes sure that doesn't happen.

[33mcommit a1896b73c3af6dfe381bc18ced8756684edff0b8[m
Merge: 18652a6 26edfd6
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Feb 22 14:38:45 2016 -0800

    Merge pull request #5977 from mellinoe/consolidate-all-facades
    
    Consolidate all facade projects, cleanup project files

[33mcommit 13c549e0ac7ea00c61a9320d0ab6883245dd9ee8[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Mon Feb 22 20:15:57 2016 +0000

    PR feedback

[33mcommit 18652a64e02047b46a83a354a7f99cfecf5c9063[m
Merge: 1a1196f ba88726
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 22 16:40:01 2016 -0500

    Merge pull request #6263 from jasonwilliams200OK/alpine-patch-5
    
    Turn off -Wcast-align inline for musl-libc

[33mcommit 1a1196fa69b6a43b5a3a0c323b44e390d9f2d8f5[m
Merge: f193706 337a6cb
Author: Cory Rivera <corivera@microsoft.com>
Date:   Mon Feb 22 13:36:13 2016 -0800

    Merge pull request #6261 from dotnet/corivera_DefaultSqlClientTestConfig
    
    Add default build configuration to SqlClient tests

[33mcommit f193706731d99470e30e3a2de0fb07d0be31f21f[m
Merge: f139656 713b452
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 22 16:05:48 2016 -0500

    Merge pull request #6310 from stephentoub/task_tests
    
    Clean up TaskAwaiter tests

[33mcommit f13965631994f19d4e032baf116efaa0192ef808[m
Merge: 98a5223 f1b27d8
Author: VSadov <vsadov@microsoft.com>
Date:   Mon Feb 22 12:53:14 2016 -0800

    Merge pull request #6273 from JonHanna/fix_6258
    
    Fix false assumption in Expression.TypeEqual

[33mcommit 7cea040c2643fdcfcf5af138ba2e3f909a258850[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Mon Feb 22 19:51:38 2016 +0000

    PR feedback

[33mcommit 98a5223f9ebda031a1f14fbde926591d3e37bc88[m
Merge: 5b793bc 664ccf5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 22 15:05:12 2016 -0500

    Merge pull request #6298 from hughbe/runtime-tests-version
    
    Clean up Version tests

[33mcommit ba887267f86cad142981b0837669abfb4f07b210[m
Author: root <necmon@yahoo.com>
Date:   Fri Feb 19 21:00:21 2016 +0200

    Turn off -Wcast-align inline for musl-libc
    
    Tracking issue: #6312
    
    In musl-libc, CMSG_NXTHDR typecasts char* to cmsghdr* which causes
    clang to throw cast-align warning. This change suppresses the warning
    inline.
    
    Note, with `-Werror` and `-Weverything`, compiler treats this warning
    as the error:
    
    ```ash
    /root/corefx/src/Native/System.Native/pal_networking.cpp:1311:31: error: cast from 'unsigned char *' to 'struct cmsghdr *'
    increases
          required alignment from 1 to 4 [-Werror,-Wcast-align]
                 controlMessage = CMSG_NXTHDR(&header, controlMessage))
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    /usr/include/sys/socket.h:267:10: note: expanded from macro 'CMSG_NXTHDR'
            ((struct cmsghdr *)__CMSG_NEXT(cmsg))))
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ```
    
    musl-libc: https://fossies.org/dox/musl-1.0.5/include_2sys_2socket_8h.html#a4f70853d9633fb80428189cd7bb292d0
    
    [clang/gcc]-libc: http://lxr.free-electrons.com/source/include/linux/socket.h#L89

[33mcommit 26edfd6839044ca6368e28502e0893c1b1819b4c[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Feb 3 15:56:22 2016 -0800

    Consolidate all facade projects, cleanup project files
    
    * Move all of the project configurations currently living in the
      "facade\<lib>.csproj" files into the root library project. This means
      there will now be only one project file for the source build of each
      library, regardless of how many configurations it has. The .builds file
      of each library will only reference that single project file multiple
      times.
    
    * Do some minor cleanup of project files along the way. Fix up the VS
      default configuration blocks to be a bit more uniform. Remove redundant
      defaults (OutputType, PlatformTarget, etc. Fix some condition spacing.

[33mcommit 664ccf555359ad450ee2f7572185fbe7432a80a4[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Mon Feb 22 18:44:41 2016 +0000

    PR feedback

[33mcommit cbb2b6f989225e4a7162c1f589d3c62e56abeb89[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Mon Feb 22 09:34:39 2016 -0800

    Use SafeHandles in *nix Sockets implementation
    
    Most of the *nix Sockets code was dealing directly in file descriptors, without using SafeHandles to keep the file descriptors alive during pending operations.  #5750 is an example of the kind of issue this can lead to; in that case, the Socket object was collected and finalized while a pending async I/O was in progress, effectively cancelling the I/O.  On Windows, pending async I/O keeps the native socket alive (unless someone explicitly calls `Dispose` on the socket), so we need to have similar behavior on *nix.
    
    The "meat" of the change is to track the SafeCloseSocket instance in SocketAsyncContext (instead of the file descriptor), and to pass these as SafeHandles to the interop layer whenever possible.
    
    Unfortunately, System.Native.so's functions mostly take int32_t file descriptor arguments.  Fixing this the "pretty" way would involve changing all of these to intptr_t, and then using the normal p/invoke SafeHandle->IntPtr marshaling.  But updating all of the signatures in System.Native.so is quite a project, as we'd need to keep both the old *and* new signatures for some time.  For now, I've done manual SafeHandle->int marshaling, and will open an issue for cleaning this up further.
    
    We will need to think some more about how this interacts with SocketAsyncEngine; I believe there is a race there that will lead to problems, but I don't think this change makes it any worse.
    
    This reverts commit fc2af75d8925a4ae6f98a23766f0e13d2100ad31, which reverted this change originally.  Trying again with a couple of fixes.

[33mcommit 5b793bc735d6a63b7f4be466df3351008b27a426[m
Merge: f4c81a7 88eb91e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 22 12:24:16 2016 -0500

    Merge pull request #6294 from hughbe/runtime-tests-activator
    
    Cleanup Activator tests

[33mcommit 15a267e339824e982404283fb50e4ac4e68704fc[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Mon Feb 22 16:35:00 2016 +0000

    Respond to PR feedback
    
    - Reinstated comment
    - Added test for accessing Current, ElementIndex and GetTextElement()
    before enumeration has started
    - Unrolled the reset loop to make it clearer if a test fails

[33mcommit 713b4525524a6711fbd7998d9020fbefe716f6ce[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Feb 22 11:33:49 2016 -0500

    Clean up TaskAwaiter tests
    
    At least one of these has been failing randomly due to a timeout, a bunch were outer loop that didn't need to be (but were part of a larger test that was marked as such), many weren't taking advantage of xunit functionality, and some were inappropriately messing with xunit's SynchronizationContext.  I cleaned them up.

[33mcommit f4c81a7d2d282694bcc9d12ac58633e9459ea212[m
Merge: 67eae67 04c1d83
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 22 10:52:43 2016 -0500

    Merge pull request #6289 from hughbe/globalization-tests-datetime-styles
    
    Fix #2336 for DateTimeStyles

[33mcommit 67eae676c6a7acb729c1dd877a4b0ed543c4b08e[m
Merge: d386d92 f69d91e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 22 10:51:33 2016 -0500

    Merge pull request #6288 from hughbe/globalization-tests-number-styles
    
    Fix #2336 for NumberStyles

[33mcommit f69d91ec12ec86673b632b2c847932350a34732e[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Mon Feb 22 14:51:35 2016 +0000

    Fix #2336 for NumberStyles
    
    It is sensible to combine these tests into a single file, to remove
    excessive code bloat - there is very little point to having a single
    case for a single file, when xunit InlineData can do better.

[33mcommit 04c1d83fd4a332ce140be49db5572f4b93b265d7[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sun Feb 21 22:02:10 2016 +0000

    Fix #2336 for DateTimeStyles
    
    It is sensible to combine these tests into a single file, to remove
    excessive code bloat - there is very little point to having a single
    case for a single file, when xunit InlineData can do better.

[33mcommit d386d92456e1ebac44e22488eac9af465c095122[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 22 09:11:39 2016 -0500

    Align green/red build status indicators

[33mcommit 4f8d77e3fdf87ed1801b3179e46620c5394f8137[m
Merge: 58ef048 f57bdc2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 22 07:57:02 2016 -0500

    Merge pull request #6305 from dotnet/stephentoub-readmeupdate
    
    Remove some text from README.md

[33mcommit eba86f59a23feb9e923adf3903e6ccdf9c0c5aa3[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sun Feb 21 17:29:35 2016 +0000

    Fix #2336 for TextElementEnumerator
    
    There was a lot of duplication in this test suite again. Some of the
    test code is duplicated, and also similar but less in depth than
    StringInfo.GetTextElementEnumerator.
    
    Eliminating duplicate code allowed me to put all of this into one file -
    even though I was told off before for combining test files into a single
    file, this approach is necessary for a clean test suite, and was not done for the sake of combining tests into a single file.

[33mcommit 58ef048ed693b049edfadaa79e17626911adb538[m
Merge: bf0b509 b634b1f
Author: Matt Ellis <matell@microsoft.com>
Date:   Sun Feb 21 22:06:11 2016 -0800

    Merge pull request #6304 from stephentoub/mmf_test
    
    Fix MemoryMappedFile TooLargeCapacity test

[33mcommit bf0b5095c65883462373d0c0e00c1667c1b9be0f[m
Merge: 5451211 53c6c56
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 21 23:48:03 2016 -0500

    Merge pull request #6287 from hughbe/globalization-tests-unicode-category
    
    Fix #2336 for UnicodeCategory

[33mcommit f57bdc29e783fec6523a10374db69b66e78b0b57[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 21 23:30:38 2016 -0500

    Remove some text from README.md
    
    Per @ellismg's good suggestion here:
    https://github.com/dotnet/corefx/pull/6278#issuecomment-186720501
    
    The text is unnecessary here given the link out to a much more descriptive site.

[33mcommit b634b1f4f049c1489335d5ea663a2a43c06698a7[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Feb 21 23:15:14 2016 -0500

    Fix MemoryMappedFile TooLargeCapacity test
    
    The test is assuming that creating an MMF with a capacity equal to long.MaxValue should fail.  But some platforms allow files this long.  This commit updates the test to say that either it should fail or the file should have been updated to have the requested length.

[33mcommit 54512118691dfddd9a3859c26520ca5707f4b96c[m
Merge: 3a2fbfe b77140a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 21 23:06:49 2016 -0500

    Merge pull request #6303 from stephentoub/disable_console_test
    
    Disable Console.set_Title test failing outer loop on Windows 10

[33mcommit b77140a5a5b919814b9f08b1ccec9e554f0f83ee[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Feb 21 21:53:15 2016 -0500

    Disable Console.set_Title test failing outer loop on Windows 10

[33mcommit 3a2fbfe15742158d3d01fc0593b8a78b97e233f5[m
Merge: ddf8ca0 447801a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 21 21:14:42 2016 -0500

    Merge pull request #6232 from khdang/move_coreclronly_serialization_tests_separate_file
    
    Move CoreCLR-only serialization tests to a separate file

[33mcommit ddf8ca02958c6a78d58d641ba2e7e0bce585d572[m
Merge: 0a0ea7f 3e17bf8
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 21 21:12:48 2016 -0500

    Merge pull request #6203 from SunnyWar/master
    
    #2727 Removed unnecessary IsPrime function after expanding table.

[33mcommit 0a0ea7fe57876ef47188dfe8bd76fae00e48f8e7[m
Merge: 2ba2083 6e89875
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sun Feb 21 18:03:10 2016 -0800

    Merge pull request #6291 from davidsh/readasync_fix
    
    Response stream reads should return error for insufficient data

[33mcommit 2ba2083ec3da237ad2beabc2a361a2d9b1e1777b[m
Merge: 581ef61 6b45198
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sun Feb 21 18:01:00 2016 -0800

    Merge pull request #6285 from davidsh/requeststate_leak
    
    Fix WinHttpHandler memory leaks

[33mcommit 6b4519800e1db707556a6730dc178e446e0836ba[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sun Feb 21 16:53:46 2016 -0800

    Address PR feedback

[33mcommit 581ef61ee5fecf56fe9401df717fd584593960fe[m
Merge: fc58992 6e84da0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 21 19:49:31 2016 -0500

    Merge pull request #6292 from hughbe/patch-2
    
    Remove unused function from CompareInfoTests.LastIndexOf

[33mcommit 6e898758c6c03c44234ccc3ae398c432c97f5ff9[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sun Feb 21 16:45:39 2016 -0800

    Address PR feedback

[33mcommit fc58992f037215cf63de2c76a1282174092b672a[m
Merge: c4d28bb cad17cb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 21 19:36:33 2016 -0500

    Merge pull request #6281 from jamesqo/html-entity
    
    Rewrite WebUtility.HtmlEntities to minimize array/substring allocations

[33mcommit c4d28bb9f117b1499af17d9bfe45b0fe83e29af2[m
Merge: ce4686a 931df1c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 21 19:25:51 2016 -0500

    Merge pull request #6280 from jamesqo/patch-7
    
    ImmutableArray: Remove workaround for bug in native compiler

[33mcommit 652cbdaced85958eb9af06fc1a43f84bb7dca4a9[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sun Feb 21 23:47:01 2016 +0000

    Fix #6286 for IntPtr and UIntPtr

[33mcommit 210bb464abe77fe255f80c18ae8fca06363115ec[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sun Feb 21 23:43:12 2016 +0000

    Fix #6286 for Guid

[33mcommit 7c96d06f7f55f98a78f5e76e042b99c3153a0f94[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sun Feb 21 23:38:18 2016 +0000

    Fix #6286 for Version

[33mcommit 7f5d6b643996306062836a17ddad643fd7e40ff2[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sun Feb 21 14:35:24 2016 -0800

    Response stream reads should return error for insufficient data
    
    WinHttpResponseStream was not tracking the amount of data read when the response used 'Content-Length' semantics. So, if the amount of bytes read from the server was less than expected, we did not return an error. This was different behavior than .NET Framework.
    
    Fixed WinHttpResponseStream so that it will track the total number of bytes read and compare it to the expected number of bytes if using 'Content-Length' semantics. Note that we don't do this checking if the HTTP request is a HEAD request. That is because the definition of that HTTP verb is to return headers "as-if" it was returning a real response body. So, the 'Content-Length' might be set but there is no response body for a HEAD request.
    
    For cases of using 'Transfer-Encoding: chunked' semantics for the response body, there is already error checking at the lower HTTP layer in WinHTTP.
    
    Fixes #6231.

[33mcommit ee59986140bb1ecf32c516c1d94066ed8e10e4ff[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sun Feb 21 23:32:53 2016 +0000

    Fix #6286 for Decimal

[33mcommit 156dfe15ea964021688f01ea9dbafb316f5814ad[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sun Feb 21 23:17:53 2016 +0000

    Fix #6286 for StringBuilder
    
    Overhauls the entire test file, providing > 90% coverage.

[33mcommit 88eb91ecd0f59b6079eec0564ce47ae5dc3974b5[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sun Feb 21 23:11:28 2016 +0000

    Fix #6268 for Activator

[33mcommit 6e84da0fb7c01463c5e687088faa2c9409907762[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sun Feb 21 22:57:33 2016 +0000

    Remove unused function from CompareInfoTests.LastIndexOf
    
    Slipped in accidently

[33mcommit 9b677b423f935c97b3db6c961d98bc1d05efd9ce[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sun Feb 21 22:20:15 2016 +0000

    Fix #2336 for StringInfo
    
    This enabled me to combine multiple files that test the same method into
    single files, without creating additional complexity.

[33mcommit 53c6c56915f3c5a4e3c74c23363570903fcec151[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sun Feb 21 17:12:35 2016 +0000

    Fix #2336 for UnicodeCategory
    
    - A pretty small change, but worth doing amongst other more considerable System.Globalization test changes.

[33mcommit a38ee461d2d93cc220953b3b6c4b405b188f6965[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sun Feb 21 11:35:20 2016 -0800

    Fix WinHttpHandler memory leaks
    
    The WinHttpHandler was leaking a lot of objects in cases where an explicit Dispose was not done for the various HttpResponseMessage related objects. It was leaking because there was a cycle between the strong GCHandle of WinHttpRequestState and the objects contained within it.
    
    To break the cycle, we now clear out object references within WinHttpRequestState that are no longer needed once the SendRequest phase is completed.
    
    There was also a leak of a pinned GCHandle and related memory in WinHttpResponseStream. The free'ing of that allocated GCHandle was done in the Dispose(bool disposing) method. However, it wasn't being called when disposing=false (i.e. a finalizer). Since it is a pinned GCHandle, it needed to be freed in all cases.
    
    Fixes #5927.

[33mcommit ce4686ae4c21e691333e673969a6a6e6efcf594b[m
Merge: 4e72f7e aa0e901
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 21 09:52:23 2016 -0500

    Merge pull request #6274 from jasonwilliams200OK/alpine-patch-6
    
    Unsigned cast for EPOLLHUP bitwise AND

[33mcommit 4e72f7ef3d2ffe186d4671834cfdbb726ddcb2e2[m
Merge: 2eb9d0e 0f868c6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 21 09:10:15 2016 -0500

    Merge pull request #6271 from justinvp/nameof_dynamic
    
    Use nameof in System.Dynamic.Runtime

[33mcommit 2eb9d0ebbf97456fdbf0e2fc118abc9d3fcaed7f[m
Merge: 363c673 1faaea8
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 21 09:06:08 2016 -0500

    Merge pull request #6269 from stephentoub/curl_errors
    
    Improve several areas of CurlHandler error handling

[33mcommit 363c673cd6b8276b163e266eda6a64216e999c26[m
Merge: 1e38253 e1847ee
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 21 08:59:39 2016 -0500

    Merge pull request #6277 from davidsh/responsestream_tests
    
    Add more Http response stream tests

[33mcommit 1e38253a064ab624ce324e93f16833446a0f9482[m
Merge: 32c25ea de868d5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 21 08:56:55 2016 -0500

    Merge pull request #6282 from AlexBHarley/fix-for-5209
    
    Fix for issue #5209 - Consolidated SafeAccessTokenHandle and SafeTokenHandle

[33mcommit cad17cb396038b14ce24a047499e9e809c4b2c96[m
Author: James Ko <jamesqko@gmail.com>
Date:   Sun Feb 21 00:10:52 2016 -0500

    Rewrite WebUtility.HtmlEntities to minimize array/substring allocations

[33mcommit de868d591c570274a075fec5fd0384b9b3494186[m
Author: Alex <alexbruceharley@gmail.com>
Date:   Sun Feb 21 18:10:52 2016 +1300

    Removed dead SafeTokenHandle code

[33mcommit e1847ee878dcd48ce66f330761f50a96e7e9b2b0[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sat Feb 20 20:32:45 2016 -0800

    Address PR feedback

[33mcommit 32c25eacf29fa4d6020dbd086a99b7fe0eda7576[m
Merge: 5e85625 2472666
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 20 22:52:19 2016 -0500

    Merge pull request #6278 from ellismg/add-badges
    
    Add RHEL and Ubuntu 15.10 badges

[33mcommit 42e5f468e86f7d62fe1c62194bfd473d30cf06b7[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sat Feb 20 15:44:18 2016 -0800

    Add more Http response stream tests
    
    Building on PR #6250, added more response stream tests dealing with
    invalid response body transfer semantics.

[33mcommit 2472666b297bae06844f2c7c0d3057b47e421b59[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Sat Feb 20 17:48:16 2016 -0800

    Add RHEL and Ubuntu 15.10 badges
    
    - Reformat table to grow down instead of across.
    - Move the introduction to CoreFX to the top of README.md.

[33mcommit f1b27d870c750958f7ffa7573263ec0ee6a0260c[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Sat Feb 20 10:26:48 2016 +0000

    Fix false assumption in Expression.TypeEqual
    
    ReduceTypeEqual has a false assumption that if obj is T and
    T.IsSealed then typeof(obj) == typeof(T).
    
    It will reduce to Expression.Constant(true) based on this assumption,
    and as of d5e3d82 will reduce to Expression.Constant(false) based on it
    too.
    
    Remove the assumption entirely, removing both false positives and false
    negatives.
    
    Fixes #6258

[33mcommit 5e85625545e8fa023ef71818ff08466d591ac9e2[m
Merge: 4c2f79e d281e52
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 20 08:34:47 2016 -0500

    Merge pull request #6272 from justinvp/nameof_linqexpressions
    
    Use nameof in System.Linq.Expressions

[33mcommit 4c2f79e27043547c0306a31801453b8fb8719a31[m
Merge: 18409c1 3b165eb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 20 07:32:14 2016 -0500

    Merge pull request #6267 from justinvp/nameof_composition
    
    Use nameof in System.Composition.*

[33mcommit 1faaea86f0684452a874bcd58ce259763135c6b9[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Feb 20 00:16:15 2016 -0500

    improve several areas of CurlHandler error handling
    
    While tracking down an issue related to exception handling in CurlHandler, I fixed up a few issues:
    - On older libcurl's curl_multi_perform can return an error code that means to retry curl_multi_perform, but we were treating it as an actual error.
    - Several places we were creating an HttpRequestException with a null inner exception, even if we had additional information about the cause.  I've fixed those call sites to include an appropriate inner exception.
    - Cleaned up a few error messages.
    - Fixed one place where I was overzealous in mapping exceptions to IOException

[33mcommit aa0e901314b0d18222b38f782539ddd37727de22[m
Author: root <necmon@yahoo.com>
Date:   Sat Feb 20 00:45:18 2016 +0200

    Unsigned cast for EPOLLHUP bitwise AND
    `~EPOLLHUP` results in signed int, which makes the compiler throw on
    `events & ~EPOLLHUP`:
    
    ```ash
    error: implicit conversion changes signedness: 'int' to 'unsigned int'
          [-Werror,-Wsign-conversion]
    ```
    
    This change make use of `static_cast<uint32_t>` to satisfy the compiler.

[33mcommit 0f868c62e425c8a165cd22f8e61cfe9d03dbdb70[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Fri Feb 19 20:36:38 2016 -0800

    Use nameof in System.Dynamic.Runtime
    
    Mostly automated replacement of parameter name string literals with
    corresponding usage of nameof.

[33mcommit d281e524b7c1f23f52b8908168df84bd6878962c[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Fri Feb 19 22:10:34 2016 -0800

    Use nameof in System.Linq.Expressions
    
    Mostly automated replacement of parameter name string literals with
    corresponding usage of nameof.

[33mcommit 18409c1cf873b368a142e65f41a931b960e3395b[m
Merge: b11e683 3f5c833
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 20 00:37:10 2016 -0500

    Merge pull request #6257 from ellismg/disable-failing-ubuntu-15-10-tests
    
    Disable some tests which fail on Ubuntu 15.10

[33mcommit b11e6837be56abc4fc4dd1f6e26ec575c7241943[m
Merge: bfb8930 a37e533
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 20 00:36:21 2016 -0500

    Merge pull request #6265 from justinvp/nameof_immutable
    
    Use nameof in System.Collections.Immutable

[33mcommit 3b165eb4be5b948665ee01b28197af3929ce429d[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Fri Feb 19 20:04:51 2016 -0800

    Use nameof in System.Composition.*
    
    Mostly automated replacement of parameter name string literals with
    corresponding usage of nameof.

[33mcommit 3f5c83344c2ad4ae546fd38825b6823858616350[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Feb 19 15:35:38 2016 -0800

    Disable some tests which fail on Ubuntu 15.10
    
    The globalization tests have a hard coded oracle data which is used to
    verify the results we are getting back from ICU are correct. On Ubuntu
    15.10, there is newer version of this data (since that version of the
    library has picked up a new CLDR drop) and so it doesn't match our
    pre-cooked data.
    
    The correct long term fix is to decouple the data from the tests so we
    can swap out the expected data depending on the platform we are on (see
    dotnet/corefx#2103).
    
    For now, we will disable these few tests so the Ubuntu 15.10 runs are green.

[33mcommit bfb8930ae695cb2e4160a5b7a41c799fad6a6efb[m
Merge: 9b5bbbd 50aa6b8
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 22:36:40 2016 -0500

    Merge pull request #6217 from hughbe/globalization-tests-region-info
    
    Fix #2336 for RegionInfo

[33mcommit 9b5bbbdcb6ed2603fd1f91b996b213e652ff0aed[m
Merge: 3ab0be7 d91bddf
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 22:17:02 2016 -0500

    Merge pull request #6260 from jasonwilliams200OK/alpine-patch-4
    
    Use cast helper for statfs::f_type

[33mcommit 3ab0be780397ba2b33c2c97b890c425c578b3ba1[m
Merge: 60909ad 64a77da
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 22:10:21 2016 -0500

    Merge pull request #6259 from dotnet/stephentoub-failfaststderr
    
    Enable Environment.FailFast stderr output in run-test.sh

[33mcommit 60909adb87800f10df7faa0dbae8fbd813261f07[m
Merge: a355ac0 201ea78
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 22:10:12 2016 -0500

    Merge pull request #6264 from stephentoub/dataflow_etw
    
    Fix several dataflow ETW events

[33mcommit a37e53363f193371ccb67337305e05e34c36596a[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Fri Feb 19 18:57:59 2016 -0800

    Use nameof in System.Collections.Immutable
    
    Mostly automated replacement of parameter name string literals with
    corresponding usage of nameof.

[33mcommit a355ac00324fdedbff1eb30c0acdd295b333a916[m
Merge: 1e032f7 90824ec
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 21:31:15 2016 -0500

    Merge pull request #6262 from ericeil/SimplifyLocks
    
    Simplify locking / extend scope of _queueLock

[33mcommit 1e032f75d6ff952ec5c934ddc15b40ff5513359f[m
Merge: 6ed29f8 c9870f2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 21:28:03 2016 -0500

    Merge pull request #6256 from jasonwilliams200OK/alpine-patch-3
    
    Add support for in6_addr::s6_addr

[33mcommit 6ed29f83c8a8eef083b1adbba877d3473e830ca6[m
Merge: 4375b15 153f1f0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 21:26:32 2016 -0500

    Merge pull request #6254 from stephentoub/assert_stderr
    
    Make failed Debug.Asserts always print to stderr

[33mcommit 4375b158e5d0498afb7edd1f3dc320bedbf9bf29[m
Merge: 9bb70c2 f9d4884
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 21:26:21 2016 -0500

    Merge pull request #6250 from stephentoub/curlhandler_ioexception
    
    Change CurlHandler to use IOExceptions for Stream failures

[33mcommit 201ea789ddc53e31422bcf3e0bebbbb4eeb11801[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Feb 19 21:19:10 2016 -0500

    Fix several dataflow ETW events

[33mcommit 337a6cb2a6d91c0112120c7a6873f538d94ae6e1[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Fri Feb 19 18:12:31 2016 -0800

    Add default platform config option to SqlClient tests. Also remove obsolete platform and config references.

[33mcommit 90824ec543426398a80d0fca8983523da422f080[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Fri Feb 19 10:48:36 2016 -0800

    Simplify locking / extend scope of _queueLock
    
    While investigating a different issue, we noticed that there are accesses to the operation queues outside of _queueLock.  This creates a race with TryBeginOperation, such that beginning a new operation while completing an existing one can corrupt the queue.
    
    After extending the scope of _queueLock in HandleEvents, I noticed that it became largely redundant with _closeLock.  So we also remove _closeLock, and just use _queueLock for everything.  As far as I can tell, the only scenario this will impact is when beginning operations while simultaneously closing the socket, which will have other problems anyway.

[33mcommit 9bb70c2f02748b276c68f50119610a97992b2db5[m
Merge: a05b653 54b17a5
Author: chcosta <chcosta@microsoft.com>
Date:   Fri Feb 19 16:54:45 2016 -0800

    Merge pull request #6047 from chcosta/open_pkgs
    
    Open package conversions for corefx.

[33mcommit a05b6535201991f8584578252d909dce34f0ca44[m
Merge: 35e03c7 95c0419
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 19:05:55 2016 -0500

    Merge pull request #6252 from stephentoub/argnames
    
    Fix a few argument exception parameter names

[33mcommit 35e03c78d89d02f2d3b4a1f8b277a35c88f45750[m
Merge: 4580b1c 605660d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 19:05:08 2016 -0500

    Merge pull request #6127 from JonHanna/skip_take_on_list_select
    
    Use partitioning on list-based select iterators.

[33mcommit 64a77da90fbc5cb41faf6f17988088818dd7fc6a[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 18:59:53 2016 -0500

    Enable Environment.FailFast stderr output in run-test.sh
    
    coreclr will print out the Environment.FailFast message to stderr, but only when the PAL_OUTPUTDEBUGSTRING environment variable is set.  I'm setting it in run-test.sh so that fail fasts in CI and other test runs will show something in the log.

[33mcommit 4580b1c85c0531f133a967c9b6bf3ed0b35a09de[m
Merge: 8627217 f0b1066
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 17:37:09 2016 -0500

    Merge pull request #6253 from jasonwilliams200OK/alpine-patch-2
    
    Detect the presence of sysctl header

[33mcommit f9d488485d2bb7edeb43f918af1746d9ecb5e758[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Feb 19 14:55:14 2016 -0500

    Add test for invalid response content length

[33mcommit 8627217c1548b0db083d263fd580b83ff8cf52bb[m
Merge: cb13b0e 99f9c06
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Fri Feb 19 14:31:23 2016 -0800

    Merge pull request #6248 from justinvp/dbcolumn_nameof
    
    Change the DbColumn Indexer to use nameof

[33mcommit d91bddfceadb03f808d2eeb60d8dbcb9201e92dd[m
Author: root <necmon@yahoo.com>
Date:   Fri Feb 19 20:43:34 2016 +0200

    Use cast helper for statfs::f_type
    In musl-libc, `statfs::f_type` is defined as `unsigned long`.
    This change makes use of `SignedCast` helper to overcome the disparity.
    
    https://fossies.org/dox/musl-1.0.5/arch_2arm_2bits_2statfs_8h_source.html#l00002

[33mcommit 54b17a5e1dba42de7a6561753b3de9f3b5cbca23[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Fri Feb 19 14:22:10 2016 -0800

    Retarget System.Data.SqlClient reference assembly to dotnet5.2.
    
    The facade for System.Data.SqlClient was recently retarged to net45 which collides with the packaging work.

[33mcommit 7df55caaad1d1e21866ec31b0e7161db9ae2179c[m
Merge: 6c72269 cb13b0e
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Fri Feb 19 14:21:24 2016 -0800

    Merge branch 'master' of https://github.com/dotnet/corefx into open_pkgs

[33mcommit 153f1f002c9565a939f4b8fe01678ac9b27714e2[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Feb 19 17:15:40 2016 -0500

    Make Debug.Assert always print to stderr
    
    The purpose of previously adding COMPlus_DebugWriteToStdErr was to shield stderr from lots of tracing done with Debug.WriteLine.  But for failed asserts with Debug.Assert, we really want to always see those errors.

[33mcommit 43ba2e8f1a43396668d7941fe27771268cae17f1[m
Author: Nate Amundson <naamunds@microsoft.com>
Date:   Fri Feb 19 13:52:30 2016 -0800

    Add sync.sh for dev workflow
    
    This script is used for syncing one's repo.
    
    Also make a few minor fixes to sync.cmd.

[33mcommit cb13b0e0ba5eb8e9940eaae0fe782d1df5b06de0[m
Merge: 4164044 55ce5a9
Author: Cory Rivera <corivera@microsoft.com>
Date:   Fri Feb 19 13:03:25 2016 -0800

    Merge pull request #6184 from dotnet/corivera_SqlTests
    
    Add SqlClient Tests to Github

[33mcommit 4164044d022966611baeac91a74cfc0ee19d0d94[m
Merge: 630a364 9752a13
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 15:52:43 2016 -0500

    Merge pull request #6245 from jasonwilliams200OK/alpine-patch-1
    
    Use designators to initialize msghdr

[33mcommit 630a36456619b0987c2ea7f579101e65035692f8[m
Merge: 09956d3 91a35eb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 15:38:13 2016 -0500

    Merge pull request #6249 from ellismg/fix-rhel72-ci-test
    
    Fix RHEL7.2 CI Runs

[33mcommit 95c0419f8cefb8e84eaecb4dacf08052312a5bb8[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Feb 19 15:34:37 2016 -0500

    Fix a few argument exception parameter names
    
    These were missed by my automated scan in replacing parameter names with nameof because they're the wrong name.  (There are some others that weren't replaced to, but most of those are because they're in private methods that use a different name for the argument, but the name used to the exception is the name in the publically exposed method... I didn't touch those.)

[33mcommit 55ce5a97e2edb0fbcb136f6ebd7efa402ba23cd4[m
Merge: a607997 09956d3
Author: Cory Rivera <corivera@microsoft.com>
Date:   Fri Feb 19 12:16:18 2016 -0800

    Merge branch 'master' of https://github.com/dotnet/corefx into corivera_SqlTests

[33mcommit 09956d393c8515b837ea9493cf068dbcad5ac459[m
Merge: 815b3b7 c295a19
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Feb 19 12:11:58 2016 -0800

    Merge pull request #6215 from sokket/openssl
    
    Making OpenSsl tests excluded from Windows builds

[33mcommit a607997cd4bc98d37facef198cbcb20c3c302dc8[m
Merge: 4bd89c4 815b3b7
Author: Cory Rivera <corivera@microsoft.com>
Date:   Fri Feb 19 12:05:43 2016 -0800

    Merge branch 'master' of https://github.com/dotnet/corefx into corivera_SqlTests

[33mcommit 4bd89c490c808a9b4f4d55dd08c367d8a9785484[m
Merge: 89510ed 1bd332f
Author: Cory Rivera <corivera@microsoft.com>
Date:   Fri Feb 19 12:05:32 2016 -0800

    Merge pull

[33mcommit 815b3b7e7f83d50dfb0376a358eef2dea62cb78a[m
Merge: 1bd332f 2965a16
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 15:01:47 2016 -0500

    Merge pull request #6247 from justinvp/memberdata_nameof
    
    Use nameof for a couple MemberData tests that were missed

[33mcommit 91a35eb7f2e383056eb044b8b4c00219f002aee4[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Feb 19 11:44:07 2016 -0800

    Fix RHEL7.2 CI Runs
    
    We were passing the wrong RID as the TestNugetRuntimeId (it didn't match
    what we have in our test-runtime.json file). This caused us to not
    deploy some assets to the test folders, which caused problems when we
    tried to run the tests because the xunit console runner was missing.

[33mcommit 99f9c0678111e90b94b6039b49f93a64823d07b0[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Fri Feb 19 11:42:05 2016 -0800

    Change the DbColumn Indexer to use nameof

[33mcommit 447801a84105b1a1466efeaf0da2988b89face1e[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Thu Feb 18 16:44:39 2016 -0800

    Move CoreCLR-only serialization tests to a separate file

[33mcommit 2965a16a7660f90f45fbd880a430d7c5e9e086a0[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Fri Feb 19 11:16:20 2016 -0800

    Use nameof with MemberData tests

[33mcommit e39e43a3809775c41a223ffa679e4f9e693676e1[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Feb 19 14:08:52 2016 -0500

    Change CurlHandler to use IOExceptions for Stream failures
    
    As with WinHttpHandler, CurlHandler wraps exceptions in HttpRequestException.  But WinHttpHandler switches to using IOException when sending exceptions out via Stream.Read/WriteAsync.  This change does the same for CurlHandler.

[33mcommit 1bd332f2e5f559c2eab276acb0d9e4256085ec2f[m
Merge: ef8e44a 0f9f72d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 14:10:39 2016 -0500

    Merge pull request #6209 from stephentoub/nameof_exceptions
    
    Deploy nameof throughout corefx

[33mcommit c295a19c78af55b6f80db7276f0340ab5016af2e[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Thu Feb 18 11:34:03 2016 -0800

    Making OpenSsl tests excluded from Windows builds

[33mcommit 6c7226985ebea63f36d3d24e4c65e331a2e277c1[m
Merge: 386d3c2 ef8e44a
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Fri Feb 19 10:56:24 2016 -0800

    Merge branch 'master' of https://github.com/dotnet/corefx into open_pkgs

[33mcommit c9870f24015d0e8833cdbc0506cf463b00b654e6[m
Author: root <necmon@yahoo.com>
Date:   Fri Feb 19 19:21:30 2016 +0200

    Add support for in6_addr::s6_addr
    On Alpine Linux, `__in6_u.__u6_addr8` and `__u6_addr.__u6_addr8` are
    not present. The suitable candidte candidate is `s6_addr`.
    
    https://fossies.org/dox/musl-1.0.5/in_8h.html#ac7f92897f00d3373bf818709dfb0724a

[33mcommit ef8e44a25edf379e90e94f9a21cfc38630187efc[m
Merge: 210b7f0 3b87fdb
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Fri Feb 19 09:31:50 2016 -0800

    Merge pull request #6181 from joperezr/UseRoslynCompilersInWindowsBuilds
    
    Using Full Framework roslyn compilers for Windows builds.

[33mcommit 3b87fdb8a6de3d40560a2db67e52cfffb59aec59[m
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Wed Feb 17 16:15:42 2016 -0800

    Using Full Framework roslyn compilers for Windows builds.

[33mcommit 50aa6b812e7c933023b5a4a658098ba9c2da7d85[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Thu Feb 18 20:14:48 2016 +0000

    Fix #2336 for RegionInfo
    
    There was a lot of duplication between these tests.
    I decided to create 2 test files:
    - RegionInfoTests.Methods: contains ctor tests and other method tests
    - RegionInfoTests.Properties: contains property tests
    
    This strikes a balance between what I was told off for doing before
    (combining test files), and having pointlessly small classes

[33mcommit 210b7f020471a19b32751621acab482610024bfd[m
Merge: dd98d34 16a30e8
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Fri Feb 19 08:58:38 2016 -0800

    Merge pull request #6234 from saurabh500/contractinterface
    
    Adding the interface to the contracts

[33mcommit dd98d34ef09e4ddfc571f3f069645838fd1064ca[m
Merge: 5827c51 06eabfb
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Fri Feb 19 08:56:16 2016 -0800

    Merge pull request #6236 from saurabh500/sqlclientnet45
    
    Change the build compile group to net45

[33mcommit 5827c51b9c47e73118fff159469d2c0d2acaf7b7[m
Merge: 512ad10 499960b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 11:53:09 2016 -0500

    Merge pull request #6244 from stephentoub/twowarnings
    
    Fix two build warnings

[33mcommit 512ad1050dc0a812208d92d454325479738210dc[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 11:52:50 2016 -0500

    Temporarily disable TextWriterTraceListener tests on Linux
    
    #6240

[33mcommit f0b10669c37f292bc3a4628fce12240f64fed3c3[m
Author: root <necmon@yahoo.com>
Date:   Fri Feb 19 15:04:57 2016 +0200

    Detect the presence of sysctl header
    In OSes such as Alpine Linux, which depend on musl-libc,
    `<sys/sysctl.h>` is not present, although the function `sysctl` is
    available.

[33mcommit 499960b0345be841d0eb5bd174d68045a2c8d5f0[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Feb 19 10:42:25 2016 -0500

    Fix two build warnings

[33mcommit 9752a1317dcb5c0a72f4dad32848c960901b05df[m
Author: root <necmon@yahoo.com>
Date:   Fri Feb 19 15:04:57 2016 +0200

    Use designators to initialize msghdr
    In OSes such as Alpine Linux, which depend on musl-libc, `struct msghdr`
    has extra two members `__pad1` and `__pad2`. This change uses C99's
    way of initializing the struct.
    
    Also removes `#include <linux/netlink.h>` from `pal_networkchange.cpp`
    as it is already present in `pal_networkchange.h`.

[33mcommit 3b22ac88a2d92029033478eec4f5e0297c7e4cc9[m
Merge: da6c910 f2c4ae0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 08:22:54 2016 -0500

    Merge pull request #6156 from ianhays/ToFDisable-System.IO
    
    Add System.IO.* tests missing from Open

[33mcommit da6c910e9c597a0a944c0b70bc3f37e7db445354[m
Merge: 07d3166 c68d3e2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 07:22:35 2016 -0500

    Merge pull request #6094 from jasonwilliams200OK/netbsd-patch-6
    
    Add thread safe polyfill for gethostby[name/addr]_r

[33mcommit 07d316627bbe4a1a89024fc7f5e4f6b4b5138838[m
Merge: fa56e77 b94d022
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 19 07:16:31 2016 -0500

    Merge pull request #6238 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit ac2aa4e7b1cdfbd9e4f05b38323bfdb2eaddd681[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Mon Feb 22 18:32:09 2016 -0800

    Use compiler constants to get process arch instead of using coreclr.

[33mcommit c2163a4a0863749be1a6149a80b67ed8c19a0c8d[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Mon Feb 22 11:49:17 2016 -0800

    Add ARM64 support to managed RuntimeInformation APIs.

[33mcommit f79fcc9ec4d80ef1d64f0f474c99bff896597131[m
Author: Manu <manu-silicon@users.noreply.github.com>
Date:   Thu Feb 18 16:04:41 2016 +0900

    Add arm64 support
    
    Add arm64 support for native code in runtimeinformation.cpp/h

[33mcommit 06eabfb4fc512330035dd51fe707b2b9990b9e9c[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Thu Feb 18 23:38:08 2016 -0800

    Change the facade framework

[33mcommit b94d022801c1284bd5b62c2fe27145f0489343e5[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Thu Feb 18 22:08:55 2016 -0800

    Revert the change to runtime for debian in test-runtime (https://github.com/dotnet/corefx/pull/6221)  until we actually have packages that have that as a RID. It currently break our internal restores because no runtime assets exist yet. This change should be make in conjunction with updating to a newer set of packages.
    
    [tfs-changeset: 1576714]

[33mcommit fa56e770abfea04e7be2ed913df1c5029dbc7310[m
Merge: c7f6e28 fc2af75
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 18 23:59:36 2016 -0500

    Merge pull request #6237 from dotnet/revert-6126-AsyncRoot
    
    Revert "Use SafeHandles in *nix Sockets implementation"

[33mcommit 0f9f72dec0493aa3d90fb4a5e22d7b62ffd79f79[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Thu Feb 18 11:34:38 2016 -0500

    Deploy nameof throughout corefx in ConditionalFact/Theory

[33mcommit 9c3156b9ada06b8e58ac53d48fc303500bf3e476[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Thu Feb 18 11:32:56 2016 -0500

    Deploy nameof throughout corefx in MemberData

[33mcommit 396b41ddec99d01505c1bc4fa02fb0f0c5844990[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Thu Feb 18 10:34:28 2016 -0500

    Deploy nameof throughout corefx in exception construction
    
    Mostly automated replacement of parameter name string literals with corresponding usage of nameof.

[33mcommit c7f6e28350c59e4225499d40767d36450e79085b[m
Merge: a1796ed dfbd406
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 18 23:55:12 2016 -0500

    Merge pull request #6206 from hughbe/globalization-tests-compare-info
    
    Cleanup System.Globalization.CompareInfo tests

[33mcommit d39c2b46812363ec6c643602ec8e29904ba93302[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Thu Feb 18 20:54:38 2016 -0800

    Modifying the facade to build on .Net 4.5

[33mcommit a1796edab174712cde207fbabde8bb693f9ce184[m
Merge: 531abfd 60b3b78
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 18 23:47:34 2016 -0500

    Merge pull request #6216 from JonHanna/default_if_empty_reverse_toarray
    
    Implement IIListProvider on Reverse and DefaultIfEmpty

[33mcommit 531abfd26b84dd40404762bbeed503b133b3b8db[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 18 23:29:16 2016 -0500

    Update coding-style.md

[33mcommit f8084e05172d089e466af5ccc2013e0159bad1c1[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 18 23:26:05 2016 -0500

    Update contributing.md

[33mcommit 56a6dafbb25e58fa6f332dd6d3c676258f2cdf2a[m
Merge: 0331bab 5fb6e97
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Feb 18 20:11:32 2016 -0800

    Merge pull request #6004 from JonHanna/increase_use_invocationexpression_subclasses
    
    Use InvocationExpression subclasses in more cases.

[33mcommit 0331babb1096aa8add6ee9bb45ee7a74c6175a37[m
Merge: b60f038 32c3733
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 18 22:41:16 2016 -0500

    Merge pull request #6233 from stephentoub/more_headers
    
    Fix a few more licensing headers

[33mcommit fc2af75d8925a4ae6f98a23766f0e13d2100ad31[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 18 22:39:14 2016 -0500

    Revert "Use SafeHandles in *nix Sockets implementation"

[33mcommit e637489fc3f7767ca53b86b244fcfeba2e626a9c[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Thu Feb 18 19:19:26 2016 -0800

    Change the build compile group to net45

[33mcommit b60f0382c59eab8c047b81382dce43d245de0de2[m
Merge: 7126235 5220593
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Feb 18 18:39:40 2016 -0800

    Merge pull request #6157 from JonHanna/union_of_union
    
    Improve performance of chained Union operations.

[33mcommit 16a30e8fb2947e73351d425b2ebcc4d1922a7d42[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Thu Feb 18 18:35:44 2016 -0800

    Adding the interface to the contracts

[33mcommit 60b3b783defea31aca7145c059bf8bf38b1b2d3e[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Feb 18 19:58:02 2016 +0000

    Implement IIListProvider on Reverse and DefaultIfEmpty
    
    Both of these cases allow the work of ToList() and ToArray() to be
    passed to their source.
    
    In the worse case this removes a level of MoveNext() and Current
    indirection.
    
    In the best case the underlying source has optimized handling itself,
    and the benefits accrue.

[33mcommit 32c37332aa11818e4492f744145547af86cc64f3[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Feb 18 20:06:39 2016 -0500

    Fix a few more licensing headers
    
    These snuck in after the switch.

[33mcommit 71262352da59ec2d5a6a88d803e114d9103849e1[m
Merge: 0b69463 10269f5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 18 20:01:29 2016 -0500

    Merge pull request #6221 from chcosta/debian.8
    
    Transition debian.8.2 rid to debian.8 which is what is reported by CLI.

[33mcommit 0b69463371e746b637af1bcc8748c7f7f28a1d17[m
Merge: 2d4c301 1d29c53
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 18 20:00:44 2016 -0500

    Merge pull request #6228 from ellismg/add-rhel72
    
    Add RHEL 7.2 Runs

[33mcommit 2d4c3019a535a65ca91bbee2499e98c6670da021[m
Merge: 35f7ef0 a865551
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 18 20:00:10 2016 -0500

    Merge pull request #6227 from hughbe/diagnostics-fileversioninfo-namespaces
    
    Add namespaces to System.Diagnostics.FleVersionInfo.Tests

[33mcommit 386d3c20b6ed3eaa5c6f46062b5d3e7246c579ae[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Feb 18 16:03:37 2016 -0800

    Add back net46 conditions for system.net.primitives

[33mcommit 35f7ef05a8022358ec435152e7099d8263a4422a[m
Merge: 7a4f11e 11e8868
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Feb 18 15:52:45 2016 -0800

    Merge pull request #3199 from justinvp/winhttphandler_parseresponseheaders
    
    Reduce allocations when parsing response headers in WinHttpHandler

[33mcommit 7a4f11e4cca0ff70e02727dc4de4cac9a904f35f[m
Merge: 6022bfa 349c09a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 18 18:42:42 2016 -0500

    Merge pull request #6225 from dotnet/nguerrera/breaking-change-fix
    
    Fix incorrect statement about changing return types

[33mcommit 9b7f63f9ee249b0c99952c8f111c3dacc33101ea[m
Merge: 3596676 6022bfa
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Feb 18 15:30:29 2016 -0800

    Merge branch 'master' of https://github.com/dotnet/corefx into open_pkgs

[33mcommit a8655512258591acf884a2490cb32635c0c3b2a2[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Thu Feb 18 23:02:38 2016 +0000

    Add namespaces to System.Diagnostics.FleVersionInfo.Tests
    
    Part of #2898
    Has no functional changes

[33mcommit 3596676de38fe75bcc06cf4beb6ed6352ebce196[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Feb 18 15:29:34 2016 -0800

    Add back property for building a partial facade when targeting net46, but leaving the target group out of the builds file.

[33mcommit 1d29c53db8de19e661d51eaa41d87333b4cd9804[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Feb 18 15:17:34 2016 -0800

    Add RHEL 7.2 Runs

[33mcommit 349c09a7a9a6700bbfc0d4c4766000a6fcd01379[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Feb 18 14:16:59 2016 -0800

    Clarify that dynamic ranges can change, but static types cannot

[33mcommit 6022bfafe4d0888ee7d6ef77c2186621d6f69271[m
Merge: 917388b 056f835
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 18 17:48:52 2016 -0500

    Merge pull request #6214 from bartonjs/csp_coverage
    
    Improve coverage of the S.S.Cryptography.Csp package

[33mcommit 917388b1ad38b97d6bc29652c50242edc24db17a[m
Merge: e8ddd46 e99cc0e
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Feb 18 14:44:09 2016 -0800

    Merge pull request #6176 from hughbe/complex-test-refactoring
    
    Consolidate TestData in Complex tests

[33mcommit e8ddd463f3529c1967e08b2e39f7bbcc8045f650[m
Merge: 89ea2ae db9fe97
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 18 17:27:06 2016 -0500

    Merge pull request #6207 from hughbe/threading-test-namespaces
    
    Add namespaces to System.Threading tests

[33mcommit 89ea2ae85a01e5cfe150d0a4450a56ab4d9eba2a[m
Merge: a136cb1 848648d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 18 17:24:48 2016 -0500

    Merge pull request #6213 from pallavit/Issue#6029
    
    Increase the System.ServiceProcess.ServiceController tests timeout

[33mcommit 848648d71dcac7edb0b8e883aeb49f36be658f65[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Thu Feb 18 13:39:33 2016 -0800

    Update the ServiceProcess tests timeout to 10 seconds

[33mcommit 860849064d27d399bb37957901e7dcd60aa5bf2a[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Feb 18 12:59:11 2016 -0800

    System.Runtime 4.0.0 is not supported on DNXCore50, add lifting package for runtime requirement.

[33mcommit dfbd4064dc46d75b00600e6e03a6b994d5379edf[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Thu Feb 18 19:15:39 2016 +0000

    PR feedback

[33mcommit f2c4ae028cea889b6a5f53296cd7b560ed755b99[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Feb 18 12:37:26 2016 -0800

    TofDisable: System.IO.Pipes coverage

[33mcommit bd9818fba3cf9994131e13c36990195a62574865[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Feb 18 12:37:20 2016 -0800

    ToFDisable: System.IO.FileSystem.DriveInfo coverage

[33mcommit 48cad305d82740905954188a038dd30e3592c057[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Feb 18 12:37:12 2016 -0800

    Fix VS experience for Compression testdata
    
    Modified targets to respect subdirectories for linking of the test data from the nuget test package.

[33mcommit db9fe976feffd31dce4761a1dd9312fe3dd7640f[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Thu Feb 18 18:41:48 2016 +0000

    Add namespaces to System.Threading tests
    
    - Part of #2898
    - Allows me to remove some usings
    Not sure why the diff has to be so confusing, sorry

[33mcommit a136cb1ab38c0bad421cec18ca134a5a001881c9[m
Merge: 209761f c6b3ef8
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Feb 18 12:26:51 2016 -0800

    Merge pull request #6182 from ianhays/compression_async
    
    System.IO.Compression: Delegate to underlying stream async methods

[33mcommit 209761f0dc425d096fbacc888bed731a853f9797[m
Merge: d04b86f e0c8eb1
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Thu Feb 18 11:30:59 2016 -0800

    Merge pull request #6193 from Priya91/groovychanges
    
    Make outerloop ubuntu14.04 runs to be run as sudo.

[33mcommit 056f83529c009cc94b3731aa2b43b6209b51a4eb[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Feb 18 10:46:36 2016 -0800

    Delete dead code in SafeCryptoHandles.cs
    
    Each of the CAPI Safe*Handle types had a private constructor which took
    an IntPtr.  Nothing called them, and deleting them didn't cause any
    failures due to reflection dependencies.
    
    Also deleted a bunch of commented out code from the porting to .NET Core.

[33mcommit 189d56912195a57115e13e4f889fff41cdaa2926[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Feb 18 10:44:30 2016 -0800

    Dispose SafeKeyHandles allocated in GetProviderParameter
    
    Within the VM the maybe-allocated SafeKeyHandle was held by a stack-allocated
    class with a freeing-dtor.  The C# transliteration moved this local-free to a
    delayed-free, which caused a Finalizer race condition in this key handle and
    its parent SafeProvHandle.
    
    There are likely more unnecessary finalizations going on, but this is the one
    that caused the tests to fail with a tripped assert, so it's being fixed in isolation
    and a new issue is tracking the overall cleanup.

[33mcommit 807a84593b1127b68219d13a44e416cd3185165b[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Feb 18 10:40:31 2016 -0800

    Set RSACryptoServiceProvider.PublicOnly to true when public only
    
    The isPublic value was calculated, but wasn't assigned to the field.  This
    behavior got lost in the translation of the code out of the VM.

[33mcommit 6bdfdcb11d09eb2f1f9b44b1f0b3e55784c1a0e4[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Feb 18 10:35:38 2016 -0800

    Remove trailing null character on UniqueKeyContainerName
    
    When the UniqueKeyContainerName value was being set within the VM there
    was automatic c-string to BStr translation which removed the trailing null
    character from the value.  Now that it's being handled within managed code
    that translation is less automatic.

[33mcommit 392e66f936e4fe7d61ef739f13e3ad2389bf6eb1[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Feb 18 10:33:30 2016 -0800

    Populate CspKeyContainerInfo.ProviderName when only ProviderType was set
    
    This behavior was lost in translation from being in the VM.  When creating CSP
    keys using just the provider type code (e.g. 24) the provider name is populated
    on the CspKeyContainerInfo object.
    
    This change restores that behavior.

[33mcommit 42d2cad15ee4fa6d78dc878b1cf4e18453c8d287[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Feb 18 10:29:59 2016 -0800

    Improve coverage of the S.S.Cryptography.Csp package
    
    * Added tests to validate the PublicOnly property
    * Added tests to validate the CspKeyContainerInfo population
    * Added tests for the RSACryptoServiceProvider-specific Sign and Verify methods
    * Added tests which verify persistant key support

[33mcommit c68d3e2eb9bb62e7111a0d99d1774e50bd6b514d[m
Author: jasonwilliams200ok <necmon@yahoo.com>
Date:   Thu Feb 11 03:03:10 2016 +0000

    Add thread safe polyfill for gethostby[name/addr]_r
    NetBSD doesn't have `gethostby[name/addr]_r`. The sustitute
    `gethostby[name/addr]` are available. However, the non `_r` variants
    are unsafe.
    
    This change adds two fallback functions to provide thread safe way of
    getting host name and address.

[33mcommit d04b86fdf63180c337d628789b43759493d0923f[m
Merge: 72f0847 61fb322
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Thu Feb 18 10:41:56 2016 -0800

    Merge pull request #6208 from AtsushiKan/aesreuse
    
    Reenable Aes InPlaceDecryption test.

[33mcommit b70432898b7a00edb3303c0fbf4a1b98ebe442b4[m
Merge: 4c8db73 72f0847
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Feb 18 10:28:54 2016 -0800

    Merge branch 'master' of https://github.com/dotnet/corefx into open_pkgs

[33mcommit c6b3ef812179f52854cd3337a48795642d567975[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Feb 17 17:11:26 2016 -0800

    PR feedback for System.IO.Compression async delegation

[33mcommit 72f084798c917a647eed5b66d3d85ad62be08486[m
Merge: 8737f67 c3a76cc
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Feb 18 09:35:47 2016 -0800

    Merge pull request #6174 from hughbe/extensions
    
    Cleanup WebUtility tests

[33mcommit 61fb32299a276f1aa4103c85dcec215dfddc252d[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Thu Feb 18 08:46:55 2016 -0800

    Renable Aes InPlaceDecryption test.

[33mcommit d235b08300e827ab58a7c63fde0e73065dfa31a8[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Thu Feb 18 15:59:41 2016 +0000

    Cleanup System.Globalization.CompareInfo tests
    
    - Part of #2236

[33mcommit 3e17bf8d67b6606a332d3a05a0faaaa832b20556[m
Author: SunnyWar <itsallthesametome@hotmail.com>
Date:   Thu Feb 18 06:16:52 2016 -0800

    #2727 Removed unnecessary IsPrime function after expanding table.

[33mcommit 8737f673b55ccd3eee7fbb8f914b5bcbb7c44d7b[m
Merge: 24fd583 380a2eb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 18 08:36:49 2016 -0500

    Merge pull request #6190 from stephentoub/update_packages
    
    Update packages to rc3-23818

[33mcommit 380a2ebf4a498f9ab0a819c71d8717377e601bfb[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Feb 18 07:28:09 2016 -0500

    Update packages to rc3-23818

[33mcommit e99cc0e7c7fdbeb42922e4a4069887df239b0111[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Wed Feb 17 23:45:21 2016 +0000

    PR feedback
    
    - Fix non-Windows failures
    - Reinstate double.Epsilon tests
    
    Mark readonly fields as readonly

[33mcommit e0c8eb171dbb25d87642397799648590b4837699[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Wed Feb 17 21:03:06 2016 -0800

    Make outerloop ubuntu14.04 runs to be run as sudo.

[33mcommit 24fd583c0ded430aa05bfbde1a94e50d5b43b62b[m
Merge: d0cf97c 897e557
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Wed Feb 17 20:05:52 2016 -0800

    Merge pull request #6192 from mmitche/fix-ubuntu-labeling
    
    Use latest or auto always

[33mcommit 897e5579c838a55b180f281345ff52dbf113a8d4[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Wed Feb 17 19:56:29 2016 -0800

    Use latest or auto always

[33mcommit d0cf97c6c6e18eb7ff1748372d775c7d5c10ef8a[m
Merge: fc27e9b a632034
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 17 22:29:44 2016 -0500

    Merge pull request #6189 from stephentoub/concat3_remove
    
    Remove unnecessary LINQ Concat3Iterator

[33mcommit fc27e9b0a8e3aa27fef043390100f252be840988[m
Merge: 993a8ca d285463
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 17 22:20:02 2016 -0500

    Merge pull request #6160 from manu-silicon/arm
    
    Allow native compilation on arm

[33mcommit 993a8ca28d8f472af64cb978c2b3c0d725d5418a[m
Merge: ffddf5b 58f9c98
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 17 22:03:22 2016 -0500

    Merge pull request #6126 from ericeil/AsyncRoot
    
    Use SafeHandles in *nix Sockets implementation

[33mcommit a6320340d603d391e605f6a409a48f707f6e769b[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Feb 17 21:57:07 2016 -0500

    Remove unnecessary LINQ Concat3Iterator
    
    When I reimplemented Concat yesterday, I initially did so where longer chains of concats would end up using an allocated array to store all of the enumerables.  Since short chains of 2 and 3 concats are relatively common, I special cased those to not need the array.  I then changed the implementation to use a linked list of the concat iterators instead of the array, at which point while 2 sources still needed to be special cased, 3 didn't, but I neglected to remove the special 3 case.  This removes it, as it adds some code without commensurate benefit.

[33mcommit ffddf5b33b250645211d33eb1f08eed14b63960b[m
Merge: 51c981b 694ab10
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 17 21:42:22 2016 -0500

    Merge pull request #6159 from manu-silicon/sendfile
    
    Fix sendfile on 32-bit platforms and support large files copying

[33mcommit 51c981b6a82452ea260ec86f2f9edee857937073[m
Merge: 15bc27a 2ffcf0d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 17 21:12:49 2016 -0500

    Merge pull request #6178 from jasonwilliams200OK/rm
    
    Remove an unused file

[33mcommit 15bc27a928ac4cd28367f4835d454c2331c3fea9[m
Merge: b1de045 32464fd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 17 21:12:25 2016 -0500

    Merge pull request #6183 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit b1de045424713b6ef06a03786407ce1053c4b447[m
Merge: 98630bd 8b6ac2d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 17 21:06:14 2016 -0500

    Merge pull request #6179 from chcosta/encoding
    
    Update encoding for dotnet library license

[33mcommit 89510ed55adb2653809629b733d610a5855f60eb[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Wed Feb 17 17:49:47 2016 -0800

    Uncomment unsupported platforms tag in ManualTest csproj

[33mcommit ba8b81dce033505eabf884d448a271f60fe270c6[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Wed Feb 17 17:41:59 2016 -0800

    Initial commit

[33mcommit 32464fd2e70a01583bb856bc922065723f510318[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Wed Feb 17 17:29:00 2016 -0800

    Rollback part of the change introduced by https://github.com/dotnet/corefx/pull/6130 because it changed the return type of a public API which is a breaking change.
    
    [tfs-changeset: 1576106]

[33mcommit 694ab10b2415eab9fd7cd42d7afb951d661c9101[m
Author: Manu <manu-silicon@users.noreply.github.com>
Date:   Wed Feb 17 16:13:55 2016 +0900

    Fix sendfile on 32-bit platforms and support large files copying
    
    Fix using 64-bit offset on 32-bit platforms where C code would not compile.
    Fixed code to allow copying of large files (>2GB).

[33mcommit d2854633a906d0fa8bac69035463776018e9a17e[m
Author: Manu <manu-silicon@users.noreply.github.com>
Date:   Wed Feb 17 16:21:04 2016 +0900

    Allow native compilation on arm
    
    Ensure we detect the current running platform properly. This allow compiling
    the native bits without specifying the architecture on arm

[33mcommit 4a95099db412fc3346b1ffa0d503e64420165e02[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Feb 17 16:04:08 2016 -0800

    System.IO.Compression: Delegate to underlying stream async methods

[33mcommit 8b6ac2deabef3c5af7fec383dacf7fad6e1ab17e[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Wed Feb 17 15:51:57 2016 -0800

    Update encoding for dotnet library license

[33mcommit 10269f54199a517974484fcca2457a94a540da26[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Wed Feb 17 15:41:37 2016 -0800

    Transition debian.8.2 rid to debian.8 which is what is reported by CLI.

[33mcommit 2ffcf0d6f0e6a6ab4d9250ac8c96d9d4fc2adc0a[m
Author: Peter Jas <necmon@yahoo.com>
Date:   Wed Feb 17 23:24:33 2016 +0000

    Remove an unused file

[33mcommit 2c667ece7b5009a585d63c62eca726533179c641[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Wed Feb 17 15:01:06 2016 -0800

    Increase the System.ServiceProcess.ServiceController timeout

[33mcommit c3a76cc5aae7457b952f851d2be2c4ded6d93690[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Wed Feb 17 22:42:45 2016 +0000

    PR feedback

[33mcommit 1a8b348e6275037886483f62c0b1baa0b8e09c77[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Wed Feb 17 22:17:32 2016 +0000

    Consolidate TestData in Complex tests
    - Cleanup tests that aren't pulling their weight

[33mcommit 98630bd95c2efa68d7f47521bb00a00e521828e0[m
Merge: 49fcd06 ed34667
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Feb 17 13:37:48 2016 -0800

    Merge pull request #6171 from mellinoe/sync-vb
    
    Sync Microsoft.VisualBasic changes from TFS

[33mcommit 4c8db7346c3e66414d9f8cca1baed1d6615fe989[m
Merge: a261063 49fcd06
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Wed Feb 17 13:07:07 2016 -0800

    Merge branch 'master' of https://github.com/dotnet/corefx into open_pkgs

[33mcommit a261063cb74fea9628d4e043e16dd954984b6175[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Wed Feb 17 13:06:20 2016 -0800

    Packaging fixes, OSGroup specifiers and separate any/aot libraries.

[33mcommit 50c4f51c34ce953aad866fc825d92d40de46789a[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Wed Feb 17 20:58:37 2016 +0000

    Cleanup WebUtility tests
    
    - Use xunit InlineData

[33mcommit 5220593a420e39e1c9639ad549a661905120464c[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Feb 17 04:09:56 2016 +0000

    Improve performance of chained Union operations.
    
    While not as common as chained Concat, chained Union operations are
    sometimes needed when combining different sources. This applies a
    cut-down version of the improvements made to Concat in this regard,
    though only considering the 2-source union (first call) and n-source
    unions (all subsequent calls) rather than specialising further.
    
    Acting on the union now requires only one hash set to be created and
    filled, rather than allocating and filling one for each call to
    Union().

[33mcommit ed34667ed0b762aa2ea5402e8c656b4ed095123d[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Feb 17 11:19:37 2016 -0800

    Sync Microsoft.VisualBasic changes from TFS
    
    These changes were made on the closed version of our library. Before
    deleting that copy, I'm making sure the source code is in sync with the
    open version.
    
    Includes three TFS changes:
    
    Changeset 1491194:
      Enable latebound calls to DynamicObjects in VB.
    
    Changeset 1461633:
      Adjust implementation of HasSameMetadataDefinitionAs to be resilient to
      failures of Expression.Compile.
    
    Changeset 1478798:
      Implementing the fix for more robust MetadataToken probing for VB

[33mcommit 11e8868cd9f9b41c2fa8b1d36b1f124adb5c4ba6[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Wed Feb 17 11:08:21 2016 -0800

    Tweak TryGetHeaderName test

[33mcommit 0aab2ac0feffe1ff3adce05bda7bf6a0e9a8baac[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Wed Feb 17 11:07:14 2016 -0800

    Address PR feedback

[33mcommit 49fcd061232ba47fd0f20341a4f54a396fd72583[m
Merge: 9a84173 b0660c5
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Feb 17 10:57:19 2016 -0800

    Merge pull request #6168 from dagood/reapply-capitalization-fixes
    
    Work around xplat nuget restore race condition by fixing capitalization

[33mcommit ddcd78f8f2ccd3debefefb5e10164d7a038bb7e0[m
Merge: 5f6a780 9a84173
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Wed Feb 17 10:46:00 2016 -0800

    Merge branch 'master' of https://github.com/dotnet/corefx into open_pkgs

[33mcommit 5f6a78084d580225b558520c50ffb260e37147b8[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Wed Feb 17 10:45:29 2016 -0800

    Add explicit OSGroup properties for OS specific packaging.

[33mcommit 9a841733b057ab68badf4da7d8553f73f0fc4f90[m
Merge: d4f4f0d ea34a35
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Feb 17 10:42:00 2016 -0800

    Merge pull request #6005 from JonHanna/reduce_duplicate_validation
    
    Remove duplicate validation calls in Expression.

[33mcommit b0660c5eee295fc011f9b755b06ec3bfb50f1f12[m
Author: dagood <dagood@microsoft.com>
Date:   Wed Feb 17 12:23:42 2016 -0600

    Work around xplat nuget restore race condition by fixing capitalization.
    
    Put capitalization fixes back in place after some merge conflicts removed them. These fixes work around a xplat nuget restore race condition when there are multiple capitalizations of the same package ID in one restore command.

[33mcommit d4f4f0d2c96a1a375f9a8a639205971dad04658d[m
Merge: 9a12a4c 493088f
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Wed Feb 17 10:06:18 2016 -0800

    Merge pull request #6166 from AtsushiKan/ecdsaprobe
    
    Fix issue #4337. ECDsaOpenSsl tests failing on CentOS.

[33mcommit 9a12a4c92c265c582c8b199a849c0c674034e337[m
Merge: 650b049 11262b4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 17 12:41:51 2016 -0500

    Merge pull request #6165 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 493088ff1f628c5432ba5a97fcd3c5877b65c3ec[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Wed Feb 17 09:31:48 2016 -0800

    Fix issue #4337. ECDsaOpenSsl tests failing on CentOS.

[33mcommit 650b049e14310e6490f2ce84fea57dac922e380b[m
Merge: 7a1ea9e b86016c
Author: SGuy Ge <SGuyGe@users.noreply.github.com>
Date:   Wed Feb 17 09:14:15 2016 -0800

    Merge pull request #6141 from SGuyGe/NonSerialized
    
    1) Adding support for excluding [NonSerialized] members from serialization, this is prerequisite for #2; 2) Adding support for ReadOnlyDictionary.

[33mcommit 11262b4f15d0d500564fe9f080513ff339c8a1ae[m
Author: Davis Goodin <dagood@microsoft.com>
Date:   Tue Feb 16 11:40:36 2016 -0800

    Internally, restore solely from a VSTS feed. Add <clear/> back to NuGet.Config files.
    
    Updated internal xplat nuget fork to allow the <clear/> and to bring in other fixes.
    
    Fixed project.jsons to allow parallel restore. xplat nuget has a race condition when dependencies on the same package have different capitalization, so those were normalized towards uppercase.
    
    [tfs-changeset: 1575564]

[33mcommit 8576c7e715dc34f6f2d2fc4478be462776f5e110[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Feb 15 16:58:02 2016 -0800

    Add Microsoft.NETCore.Runtime redist packages to support the new UWP meta-package with minimal changes. The only changes are the removal of the package version pinning and a slight refactoring of how the graph is constructed (i.e. M.NC.Runtime down has direct dependencies to M.NC.Runtime.CoreCLR/Native instead of indirect references).
    
    Bumps all the existing Microsoft.NETCore.Runtime package versions to 1.0.2.
    
    [tfs-changeset: 1575272]

[33mcommit 7a1ea9e25cdb8fa6ded80f431ff6bb4d5809f84f[m
Merge: 127a9e8 7d332b2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 17 09:24:54 2016 -0500

    Merge pull request #6163 from JonHanna/respond_6130
    
    Respond to feedback on PR #6130

[33mcommit 7d332b20bc32beed76d220fc09a68b7c802b5cec[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Feb 17 13:53:48 2016 +0000

    Respond to feedback on PR #6130
    
    Two nits @stephentoub found with #6130 that were still un-picked when
    it was merged.
    
    1. Order of assignments in GroupedResultEnumerable constructor.
    
    2. Name boolean arg in call to GetGrouping. (Have applied this across
    the board).

[33mcommit 127a9e84da17456728968eb97196767b13ac7bcd[m
Merge: dd0d571 e3e764f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 17 08:01:08 2016 -0500

    Merge pull request #6152 from stephentoub/mmf_sharedefault
    
    Change MMF.CreateFromFile sharing setting from None to Read

[33mcommit 27240e90597d477c213b0af81142e6b53b6ea315[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Tue Feb 16 23:54:01 2016 -0800

    Implementing the interfaces in the base classes

[33mcommit f23a037143e63e23c73218c554e66a236f84aad6[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Tue Feb 16 23:28:40 2016 -0800

    Initial Checkin of interfaces

[33mcommit dd0d5714ba5586fe1b2e9b543173b1169a0580a9[m
Merge: 3377742 25e77e1
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Tue Feb 16 21:01:54 2016 -0800

    Merge pull request #6155 from Priya91/disabletest
    
    Disable failing test #6153.

[33mcommit 33777425c6d05670ffb2e9eaeebc6d9e58738310[m
Merge: 04acf7e 01d12cd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 16 22:58:21 2016 -0500

    Merge pull request #6129 from JonHanna/distinct_union_toarray
    
    Implement IIListProvider on Distinct() and Union().

[33mcommit 04acf7ea619685a0040aad4475a13fbea93f0650[m
Merge: 2261081 f3fb150
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 16 22:30:34 2016 -0500

    Merge pull request #6125 from tarekgh/MiscWebEncodersFixs
    
    Misc Web encoders fixes

[33mcommit ce63f30fcc11eca57b13753effbb057ce6547688[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Fri Sep 11 15:20:23 2015 -0700

    Reduce response message allocations in WinHttpHandler
    
    Reduce allocations associated with interop calls to
    WinHttpQueryHeaders and parsing response headers.

[33mcommit 226108197863878388b0a1337a71f676dd4f1fa8[m
Merge: 5790919 9a8d978
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 16 21:42:09 2016 -0500

    Merge pull request #6147 from stephentoub/http_diagnostic
    
    Fix HttpClient diagnostic logging PR https://github.com/dotnet/corefx/pull/5881

[33mcommit 25e77e11dbc57363842389d5c022bdaf00d9d705[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Tue Feb 16 18:07:00 2016 -0800

    Disable failing test #6153.

[33mcommit e3e764f22db3e2f6f1fb9f0b78d291caea52d3d9[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Feb 16 20:48:04 2016 -0500

    Change MMF.CreateFromFile sharing setting from None to Read
    
    When calling MemoryMappedFile.CreateFromFile(string path, ...), it creates an underlying FileStream using FileShare.None.  This means that these convenience functions aren't very useful for a common case of needing shared read-access to some file.  This changes the default from None to Read, changing a situation that previously threw an exception to one that doesn't.
    
    One-word product change, plus some test changes.

[33mcommit b86016c320b6eded8ac9dc4b17070a5102d622a5[m
Author: SGuy Ge <sguyge@microsoft.com>
Date:   Tue Feb 16 10:48:19 2016 -0800

    1) Adding support for excluding [NonSerialized] members from serialization, this is prerequisite for #2.
    2) Adding support for ReadOnlyDictionary.

[33mcommit 01d12cdfd7beb4a3592d16130ca29dfdfa8107f7[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Feb 11 17:47:11 2016 +0000

    Implement IIListProvider on Distinct() and Union().
    
    Optimised ToArray and ToList() on the results of these methods.

[33mcommit 605660d2cb8ff928946b54e5521c69b807ea8f3d[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Feb 17 00:54:46 2016 +0000

    Use partitioning on list-based select iterators.
    
    The creation of SelectListIterator above allows for partitioning to be
    used with the list-based Select() iterators, improving some subsequent
    operations on them.
    
    Closes #2844. While there are still a few cases left, the majority of
    operations where implementing IList<T> could give a gain now have the
    same time complexity due to going through `IPartition`.
    
    Make EmptyPartition a per-type singleton.
    
    SelectListPartitionIterator for Select on ListPartition

[33mcommit 5790919493d7436e6a27dab5a1d8390ac92a9a59[m
Merge: 88d0e29 7f573ef
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 16 19:13:21 2016 -0500

    Merge pull request #6131 from stephentoub/concat_perf
    
    Improve LINQ perf of chained Concats

[33mcommit 88d0e29da69abe12db5104049034197f97004ad6[m
Merge: 8473c4f accbc34
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 16 18:47:56 2016 -0500

    Merge pull request #6146 from wtgodbe/serverGC
    
    Enable server GC for OSX Debug build & test on PRs

[33mcommit 8473c4fcd8f569ad33b976cba40e820f45f3352f[m
Merge: 6823b77 c26b5f5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 16 18:47:32 2016 -0500

    Merge pull request #6148 from mellinoe/collections.nongeneric.typo
    
    Fix file casing in System.Collections.NonGeneric.Tests.csproj

[33mcommit f3fb1509ea768e28f49a2d4ba6b4b4735e97b992[m
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Mon Feb 15 13:28:18 2016 -0800

    Misc Web encoders fixes
    
    This change to fix the MaxOutputCharactersPerInputCharacter for JavaScript, Url,
    and Html encoders to allow encoding the surrogate characters correctly.
    Also EcmaScript v6 support Grave Accen character (\u0060 `) so we'll let
    JavaScript encoder to start encoding this character

[33mcommit 9a8d97852bcce9be0b4b6b5eff5ed87f4e36119e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Feb 16 17:48:26 2016 -0500

    Fix HttpClient diagnostic listener issues
    
    - Fix Assert that was throwing in a background thread due to mistmatched type (it was looking explicitly for HttpResponseMessage rather than any type in its inheritance hierarchy, and CurlHandler uses a derived type).
    - Update project.json package versions
    - Unsubscribe the listener when done with it

[33mcommit 7f573ef4243206757585673aafa564ee801d7b0e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Feb 16 08:48:28 2016 -0500

    Address PR feedback
    
    And add a few more tests.

[33mcommit c26b5f58b173db394a2fd3ebce8d357d86776c30[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Feb 16 15:04:52 2016 -0800

    Fix file casing in System.Collections.NonGeneric.Tests.csproj

[33mcommit bb1429e983ab7f7e1cc17d15d9af34815af18034[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Feb 16 08:10:59 2016 -0500

    Switch ConcatNIterator to be a chain rather than containing arrays

[33mcommit d26d89737692fb86366b0c5eae766cfabd29b174[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Feb 15 23:22:18 2016 -0500

    Improve LINQ perf of chained Concats
    
    The Concat operator today is very simple: it iterats through the first source yielding all items, then does the same for the second.  This works great in isolation, but when chained, the cost grows as yielding each item from the Nth source results in calling through the MoveNext/Current interface methods of the previous N-1 concats.  While this is the nature of LINQ operators in general, it's particular pernicious with Concat, which is often used to assembly data from many sources.
    
    This commit introduces a special concat iterator that avoids that recursive cost.  This comes at the small expense of N+1 interface calls per iteration, where N is the number of sources involved in the concatenation chain.  Chains of two sources and three sources are special-cased, after which an array is allocated and used to hold all of the sources (this could be tweaked in the future to have specializations for more sources if, for example, we found that four was a very common number).  Other benefits include the size of the concat iterator being a bit smaller than it was previously when generated by the compiler, and it now taking part in the IIListProvider interface, so that for example ToList operations are faster when any of the sources are ILists.
    
    Example results on my machine:
    - Enumerating a Concat of 2 Range(0, 10) enumerables: ~15% faster
    - Enumerating a Concat of 3 Range(0, 10) enumerables: ~30% faster
    - Enumerating a Concat of 10 Range(0, 100) enumerables: ~4x faster
    - Enumerating a Concat of 100 Range(0, 1) enumerables: ~2x faster

[33mcommit accbc341e09839219cb95bbaafbf30198e5fa1cc[m
Author: William Godbe <william.godbe@comcast.net>
Date:   Tue Feb 16 14:34:36 2016 -0800

    Enable server GC for OSX Debug build & test on PRs

[33mcommit 6823b773a637ef3f21f7cfcb2a254d062c3b3d74[m
Merge: 8c32e5a a2f1777
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 16 17:56:14 2016 -0500

    Merge pull request #6144 from mellinoe/make-clean-executable
    
    Make clean.sh executable

[33mcommit a2f17778a962a5a44c45637d9da66663fa31b6cf[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Feb 16 14:18:57 2016 -0800

    Make clean.sh executable

[33mcommit 8c32e5af88f0e00eb709bdc1412be7f641c1305e[m
Merge: 0e6428b 7bf8a9f
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Tue Feb 16 14:15:17 2016 -0800

    Merge pull request #6089 from joperezr/FixUnixBuildBreak
    
    Temporary removing Microsoft.VisualBasic.Tests.csproj from the tests builds

[33mcommit 7bf8a9f53dc62b94e59bd94387a57a9707d9c295[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Tue Feb 16 13:22:33 2016 -0800

    Modify tests to expect properly binplaced content
    
    dotnet/buildtools/445 altered the way we binplace Content to respect subdirectories. This commit consumes that package and alters our CoreFX tests to expect the new paths.

[33mcommit 56390661fda4242e99f029b571363fa91d94faf8[m
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Fri Feb 12 16:42:50 2016 -0800

    Temporary removing Microsoft.VisualBasic.Tests.csproj from the tests.builds

[33mcommit 0e6428b90ba49174e245b038f2a2061031206e72[m
Merge: 47e0bc4 ce35039
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Feb 16 13:21:26 2016 -0800

    Merge pull request #5974 from hughbe/numerics-cleanup
    
    Cleanup Complex

[33mcommit 47e0bc4cdd0e59aa5b47730f7b08c311e4a3ec3d[m
Merge: c5a5ed1 20a2425
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 16 16:08:40 2016 -0500

    Merge pull request #6096 from stephentoub/cpr
    
    Enable Console.CursorTop/Left even when terminfo missing CPR string

[33mcommit edbd7ba720699bbe20753872ac430f0b3fdaf3a9[m
Author: nbilling <nbilling@microsoft.com>
Date:   Mon Feb 1 14:25:40 2016 -0800

    Http request/response DiagnosticSource logging.
    
    - Added logging to WinHttpHandler, CurlHandler, and HttpHandlerToFilter
      for HTTP request/response.
    - Added functional tests for HttpClient (WinHttpHandler is exercised by
      these tests on desktop).

[33mcommit c5a5ed1305437ced7d4a771b48d45764546b305b[m
Merge: 2fbf14a 77cf983
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 16 15:28:46 2016 -0500

    Merge pull request #6138 from bartonjs/x509_coverage
    
    Improve coverage in X509Certificates library

[33mcommit 2fbf14a176867c7263065d7eb6dcd7099e4e91ec[m
Merge: 80ab629 d4e41d3
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 16 15:27:30 2016 -0500

    Merge pull request #6098 from stephentoub/fscopy_perf
    
    Improve performance and metadata copying of File.Copy on Unix

[33mcommit d4e41d3ebf4a9068ffc1d07ba638b271648c15cf[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Feb 14 16:36:05 2016 -0500

    Copy metadata from source to destination file
    
    Including timestamps.

[33mcommit 80ab629692e6c7218f7150193a6e989e86455eb0[m
Merge: 2a80290 92b2f4b
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Feb 16 11:38:41 2016 -0800

    Merge pull request #6140 from dotnet/FixPInvokeTestAssemblyName
    
    Update System.Runtime.InteropServices.PInvoke.Tests.csproj

[33mcommit 2a802904dfd1e78a8bd3f84765d6220ebd4cb0f8[m
Merge: ec8ea83 68eaa80
Author: VSadov <vsadov@microsoft.com>
Date:   Tue Feb 16 10:50:11 2016 -0800

    Merge pull request #6130 from JonHanna/groups_without_identity
    
    Optimise Grouping and Lookup

[33mcommit f38822c565d2b86cccd6d76f318afe92e9044cc5[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Feb 14 16:23:39 2016 -0500

    Add File.Copy test coverage for various file sizes

[33mcommit fd13ac2f118673c709feb156efdea8782f0f625c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Feb 13 16:14:13 2016 -0500

    Improve performance of File.Copy on Unix
    
    Adds a CopyFile function to the shim that, if possible, uses fcopyfile on OS X, sendfile on Linux, and elsewhere a manual read/write copy as we do today.
    
    In my local tests on Linux, this often resulted in greater than 10% throughput improvements.

[33mcommit 92b2f4bfc268413b315ae52c6b567fe490b2e05e[m
Author: Matt Galbraith <MattGal@users.noreply.github.com>
Date:   Tue Feb 16 10:46:10 2016 -0800

    Update System.Runtime.InteropServices.PInvoke.Tests.csproj
    
    Fix assembly name.  The .NET Helix System assumes, like the other tests in this repo, that the assembly name will match csproj name.

[33mcommit 77cf983f0b6516c917fb03f687cae4870997a86c[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Feb 16 08:32:26 2016 -0800

    Fix Unix status flag for policy match failures
    
    The application and certificate policy tests show that Windows is returning
    NotValidForUsage, while Unix was returning InvalidPolicyConstraints.

[33mcommit 8ee69f1d442a7eaa9012889476a96591145e9dc6[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Feb 16 08:30:42 2016 -0800

    Improve code coverage in X509Certificates
    
    * Adds the first tests for X509Chain with ApplicationPolicy or CertificatePolicy
    * Validates the X509ChainElementCollection Enumerator
    * Validates the unsuccessful decode path of an X509Extension
    * Adds the first tests for X509ExtensionCollection's OID (string) indexer

[33mcommit ec8ea83803397b13f786c9d4fec936c452f96f99[m
Merge: 510c7c2 c2e6426
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 16 11:47:20 2016 -0500

    Merge pull request #6137 from stephentoub/update_packages
    
    Update packages to rc3-23816

[33mcommit 510c7c272dba385dbb3167e1a5d21ff1da571c32[m
Merge: 0a9427f a3c4726
Author: Ian Hays <ianha@microsoft.com>
Date:   Tue Feb 16 08:09:56 2016 -0800

    Merge pull request #5312 from hughbe/collection-tests
    
    Cleanup and complete System.Collections.NonGeneric tests

[33mcommit c2e6426b9b9494d5478f656396f4da5711e8729a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Feb 16 11:05:43 2016 -0500

    Update packages to rc3-23816

[33mcommit 0a9427f3d5905ba0f11d39ce7ab35196641505a3[m
Merge: 6a0c20d ff7ecab
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 16 08:11:34 2016 -0500

    Merge pull request #6133 from Dmitry-Me/fixCommentTypo
    
    Fix comment typo

[33mcommit ff7ecabf49d37a697e1d051ecd88a7493c959a13[m
Author: Dmitry-Me <wipedout@yandex.ru>
Date:   Tue Feb 16 11:51:42 2016 +0300

    Fix comment typo

[33mcommit 68eaa80c3cf8ce7eeb742d3a2e877c91bf628433[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Feb 16 04:17:24 2016 +0000

    Optimise Grouping and Lookup
    
    Have separate implementations for when there is no element selector, to
    avoid going through an identity function delegate.
    
    Have ApplyResultSelector return an enumerator, rather than an enumerable
    that is only ever used to immediately obtain its enumerator.
    
    Create Lookup without element selector when none is needed.

[33mcommit 58f9c980d61b2026b9ebf9a074ef228e1619b1e7[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Fri Feb 12 16:55:31 2016 -0800

    Use SafeHandles in *nix Sockets implementation
    
    Most of the *nix Sockets code was dealing directly in file descriptors, without using SafeHandles to keep the file descriptors alive during pending operations.  #5750 is an example of the kind of issue this can lead to; in that case, the Socket object was collected and finalized while a pending async I/O was in progress, effectively cancelling the I/O.  On Windows, pending async I/O keeps the native socket alive (unless someone explicitly calls `Dispose` on the socket), so we need to have similar behavior on *nix.
    
    The "meat" of the change is to track the SafeCloseSocket instance in SocketAsyncContext (instead of the file descriptor), and to pass these as SafeHandles to the interop layer whenever possible.
    
    Unfortunately, System.Native.so's functions mostly take int32_t file descriptor arguments.  Fixing this the "pretty" way would involve changing all of these to intptr_t, and then using the normal p/invoke SafeHandle->IntPtr marshaling.  But updating all of the signatures in System.Native.so is quite a project, as we'd need to keep both the old *and* new signatures for some time.  For now, I've done manual SafeHandle->int marshaling, and will open an issue for cleaning this up further.
    
    We will need to think some more about how this interacts with SocketAsyncEngine; I believe there is a race there that will lead to problems, but I don't think this change makes it any worse.

[33mcommit 6a0c20d89a6cb1e50946eaf8fccea6337dfb07fc[m
Merge: 8db9174 a087c2d
Author: VSadov <vsadov@microsoft.com>
Date:   Mon Feb 15 14:20:06 2016 -0800

    Merge pull request #5777 from JonHanna/combine_linq_list_optimisations
    
    Combine linq list optimisations

[33mcommit 8db91745f374b612c3db47013cc82d64b0560288[m
Merge: 59f4427 9312117
Author: Eric Eilebrecht <ericeil@users.noreply.github.com>
Date:   Mon Feb 15 10:11:31 2016 -0800

    Merge pull request #6095 from jasonwilliams200OK/netbsd-patch-7
    
    Feature detect IP_[[UN]BLOCK/[ADD/DROP]]_SOURCE[_MEMBERSHIP]

[33mcommit 59f4427b223dc944fb189a6fc9ee6186d690974b[m
Merge: 5d2e1c3 3ab3bd6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 15 13:10:12 2016 -0500

    Merge pull request #6103 from stephentoub/buffer_blockcopy
    
    Use Buffer.BlockCopy with byte[]s

[33mcommit 5d2e1c3d80492301f8a346e1253f0c53284ede3b[m
Merge: 530bb27 bbd94eb
Author: Eric Eilebrecht <ericeil@users.noreply.github.com>
Date:   Mon Feb 15 10:02:32 2016 -0800

    Merge pull request #6057 from jasonwilliams200OK/netbsd-patch-5
    
    Feature detect kevent signature for NetBSD

[33mcommit 530bb277af7b79899f9a72bddfbcaacfd21df829[m
Merge: b725480 596b225
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 15 12:28:06 2016 -0500

    Merge pull request #6121 from stephentoub/upgrade_cc
    
    Upgrade code coverage tooling versions

[33mcommit b725480fbfeefd465ccb49f0b5af50e66c90746b[m
Merge: f1a6a6c fd3dea5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 15 12:04:50 2016 -0500

    Merge pull request #5979 from tmat/NsFixes,TypeSpecs
    
    Fixes build for undefined SRM symbol, type spec decoding

[33mcommit 596b22508cccb73dfd2957aaa01eb626a2f3da43[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Feb 15 11:35:33 2016 -0500

    Upgrade code coverage tooling versions

[33mcommit f1a6a6cbaf7d5fc40dceba59ae7cc6a8babc3689[m
Merge: 8572db6 0b289ce
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Mon Feb 15 08:01:35 2016 -0800

    Merge pull request #6117 from Dmitry-Me/misplacedAssert
    
    Misplaced Assert() is useless

[33mcommit 0b289ce1b5c0e411e6f9faf0fc780b54599af739[m
Author: Dmitry-Me <wipedout@yandex.ru>
Date:   Mon Feb 15 17:14:21 2016 +0300

    Misplaced Assert() is useless

[33mcommit 8572db6ec628ddcf5618ffdb9b23ed74ce39bacd[m
Merge: 732ad60 efca1d8
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 15 07:38:37 2016 -0500

    Merge pull request #6108 from Dmitry-Me/fixCommentTypos
    
    Fix comment typos

[33mcommit ce350395cd3f824fbe92c4299359a2f93dfdfe20[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Wed Feb 10 22:26:55 2016 +0000

    PR feedback, fix non-Windows test failures

[33mcommit efca1d8e96f5454d9044e2a4ee381be23c381e3c[m
Author: Dmitry-Me <wipedout@yandex.ru>
Date:   Mon Feb 15 10:17:54 2016 +0300

    Fix comment typos

[33mcommit 732ad601234fd0ed17acc21743885bc2f4db11f6[m
Merge: 6cbac32 43b62b0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 14 23:43:57 2016 -0500

    Merge pull request #6106 from JonHanna/live_with_1561
    
    Remove active issue tests for 1561

[33mcommit 43b62b09e3fb7da53eb7f46bb96a5a3f1e8207e8[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Mon Feb 15 01:19:23 2016 +0000

    Remove active issue tests for 1561
    
    #1561 has been closed, with a decision to keep the behaviour as-is.
    
    Two active issue tests were designed to fail due to this issue. Remove
    them.
    
    Two active issue tests reflect the behaviour this issue commented on.
    Since they still work, and since there is a performance benefit to the
    behaviour they depend upon, remove the ActiveIssueAttribute, and change
    the comment above them.

[33mcommit 3ab3bd6efcba669bf04d42f738fe5a495ec62940[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Feb 14 07:44:45 2016 -0500

    Use Buffer.BlockCopy with byte[]
    
    In particular after https://github.com/dotnet/coreclr/pull/3118, Buffer.BlockCopy has less overhead than Array.Copy when copying byte[]s, such that there's no benefit to using Array.Copy and potential benefit to using Buffer.BlockCopy.
    
    This commit replaces usage of Array.Copy(byte[], ...) in corefx with Buffer.BlockCopy(byte[], ...).  A lot of places were already using it.
    
    (In a few places where we weren't passing lower bounds to Array.Copy with T[] arguments, I added explicit lower bounds as well to avoid the overload needing to call GetLowerBound.)

[33mcommit 6cbac32aeb5da53ed43db31758a16117e0b4e3a8[m
Merge: 39cdbac c2babe7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 14 07:53:54 2016 -0500

    Merge pull request #6087 from khdang/remove_serialization_dead_code
    
    Remove unused legacy data contract json serializer code

[33mcommit 39cdbac1e1101f90bc29c8a0e90e6d13b3504063[m
Merge: 2cfbb08 d1fdc7f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 14 07:00:00 2016 -0500

    Merge pull request #6021 from hughbe/bigint-cleanup
    
    BigInteger cleanup

[33mcommit d1fdc7fbc19eaae76df7c570c694bf43d7c29498[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sun Feb 14 09:19:07 2016 +0000

    PR feedback

[33mcommit 20a2425def85dde66300bb315370b2ec498be1af[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Feb 13 09:12:41 2016 -0500

    Enable Console.CursorTop/Left event when terminfo missing strings
    
    We currently require the terminfo database to have the cursor position report string in order for Console.CursorTop/Left to work correctly.  However, some terminfo database files don't contain the relevant string even though they support the sequence.  Since it's meant to be supported by any ANSI-compatible terminal, this commit simply changes it to assume it'll work.

[33mcommit 2cfbb08c0415217799b7657d9877a90ed26a2d9a[m
Merge: 4221edb e1a9f14
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 13 22:35:36 2016 -0500

    Merge pull request #6099 from hughbe/drawing-primitive-tests
    
    Add some more tests to Drawing.Primitives

[33mcommit e1a9f14347e9b14dc708cea3fde7c1901efd6eb1[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sat Feb 13 22:21:01 2016 +0000

    Add some more tests to Drawing.Primitives
    
    No reason this library can't be fully tested :)

[33mcommit 4221edbaa7f73562765b2732d965084a6684b589[m
Merge: bd753f3 4b21577
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 13 13:43:52 2016 -0500

    Merge pull request #6050 from pallavit/5556
    
    Fix Issue#5556

[33mcommit bd753f35c3b55ee4bfcae339ae1de2fb885731c0[m
Merge: 837de09 452bc9f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 13 13:43:28 2016 -0500

    Merge pull request #6084 from mellinoe/datacontractserialization.duplicateresource
    
    Remove duplicate resource string from System.Private.DataContractSerialization

[33mcommit 837de09cb97c60700ea155033d05f06abb784f9e[m
Merge: 4d8bfb6 0c41fd6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 13 13:42:40 2016 -0500

    Merge pull request #6080 from mellinoe/vector-proj-cleanup
    
    Clean up System.Numerics.Vectors project and solution

[33mcommit 4d8bfb6a50baae640287ee995328bbafb395039c[m
Merge: 10877d1 6dae219
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 13 13:42:20 2016 -0500

    Merge pull request #6093 from krytarowski/netbsd-support-4
    
    Fix build on NetBSD: Retire check for <alloca.h> it's not portable

[33mcommit 10877d1dceb656eb8b6fd47c0e6a1d019ed55618[m
Merge: b673d09 fafb163
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Sat Feb 13 09:12:06 2016 -0800

    Merge pull request #6088 from saurabh500/partialfacadeforschema
    
    Partial Facade to retrieve schema from the .Net framework

[33mcommit b673d09aac7dfae8963b8f65f3107417c20e28f5[m
Merge: f6dc7d4 6444fc9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 13 12:10:13 2016 -0500

    Merge pull request #6032 from Dmitry-Me/takeCareOfOverflows
    
    Ensure no logical errors on counter overflow

[33mcommit fafb16365146ed2fa2a10b5187a9380a7a1ccd0f[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Sat Feb 13 08:20:39 2016 -0800

    Incorporating PR feedback

[33mcommit a3c472650e977bfe09601f05ec349f2e90198813[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sat Feb 13 12:28:43 2016 +0000

    PR feedback
    
    Fix merge conflict

[33mcommit c6fa1a66c5eb7c34fb5cc3f78e8bc5874702f8f2[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Fri Jan 29 23:03:45 2016 +0000

    Cleanup Stack tests
    
    Remove unused xunit file
    Add helpers file

[33mcommit 47ef8e1301e050f7494d85a8c3a8f78f9a0aea96[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Fri Jan 29 23:02:41 2016 +0000

    Cleanup SortedList tests

[33mcommit a282d5310836ba8152e374dddc0a79efce041855[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Fri Jan 29 23:02:07 2016 +0000

    Cleanup ReadOnlyCollectionBase tests

[33mcommit ddc00b6683e4121c28df7fda9d6a39d3ffddf298[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Fri Jan 29 23:01:01 2016 +0000

    Cleanup Queue tests

[33mcommit 65b2609291eefd797776bed89014620234b54f71[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Fri Jan 29 23:00:24 2016 +0000

    Cleanup Hashtable tests

[33mcommit 30a3099b178dcf5d5e44d1d20be608cb5eb04abf[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Fri Jan 29 22:59:48 2016 +0000

    Cleanup DictionaryBase tests

[33mcommit a4171b401c2d03a9b3f2525099edfd14ffd23ad7[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Fri Jan 29 22:59:35 2016 +0000

    Cleanup CollectionsUtil tests

[33mcommit 66de92e660357f6a38317d1c24db8b35b4c55b0d[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Fri Jan 29 22:59:17 2016 +0000

    Cleanup CollectionBase tests

[33mcommit 455db12ea6b6f82e34a08b227fb914dedcc75d25[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Fri Jan 29 22:58:53 2016 +0000

    Cleanup CaseInsensitiveComparer tests

[33mcommit 99800b1a374a574633629ca52802ea2602044797[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Fri Jan 29 22:57:33 2016 +0000

    Cleanup Comparer tests
    
    Fixes #5460

[33mcommit ea877feadbec1b295ae9c67b7ee67e0f8422bae0[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Fri Jan 29 22:49:48 2016 +0000

    Cleanup ArrayList tests

[33mcommit f6293e53242425c5c0c09ada35fb21e3d245c282[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Fri Jan 29 22:46:22 2016 +0000

    Remove dead code from System.Collections.NonGeneric
    
    Simplify if statements
    Remove unused private constructor
    Remove unnecessary conditions

[33mcommit 6dae219e1e3d7e8cbac2220c748cb94328dc0a79[m
Author: Kamil Rytarowski <n54@gmx.com>
Date:   Sat Feb 13 08:46:46 2016 +0100

    Fix build on NetBSD: Retire check for <alloca.h> it's not portable
    
    NetBSD requires <stdlib.h> for alloca(3).
    
    Other supported operating systems are satisfied with <stdlib.h> as well.

[33mcommit 452bc9f11f27e1629e00e957adab637a33003d84[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Feb 12 14:38:36 2016 -0800

    Remove duplicate resource string from System.Private.DataContractSerialization
    
    Ironically, the 'JsonDuplicateMemberInInput' string resource was
    duplicated in the resx file for this library. This was causing a build
    warning in my x-plat builds, but for whatever reason was not causing a
    warning on Windows.

[33mcommit f6dc7d4acee451e1047473db0553170c13a505fe[m
Merge: 8ca8c48 175f6d5
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Fri Feb 12 16:34:52 2016 -0800

    Merge pull request #6055 from joperezr/CleanInitToolsSH
    
    Cleaning up the output of init-tools.sh to mimic the cmd equivalent

[33mcommit 7af87744da0b66c800e749e90ea37f49596bbf02[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Fri Feb 12 16:04:21 2016 -0800

    Fix indentation

[33mcommit 3b38da2fbad2d0243ec885304aa46baed429d81f[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Fri Feb 12 16:02:09 2016 -0800

    Partial Facade to retrieve schema from the .Net framework

[33mcommit c2babe77ed4af3066ebc3bade23ea5b7eb277d19[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Fri Feb 12 15:49:53 2016 -0800

    Remove unused code in serialization

[33mcommit 8ca8c48a9809db8f5be7911dc92d437ad01a96cf[m
Merge: 94cb7c2 29a6316
Author: Shin Mao <shmao@microsoft.com>
Date:   Fri Feb 12 15:45:39 2016 -0800

    Merge pull request #6082 from shmao/177674
    
    Fixed a bug in XmlUTF8NodeWriter which caused EncoderFallbackException

[33mcommit 4b2157750862efbbd167a2ce54049ca74acec276[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Thu Feb 11 16:21:56 2016 -0800

    Incorporate feedback comments
    
    1. Rename EncodingHelper that is used only on Windows to EncodingHelper.Windows.cs
    2. Update the Process o/p and error encoding to not emit BOM character in case PSI is not set, just like on Windows.

[33mcommit 29a63167f3bbcd63563f0ecb6212b0c6d2dd6eb5[m
Author: Shin Mao <shmao@microsoft.com>
Date:   Fri Feb 12 13:45:08 2016 -0800

    Fixed a bug in XmlUTF8NodeWriter which caused EncoderFallbackException.
    
    Fixed #6076

[33mcommit 0c41fd6f0c6e559162599b64e05919b356bc5d8b[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Feb 12 13:14:37 2016 -0800

    Clean up System.Numerics.Vectors project and solution

[33mcommit 94cb7c2fc41afff28660b9f02fb846ff6f58c739[m
Merge: 6163b93 b6d3b00
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 12 15:51:46 2016 -0500

    Merge pull request #6075 from ericeil/SetNonBlockingAsyncContext
    
    InnerSafeCloseSocket.SetNonBlocking should access the AsyncContext property

[33mcommit 6163b93416838c769eb7821c84a69e72ba1504fc[m
Merge: 0d7277f 45222ac
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 12 15:51:28 2016 -0500

    Merge pull request #6074 from stephentoub/taskscheduler_debuggertests
    
    Add a few TaskScheduler debugger tests

[33mcommit 0d7277f3e722679f18d6f731103085828af7633b[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 12 15:04:37 2016 -0500

    Fix the text of an error message

[33mcommit b6d3b00dd08d629d5577390d419a67e1d7ef466f[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Fri Feb 12 11:23:22 2016 -0800

    InnerSafeCloseSocket should access the AsyncContext property, rather than using _asyncContext directly.  _asyncContext might not be initialized yet.

[33mcommit 9df1d054a25c61a1498093980ec48fe8c61ff69a[m
Merge: 62e7354 ba2f07e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 12 14:25:22 2016 -0500

    Merge pull request #6053 from pallavit/Issue#4636
    
    Expose the following Console APIs

[33mcommit 45222acd8c3494805a0a23258593c1642dc3e118[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Feb 12 14:21:52 2016 -0500

    Add a few TaskScheduler debugger tests

[33mcommit faa41d9ae954df5b6d72c3c3d70f676a3ae66e6e[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Fri Feb 12 11:12:44 2016 -0800

    Apply PR feedback for open package conversions

[33mcommit 62e735429b10b5718a35ae659f394fdd7585192c[m
Merge: dfd06ad 03c9601
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Feb 12 11:05:18 2016 -0800

    Merge pull request #5764 from ianhays/collections2
    
    Simplify and Modernize System.Collections tests

[33mcommit dfd06ad162d206d618ffa2b63e7de8862708438f[m
Merge: 9987e6f 8916a5a
Author: Eric Eilebrecht <ericeil@users.noreply.github.com>
Date:   Fri Feb 12 11:03:26 2016 -0800

    Merge pull request #6027 from ericeil/SecondConnect
    
    Throw PNSE from Socket.Connect on *nix iff a previous connect attempt has failed

[33mcommit 9987e6fadaa0f14dbc1ea5ce811ed91e279bfc14[m
Merge: 60eda7d fa5d159
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 12 13:24:15 2016 -0500

    Merge pull request #6065 from JonHanna/remove_duplicate_lookup_validation
    
    Remove duplicate validation in Lookup.Create

[33mcommit 60eda7d8e89eb35595255a12c1f66f1dc8dcc592[m
Merge: 5dddbd3 6e91f23
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Feb 12 10:22:05 2016 -0800

    Merge pull request #6049 from ianhays/fix_4829
    
    Allow IPv4 Loopback for DualModeConnect_AcceptAsync sockets tests

[33mcommit 03c9601b6ae099196b7ac8898141e73803aa8e7c[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Jan 29 09:56:38 2016 -0800

    Clean up Collections tests and reduce innerloop time to 3s
    
    The List.Sort tests were taking up the lion's share of the Collections tests innerloop execution time. I reduced the size of the collections being sorted to reduce the execution time from 8s to 3s for all tests.

[33mcommit a087c2d97d818762c1b4dd2c6305a2d9e836631c[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Feb 11 15:49:36 2016 +0000

    Combine IArrayProvider and IListProvider
    
    Anything that can serve as one can serve as the other, and also provide
    a faster path for Count(). Merge the two interfaces and add a Count
    property.
    
    Have IList optimised result of Skip() partitionable.
    
    Optimisation of Skip() for IList sources from #4551 fits with
    optimisations of Skip() and Take() for other sources from #2401.
    
    Combine the approaches, extending how the result of Skip() on a
    list handles subsequent operations.

[33mcommit 8916a5a7d7f2d128fcd02e156fc12f224a99c224[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Fri Feb 12 09:21:03 2016 -0800

    Add curly braces around "if" bodies

[33mcommit 175f6d555eb2777a04fe3694291388943c00f517[m
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Fri Feb 12 08:50:47 2016 -0800

    PR feedback

[33mcommit 5dddbd343943938f838a9d2b21d0c8feeaf5520a[m
Merge: 707de80 2f8b7e9
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Fri Feb 12 08:40:26 2016 -0800

    Merge pull request #6071 from dotnet/stephentoub-disable-OpenSUSE
    
    Temporarily disable OpenSUSE PR legs

[33mcommit 707de8090fdafa0efcbd143d761d3af2f4b3ad68[m
Merge: 0b18de3 091f73d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 12 11:26:27 2016 -0500

    Merge pull request #5671 from ianhays/compressionperf
    
    Add Canterbury Corpus perf tests to Compression

[33mcommit 0b18de303bc659d5a7a91c3f8dfe1eadd435beae[m
Merge: 279390c bb69f66
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 12 11:22:46 2016 -0500

    Merge pull request #6044 from jasonwilliams200OK/netbsd-patch-4
    
    Add ip_mreq support for NetBSD

[33mcommit 279390c6fbe2f222ac3dc1cbc8e017691b9a23fc[m
Merge: 5155ff6 777e88a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 12 10:49:55 2016 -0500

    Merge pull request #6051 from sokket/fsw
    
    Fixing #2279 to make the Linux FSW ignore root folder changes

[33mcommit 5155ff6c17bd7cfe6853d904e916d3c7cd6cebc8[m
Merge: 877b98f f3c2387
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 12 10:46:42 2016 -0500

    Merge pull request #6043 from bartonjs/openssl_disconnect
    
    Add clarifying comments and asserts in Unix SSL Disconnect

[33mcommit 2f8b7e92686eaf5dda59ac3268ed12951f8bfe73[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 12 10:42:33 2016 -0500

    Temporarily disable OpenSUSE PR legs
    
    #6070
    cc: @ellismg, @mmitche

[33mcommit 877b98ff5aad69a9e04c29234f4305b47d547553[m
Merge: 1c03715 0c008c1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 12 10:36:15 2016 -0500

    Merge pull request #6060 from stephentoub/linq_debugview
    
    Tweak EnumerableDebugViewTests

[33mcommit 1c0371567eef8e700e679584100af297e88033de[m
Merge: 847cee5 5b377bc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 12 10:35:55 2016 -0500

    Merge pull request #6056 from stephentoub/reenable_waiting_test
    
    Re-enable WaitForPeerProcess test

[33mcommit 847cee5e375e76f95ab425a630b9c2e1c9004745[m
Merge: 732dcf0 4eb5407
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Feb 12 09:35:10 2016 -0500

    Merge pull request #6068 from ericstj/data.common.fix
    
    Fix build break in System.Data.Common

[33mcommit 4eb54072e423819f3f4e9b27fec364932b8a8dd2[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Feb 12 05:47:19 2016 -0800

    Fix build break in System.Data.Common

[33mcommit 732dcf0ea0c389d00cf78c29c3b0ce83658e6f56[m
Merge: 63437ab 610c375
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Fri Feb 12 05:28:33 2016 -0800

    Merge pull request #6067 from mmitche/reenable-centos-freebsd
    
    Reenable some jobs that were broken by the disk corruption

[33mcommit 610c375ed7dfd089d4d6edfafe19740ce25a7bff[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Fri Feb 12 05:27:45 2016 -0800

    Reenable some jobs that were broken by the disk corruption

[33mcommit fa5d1597a0c500498f264763434f1f4da27ebea9[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Feb 12 13:10:42 2016 +0000

    Remove duplicate validation in Lookup.Create
    
    Lookup<TKey, TElement>.Create() validates its arguments. In most paths
    this validation will have already been done.
    
    Add this validation to the start of the paths that don't currently do
    it, and replace the validation within Create() with assertions, so such
    validation happens only once.

[33mcommit 63437abc4fc79a7e1126d00f87b7d9f0639ba215[m
Merge: b54a7e8 1254d0f
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Fri Feb 12 00:08:00 2016 -0800

    Merge pull request #6052 from saurabh500/datacommonschema
    
    Modifications for the GetColumnSchemaAPI

[33mcommit c043d2753e2fc9a44ae35284f2eb3ab79eaa6d77[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Thu Feb 11 18:58:56 2016 +0000

    PR Feedback

[33mcommit bbd94eb95bd58e33bf79b1046b48216c82c23a95[m
Author: Peter Jas <necmon@yahoo.com>
Date:   Thu Feb 11 23:32:49 2016 +0000

    Feature detect kevent signature for NetBSD
    In NetBSD, `kevent` requires:
    * `size_t` instead of int for `nchanges` and `nevents` members.
    * `uintptr_t` instead of `void*` for data member (which gets set by
      `EV_SET` macro).
    
    This change feature detects the existing behavior and adds support for
    NetBSD.
    
    Also, `EV_RECEIPT` flag is missing, which is `#ifdef` out as pat of
    this change.

[33mcommit 1254d0f2c4c31a63af609f047beb978f7340555b[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Thu Feb 11 18:28:46 2016 -0800

    Modifying changed file path in csproj

[33mcommit 0c008c1999ad0d0440272df5fe33f5239c43b9e9[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Feb 11 20:26:50 2016 -0500

    Tweak EnumerableDebugViewTests
    
    - Add a small amount of explanation
    - Verify exception type name, as it's relied on explicitly by Visual Studio and Roslyn

[33mcommit b54a7e877364a051a46c58a7a5b3b214584af23c[m
Merge: 39471b5 8991cba
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Feb 11 17:50:53 2016 -0800

    Merge pull request #6061 from JonHanna/fastpath_empty_join
    
    Fast-path Linq Join on empty

[33mcommit 8991cbad7fc394b38f72db2f73d461dd5217359b[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Feb 12 01:32:08 2016 +0000

    Fast-path Linq Join on empty
    
    If outer enumerable is empty, avoid creating Lookup<TKey, TInner>
    (c.f. #5372).
    
    If lookup is created but it is empty, short-circuit out of method.

[33mcommit 39471b56bd0241e60a33b4179a04187b96481547[m
Merge: 3798e53 5240b32
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 11 18:47:35 2016 -0500

    Merge pull request #6040 from stephentoub/add_review_headers
    
    Add API review headers to ref files

[33mcommit 5b377bcb6a09e1d0e5015724a8dd3e5cdaf87a8d[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Feb 11 18:27:27 2016 -0500

    Re-enable WaitForPeerProcess test

[33mcommit c5b233ced839ff2cbeb570cc24a343d08f3060fb[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Thu Feb 11 15:10:37 2016 -0800

    Changing the names of the class as discussed in the PR

[33mcommit 777e88a068c9e7509fd56bfcce20fbfe52f687f7[m
Author: Jon Miller <jonmill@microsoft.com>
Date:   Thu Feb 11 11:20:13 2016 -0800

    Fixing #2279 to make the Linux FSW ignore root folder changes

[33mcommit 73c60adb1a55169a28ef74f26acf96641fe4bb32[m
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Thu Feb 11 14:43:40 2016 -0800

    Cleaning up the output of init-tools.sh to mimic the cmd equivalent

[33mcommit bb69f66f16b8f523d29a331fe486e008203011c8[m
Author: jasonwilliams200ok <necmon@yahoo.com>
Date:   Wed Feb 10 04:41:10 2016 +0000

    Add ip_mreq support for NetBSD
    NetBSD supports `struct ip_mreq` for multicast requests instead of
    `ip_mreqn`. This change feature detects this reality and adds modifies
    the related code.

[33mcommit 6e91f23ef89f2927955b866043936f6e7da0b9af[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Feb 11 13:41:00 2016 -0800

    Allow IPv4 Loopback for DualModeConnect_AcceptAsync sockets tests
    
    Some sockets tests were connecting with the IPv4 loopback address and asserting that the connected IPv6 address was equivalent to the IPv4 loopback mapped to IPv6 (ffff:127.0.0.1). However, a non-mapped IPv4 loopback (127.0.01) is still supported on some platforms so the test needs to accommodate that case as it is still a valid loopback address.

[33mcommit 030e29992f6be20ffb9d9d3e799118f3354bce22[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Feb 11 13:37:45 2016 -0800

    Open package conversions for corefx.

[33mcommit df774eba25ddb09ecdead2c108a5960aee1d67c6[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 28 16:52:04 2016 -0800

    Move common collections interface tests to Common/tests
    
    Note that these new classes encompass all of the coverage that the existing IEnumerableTest/IDictionaryTest/etc do. However, those classes are being used in System.ObjectModel and may not be deleted until that library is modified to use the new structures. I am going to do that at a later date.

[33mcommit b0cb106f05c8ffbacc5b870398e0a9af3ef1e0ad[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 28 14:28:28 2016 -0800

    Update the csproj for System.Collections.Tests

[33mcommit 9dd7577cc7b9d3e68b4f7f9979d21c40be98f4f6[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 28 14:28:07 2016 -0800

    Add tests for Stack

[33mcommit 674cc261f0b0924b427df429bc8f00ace2c936a5[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 28 14:28:01 2016 -0800

    Add tests for SortedSet

[33mcommit 1143c4e470d456c8e8f89ce441e49c69b88451ac[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 28 14:27:54 2016 -0800

    Add tests for SortedList

[33mcommit 3a025a9bcdcd6d068b89ddf3dbbd50a2c9a738b2[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 28 14:27:46 2016 -0800

    Add tests for SortedDictionary

[33mcommit 62ac3abd3f264fd8e910ad69c3178c5c7f4f079b[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 28 14:27:35 2016 -0800

    Add tests for Queue

[33mcommit a8398e164201ffda4ba3a8c071c8e01bffb777f4[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 28 14:27:27 2016 -0800

    Add/Modify tests for List

[33mcommit 33bd0a87c6783dcbbccc59ea4385896337e7565e[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 28 14:27:18 2016 -0800

    Add/Modify tests for LinkedList

[33mcommit 41b29e83e25ee88f8bb4397fc1505ae78c714d2c[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 28 14:27:06 2016 -0800

    Add tests for HashSet

[33mcommit d7b97416950ee3a6e84fbb3c111ff8ee156ca125[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 28 14:26:57 2016 -0800

    Remove tests for EqualityComparer

[33mcommit ec8d0ec7470321cd03241f3fa2199ad78a8d1c3c[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 28 14:26:45 2016 -0800

    Add tests for Dictionary

[33mcommit c77bc82e2b72233b3c73e219d5a78aa310de3282[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 28 14:26:31 2016 -0800

    Add Common Interface collections tests
    
    Going off of what was present in Common/Tests, I expanded the existing tests to have a set of tests for each Collections interface.

[33mcommit 4ca8ec4bff602675f634402118ffc4d1bb8e979a[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 28 14:21:45 2016 -0800

    Clean up System.Collections

[33mcommit ba2f07e4f89c33f4bf1b539e0e678cfc2e9f1c75[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Thu Feb 11 13:06:41 2016 -0800

    Incorporate feedback comments

[33mcommit 3798e53640160c67e59eb51bc3bc5556c2733d7e[m
Merge: 8b88f53 b7b8aac
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Feb 11 13:04:37 2016 -0800

    Merge pull request #6054 from mmitche/remove-frebsd
    
    Remove freebsd from push runs until disk corruption is fixed.

[33mcommit b7b8aac58f810dbf97743a3cbce5114ec6e8b3f6[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Feb 11 13:03:08 2016 -0800

    Remove freebsd from push runs until disk corruption is fixed.

[33mcommit 8b88f53bcf70a26cd4b563b936741c521e123065[m
Merge: c7b308a c604732
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Thu Feb 11 12:40:41 2016 -0800

    Merge pull request #6034 from ericstj/binClashLogger
    
    Add binclashlogger to build

[33mcommit 2360952ae901c592e6a8798a7900f0bd6608035a[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Tue Feb 9 15:38:43 2016 -0800

    Expose the following Console APIs
    
    1. Beep(int, int)
    2. CursorSize
    3. MoveBufferArea
    4. SetWindowPosition
    5. SetWindowSize

[33mcommit 091f73d49dd907060b3740341b000b145ad18113[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Mon Jan 25 09:15:06 2016 -0800

    Add Canterbury Corpus perf tests to Compression
    
    Our System.IO.Compression tests were using deterministically generated random data to test compression/decompression time. While the results were useful, they missed a scope of tests that is required for good compression testing. This commit adds perf tests for GZipStream that make use of the popular Canterbury Corpus testing suite.

[33mcommit 83429d632df778829455e4b07637cc7e785faa9e[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Thu Feb 11 11:14:27 2016 -0800

    Changing primitives to ? to allow null to check if the value is set
    Changing extension query method name

[33mcommit c7b308a3f24bb00be24e678bb2d9faee635384bd[m
Merge: 7a48c9c 9e869de
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Feb 11 10:34:34 2016 -0800

    Merge pull request #6019 from wtgodbe/serverGC
    
    Enable Server GC for Ubuntu Debug CI builds on PRs

[33mcommit 73eb8841c71d42966bf008cf4fd29853ddaf9174[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Thu Feb 11 10:31:29 2016 -0800

    Make tests more robust to platform differences.
    OSX did not respond to the "bind-but-don't-listen" trick in the same way as Linux; instead of "connection refused," we just got a timeout.
    
    Now we just try to connect to an invalid address, and accept any non-Success SocketError.

[33mcommit 7a48c9cf47a422f52443bb8db9d7a491deea4d72[m
Merge: 2a6198b a913a1d
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Feb 11 10:29:17 2016 -0800

    Merge pull request #6048 from mmitche/fix-centos
    
    Remove CentOS 7.1 release from PR's

[33mcommit a913a1dc9573b2868cd7d638a22ebbc263d4261e[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Feb 11 10:27:36 2016 -0800

    Remove CentOS 7.1 release from PR's
    
    The disk is corrupted in the CentOS data directory.  To fix this, I will need to take the disk offline and fsck it.  FOr now, remove from PR's

[33mcommit 7f975a00bfe18de07b747f864d5f3571ab10e2af[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Tue Feb 9 16:22:00 2016 -0800

    Fix Issue#5556

[33mcommit f3c2387ff0460f5bd33f755f6d30b3099f055985[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Feb 11 09:17:51 2016 -0800

    Add clarifying comments and asserts in Unix SSL Disconnect

[33mcommit 2a6198b9d1796bde7da482eb2666c8b4141f44d0[m
Merge: fd72166 6e765b2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 11 11:41:04 2016 -0500

    Merge pull request #6038 from stephentoub/ntlm_optin
    
    Allow CurlHandler to opt-in to NTLM via CredentialCache

[33mcommit 5240b324e50f9aabaa11d4b0c46acc34e370a724[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Feb 11 10:50:44 2016 -0500

    Add API review headers to ref files

[33mcommit 6e765b2b84dcf0b6e7e3d1e0cbee6a7499a585f5[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Feb 10 23:31:59 2016 -0500

    Allow CurlHandler to opt-in to NTLM via CredentialCache
    
    libcurl supports four auth types (Negotiate, NTLM, Digest, and Basic), but today our CurlHandler implementation only enables three (Negotiate, Digest, and Basic), with NTLM explicitly disabled to match what was done in WinHttpHandler in corefx (the full framework enables it).
    
    However, there are a few key differences that need to be taken into account for CurlHandler. For example, popular implementations of gssapi and Negotiate on Unix do not include implementations for fallback to NTLM.  So whereas including "Negotiate" in WinHttpHandler often allows code on Windows to use NTLM if Kerberos is not available, the current state of CurlHandler often does not.  And although NTLM has some known issues, if it's the only option for a scenario where a Unix front-end needs to communicate with a Windows back-end (say because the front-end doesn't have kerberos infrastructure available and the back-end only has Windows authentication enabled), we still want it to be possible for a developer to write an app that communicates with that back-end.  The underlying platform supports it, the developer explicitly wants it, CurlHandler sitting in the middle shouldn't get in the way.
    
    As such, this commit enables NTLM to be used, essentially removing the blocking of it that was previously done.  However, it's not enabled by default for arbitrary credentials; rather, it's only enabled when a credential added to a CredentialCache explicitly specifies "NTLM".  That way, it's available for a dev to opt-in to if desired, but just providing a NetworkCredential to CurlHandler will not use NTLM.

[33mcommit fd721665976bb47501c74b16d87f4e45c60928aa[m
Merge: 7b98c0a d242474
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 11 10:28:14 2016 -0500

    Merge pull request #6013 from JonHanna/fix_1149
    
    Refactor System.Linq

[33mcommit 7b98c0a45d91ff809c92cd1cd63b65c59337dd76[m
Merge: 11efc0d 6616bd2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 11 08:52:39 2016 -0500

    Merge pull request #5914 from shmao/5912
    
    Fixed a Stress issue in Serialization ObjectToIdCache.

[33mcommit 11efc0d43d56e1c280653934b27ae5c1ef05af8c[m
Merge: 20459a3 79ae21b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 11 08:48:15 2016 -0500

    Merge pull request #6016 from stephentoub/remove_cctors
    
    Remove ~20 explicit static cctors across corefx

[33mcommit 20459a34c52070c7bb35e97b6cad5d6856d1485e[m
Merge: 87dba35 d13b749
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 11 08:15:19 2016 -0500

    Merge pull request #6012 from jasonwilliams200OK/netbsd-patch-2
    
    Add support for statvfs

[33mcommit 87dba354876c899c8d23619d0dd347b95f38ec63[m
Merge: a971f4a 9f36b1b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 11 08:12:38 2016 -0500

    Merge pull request #6031 from bartonjs/remove_redundant_copy
    
    Remove unnecessary array copy before calling CheckMagicValueOfKey

[33mcommit a971f4ab25c56980462e80be88cd1a8bb092651f[m
Merge: b50ddae a08d01d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 11 08:05:41 2016 -0500

    Merge pull request #6033 from Clockwork-Muse/System.Composition.Convention_Lock
    
    Remove internal Lock/Reader/Writer structs from System.Composition.Convention

[33mcommit 79ae21b1b9a113230da7ebfbffa4e3c3fe36f0ac[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Feb 10 11:42:54 2016 -0500

    Remove a handful of explicit static cctors across corefx
    
    Explicit static cctors cause the C# compiler to not mark types as beforefieldinit, which in turn means that the backend compiler needs to add checks to static methods to ensure that the type has been initialized.  We have a bunch of such cctors across corefx that can be easily removed; this commit does so.  In a few places, it also presizes some collections to help avoid unnecessary memory pressure.

[33mcommit 6444fc9462a0114b8087a91df0bc9e3ce8b33536[m
Author: Dmitry-Me <wipedout@yandex.ru>
Date:   Thu Feb 11 13:25:20 2016 +0300

    Ensure no logical errors on counter overflow

[33mcommit c604732f4a781bc931444641268aa9edd81310fd[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Feb 11 01:05:22 2016 -0800

    Add binclashlogger to build
    
    Adds a logger to detect multiple projects building the same output path
    with different global properties.  This helps keep the build clean from
    race conditions and redundant builds.

[33mcommit a08d01dcdc657325f4f45080ef1f116dfe55c64a[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Thu Feb 11 16:56:53 2016 +0900

    Remove internal Lock/Reader/Writer structs.

[33mcommit f14d03d2299c0774ee62401fd9e329bcb46385f2[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Wed Feb 10 22:16:26 2016 -0800

    Adding Contract Changes

[33mcommit be86d867e4f70cca3b68aa285a533eb1bf665474[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Wed Feb 10 22:11:41 2016 -0800

    Modify DbColumn based on API review

[33mcommit c05c200a1de7e5319ab04554da9c422d5123c56f[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Wed Feb 10 22:09:40 2016 -0800

    Add the query for capability

[33mcommit b21d4736b08c2749236d8a078cba7fff920bbf23[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Wed Feb 10 22:07:20 2016 -0800

    Adding the code files to project

[33mcommit 9f36b1b1ff1e81ef37f17698ac77a86d713cb444[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Feb 10 22:02:08 2016 -0800

    Remove unnecessary array copy before calling CheckMagicValueOfKey
    
    RSACng.ExportParameters was copying the first 4 bytes of the key blob to a
    second array.  But since it didn't change the byte ordering this is the same as
    just calling BitConverter with the original array.
    
    One allocation and 5 assignments that were just simply not needed.

[33mcommit b50ddae49d917e9a3c7c3d244ece87d7cb805d0b[m
Merge: d0f7d8c 7e21fb6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 10 23:34:27 2016 -0500

    Merge pull request #6001 from stephentoub/http_logging
    
    Enable EventSource logging in CurlHandler

[33mcommit 9312117dbe26d411eed91431c4bf82423de935dc[m
Author: jasonwilliams200ok <necmon@yahoo.com>
Date:   Thu Feb 11 03:16:57 2016 +0000

    Feature detect IP_[[UN]BLOCK/[ADD/DROP]]_SOURCE[_MEMBERSHIP]
    
    * IP_BLOCK_SOURCE
    * IP_UNBLOCK_SOURCE
    * IP_ADD_SOURCE_MEMBERSHIP
    * IP_DRIP_SOURCE_MEMBERSHIP
    
    are unavailable in NetBSD and this change surrond those cases with
    corresponding ifdefs.

[33mcommit d0f7d8c1f8b6d813e83184b704efac9e8641a0bc[m
Merge: 513e677 aa169c1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 10 22:54:10 2016 -0500

    Merge pull request #6020 from jasonwilliams200OK/netbsd-patch-3
    
    Add check for HAVE_VFS_NAMELEN

[33mcommit 513e677be14e52080377ff6a93dd096b14f63f36[m
Merge: 20d48f3 6ebb5b7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 10 21:33:17 2016 -0500

    Merge pull request #6030 from bartonjs/remove_crypto_contracts_p2p
    
    Remove the Project-to-Project references from crypto contract builds

[33mcommit d2424745ad33414a6c47b26aef3bd4c90e303188[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Feb 11 02:11:22 2016 +0000

    Refactor System.Linq
    
    Move classes into separate files.
    
    Split Enumerable among several files.
    
    Remove redundant references to generic types or namespaces.
    
    Fixes #1149

[33mcommit 20d48f313cc1779e86ff533051584803187ddbce[m
Merge: 9154ba1 8bfd29b
Author: Matt Ellis <matell@microsoft.com>
Date:   Wed Feb 10 17:45:43 2016 -0800

    Merge pull request #6025 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 6ebb5b7e1852909305468c23b08c7836d93dfd6b[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Feb 10 17:31:58 2016 -0800

    Remove the Project-to-Project references from two crypto ref builds
    
    Only CNG and X509Certificates had ProjectReferences, and they build without them, so removing them.

[33mcommit e623dc828eef16abeb31a866edabe2b45ce49f57[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Wed Feb 10 10:54:15 2016 -0800

    On Unix, throw PlatformNotSupportedException if a second connect attempt is made after a prior connect failure.

[33mcommit 8bfd29b2a5f33a4fb9c88b071fa2f5671d5dec86[m
Merge: 554471a bd28c2e
Author: Matt Ellis <matell@microsoft.com>
Date:   Wed Feb 10 16:50:38 2016 -0800

    Merge branch 'master' into from-tfs
    
    Conflicts in dir.props, one side removed and property and the other side
    added a property close to one another so that confused the
    auto-merger. Just took the relevent parts of both sides.

[33mcommit 9154ba1c1c4f2ecd192c34f4847d77f0beec85a4[m
Merge: c59336a a94d501
Author: Immo Landwerth <immo@landwerth.net>
Date:   Wed Feb 10 15:54:50 2016 -0800

    Merge pull request #5972 from terrajobst/netfx-triage
    
    Add documentation around porting to .NET Framework

[33mcommit c59336a118bfca4114761ba4b0ef1995006ed4e9[m
Merge: bd28c2e 6e8eed2
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Wed Feb 10 15:12:37 2016 -0800

    Merge pull request #6014 from joperezr/FixBugInOuterloopRuns
    
    Extending timeout for outerloop Unix runs and escaping quotes on property

[33mcommit c0a06ea52cc9fe816fe3f36e0f8fab7b1831626b[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Wed Feb 10 17:30:37 2016 +0000

    PR feedback
    
    Improve error messages when assertions fail.

[33mcommit 19b9f17c35e82223f4660f4ded13003ed6656b48[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Wed Feb 10 22:11:53 2016 +0000

    Add a test for IComparable.CompareTo for BigInteger

[33mcommit cec93f5856199ed2e0b4ffc4c982637d5c696ac9[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Wed Feb 10 21:54:06 2016 +0000

    Format and cleanup BigInteger - NFC
    
    As I was working on #5974, I saw BigInteger had some quaint formatting
    like Complex does.
    I went through and fixed some of these small minor changes.
    This has NFC

[33mcommit bd28c2e975d1b6fd36a6230bda6131373a8fed6f[m
Merge: 85faf36 ba64fda
Author: Nate Amundson <naamunds@microsoft.com>
Date:   Wed Feb 10 14:52:29 2016 -0600

    Merge pull request #5906 from naamunds/FixCentosBuild
    
    Add support for CentOS, Debian, RHEL

[33mcommit ba64fda9a0c6bdd205f4d3a99e6c7729821dfada[m
Author: Nate Amundson <naamunds@microsoft.com>
Date:   Wed Feb 10 12:50:17 2016 -0800

    Add support for CentOS, Debian, RHEL
    
    The CoreFx build using build.sh is currently broken on CentOS because it
    doesn't restore the right version of the .NET CLI.  This change fixes
    that and also restores the appropriate version for Debian and RHEL, and
    sets appropriate defaults for TestNugetRuntimeId for those three
    platforms.
    
    It also makes a few other minor edits:
    - Remove ToolNugetRuntimeId, which is no longer used.
    - Don't use "sh" when invoking init-tools.sh, because Bash is needed to
    use the "source" command.
    - Add a few more console output messages to init-tools.sh, similar to
    the ones already in init-tools.cmd.
    - Fix indentation in init-tools.sh.
    - Set the default TestNugetRuntimeId in build.sh when the target OS is
    specified to be FreeBSD, NetBSD, or Windows.

[33mcommit 7e21fb6673c8371f538cb456378d63cc71e7fc5c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Feb 10 15:14:35 2016 -0500

    Address PR feedback
    
    Also removed a bit of gratuitous tracing. We can always add more later if/when we need it.

[33mcommit 85faf36c1d45d1cc6e750a50bec44f6acd7a2f1e[m
Merge: 22948d5 fb0a1d9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 10 15:06:02 2016 -0500

    Merge pull request #6002 from stephentoub/plinq_generic
    
    Restore use of generics in System.Linq.Parallel

[33mcommit 9e869de1dbff5c0cdb998772bc05163ebfbfedf7[m
Author: William Godbe <william.godbe@comcast.net>
Date:   Wed Feb 10 12:05:18 2016 -0800

    Enable Server GC for Ubuntu Debug CI builds on PRs

[33mcommit 22948d53c776049048064c29688b790cdbe879e4[m
Merge: 38f2f07 ba04f3a
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Wed Feb 10 10:45:46 2016 -0800

    Merge pull request #5995 from tmat/MSA
    
    Move MethodSemanticsAttributes back to System.Reflection namespace

[33mcommit 554471a8d0a7da95cef72c1d7ad2875c11e64d87[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Feb 10 10:41:12 2016 -0800

    Fixing System.Linq package
    
    The package build was broken because the version of System.Linq
    changed to 4.1.0.0.  For platforms that used to support 4.0.0.0 inbox
    we need to continue to redist the 4.0.0.0 version.
    
    Additionally, since desktop 4.6 doesn't support the new API we need
    to bump up the generation.  For now I am claiming 5.6 which implies
    that this surface area must be added to .NET Framework 4.6.
    
    [tfs-changeset: 1574232]

[33mcommit 38f2f07c864db338fa4673c3d39b5431c846ab38[m
Merge: e037e4f 160331e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 10 13:21:24 2016 -0500

    Merge pull request #6003 from krytarowski/netbsd-support-2
    
    Fix build on NetBSD: Add missing include <sys/types.h>

[33mcommit 6e8eed2485fcc60979fd6987ac3f3f8c4973c540[m
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Wed Feb 10 10:15:47 2016 -0800

    Extending timeout for outerloop Unix runs and escaping quotes on property

[33mcommit 96e7f9144832a8413b76ff689db451d692f5288f[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Feb 10 09:53:52 2016 -0800

    S.R.Serialization.Primitives should resolve packages for netcore50
    
    A netcore50aot configuration was added but missing from project.json.
    As a result the nuget resolve build task chose to use the desktop target
    and compiler blew up with conflicts between mscorlib and the local types.
    
    Make sure we resolve for netcore50.
    
    [tfs-changeset: 1574210]

[33mcommit 284f3448b8d00f470930abc41e95f2d8f0cde172[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Feb 10 09:44:50 2016 -0800

    Add System.Buffers to netcore50 S.IO.FileSystem
    
    A dependency on System.Buffers was added to FileSystem
    around the same time that the project.json was forked.
    
    Add the new dependency to the new project.json.
    
    [tfs-changeset: 1574208]

[33mcommit 5fb6e971ef4ca2f3d5876fdcb7a0f2fd96938c0a[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Feb 10 13:11:54 2016 +0000

    Use InvocationExpression subclasses in more cases.
    
    #3298 introduced subclasses of InvocationExpression that are used
    for small numbers of arguments. These are used only if the enumerable
    of argument expressions is an IReadOnlyList<Expression>.
    
    In the other path a ReadOnlyCollection of the expressions is then
    produced, which implements IReadOnlyList<Expression>. There is
    therefore no extra overhead in doing this on finding the arguments
    are not IReadOnlyList, and using the result in selecting the subclass
    to use.

[33mcommit e037e4f7b73a88bcce1be0ac9b35cf356f747c82[m
Merge: 3d06fb5 0b411da
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 10 07:59:48 2016 -0500

    Merge pull request #5978 from bartonjs/rsa_create
    
    Add RSA.Create()

[33mcommit 3d06fb5ff45d7f3b99a3a1da0187832dd470a9b0[m
Merge: beab53e 61254e6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 10 07:51:18 2016 -0500

    Merge pull request #5983 from jasonwilliams200OK/netbsd-patch-1
    
    Remove the uncommon errno symbols

[33mcommit beab53ef654baa7e2418d57bf70efa0325ffad49[m
Merge: 9502506 142397f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 10 07:50:31 2016 -0500

    Merge pull request #5820 from JonHanna/fix_5549
    
    Inline selector use in aggregate methods.

[33mcommit ea34a35a67b0601a9445ed5abc5991c238004aac[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Feb 10 13:02:29 2016 +0000

    Remove duplicate validation calls in Expression.
    
    Some methods validate arguments before calling an overload that does
    the exact same validation. Remove the first validation.

[33mcommit 160331e42ae6fd395228c2954b7add6c3b9cdf0a[m
Author: Kamil Rytarowski <n54@gmx.com>
Date:   Wed Feb 10 11:12:07 2016 +0100

    Fix build on NetBSD: Add missing include <sys/types.h>
    
    In file included from /tmp/pkgsrc-tmp/wip/corefx-git/work/corefx/src/Native/System.Native/pal_interfaceaddresses.cpp:11:
    /usr/include/ifaddrs.h:34:2: error: unknown type name 'u_int'
            u_int            ifa_flags;
            ^
    
    Original solution by Peter Jas.

[33mcommit 9502506f07197cbfeb5d965d92ddc71855147ff4[m
Merge: a8b5767 5a43196
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Tue Feb 9 22:40:12 2016 -0800

    Merge pull request #6000 from bartonjs/read_unix_pfx
    
    Add test for reading ECDSA private keys from OpenSSL PFX files

[33mcommit a8b576741548222cfa86d656a5f21339f9c23eef[m
Merge: 42d7230 965ff75
Author: Koundinya Veluri <kouvel@users.noreply.github.com>
Date:   Tue Feb 9 21:03:06 2016 -0800

    Merge pull request #5839 from kouvel/FxFixes
    
    Fix ReaderWriterLockSlim to release waiting readers when a waiting wr…

[33mcommit fb0a1d90d874eba4d1b00227d31009496f67002d[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Feb 9 23:40:25 2016 -0500

    Restore use of generics in System.Linq.Parallel
    
    PLINQ makes fairly heavy use of generics.  During .NET Native bring-up, some of this generic usage was reduced due to initial limitations of the stack.  Now that those have been addressed, I'm restoring the use of generics to its original extent, helping to avoid a huge number of allocations, lots of casting, etc.
    
    This has a significant impact in the overhead of certain operators.  For example, consider this little test app:
    ```C#
    using System;
    using System.Diagnostics;
    using System.Linq;
    
    class Test
    {
        public static void Main()
        {
            var sw = new Stopwatch();
            int[] data = Enumerable.Range(0, 10000000).ToArray();
            while (true)
            {
                int gen0 = GC.CollectionCount(0);
                sw.Restart();
                int[] results = data.AsParallel().Select(i => i).Distinct().ToArray();
                sw.Stop();
                Console.WriteLine($"{GC.CollectionCount(0) - gen0}: {sw.Elapsed}");
            }
        }
    }
    ```
    On my machine, prior to this commit, this produces output like the following:
    ```
    303: 00:00:02.6805895
    305: 00:00:03.3609698
    308: 00:00:03.8779080
    298: 00:00:03.6718290
    291: 00:00:05.0167444
    ```
    After this commit, this produces output like the following:
    ```
    3: 00:00:00.5949436
    4: 00:00:00.5434885
    2: 00:00:00.5391528
    3: 00:00:00.5602570
    3: 00:00:00.4982133
    ```

[33mcommit 42d723011825eb264e7de88e702e4cf4d0a2b386[m
Merge: 37464a8 4d9a2e5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 9 23:08:55 2016 -0500

    Merge pull request #5672 from hughbe/generic-collections-exceptions
    
    Improve exception throwing for System.Collections

[33mcommit 9c9120d7e4368d5a627a09ae4285c66432f5e4d2[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Feb 9 22:58:55 2016 -0500

    Enable EventSource logging in CurlHandler
    
    We currently have a bunch of tracing in CurlHandler, but it's all guarded behind compile-time flags, making it difficult to use to diagnose issues.  This converts that to all be EventSource-based logging.  It also enables libcurl to provide its debug info via a callback, which is then routed to the EventSource as well, and mapped to the easy handles with which the info is associated.

[33mcommit 37464a8a3e7b160e3bdf7729f8056ed24255306f[m
Merge: 8c0cb45 6545b3e
Author: Jan Kotas <jkotas@microsoft.com>
Date:   Tue Feb 9 19:54:55 2016 -0800

    Merge pull request #5996 from jkotas/BOOL-comment
    
    Add comment to interop BOOL type

[33mcommit 5a43196db1436f0aa67ae80df88c668fbc601da3[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Feb 9 19:31:28 2016 -0800

    Add test for reading ECDSA private keys from OpenSSL PFX files

[33mcommit 8c0cb455e5c0e2f0ba91457925a6c53e08945d07[m
Merge: 0a40a68 2acd2fd
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Feb 9 18:49:23 2016 -0800

    Merge pull request #5992 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 6545b3e7039ada6058aaf99543441376e1a10541[m
Author: Jan Kotas <jkotas@microsoft.com>
Date:   Tue Feb 9 18:32:51 2016 -0800

    Add comment to interop BOOL type

[33mcommit ba04f3a0d06e22cd891e812dacd1378988698040[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Tue Feb 9 18:20:54 2016 -0800

    Rename DebugDirectoryEntryType.Deterministic to Reproducible to match C++ and PE spec naming

[33mcommit d595e342f948bb1e81696a4bf67be82461917c3c[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Tue Feb 9 18:12:39 2016 -0800

    Move MethodSemanticsAttributes back to System.Reflection namespace

[33mcommit 6616bd262dc33288ff368cd20ebe746926f1e7bf[m
Author: Shin Mao <shmao@microsoft.com>
Date:   Tue Feb 9 16:12:39 2016 -0800

    Fixed a Stress issue in Serialization ObjectToIdCache.
    
    The fix was ported from Desktop.
    Created a new file for stress tests.
    Added comments in DCS_MyPersonSurrogate_Stress.
    
    Fix #5912

[33mcommit 9023d0e5233a14462e8d856d3acf27742f4b51b5[m
Author: Alex Ghiondea <ghiondea.alexandru@microsoft.com>
Date:   Tue Feb 9 15:50:44 2016 -0800

    Update the System.Private.DataContractSerialization assembly to *not have* the reflection blocking attribute defined.
    
    Update the System.Runtime.Serialization.Primitives assembly to *have* the reflection blocking attribute defined.
    
    This brings back these libraries to parity with how reflection blocking worked in Update 1.
    
    [tfs-changeset: 1573915]

[33mcommit 0a40a68207a52bd1985e5d035ea21c5c183dd8de[m
Merge: 1430166 c634ec3
Author: VSadov <vsadov@microsoft.com>
Date:   Tue Feb 9 15:49:03 2016 -0800

    Merge pull request #5929 from JonHanna/isgeneric_after_containsgeneric
    
    Validation call IsGenericMethodDefinition after ContainsGenericParameters

[33mcommit 1430166dac0284625f7c573a9185f23f190355eb[m
Merge: 1e80b07 88b158a
Author: VSadov <vsadov@microsoft.com>
Date:   Tue Feb 9 14:29:01 2016 -0800

    Merge pull request #5909 from JonHanna/fix_5908
    
    Correctly interpret void TryExpressions with non-void components

[33mcommit 1e80b07b3f348593822bc33970253e9a0bb8f8a1[m
Merge: 17fb343 d5e3d82
Author: VSadov <vsadov@microsoft.com>
Date:   Tue Feb 9 14:22:00 2016 -0800

    Merge pull request #5632 from JonHanna/fix_5272_redux
    
    Stop Expression.TypeEquals throwing on Nullable<T> parameter.

[33mcommit 84af04317505d48feaa1e83dd5dc27ddc0f6de76[m
Author: Davis Goodin <dagood@microsoft.com>
Date:   Tue Feb 9 14:20:02 2016 -0800

    Adds custom xplat nuget that can restore from VSTS feed, adds the VSTS feed, and upgrades project.jsons throughout NDP\FxCore to pass new nuget compatability checks.
    
    Some fixes (adding imports, adding Platforms package) were tooled, but more complex ones (forking project.jsons, editing csproj's) were not.
    
    Also makes dependency version validation rules case-insensitive. (I used this fix to update the versions of some packages.)
    
    [tfs-changeset: 1573868]

[33mcommit 17fb343bf4237f5d5a47a8759b27257fadca2d7d[m
Merge: 74bc0c5 57793b5
Author: VSadov <vsadov@microsoft.com>
Date:   Tue Feb 9 14:14:31 2016 -0800

    Merge pull request #5956 from JonHanna/fix_5945
    
    Interpret ListInitExpression with non-void Add methods correctly.

[33mcommit 74bc0c5b4c5908fb4ad77a7c8d7b600a490d5dbf[m
Merge: 675083b c1c8756
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Tue Feb 9 13:34:14 2016 -0800

    Merge pull request #5989 from nguerrera/nuspec-clash
    
    Fix S.R.Metadata v1.2 vs v1.3 nuspec path clash

[33mcommit 2acd2fdb944fc19f01b014666b82b97ea6226e1e[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Feb 9 13:28:58 2016 -0800

    Fix race conditions during package build
    
    I've run my binclash logger on the packaging build and identified all
    the problems that result in multiple builds evaluations producing the
    same output.
    
    In some cases this was due to global properties from traversal leaking
    into library build.  I have fixed these as follows:
      Dummy
        This property was just being used to trigger batching to run
        multiple builds of the same project in a batch.  Instead of
        triggering batching by defining this in the properties, which
        has side effects, I used the %(Identity) in a condition that would
        always evaluate to true, which has no side effects.
      DefaultBuildAllTarget
        Similar to FilterToOSGroup this only applies for traversal projects
        so I undefine it when building a non-traversal project.
      PackageTargetFramework
        We were using this property to package the output of the library
        twice in different paths.  Rather than doing this from the package
        project I just have the library project declare that it should be
        packaged twice.
    
    [tfs-changeset: 1573841]

[33mcommit 675083b1398b0969586d1018e6d8428c4815bb66[m
Merge: 4cd21f3 fd76d4b
Author: Eric Eilebrecht <ericeil@users.noreply.github.com>
Date:   Tue Feb 9 13:08:18 2016 -0800

    Merge pull request #5975 from ericeil/SendRecvAPM_Single_Stream_TCP_IPv4
    
    Change socket test to stop sending data only when we've sent all the data, or an error occurs.

[33mcommit 4cd21f31004ca7205a5789fe22b334242ab766fc[m
Merge: a604d52 2795449
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Tue Feb 9 13:07:34 2016 -0800

    Merge pull request #5852 from CIPop/snstest
    
    Test fixes for System.Net.Security

[33mcommit a604d52d7befe79f13e38a5001856690cd439559[m
Merge: e904926 6da5ec6
Author: Joel Hendrix <jhendrix@microsoft.com>
Date:   Tue Feb 9 12:50:03 2016 -0800

    Merge pull request #5988 from dsgouda/btversion
    
    Updating build tools version number

[33mcommit 61254e6e4f227b93f44a6df08270419f8d4dc36a[m
Author: jasonwilliams200ok <necmon@yahoo.com>
Date:   Mon Feb 8 15:48:20 2016 +0000

    Remove the uncommon errno symbols
    `ENOTRECOVERABLE` and `EOWNERDEAD` are not available in NetBSD. Due to
    this lack of availability in all Unices, they are removed.

[33mcommit e904926e689c5a255e7b8bae01568559406a5100[m
Merge: f6cdaf2 a0d122b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 9 15:20:13 2016 -0500

    Merge pull request #5973 from sokket/buffer
    
    Fixing bug #5949 in System.Buffers

[33mcommit fd76d4b432ff20f0f228b21d7cd5f7dd33e13e94[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Tue Feb 9 11:58:28 2016 -0800

    Fix a couple more places where "sent == 0" was being interpreted as "connection closed".  Also, fix the assertion text on test timeouts.

[33mcommit 965ff756f3911ba355409a2a9a14bae57f86613b[m
Author: Koundinya Veluri <kouvel@microsoft.com>
Date:   Fri Jan 29 12:31:07 2016 -0800

    Fix ReaderWriterLockSlim to release waiting readers when a waiting writer times out
    
    Fixes #3364
    - Fixed TryEnterWriteLock to release readers on timeout
    
    Closes #3689
    - Didn't find any issues with the test or the product implementation
    - Updated the message to include more information that may be more helpful if it fails again

[33mcommit d13b749205d16f057fb3c45f272508be2a99ecfb[m
Author: jasonwilliams200ok <necmon@yahoo.com>
Date:   Tue Feb 9 11:43:10 2016 +0000

    Add support for statvfs
    statfs is unavailable on NetBSD. This delta adds support for statvfs,
    which is the supported alternative.

[33mcommit c1c8756a99951bb77030ba2bb163fc91aaaaed2b[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Feb 9 11:05:11 2016 -0800

    Fix S.R.Metadata v1.2 vs v1.3 nuspec path clash

[33mcommit a0d122b80dfb6975c2f0dc4325460d8890562a3b[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Mon Feb 8 14:51:34 2016 -0800

    Fixing bug #5949 in System.Buffers where we would accept invalid
    sized arrays and return them back to the user incorrectly

[33mcommit 6da5ec6283f7a38759e723cf05ff8b0909edc883[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Tue Feb 9 10:39:27 2016 -0800

    Updating build tools version number

[33mcommit f6cdaf267357ee27e5ecff4b83d4f3bd3b4c7535[m
Merge: 998d957 34ce38b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 9 12:23:55 2016 -0500

    Merge pull request #5954 from stephentoub/fs_buffers
    
    Use System.Buffers in System.IO.FileSystem

[33mcommit 34ce38bc1517e8b7693223a9e41479dd24abc59a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Feb 8 19:12:53 2016 -0500

    Use System.Buffers in CopyToAsync implementations
    
    The default CopyToAsync on Stream uses an 80K temporary buffer, making it a good candidate for buffer pooling.  But Stream is in mscorlib and can't rely on System.Buffers.  So this commit introduces an implementation that streams in mscorlib can use, just by overriding CopyToAsync and delegating.  It then uses that in DeflateStream, GZipStream, FileStream, PipeStream, and UnmanagedMemoryStream.

[33mcommit 45d0e74e57d76e638e2ffc7b769fd255d88159d1[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Tue Feb 9 16:09:05 2016 +0000

    Cleanup complex tests

[33mcommit db59396a2bc97d30faec32591265079f1666c984[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Tue Feb 9 16:04:29 2016 +0000

    Cleanup complex source file

[33mcommit 4d9a2e5fc0297a00e07b718a0adb68da3bcb4d96[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Tue Feb 9 08:07:07 2016 +0000

    PR feedback

[33mcommit 998d957a1090cbfde70a12a1084f9304d8b62157[m
Merge: ec0a484 a00aaf1
Author: VSadov <vsadov@microsoft.com>
Date:   Tue Feb 9 07:34:39 2016 -0800

    Merge pull request #5947 from VSadov/prepend
    
    Added   Enumerable.Append and Enumerable.Prepend

[33mcommit aa169c19f3aaf566395ae766c4b86861f58de8a7[m
Author: jasonwilliams200ok <necmon@yahoo.com>
Date:   Tue Feb 9 14:57:06 2016 +0000

    Add check for HAVE_VFS_NAMELEN
    `MFSNAMELEN` is not defined in NetBSD. The suitable alternative is
    `VFS_NAMELEN`, which this change adds support for.

[33mcommit ec0a4849c946202e66ba134488b3e99ee5af9578[m
Merge: 217b3f0 2647401
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 9 10:10:43 2016 -0500

    Merge pull request #5984 from jkotas/SECURITY_ATTRIBUTES
    
    Change SECURITY_ATTRIBUTES to blittable struct

[33mcommit 217b3f012e10332d8fabb7141c7c77f1a724d720[m
Merge: 69e8882 f80b013
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 9 08:02:53 2016 -0500

    Merge pull request #5985 from saurabh500/fixtest
    
    Making the class DbCommandTests public for test execution

[33mcommit 26474015f4ad7587d8bd7a6639aa67b9c2f0dff2[m
Author: Jan Kotas <jkotas@microsoft.com>
Date:   Mon Feb 8 20:54:48 2016 -0800

    Change SECURITY_ATTRIBUTES to blittable struct
    
    - Fix potential bugs (some places assume that the struct is blittable)
    - Better performance performance (interop does not have to create a copy)

[33mcommit 69e8882f0e1713411e7f51dea0f50a36819bf928[m
Merge: 241785b 88b0d05
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Mon Feb 8 23:06:11 2016 -0800

    Merge pull request #5981 from bartonjs/osx_remotecert_test
    
    Remove the stale ActiveIssue(5555) tag for OSX

[33mcommit a00aaf16f282891482278376ae6e25cdcc968c15[m
Author: vsadov <vsadov@microsoft.com>
Date:   Sat Feb 6 22:01:22 2016 -0800

    CR feedback
    * Bumped up version of System.Linq
    * Added Append/Prepend to the MatchSequencePattern test in System.Linq.Expressions  since the new operators are not avaialble on IQueryable.
    * added a test for combinations of Append, Prepend, Concat

[33mcommit 75f2d8813bda09cf3c3873dde291bbc20e06aab0[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Mon Feb 8 21:08:01 2016 -0800

    Adding the GetSchemaTable() replacement APIs as proposed in
    https://github.com/dotnet/corefx/issues/5915

[33mcommit 964281dfc6e1828f078890099e0042f2e5ed85bf[m
Author: vsadov <vsadov@microsoft.com>
Date:   Sat Feb 6 14:17:06 2016 -0800

    Added   Enumerable.Append and Enumerable.Prepend
    New public API in System.Linq
    
    Closes #2075

[33mcommit f80b01380023da98acfbcb4afacfe9802628f362[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Mon Feb 8 20:58:07 2016 -0800

    Making the class public for test execution

[33mcommit 241785b1e3afb700169478651974bbfe7687ac20[m
Merge: 6029e58 4964b6e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 8 21:36:15 2016 -0500

    Merge pull request #5971 from ericeil/RemoveMultipleConnectAttempts
    
    Remove SystemNative_PlatformSupportsMultipleConnectAttempts

[33mcommit 88b0d052a76ec90ec6fa575428a1d55d3901ae88[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Feb 8 18:21:54 2016 -0800

    Remove the ActiveIssue(5555) tag for OSX
    
    Since the default root store should have trust for this cert now,
    consider this scenario to be Generally Regarded As Safe, like it is
    for the other platforms.

[33mcommit fd3dea57535513d79a21cec62c30f411cf58f6f5[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Mon Feb 8 17:46:59 2016 -0800

    Fix type spec handling in DecodeTypeHandle

[33mcommit effc743f53f0a3c1943afe897cbefbbaa78b6d69[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Mon Feb 8 17:43:52 2016 -0800

    Fixes build for undefined SRM symbol

[33mcommit a94d50178d9bd51fbc380130de37c15afb4ca301[m
Author: Immo Landwerth <immol@microsoft.com>
Date:   Mon Feb 8 17:04:14 2016 -0800

    Address PR feedback

[33mcommit 6029e58a273acbd168f7d23a0620f497d0fdcc7c[m
Merge: 1384104 991ed3b
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Mon Feb 8 17:07:17 2016 -0800

    Merge pull request #5968 from saurabh500/issue5611
    
    Remove the _customValues Dictionary.

[33mcommit 0b411da6fd18414876065dedace10b83fcfacac3[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Feb 8 16:57:14 2016 -0800

    Add RSA.Create
    
    The Windows and Unix versions are each thinned out versions of their
    full implementations (RSACng, RSAOpenSsl).  For the Windows version a
    bit of unique work is done in the S.S.C.Algorithms implementation (to
    avoid pulling in all of CngKey), and so the RSA algorithm suite is
    now running additionally on the RSA.Create() copy.
    
    Ways to get an RSA object:
    
    RSA.Create():
    * Unix: S.S.C.Algorithms!RSAImplementation+RSAOpenSsl
    * Windows: S.S.C.Algorithms!RSAImplementation+RSACng
    
    X509Certificate.GetRSAPrivateKey() (or public key):
    * Unix: S.S.C.OpenSsl!RSAOpenSsl
    * Windows: S.S.C.Cng!RSACng
    * Windows, non-UWP, legacy hardware key: S.S.C.Csp!RSACryptoServiceProvider

[33mcommit 58d7b85d3b8a9632d1614716b966381e6d6b4efb[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Feb 8 16:56:45 2016 -0800

    Dual compile Windows RSA into Algorithms

[33mcommit 029533572fc13f8deae3a06ffcf58361cd5d281b[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Feb 8 16:53:45 2016 -0800

    Dual compile Unix RSA into Algorithms

[33mcommit 88b158af551278085b11ae40e179d056f51a7ee7[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Feb 4 21:25:30 2016 +0000

    Correctly interpret void TryExpressions with non-void components
    
    Don't leave a value behind on the stack in such cases.
    
    Fixes #5908

[33mcommit 1384104e25838004b230fc7f17fffb768c62fa5e[m
Merge: 95022d9 30abd30
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Feb 8 16:21:28 2016 -0800

    Merge pull request #5953 from stephentoub/remove_client
    
    Remove Client property from TcpClient and UdpClient

[33mcommit 27954497d635ff0f01fbb16e1b485156c51398ea[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Fri Jan 29 15:49:44 2016 -0800

    Fixing and adding tests for the in-memory VirtualNetwork/Stream. Adding
    TaskTimeoutExtensions and fixing the System.Net.Security timeout pattern.

[33mcommit d91cb962b3714d57520ddc12a076a81a850f162a[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Mon Feb 8 15:05:16 2016 -0800

    Stop sending data only when we've sent all the data, or an error occurs.  If send returns zero, that does not necessarily mean we are done.
    
    Fixes #5739
    Fixes #4817

[33mcommit f1188274e4069f45f47350b484c6ef248c683e36[m
Author: Immo Landwerth <immol@microsoft.com>
Date:   Mon Feb 8 14:19:02 2016 -0800

    Add documentation around porting to .NET Framework

[33mcommit bb94f72d0b24577ce3c6fa7179188373870f4d5e[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Mon Jan 25 17:51:09 2016 +0000

    Improve exception throwing for System.Collections
    
    - Merge identical exception messages to remove string resources
    - Fix incorrect exception parameter names
    - Fix incorrect exception messages
    - Moved an inline non-localizable message to a string resource
    - Add missing parameter names to several exceptions
    - Add the object (i.e. index or value) to ArgumentOutOfRangeExceptions
    - Correct a parameter name for an ICollection.CopyTo explicit interface method

[33mcommit 4964b6ec838086b42171cfc9d13c8b1fe3c6bd6a[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Mon Feb 8 13:20:11 2016 -0800

    Remove SystemNative_PlatformSupportsMultipleConnectAttempts
    This is no longer needed by any managed code
    
    This reverts commit 7000023f729abe20337ed91816c019744b6a6a5c.

[33mcommit 95022d9e7116f199d8de5b128e6e5d53cdaf88cf[m
Merge: 2e0af58 7d3089e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 8 15:56:01 2016 -0500

    Merge pull request #5962 from stephentoub/closeonexec
    
    Use fcntl with FD_CLOEXEC to better implement HandleInheritability

[33mcommit 2e0af58a2edec77451788bc65a69006a5f8e95c5[m
Merge: 8fb8476 f66d004
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 8 15:36:11 2016 -0500

    Merge pull request #5957 from stephentoub/buffer_log2_perf
    
    Two perf tweaks to ArrayPool

[33mcommit 8fb8476bd16966f906ab604dfecf5220e95fadb9[m
Merge: 0397e59 9fd8dd6
Author: Cory Rivera <corivera@microsoft.com>
Date:   Mon Feb 8 12:27:14 2016 -0800

    Merge pull request #5938 from dotnet/corivera_InvalidProvFix
    
    Modify SNI Provider error messages in Strings.resx to match previous versions of .NET

[33mcommit 991ed3b2f75e3feebe1e341d74155b3a75b592f9[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Mon Feb 8 12:16:53 2016 -0800

    Correcting Property names

[33mcommit c74abbc3e5e67b7d79b11324363987917837802f[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Mon Feb 8 12:15:24 2016 -0800

    Adding default case

[33mcommit 4ed017efdad401ff37af828a7ec6ffb8628da19a[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Mon Feb 8 12:07:42 2016 -0800

    Remove the _customValues Dictionary.
    
    The change is meant for the issue
    https://github.com/dotnet/corefx/issues/5611
    1. Remove the setter from the indexer.
    2. Remove the dictionary from DbColumn
    3. Allow the attributes being expsoed by the DbColumn to be retrieved
    using the names of the attributes.
    
    The indexer in the DbColumn is supposed to allow access to the properties
    being exposed by the DbColumn and its subclasses. The setter and the
    storage is being removed from the DbColumn. The DbColumn will expose its
    default properties using the indexer. However if a subclass of the
    DbColumn needs to expose its properties via the indexer, then need to
    implement their own mechanisms

[33mcommit 0397e5990e5d597698e5a462424423fdc6251bc9[m
Merge: 8436b97 2c1fcdb
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Feb 8 12:03:44 2016 -0800

    Merge pull request #5959 from ericstj/fixBuildRace
    
    Fix some race conditions in the build

[33mcommit 8436b97bef2e70a4b603205e3b795fd64063a4b9[m
Merge: bd382cf 1497db2
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Feb 8 10:53:49 2016 -0800

    Merge pull request #5905 from mellinoe/remove-mono-deps
    
    Remove all build-time dependencies on mono

[33mcommit f66d00474c2ef0195f20cc62a962ecb40c46ab0d[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Feb 8 11:11:47 2016 -0500

    Change algorithm again to perform better when precompiled
    
    It also happens to consume less memory.

[33mcommit bd382cfa30f81cff9ea80a729688504b9b926b9b[m
Merge: 4b64e85 31bb3a0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 8 09:48:58 2016 -0500

    Merge pull request #5961 from stephentoub/update_packages
    
    Update packages to rc3-23808

[33mcommit 7d3089e303fbc15f4d7521fe7c75f19faed78e37[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Feb 8 08:18:33 2016 -0500

    Use fcntl with FD_CLOEXEC to better implement HandleInheritability
    
    In System.IO.Pipes, we use pipe2 on Linux to support HandleInheritability.None, but on other platforms we just ignore the flag.  And in System.IO.MemoryMappedFiles, when creating a backing object, we also ignore the flag.  This commit augments the implementations to use fcntl(fd, F_SETFD, FD_CLOEXEC) to address those gaps.

[33mcommit 31bb3a0cd271aebc9a4336a53b0fc3bb900fe22f[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Feb 8 07:26:49 2016 -0500

    Update packages to rc3-23808

[33mcommit 2c1fcdb96c2ef168fd59cb063e85da500403081a[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Mon Feb 8 00:24:18 2016 -0800

    Fix some race conditions in the build
    
    These projects were all being built multiple times to the same output
    path with different global configuration.  If those builds happen at
    the same time it causes a race condition which fill fail the build
    
    I detected these with an msbuild logger that I wrote which will soon be
    integrated  with buildtools.

[33mcommit 4b64e85dbf22aeccf6db3dc6897e94f70d3946ea[m
Merge: e5066d3 ab54200
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Sun Feb 7 22:51:02 2016 -0800

    Merge pull request #5958 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit ab5420032a59aff2c4e3df1d3e2bf921f809c10d[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Sun Feb 7 21:41:10 2016 -0800

    Fix internal TFS build break
    
    The internal TFS build does not work correctly with the new
    GatherDirectoriesToRestore task since it does not use the same restore
    commands as our open builds. To unblock the build, disable this task when
    building our TFS sources in favor of the old slower way.
    
    [tfs-changeset: 1573223]

[33mcommit f1f402ed18b0e3d186365a2cd52b7d1f3f0f585e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Feb 7 21:34:04 2016 -0500

    Two perf tweaks to ArrayPool
    
    1. SelectBucketIndex is consuming ~10-15% of the time of Rent and Return.  I've changed it to use a different algorithm for log2.  For very small sizes (e.g. 16 elements), the existing algorithm is slightly faster (e.g.  ~5%), but for sizes commonly used with ArrayPool (e.g. 1K, 4K, 8K, 80K, etc.) the new algorithm is in my measurements upwards of 2x faster.  It's also relatively constant in its cost, whereas the existing algorithm gets more expensive proprtional to the number of bits set in the buffer size. Repeatedly renting and returning a 4K buffer is now ~6% faster than before. The crossover point where the old and new algorithms have the same speed is ~64 elements.
    
    2. When requesting buffers larger than the pool can store, the pool is still rounding up to the next power of 2, e.g. asking for a buffer of size 1024*1024+1 allocates a buffer of size 1024*1024*2, even though there is no corresponding bucket to eventually return it to., resulting in more memory allocated than is needed. I've fixed that.

[33mcommit 57793b5229d5da12fab153a2a3a6a5a783f05e1a[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Feb 5 20:17:24 2016 +0000

    Interpret ListInitExpression with non-void Add methods correctly.
    
    Fixes #5945
    
    Also add List Initialization Expression Tests beyond those needed
    to verify this fix.

[33mcommit e5066d378f3d881eba94ddd4df43be1046011f3f[m
Merge: e67b0c9 b70d4c2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 7 15:38:32 2016 -0500

    Merge pull request #5893 from JonHanna/expressions_dead_code
    
    Remove some unnecessary checks and dead code from Linq.Expressions

[33mcommit e67b0c933df54b787836f3540c6169b6bad65e65[m
Merge: 8323a77 76b7c42
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Feb 7 15:37:26 2016 -0500

    Merge pull request #5928 from davidsh/websocket_leak
    
    Fix gchandle leak in WebSockets.Client

[33mcommit 8323a77facccec439ee685aaed98008c894c5565[m
Merge: 9ba2967 7152971
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Sun Feb 7 12:19:52 2016 -0800

    Merge pull request #5916 from nguerrera/metadata-version-split
    
    Split S.R.Metadata v1.2 and v1.3

[33mcommit 76b7c42e19efd74905226b565162bb741233d625[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sun Feb 7 08:00:46 2016 -0800

    Address PR feedback 2
    
    Add assert in DecrementHandlesOpenWithCallback

[33mcommit 9ba2967cc0fb6ea22993b4884cf3448e8292d8e3[m
Merge: d553b6a ab7355f
Author: Jan Kotas <jkotas@microsoft.com>
Date:   Sun Feb 7 07:42:13 2016 -0800

    Merge pull request #5944 from jkotas/nonversionable
    
    Improve performance of ImmutableArray in version resilient code

[33mcommit 30abd30421289509cd3bd18a9114501afdc0fb7c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Feb 7 10:40:27 2016 -0500

    Remove Client property from TcpClient and UdpClient
    
    The property leaks through the abstraction.  It's rarely used.  And it complicates things on Unix due to exposing the underlying socket instance combined with difficulties with multiple connect calls on a single socket instance.
    
    Until we have good reason to expose it in the contract, we're removing it from the contract before it's stable.

[33mcommit d553b6a9824637f1aa164c2e80729c010ed5e232[m
Merge: 1bc77b7 9abb779
Author: Matt Ellis <matell@microsoft.com>
Date:   Sat Feb 6 23:21:56 2016 -0800

    Merge pull request #5932 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 9abb779e80ace3cfe9d0199bd70a2c8d9ab9db6e[m
Merge: 59eec29 1bc77b7
Author: Matt Ellis <matell@microsoft.com>
Date:   Sat Feb 6 21:07:22 2016 -0800

    Merge master into from-tfs
    
    Conflicts in dir.props due to Eric's TFS changes to add more directories
    to the restore list. Discarded these changes as we don't need them after
    d165a459.

[33mcommit b2fb65865bc9dfb9af729faca38f4bccb1b7b31e[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sat Feb 6 20:08:41 2016 -0800

    Revise state object Pin/Unpin design
    
    After looking at some asserts and crashes in the performance/stress tests with this PR, I discovered that the order of receiving HANDLE_CLOSING callbacks is not always the same as the order in which the handles are closed. This was causing the state object to be unpinned at the wrong time depending on async race conditions.
    
    Modified the pin/unpin design to be cleaner and use interlocks to increment/decrement the number of handles associated with the callback (at most there are two - request and websocket handles).

[33mcommit 1bc77b786662150a6b3812091dc7b905fc21e59c[m
Merge: 2bf9141 f7f280b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 6 17:47:22 2016 -0500

    Merge pull request #5922 from stephentoub/x509_perf
    
    Improve X509Chain.Build perf on Unix

[33mcommit 2bf91416c35964f70c2d260e5a172ee6fcdedc37[m
Merge: d758850 65fa171
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Sat Feb 6 13:56:04 2016 -0800

    Merge pull request #5924 from stephentoub/cert_validation_ssl
    
    Use OpenSSL for cert chain verification in CurlHandler

[33mcommit d7588500cfb2476e707bfb8bb2ccbcfd0e1d7ce1[m
Merge: a7ed0db 8b43017
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 6 16:55:49 2016 -0500

    Merge pull request #5867 from stephentoub/sockets_fixes
    
    Disable Unix workarounds for Connect'ing to multiple endpoints

[33mcommit ab7355fbdddba2b8d6af7318f31909ec3573af72[m
Author: Jan Kotas <jkotas@microsoft.com>
Date:   Sat Feb 6 10:21:34 2016 -0800

    Improve performance of ImmutableArray in version resilient code
    
    Marked a few performance critical trivial wrappers in ImmutableArray with NonVersionableAttribute. It allows them to be inlined in version resilient (readytorun) images.

[33mcommit a7ed0dbc2d090ed1d3f1c20f0b28e6ff9427a656[m
Merge: 3af0b6a a242ce4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 6 12:39:58 2016 -0500

    Merge pull request #5934 from davkean/master
    
    Update description of System.Text.Encoding.Web

[33mcommit 3af0b6a46d1b114f97054a7bc8845d1f5646b77e[m
Merge: 1196c2d d165a45
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Feb 6 12:13:34 2016 -0500

    Merge pull request #5936 from ellismg/speed-up-restore
    
    Speed up package restore

[33mcommit 9fd8dd6584bd2c300947704363f61d73124ab4c6[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Fri Feb 5 18:05:45 2016 -0800

    Modify SNI_PN* error messages in Strings.resx to match previous versions of .NET

[33mcommit d165a45910ac867fd1e175e32d196a6e50f34311[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Feb 5 14:32:13 2016 -0800

    Use GatherDirectoriesToRestore to speed up restore
    
    The new buildtools task GatherDirectoriesToRestore allows us to pass
    multiple things to a single invocation of  `dotnet restore` which saves
    us the overhead of spawing multiple `dotnet restore` in a row.  This
    gives us about a 4-5x improvement when you have to download all the
    packages and 17x improvement when you local version is up to date.

[33mcommit 6b2396f986357f8d22a6244ede01b17d7692f4ab[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Feb 5 14:22:25 2016 -0800

    Consume v3 versions of the new feeds
    
    - We have moved our feeds to our enterprise myget
      account (dotnet.myget.org). Start pulling from there and use the v3
      feeds since we are restoring with tools that understand them.
    
    - Remove some no longer needed NuGet commands and sources

[33mcommit 1196c2de171112b477323da11a027851baff539c[m
Merge: 4391a5a 4ba0cc4
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Fri Feb 5 15:45:44 2016 -0800

    Merge pull request #5935 from joperezr/FixEscapingOuterLoop
    
    Escaping Workspace property in Groovy script, and re-adding configuration group for outeloop runs

[33mcommit 4ba0cc429d3eb96679cf81dcca909343e136b039[m
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Fri Feb 5 15:38:22 2016 -0800

    Escaping Workspace property in Groovy script, and re-adding configuration group for outeloop runs

[33mcommit 4391a5a6beadd7eb689504de0f8e8e7904055745[m
Merge: 9fe09bc cfe2703
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Fri Feb 5 15:05:04 2016 -0800

    Merge pull request #5931 from joperezr/SetHomeForOuterloopRuns
    
    Setting HOME variable on outerloop Unix runs so that restore works.

[33mcommit a242ce43f794fb851ee58d147190902dbfbf92b7[m
Author: David Kean <davkean@microsoft.com>
Date:   Fri Feb 5 14:30:00 2016 -0800

    Update description of System.Text.Encoding.Web
    
    Changed the description to match the style of the other descriptions.

[33mcommit 990fdc3ea3750d7aa90a1f6b0ed77a76c3270e6a[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Feb 5 14:26:11 2016 -0800

    Address PR feedback

[33mcommit cfe27039e05c3a782d86b7b0afd4ce09dc62f905[m
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Fri Feb 5 13:34:48 2016 -0800

    Setting HOME variable on outerloop Unix runs so that restore works.

[33mcommit 59eec2953c4e9eb8bb3556275d4bf3e46f1d9b0b[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Feb 5 13:29:38 2016 -0800

    Restore the redist projects.
    
    [tfs-changeset: 1572881]

[33mcommit 9fe09bc080a404185ce73f65ca3757f4211f7b27[m
Merge: fc7e20b 06cc137
Author: Nate Amundson <naamunds@microsoft.com>
Date:   Fri Feb 5 15:24:38 2016 -0600

    Merge pull request #4643 from naamunds/AddCleanSh
    
    Add clean.sh for Linux dev workflow

[33mcommit 7152971f4a940aa897c29fcdbed8934a692a928e[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Feb 4 17:50:35 2016 -0800

    Split S.R.Metadata v1.2 and v1.3
    
    We have to lock down a v1.2 S.R.Metadata now, but there are features
    (metadata writer, signature decoder) that we're pushing out to a v1.3.
    
    Set up the build to produce both packages and configure the project
    such that the default configurations are v1.2 and the *_Future
    configurations are v1.3.
    
    Currently, v1.2 just internalizes the features of v1.3, but we can
    consider stripping them out entirely.

[33mcommit 06cc137e5911bcbc020329da249e4745c224cac1[m
Author: Nate Amundson <naamunds@microsoft.com>
Date:   Fri Feb 5 13:21:07 2016 -0800

    Add clean.sh for Linux dev workflow
    
    This script provides a convenient way to clean the local dev environment
    on Linux.  It provides options for removing the bin directory, the
    packages directory, the Tools directory, the NuGet package caches, all
    untracked files under the src directory, and all of the above.
    
    This change also utilizes the clean targets from BuildTools, and updates
    clean.cmd to exclude clean.log from being removed in the "all" option
    and check for errors from "git clean".

[33mcommit 8b430175dfd99062e7463e2a03bc35cd48044286[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Feb 4 08:00:22 2016 -0500

    Address PR feedback

[33mcommit 73eca63458ba8f6ed121cc19813b907e359a67c9[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Feb 5 11:53:46 2016 -0800

    Fix gchandle leak in WebSockets.Client
    
    The Windows implementation of WebSockets.Client leaks the WinHttpWebSocketState object. This object was being pinned by `GCHandle.Alloc(this)` in the contructor. And it was never freed.
    
    This object needs to be pinned during the WebSocket lifecycle because the address of the object is passed to native WinHTTP and used as the context value during callbacks. However, it needs to be manually freed at the proper time after all WinHTTP callbacks are done via closing down the handles.
    
    This fix adds Pin() and Unpin() methods to WinHttpWebSocketState and calls them at appropriate times. While fixing this I discovered other places where the object might be left as pinned. The current logic relies on WinHTTP calling the callback with HANDLE_CLOSING before the object would get unpinned. But since the object is pinned very early on, it's possible due to unexpected errors, that the wiring of the WinHTTP callback never gets done. And thus, the object would never have been unpinned.  This fix delays the pinning of the object until the right time where it is assured that the WinHTTP callback wiring has been completed.
    
    This logic is now similar to the state handling in WinHttpHandler. There is still a work item #2501 to merge these design implementations and share code in the future.
    
    Fixes #3256.

[33mcommit fc7e20bfc67f58d1cd19c577f1fdbdd7260e173b[m
Merge: 47fcd7a 7e46f17
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Fri Feb 5 11:42:09 2016 -0800

    Merge pull request #5911 from joperezr/EnablePortablePDBsXPlat
    
    Enable portable PDB generation for x-plat builds

[33mcommit 47fcd7aa9458ceb3f78958b255708797852f8612[m
Merge: 8670337 9839f6e
Author: Cory Rivera <corivera@microsoft.com>
Date:   Fri Feb 5 10:55:41 2016 -0800

    Merge pull request #5851 from dotnet/corivera_NamedPipesURIParsing
    
    Add URI parsing to named pipe handle creation

[33mcommit 65fa1710ebf14711a7ec9b03e00b24014e8e97eb[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Feb 5 13:01:26 2016 -0500

    Use OpenSSL for cert chain verification in CurlHandler
    
    Our certificate chain verification includes the ability to check user store certificates in addition to the root store, but it's more expensive than the default verification provided by OpenSSL, which only includes the system store.  This commit modifies our CurlHandler's VerifyCertChain implementation to first use the OpenSSL implementation, and only fall back to ours if it fails, resulting in much faster processing in https cases.

[33mcommit 86703373387d53a8157bea66ef7169719ed5f7e5[m
Merge: 109f34c 0662e3f
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Fri Feb 5 09:55:25 2016 -0800

    Merge pull request #5923 from mmitche/move-to-ubuntu-auto
    
    Move corefx to auto-imaged ubuntu images

[33mcommit 0662e3f6988f013b04805b8514703319c332bac2[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Fri Feb 5 09:49:51 2016 -0800

    Move corefx to auto-imaged ubuntu images
    
    Adding the version 'auto-or-latest' the the machine affinity.  This will cause the system to pick up the latest auto-image if there is one.  Once we have made a full transition (or as close as we can come), this version will be removed and the default non-versioned image will be updated to point to the auto-image.

[33mcommit 109f34c5b8c3512450779dc737db8ec691f49fb5[m
Merge: e336af6 f863b6f
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Feb 5 09:47:56 2016 -0800

    Merge pull request #5887 from JonHanna/fix_5886
    
    Add finalizers to Process and Ping

[33mcommit 7e46f17e92528d2cea66e4a59f1676f0d8198ce6[m
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Thu Jan 28 13:26:15 2016 -0800

    Enable portable PDB generation for x-plat builds

[33mcommit f7f280bc61eb400cdadbdfd5d425cc16e6f1e095[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Feb 5 11:02:40 2016 -0500

    Change Lists to HashSets to avoid lots of O(N) lookups
    
    We're doing a ton of calls to ```List<X509Certificate>.Contains```.  Changing these to be ```HashSet<X509Certificate>.Contains``` makes a very measurable difference.

[33mcommit 356671c22f4ecfea0c087dd59ca0512a39040231[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Feb 5 10:59:57 2016 -0500

    Improve perf of X509Certificate.GetHashCode/Equals
    
    Every call to these (which happens a lot when calling Contains on a collection of them) was cloning an array.

[33mcommit c634ec364f2729743768824a5d2586361646bd7a[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Feb 5 19:52:35 2016 +0000

    Validation call IsGenericMethodDefinition after ContainsGenericParameters
    
    While IsGenericMethodDefinition is cheaper, the normal path would have both
    these return false. Since ContainsGenericParameters entails
    IsGenericMethodDefinition we can leave testing it until
    ContainsGenericParameters has returned true, to decide on the error message.
    Hence skipping one virtual call and one branch from most method validation
    checks.

[33mcommit e336af686d6c434c22de00d3f1aa02d70e05a578[m
Merge: 9580b45 e8e5a6b
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Feb 5 00:07:42 2016 -0800

    Merge pull request #5917 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 9580b459e89c95f7adbf776673d97701e5b9e608[m
Merge: 327fb36 849d056
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Thu Feb 4 23:23:38 2016 -0800

    Merge pull request #5913 from ericstj/system.data.common-dotnet5.1
    
    System.data.common dotnet5.1

[33mcommit e8e5a6b14a8152af12a656bed4d2671cf342c213[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Feb 4 22:29:41 2016 -0800

    Deleting lock files
    
    Accidentally checked in by TFS.
    
    [tfs-changeset: 1572720]

[33mcommit 849d056706b73890dc9e6568dec627ceaa5413e7[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Feb 4 16:48:30 2016 -0800

    Resolve System.Data.Common as dotnet5.1
    
    Resolve as dotnet5.1 instead of DNXCore50

[33mcommit 8a868beabbf7aff3773d4face6d23308f1af98c7[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Feb 4 16:35:58 2016 -0800

    Merge System.Data.Common facade into main csproj

[33mcommit b885efc4c161a4abf42a4d1c324e0d6dac4a3632[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Feb 4 16:31:55 2016 -0800

    Fix System.Data.Common facade to target .NET 4.5

[33mcommit 327fb365bc7a0cc388f8151927fa552c6178dfb7[m
Merge: d0c0678 bb58fe8
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 4 21:45:31 2016 -0500

    Merge pull request #5892 from stephentoub/large_write_test
    
    Add a large write/read test for SslStream

[33mcommit d0c0678d8b010008087fd4f2522682393bd801a9[m
Merge: a766e36 fc2d68d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 4 21:43:27 2016 -0500

    Merge pull request #5897 from stephentoub/tracing_tests
    
    Fix System.Diagnostics.Tracing.Tests to build/deploy src

[33mcommit a766e364086c6cc7059159a7e391b687aaf7ab29[m
Merge: 15e235c 76ad47b
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Feb 4 18:00:15 2016 -0800

    Merge pull request #5904 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 15e235c7091b23c3710859744ede033d89e8c627[m
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Thu Feb 4 16:55:35 2016 -0800

    Portable PDB: Clarify encoding of Decimal and DateTime constants

[33mcommit 8a272e9d5e261dc64d26760a0f2eab5aa504e79a[m
Merge: c425155 3397c51
Author: Eric Eilebrecht <ericeil@users.noreply.github.com>
Date:   Thu Feb 4 16:51:21 2016 -0800

    Merge pull request #5907 from ericeil/ConnectionReset
    
    Keep accepted sockets open until the tests are done with them.

[33mcommit 8d691e95c94731d975797910a0471e499ec3516a[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Feb 4 16:00:39 2016 -0800

    Fix System.Data.Common to target dotnet5.1
    
    Previously it had a dependency on HashTable which I have ported to use
    Dictionary.
    
    Seperately it looks like we could support non-generic collections on
    dotnet5.1, but its better to get rid of that dependency since we
    consider that package legacy and Data.Common is non-legacy.

[33mcommit b70d4c29dd3175e00afdfce7831b72308a193f49[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Feb 4 19:26:32 2016 +0000

    Remove dead code from KeyedQueue helper class.
    
    Replace run-time check on impossible condition into assert.
    
    ReadOnlyCollection is tested for condition of count < 0 though
    getting here would pass through paths that would either fail or
    produce an empty collection en route.
    
    Include tests attepting all possible routes for getting such a
    bogus collection into an expression.
    
    Turn run-time check on array creation expression having array type with assert.
    
    Remove unused LogInstruction class.

[33mcommit 9839f6e11636b4c63d472b1b5143c21d0decdde6[m
Merge: e658392 c425155
Author: Cory Rivera <corivera@microsoft.com>
Date:   Thu Feb 4 16:05:48 2016 -0800

    Merge branch 'master' of https://github.com/dotnet/corefx into corivera_NamedPipesURIParsing

[33mcommit e6583927f302b30172fa50407562a52b48c47c9b[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Thu Feb 4 16:05:04 2016 -0800

    Incorporate PR comments for string parsing

[33mcommit f863b6ffe3b6b51484eaf5f07a0254f3109c94dd[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Feb 4 02:05:08 2016 +0000

    Add finalizers to Process and Ping.cs
    
    Have them call Dispose(false).
    
    SuppressFinalize(this) in constructors if they are not a derived type
    to lessen the possible negative impact on collection.
    
    Remove unnecessary SuppressFinalize(this) from ProcessModule.
    
    Fixes #5886

[33mcommit c4251554ef65d96ba4dee7f5313ae3a37da5ea19[m
Merge: f4b56ce 7088ffa
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Feb 4 15:03:38 2016 -0800

    Merge pull request #5792 from ianhays/buildcmd_nativeargs
    
    Add build.cmd property to toggle native build

[33mcommit f4b56ce040fbc879a2374a68f939198a882b642f[m
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Thu Feb 4 14:47:56 2016 -0800

    Portable PDB spec: Add root scope requirement

[33mcommit 14d29e7479936c24743bb37e321a1582e9126699[m
Merge: 2f1328e 1ff2699
Author: Eric Eilebrecht <ericeil@users.noreply.github.com>
Date:   Thu Feb 4 14:31:55 2016 -0800

    Merge pull request #5472 from ericeil/SyncPerf
    
    Improve Unix synchronous socket perf

[33mcommit 3397c51161b58bcafc2b8b8ab4d84b43b3d3b1e7[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Thu Feb 4 14:12:37 2016 -0800

    Enable tests for fixed issue

[33mcommit 1497db24c9d0cd96a64b29b7910ba7f0ce86093c[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Feb 4 12:50:42 2016 -0800

    Remove all build-time dependencies to mono.
    
    None of these checks are necessary any longer, as we have moved to using aCoreCLR for all of our .NET-related build tools.
    
    The only remaining use of anything mono-related is the PCL reference assemblies, which are not required to build.
    If the PCL reference assemblies are not found, then (harmless) build warnings will be emitted.

[33mcommit 2f1328e08b8bdc7c9a204fc4248c540beaf8d67b[m
Merge: 4e2632e 7ba745a
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Thu Feb 4 13:43:10 2016 -0800

    Merge pull request #5883 from joperezr/EnableLinuxOuterLoopCI
    
    Adding Ubuntu and OSX to the outerloop jobs

[33mcommit ef2facfa91c1681f6ab13bb4d40b68b4a839cedf[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Thu Feb 4 13:10:46 2016 -0800

    Keep accepted sockets open until the tests are done with them.
    
    Prior to this change, a GC triggered at the wrong time could cause a newly-accepted Socket to be collected and finalized, closing the connection before the other end of the socket was done.  To avoid this, we keep a reference to the new socket until the test is done with the connection.
    
    Fixes #5291, #3748, #3744, #3682, #3494.

[33mcommit 76ad47b7fd6307f9409260ba713207cf07be4397[m
Author: Khoa Dang <khdang@microsoft.com>
Date:   Thu Feb 4 12:50:31 2016 -0800

    Enable DCS surrogate support for NetNative app through rd.xml
    
    [tfs-changeset: 1572414]

[33mcommit 7088ffac5e1a7e8109beace68716e508fee1bb04[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Jan 29 13:28:37 2016 -0800

    Add build.cmd property to toggle native build
    
    Currently the native Windows build will run whenever build.cmd is called. This commit adds a toggle to run only the native or managed component. By default both are built.
    
    To build just the native components: ./build.cmd native
    To build just the managed components: ./build.cmd managed
    To build both: ./build.cmd

[33mcommit bb58fe8011d0c461a2a57faf2647fd73799f2f29[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Feb 4 14:10:00 2016 -0500

    Add large write/read test for SslStream

[33mcommit 7ba745a48394154025767b30a4858701b91a154e[m
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Wed Feb 3 15:52:47 2016 -0800

    Adding Ubuntu and OSX to the outerloop builds by calling build.sh

[33mcommit fc2d68d93615a225e2f169ad860c4d849db8fda3[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Feb 4 12:35:12 2016 -0500

    Fix System.Diagnostics.Tracing.Tests to build/deploy src
    
    The tests .csproj needed a P2P reference to the src .csproj.

[33mcommit 4e2632e194dff28fdf296e0f38c508ef0b95e532[m
Merge: ebbd57a b999431
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 4 09:55:08 2016 -0500

    Merge pull request #5835 from stephentoub/sslreadbyte
    
    Override ReadByte on SslStream

[33mcommit ebbd57a3d48289d756b557597f9f34dcbab432ef[m
Merge: f709f2e d27ef6f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Feb 4 09:35:01 2016 -0500

    Merge pull request #5891 from stephentoub/update_packages
    
    Update packages to rc3-23803

[33mcommit b999431c9c519a797aff3eb472b614e0f15c6650[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Feb 1 22:31:52 2016 -0500

    Override ReadByte on SslStream
    
    In an application that's using the Redis client library, a significant portion of the allocations are coming from calls to ReadByte on an SslStream.  Since SslStream doesn't override ReadByte, the base Stream.ReadByte is used, and it ends up allocating a temporary array to use in a call to Read.
    
    This commit adds an override of ReadByte on SslStream that returns data from the stream's internal buffer if any is available, otherwise falling back to the old behavior.
    
    On a test that repeatedly writes 1000 bytes and then reads each of those with ReadByte, allocations are reduced by 10x and throughput is doubled. (Note that removing the Interlocked.Exchange in ReadByte yields another 20% improvement in throughput, but I've left it in so as not to impact guarantees of the type.)

[33mcommit d27ef6fb6092060e643c49a670e825e0cc01ff4d[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Feb 4 07:38:24 2016 -0500

    Update packages to rc3-23803

[33mcommit f709f2e64b6541677430593bc421c4f4e6ab8d4d[m
Merge: 0ad2d38 c9ca599
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Wed Feb 3 21:29:20 2016 -0800

    Merge pull request #5885 from jhendrixMSFT/master
    
    Apply OS filtering mechanism to post-build project.

[33mcommit 01a220e4ced33dd804a655620e30e55b7940deb4[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Feb 3 23:38:49 2016 -0500

    Make TcpClient.Connect with multiple endpoints work on Unix

[33mcommit 0ad2d3836eda93708d1fa41a2e90f66d3025a339[m
Merge: e0813ed 3781c39
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 3 23:30:48 2016 -0500

    Merge pull request #5863 from stephentoub/arraypool_names
    
    Updates ArrayPool comments and names

[33mcommit e0813ed4c48bfe6776888df9dd4c7960b830974a[m
Merge: 0c14fc4 5f69b77
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 3 21:35:31 2016 -0500

    Merge pull request #5882 from bartonjs/pfx_stable_order
    
    Revert "Make PFX import tests be order-independent for now"

[33mcommit 3781c394f293634c112779a07d08edb77140b700[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Feb 3 08:14:38 2016 -0500

    Updates ArrayPool comments and names
    
    - A parameter name in the public ArrayPool surface area was incorrect: ````numberOfArrays``` implied that was how many arrays could be stored in the whole pool, whereas it's actually the number per bucket (and the pool can have multiple buckets).
    - Some of the (non-public) comments were wrong, e.g. stating that each array was of a fixed max length, whereas that's actually the max length an array can be and frequently they're shorter
    - Some of the constant names were similarly misleading
    - Other comments benefited from more elaboration

[33mcommit c9ca5995141929dcbfbfb17ab4f91b6939d10b0c[m
Author: Joel Hendrix <jhendrix@microsoft.com>
Date:   Wed Feb 3 17:26:23 2016 -0800

    Apply OS filtering mechanism to post-build project.
    
    The OS filtering properties weren't added to the post-build project
    causing their dependencies to calculate the incorrect value for
    OSPlatformConfig; e.g. instead of Windows_NT.AnyCPU.Release one would get
    AnyOS.AnyCPU.Release.
    The rename of post.msbuild is to follow suit with the other build projects
    and to prevent some properties from being dropped during the traversal
    build (see dir.traversal.targets).

[33mcommit f69a6d73f8e4cbc97a79957322bd9f7303518bfd[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Feb 3 13:52:57 2016 -0500

    Mark tests as PlatformSpecific for Windows
    
    Now that these Connect* APIs are throwing on Unix, marking a bunch of tests as Windows-only.  In doing so, I combined a bunch of tests using [Theory], so as to minimize boilerplate and the number of methods that need to be annotated as platform-specific.

[33mcommit 30bd4b79185d83f269f6a6e432881998a0158178[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Feb 3 13:49:25 2016 -0500

    Disable Unix workarounds for Connect'ing to multiple endpoints
    
    On unix, once connect fails on a socket, that socket becomes unusable for further operations, including additional connect attempts.  This is at direct odds with Socket's instance Connect methods, some of which allow for multiple connect attempts, either due to multiple IPAddresses being provided or due to a string hostname / DnsEndPoint being provided that could then result in multiple IPAddresses to be tried.
    
    We've explored multiple workarounds for this, all of which have problems.  The workaround still in the code involves creating a temporary socket for each address, connecting to it, and if that's successful then immediately disconnecting and connecting with the actual socket.  But that causes mayhem for a server not expecting that pattern, e.g. that fails if the client disconnects and attempts a reconnect.
    
    This leaves us with a few choices, none of which are great:
    1. Remove the offending Connect instance methods.  Ideally they'd be replaced with static methods, which can be implemented with POSIX-compliant behavior.  But these methods are heavily used and work on Windows.
    2. Always throw from the instance Connect methods when there's a possibility that multiple addresses will be tried, e.g. from Connect(IPAddress[], ...) but also from Connect(EndPoint) if a DnsEndPoint is specified.  This will break a lot of existing code, but it's also predictable, and developers will know quickly when using a problematic API and move away from it to supported patterns.
    3. Throw from the Connect methods if multiple addresses are actually supplied, e.g. calling Connect(IPAddress[]) with an array of length 1 would work but an array of length 2 will fail. This will allow a lot more existing code to work, but it's also very unpredictable, e.g. if a string host is provided and gets mapped by DNS to a single IPAddress in the test environment but then multiple IPAddresses in the production environment, everything will work fine locally but then fail in production.
    4. When presented with multiple addresses, try the first one, and if it fails, then throw a PlatformNotSupportedException.  This may be slightly more predictable than (3), but is still unpredictable, e.g. if a DNS server returns addresses in a different quantity or order from another server.
    
    I'm torn between (2) and (3) (and maybe (4)).  This commit implements the more conservative (2), as I expect (3) would actually cause serious problems for deployments, but we can loosen from (2) to (3) if that turns out to be better.  In the meantime, we should also seriously explore adding static methods for v1 for the same functionality (developers can also write such code themselves), and write guidance and helpers folks can use in the meantime, e.g. pseudo-code:
    ```C#
    public static async Task<Socket> Connect(
        AddressFamily addressFamily, SocketType socketType, ProtocolType protocolType,
        IPAddress[] addresses, int port)
    {
        Exception lastExc = null;
        foreach (IPAddress address in addresses)
        {
            Socket s = new Socket(addressFamily, socketType, protocolType);
            try
            {
                await s.ConnectAsync(address, port).ConfigureAwait(false);
                return s;
            }
            catch (Exception exc)
            {
                lastExc = exc;
            }
        }
    
        if (lastExc != null) throw lastExc;
        throw new ArgumentException("No addresses provided", "addresses");
    }
    ```

[33mcommit 11cb6e86655e4ae4356003559b3985839659679a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Feb 3 09:27:17 2016 -0500

    Fix translation of a couple of errno values

[33mcommit 0c14fc469a5cc3309f5f8d6f4281c4a80c36c083[m
Merge: 08ce3f5 435d023
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Wed Feb 3 16:39:38 2016 -0800

    Merge pull request #5880 from ericstj/openSslWindowsHack
    
    Temporarily permit install of OpenSSL on windows

[33mcommit 5f69b77f5128f9166894bad49ab130c7d557728e[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Feb 3 09:48:07 2016 -0800

    Revert "Make PFX import tests be order-independent for now"
    
    With the upgrade to OpenSSL >= 1.0.0 on OSX, the order seems to be stable on
    all of our platforms.

[33mcommit 08ce3f5019358d0c00ee80e208c3419c1e6e0bd0[m
Merge: 0090999 acfaf95
Author: Cory Rivera <corivera@microsoft.com>
Date:   Wed Feb 3 15:46:33 2016 -0800

    Merge pull request #5862 from JonHanna/5861
    
    Add finalizers to DbConnection and DbCommand

[33mcommit 435d0233faf1d7d8dbe1f92f1fc4f9fbca7173b9[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Feb 3 14:12:40 2016 -0800

    Temporarily permit install of OpenSSL on windows
    
    We don't currently have a cross-platform API for folks to use to create
    and RSA object https://github.com/dotnet/corefx/issues/2953, and dotnet
    cli doesn't yet support folks cross compiling by platform
    https://github.com/dotnet/cli/issues/465.
    
    As a result, this package was failing to restore when dotnet CLI
    switched to NuGet which will detect missing support at build
    time instead of allowing a file-not-found at runtime.
    
    Temporarily unblock installation of this package on Windows so that
    folks can consume the package until we have an x-plat API.

[33mcommit 0090999363925ab5df95d109d8bfb43ead234616[m
Merge: 72d8115 c8896fb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 3 16:36:50 2016 -0500

    Merge pull request #5876 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 72d81150460fef9d4fd29853fc24d8d3f63f56ea[m
Merge: 3748f52 5d60674
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Wed Feb 3 13:33:37 2016 -0800

    Merge pull request #5869 from bartonjs/x509tests
    
    Clean stale [ActiveIssue]s from X509Certificates tests

[33mcommit 3748f52636a28f7907d96e034deb4588b8b4c490[m
Merge: 71cef90 c2d5b8d
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Wed Feb 3 12:51:19 2016 -0800

    Merge pull request #5669 from ericstj/archDocs
    
    Move NETStandard docs and rename, add doc for NETStandardApp

[33mcommit 71cef9088d23b7c30c2d27226ffadee02791c3c4[m
Merge: 8c977c0 79241d5
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Wed Feb 3 12:31:00 2016 -0800

    Merge pull request #5872 from tarekgh/AvoidBufferOverrun
    
    Avoid buffer overrun when calling gethostname

[33mcommit c8896fb3a3346326fb670fca5632527fc0eaf180[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Feb 3 11:28:37 2016 -0800

    Add packages for UWP 10 RTM - shared library
    
    These contain the same libraries shipped at UWP RTM, repackaged in the
    latest nuget format (netstandard, runtime packages, etc).
    
    We use them as the baseline for package dependencies so that we can have
    CoreFx packages use updated packages with netstandard support without
    breaking shared library.
    
    Directory structure:
    Folder per package that will be redistributed.
    
    Lib folder contains a deployment project (depproj) to restore and wrap
    the old implementation DLLs.
    
    We reuse the ref depproj's in the src tree to restore and wrap the old
    reference DLLs.
    
    New package projects are created depending on what type of project we
    are trying to redist.
    
    Standalone packages contain a single package,  redisting ref and lib.
    
    Runtime packages with API change in latest contain a reference package
    redisting ref, and runtime packages redisting lib.
    
    Runtime packages with no API change in latest contain runtime packages
    redisting lib, and a validation-only package for reference.  These
    validation-only packages do not actually build any output since the live
    reference packages are sufficient (no API change).
    
    In any case where we needed to insert a version that would collide with
    the latest package version we bumped up the current package version.
    
    Here's a table of what is contained here:
    
    Package name | UWP RTM version | Live version | What we need to ship
    -------------|-----------------|--------------|---------------------
    System.Collections | 4.0.10.0 | 4.0.11.0 | runtime packages
    System.Collections.Concurrent | 4.0.10.0 | 4.0.11.0 | pre-versioned standalone package
    System.Diagnostics.Tracing | 4.0.20.0 | 4.1.0.0 | pre-versioned ref + runtime packages
    System.Dynamic.Runtime | 4.0.10.0 | 4.0.11.0 | runtime packages
    System.IO | 4.0.10.0 | 4.1.0.0 | pre-versioned ref + runtime packages
    System.Linq | 4.0.0.0 | 4.0.1.0 | pre-versioned standalone package
    System.Linq.Expressions | 4.0.10.0 | 4.0.11.0 | runtime packages
    System.ObjectModel | 4.0.10.0 | 4.0.11.0 | pre-versioned standalone package
    System.Reflection.Extensions | 4.0.0.0 | 4.0.1.0 | runtime packages
    System.Reflection.Primitives | 4.0.0.0 | 4.0.1.0 | runtime packages
    System.Reflection.TypeExtensions | 4.0.0.0 | 4.1.0.0 | pre-versioned ref + runtime packages
    System.Resources.ResourceManager | 4.0.0.0 | 4.0.1.0 | runtime packages
    System.Runtime.Extensions | 4.0.10.0 | 4.1.0.0 | pre-versioned ref + runtime packages
    System.Runtime | 4.0.20.0 | 4.1.0.0 | pre-versioned ref + runtime packages
    System.Text.RegularExpressions | 4.0.10.0 | 4.0.11.0 | pre-versioned standalone package
    
    This change also ensures that our pre-versioned packages include support
    for dotnet5.4, and therefor dnxcore50.  This garuntees that if someone were
    to upgrade an individual package from RTM we still support all frameworks
    that were supported at UWP RTM.
    
    This will likely never occur since we'll produce a new lineup that uses
    the latest runtime packages on DNXCore50, but we should preserve our
    compat promise without requiring folks to update their lineup.
    
    This is part of the work for https://github.com/dotnet/corefx/issues/5707.
    /cc @weshaggard @chcosta
    
    [tfs-changeset: 1571918]

[33mcommit 8c977c03d7c527556e2076ee4fb5ad192c8951d0[m
Merge: 22e9b01 73c6e45
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Feb 3 14:06:28 2016 -0500

    Merge pull request #5870 from stephentoub/remove_linq_console
    
    Remove System.Linq dependency from System.Console

[33mcommit 79241d5d4297eb026674a694870ef848f00b4067[m
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Wed Feb 3 10:44:06 2016 -0800

    Avoid buffer overrun when calling gethostname
    
    gethostname can truncate the returned host name up to the buffer size.
    in that case the null termination will not be stored.
    the change here is to force null termination

[33mcommit 1ff26995b9a208aae98b555b105a38de53ac8bec[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Wed Feb 3 10:25:41 2016 -0800

    Disable AcceptV6BoundToAnyV4_CantConnect on Unix due to #5832.

[33mcommit cb87043f798700b02cd3d91562d46ab1e787a8eb[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Wed Feb 3 10:23:17 2016 -0800

    Disable AcceptV4BoundToSpecificV6_CantConnect on Unix due to #5832.

[33mcommit 22e9b017ad332bb5a52453889a534200e4d95fa1[m
Merge: f8426ce d3d6c2d
Author: Immo Landwerth <immo@landwerth.net>
Date:   Wed Feb 3 10:15:05 2016 -0800

    Merge pull request #5824 from terrajobst/terrajobst/platform-names-terms
    
    Add table of terms

[33mcommit d3d6c2ddf6bbd826e27d135fc90f5a1d2bde0252[m
Author: Immo Landwerth <immol@microsoft.com>
Date:   Wed Feb 3 10:05:42 2016 -0800

    Rename document to glossary
    
    This also changes the headings of the document to structure it a bit
    better: first a section for terms, then a section for platforms, with
    subsections for each platform.

[33mcommit 35a4e2bd32c534271938d4630e7924f54091af0b[m
Author: Immo Landwerth <immol@microsoft.com>
Date:   Mon Feb 1 10:39:09 2016 -0800

    Add table of terms
    
    The document uses many terms that aren't defined. In order to avoid
    breaking the flow of the document, it's best if those are defined at
    the top of the file.

[33mcommit 73c6e4559c2209ef076742415cce3e62457b19b9[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Feb 3 12:31:42 2016 -0500

    Remove System.Linq dependency from System.Console

[33mcommit 5d60674b39ebdad1f12de53ad3078591b83ac404[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Feb 3 09:16:48 2016 -0800

    Remove stale ActiveIssue attributes from X509Certificates tests
    
    Some of the tests were working, due to their issues having been fixed.
    
    Some of the tests were still failing, due to PlatformNotSupportedException.
    These tests were split into a Windows version and a Unix version.
    
    One test (TestLoadSignedFile) is still disabled, but now with the correct issue
    number.
    
    The X509CertStoreChain test wasn't providing unique value, while being written
    in a manner that wouldn't work on Unix (no LM\My store), so it was deleted.

[33mcommit 27ec5c3eac78f9aadeda424193fcbca3aec24b17[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Feb 3 09:08:13 2016 -0800

    Add test to import invalid data via X509Cert2Collection.Import
    
    On Windows a CertificateException (derivative) was being thrown, on
    Unix a NullReferenceException was being thrown.  Fixed the Unix behavior.

[33mcommit acfaf95fba858f7710177b9054194e2741480915[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Feb 3 13:21:33 2016 +0000

    Add finalizers to ‎Data.Common classes with Dispose(bool) methods.
    
    Also suppress them in derived classes that don't need them.
    
    Fixes #5861
    
    Closes #5841

[33mcommit f8426ce7050876dd745924ffcc8bbad476babb26[m
Merge: be5b0fc 37aa300
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 2 22:12:48 2016 -0500

    Merge pull request #5855 from ellismg/add-ubuntu-15-10-runs
    
    Add Ubuntu 15.10 Runs

[33mcommit be5b0fcfbb61096abd47000f800ed15d229493e2[m
Merge: 3b4c652 f71d339
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 2 22:10:45 2016 -0500

    Merge pull request #5856 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 3b4c652c6dbeaa92413cddd843f7590a57f1028d[m
Merge: b97d09e fbd2e2a
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Tue Feb 2 18:58:13 2016 -0800

    Merge pull request #5850 from bartonjs/ecdh_keys_in_ecdsa
    
    Permit ECDH keys in ECDsaCng objects for PFX compatibility

[33mcommit 5d9e72d546a8fe9b96dcbd776b9e578b20eae1f6[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Tue Feb 2 17:58:37 2016 -0800

    Add NP default path when using only server name in connection string

[33mcommit b97d09e740c8dc15fb3859b0c5e763c4c770ebab[m
Merge: 3ddf3cc 010801c
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Feb 2 17:51:44 2016 -0800

    Merge pull request #5846 from davidsh/default_creds
    
    Fix HttpClientHandler UseDefaultCredentials=false

[33mcommit f71d339aa587c9d6c1ea12441bada92443a26db9[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Feb 2 17:21:46 2016 -0800

    Add Red Hat Packages
    
    I've updated the RID graph to allow us to share assets between RHEL and
    CentOS when possible.  Since CentOS is downstream of RHEL with minimal
    changes, the binaries we produce are usually compatible. If we hit a case
    where that doesn't hold, we can produce packages specific for a RID.
    
    At some point we should explore removing the centos.7.1 RID. I don't
    believe that any of our tools can ever generate it (since they use
    /etc/os-release VERSION_IDs which CentOS does not change on point
    versions).
    
    [tfs-changeset: 1571563]

[33mcommit 37aa3002a62d767f256c8bf7634671fe4ad2446e[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Feb 2 16:21:18 2016 -0800

    Add Ubuntu 15.10 Runs
    
    These are per merge, not per PR.  Part of #5349

[33mcommit 91d71c7f6ccbd0590e2d70d4aecc6433c114905f[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Tue Feb 2 15:25:03 2016 -0800

    Add URI parsing to named pipe handle creation

[33mcommit fbd2e2a1b9bcbee61174228c8360f4f3842db33a[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Feb 2 08:19:42 2016 -0800

    Permit ECDH keys in ECDsaCng objects for PFX compatibility
    
    When Windows cannot determine that a private key is ECDSA-only it calls
    the key ECDH, but the ECDH key handle can be used for both key
    agreement and signatures.  Therefore, to interop with ECC PFX files created
    on other systems, we should allow both ECDH and ECDSA keys into the
    ECDsaCng object.

[33mcommit 010801cbdfcb4f64152d2ba29da541ca395d0a8e[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Feb 2 10:36:31 2016 -0800

    Fix HttpClientHandler UseDefaultCredentials=false
    
    HttpClientHandler (on Windows) was attempting to use default credentials against a server that needed auth even when the property .UseDefaultCredentials was set to false.
    
    In order to map the different HttpClientHandler properties to the WinHttpHandler properties, the HttpClientHandler .UseDefaultCredentials. needs to turn on/off two credentials related properties of WinHttpHandler, .ServerCredentials and .DefaultProxyCredentials. However, it was only toggling the single .ServerCredentials property. The fix is to update both properties accordingly.
    
    Fixes #5045.

[33mcommit 3ddf3cc8b8db21873d3ab22af072dfc2d256f641[m
Merge: b9ace31 c25eb11
Author: Cory Rivera <corivera@microsoft.com>
Date:   Tue Feb 2 10:41:24 2016 -0800

    Merge pull request #5798 from dotnet/corivera_NamedPipes
    
    Enable Named Pipes in Managed SqlClient

[33mcommit b9ace31149d1bda9692d3277183ded91d77db4d3[m
Merge: c88441e 51128fd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 2 11:49:47 2016 -0500

    Merge pull request #5837 from stephentoub/crypto_readwritebyte
    
    Override ReadByte and WriteByte on CryptoStream

[33mcommit c88441ee68aa6fb9de73e0401f5e828c618c75b3[m
Merge: 6633c64 b18974a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 2 08:10:15 2016 -0500

    Merge pull request #5836 from JeremyKuhne/4855
    
    Fix StringBuffer.Trim buffer underrun

[33mcommit 6633c646222687721f3ed6ac9434c740e7d394c4[m
Merge: 24a2335 1dfe38a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Feb 2 08:09:02 2016 -0500

    Merge pull request #5830 from KrzysztofCwalina/WebEncoderDocs
    
    Added doc comments to System.Text.Encodings.Web

[33mcommit 24a2335a0a3d8f7977b31ab8d27fe815c505821f[m
Merge: a8c805f ccfe6b5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 1 23:46:06 2016 -0500

    Merge pull request #5834 from mellinoe/disable-yawpitchroll2
    
    Disable Matrix4x4.CreateFromYawPitchRoll test on OSX

[33mcommit 51128fd20d4d33866e9cab4c109b97b306eb2cf5[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Feb 1 23:14:40 2016 -0500

    Override ReadByte and WriteByte on CryptoStream
    
    Rather than using the base ReadByte and WriteByte methods, which allocate temporary arrays and delegate to Read and Write, respectively, this commit adds overrides of ReadByte and WriteByte to CryptoStream.  In a test that uses these methods repeatedly with AES to write and read 10MB one byte at a time, write throughput was improved by ~5x and read throughput was increased by ~3x.  For both read and write, allocations were reduced by ~10x.

[33mcommit b18974a5e15676338bd7f6edfb86e1436fb434cf[m
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Mon Feb 1 20:19:55 2016 -0800

    Fix StringBuffer.Trim buffer underrun
    
    Validate we already haven't hit the start of the buffer before derefing the
    pointer.

[33mcommit a8c805f100ccf2bbbdc14f0ed8e426b9e13529df[m
Merge: d12d21e 5149c7f
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Mon Feb 1 18:55:12 2016 -0800

    Merge pull request #5823 from tmat/NonGenericBlobEncoders
    
    Remove usage of generics from BlobEncoders to avoid hitting issues in NGEN/.NET Native

[33mcommit d12d21e6f845638ed1413df0d379246681be42ec[m
Merge: aed2523 3ce97a4
Author: Gaurav Khanna <gkhanna@microsoft.com>
Date:   Mon Feb 1 18:09:06 2016 -0800

    Merge pull request #5799 from gkhanna79/ALCTests
    
    Tests for validating Default Assembly Load Context support

[33mcommit aed25230e9c2d0c12a1ea11314a4235e42a749ea[m
Merge: 43a9eb3 1722d5a
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Mon Feb 1 18:08:00 2016 -0800

    Merge pull request #4902 from AlgorithmsAreCool/master
    
    Fix SqlParameter Scale and Precision inheritance

[33mcommit c25eb11914d78c882a7dcf65677a8448e7721a34[m
Merge: c1b7337 43a9eb3
Author: Cory Rivera <corivera@microsoft.com>
Date:   Mon Feb 1 18:02:54 2016 -0800

    Merge pull

[33mcommit c1b73379fb32787e50420cc59baec219dcbfc8ee[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Mon Feb 1 18:01:09 2016 -0800

    Refactor Named Pipe handle creation into a separate method in SNIProxy

[33mcommit ccfe6b516ea88e03b42b599b54a66197d5d51ddc[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Feb 1 17:24:28 2016 -0800

    Disable Matrix4x4.CreateFromYawPitchRoll test on OSX
    
    This one is seeing bizarre intermittent failures in the OSX CI. Investigation is still pending

[33mcommit 1dfe38aeb2811fbbd6d4de36d210f060e80d50a6[m
Author: Krzysztof Cwalina <kcwalina@microsoft.com>
Date:   Mon Feb 1 14:03:55 2016 -0800

    Added doc comments to System.Text.Encodings.Web

[33mcommit 43a9eb379e950dce91437b889e8bd8759190f007[m
Merge: b1c651f 9b06a62
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 1 20:01:48 2016 -0500

    Merge pull request #5827 from bartonjs/x509coll_remove_exceptions
    
    X509Certificate2Collection.Remove should throw when the item is not p…

[33mcommit 81ac5116573351c93db029b4948dc6b9cfa84595[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Mon Feb 1 16:10:09 2016 -0800

    Disable AcceptV6BoundToSpecificV4_CantConnect on Unix due to #5832.

[33mcommit 3ce97a4701751feed9e5a132ff480e9e9208ec85[m
Author: Gaurav Khanna (CLR) <gaurav.khanna@microsoft.com>
Date:   Fri Jan 29 06:48:21 2016 -0800

    Add Default AssemblyLoadContext tests

[33mcommit 9b06a623830c8ccc7242cef9e0dcafb334304900[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Feb 1 13:23:12 2016 -0800

    X509Certificate2Collection.Remove should throw when the item is not present
    
    During the migration to .NET core the exception for calling Remove on an
    item not present in the collection was lost.
    
    When testing the exception behavor for X509Certificate2Collection, which
    is done through RemoveRange, also verified that the "undo remove" catch
    preserves only Equals semantics, not ReferenceEquals semantics.

[33mcommit b1c651fb50cb024d0389e32fab3abffc33bb3194[m
Merge: e32f8f4 3ddc8ec
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Mon Feb 1 14:20:57 2016 -0800

    Merge pull request #5795 from ericstj/runtime.packages.for.NETStandard.Platform
    
    Add Runtime packages for NETStandard.Platform

[33mcommit c0457bc738d8bb0b3d8ad4b75a2eba62ecc0ef18[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Mon Feb 1 13:40:19 2016 -0800

    Revert "Shutdown server socket to cancel the pending Accept call. Dispose does not cancel Accept."
    
    It looks like this trick does not work on Windows or OSX, both of which return errors if Shutdown is called on an unconnected socket.
    
    This reverts commit bc8b171471e74f2c3301ae47bdbdcfd63d6d8430.

[33mcommit e32f8f408bbfa92e8357c4be4697f1c24343f94e[m
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Mon Feb 1 12:49:27 2016 -0800

    Update Ecma-335-Issues.md

[33mcommit 7152c3d76c9b4915acf77eb89aa33111ec067901[m
Merge: 216da81 4b7d4fb
Author: Immo Landwerth <immo@landwerth.net>
Date:   Mon Feb 1 12:33:11 2016 -0800

    Merge pull request #5788 from SamuelEnglard/patch-1
    
    Update platform-names.md

[33mcommit bc8b171471e74f2c3301ae47bdbdcfd63d6d8430[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Wed Jan 27 11:55:53 2016 -0800

    Shutdown server socket to cancel the pending Accept call.
    Dispose does not cancel Accept.

[33mcommit 9ea114aa583f677d0b9f901ea6199218fb0628cc[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Fri Jan 15 14:52:22 2016 -0800

    Remove unnecessary volatile annotation

[33mcommit e7eb47f14c912112a946d819f8d0f6a532e7e3b7[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Mon Jan 11 15:27:28 2016 -0800

    Move sockets to non-blocking mode only if the user requests it, or we begin an async operation.  For blocking sockets that never start an async operation, this avoids the overhead of emulating blocking semantics on top of a non-blocking socket.

[33mcommit 216da816d137d039aa4c9d2abaf231ada9a71faf[m
Merge: 60ea841 ea2329a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 1 15:24:55 2016 -0500

    Merge pull request #5790 from ericeil/SyncPerfDev
    
    Disable multiple connect attempts per socket on Linux.

[33mcommit 4b7d4fb373d9acebe13bd5f99e5dd0636ff3ad6f[m
Author: Shmueli Englard <shmueli.yosef@englard.net>
Date:   Mon Feb 1 14:42:37 2016 -0500

    Removed explicit list of platforms for mono
    
    Instead linked to mono webpage instead
    https://github.com/dotnet/corefx/pull/5788#discussion_r51467554

[33mcommit 27fe5bcc419d0df391dc67fad157cdd7ccb36724[m
Author: Shmueli Englard <shmueli.yosef@englard.net>
Date:   Mon Feb 1 14:39:12 2016 -0500

    Spelling mistake
    
    https://github.com/dotnet/corefx/pull/5788#discussion_r51467554

[33mcommit 62ccab119f9c3d4d139f393538eace4f432cc2c1[m
Author: Shmueli Englard <shmueli.yosef@englard.net>
Date:   Mon Feb 1 14:30:01 2016 -0500

    Spelling mistake
    
    https://github.com/dotnet/corefx/pull/5788#discussion_r51466323

[33mcommit 24aa5c28a709728d045e7c191d10a7d52e6c9b64[m
Author: Shmueli Englard <shmueli.yosef@englard.net>
Date:   Mon Feb 1 14:29:26 2016 -0500

    Spelling mistake
    
    https://github.com/dotnet/corefx/pull/5788#discussion_r51466115

[33mcommit a9460972813210f9ae093b6087202352aaa2e55e[m
Author: Shmueli Englard <shmueli.yosef@englard.net>
Date:   Mon Feb 1 14:28:53 2016 -0500

    Removed exact .NET version
    
    https://github.com/dotnet/corefx/pull/5788#discussion_r51466079

[33mcommit 61b4aeece6cc2635ee8262114a2349a59ed7bbe9[m
Author: Shmueli Englard <shmueli.yosef@englard.net>
Date:   Mon Feb 1 14:27:39 2016 -0500

    Spelling mistake
    
    https://github.com/dotnet/corefx/pull/5788#discussion_r51466502

[33mcommit bf73c68d90f8a78c1400d5e599475337d2fff010[m
Author: Shmueli Englard <shmueli.yosef@englard.net>
Date:   Mon Feb 1 14:04:26 2016 -0500

    Spelling mistake
    
    https://github.com/dotnet/corefx/pull/5788/files#r51463232

[33mcommit 5149c7f0959cd1a70093627b5427751141ae944c[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Mon Feb 1 11:01:23 2016 -0800

    Remove usage of generics from BlobEncoders to avoid hitting issues in NGEN/.NET Native

[33mcommit ea2329a7009b154f292461c96af6d97a6dafcdb1[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Mon Feb 1 10:35:48 2016 -0800

    Disable multiple connect attempts per socket on Linux.  This does not appear to work correctly.
    Fixes #5754

[33mcommit 7000023f729abe20337ed91816c019744b6a6a5c[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Mon Feb 1 10:32:36 2016 -0800

    Revert "Disable multiple connect attempts per socket on Linux.  This does not appear to work correctly. Fixes #5754"
    We need to check in the managed code changes first.  The native changes can come later, after we have a new build of System.Net.Sockets that doesn't depend on them.
    This reverts commit f1914d51ec5c358ac36918d0e040539f108b54bb.

[33mcommit 7a27e78b014fbb9061a12ef4ca8c2a959bed8a8b[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Fri Jan 29 10:55:45 2016 -0800

    Disable multiple connect attempts per socket on Linux.  This does not appear to work correctly.
    Fixes #5754

[33mcommit 60ea841f1b91c3df5d1bb66a7648c62d04aabd97[m
Merge: 979fd15 a7dbce7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 1 13:28:46 2016 -0500

    Merge pull request #5816 from stephentoub/arraypool_docs
    
    Update ArrayPool docs

[33mcommit 979fd1559764c82d03c1a426625ca2a5ce7b0ef6[m
Merge: 99b233e 25a9791
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 1 13:25:50 2016 -0500

    Merge pull request #5804 from stephentoub/bufstream_cov
    
    Add some more test coverage for BufferedStream

[33mcommit 99b233e2e7cf19152f793cc02ef6255ab565d0ca[m
Merge: 8dce51e 31a89ea
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 1 13:25:41 2016 -0500

    Merge pull request #5808 from stephentoub/deflatestream_readbyte
    
    Override ReadByte on DeflateStream and GZipStream

[33mcommit 3625db83c57e0d331ddaad1681f9557a89a57d22[m
Author: Shmueli Englard <shmueli.yosef@englard.net>
Date:   Mon Feb 1 13:11:52 2016 -0500

    Removed quotes around .NET in UWP section
    
    https://github.com/dotnet/corefx/pull/5788/files#r51453460

[33mcommit 3ddc8ec2cf180a0beb22037f827fbf10cb3692d6[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Jan 29 13:43:08 2016 -0800

    Add Runtime packages for NETStandard.Platform
    
    This changes all the packages in NETStandard.Platform
    to be split into ref/impl packages.
    This enables the implementation packages to be different
    for different runtimes, such as the UWP case where we
    want to keep the packages consistent with the shared library.

[33mcommit 8dce51e259b502843a25cd21fadc012399d4b354[m
Merge: cda5825 571d32e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Feb 1 11:35:25 2016 -0500

    Merge pull request #5814 from davidsh/requests_fix
    
    Fix HttpWebRequest to allow content-related headers without content

[33mcommit 142397f8e94ee8052dffc3c2d974457e6589fa80[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Mon Feb 1 13:03:58 2016 +0000

    Inline selector use in aggregate methods.
    
    Change all selector-taking aggregate methods to perform the operation
    directly rather than calling Select followed by the non-selector-taking
    form.
    
    Fixes #5549

[33mcommit cda5825183e3eeeb6f0549c0f613633b5d8a0a0e[m
Merge: 515ce81 3b1efe2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Jan 31 23:35:54 2016 -0500

    Merge pull request #5802 from stephentoub/test_projects
    
    Add several missing test projects

[33mcommit 515ce8168626b1a8c8ea3de39b4dfbb17f5d9cbe[m
Merge: c3af022 5ae09f3
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Jan 31 23:33:56 2016 -0500

    Merge pull request #5810 from stephentoub/enum_parse_tests
    
    Add more tests for Enum.Parse/TryParse

[33mcommit c3af022645c8d64682a6fe436524c0b5d5a38494[m
Merge: 4d357bc 791c895
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Jan 31 23:32:13 2016 -0500

    Merge pull request #5817 from stephentoub/disable_peerwaiting_test
    
    Disable WaitForPeerProcess test

[33mcommit 791c89577430839c1b358f804d7b5da2cfbd2125[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Jan 31 22:42:25 2016 -0500

    Disable WaitForPeerProcess test

[33mcommit 4d357bc2bdb685b8581a6a1d3b42eed0c8a610cb[m
Merge: dacf226 0caddc9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Jan 31 22:39:47 2016 -0500

    Merge pull request #5815 from stephentoub/disable_starttime_test
    
    Disable TestStartTimeProperty test

[33mcommit a7dbce70a055d30dfa75f3820f591cb8d1f3c57a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Jan 31 22:39:12 2016 -0500

    Update ArrayPool docs
    
    Fix up the XML comments a bit, both in substance and in syntactic correctness.  Also enable them to be built so that they're verified by the compiler and so that a documentation file is generated.

[33mcommit 3b1efe2956682a5a240f9354787e05aab1b3edfc[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Jan 31 21:55:10 2016 -0500

    Add several missing test projects
    
    Adding these gives us a place to put tests for the associated libraries, and also ensures that the libraries show up in code coverage.  Each library is empty with the exception of a single test that's necessary for code coverage to pick it up.  includes skeleton projects for:
    - Microsoft.CSharp
    - Microsoft.VisualBasic
    - Microsoft.Win32.Registry.AccessControl
    - System.Data.Common
    - System.IO.FileSystem.AccessControl
    - System.Reflection.Context
    - System.Security.Claims
    - System.Threading.AccessControl

[33mcommit 571d32e52a0fe54d91928a997deecc025ca48cf0[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sun Jan 31 18:49:37 2016 -0800

    Address PR feedback

[33mcommit 5ae09f3202954192a2a766eb287a8f657ee42760[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Jan 30 11:59:34 2016 -0800

    Add more tests for Enum.Parse/TryParse

[33mcommit 0caddc91f31e9e0f6fe1e8d600707f33c79ae99a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Jan 31 21:33:22 2016 -0500

    Disable TestStartTimeProperty test

[33mcommit dacf226278a623fb361e930bc196aed5921bc5fe[m
Merge: 8ed2962 9895e0b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Jan 31 21:28:45 2016 -0500

    Merge pull request #5812 from mirhagk/master
    
    Fixed typo in unit test name

[33mcommit e92b36573e9f00ace83eefda9cea96d19861b2e8[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sun Jan 31 17:59:33 2016 -0800

    Fix HttpWebRequest to allow content-related headers without content
    
    HttpWebRequest, part of the System.Net.Requests contract, has historically allowed any request header to be sent. However, in CoreFx it is built on top of System.Net.Http. And System.Net.Http has a stricter object model where it requires headers to be added only to specific collections.
    
    The bug was trying to add a content-related header without any content being sent. This worked in .NET Framework (Desktop). While we encourage developers to migrate to the newer System.Net.Http library, we try to maintain app-compat where possible for HttpWebRequest.
    
    The fix is to internally create an empty HttpContent object when calling into System.Net.Http and place the content-related headers into that collection.
    
    Fixes #5565.

[33mcommit 9895e0b81886d8d6029966ebedf1d12de4b74e20[m
Author: mirhagk <mirhagk@gmail.com>
Date:   Sun Jan 31 19:11:55 2016 -0500

    Fixed typo in unit test name

[33mcommit 8ed29621f59b74d881421c9df2d4d9c13916653c[m
Merge: 4fedb72 f2124b4
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Sun Jan 31 11:25:57 2016 -0800

    Merge pull request #5719 from tmat/PdbStreamValidation
    
    Disallow nil MethodDef token as an entry-point in Portable PDB

[33mcommit ec09d5a935794e47011c1d7539f1cb3fb9a0804f[m
Author: Shmueli Englard <shmueli.yosef@englard.net>
Date:   Sat Jan 30 20:48:14 2016 -0500

    Added what NGEN stands for.
    
    https://github.com/dotnet/corefx/pull/5760#discussion_r51316097

[33mcommit 4fedb72e274686cbe523261ae3f7b7ae9e2e314d[m
Merge: 8ef9ca9 504b9cc
Author: Jan Kotas <jkotas@microsoft.com>
Date:   Sat Jan 30 05:56:24 2016 -0800

    Merge pull request #5807 from jkotas/globalization
    
    Unique names for GlobalizationNative exports

[33mcommit 8ef9ca9eaed98334b67a53aae3eefea3ae8e0845[m
Merge: b71d418 682c7bd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Jan 30 00:19:47 2016 -0800

    Merge pull request #5809 from stephentoub/disable_process_test
    
    Disable failing TestProcessStartTime test

[33mcommit 682c7bdbc221a4871c916274318663fe492948c0[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Jan 30 00:14:21 2016 -0800

    Disable failing TestProcessStartTime test

[33mcommit 31a89eadb6930701a69bd3501130de5703138b3b[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 29 23:23:12 2016 -0800

    Override ReadByte on DeflateStream and GZipStream
    
    Improves throughput of ReadByte by ~15-20% and mostly eliminates involved allocations.

[33mcommit 25a979146d450fb2d2a631291f8aa1e9718452c1[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 29 22:35:49 2016 -0800

    Add some more tests for BufferedStream

[33mcommit b71d4189f0314cf4ac7f43d06f65b0abedc254d3[m
Merge: fe8384b 6dce260
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 29 23:23:49 2016 -0800

    Merge pull request #5803 from stephentoub/fix_headers
    
    Fix the license header on a few files

[33mcommit ccb1ad1a52e6eaea694278b255f7f755f264a18c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 29 22:34:39 2016 -0800

    Remove dead code from BufferedStream

[33mcommit 6dce260af33acdc30d16564f891df7035f07007d[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 29 22:10:31 2016 -0800

    Fix the license header on a few files
    
    These snuck in concurrently with the license header changes.

[33mcommit fe8384b6a00f5e2945f7ec0e4f6b36b77783192f[m
Merge: 495dc2c b7569db
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 29 21:40:58 2016 -0800

    Merge pull request #5752 from Priya91/osxfailures
    
    Fix Process.StartTime implementation on OSX.

[33mcommit 495dc2cba1972792f73c19ed653a610e1dcb7af6[m
Merge: ed500af a2ecbb3
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 29 21:40:44 2016 -0800

    Merge pull request #5747 from stephentoub/dt_format_test
    
    Add test for DateTime parsing

[33mcommit ed500afdc2d7a745e0c0ed7de934cd5b28c69579[m
Merge: cafa9d9 372c940
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 29 19:58:12 2016 -0800

    Merge pull request #5801 from stephentoub/upgrade_dependencies
    
    Update dependencies to rc3-23729

[33mcommit cafa9d92905d7580a456da44cfb57210791144df[m
Merge: 694a869 3e87625
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 29 19:26:34 2016 -0800

    Merge pull request #5794 from hughbe/path-getdirectoryname
    
    Remove dead code from System.IO.Path.GetDirectoryName

[33mcommit 694a8698952eb1aaee20ad9efa8b2733728faa8a[m
Merge: 1295b0a 4ddadca
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 29 19:25:34 2016 -0800

    Merge pull request #5797 from krytarowski/netbsd-support-1
    
    Add new platform to build.sh: NetBSD

[33mcommit 504b9ccdcb4d268995f1b5258db1bfb5ddb602f5[m
Author: Jan Kotas <jkotas@microsoft.com>
Date:   Fri Jan 29 18:48:52 2016 -0800

    Unique names for GlobalizationNative exports
    
    - CoreFX counter part of https://github.com/dotnet/coreclr/pull/2917.
    - Refactored related Windows interop files to follow the convention

[33mcommit 372c940deee1f81c452e69a0ad46ae9f18f6d803[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 29 18:11:41 2016 -0800

    Update dependencies to rc3-23729

[33mcommit 1295b0afba23e1d77477d1677d6d4c90ee8ff3b5[m
Merge: 6e979ae fd2070e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 29 17:58:37 2016 -0800

    Merge pull request #5674 from bjjones/zlib-intel
    
    Build clrcompression.dll with optimized Zlib-Intel

[33mcommit 3f5dda6adcb04b0a79706473e0b06cdfc4c1de27[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Fri Jan 29 17:20:03 2016 -0800

    Remove MANAGED_SNI flags from SNINativeMethodWrapper.Windows.cs

[33mcommit 4c7abace79d58b1c20ddf6035200d9ef3a171129[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Fri Jan 29 17:09:52 2016 -0800

    Adding updated project.json

[33mcommit 4ddadca29f3d7785adc0aef82c1ccfc83407850b[m
Author: Kamil Rytarowski <n54@gmx.com>
Date:   Sat Jan 30 02:03:48 2016 +0100

    Sort platforms alphabetically in build.sh

[33mcommit 6133804a5073fa6fcab6c86e89e265051793473a[m
Author: Kamil Rytarowski <n54@gmx.com>
Date:   Sat Jan 30 02:00:35 2016 +0100

    Add new platform to build.sh: NetBSD

[33mcommit 6e979ae5f7d16ed1edacbbe3163f59b675837bb8[m
Merge: 3c86ba9 890fc65
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 29 16:53:59 2016 -0800

    Merge pull request #5791 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit b7569dbc9a6cc28e277c613e482b673ef47e7c78[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Fri Jan 29 16:39:56 2016 -0800

    Reduce the lower boundary for testing Process.StartTime.

[33mcommit a3da4301ae9d21b2efb89cf2ce395eff104a9559[m
Merge: c503671 3c86ba9
Author: Cory Rivera <corivera@microsoft.com>
Date:   Fri Jan 29 16:48:51 2016 -0800

    Merging pull

[33mcommit 3e8762564a214ed601271b12abaf2793bc0be0e7[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Fri Jan 29 23:57:24 2016 +0000

    Remove dead code from System.IO.Path.GetDirectoryName
    
    - `int i` was just assigned to path.Length, so there is no point in
    setting it to the same value again
    - since path.Length is the same, `i!=root`, as we just checked above if
    `i>root`
    
    - Added some tests

[33mcommit c503671797134d239903326b62421add55b2845a[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Fri Jan 29 14:29:53 2016 -0800

    Forgot to add csproj to last commit

[33mcommit 870d465f2fe4caaecd8d2a2ca6e18cb7834ea6a8[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Fri Jan 29 14:28:28 2016 -0800

    More improvements in exception reporting. Split SNINativeMethodWrapper to reduce dependencies on MANAGED_SNI flag.

[33mcommit 3c86ba9cf4621aa6dc8150a19c42f59fc78b0461[m
Merge: a35ec1f 7e6e3e2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 29 13:23:10 2016 -0800

    Merge pull request #5784 from JonHanna/trim_toarray
    
    In Enumerable.ToArray Use EnumerableHelpers rather than Buffer

[33mcommit 890fc6588c1e647cbb134b7227370e4251bf7a37[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Fri Jan 29 13:19:28 2016 -0800

    Fix casing of Packaging.props import.
    
    [tfs-changeset: 1570425]

[33mcommit a35ec1f478f99ce62400071e270ab7cab78dfe80[m
Merge: 33ad04e 0f520e1
Author: Kurniawan Kurniawan <kkurni@gmail.com>
Date:   Fri Jan 29 13:18:26 2016 -0800

    Merge pull request #5787 from kkurni/add-test-to-solution
    
    Add System.Data.SqlClient.Test project into solution file

[33mcommit 52c0d701aee9dd90bc0c889083e97f4226b87fa9[m
Author: Shmueli Englard <shmueli.yosef@englard.net>
Date:   Fri Jan 29 16:02:26 2016 -0500

    Fixed typo pointed out by @nirinchev
    
    https://github.com/dotnet/corefx/pull/5760#discussion_r51314855

[33mcommit 2587aacc04e1e1d40970dd00b2d101fce1bf850d[m
Author: Shmueli Englard <shmueli.yosef@englard.net>
Date:   Fri Jan 29 15:56:13 2016 -0500

    Added change suggested by @nirinchev
    
    https://github.com/dotnet/corefx/pull/5760#discussion_r51313704

[33mcommit 33ad04e54389f28dd880cb3ed3b5558b13df2a1e[m
Merge: 51489e2 7f07f5b
Author: VSadov <vsadov@microsoft.com>
Date:   Fri Jan 29 12:25:34 2016 -0800

    Merge pull request #5775 from JonHanna/skip_while_reduce_checks
    
    Reduce checks made by SkipWhile

[33mcommit 51489e26233fdbd2b9a0c1a5dae33bccfd495442[m
Merge: 829e699 a3faba4
Author: VSadov <vsadov@microsoft.com>
Date:   Fri Jan 29 12:10:48 2016 -0800

    Merge pull request #5778 from JonHanna/optimise_set
    
    Remove unused paths in Set.

[33mcommit 829e6994c395acb6e84d6dacc93e3878f88de5f6[m
Merge: a0ce726 bddaf7d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 29 11:30:44 2016 -0800

    Merge pull request #5786 from dotnet/ianhays-docs
    
    Update windows docs with OuterLoop instructions

[33mcommit a0ce726e28994055ad7242005505068bdd40bc64[m
Merge: 090906e a299529
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 29 11:30:28 2016 -0800

    Merge pull request #5783 from stephentoub/more_eintr
    
    Add EINTR retries in SystemNative_ForkAndExecProcess

[33mcommit a95c8ccbae6ae4cf2a4e468ee56e2c836ced4d0e[m
Author: Shmueli Englard <shmueli.yosef@englard.net>
Date:   Fri Jan 29 14:26:21 2016 -0500

    Update platform-names.md
    
    Grammar Fix

[33mcommit 77147bccbf965c30f90c26240863db5d5ee3859b[m
Author: Shmueli Englard <shmueli.yosef@englard.net>
Date:   Fri Jan 29 14:25:21 2016 -0500

    Update platform-names.md
    
    Grammar Fix

[33mcommit b003a001fd7a017eb972929ae1cc4e13325c79f2[m
Author: Shmueli Englard <shmueli.yosef@englard.net>
Date:   Fri Jan 29 14:05:37 2016 -0500

    Update platform-names.md
    
    Clarifications and corrections

[33mcommit 0f520e1cbc1d1a3dc4294f5da7ad64cf1d25963b[m
Author: kkurni <kkurni@microsoft.com>
Date:   Fri Jan 29 10:58:44 2016 -0800

    Add Test project into solution file

[33mcommit 090906ebffe733533c0f79eeac1e3c21b9fc4f1b[m
Merge: adc0b2a 9672dce
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 29 10:50:21 2016 -0800

    Merge pull request #5781 from JohnChen0/master
    
    Allow init-tools.sh to be called from any directory

[33mcommit bddaf7d9e69b42381cae7eb4a9c3e4deb456c1b6[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Jan 29 10:09:15 2016 -0800

    Update windows docs with OuterLoop instructions
    
    https://github.com/dotnet/corefx/pull/1449 changed the format of the property to run OuterLoop tests. This commit updates the docs to reflect those changes.

[33mcommit a29952940d5959ae4f67988cc84826581b13fe9c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 29 09:02:34 2016 -0800

    Add EINTR retries in SystemNative_ForkAndExecProcess
    
    Several syscalls used in ForkAndExecProcess can result in EINTR on some platforms, but we weren't retrying on interruption.  This resulted in processes spawned by Process.Start sometimes failing to run.  This commit simply adds appropriate retries on EINTR.

[33mcommit adc0b2a877429456b47feb05d9b90a12e6384f34[m
Merge: de8f148 ecf8677
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 29 10:05:03 2016 -0800

    Merge pull request #5779 from bartonjs/osx_root_store
    
    Unix LM\Root X509Store should also read SSL_CERT_FILE

[33mcommit de8f148b83fd3710ef03e03ecf2afeb216888188[m
Merge: 1aa19d8 a60880f
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Jan 29 09:46:22 2016 -0800

    Merge pull request #5785 from dsgouda/packupdate
    
    Updated System.Collections xunit perf runner version

[33mcommit a60880f7f56ce73499b9f992884bbf79b0a89ad3[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Fri Jan 29 09:37:33 2016 -0800

    Updated System.Collections xunit perf runner version

[33mcommit 7f07f5b07a0fba316e0e9f7cd296572fe4b449b9[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Jan 29 13:03:45 2016 +0000

    Reduce checks made by SkipWhile
    
    SkipWhile continuously checks if it needs to test the current element,
    and in the indexed version continuously increments the index.
    
    Change this to a direct pass-through once the first unskipped element
    is seen.

[33mcommit 7e6e3e26d9fe4d10bda96a65820e8ad7cc3da8fa[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Jan 29 17:21:54 2016 +0000

    In Enumerable.ToArray Use EnumerableHelpers rather than Buffer
    
    ToArray checks for the possibility of a fast-path and otherwise
    creates a buffer and calls ToArray on it.
    
    Creating a buffer checks for the same possibility of a fast-path
    and otherwise calls the overload of EnumerableHelpers.ToArray
    that returns a count. Then its ToArray trims it.
    
    Just calling the overload of EnumerableHelpers.ToArray that
    doesn't return a count calls the other overload before trimming. As
    such it doesn't repeat the fast-path check that had already been made.
    
    Therefore use it instead.

[33mcommit 1aa19d8b29850c114271dfcfb52da7406f0045ce[m
Merge: f04c30f 93ac19d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 29 08:43:15 2016 -0800

    Merge pull request #5776 from bartonjs/sslstreampal_behavior_consts
    
    Make SslStreamPal.StartMutualAuthAsAnonymous a constant

[33mcommit 9672dce4074d5db21fe82eb727656d51abc73e84[m
Author: John Chen (CLR) <jochen@microsoft.com>
Date:   Fri Jan 29 08:34:27 2016 -0800

    Allow init-tools.sh to be called from any directory

[33mcommit ecf8677f484d11d18b9354ca1b2428fde2d278d8[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Fri Jan 29 07:50:33 2016 -0800

    Unix LM\Root X509Store should also read SSL_CERT_FILE
    
    The default resolver in OpenSSL has two providers
    1) SSL_CERT_DIR
    Every file in this directory has all certificates therein read as a trusted cert.
    2) SSL_CERT_FILE
    This one extra file is also read, and all certificates therein are trusted certs.
    
    Up until now we've only emulated the SSL_CERT_DIR approach, and that
    worked on the Linux distributions tested thus far (Ubuntu 14.04/15.04,
    CentOS 7.1, others).
    
    The Homebrew provided OpenSSL for OS X, however, builds the root
    store in a single file in the location pointed to by SSL_CERT_FILE.
    
    So, now, read the SSL_CERT_FILE-based content in addition to the
    SSL_CERT_DIR content, and things should work better on OS X (and better
    match the behavior of an application that would directly be using OpenSSL).

[33mcommit 93ac19d8e584e17362bcc9614bb44814cd843295[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Fri Jan 29 06:38:46 2016 -0800

    Make SslStreamPal.StartMutualAuthAsAnonymous a constant

[33mcommit f04c30f5ef95b5dd0f1ca5d5684b20c4cb0a2719[m
Merge: 8839c5e 908a129
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 28 23:23:19 2016 -0800

    Merge pull request #5758 from bartonjs/unix_sslstream_clientauth
    
    Enable Client Auth Certs for Unix SslStream.

[33mcommit 8839c5ef85f4ccc04a0231dc9670ddda232e3da1[m
Merge: 2d838e6 03846a4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 28 23:02:03 2016 -0800

    Merge pull request #5738 from hughbe/parallel-tests
    
    Cleanup System.Threading.Tasks.Parallel.Tests, fix #790

[33mcommit 2d838e6e24a52753d957b1b429b005bb077b816f[m
Merge: f582b8f 089b581
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 28 22:59:36 2016 -0800

    Merge pull request #5767 from dsgouda/packupdate
    
    Updating nuget packages for perf xunit runner

[33mcommit f582b8fb679b2ddc2ab8e2129a9b88f8f106fd71[m
Merge: 838e822 c016178
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 28 22:59:07 2016 -0800

    Merge pull request #5687 from stephentoub/fs_async_perf
    
    Use PreallocatedOverlapped in FileStream

[33mcommit 838e82226873ff7fdc315883745b3cb775e5abe3[m
Merge: 1eaf7dd 9cea8d5
Author: Immo Landwerth <immo@landwerth.net>
Date:   Thu Jan 28 20:51:57 2016 -0800

    Merge pull request #5760 from terrajobst/naming-doc
    
    Add documentation around platform naming

[33mcommit 9cea8d52bdf8e4adf63cd00de526f4230390ff2a[m
Author: Miguel de Icaza <miguel@gnome.org>
Date:   Thu Jan 28 20:49:54 2016 -0800

    Incorporate corrections from Miguel

[33mcommit 1eaf7dd7661121120f593a417e010070f3b668b9[m
Merge: 25d2017 c7f6306
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Jan 28 20:16:04 2016 -0800

    Merge pull request #5765 from stephentoub/enable_cert_test
    
    Reenable cert validation test on Linux

[33mcommit de565564d6b9b77ca699b63d2eb1dcb5183f1b65[m
Author: Immo Landwerth <immol@microsoft.com>
Date:   Thu Jan 28 15:42:27 2016 -0800

    Add documentation around platform naming

[33mcommit 089b58129c5ad7c4016d6f660171cd7509ce72db[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Thu Jan 28 18:55:09 2016 -0800

    Updating nuget packages for perf xunit runner

[33mcommit 25d2017d72a5b6c3caafbdc82216e9a7a56101f5[m
Merge: dad1e60 a865a60
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 28 18:29:33 2016 -0800

    Merge pull request #5761 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit dad1e60b7d3c7090538ecaa652d0c65dbca52ae7[m
Merge: ab6ec2f 1c82fe9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 28 18:28:25 2016 -0800

    Merge pull request #5762 from VSadov/license
    
    Updated license header on a new source file that missed the recent bulk update.

[33mcommit c7f630678f752e96a95f8fc53c208306981eb7ea[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Jan 28 18:27:29 2016 -0800

    Reenable cert validation test on Linux

[33mcommit 893a7c324b4e44cbde4fa6b76a10e8a19f737717[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Thu Jan 28 18:06:36 2016 -0800

    Improve SNINpHandle exception reporting

[33mcommit 1c82fe9de048e0a0897561cbfe5ba9cbd9aafa5b[m
Author: vsadov <vsadov@microsoft.com>
Date:   Thu Jan 28 16:30:53 2016 -0800

    Updated license header on a new source file that missed the recent bulk update.

[33mcommit a865a60814feeb94a4015734bcaaea764f991ffe[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Jan 28 16:06:01 2016 -0800

    Another update to remove "weird" characters in license files.
    
    [tfs-changeset: 1570039]

[33mcommit ab6ec2fa803a330e73809cf478753959a36185e5[m
Merge: 9bf3e86 4367ec4
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Thu Jan 28 15:51:39 2016 -0800

    Merge pull request #5711 from joperezr/RestoreMSBuild
    
    Use .Net Core MSBuild for OS X and Linux Builds

[33mcommit 908a129d5f32a6b5d2737d651445fdd38e1937ea[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Jan 28 08:59:57 2016 -0800

    Enable Client Auth Certs for Unix SslStream.
    
    Pass the handle:
    
    The Windows SslStream flow is to start a TLS session as server auth, then
    process a CredentialsRequired during the handshake, add credentials to
    the existing session, and continue.
    
    It's hard to maintain symmetry on that flow for the Unix pathway, due to
    the API differences in OpenSSL and SChannel.  So, the Unix session will
    always pass down to native the provided client auth credentials, and
    OpenSSL can use them when it sees appropriate.
    
    Untrusted certificates should still complete handshake:
    
    The Unix SslStream implementation had two different places that a client
    authentication certificate was validated.  The first one was from an
    OpenSSL callback, and reporting an error will interrupt the TLS handshake.
    The second was from after the handshake, and presents the results to the
    user validation callback to determine if data should be sent after the handshake.
    
    In the ideal case the first version is redundant, in a user-handled case it caused
    a failure when success was expected; so it should just be removed.
    
    Enable the client authentication cert test for Unix:
    
    Also asserts that the IsMutuallyAuthenticated property gets set, the certificates
    used were the correct ones, and that both forward and callback versions of
    providing the certificate function.

[33mcommit 9bf3e86feaf7eb4667f6d51ca09ed74925f7a3aa[m
Merge: e0e94b1 33d8032
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 28 15:09:08 2016 -0800

    Merge pull request #5087 from hughbe/specialized-tests
    
    Specialized Collections Tests

[33mcommit c39d4af5843748c836121967d7f7f8d73207ae76[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Jan 28 15:07:43 2016 -0800

    Add explicit DNXCore50 implementation in addition to dotnet5.6
    
    CoreFx is still using a version of dotnet CLI based on DNX
    which doesn't map dotnet5.6 to DNXCore50.  Workaround
    until we can switch to the latest CLI.
    
    [tfs-changeset: 1570011]

[33mcommit 5c492fa8b86d99d3d88c7e854927392f343b6102[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Thu Jan 28 14:33:17 2016 -0800

    Add checks to ensure process is started before accessing properties via Id.

[33mcommit b89d25ed72b6255b7c94be3574561041498cfe45[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Jan 28 12:52:01 2016 -0800

    Replace "weird" characters in dotnet_library_license.txt
    
    [tfs-changeset: 1569941]

[33mcommit 096f0834146e8bd7c9c1900002002e0fbbc2ce1f[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Thu Jan 28 12:45:26 2016 -0800

    Address PR feedback.

[33mcommit 3cd41b1c5c8349585f0c29d813317219a9016abf[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Jan 28 11:24:02 2016 -0800

    Add 3rd party notice and eula to packages.
    
    [tfs-changeset: 1569920]

[33mcommit 03846a4079c3f7ad17839dc65441f24cc6b0866d[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Wed Jan 27 21:22:03 2016 +0000

    Cleanup System.Threading.Tasks.Parallel.Tests, fix #790
    
    Merge tests into single tests using [Theory] attributes
    Fix minor formatting issues when I encountered them

[33mcommit e0e94b1d4ac854b0dd1ef3725d8492bcfa0229c9[m
Merge: 2a5867e c8fee78
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Thu Jan 28 08:58:54 2016 -0800

    Merge pull request #5748 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 4367ec4c791928c6b2f994e9602dbc75aea7934d[m
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Thu Jan 14 15:39:05 2016 -0800

    Use .Net Core MSBuild for OS X and Linux Builds

[33mcommit a3faba45d0f3b7747bd8e54c4894e733ba4a76ec[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Jan 28 16:37:12 2016 +0000

    Remove unused paths in Set.
    
    Set in Linq and Linq.Parallel never has Add called after Remove. Remove
    paths and fields only necessary in that case.
    
    Add debug-only check on this assumption, so any new uses that break
    this assumption are flagged to the developer.

[33mcommit a096b4e82121d25d4ed473fd213613a3ba13f1d1[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Jan 28 15:58:21 2016 +0000

    Use Remove instead of Contains + Remove on Set
    
    IntersectQueryOperator does a call to Contains followed by a call to
    Remove on the same set for the same value. Since Remove takes a very
    similar path to Contains in checking for existance, and returns false
    when the item to remove isn't found, this can be simplified to just Remove.
    
    Also remove unused constructor on Set.

[33mcommit 2a5867e8ed4764fbe7bdffbf71a77ea82c32a20c[m
Merge: 175cd0d 9c8078d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 27 23:25:57 2016 -0800

    Merge pull request #5746 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 175cd0d51e174205f76330654a9f9883f824d309[m
Merge: 81b8481 af9eae0
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Jan 27 22:36:56 2016 -0800

    Merge pull request #5713 from VSadov/bartdesmet-Issue-4019
    
    Fixing expression interpreter issues with Convert[Checked]

[33mcommit 81b848174443d47d5f2abbdc1168dc8fe76dc86b[m
Merge: 3b0a558 5fa9465
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 27 21:42:00 2016 -0800

    Merge pull request #5712 from kouvel/UnloadEvent
    
    Expose AssemblyLoadContext.Unloading event publically

[33mcommit 3b0a5581ae1a9e918dc05ad874942705f5b9222f[m
Merge: 2e993ca 7d7dc8e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 27 21:19:06 2016 -0800

    Merge pull request #5736 from Priya91/machinenamebug
    
    Fix OSX bug on MachineName #5732.

[33mcommit a2ecbb3ec9a69a81d8417e85b7846eb7dbc6b4f6[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 27 20:24:12 2016 -0800

    Add test for DateTime parsing

[33mcommit 06ac30ec61c7b52e8fff12841e5930f20fa58cd3[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Wed Jan 27 18:26:26 2016 -0800

    SqlClient Named pipes working. Was seeing issues due to TDS prelogin header and packet contents being written after each other, causing a broken pipe.

[33mcommit 6755f50bc2f0b595fbb53dbbd98c66468bb939d6[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Wed Jan 27 15:50:29 2016 -0800

    Fix Process.StartTime implementation on OSX.

[33mcommit c8fee7847ca40c282f454560b7ae3d5898c75452[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Jan 27 16:32:40 2016 -0800

    Disable validation for Net462
    
    I need to update buildtools with a targeting pack
    file list before we can enable this. Otherwise we'll
    default to an empty targeting pack and complain
    when inbox assemblies don't have 462 specific
    assets.
    
    [tfs-changeset: 1569529]

[33mcommit 9c8078d44d33639a2c39c3e6ff072ba721b9a0ef[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Wed Jan 27 15:51:59 2016 -0800

           Enable debian support.
           - Add Product to GetXPlatBinaries so that the native binaries get downloaded from Azure
           - Add DebianNativePath to props files
           - Update runtime native packages to support Debian
           - Add Debian to the rid graph in Microsoft.NETCore.Platforms
           - Update NetCore packages with native pieces to support debian
    
    [tfs-changeset: 1569519]

[33mcommit 2e993ca0ad12350ad31fcc6c4f8b3d82318ec81c[m
Merge: ac67ffa 70ef7b5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 27 15:19:16 2016 -0800

    Merge pull request #5735 from pallavit/Issue#5067
    
    Enable tests blocked due to Issue#5067

[33mcommit ac67ffac987d0c27236c4a6cf1255c2bcbc7fe7d[m
Merge: e1ee164 7cad848
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 27 14:10:52 2016 -0800

    Merge pull request #5723 from stephentoub/update_license_headers
    
    Update licensing headers

[33mcommit e1ee164a9ce6e03061a38b01212cafe704c52357[m
Merge: 0dd1ab7 40cca4a
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Wed Jan 27 13:35:08 2016 -0800

    Merge pull request #5720 from tmat/MetadataTokens
    
    MetadataBuilder API cleanup

[33mcommit fd2070ee3110ab45efa21c854a0163095b18481e[m
Author: bjjones <brandon1.jones@intel.com>
Date:   Mon Jan 25 09:21:28 2016 -0800

    Build clrcompression.dll with optimized Zlib-Intel
    
    On x86/x64 platforms, use Zlib-Intel for native compression instead of
    Zlib-Adler. Performance tests show a +30% improvement when compressing
    files by using SSE4.2 features.
    
    ARM platforms still use Zlib-Adler for clrcompression.dll
    
    Fix #3986

[33mcommit 0dd1ab7223dea82f236ec81d42f4ae0227176bf4[m
Merge: 00abd91 3ddbc8e
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Wed Jan 27 11:56:41 2016 -0800

    Merge pull request #5722 from ericstj/updateTracing
    
    Update System.Diagnostics.Tracing to 4.1.0.0

[33mcommit c2d5b8d0f9a1a22d263e63ff8d19aba1950bcd89[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Jan 27 11:55:18 2016 -0800

    Add @davidfowl's TFM definition

[33mcommit 7b56c58943327af3314124d3acc7e7687167ee6e[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Jan 27 11:54:52 2016 -0800

    Update cross-doc link and add pointer from old location

[33mcommit 7d7dc8e21fb7d76b02f5d72275175acfe243fe05[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Wed Jan 27 11:15:05 2016 -0800

    Fix OSX bug on MachineName #5732.

[33mcommit 00abd91b48d0b8a69a6618fd9c27a8c2a32b179e[m
Merge: 3f85465 b6809ba
Author: William Godbe <wigodbe@microsoft.com>
Date:   Wed Jan 27 11:12:42 2016 -0800

    Merge pull request #5718 from wtgodbe/groovy
    
    Add support for testing of rc2 branch in CI

[33mcommit 70ef7b503cddd0152aea18d82e9676e522fc4e25[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Wed Jan 27 10:26:26 2016 -0800

    Enable tests blocked due to Issue#5067

[33mcommit 3f854651f5cdc3215e7b0d607c02866087c14c5e[m
Merge: 9e0cf03 8e289fe
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 27 10:23:05 2016 -0800

    Merge pull request #5734 from stephentoub/disable5732
    
    Disable TestMachineNameProperty test on OS X

[33mcommit 8e289fe4db3e6eca9e02d0f86844ef1ff009498f[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 27 10:21:43 2016 -0800

    Disable TestMachineNameProperty test on OS X

[33mcommit 9e0cf03628710412b23932ebd7d9980a660bae1f[m
Merge: 8e5cb1f c442e61
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 27 09:13:59 2016 -0800

    Merge pull request #5731 from stephentoub/update_packages
    
    Update package versions to rc3-23727

[33mcommit c442e611d1b4dddc12703b8b80bea9f3889f141d[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 27 08:08:48 2016 -0800

    Update package versions to rc3-23727

[33mcommit 7cad8486cbabbce0236bdf530e30db7036335524[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Tue Jan 26 22:48:07 2016 -0800

    Update licensing headers

[33mcommit 33d8032bce38c4f6496011b6e9ab403d148fa0ce[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Mon Jan 25 21:34:54 2016 +0000

    Add tests for System.Collections.Specialized
    
    Greater test coverage

[33mcommit 8e5cb1f245e3a153d0261a17983c78e777358924[m
Merge: cc6e1db 3d92738
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Wed Jan 27 01:53:22 2016 -0800

    Merge pull request #5428 from Priya91/machinename
    
    Add Environment.MachineName to .NET Core.

[33mcommit 3ddbc8ebe47dfca34a629fdda4356dfd2df30722[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Jan 26 22:48:12 2016 -0800

    Fix version of System.Diagnostics.Tracing
    
    System.Diagnostics.Tracing added surface area since
    the previous release.  The new surface area is only
    supported on .NET vnext (tentatively 4.6.2).

[33mcommit 2841f00e64cc81ee204dc2eb8a4c6773fa48a124[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Jan 26 22:44:37 2016 -0800

    Add validation for Net462

[33mcommit cc6e1dbc87747648f1a98b3ec04a750cc59b6820[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 26 22:06:41 2016 -0800

    Fix dependency validation error from SqlClient test dependencies

[33mcommit e567497837072a046f93f7dd97e37e84c9f5e085[m
Merge: 7ed0277 8e95f40
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 26 22:00:10 2016 -0800

    Merge pull request #5721 from richlander/rich-license
    
    Update license to .NET Foundation

[33mcommit 7ed0277b10518c257a907815b08762a8f77fa43c[m
Merge: 7f98a27 2e7bd14
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 26 21:59:57 2016 -0800

    Merge pull request #5717 from CIPop/removeCsProjTodo
    
    Removing/updating TODOs from System.Net CSProj files

[33mcommit 7f98a278390cfa207d2373e7fb72afdd3b2fae34[m
Merge: 0991046 213da43
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 26 21:57:56 2016 -0800

    Merge pull request #5703 from Priya91/changeversion
    
    Update packages version to 23726.

[33mcommit 5fa94653304b7ad9cbd7703219d86a9a3b31f153[m
Author: Koundinya Veluri <kouvel@microsoft.com>
Date:   Mon Jan 25 13:31:05 2016 -0800

    Expose AssemblyLoadContext.Unloading event publically
    
    This change is dependent on https://github.com/dotnet/coreclr/pull/2867, which actually implements the Unloading event.
    
    API review: https://github.com/dotnet/corefx/issues/5205

[33mcommit 8e95f40402aed1ea4062a59b24b23d133d5bc54e[m
Author: Richard Lander <rlander@microsoft.com>
Date:   Tue Jan 26 21:00:58 2016 -0800

    Update license to .NET Foundation

[33mcommit 40cca4abcbe204999dbdc664dbdc79040a41bfdf[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Tue Jan 26 18:58:31 2016 -0800

    MetadataBuilder API cleanup

[33mcommit f2124b43f8f77c5fcc2621f03c48d2ff25ed41d6[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Tue Jan 26 18:51:00 2016 -0800

    Disallow nil MethodDef token as an entry-point in Portable PDB

[33mcommit 09910463de6ea9a840f09adc5b2977044bedaff3[m
Merge: 1a00fa1 90c93ca
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Tue Jan 26 18:13:39 2016 -0800

    Merge pull request #5684 from nadiatk/sqlclienttest
    
    System.Data.SqlClient Exception test

[33mcommit 1a00fa1b5468a5d72f4d059ec501e4f65386e824[m
Merge: 679a806 98f004b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 26 18:06:43 2016 -0800

    Merge pull request #5709 from stephentoub/upgrade_cc
    
    Upgrade to build tools 156

[33mcommit 679a806b7ef76d8139078ced7017f41c94036c19[m
Merge: 64b214f 0923518
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Tue Jan 26 17:04:08 2016 -0800

    Merge pull request #5702 from tmat/MetadataTokens
    
    Add a couple of missing handle factories to MetadataTokens

[33mcommit b6809ba7a58b24f6893f37161198ee7dad722b9d[m
Author: William Godbe <william.godbe@comcast.net>
Date:   Tue Jan 26 16:24:19 2016 -0800

    Add support for testing of rc2 branch in CI

[33mcommit 213da430524eceb9e90883c3d08848f62c813a91[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Tue Jan 26 11:54:58 2016 -0800

    Update packages version to 23726.

[33mcommit 66094945adc2fefe47f15d815c552bb36eadc34d[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Tue Jan 26 14:48:01 2016 -0800

    Allowing Ssl2,3 within tests.

[33mcommit 2e7bd14c5e55ecda926977eef6d5717644783059[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Tue Jan 26 16:15:32 2016 -0800

    Removing/updating TODOs from System.Net CSProj files

[33mcommit 64b214f455fb1a10a1753b0eaf2c59a76e997d36[m
Merge: c1232b9 1fce1bb
Author: VSadov <vsadov@microsoft.com>
Date:   Tue Jan 26 16:06:30 2016 -0800

    Merge pull request #5245 from JonHanna/Fix_5244
    
    Have Expression.TypeIs return true for void expressions and void

[33mcommit c1232b9db40653e5564a0159aab0cbfbca6476b3[m
Merge: 7cac572 b9f591f
Author: Venkatraman Mahalingam <vemaha@microsoft.com>
Date:   Tue Jan 26 16:01:00 2016 -0800

    Merge pull request #5679 from venkat-raman251/diag.proc
    
    Added net461 to System.Diagnostics.Process

[33mcommit af9eae0fcc30f0b4d312a230b9ca64e1d561586f[m
Merge: 7cac572 068169f
Author: vsadov <vsadov@microsoft.com>
Date:   Tue Jan 26 15:40:37 2016 -0800

    Merge branch 'Issue-4019' of git://github.com/bartdesmet/corefx into bartdesmet-Issue-4019

[33mcommit 90c93ca31f26c5cdde51a1919ba79bf0c89261c1[m
Author: Nadia <natkach@microsoft.com>
Date:   Tue Jan 26 14:48:28 2016 -0800

    System.Data.SqlClient.Tests Exception test change 3

[33mcommit 98f004b8f995fb8dcbab0d7b38c2822f8835a14d[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Jan 26 13:58:09 2016 -0800

    Upgrade to build tools 156

[33mcommit b9f591fc5d4d2f67ac32021387e8445b737f6987[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Tue Jan 26 12:57:13 2016 -0800

    Added net461 to System.Diagnostics.Process

[33mcommit a53de514e3f90248b8a07e02cdf8ce1a32e5f74c[m
Author: Nadia <natkach@microsoft.com>
Date:   Tue Jan 26 10:56:05 2016 -0800

    System.Data.SqlClient.Tests Exception Test change 2

[33mcommit e280974dc5e074aaa8a4358513885ea41ce03812[m
Author: Nadia <natkach@microsoft.com>
Date:   Mon Jan 25 16:27:19 2016 -0800

    System.Data.SqlClient Exception test

[33mcommit 0923518282e83ad4bae1f4c591c13507b804db50[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Tue Jan 26 11:39:38 2016 -0800

    Add a couple of missing handle factories to MetadataTokens

[33mcommit 7cac5729f1ac5b65a57f741077e798537f1c7f07[m
Merge: d9ae6ce a8bea4d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 26 09:08:23 2016 -0800

    Merge pull request #5693 from stephentoub/buffer_perf
    
    Disable thread-tracking in SpinLock in ArrayPool

[33mcommit d9ae6ce11872e7b0f7e7b4c6fcdaac2ff48cd173[m
Merge: fe0621e 3340697
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Tue Jan 26 08:47:44 2016 -0800

    Merge pull request #5646 from weshaggard/UpdateNewLibrariesToOpenKey
    
    Update new libraries be be fully signed with Open key

[33mcommit fe0621e5e556e5e8fbc176965dbfa32b8df4c0e4[m
Merge: f7beca4 58a8118
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 26 08:21:31 2016 -0800

    Merge pull request #5655 from stephentoub/sockets_mres_spinning
    
    Remove spinning from event instances in Unix socket operations

[33mcommit f7beca4542c80a1f61505d9f71e0eda3a14fe34a[m
Merge: 808e0fc 77d73d2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 26 07:40:54 2016 -0800

    Merge pull request #5520 from ianhays/unixpermissionsfs
    
    Fix FileSystem related permissions failures.

[33mcommit a8bea4d8a4c13801c59007abdc9f5e9a67009fa9[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Jan 26 02:05:35 2016 -0500

    Disable thread-tracking in SpinLock in ArrayPool
    
    It's great for debugging purposes but adds considerable cost.  On a simple microbenchmark that repeatedly does:
    ```C#
    byte[] buffer = ArrayPool<byte>.Shared.Rent(4096);
    ArrayPool<byte>.Shared.Return(buffer);
    ```
    turning it off improves the throughput by ~2.5x on my machine.

[33mcommit 808e0fc051b264adda61166bfd56398272cbe7cd[m
Merge: db42e81 b75bcef
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 26 00:14:59 2016 -0800

    Merge pull request #5688 from stephentoub/systemnetsecurity_osx
    
    Enable System.Net.Security tests on OS X

[33mcommit db42e81c9a5811ea4309b5651917e2ce086e1a52[m
Merge: d214ddb ca012a9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 25 22:19:43 2016 -0800

    Merge pull request #5686 from bartonjs/unix_x509stores_readall
    
    Read all of the certs from a Unix root cert bundle file

[33mcommit b75bcefbae1f1a650224869773fb2bff650dbced[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 25 14:53:33 2016 -0500

    Enable System.Net.Security tests on OS X

[33mcommit d214ddb89c694df4b3752f3560f8972395e869e2[m
Merge: e38e54f 897c327
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 25 22:17:23 2016 -0500

    Merge pull request #5680 from stephentoub/fs_open
    
    Use FileStream's ctor instead of File.Open when all access is synchronous

[33mcommit ca012a9d4ecc35c5b51fcac19ab679b2c865e303[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Jan 25 17:43:10 2016 -0800

    Read all of the certs from a Unix root cert bundle file

[33mcommit c01617841be8b5087ed37f64bb2395afc722e549[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Jan 25 20:35:01 2016 -0500

    Use PreallocatedOverlapped in FileStream
    
    When using async operations on FileStream, each operation ends up allocating several objects.  By using a PreallocatedOverlapped, we can avoid the majority of those allocations, as well as avoid having to pin/unpin a buffer on each request.
    
    This commit adds an optimization to FileStream that kicks in for the common case when:
    - The buffer provided to ReadAsync/WriteAsync is smaller than the size of the FileStream's buffer, such that the FileStream's buffer is used.  And when...
    - Operations are not scheduled to run concurrently.
    
    When those conditions are met, we use a PreallocatedOverlapped for the operation to avoid a ThreadPoolBoundHandleOverlapped, IOCompletionCallback, and _IOCompletionCallback getting allocated for each operation.  This reduces the bytes allocated per operation by ~50% and the number of objects allocated by ~60%.  It also saves having to pin/unpin the buffer on each operation.
    
    When those conditions aren't met, we simply use the same code that's used today.

[33mcommit e38e54f93af83e402e0d8cc4b9c1399d32767138[m
Merge: 48a3819 0f3a820
Author: Venkatraman Mahalingam <vemaha@microsoft.com>
Date:   Mon Jan 25 16:40:39 2016 -0800

    Merge pull request #5641 from venkat-raman251/x509cert
    
    Added net461 to System.Security.Crypto.X509Certificates

[33mcommit 48a3819c94a1d428e515be4c5b799b699e986397[m
Merge: 150d4fe eec0d86
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 25 19:36:18 2016 -0500

    Merge pull request #5677 from VSadov/fix4688
    
    Remove finalizer race in a testcase.

[33mcommit 150d4fe59252d795e1add582cb3fa9c384735b2a[m
Merge: 0e2dabe ba93997
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 25 19:36:07 2016 -0500

    Merge pull request #5676 from stephentoub/upgrade_dependencies
    
    Upgrade package versions to rc3-23725

[33mcommit 0e2dabec3f3533506263253b5379f24e36858986[m
Merge: 3e69a7c f3263e1
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Mon Jan 25 15:09:42 2016 -0800

    Merge pull request #5569 from CIPop/ssl
    
    Obsoleting SSL2, 3

[33mcommit 3e69a7c775a9be0a606938b78bf697047e432c38[m
Merge: 20d50cc f4376c6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 25 17:38:36 2016 -0500

    Merge pull request #5675 from stephentoub/cd_hashcode
    
    Add hashcode checks to ConcurrentDictionary

[33mcommit 897c327e0ff4502e50e947d6200cdc8f1432bf99[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Jan 25 17:22:03 2016 -0500

    Use FileStream's ctor instead of File.Open when all access is synchronous
    
    Several places in our libraries use use File.Open* methods.  These are simple wrappers for FileStream's constructors, and all use the default "useAsync" value of true (this varies from the the full framework, where the default is false).  When only using synchronous Stream methods, a value of true is pure overhead, as each Read/Write/Flush method needs to schedule the asynchronous operation and then block waiting for it to complete.  In the few places we're using File.Open* in this manner, I've changed them to instead use FileStream's ctor directly, to avoid the unnecessary access overheads.

[33mcommit 20d50cc3f72f809d2a450adfbe833ab984fe68cc[m
Merge: e98183f 4872f5d
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Mon Jan 25 14:16:14 2016 -0800

    Merge pull request #5644 from tmat/MiscAPI
    
    Misc small API additions to System.Reflection.Metadata

[33mcommit ddcd24c3237094715fd5c53d984b2c1a9012ef6b[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Mon Jan 25 21:34:37 2016 +0000

    Remove dead code from System.Collections.Specialized
    
    Remove unnecessary string resources, usings, asserts, conditions and
    code.

[33mcommit eec0d86b6e9090a37ebf086d3894e6331879322c[m
Author: vsadov <vsadov@microsoft.com>
Date:   Mon Jan 25 12:44:30 2016 -0800

    Remove finalizer race in a testcase.
    
    Fixes #4688

[33mcommit 77d73d27d06cf331c1637bc4e1cdc5aa35b68887[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Tue Jan 19 11:47:22 2016 -0800

    Fix FileSystem related permissions failures.
    
    A number of tests involving ReadOnly files were failing on Unix and Linux when run with elevated user permissions (e.g. sudo). This commit modifies those Unix tests to accomodate either set of permissions and verify the result accordingly. This unfortunately means we can't verify if the behavior is 'right', only that it is executed correctly. Windows is unchanged.

[33mcommit 0f3a82074ef7b331014a3f44ada0c55720418f9b[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Mon Jan 25 12:14:35 2016 -0800

    Added net461 to System.Security.Crypto.X509

[33mcommit ba939973c07af13b01fe3b4f34e0a31eac6f90c7[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Jan 25 14:41:34 2016 -0500

    Remove "workaround" P2P TODOs from .csproj files
    
    In the past we've added some temporary P2P references to workaround lack of bug fixes in packages.  Removing them as they're no longer needed.

[33mcommit fad28575225858febd3069d41582a1502c5dda07[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Jan 25 14:38:56 2016 -0500

    Update package dependencies to rc3-23725

[33mcommit e98183f01e95b07cc9720c2007a2a4ce33ea54fd[m
Merge: a63051c f6d4162
Author: VSadov <vsadov@microsoft.com>
Date:   Mon Jan 25 11:15:33 2016 -0800

    Merge pull request #5553 from JonHanna/fix_3043
    
    Allow block expressions to have zero sub-expressions

[33mcommit a63051ceab9025170c5131386e888c61ec55e1e1[m
Merge: b77d2aa af2b3fe
Author: Davis Goodin <dagood@users.noreply.github.com>
Date:   Mon Jan 25 13:14:40 2016 -0600

    Merge pull request #5665 from dagood/escape-validation-regex
    
    Escape *'s in dependency validation regex

[33mcommit b77d2aa79537256f32c00a0e37e8c285c0980a7e[m
Merge: d5789fc ddc1f88
Author: VSadov <vsadov@microsoft.com>
Date:   Mon Jan 25 11:11:39 2016 -0800

    Merge pull request #5547 from JonHanna/fix_1877
    
    Allow a SwitchExpression that has no SwitchCase

[33mcommit f4376c63a4526b7733ac82af00eda18f6f7d929a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Jan 25 14:04:05 2016 -0500

    Add hashcode checks to ConcurrentDictionary
    
    As with Dictionary, ConcurrentDictionary stores the hashcode of a key in the node with a key.  However, whereas Dictionary uses that hashcode in comparisons prior to invoking the comparer, ConcurrentDictionary currently does not.  This fixes that by adding the hashcode comparison check.  For cases where multiple keys need to be examined from the same bucket and where the comparison operation isn't cheap, this reduces overheads by saving on comparison invocations.

[33mcommit d5789fcfc5fd0354faa30d049c36421966ba39fa[m
Merge: 41526fe 3c07921
Author: VSadov <vsadov@microsoft.com>
Date:   Mon Jan 25 10:56:38 2016 -0800

    Merge pull request #5512 from JonHanna/expression_method_writeback
    
    Fix Method call write-back on instance and byref parameters

[33mcommit 41526feec17d1deea959d1abbd294527e5cfde03[m
Merge: fab4772 106856f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 25 13:49:20 2016 -0500

    Merge pull request #5670 from jkotas/port-coreclr-2843
    
    Remove irrelevant endianness comment

[33mcommit fab477215a4ce42f0364a4f67244333ef7483310[m
Merge: 47d1490 1baa844
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Mon Jan 25 10:40:01 2016 -0800

    Merge pull request #5642 from CIPop/snsasserts1
    
    Fixing assert conditions for System.Net.Security.

[33mcommit 3340697c685cd175e782a607f6fbb7ced8147012[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sat Jan 23 00:20:46 2016 -0800

    Update new libraries be be fully signed with Open key

[33mcommit 47d149085ee696751949b549435536a03df48f86[m
Merge: e4925f8 0eea72f
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Jan 25 10:04:37 2016 -0800

    Merge pull request #5347 from nguerrera/signature-typespec
    
    Improve handling of TypeSpecs within signatures

[33mcommit 106856fc531cf233d22bfa6abe7f94b42e49e2f7[m
Author: Jan Kotas <jkotas@microsoft.com>
Date:   Mon Jan 25 09:09:07 2016 -0800

    Remove irrelevant endianness comment
    
    CoreRT port of dotnet/coreclr#2843

[33mcommit 225a45bd216027d37856cc32abbfdff5d304d567[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Mon Jan 25 08:59:40 2016 -0800

    Move NETStandard docs and rename, add doc for NETStandardApp

[33mcommit e4925f87dc6c5d0ba6017ded384997f7ec2880f4[m
Merge: 4974aea b51a2e2
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Mon Jan 25 08:39:03 2016 -0800

    Merge pull request #5666 from mmitche/reenable-osx
    
    Reenable OSX PR testing

[33mcommit b51a2e2d1a3e01d7e52485919de0c3164b6ffa21[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Mon Jan 25 08:32:15 2016 -0800

    Reenable OSX PR testing

[33mcommit af2b3fe39df77df411b445a5293730b6b5b0b50f[m
Author: dagood <dagood@microsoft.com>
Date:   Mon Jan 25 09:47:10 2016 -0600

    Escape *'s in validation regex and remove invalid TestData rule.

[33mcommit 4974aeac10984c112030b14404aed204b2badb3d[m
Merge: 9de2898 0521ba9
Author: Vance Morrison <vancem@microsoft.com>
Date:   Mon Jan 25 07:57:03 2016 -0800

    Merge pull request #5346 from davmason/master
    
     Merge the .Net Native and CoreCLR implementations of EventSource. Th…

[33mcommit 9de289860651c00167aa5dafebabcf0d23668d1d[m
Merge: 4a18cd3 8921545
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 25 08:55:53 2016 -0500

    Merge pull request #5661 from stephentoub/upgrade_cc
    
    Upgrade to build tools 154

[33mcommit 89215451012784438bb65ba5d06edb72739afa90[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Jan 24 22:49:41 2016 -0500

    Upgrade to build tools 154

[33mcommit 4a18cd38bb268a6d12a9db8d74e94d05c6d04b94[m
Merge: c4b12c8 6746383
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Sun Jan 24 17:46:30 2016 -0800

    Merge pull request #5651 from weshaggard/FixBuildWarnings
    
    Clean-up build package versions

[33mcommit 3d92738669b44bd8be981c3fc700efbbc0cd4f1c[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Thu Jan 14 12:22:57 2016 -0800

    Add Environment.MachineName to .NET Core.

[33mcommit c4b12c8013b0596b5ebf9f3d92a0a7a71d17ea48[m
Merge: f5a5f8e a54ede6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Jan 24 19:05:28 2016 -0500

    Merge pull request #5656 from stephentoub/fix_runtime_solution
    
    Fix P2P references in System.Runtime.sln

[33mcommit f5a5f8eb9300fb9e78862b8ac5d4695b41202192[m
Merge: 68da2ac e25c1a5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Jan 24 14:48:34 2016 -0500

    Merge pull request #5658 from dotnet/code_coverage_badge_st
    
    Update code coverage badge

[33mcommit e25c1a571d2ed2ccd2dfb6767dfcd12981d7a8b9[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Jan 24 14:39:28 2016 -0500

    Update code coverage badge
    
    There are two issues with the code coverage badge currently:
    1. It's getting cached by the CI server and thus rarely reflects the current state.
    2. It shows the most recently successful build, which means we might not know that recent builds have failed.
    
    For now, I'm replacing it with a generic passed/failed badge.  Clicking on it will still take us to the code coverage report.

[33mcommit a54ede6eca4a15dcd31dd64b3b50b16971b4da3c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Jan 24 09:50:04 2016 -0500

    Fix P2P references in System.Runtime.sln

[33mcommit 68da2acbcb800af37a7f0e6d4e7f890c941b8deb[m
Merge: 443264b b6474eb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Jan 24 09:23:48 2016 -0500

    Merge pull request #5599 from joperezr/FixWgetRequirementForOSX
    
    Adding the option to use curl instead of wget for downloading the tarball

[33mcommit 674638364d94441854edf05c75e0e59a9c9a76ac[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sat Jan 23 22:41:01 2016 -0800

    Add WinRT package dependency for some projects
    
    Windows.winmd was removed from M.TP.Private.NetNative targeting pack
    so when some projects were bumped to a that version which needed
    that reference they were broken. To fix we needed to explicitly add
    a package dependency to M.TP.Private.WinRT package.

[33mcommit 443264b32a1bcfb96eae1103e2c91c7b5acc8684[m
Merge: 6360f17 9dd73f3
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Jan 23 23:43:54 2016 -0500

    Merge pull request #5643 from stephentoub/buffered_readbyte
    
    Optimize BufferedStream.ReadByte

[33mcommit 7a7f8786fe5795cbef37e56ef3e831a646259dd0[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sat Jan 23 19:53:01 2016 -0800

    Add package validation for Microsoft.TargetingPack.NetFramework
    
    This adds validation as well as normalizes them all.

[33mcommit a13a069c16fb6ed8bb6509a2d0a2f08d77a36b71[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sat Jan 23 19:32:40 2016 -0800

    Add Microsoft.TargetingPack.Private.* to the list of verified packages
    
    Also updates all the package versions of the targeting pack to the latest

[33mcommit 4f3e71a654bfae25eb5369b748da53fad430468e[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sat Jan 23 19:11:47 2016 -0800

    Fix warning about version conflicts in System.Runtime.Extensions project
    
    C:\Program Files (x86)\MSBuild\14.0\bin\Microsoft.Common.CurrentVersion.targets(1819,5): warning MSB3277: Found conflicts between different versions of the same dependent assembly that could not be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed. [D:\git\corefx\src\System.Reflection.Extensions\src\System.Reflection.Extensions.csproj]
    
     There was a conflict between "System.Reflection, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" and "System.Reflection, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a".
          "System.Reflection, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" was chosen because it was primary and "System.Reflection, Version=4.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" was not.
    
     There was a conflict between "System.IO, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" and "System.IO, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a".
          "System.IO, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" was chosen because it was primary and "System.IO, Version=4.0.10.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" was not.

[33mcommit 6360f1754c51c76cd17fb73ef83b065b31df5e92[m
Merge: 0922baf a515a22
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Jan 23 22:02:33 2016 -0500

    Merge pull request #5368 from Clockwork-Muse/System.Collections.Specialized
    
    System collections specialized cleanup

[33mcommit 0922bafbc26dabf225d5cbb91fcaf7f19af6a484[m
Merge: ce6c606 beb7760
Author: Matt Ellis <matell@microsoft.com>
Date:   Sat Jan 23 16:31:06 2016 -0800

    Merge pull request #5294 from KodrAus/master
    
    Fix Incorrect ArgNullExc in List.ForEach

[33mcommit ce6c60643e5dbe561482fecac4755d263667d920[m
Merge: 45d092f 1ac6234
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Sat Jan 23 15:07:37 2016 -0600

    Merge pull request #5608 from eerhardt/Fix5253
    
    SSL_KeyExchangeAlgorithm values may no longer match OpenSSL

[33mcommit 58a8118477b22f204b3b8814907b1a7be2a5edc7[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Jan 23 14:46:54 2016 -0500

    Remove spinning from MRES in socket operaitons

[33mcommit 1ac6234242e3d7da621fa40bb2385a6ac46d08c0[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Jan 21 18:58:42 2016 -0600

    SSL_KeyExchangeAlgorithm values may no longer match OpenSSL
    
    We copied some internal/private integer values from OpenSSL that weren't in a public header. We used them to compare against the algorithm fields in a SSL_CIPHER object to tell which type of encryption, key exchange and hash algorithms were being used.
    
    Recently, OpenSSL did some cleanup of their values and moved the values around, which means our values are now out of sync.
    
    Instead of using the algorithm fields, we now call SSL_CIPHER_description and parse the returned string for the needed information. This will have to do for now on older OpenSSL versions until we get public methods from OpenSSL to get this information. Two of the three are currently in the latest/unreleased master branch.
    
    Fix #5253

[33mcommit 45d092fcc10ec88e160987cec37df32de1b37352[m
Merge: 851bedc 9d7b531
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Jan 23 14:22:49 2016 -0500

    Merge pull request #5596 from stephentoub/upgrade_packages
    
    Upgrade package versions to rc3-23722

[33mcommit 851bedcb4cea9de998f3934f4df17f620d2a6718[m
Merge: 49bcf9b bf5714a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Jan 23 11:48:24 2016 -0500

    Merge pull request #5619 from ankitbko/ankitbko/fix-5558
    
    Changed EqualityComparerForDouble and EqualityComparerForSingle to us Equals

[33mcommit 9d7b531e52f28d518ff38f7e09e70651b85fb9f6[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 22 21:45:26 2016 -0500

    Disable CharTests failing on Windows

[33mcommit 5eb4a0405e16f1cc7d2488f9106f644141f62de5[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 22 06:42:46 2016 -0500

    Workaround bugs until new packages are available
    
    Several bugs are causing tests to fail.  Those bugs have been fixed, but the fixes aren't yet available in the packages being targeted by other test libraries breaking because of the bugs. This temporarily works around it by using a P2P reference to skip the packages.

[33mcommit a7d743c973b2eea287c5c6dcde807fe640ed491a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Jan 21 17:20:05 2016 -0500

    Fix System.Linq.Parallel test after ToArray changes
    
    This wasn't caught previously because System.Linq.Parallel.Tests is depending on the System.Linq.dll NuGet package, not the live bits.  Two tests were explicitly verifying object equality.  This isn't necessary; I've simply deleted the offending checks.

[33mcommit 02ece5061a33a7c12113cc4a52b2321d9e6db185[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Jan 23 11:34:35 2016 -0500

    Upgrade packages to rc3-23722

[33mcommit 49bcf9ba480a8f5924ce971ece7e1a7919ee5d2c[m
Merge: ef0d1a5 978e3ea
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Sat Jan 23 07:49:45 2016 -0800

    Merge pull request #5603 from ericstj/NetStandardPackaging
    
    Open packages for NETStandard.Library

[33mcommit ef0d1a5738f6a430cc25ed38e0fcf0c6df0c3eaa[m
Merge: 26701da 3ca77ab
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Jan 22 22:59:47 2016 -0800

    Merge pull request #5580 from weshaggard/ScriptToFindConflictingProjectConfigurations
    
    Script to find conflicting project configurations

[33mcommit 978e3ea1559667dedc38dc1669bb211aadda7efe[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Jan 22 16:15:07 2016 -0800

    Build netcore50aot on Unix for S.R.IS.PInvoke
    
    Currently this is packaged in the contract
    package so it must be built on Unix.

[33mcommit ab7e7579ed170c642b582f82e93d6fbd348a3e1b[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Jan 22 12:58:09 2016 -0800

    Add package for System.Runtime.InteropServices.PInvoke

[33mcommit 2d92745397190adedc86364dafd755e86ab3c5a8[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Jan 22 12:57:42 2016 -0800

    Update packages reacting to InteropServices refactor
    
    https://github.com/dotnet/corefx/commit/4af3f030a158af663dfc42533adab290b294114b
    
    This change rev'ed both System.Runtime and System.Runtime.InteropServices
    to 4.1.  These changes did not require any updates to desktop
    so we can OOB the new facades to desktop.
    
    As a result we need to build these facades and include them in
    the packages.

[33mcommit d90273eec38cd189c918cbcd070e3aed4e196201[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Jan 20 14:35:56 2016 -0800

    Open packages for NETStandard.Library
    
    This moves all library packages that make up
    NETStandard.Library to the open.
    
    I'll follow up with some refactoring of these
    to ensure that all packages with NETStandard.Platform
    use runtime packages to garuntee that they can
    be replaced with an alternate implementation.

[33mcommit 3ca77abd397d27c1cfed52135f3a4adeaf93b80f[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sun Jan 17 23:02:11 2016 -0800

    Update pkgproj references to use metadata for common properties

[33mcommit 05a42a3841b706e1bba6cbaeedd630baf3a1a394[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sun Jan 17 23:01:47 2016 -0800

    Update configurations and use common metadata for csproj files

[33mcommit faa43071c267fd2f2cb6e0157008fe6043729fd1[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sun Jan 17 17:45:12 2016 -0800

    Update ref assembly metadata to match for all project references
    
    Most of the projects that directly reference ref projects are partial
    facades which undefine the OSGroup and TargetGroup properties.
    see https://github.com/dotnet/buildtools/blob/master/src/Microsoft.DotNet.Build.Tasks/PackageFiles/partialfacades.targets#L38
    
    So we do the same for the building of all the ref project in ref.builds

[33mcommit f6f1f5c7e1e1ad22a64b2a678014c3916ad5475b[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Jan 11 00:04:40 2016 -0800

    Script to detect conflicting project configurations.

[33mcommit 4872f5d9863654da536820f3b410e28a26814d26[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Fri Jan 22 18:31:55 2016 -0800

    Move MethodSemanticsAttributes to System.Reflection.Metadata.Ecma335

[33mcommit 538463a0247a4b77de87283e2d8d196d6f92369b[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Fri Jan 22 18:24:34 2016 -0800

    Misc small API additions

[33mcommit 9dd73f335b6e0bc23a1fa7909038cf5dc20c2753[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 22 21:23:06 2016 -0500

    Optimize BufferedStream.ReadByte
    
    BufferedStream is often used to enable reading a byte at a time from an underlying stream efficiently, but its ReadByte method used to do so is dominated by overheads that dominate what should be a few simple operations, e.g. a virtual method call, several non-inlineable method calls, etc.  This commit streamlines the implementation, making the fast path where there's data in the buffer 4x faster.
    
    This has one small behavioral change.  Today each call to ReadByte checks whether the underlying stream is readable, throwing an exception if it isn't.  This is really only necessary if we need to actually read from the stream (and even then it's debatable, since the call to the underlying stream's Read would throw in that case), and if we already have data in our buffer, we've already read and don't need to go back to the stream.  So with this change, we now only check for the underlying stream's readability when we need to go back to the stream to get more data.

[33mcommit 1baa844d3a12a5fc225e4c3408726ed917f3cb6e[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Fri Jan 22 17:39:40 2016 -0800

    Fixing assert conditions for System.Net.Security.

[33mcommit 26701daf52c78639cb70b557b0eb88f4424fa190[m
Merge: b87686d e584f82
Author: VSadov <vsadov@microsoft.com>
Date:   Fri Jan 22 17:36:08 2016 -0800

    Merge pull request #5631 from JonHanna/type_binary_tests_extend
    
    Extend range of expressions covered in type binary tests.

[33mcommit b87686da4271d78b03a7395cd576a76acdcd4f64[m
Merge: 0fdcb6c 36259dc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 22 19:48:29 2016 -0500

    Merge pull request #5635 from stephentoub/symlinks_stat
    
    Make Directory/FileInfo follow symlinks again

[33mcommit 0eea72fba1d1499b6b03adbb65679b406114cfd0[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Jan 12 13:49:42 2016 -0800

    Improve handling of TypeSpecs within signatures
    
    * Introduce ITypeProvider.GetTypeFromSpecification
    
    * Replace EntityHandle with TType in GetModifiedType.
    
    * Provide public entry point for allowing (CLASS | VALUETYPE) TypeSpec,
      which can appear in LocalConstantSig of portable PDB.

[33mcommit 0fdcb6cb466da3ca98afe2e4a302554233cdf340[m
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Fri Jan 22 16:22:56 2016 -0800

    Update Ecma-335-Issues.md
    
    Polish.

[33mcommit 6858408cd474fbdd9b2e56af62e6164c07838ff8[m
Merge: 0b6fdca abc1ad5
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Jan 22 16:16:54 2016 -0800

    Merge pull request #5626 from ianhays/componentmodel
    
    System.ComponentModel: Cache TypeConverter results

[33mcommit 0b6fdca47b24f76b5d5bea2ef4f66356decb27ec[m
Merge: 219d71f 5593ff9
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Fri Jan 22 16:14:23 2016 -0800

    Merge pull request #5595 from tmat/SigUpdates
    
    Implement ECMA spec signature updates

[33mcommit 219d71f9437254b8e03c363fde49d74a3802d035[m
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Fri Jan 22 15:16:45 2016 -0800

    Fix LocalVarType: allow pinned byref

[33mcommit 1f009058a5fafb558a6f05153e73ef1b06a98c98[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Fri Jan 22 14:57:23 2016 -0800

    Initial commit

[33mcommit 6ba9b50fdb8cf8d97ea6f3bde345eba97e4b9850[m
Merge: d4c376f 72cb35e
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Jan 22 14:53:36 2016 -0800

    Merge pull request #5637 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit d4c376f5ff50af1c5e4a7a611a95eefafd752c8f[m
Merge: fb94675 7756a7b
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Jan 22 14:47:38 2016 -0800

    Merge pull request #4977 from venkat-raman251/sys.sec.accessControl
    
    Porting System.Security.AccessControl

[33mcommit e584f82e32a6ebfb45e0b6ab0f9ffa6fa0ea3b9d[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Jan 22 19:53:39 2016 +0000

    Extend range of expressions covered in type binary tests.
    
    Include value-type values of expressions that are typed to reference types
    (object, ValueType or interface type).
    
    This will catch #5610 and as such should not pass CI until #5624 is merged.

[33mcommit bf5714aaa1315d7d94a4950fc7022108843249c2[m
Author: Ankit Sinha <ankitbko@gmail.com>
Date:   Sat Jan 23 04:07:31 2016 +0530

    Added Test for EqualityComparer for Single and Double

[33mcommit 36259dc3c72fb1dc2a71a06db6f7dce9ea88c642[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 22 16:35:23 2016 -0500

    Make Directory/FileInfo follow symlinks again
    
    Previously on unix we would use stat to get information about directories and files for DirectoryInfo and FileInfo.  That meant that we wouldn't correctly report ReparsePoint for symlinks, and the code was changed to use LStat.  But that then breaks important use cases, such as by DirectoryInfo.Exist for a symlink to a directory always returning false.
    
    This commit provides a compromise: we first use lstat, and if we find it's a symlink, we use stat but remember separately that it's a symlink so we can include ReparsePoint in the reported attributes.

[33mcommit fb94675da9f37d9a85fc1abd0017f4face2a6814[m
Merge: 9c01854 b27fea6
Author: Khoa Dang <khdang@users.noreply.github.com>
Date:   Fri Jan 22 13:34:25 2016 -0800

    Merge pull request #5440 from khdang/serialization_collections_of_sametype_as_knowntypes
    
    Add serialization negative tests for different collections of same type as KnownTypes

[33mcommit 72cb35e1aded793b0ef100e8d99b118e12b1ff26[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Jan 22 13:24:47 2016 -0800

    Rename project reference in Open\System.Reflection.Extensions.csproj. Forgot to rename this project reference when I removed the CoreCLR suffix from the TypeExtensions project file.
    
    [tfs-changeset: 1567897]

[33mcommit d5e3d82e7d5855e536643f6611656a9ee81913f7[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Jan 22 20:12:33 2016 +0000

    Stop Expression.TypeEquals throwing on Nullable<T> parameter.
    
    Fixes #5272
    
    Does not contain the bogus further check that caused #5610

[33mcommit 8aab0c22e0b8035c517531cf1e80dd1fb7da089b[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Jan 22 12:08:38 2016 -0800

    Remove "CoreCLR" suffix from the System.Reflection.TypeExtensions project file in the Open directory. This project file is now being used for all different build configurations, not just CoreCLR. Rename all of the references to that project file as well.
    
    [tfs-changeset: 1567878]

[33mcommit 9c0185473d720462aa47acda997d08ce018d3bfa[m
Merge: fac18d8 9eaee15
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 22 14:55:23 2016 -0500

    Merge pull request #5624 from dotnet/revert-5273-fix_5272
    
    Revert "Stop Expression.TypeEquals throwing on Nullable<T> parameter."

[33mcommit fac18d8b452438f476b2976c2b7809b677521208[m
Merge: e86b3e1 aa2e8a7
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Fri Jan 22 10:35:12 2016 -0800

    Merge pull request #5541 from CIPop/snsrw
    
    Porting async implementation and adding TPL overrides for SslStream Read/WriteAsync

[33mcommit e86b3e126e615552fe55a1960ab637a27fe30a28[m
Merge: 4900219 88c467b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 22 13:21:49 2016 -0500

    Merge pull request #5622 from dotnet/stephentoub-patch-1
    
    Update coding style to discuss order of modifiers

[33mcommit 490021929721c75f8016d07509dbac8e22da9a5b[m
Merge: 850d005 bd7ccea
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Jan 22 09:31:02 2016 -0800

    Merge pull request #5618 from weshaggard/UpdatesToInitTools
    
    Updates to init tools

[33mcommit abc1ad5f66d02f058c62ecf56e15af4bfd44c3f6[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Jan 22 08:23:11 2016 -0800

    Add caching to GetConverter for Attribute-discovered Converters

[33mcommit b19d0128e002e8b86d082384c4c3f1a59a61228b[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Jan 22 08:22:10 2016 -0800

    Cache TypeConverter results for built-in types
    
    Uses the IntrinsicTypes table and performs a check for existing entries in that table before doing anything else. Also adds performance tests for GetConverter.

[33mcommit 9eaee1520b4f125afa2315607f24e6497d74c89f[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 22 11:05:42 2016 -0500

    Revert "Stop Expression.TypeEquals throwing on Nullable<T> parameter."

[33mcommit 850d00542cf4b970e4dcbcb57813823072a09ca8[m
Merge: cd235db 09d9e07
Author: Gaurav Khanna <gkhanna@microsoft.com>
Date:   Fri Jan 22 07:59:57 2016 -0800

    Merge pull request #5475 from gkhanna79/AssemblyResolve
    
    Expose Resolving event off AssemblyLoadContext

[33mcommit 88c467b94aeed05c07fa14cc2769f49d66125ab3[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 22 10:56:37 2016 -0500

    Update coding style to discuss order of modifiers
    
    Fixes https://github.com/dotnet/corefx/issues/5620#event-523062924

[33mcommit f94c904b1c126679d383a8a166e2d3c9f278e369[m
Author: Ankit Sinha <ankitbko@gmail.com>
Date:   Fri Jan 22 18:12:22 2016 +0530

    Changed EqualityComparerForDouble and EqualityComparerForSingle to use Equals() instead of ==

[33mcommit 7756a7b6911e3e87dd42e3a00df61e81509eb5f2[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Fri Jan 22 02:13:31 2016 -0800

    Added dotnet to System.Security.AccessControl

[33mcommit cd235dbf9d06d64b06643007de13307bba5b92be[m
Merge: 23720c3 f69710b
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Jan 21 22:35:04 2016 -0800

    Merge pull request #5605 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit bd7ccea46b0a71d082cdc1a4de86150478fc32a9[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Thu Jan 21 21:45:46 2016 -0800

    Fix missing semicolon for and do some small tweaks to clean.cmd

[33mcommit a515a22654098dac9eae41fde7073e9177cfc92d[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Fri Jan 22 11:22:16 2016 +0900

    Address review round #2 comments.
    
     - Add addition extension method, post-check addition only.
    
     - change comparator->comparer
    
     - Add debug comments, tweak asserts for section overflow test.
    
     - Change tests using "custom" comparators.  Use observable comparator to ensure being called.
         The importance isn't what the comparator returns, it's that it's being used/called properly.

[33mcommit b73ac3443c61de35616846bc3953549e7af3b8ed[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Thu Jan 21 21:41:39 2016 -0800

    Add error checking for dotnet cli restoring

[33mcommit 23720c3a483188272c2a71d43359c734fdcb847b[m
Merge: 12c0f65 24dba75
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 21 22:45:09 2016 -0500

    Merge pull request #5551 from stephentoub/secure_unix
    
    Several System.Net.Security fixes

[33mcommit 12c0f65dde9465621931d5912dc9396ed7f002f0[m
Merge: 01b4bfa d4e5149
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Jan 21 18:17:44 2016 -0800

    Merge pull request #5600 from davidsh/disable_test
    
    Disable HttpClient test sometimes failing in CI

[33mcommit f69710b6c30aebba736a826a3c430edc52a2b646[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Jan 21 18:16:08 2016 -0800

    Do not test on OSX or Linux
    
    The builds are not producing bits for these tests on Linux or OSX, so
    don't have run-tests.sh try to invoke them.

[33mcommit 01b4bfacf377186e52794647ab2fdd7d97e50001[m
Merge: 9d16963 78977c1
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Thu Jan 21 18:14:45 2016 -0800

    Merge pull request #5604 from ericstj/SqlClientDefaultWindows
    
    Default to the Windows build of SqlClient

[33mcommit 9d16963865926a95c82beb4a2d779204706eaf28[m
Merge: 5045536 3ae9635
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Jan 21 17:53:03 2016 -0800

    Merge pull request #5590 from davidsh/stream_read_cancel
    
    Fix hang when WinHttpHandler response stream reads are canceled

[33mcommit 5045536a1e5593b5b7f946cb8ee7f6b915b713f0[m
Merge: 9d307e8 2bdbce4
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Jan 21 17:36:18 2016 -0800

    Merge pull request #5602 from mellinoe/fix-xplat-package-build
    
    Fix two issues with x-plat NuGet package builds

[33mcommit aa2e8a7f31077d1787027cd851b88f6a29e126e5[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Wed Jan 13 15:42:19 2016 -0800

    Porting APM functionality for SslStream's InnerStream. Adding TPL wrappers and a simple test proposed by the community.

[33mcommit 09d9e07f4b3ad844a348bfe9a37595763f1cef30[m
Author: Gaurav Khanna (CLR) <gaurav.khanna@microsoft.com>
Date:   Fri Jan 15 15:06:30 2016 -0800

    Expose AssemblyResolve event off AssemblyLoadContext
    
    Fixes https://github.com/dotnet/coreclr/issues/2095

[33mcommit 4af3f030a158af663dfc42533adab290b294114b[m
Author: John Bottenberg <jobotten@microsoft.com>
Date:   Thu Jan 21 16:28:19 2016 -0800

    Refactor cross platform Interop types into System.Runtime.InteropServices.PInvoke.dll
    
    SEE https://github.com/dotnet/corefx/pull/5457 for the OSS pull request associated with this change.
    
    Only a subset of the functionality in System.Runtime.InteropServices.dll can be supported cross-platform, so it is necessary to split its contract and partial facade assemblies.
    
    System.Runtime.InteropServices.PInvoke.dll is the new cross-platform contract.
    
    System.Runtime.InteropServices.dll is the "legacy" contract, available on Windows. Referencing allows an app to use the same set of APIs as before, including all of the COM and Windows-specific APIs. It contains a reference to System.Runtime.InteropServices.PInvoke.dll, and type forwards the cross-platform types there.
    
    System.Runtime.InteropServices.Marshal is a special case. Some of its methods are supported cross-platform, and have been moved to a new type - System.Runtime.InteropServices.PInvokeMarshal. Some of the methods' names have been changed, such as AllocCoTaskMem -> AllocateMemory. The forwarding of PInvokeMarshal methods is done using calls in the "implementation" part of the partial facade - see PInvokeMarshal.cs.
    
    GCHandle and GCHandleType have been moved to System.Runtime.dll as part of this general refactoring - they don't have much to do with Interop.
    
    [tfs-changeset: 1567500]

[33mcommit 78977c160df8be548c4dc9ac512f45ebb3382ff8[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Jan 21 16:19:00 2016 -0800

    Make sure to default to the Windows build of SqlClient

[33mcommit d4e51497615dc182d095b8f1645120811a617e88[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Jan 21 14:52:12 2016 -0800

    Disable HttpClient test sometimes failing in CI
    
    Ref: Issue #5485

[33mcommit 24dba75503899e794ffde2cf07a4ada57f22072a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 20 14:09:21 2016 -0500

    Disable tests failing on CentOS or OpenSUSE

[33mcommit 20199b506c8b1e624de69245ed9fa5b04628178e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 20 09:15:34 2016 -0500

    Re-enable System.Net.Security tests on Linux

[33mcommit 81f6c96f4f0562f1dfdf348f5ea9c126be28251e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 20 11:21:40 2016 -0500

    Fix clientCertificateRequired handling
    
    The design of AuthenticateAsServerAsync has a clientCertificatesRequired flag.  On Unix we were mapping that to "SSL_VERIFY_PEER | SSL_VERIFY_FAIL_IF_NO_PEER_CERT", which causes OpenSSL to fail the handshake if no cert is provided.  But the Windows code actually still allows this through, instead setting a policy error to indicate that no certificate was required.  I'm simply removing the SSL_VERIFY_FAIL_IF_NO_PEER_CERT flag to match that design.  I've also updated the test to assert that the error is actually being set.

[33mcommit b9d6a1a9a46bf4a74624a71cfe42b078c2f86dfc[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 20 10:35:02 2016 -0500

    Update OpenSSL error handling
    
    Fix handling of certain OpenSSL errors to ensure we don't confliate two different error schemes and don't lose error information in the interop code.

[33mcommit 9e63a418f6ab0dc01ab9e51f2ad9d498a35899cd[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 20 09:14:36 2016 -0500

    Fix improper exception handling in ProcessAuthentication
    
    The method sets a flag to indicate that an operation is in progress, then kicks off the operation, and then in a finally block potentially resets the flag.  The intent of resetting it is to reset the flag iff the operation is no longer in progress, which would be the case if the operation was synchronous or if the initiation of the asynchronous operation resulted in an exception.  As such, the finally block is checking whether the operation was synchronous or whether an exception has been captured.
    
    However, for the exceptional case, this leads to race conditions.  The initiation of the asynchronous operaiton can lead to the operation running concurrently with the remainder of the ProcessAuthentication method, namely concurrently with the finally block.  If the operation starts quickly and fails quickly, it'll store the exception, which will cause the finally block to see that an exception has been captured and mistakenly believe that the operation failed synchronously, thus resetting the flag.  But the operation was actually asynchronous, and when EndAuthentication is called, it'll see that the flag has been reset and think that the EndAuthentication call is erroneous, thus throwing an exception.  While it should throw an exception (the one that caused the operation to fail), it ends up throwing an InvalidOperationException instead to signal that EndAuthentication was used incorrectly.
    
    The fix is to move the check for the exceptional situation out of the finally and into a catch block.  The catch block is then used to reset the flag only if an exception emerges synchronously, and the finally block is used to reset the flag only for synchronous operations.  (It's possible that for synchronous operations that fail, the flag could be written as 0 twice... that's fine.)
    
    This fixes the failure on both Windows and Unix.  The failure wasn't reproing on Windows but only because of differences in timing... adding a brief pause at the end of the try block would trigger the failure on Windows as well.

[33mcommit 2bdbce4b045531d8a420472d4c03653c7fe90b42[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Jan 21 15:05:32 2016 -0800

    Fix two issues with x-plat NuGet package builds
    
    * Microsoft.VisualBasic needs to be disabled because the source
      project cannot be built outside Windows.
    * System.IO.FileSystem had an incorrectly-cased path, which I fixed.

[33mcommit 3ae96358a215023f3ecbba13fb4d860693f221c0[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Jan 21 11:16:45 2016 -0800

    Fix hang when WinHttpHandler response stream reads are canceled
    
    The task from ReadAsync was never moving to a terminal state (i.e. "hanging") if the token was marked for cancellation after starting the task. The problem was that our task continuation wasn't being called if the token was cancelled before the continuation was scheduled.
    
    The fix is to avoid passing in the token during the .ContinueWith call. Instead, the token is checked inside the continuation. This puts all the logic in the same place for checking the final status of the ReadAsync operation (which has multiple inner operations) including whether it should fault due to an error or have a successful completion.

[33mcommit b6474eb09d0f179db1f64e4503a6bc5ddcce0c19[m
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Thu Jan 21 14:07:50 2016 -0800

    Adding the option to use curl instead of wget for downloading the tarball

[33mcommit 9d307e8bcd7876f2e5359992b7dcd9ef5b0507cc[m
Merge: ae109f1 3cbe86b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 21 16:30:06 2016 -0500

    Merge pull request #5589 from stephentoub/fix_dataflow_test
    
    Fix a BufferBlock test that failed due to timeout

[33mcommit 5593ff9c0a5d4a8aadb079630a23ee481c657f5b[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Thu Jan 21 13:08:32 2016 -0800

    Implement ECMA spec signature updates

[33mcommit ae109f1b50d847f3857b04a71a47be759f4554e9[m
Merge: 38176a9 770f9c2
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Thu Jan 21 12:42:13 2016 -0800

    Merge pull request #5586 from joperezr/FixDotNetCLIVersionAndUpdateBuildTools
    
    Fix locked version of dotnet cli and upgrade BuildTools

[33mcommit 38176a9e6fb62e7a2657e349aba711bfd90d8296[m
Merge: c8818d1 8e419c7
Author: Venkatraman Mahalingam <vemaha@microsoft.com>
Date:   Thu Jan 21 12:41:34 2016 -0800

    Merge pull request #5527 from venkat-raman251/sys.ref.primitives
    
    Adding netcore50aot to System.Reflection.Primitives

[33mcommit c8818d1907dc3c2313a18d92165c488dadfefa57[m
Merge: 9157333 6902316
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Thu Jan 21 11:59:15 2016 -0800

    Merge pull request #5576 from ericstj/removeWindowsDependencies
    
    Remove dependencies on WindowsIdentity from Unix binaries

[33mcommit 3cbe86bff936bfb73d90bfb9c7e4521834eb6adb[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Jan 21 14:19:17 2016 -0500

    Fix a BufferBlock test
    
    Unnecessary use of a timeout, unnecessarily large number of items being tested, and unnecessarily in outer loop.

[33mcommit 915733313be1ec1793787ff8bd6b0d55466f1408[m
Merge: 2057ba8 b8d542e
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Jan 21 12:45:48 2016 -0600

    Merge pull request #5564 from eerhardt/RemoveTempShims
    
    Remove temporary shim methods

[33mcommit 770f9c2e087a002904c59810e95ed942d034b5cc[m
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Thu Jan 21 10:36:22 2016 -0800

    Fix locked version of dotnet cli and upgrade BuildTools

[33mcommit 2057ba8ab6dc789430c74e16c413ee9d26803e02[m
Merge: 3e84cf0 c48f119
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Thu Jan 21 10:07:16 2016 -0800

    Merge pull request #5578 from Priya91/fixscript
    
    Fix build script for Unix.

[33mcommit 3e84cf0a707c57cad3d094ed361a22dc49664152[m
Merge: 6cd6650 966df51
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Jan 21 10:06:40 2016 -0800

    Merge pull request #5561 from crummel/helixPerfTesting
    
    Add Helix performance testing to the CI config.

[33mcommit 6cd6650070108470a28c3d39bec9d7a32fce9b3c[m
Merge: e0d3b03 2dcdac0
Author: SGuy Ge <SGuyGe@users.noreply.github.com>
Date:   Thu Jan 21 09:25:30 2016 -0800

    Merge pull request #5483 from SGuyGe/XmlUTF8TextReaderPerf
    
    Fixing issue #5482: Port from desktop .NET: Performance improvement for XmlUTF8TextReader when reading invalid chars

[33mcommit e0d3b0304d1170af191880faa75336b4d23b44ef[m
Merge: cb57703 d46889f
Author: Steve Harter <steveharter@users.noreply.github.com>
Date:   Thu Jan 21 10:02:30 2016 -0600

    Merge pull request #5573 from steveharter/AddStackProtector
    
    Add stack-protector compile option for corefx native code

[33mcommit b8d542ed12bc646319f9f24869a6c0b2378e5dfc[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Jan 20 15:17:31 2016 -0600

    Revert "Adding un-prefixed methods temporarily to keep tests running in CI."
    since these temporary methods are no longer needed.
    
    This reverts commit 8cbe097afa063173bd38d0b6fa81d427e9d25c33.

[33mcommit 5905a0153ec864a7f413a539b6535c79e46cc2ba[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Jan 20 15:14:13 2016 -0600

    Revert "Adding temporary un-prefixed native shim methods to keep the CI happy."
    since these temporary files are no longer needed.
    
    This reverts commit 1695bde2735b10c04d1c6a34642bb049dd364140.

[33mcommit c77653bd4f122108952453d494dad75943892793[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Jan 20 15:09:22 2016 -0600

    Revert "Adding un-prefixed methods temporarily to keep tests running in CI."
    since these temporary files are no longer needed.
    
    This reverts commit 44ab6dec7855392d1d920d3787b956667af3cde9.

[33mcommit ea4b19c136f3fa6355fd307b38cbe605b519b5eb[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Jan 20 13:43:28 2016 -0600

    Bump ExpectedPrerelease version to latest (rc2-23713)

[33mcommit b021b5f038fff3cde272ddce5faa020e897a269e[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Wed Aug 26 21:37:41 2015 +0900

    Translate StringCollection and String Enumerator Tests.

[33mcommit da34d50830b7d762a899c0ebd89e73abb48e7b39[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Tue Aug 18 14:31:21 2015 +0900

    Update BitVector32 Tests.
     - Translate existing Tests.
     - Equals and GetHashCode Tests:
           original tests for GetHashCode had `item.GetHashCode() !=
           differentItem.GetHashCode()`, which is probable but **not**
           guaranteed....
     - Add Section creation error tests.
     - Add Section Get/Set error tests.

[33mcommit e7113c4f709ffa7ff91cadba12fdd176a7ad012c[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Thu Sep 10 09:02:10 2015 +0900

    Translate ListDictionary tests

[33mcommit 47c2ba8161f3b366b2977b161f510731adeeef04[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Wed Aug 26 18:52:23 2015 +0900

    Remove ICollectionTests (unused)

[33mcommit d5f3e98fdbbe6aec6228a0c2c60ac01642e758dc[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Tue Oct 6 10:12:10 2015 +0900

    Add non-generic-collection asserts.

[33mcommit cb577036404b368f1b52c6e09e30cf43e6537f14[m
Merge: 4336479 06e51bc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 21 08:12:50 2016 -0500

    Merge pull request #5579 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 433647957506fcee018459c9bc490c0abde49190[m
Merge: a58f490 bc69058
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 21 07:52:55 2016 -0500

    Merge pull request #5562 from stephentoub/toarray_empty
    
    Use Array.Empty<T> in ToArray

[33mcommit a58f490274e286d844d277f2658f2c074a4d5350[m
Merge: 76cb12b 5d9018d
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Wed Jan 20 23:08:59 2016 -0800

    Merge pull request #5513 from weshaggard/DevWorkflow
    
    Initial set of dev workflow scripts for windows

[33mcommit 5d9018ddbc3ef46515ebaa2786c4ac2c89ce41d8[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Jan 18 20:39:34 2016 -0800

    Initial set of dev workflow scripts for windows
    
    Adds Clean.cmd and Sync.cmd
    
    There is also an option added for disabling batch restore of packages
    during the build. Right now it restore is still enabled by default
    but eventually it will be disabled and restore will only happen when
    you call sync.cmd or build an individual project.
    
    To disable batch restoring during build people can do one of 2 things:
    1) set RestoreDuringBuild=false in your enviroment
    2) pass /p:RestoreDuringBuild=false to build.cmd

[33mcommit 06e51bc7c5ca48a110d756e5a3fac292fb76a428[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Wed Jan 20 21:11:09 2016 -0800

    [WesH] Rollback part of 1566958, the part that changed System.ComponentModel.Annotation as that break the build and seems to be incomplete.
    
    [tfs-changeset: 1567198]

[33mcommit 76cb12b1a5c02134d39a2b79863a949bc8f3fab5[m
Merge: cc206c8 2eaa55d
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Jan 20 20:11:23 2016 -0800

    Merge pull request #5559 from mellinoe/system.net.http.rtc.netcore50.2
    
    Add netcore50 configuration for System.Net.Http.Rtc

[33mcommit 8e419c7a7873579e7418f156964b19c4129627bc[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Wed Jan 20 18:59:12 2016 -0800

    Added netcore50 to System.Reflection.Primitives

[33mcommit bc690582953c1088dd116f8cae88db642733c8fc[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 20 15:16:24 2016 -0500

    Use Array.Empty<T> in ToArray
    
    We decided this is acceptable.  Changing System.Collections, System.Collections.Concurrent, and System.Linq accordingly.

[33mcommit c48f1191761c4adaab4ffbdb1eb65a24378d54ae[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Wed Jan 20 17:37:31 2016 -0800

    Fix build script for Unix.

[33mcommit 2dcdac032ef43af71408fd3ce8e2ff21a98b7c74[m
Author: SGuy Ge <sguyge@microsoft.com>
Date:   Fri Jan 15 17:18:50 2016 -0800

    Fixing issue #5482: Port from desktop .NET: Performance improvement for XmlUTF8TextReader when reading invalid chars
    Perf comparison    Before                               After
    TestEFBytes             ~360 ms, 10 iterations   ~35 ms, 29 iterations
    TestAsciiBytes        ~7.x ms, 137 iterations   ~7.x ms, 123 iteration

[33mcommit 6902316fed76f2a905ef626b7ef0a64b4749a237[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Jan 20 16:56:04 2016 -0800

    Remove dependencies on WindowsIdentity from Unix binaries
    
    It looks like a couple libraries were using
    System.Security.Principal.Windows unintentionally in their
    Unix implementations.  @dagood discovered this when
    trying to restore our tools-runtime project for unix RIDs.
    
    This fix removes the dependencies from those libs
    in the CoreFx repro.
    /cc @CIPop @saurabh500
    
    It looks like WCF also has this problem as well,
    since it hasn't split System.Private.ServiceModel
    into windows specific packages.
    /cc @StephenBonikowsky

[33mcommit cc206c82d9af6e2e2d3d1ce5d0f13437b151908a[m
Merge: e1744cd 0bbeb62
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Wed Jan 20 15:44:22 2016 -0800

    Merge pull request #5355 from sokket/compression
    
    Adding System.Buffers support to the System.IO.Compression namespace

[33mcommit e1744cd70f4c92dec468dfe1dab1199647281f64[m
Merge: 49793bd 230e498
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 20 18:41:09 2016 -0500

    Merge pull request #5568 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 49793bdecfea0f97d077756a03e06ca2de778563[m
Merge: c561839 a8a6daf
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Jan 20 15:28:54 2016 -0800

    Merge pull request #5542 from venkat-raman251/sys.ref.extensions
    
    Adding netcore50aot to System.Reflection.Extensions

[33mcommit c5618394d75435e3a4ecfa34c4911d6c2fe3ac12[m
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Wed Jan 20 15:27:00 2016 -0800

    Update Ecma-335-Issues.md

[33mcommit 2c0503f792a911baec44e5e699786ee8b25654d9[m
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Wed Jan 20 15:26:01 2016 -0800

    Update Ecma-335-Issues.md

[33mcommit bfd9967a699e26c0c28b4a0cfb13ca4742e44072[m
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Wed Jan 20 15:21:30 2016 -0800

    Formatting changes

[33mcommit 0f9ae0f6ba3dc3c408603680d8450b8c65331109[m
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Wed Jan 20 15:19:06 2016 -0800

    ECMA335 errata - custom modifiers

[33mcommit d46889f0ffa2d3b1cc0d3a9893086cfe31d1c360[m
Author: Steve Harter <sharter@microsoft.com>
Date:   Wed Jan 20 16:28:21 2016 -0600

    Add stack-protector compile option for native code

[33mcommit fda592702c476e6337e088b125c1f0ad92480395[m
Merge: e864137 55295c8
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 20 17:31:23 2016 -0500

    Merge pull request #5563 from eerhardt/GitIgnoreUpdate
    
    Updating .gitignore file to ignore VS 2015 Update 1 files

[33mcommit 2eaa55dbadff9394795e10472452b0277f811a90[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Jan 19 15:44:33 2016 -0800

    Add netcore50 build for System.Net.Http.Rtc

[33mcommit e864137af60d7a93cbaf64b236d00b484024318b[m
Merge: dfb70a5 be6a483
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 20 17:28:53 2016 -0500

    Merge pull request #5518 from stephentoub/concdict_perf
    
    Tweak ConcurrentDictionary perf

[33mcommit f3263e16dc651373163eb0c0ac4f24a5e0c9ba9a[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Wed Jan 20 14:17:50 2016 -0800

    Obsoleting SSL2, 3. Re-creating System.Net.Primitives.sln.

[33mcommit 230e498ae54586a2283fcbc8f48bb27baad82866[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Wed Jan 20 14:15:43 2016 -0800

    Add System.Native.a to runtime system.native package.
    
    This change updates the open packaging for runtime.System.Native.  It also updates the closed packaging though the closed packaging has been deprecated and should be superseded by the open source packaging.
    
    [tfs-changeset: 1566958]

[33mcommit 0bbeb6253cdd9ce939aa6d8c86bf9bacff885c5e[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Tue Jan 12 14:48:01 2016 -0800

    Adding System.Buffers support to the System.IO.Compression namespace

[33mcommit a8a6daf320567d423e3cbee7ccbb929552a49b81[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Wed Jan 20 13:40:44 2016 -0800

    Added netcore50aot to System.Reflection.Extensions

[33mcommit 55295c8554224812eab659016a3bf2eb0504b581[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Jan 20 15:01:58 2016 -0600

    Updating .gitignore file to ignore:
    
    - opendb files created by Visual C++
    - *.nuget.targets files created by NuGet

[33mcommit dfb70a5cc9e90b69cf89ac9eb64b48b35b841773[m
Merge: aa5deda 53b777b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 20 15:57:14 2016 -0500

    Merge pull request #5554 from stephentoub/proxy_creds_unix
    
    Ignore default proxy credentials in CurlHandler

[33mcommit be6a48345372d4128e8c23c770f5efa328d210c5[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Jan 19 13:07:04 2016 -0500

    Address PR feedback

[33mcommit 966df51936bddb58c9a6583a372a375adaf82a5e[m
Author: Chris Rummel <crummel@microsoft.com>
Date:   Thu Jan 14 15:41:39 2016 -0600

    Add Helix performance testing to the CI config.
    Perf tests are currently run on Win10 only but can be built on any Windows machine.
    This depends on the Helix plugin being installed on the Jenkins server.

[33mcommit aa5deda492c1e088c37d5ea0568630c2032090a6[m
Merge: 7eb6dc3 3eb6029
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Jan 20 10:48:44 2016 -0800

    Merge pull request #5526 from mellinoe/system.net.http.netcore50
    
    Add netcore50 configuration to System.Net.Http

[33mcommit 53b777baacf9f70cfdeb322038717eb4b5e6db48[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 20 13:15:43 2016 -0500

    Ignore default proxy credentials in CurlHandler
    
    There aren't "default credentials" on unix.  Just as CurlHandler treats UseDefaultCredentials as a nop, it should treat default proxy credentials as a nop rather than throwing an ArgumentException.

[33mcommit f6d416229641ec5650f4d08ed1d35a89d6098afe[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Jan 20 18:07:20 2016 +0000

    Allow block expressions to have zero sub-expressions
    
    Fixes #3043
    
    Type of block is always void, with attempts to set it to anything else
    erroring.

[33mcommit 7eb6dc30df3a2d431d1bdb20c149ff7a6df5578d[m
Merge: e51d229 1a2ffc4
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Wed Jan 20 10:06:37 2016 -0800

    Merge pull request #5532 from CIPop/logDocs
    
    Adding logman instructions and System.Net new providers.

[33mcommit 1a2ffc42ee6dd364396af8e4762587853cbc80c9[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Tue Jan 19 14:36:46 2016 -0800

    Adding logman instructions and System.Net new providers.

[33mcommit e51d229fdfd73bfa93b8568c4b7f49f748591c6c[m
Merge: 0fc3a54 aff5649
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Wed Jan 20 09:06:37 2016 -0800

    Merge pull request #5515 from venkat-raman251/sys.priv.dataserial
    
    Added netcore50aot to System.Private.DataContractSerialization

[33mcommit 0fc3a546f2c632f376cdf1d4751930a05bfdb143[m
Merge: 4aa6ec7 78a89e1
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Wed Jan 20 09:05:18 2016 -0800

    Merge pull request #5550 from pgavlin/BuildToolsOverrideRuntime
    
    Bump the build tools version number.

[33mcommit 78a89e108f9f9e90f95b303f66c437ce0b2e6665[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Wed Jan 20 07:51:19 2016 -0800

    Bump the build tools version number.
    
    This is necessary to pick up changes to the build tools that
    re-enables the use of BUILDTOOLS_OVERRIDE_RUNTIME.

[33mcommit 4aa6ec7b20e846e9b6f1207cb3b152d907ce6ade[m
Merge: 2460c1e 4d159a8
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 20 08:59:37 2016 -0500

    Merge pull request #5548 from JonHanna/fix_5498
    
    Fix typo outter → outer

[33mcommit 2460c1e889184e031c2837e70f7b211dc364c00e[m
Merge: 17eeeec c180cc0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 20 07:11:47 2016 -0500

    Merge pull request #5529 from pgavlin/BuildToolsOverrideRuntime
    
    Respect BUILDTOOLS_OVERRIDE_RUNTIME in init-tools.

[33mcommit 17eeeec94fa928408f7a1f92754d8dfe0220c7e4[m
Merge: b5cb33d 7430562
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 20 07:11:26 2016 -0500

    Merge pull request #5543 from jkotas/synchronized-list
    
    Remove SynchronizedList

[33mcommit 4d159a82cfaa48bd53de3ddda35f1e0b9c65ca60[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Jan 20 11:32:58 2016 +0000

    Fix typo outter → outer
    
    Fixes #5498

[33mcommit ddc1f887cd5f55e55135c13d14281c7751c49d6c[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Jan 20 11:10:36 2016 +0000

    Allow a SwitchExpression that has no SwitchCase
    
    Fixes #1877
    
    SwitchValue is evaluated in case it has side effects, then DefaultBody if present.
    
    DefaultBody supplies implicit type (or void if absent). If there is an explicit
    type and no ‎DefaultBody then that explicit type must be void.

[33mcommit b5cb33d1b8b75258aabd5dcbda2a7cde9ce15db4[m
Merge: fb4c5ea e026afa
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Jan 19 23:26:32 2016 -0800

    Merge pull request #5544 from ellismg/fix-init-tools-on-windows-7
    
    Fix build on Windows 7

[33mcommit e026afab985ec0b94022ab7eec2e5d2f783d60c7[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Jan 19 22:02:33 2016 -0800

    Fix build on Windows 7
    
    There were two issues that we were hitting (with the first masking the
    second).
    
    1. We seem to hit https://github.com/dotnet/coreclr/issues/2153 most of
    the time we tried to restore the tool-runtime (which manifested itself
    as a AV in CSC).  Until that issue is fixed, we can use the
    COMPlus_ReadToRun environment variable to work around the issue.
    
    2. We changed the unzipping part of the powershell init script to use
    System.IO.Compression.FileSystem, but that did not work on Windows
    7 (Add-Type refuses to load the assembly within PowerShell). I added
    some extra logic to fall back to the shell stuff when we can't load the
    managed libraries. This does mean we'll pop UI when restoring the tools
    on Windows 7, but there's no real harm in doing so.
    
    Fixes #5493

[33mcommit 7430562c124f85803bbea624b71615906948e914[m
Author: Jan Kotas <jkotas@microsoft.com>
Date:   Tue Jan 19 20:56:38 2016 -0800

    Remove SynchronizedList
    
    CoreRT port of https://github.com/dotnet/coreclr/pull/2720

[33mcommit fb4c5ea5c7dc81c04f614612ae33bb2341b54db4[m
Merge: 5c95729 556f7e2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 19 23:18:12 2016 -0500

    Merge pull request #5534 from stephentoub/port_stream_to_corefx
    
    Two Stream.Read/WriteAsync improvements

[33mcommit 5c957295cef15e3f7357dd5a346b6edfd31acd50[m
Merge: 5f625fe 52db6e4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 19 23:14:47 2016 -0500

    Merge pull request #5535 from terrajobst/terrajobst/link-to-docs
    
    Add links to triage, road to RTM, and porting

[33mcommit 5f625fee114b109f84ce86b0cea6fe670d1d37a8[m
Merge: 16e5896 348f68c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 19 23:12:47 2016 -0500

    Merge pull request #5522 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 16e58968d97ab59cce31c3c15cfc795f910986f4[m
Merge: 949ae8a 2cbd1cf
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 19 23:02:25 2016 -0500

    Merge pull request #5524 from AlexGhiondea/AppContext_Tests
    
    Add tests for System.AppContext

[33mcommit 949ae8a27ab948068cb145379cf6094a6909a865[m
Merge: d3a049c 9df809c
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Tue Jan 19 17:39:17 2016 -0800

    Merge pull request #5539 from weshaggard/FixDotnetCLIVersion
    
    Fix dotnet cli version number to a specific version

[33mcommit 9df809c1e4c694876b270120fb4eceac5881c10f[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Tue Jan 19 16:01:16 2016 -0800

    Fix dotnet cli version number to a specific version
    
    While we would like to use 'Latest' as the version for dogfooding
    purposes, we have to keep our builds unblocked and there is currently
    a breaking change we have to react to. So to unblock we are fixing
    to a particular version we know works.

[33mcommit c180cc0ef7adfde965514e0bce85e09668b09a9d[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Jan 19 13:29:38 2016 -0800

    Respect BUILDTOOLS_OVERRIDE_RUNTIME in init-tools.
    
    If the user has specified a value for BUILDTOOLS_OVERRIDE_RUNTIME
    (e.g. if they are building on an OS or distro for which a package
    is not available), copy the specified runtime into the necessary
    locations for dotnet, dnx, etc.

[33mcommit d3a049c63747f10bb22635f7c3aa93dea1c0d9dd[m
Merge: a433613 032d5c8
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Jan 19 15:38:42 2016 -0800

    Merge pull request #5537 from nguerrera/spec-2
    
    Add proposed spec change for type specs in modifiers

[33mcommit 032d5c8a18ff7ebcd82664d629921fc60c6ff558[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Jan 19 15:09:58 2016 -0800

    Add proposed spec change for type specs in modifiers

[33mcommit a433613c4e2d9c4501437084ec9432ada1723307[m
Merge: ee137b0 51c3b9c
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Tue Jan 19 14:59:54 2016 -0800

    Merge pull request #5354 from tmat/PEBuilder
    
    PEBuilder implementation

[33mcommit 52db6e430134c9b005a3dfb3823f50db3fd50837[m
Author: Immo Landwerth <immol@microsoft.com>
Date:   Tue Jan 19 14:56:48 2016 -0800

    Add links to triage, road to RTM, and porting

[33mcommit 556f7e289b922611cb867d26e2c9dd862b7982dc[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Jan 19 17:52:08 2016 -0500

    Two Stream.Read/WriteAsync improvements
    
    A logical port of two of the three fixes in https://github.com/dotnet/coreclr/pull/2724.  Makes it so that Read/WriteAsync calls are serialized asynchronously rather than synchronously, and so that Wait()'ing on a Read/WriteAsync task may be able to inline the execution onto the current thread.  This also reduces allocations when calling Read/WriteAsync (though there are still more optimizations that could be done).

[33mcommit ee137b088a848e0da597486aedd2d6d81ff9af71[m
Merge: 2b15de7 1ecd4fe
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Tue Jan 19 14:50:01 2016 -0800

    Merge pull request #5514 from dotnet/EcmaFix1
    
    Update Ecma-335-Issues.md

[33mcommit 1ecd4fe3056a954b8e792e63546d97d56e424103[m
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Tue Jan 19 14:49:55 2016 -0800

    Update Ecma-335-Issues.md

[33mcommit 2b15de70c1cf9f585c4878a722de4dbe42b4940b[m
Merge: e5b2593 65dbd33
Author: Immo Landwerth <immo@landwerth.net>
Date:   Tue Jan 19 14:47:06 2016 -0800

    Merge pull request #5480 from terrajobst/terrajobst/docs
    
    Add documentation for porting, triage, and issue bar

[33mcommit 65dbd33662f9d19eec709f308ef651de1ace1827[m
Author: Immo Landwerth <immol@microsoft.com>
Date:   Tue Jan 19 14:46:08 2016 -0800

    Address review feedback

[33mcommit 2cbd1cf2ed822eadad8e34ac44c69d5313e1ec31[m
Author: Alex Ghiondea <ghiondea.alexandru@microsoft.com>
Date:   Tue Jan 19 12:30:41 2016 -0800

    Add tests for System.AppContext

[33mcommit e5b2593b33e62ef8724219636885318854b55ad7[m
Merge: f2a226b c7052d9
Author: AlexGhiondea <AlexGhiondea@users.noreply.github.com>
Date:   Tue Jan 19 13:50:30 2016 -0800

    Merge pull request #5517 from JonHanna/fix_5516
    
    Ensure same lock is used to read and write Dictionary in AppContext

[33mcommit f2a226b01db215ea2b3ce69ebd9c60b0630fdb77[m
Merge: df1fe17 5fed590
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Jan 19 13:25:18 2016 -0800

    Merge pull request #5098 from venkat-raman251/sys.runtime.serial.primitives
    
    Adding Desktop to System.Runtime.Serialization.Primitives and Xml

[33mcommit 3eb60290fcaa5c9d5f57c4f5dea267916442e07c[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Jan 19 12:51:45 2016 -0800

    Add netcore50 configuration for System.Net.Http

[33mcommit 348f68c973e429d48cab6107ed6b8ae8404820c7[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Jan 19 12:17:11 2016 -0800

    Update Prerelease Tag to RC3
    
    Since we have branched for RC2, we should use a different pre-release
    tag for builds out of ProjectK/master.
    
    [tfs-changeset: 1566436]

[33mcommit b27fea61f47a094831b95d850ff76239bcf6f671[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Tue Jan 19 10:43:26 2016 -0800

    Fix compilation error during merge in serialization tests

[33mcommit 51c3b9ca6406bdaf2f0b28b3ba5af8297478b48f[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Tue Jan 19 09:13:49 2016 -0800

    PEBuilder implementation

[33mcommit 0c386687dcf129e5a5ee30006b3cd42486e27c45[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Jan 19 10:34:02 2016 -0500

    Add readonly/sealed to a few more places in ConcurrentDictionary
    
    Just for good measure.

[33mcommit 8c3a1bac543c7654b37a9506e3382f184849ba16[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Jan 17 10:46:51 2016 -0500

    Improve inlining of several ConcurrentDictionary methods
    
    Most importantly TryGetValue, the indexer, and ContainsKey. On a microbenchmark around TryGetValue, this improved throughput by up to 20% depending on the situation.

[33mcommit 4081c48e1d7d87dd827946b5fb2b7fa7c8dc0506[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Jan 17 09:49:07 2016 -0500

    Fix several style issues in ConcurrentDictionary

[33mcommit dd6e8994dbce7ffebb02b4b053e8ad505b7cd573[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Jan 17 09:07:19 2016 -0500

    Remove default concurrrency level multiplier
    
    Today when constructing a ConcurrentDictionary without specifying a concurrency level, the level defaults to Environment.ProcessorCount multiplied by a multiplier.  In my own measurements stressing writes, this multiplier has only a small effect on write throughput but a significant effect on memory consumption.  I'm removing the multiplier and leaving the default at Environment.ProcessorCount.  This provides a more reasonable compromise between wanting good write throughput while still respecting memory size in the common use case of lots of reads and few writes.  A developer can always specify their own concurrencyLevel and capacity if they want more control over memory allocations.
    
    A benchmark that estimates the memory consumption of a Dictionary<int, string> vs a ConcurrentDictionary<int, string> with string.Empty as
    values...
    Before:
    ```
    Items: 0        DSize: 80       CDSize: 976     Ratio: 12.2x
    Items: 1        DSize: 192      CDSize: 1016    Ratio: 5.29166666666667x
    Items: 10       DSize: 472      CDSize: 1376    Ratio: 2.91525423728814x
    Items: 100      DSize: 4072     CDSize: 7552    Ratio: 1.85461689587426x
    Items: 1000     DSize: 38772    CDSize: 67611   Ratio: 1.74380996595481x
    ```
    After:
    ```
    Items: 0        DSize: 80       CDSize: 544     Ratio: 6.8x
    Items: 1        DSize: 192      CDSize: 584     Ratio: 3.04166666666667x
    Items: 10       DSize: 472      CDSize: 944     Ratio: 2x
    Items: 100      DSize: 4072     CDSize: 5824    Ratio: 1.43025540275049x
    Items: 1000     DSize: 38772    CDSize: 53740   Ratio: 1.38605178995151x
    ```

[33mcommit c7052d9b0e1b3fb0c4d20e0adce254045566df6b[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Jan 19 13:08:10 2016 +0000

    Ensure same lock is used to read and write Dictionary
    
    Fixes #5516

[33mcommit aff564960a1f606162af45bc3b1caefe3ca1fd4f[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Tue Jan 19 02:29:18 2016 -0800

    Changes to System.Private.DataContractSerialization

[33mcommit 5fed5907e9d92683a7de98de90457f303315122a[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Tue Jan 19 01:47:56 2016 -0800

    Changes to System.Runtime.Serialization.Primitives and Xml

[33mcommit 1bb1c9fd0f88e40319fc56155a396c8a020a3db1[m
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Mon Jan 18 21:51:02 2016 -0800

    Update Ecma-335-Issues.md

[33mcommit 3c079216a2b125adfc3b23be54114b8a911a9511[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Nov 20 10:41:35 2015 +0000

    Test writeback of UnboxExpression, and add comment explaining why
    explicit write-back is not needed.
    
    Tests for different write-back and no-write-back cases.
    
    Consolidate duplicate branches and replace runtime exception on impossible
    case with assertion.
    
    Fix tests namespaces to remain inline with #2898
    
    Handle readonly and const fields in writeback
    (by not writing back)

[33mcommit 3937da97d3c8d2d0b8069faade90d80a5831bf68[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Tue Oct 27 00:48:25 2015 -0700

    Enabling tests.

[33mcommit c8e84d0bf68d194c2fdc1d6584d859210164b74c[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Oct 27 01:44:53 2015 +0000

    Interpreted expressions shouldn't write back to delegate instances of calls.
    
    Fixes #4150
    
    Interpreted expressions executing a `‎Call()` write back to the instance of the
    method after the call, so that mutable structs are mutated correctly. This is
    harmless in most cases to which it doesn't apply, but can cause bugs when the
    instance is mutated from the outside over the course of the call, including
    when delegates are `Invoke()`d as that becomes a `Call()` with the delegate
    as its instance.

[33mcommit df1fe176b1a1a2c1e97d39afa83197f198a97dca[m
Merge: 017e61b 3fba0b7
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Mon Jan 18 18:38:21 2016 -0800

    Merge pull request #5510 from weshaggard/FixSysRuntimeExtensionsPackage
    
    Fix System.Runtime.Extensions package due to duplicate netcore50aot assets

[33mcommit 017e61b289e5382cd990044b00b110d857467c10[m
Merge: 27ea3a6 506b375
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Mon Jan 18 18:34:46 2016 -0800

    Merge pull request #5509 from weshaggard/FixCoverageBuilds
    
    Need to flow SerializeProjects=true to the child processes when doing CodeCoverage builds.

[33mcommit 27ea3a6a344fd140282d18146b0d73bae9e2f67e[m
Merge: 9e9697f a57574c
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Mon Jan 18 17:17:44 2016 -0800

    Merge pull request #5506 from weshaggard/TweakBuildScripts
    
    Update init-tools.cmd and build.cmd scripts

[33mcommit 3fba0b71b8bea3b391187546426fd88a1262c97c[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Jan 18 17:01:32 2016 -0800

    Fix System.Runtime.Extensions package due to duplicate netcore50aot assets
    
    Package broken by https://github.com/dotnet/corefx/pull/5506. For this
    case we need to explicitly make the netcore50aot version Windows_NT
    specific.

[33mcommit 506b375d5e189240712715267b14889ee113e2ef[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Jan 18 16:07:03 2016 -0800

    Need to flow SerializeProjects=true to the child processes when doing CodeCoverage builds.

[33mcommit 9e9697fbe0fe919e43e21dc8fd3a5cce25bcfc48[m
Merge: a5ad027 fee132f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 18 18:43:16 2016 -0500

    Merge pull request #5492 from stephentoub/parallel_invoke_inline
    
    Make Parallel.Invoke run one action synchronously

[33mcommit a5ad0272936d605a2067790eb39b0a0d9959d0ba[m
Merge: 003c259 96f1a3e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 18 18:43:06 2016 -0500

    Merge pull request #5504 from JonHanna/typo_propertinfo
    
    Typo Fix: PropertInfo → PropertyInfo

[33mcommit 003c2597e284fecdda664f855a2faad36728a4c2[m
Merge: ee3d3e6 3455f80
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Mon Jan 18 14:21:50 2016 -0800

    Merge pull request #5496 from weshaggard/UpdateBuildsFiles
    
    Normalize .builds and .csproj file configurations

[33mcommit a57574cbe5777855caceb662a5ce3c029ad128d4[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Jan 18 12:36:12 2016 -0800

    Update init-tools.cmd and build.cmd scripts
    
    Move init-tools to the top of build.cmd
    
    Clean-up init-tools.cmd script and put most stuff out into a log file
    
    Update build.cmd to add timestamp during logging also add timestamps
    around the batch restore target so we can see how log it takes.
    
    Adds the Summary option which will dump all the warnings and errors
    at the end of the console output so the are more noticable.
    
    Also cleans out the unnecessary restoring of packages.config files as we
    no longer have any of those.

[33mcommit 3455f80483fbe89894f8ba69eafa0641bc78ecd8[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Jan 18 12:16:08 2016 -0800

    Remove OSGroup=Windows_NT from netcore50/netcore50aot configurations
    
    Originally the goal was to tag the configurations with OSGroup=Windows_NT
    if they were only applicable on that OS. However there is nothing particular
    to that OS for most of them and they can build and run on an OS that supports
    the managed dependencies.
    
    More importantly we want to enable people to build IL only packages on any
    OS and not force them to have a separate windows only package for things targeting
    netcore50/netcore50aot. As an example System.AppContext recently introduced
    an IL only package that can and should build fine on other OS's.

[33mcommit 06585519425867028b0da42711ab71dc1e14ff2c[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Mon Oct 26 20:00:00 2015 -0700

    Adding tests for write-back behavior of MethodCallExpression in the compiler and interpreter.

[33mcommit 96f1a3eec0a5693d66a9058bdbff2ee847e183b5[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Mon Jan 18 16:21:04 2016 +0000

    Typo Fix: PropertInfo → PropertyInfo

[33mcommit ee3d3e6ff1d09a8eecb753517373ae7dcb8ff7f8[m
Merge: 10e9b23 d0f153f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 18 06:38:38 2016 -0500

    Merge pull request #5499 from ellismg/fix-5082
    
    Reenable OpenSUSE inner loop per PR

[33mcommit d0f153f0a486b382dadc65935d55428dec8cfc63[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Mon Jan 18 01:44:17 2016 -0800

    Reenable OpenSUSE inner loop per PR
    
    The JIT issues that were hitting us seem to be addressed now and the
    jobs have been green for a long while. Re-add the jobs as a per CI gate.
    
    Fixes #5082

[33mcommit 10e9b23d75e62d04a5212ae5e018916142104776[m
Merge: 9eab472 079bcba
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Mon Jan 18 00:48:32 2016 -0800

    Merge pull request #5494 from weshaggard/FixBuildWarnings
    
    Fixes the build warnings about conflicting references

[33mcommit e7e275654026c2488f6a4116ff5f390e8ce015be[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Jan 18 00:42:32 2016 -0800

    Normalize .builds and .csproj file configurations
    
    GenerateBuilds.ps1 generates the builds and default configurations
    based on the configurations listed in the csproj. This commit is a
    result of running the script to normalize and fixing any bad configurations.

[33mcommit 079bcba1f71b195f95471954bcd7eab877def909[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sun Jan 17 23:33:13 2016 -0800

    Update renamed project reference to eliminate build warning

[33mcommit de55c401bcddf2cac40a72992329612e5f4b0c9f[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sun Jan 17 17:41:04 2016 -0800

    Fixes the build warnings about conflicting references
    
    Fixes https://github.com/dotnet/corefx/issues/5334
    
    Majority of these warnings are just inconsistencies between different
    versions of the references coming from project.json, including the closure.

[33mcommit fee132f8ece1e69a858f289fe09bb1703b3a56f7[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Jan 17 22:56:36 2016 -0500

    Make Parallel.Invoke run one action synchronously
    
    When supplied with a small number of actions, Parallel.Invoke processes them with one task for each (for more actions it uses a parallel loop).  Today, it starts each task and then waits for them all.  The act of waiting on them will attempt to inline any that haven't started yet, but if a smaller number of actions is provided than there are free threads in the thread pool, there's a good chance that all of the actions will have started executing by the time we call WaitAll, at which point WaitAll won't be able to inline any of them.  Instead, we can queue N-1 of the tasks and run one of them synchronously on the current thread (assuming the associated scheduler allows it, which the default will); this optimization already happens implicitly in the other path the uses a parallel loop.
    
    (This change was already made for the full framework.)

[33mcommit fa36bcedada53596b00a44022e34f3051a9c436c[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Fri Jan 15 17:00:53 2016 -0800

    Refactor variable name in serialization test

[33mcommit 8e38dca26f1e7ba3494e08ab1b34158aac516de3[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Thu Jan 14 15:45:14 2016 -0800

    Add serialization negative tests for different collections of same type as KnownTypes

[33mcommit 9eab472a93bce7169e3b10f33eebf3a3771b210d[m
Merge: 09f97cb fd7a821
Author: Khoa Dang <khdang@users.noreply.github.com>
Date:   Sun Jan 17 15:39:35 2016 -0800

    Merge pull request #5398 from khdang/fix_serialization_recursive_collection
    
    Fix serialization of recursive collections in data contract serializers

[33mcommit 09f97cbd07454013d03345820542abdb38aa682d[m
Merge: 7fccd77 6bb5062
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Jan 16 14:54:18 2016 -0500

    Merge pull request #5473 from stephentoub/nameres_test
    
    Fix GetHostByName_HostName_GetHostByAddr test

[33mcommit 6bb50624c66f22ad32148d6ab991481652963f3e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 15 18:06:28 2016 -0500

    Fix GetHostByName_HostName_GetHostByAddr test
    
    I couldn't repro the original failure mentioned, and instead got a deterministic failure on every execution.  I've fixed that, and was able to run the test 10,000 times on both Windows and Linux without failure.

[33mcommit 7fccd77237cd166b247182ddf6a2eebb9110d510[m
Merge: d434f95 25c350e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Jan 16 06:52:37 2016 -0500

    Merge pull request #5455 from eerhardt/Add2185Tests
    
    Adding tests for the last 2 issues noted in coreclr#2185

[33mcommit fd7a82168d2b36fa8693f6b3d4801f851865313d[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Fri Jan 15 16:50:48 2016 -0800

    Add DCJS test for recursive collection

[33mcommit 0e5b75a051d53936bc49e8b762efc11b052466a8[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Fri Jan 15 14:19:02 2016 -0800

    Fix typo introduced during merge

[33mcommit cb6a81804fe5698f4803d5eebc0538ec4ee2f6c3[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Fri Jan 15 11:00:36 2016 -0800

    Remove unnecessary targets file in serialization

[33mcommit 26bc8d9e04e2ab17244664c851e82180dbb83a2c[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Wed Jan 13 14:49:47 2016 -0800

    Fix serialization of recursive collections

[33mcommit d434f95295deea2efee980896a50f3461cf8d28d[m
Merge: da9b5f8 263bd80
Author: Khoa Dang <khdang@users.noreply.github.com>
Date:   Fri Jan 15 18:00:11 2016 -0800

    Merge pull request #5362 from khdang/add_xmlelement_support_for_datacontractserializers
    
    Add support for XmlElement for data contract serializers

[33mcommit da9b5f8047e9b226924fec042b1453ff8c5ad25f[m
Merge: c7e2367 e7ce2bc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 15 20:36:06 2016 -0500

    Merge pull request #5429 from eerhardt/Enable846
    
    Enable all passing tests that are marked with ActiveIssue for #846.

[33mcommit c7e23670463ddf4d933800671808b945a9a16738[m
Merge: dc74934 def1ede
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 15 20:34:06 2016 -0500

    Merge pull request #5477 from pallavit/ConsoleAPIs
    
    Add System.Console members

[33mcommit dc74934ac9c1bc781a7b326310f9876439aca651[m
Merge: fadc432 0060803
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Jan 15 17:18:37 2016 -0800

    Merge pull request #5481 from ianhays/master
    
    Remove SecurityTransparentAttribute from the Open Compression

[33mcommit a902785a652b27348e4026a9f13c3544f72aa568[m
Author: Immo Landwerth <immol@microsoft.com>
Date:   Fri Jan 15 16:59:26 2016 -0800

    Remove notes

[33mcommit 88e4dc984555d31be2784a6ee4a17c433194ec76[m
Author: Immo Landwerth <immol@microsoft.com>
Date:   Fri Jan 15 16:50:21 2016 -0800

    Add documentation for porting, triage, and issue bar
    
    This also includes some boiler plate for the roadmap for post-RTM, but
    it's not fully done yet. However, I believe it's better to get the parts
    in we already have, then waiting for the complete set.

[33mcommit 00608033e7a0e7dec77633f17f1c4da5502f7ffd[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Jan 15 16:45:22 2016 -0800

    Remove SecurityTransparentAttribute from the Open Compression
    
    https://github.com/dotnet/corefx/commit/15f47efe119b17032a661f752248ae1fcc172bf3 added an assembly tag to both the open and desktop builds that was previously only in the desktop build. The inclusion to the Open build is causing the upstream failure https://github.com/dotnet/corefx/issues/5380.

[33mcommit 263bd80f242f29fd8b7dd5093f1443543a9aedda[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Wed Jan 13 10:30:07 2016 -0800

    Check in missing XmlSerializableServices.cs

[33mcommit 0d9abb0ac2121f7ff878d91755b87267af3fc91e[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Tue Jan 12 17:29:37 2016 -0800

    Add support for XmlElement in data contract serializers

[33mcommit fadc432d90d41d12e508fb875c645a60264b1f39[m
Merge: ab78e28 cacf139
Author: Khoa Dang <khdang@users.noreply.github.com>
Date:   Fri Jan 15 16:36:10 2016 -0800

    Merge pull request #5478 from khdang/fix_serialization_enumerableinterfacegetonlycollection
    
    Fix serialization in NetNative to throw exception for get-only IEnumerable collection

[33mcommit ab78e28a1a2858b0a58e7f91ef8f7c736e6048b5[m
Merge: be4c494 ebc875d
Author: Venkatraman Mahalingam <vemaha@microsoft.com>
Date:   Fri Jan 15 16:35:56 2016 -0800

    Merge pull request #5466 from mellinoe/system.reflection.typeextensions.netcore50
    
    Add netcore50aot and net46 configurations for System.Reflection.TypeExtensions

[33mcommit be4c49404b8b0bc8529085577fdf6da5c19053f2[m
Merge: 9bb3593 e9e90f5
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Jan 15 16:32:35 2016 -0800

    Merge pull request #5136 from bartonjs/windowsprincipal_contract
    
    Use GenAPI to regenerate S.S.Principal.Windows contract.

[33mcommit cacf139506ee728692f3c065bc3447c47ddb9264[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Fri Jan 15 15:46:53 2016 -0800

    Fix serialization in NetNative to throw exception for get-only IEnumerable collection

[33mcommit 9bb359358a4c7172bf83f198db80c1b73b1784ce[m
Merge: bdecd38 c9edbdf
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 15 18:31:13 2016 -0500

    Merge pull request #5470 from dotnet/UpdateReadmeForDebian
    
    Add Debian CI projects to README

[33mcommit bdecd380108dfd3512e40af089c7ee5c1b076c76[m
Merge: 9ea67dc fe4797a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 15 18:27:22 2016 -0500

    Merge pull request #5454 from stephentoub/ignored_signal
    
    Make Console signal handling more robust

[33mcommit 9ea67dcead97e0a20753339adb507f3ff8564e68[m
Merge: e212dcf 7f6f6dd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 15 18:11:22 2016 -0500

    Merge pull request #5464 from JonHanna/simplify_enumerabledebugview
    
    Simplify SystemCore_EnumerableDebugView

[33mcommit e212dcfa39a23d579e9daeb22a9f63e7df0a535a[m
Merge: 59102e4 7980115
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 15 18:07:48 2016 -0500

    Merge pull request #5465 from stephentoub/sockets_eintr
    
    Retry on EINTR in networking shim

[33mcommit e9e90f5283e36c968505e1d4642969e6d3374f3b[m
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Jan 15 09:32:55 2016 -0800

    Use GenAPI to regenerate S.S.Principal.Windows contract.
    
    * Manually removed IteratorStateMachine attributes
    * Manually changed DefaultIssuer to be declared 'new'
    * Reverted any security attribute changes
    * Reverted the addition of new virtuals for now
    * Reverted the protected copy constructor

[33mcommit c9edbdf38d22f29049eeeda26a2ab1e2c8fdfb64[m
Author: Nate Amundson <naamunds@microsoft.com>
Date:   Fri Jan 15 16:26:47 2016 -0600

    Add Debian CI projects to README
    
    Also define the table using HTML instead of markdown to have the ability to specify the width of each column.

[33mcommit 59102e432f8e4ddb229e183fc4b52e2bdeee85a6[m
Merge: 1cfb203 78c675a
Author: Khoa Dang <khdang@users.noreply.github.com>
Date:   Fri Jan 15 14:11:35 2016 -0800

    Merge pull request #5468 from khdang/fix_serialization_enumerableinterfacegetonlycollection
    
    Revert the removed lines to fix build break in NetNative

[33mcommit 78c675a854348ad329075e330be1e8fc4f620cc6[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Fri Jan 15 13:55:55 2016 -0800

    Revert the removed lines to fix build break in NetNative

[33mcommit def1edeca00dc97b6eaeb209fee98019dd248e2b[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Thu Jan 14 17:35:56 2016 -0800

    Add System.Console members

[33mcommit 1cfb203aca91a64a668cc6786fbd04777421dd88[m
Merge: cc5065b 7dba854
Author: Khoa Dang <khdang@users.noreply.github.com>
Date:   Fri Jan 15 13:52:05 2016 -0800

    Merge pull request #5404 from khdang/fix_serialization_enumerableinterfacegetonlycollection
    
    Fix serialization of get-only IEnumerable to throw exception

[33mcommit cc5065b76ed50e10e24f5183db0d3e866f8a621d[m
Merge: ced269d be32a60
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 15 16:20:16 2016 -0500

    Merge pull request #5461 from CIPop/sn_disable_tests
    
    Disabling System.Net intermittently failing tests

[33mcommit ebc875d789426a044c63a7a1021851c920c05a43[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Jan 15 13:13:11 2016 -0800

    Format and clean up new TypeExtensions code

[33mcommit 1db0f90a8fcf628bd4e8ca528246af7da8011d24[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Jan 15 12:57:43 2016 -0800

    Add net46 and netcore50aot configurations to System.Reflection.TypeExtensions

[33mcommit 79801150c0bebef2f2cddde8c0bfd37d266a461e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 15 16:10:44 2016 -0500

    Retry on EINTR in networking shim
    
    Several sockets-related system calls can fail with EINTR due to being interrupted by a signal.  In such cases, we should be retrying rather than propagating the error upwards (which results in a SocketException).

[33mcommit 7f6f6ddb0049015e35accb844e6403188c25a4b8[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Jan 15 21:03:47 2016 +0000

    Simpler array building, remove memoised store that isn't used.

[33mcommit ced269d371cf7c2cd12f72813de4c4764ed0c4b4[m
Merge: 78ad63e 968f903
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Jan 15 12:53:11 2016 -0800

    Merge pull request #5262 from ianhays/4991_zipfile_OSHeader_PathValidation
    
    System.IO.Compression: Modify path validation to be based on ZipArchive source OS

[33mcommit 78ad63e4169e6711dc2c6e6020fd03818d57158f[m
Merge: 3ac53f5 eaafda0
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Jan 15 12:51:50 2016 -0800

    Merge pull request #5458 from ianhays/compressionPerf
    
    System.IO.Compression: Make the ZLib BestCompression 6

[33mcommit e7ce2bc4b1a25ebeb84b938bba8df7656b4357f2[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Jan 15 14:02:15 2016 -0600

    Remove all ActiveIssue #846 attributes since #846 is closed.
    Add new issues for failing tests.

[33mcommit 1071000be4db6c545867f0a7fc41a0c4a7419dfe[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Jan 14 14:35:01 2016 -0600

    Enable all passing tests that are marked with ActiveIssue for #846.

[33mcommit be32a60de7e4eead5b7d3e045ea3ce4e1a34e855[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Fri Jan 15 11:44:04 2016 -0800

    Disabling System.Net intermittently failing tests. Adding new tests for reported issues. Fixing test csproj file.

[33mcommit eaafda06e223fa611b9799a4c148f478bde60c03[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Jan 15 11:34:30 2016 -0800

    System.IO.Compression: Make CompressionLevel.Optimal = -1
    
    CompressionLevel 6 is what we used to use and we changed it in #4589 because we didn't see any perf regressions in doing so. With more testing, it has become clear that moving from 6 to 9 severely hurt perf in some scenarios so it's being reverted to -1 which maps to 6.

[33mcommit 3ac53f5c9de23bd7811be57571b37a98e6a9babc[m
Merge: 9cf414f ee0b6e8
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Fri Jan 15 10:49:33 2016 -0800

    Merge pull request #5435 from nguerrera/spec-issues
    
    Add document describing known issues in Ecma-335

[33mcommit ee0b6e88efe25a70baefbb47e7ad8d48d02ba33c[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Fri Jan 15 10:47:30 2016 -0800

    Add related issue links

[33mcommit 7dba854aad9ad2d598f62a43f11d7dfaae8ef3b9[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Fri Jan 15 10:29:47 2016 -0800

    Refactor serialization tests

[33mcommit 9cf414f181ee3caa189382041af9f98635f1fa03[m
Merge: b4b2f02 2ed90e1
Author: Khoa Dang <khdang@users.noreply.github.com>
Date:   Fri Jan 15 10:14:35 2016 -0800

    Merge pull request #5353 from shmao/CreateBufferedCopy
    
    [Port] XmlReader.ReadValueChunk Throws ArgumentException

[33mcommit 25c350ee56dca28b207bf8826e95baa8be56e9bc[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Jan 15 11:58:45 2016 -0600

    Adding tests for the last 2 issues noted in https://github.com/dotnet/coreclr/issues/2185.

[33mcommit fe4797a1aa7c60b279942548f6b1f0ab64d12e68[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 15 12:23:27 2016 -0500

    Make Console signal handling more robust
    
    In the (probably rare) case where SIGINT and SIGQUIT have been previously set to be ignored (SIG_IGN), we currently end up unhooking our signal handlers, which means that even though we know the app is going to remain alive, we'll stop processing CancelKeyPress events.  This change just makes it so that if we know the signal is going to be ignored, we don't unregister our handlers.

[33mcommit b4b2f0275dc0c706630f9b1962c85aacf048dbc4[m
Merge: d26c64d 6b613a0
Author: VSadov <vsadov@microsoft.com>
Date:   Fri Jan 15 07:58:21 2016 -0800

    Merge pull request #3960 from JonHanna/fix_3957
    
    Correctly space expression variable name in catch block expression ToString

[33mcommit d26c64deb663e3d4819f069ca38ace2d7781e15d[m
Merge: 3314d7e 5e36a4a
Author: VSadov <vsadov@microsoft.com>
Date:   Fri Jan 15 07:56:22 2016 -0800

    Merge pull request #4017 from JonHanna/fix_4014
    
    Consistent exception on out-of-range IRunVariables access.

[33mcommit 3314d7e63b22c3355a94b52bd59fe81781d1b332[m
Merge: 0209b7d d65a77a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 15 07:48:03 2016 -0500

    Merge pull request #5394 from khdang/align_syncRoot_serialization_behavior_to_desktop
    
    Fix serialization of _syncRoot field so behavior aligns with Desktop

[33mcommit 0209b7dcfa944ad1c58fcf595e32ebdb941fe5ae[m
Merge: d812499 52741b1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 15 07:46:57 2016 -0500

    Merge pull request #5433 from VSadov/fixRd
    
    Remove ReturnObject from System.Linq.Expressions.rd.xml

[33mcommit d8124992660aca0fc059def9ed153a9e5151f965[m
Merge: fb6427d d4bb522
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 15 07:46:33 2016 -0500

    Merge pull request #5445 from khdang/remove_unnecessary_accesscheck_in_serialization
    
    Remove unnecessary access checks in data contract serializers

[33mcommit 6b613a0737ff3f0c81fb5a6694c0b42185dd29bb[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Mon Oct 19 16:58:22 2015 +0100

    Correctly space expression variable name in catch block expression ToString
    
    Fixes #3957

[33mcommit fb6427d4de40b3eeb43d795d0ebf50f5a222d087[m
Merge: 8ba69d8 cfec6ea
Author: VSadov <vsadov@microsoft.com>
Date:   Fri Jan 15 00:39:06 2016 -0800

    Merge pull request #3959 from JonHanna/exception_expression_tests
    
    Add tests for exception-related expressions.

[33mcommit 8ba69d87f3b4d7b1ecc9247e28718fc6f846f2a3[m
Merge: 6f82193 9287870
Author: VSadov <vsadov@microsoft.com>
Date:   Fri Jan 15 00:38:00 2016 -0800

    Merge pull request #4748 from JonHanna/fix_4375
    
    Non-indexer Expression.Property should reject indexers.

[33mcommit 6f82193e443594e79e6ce1e1151694c46cfd5adb[m
Merge: 80a884a 32fba74
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Thu Jan 14 21:02:32 2016 -0800

    Merge pull request #5438 from saurabh500/ReaderSchemaInternals
    
    Adding the fields to get the Data Column Schema

[33mcommit 80a884adb41fd515c2b255c67e8d61920dafced6[m
Merge: bb92e0d 4f936c3
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Thu Jan 14 21:02:23 2016 -0800

    Merge pull request #5403 from tarekgh/StaticLib
    
    Generate System.Native static library to be consumed by corert

[33mcommit bb92e0dfcbf73fd2ea3f446841128b8e1879397a[m
Merge: 8bd69a1 9bb1b47
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Jan 14 19:28:14 2016 -0800

    Merge pull request #3910 from JonHanna/fix_3909
    
    Correct parameter name when creating block with erroneous element

[33mcommit 8bd69a1ff4fb42ec81574804d052be8d12d93a9f[m
Merge: 97c00f6 c2645e9
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Jan 14 19:27:19 2016 -0800

    Merge pull request #3901 from JonHanna/fix_3881
    
    Correct ArgumentOutOfRangeException on out of range block expression index

[33mcommit 97c00f6735c63185a2ae9759fa9bb1b4a8d05867[m
Merge: 256644e 627c008
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 14 22:14:19 2016 -0500

    Merge pull request #5441 from stephentoub/domain_sockets
    
    Clean up Unix Domain Sockets example

[33mcommit 256644e0008d6eb6c3338332838001e003b1c8cb[m
Merge: c9ced70 0017f1e
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Jan 14 18:55:21 2016 -0800

    Merge pull request #5442 from mconnew/FixSystemIoPackageDescriptions
    
    Removed some CommonTypes from System.IO nuget description

[33mcommit de0dff692c5f1aa4d67a4011204971ee84bcd68b[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Thu Jan 14 11:35:27 2016 -0800

    Remove serialization unused properties and add DCJS tests for enumerable get-only collection

[33mcommit 025f7a0a2b43722fbcb99d2d77b42db357d3efe0[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Wed Jan 13 16:24:14 2016 -0800

    Fix serialization of get-only IEnumerable to throw exception

[33mcommit 5e36a4a15e7c4597d28fb57497220ec677182201[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Jan 15 01:58:57 2016 +0000

    Consistent exception on out-of-range IRunVariables access.
    
    Fixes #4014

[33mcommit cfec6ea4695c21002f678e9f8119a764cd9c9748[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Jan 15 01:51:11 2016 +0000

    Add tests for exception-related expressions.
    
    Try, Catch, Throw, Rethrow.
    
    Includes active-issue tests for #3838, #3957 & #3958

[33mcommit 9287870f81a3681bdc8d52e1aa3c060fd4cc1ffb[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Dec 1 12:31:43 2015 +0000

    Reduce casts and type-detection in Member.Make() calls.
    
    Two calls to MemberExpression.Make() cast from PropertyInfo or FieldInfo
    to MemberInfo in making the call just to have that method detect which
    type it is to cast back and call correct constructor.
    
    Add overloads for PropertyInfo or FieldInfo to allow this to be
    skipped.

[33mcommit ff685c90d336918940d9f55241c00a1eecb9478c[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Dec 1 11:58:22 2015 +0000

    Non-indexer Expression.Property should reject indexers.
    
    Fixes #4375

[33mcommit 968f903b717d545095b4456103935ead2b29f6d5[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Jan 8 14:45:45 2016 -0800

    System.IO.Compression: Modify path validation to be based on ZipArchive source OS
    
    This commit resolves #4991 by adding explicit path validation based on the OS that a ZipArchive was written on instead of just using CheckInvalidPathChars for all cases.

[33mcommit d4bb522f64b8940e27c41aa08e54339421fec340[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Thu Jan 14 17:30:38 2016 -0800

    Remove unnecessary access checks in data contract serializers

[33mcommit c9ced7081c6a32f464aa41d588ec0025b399bd39[m
Merge: 36e9abd 1af6cc5
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Thu Jan 14 17:21:07 2016 -0800

    Merge pull request #5437 from JeremyKuhne/2632
    
    Change ToString behavior to match .NET Desktop.

[33mcommit 4f936c38320b91647dace3a828901bf0d466a3a9[m
Author: Tarek mahmoud Sayed <tarekms@microsoft.com>
Date:   Wed Jan 13 15:32:09 2016 -0800

    Generate System.Native static library to be consumed by corert

[33mcommit 36e9abde5ecc564a3f4aea64029911bb1acd6a1e[m
Merge: 8390307 a19d50b
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Jan 14 17:12:31 2016 -0800

    Merge pull request #3983 from JonHanna/inc_dec_assign_tests
    
    Pre/PostInc/DecrementAssign tests.

[33mcommit 8390307153527cf17625958ad7c0210d476adf92[m
Merge: aef217b dca41fe
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Jan 14 17:11:36 2016 -0800

    Merge pull request #4692 from JonHanna/reduce_generic_type_checks
    
    Reduce number of checks in most calls to TypeUtils.ValidateType()

[33mcommit aef217b5531a8539b4329107089f7ff97a1dcfd5[m
Merge: 9546ca7 e6f842c
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Jan 14 16:47:02 2016 -0800

    Merge pull request #5405 from mellinoe/system.net.nameresolution.netcore50
    
    Add netcore50 configuration for System.Net.NameResolution

[33mcommit 9bb1b47d809e3b6c6770b62cad80ffbc208c65d9[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Oct 16 12:38:18 2015 +0100

    Correct parameter name when creating block with erroneous element
    
    Fixes #3909

[33mcommit 9546ca7a50eeb91dd9a168d32a5a4f2fef4e170b[m
Merge: 3d691d2 da4bf9a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 14 19:34:30 2016 -0500

    Merge pull request #5419 from stephentoub/socket_asserts
    
    Augment GlobalLog.Assert* call sites in System.Net

[33mcommit 3d691d2ddef5aea88063f2ce0328b858bc169e8f[m
Merge: 1216435 047c425
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 14 19:33:54 2016 -0500

    Merge pull request #5431 from stephentoub/process_dir_enum
    
    Fix DirectoryNotFoundException in Process.GetProcessBy*

[33mcommit 0017f1ecc6ac80f51481804dbe5b8f6122a0d897[m
Author: Matt Connew <mconnew@microsoft.com>
Date:   Thu Jan 14 16:28:58 2016 -0800

    Removed some CommonTypes from System.IO nuget description
    
    System.IO.IOException and System.IO.FileNotFoundException have moved to System.Runtime

[33mcommit 627c008e69292a54d517541d2e0d6c14cc008a73[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Jan 14 19:22:40 2016 -0500

    Clean up Unix Domain Sockets example
    
    - Separate the type out into its own file, to make it easier for others to consume
    - Fix a bug that prohbited it from being used with Accept (removed min length validation in ctor)
    - Added a test that does Connect/Accept and Send/Receive
    - A few other cleanups in the existing tests

[33mcommit 12164351de4113cdcdf72bff7624f803ff1fbd33[m
Merge: 11a7d3c 468e4a6
Author: SGuy Ge <SGuyGe@users.noreply.github.com>
Date:   Thu Jan 14 16:22:12 2016 -0800

    Merge pull request #5393 from SGuyGe/PerfTests
    
    Fix for issue #4658: Add serialization performance tests for XmlSerializer and DCJS

[33mcommit 11a7d3c43e3303f8d3bde88a28d52d16f7208f23[m
Merge: b2126e1 b56a628
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 14 18:21:42 2016 -0500

    Merge pull request #5392 from sepidehMS/FixXDocumentTestIssues
    
    Fix XDocument test issues

[33mcommit b2126e16f5ca063f495d8f17e331cc8d78321f65[m
Merge: 984cb7d 62c3b6f
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Jan 14 15:14:17 2016 -0800

    Merge pull request #2401 from JonHanna/ordered_first_last
    
    Optimise First, Last, FirstOrDefault & LastOrDefault for OrderedEnumerable

[33mcommit 1af6cc5e222aef65a83c35db34dadc83eb1f5fd5[m
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Thu Jan 14 14:57:18 2016 -0800

    Change ToString behavior to match .NET Desktop.
    
    .NET Desktop DirectoryInfo.ToString returns the original passed in
    path as documented on MSDN. Change to match this behavior.

[33mcommit b99698b365794aabb59539602df4c7f633f4b798[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Jan 14 14:55:26 2016 -0800

    Add document describing known issues in Ecma-335

[33mcommit a19d50b98b54b0659bbb445ff91cb2145e1413c4[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Jan 14 22:47:03 2016 +0000

    Pre/PostInc/DecrementAssign tests.
    
    Add tests for PreDecrementAssign, PreIncrementAssign, PostDecrementAssign
    & PostIncrementAssign.
    
    Including add a couple of assertions.

[33mcommit 984cb7dfccc5193402d118abe62b3cc26ac08a53[m
Merge: a7dd46b 967cde5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 14 17:48:17 2016 -0500

    Merge pull request #5020 from mjrousos/UnixGetAttributesFix
    
    Get Unix file stats with LStat (instead of Stat)

[33mcommit a7dd46b5ceb686d48a759ab4c2ecd5d8bae13def[m
Merge: c6a361d 28214fb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 14 17:28:45 2016 -0500

    Merge pull request #5427 from stephentoub/unnecessary_async_xml
    
    Remove some async clutter in System.Xml.ReaderWriter

[33mcommit 52741b16957991b5004c30e6227da35b4be22038[m
Author: vsadov <vsadov@microsoft.com>
Date:   Thu Jan 14 14:03:15 2016 -0800

    Remove ReturnObject from System.Linq.Expressions.rd.xml
    it is no longer public as of https://github.com/dotnet/corefx/commit/0824d9745687271503f7538d16f44f17f5ef5f18

[33mcommit c6a361d8481b2d7e599b7a5fdd4b9854da6f8620[m
Merge: 5b3461d 9c4f783
Author: Khoa Dang <khdang@users.noreply.github.com>
Date:   Thu Jan 14 13:35:48 2016 -0800

    Merge pull request #5343 from khdang/fix_xmldictionaryreaderquotas_maxdepth
    
    Fix XmlDictionaryReaderQuotas so MaxDepth and MaxStringContentLength are honored

[33mcommit 047c42593088c89a2a2797e18ad403f1b191fb39[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Jan 14 16:31:48 2016 -0500

    Fix DirectoryNotFoundException in Process.GetProcessBy*
    
    Most places we access procfs, we catch and eat IOExceptions that result from the process going away while we're trying to read the relevant data from procfs.  But we missed a place where we do such enumeration, causing failures.  This commit just adds a try/catch around one such enumeration of a path to procfs.

[33mcommit da4bf9a9a55b093614f645b2cd429146644f4d3c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Jan 14 11:32:58 2016 -0500

    Add Debug.Fail calls at GlobalLog.Assert* call sites

[33mcommit a2b956429fb10b771b2c9d5778b478d7e4b54904[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Jan 14 09:23:35 2016 -0500

    Replace globalLogEnabled caching with GlobalLog.IsEnabled
    
    Per previous feedback.

[33mcommit 5b3461d564065846eb576fa8023606dadc79d5be[m
Merge: dc6cacb a1f16ad
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 14 16:16:13 2016 -0500

    Merge pull request #5421 from stephentoub/wait_for_child_to_start
    
    Make Process.Start wait for child process to exec

[33mcommit dc6cacb1c2c09c70a2c81ff7ce3aa4951c34726b[m
Merge: 7d9918f 24366b8
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Jan 14 15:11:58 2016 -0600

    Merge pull request #5425 from eerhardt/FixGlobalizationTests
    
    Enable System.Globalization.Tests that are currently passing.

[33mcommit e6f842c4beed5598f01ff796240ac22893255031[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Jan 13 16:52:13 2016 -0800

    Add netcore50 configuration for System.Net.NameResolution
    
    Also consolidated the existing net46 facade configuration into the
    root-level project file, and deleted the facade folder.

[33mcommit 7d9918f2690eb588b69a0dbbb557c73c4f285c7d[m
Merge: fa722f9 18e9cca
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 14 15:34:18 2016 -0500

    Merge pull request #5396 from ericeil/GCHandlePins
    
    Eliminate unnecessary GC handle allocations in Unix Sockets implementation

[33mcommit 28214fb9f228235c0079de9ff459dac02a200be3[m
Author: James Ko <jamesqko@gmail.com>
Date:   Thu Jan 14 15:21:53 2016 -0500

    Remove some async clutter in System.Xml.ReaderWriter
    
    Also removes a Task.FromResult allocation where one wasn't necessary.

[33mcommit b56a62862090c7c6e17c8363efb04ee871fe88bc[m
Author: sepidehMS <sekho@microsoft.com>
Date:   Thu Jan 14 12:17:51 2016 -0800

    Throw proper exceptions and remove ActiveIssue attribute in System.XDocument tests

[33mcommit fa722f9cf81512891073e52194ffb7609775b411[m
Merge: d7b010b 01c61f6
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 14 12:10:07 2016 -0800

    Merge pull request #5228 from ianhays/buffered
    
    Add tests for BufferedStream

[33mcommit 967cde5486cb290718b4b8f7779ccf832d5f4325[m
Author: Mike Rousos <MikeRou@Microsoft.com>
Date:   Wed Dec 16 10:03:15 2015 -0800

    Get Unix file stats with LStat (instead of Stat)
    
    Stat was ignoring symbolic links (and getting stats for the target
    instead) which caused checks for whether or not a path was a sym link
    to fail on Unix.
    
    Fixes dotnet/corefx#5015

[33mcommit 32fba7486ff4046bca62f81183d4fbb08f674ab3[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Thu Jan 14 11:31:31 2016 -0800

    Bringing back some of the fields needed for the Columns metadata in Data Reader

[33mcommit 24366b89ec8005aed81b7a3dc55bc4d00a957210[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Jan 14 13:25:27 2016 -0600

    Enable System.Globalization.Tests that are currently passing.

[33mcommit a1f16ad25941ba6a8df3a0c83d245661572b4d0f[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 14 12:17:14 2016 -0500

    Make Process.Start wait for child process to exec
    
    We use fork/exec to spawn child processes in System.Diagnostics.Process.  This also means we face a flaw in this design that there's a period of time where the child process isn't actually running the target program, which means that the Process we get back may report information related to the parent process' clone rather than to the desired child's information, e.g. the ProcessName may come back as "corerun" rather than the name of the program that will be exec'd.
    
    As a workaround, on systems that have pipe2 (i.e. Linux), this commit augments the fork/exec logic to create a pipe with the O_CLOEXEC flag.  That way, the child process will close the pipe when exec transitions the process to the child program, breaking the pipe.  The parent process then waits for the pipe to be broken and doesn't return from the start routine until the child has transitioned.

[33mcommit 18e9cca2e4c7d8c15ca232635c5ca0f5ddd2b552[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Thu Jan 14 10:39:51 2016 -0800

    Add braces to single-line if statements.

[33mcommit 01c61f62988e8abf39aecc64b0a97ea4e384de3f[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 14 10:36:27 2016 -0800

    Bump ExpectedPrerelease version to latest (rc2-23712)

[33mcommit 2a627b374ff097c51f9b6963da1b5d378eb2f2dc[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 14 10:27:37 2016 -0800

    Normalize System.IO.Tests namespaces and simplified types where possible.

[33mcommit 0f1378664ef590a76a635df0828ca878db395dae[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 7 10:13:48 2016 -0800

    Add tests for BufferedStream
    
    Also cleaned up some other IO tests and consolidated tests where possible. Made BufferedStream inherit all of the Stream tests.

[33mcommit d7b010b994326f4b5552452030ca9213b4f83b17[m
Merge: 5b84b51 5c675e6
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Jan 14 10:17:02 2016 -0800

    Merge pull request #4772 from JonHanna/exp_label_tests
    
    Tests for LabelExpression and LabelTarget.

[33mcommit 5b84b51bfdbd668f1dacbc173803b0213cdf39c8[m
Merge: 266aedd 3370bc2
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Jan 14 10:16:13 2016 -0800

    Merge pull request #3902 from JonHanna/fix_3882
    
    Consistent exception on empty block expression

[33mcommit 266aedd2d267365af582ac93dd98c6d8b45aa22e[m
Merge: 636dc01 53060c4
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Jan 14 10:01:48 2016 -0800

    Merge pull request #4016 from JonHanna/variable_expression_tests
    
    Variable expression tests.

[33mcommit 636dc01edc534c4058d7d2fbe9742cf154fbee0e[m
Merge: bb9c84c 9f84483
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Jan 14 09:55:47 2016 -0800

    Merge pull request #4770 from JonHanna/expression_errors
    
    Tests for Expression class itself, rather than its derived types and its factory methods the produce them.

[33mcommit bb9c84cf60f300b2da6c348c138352c204f4ca14[m
Merge: 9a4a3d2 c8d0ac9
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Jan 14 09:52:56 2016 -0800

    Merge pull request #5273 from JonHanna/fix_5272
    
    Stop Expression.TypeEquals throwing on Nullable<T> parameter.

[33mcommit 9a4a3d2aa37dc7dd9ed63e9fe5ea74e4228b9fb8[m
Merge: 2e2b652 8ffc4a8
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Jan 14 09:51:17 2016 -0800

    Merge pull request #5417 from JonHanna/fix_5416
    
    Fix stackoverflow on non-IQueryable block and conditional expressions

[33mcommit 2e2b6521f7255945ead8a924faededfc24a56b6e[m
Merge: cbd3de9 a53e943
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Jan 14 09:50:23 2016 -0800

    Merge pull request #5249 from JonHanna/fix_5247
    
    Fix error on interpretted TypeEqual with void expression

[33mcommit 2ed90e1d70869104310709373b8d0ecf45cb57f6[m
Author: Shin Mao <shmao@microsoft.com>
Date:   Thu Jan 14 09:40:55 2016 -0800

    XML reading issue with Binary Reader: certain string content lengths can't be read.
    
    Fixes #5410

[33mcommit cbd3de905fc22aac8993ede16645e9052f67effb[m
Merge: 8150694 e242bec
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Thu Jan 14 08:51:30 2016 -0800

    Merge pull request #5408 from saurabh500/dbcolumn
    
    Adding the Datatype for DbColumn

[33mcommit e242bec84f34de58c7038f67b9e01a51c1fa53d9[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Thu Jan 14 07:51:24 2016 -0800

    Make the duplicate addition more robust in Dictionary

[33mcommit 81506943fac169d88597e65c2bd7cd359e8123d7[m
Merge: 50cd341 4a54949
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 14 08:41:11 2016 -0500

    Merge pull request #5376 from eerhardt/IDNAConf
    
    Enable the IdnaConformanceTests.

[33mcommit 8ffc4a82f48eeeb4f05a5aa3b0164784e7405e8c[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Jan 14 13:40:46 2016 +0000

    Fix stackoverflow on non-IQueryable block and conditional expressions
    
    Fixes #5416

[33mcommit 50cd341ef31a56ed952e07fb87f38044153b3d27[m
Merge: 1f7137d 6e9922e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 14 08:03:23 2016 -0500

    Merge pull request #5413 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 1f7137dd8383dfcb839bcba26e18365f0d4bee2a[m
Merge: 0b7116f bf08412
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Jan 14 00:10:53 2016 -0800

    Merge pull request #5386 from mellinoe/system.net.primitives.netcore50
    
    Add netcore50 configuration to System.Net.Primitives

[33mcommit 6e9922e7af29755e2c182184155c38d76884ebc5[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Wed Jan 13 22:50:14 2016 -0800

    Add quotes around the rmdir arguments as it ends with a "/" in some cases which causes some invalid arg error.
    
    [tfs-changeset: 1564938]

[33mcommit 0b7116f9be53e57c15315d02bcbbe3a956fa4a9b[m
Merge: e29f183 e48f6bd
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Wed Jan 13 21:39:29 2016 -0800

    Merge pull request #5155 from michaelaird/patch-1
    
    Removing incorrect error numbers

[33mcommit e015533a59d81bb325838bb7bc8b20b66cd88df9[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Wed Jan 13 21:27:32 2016 -0800

    Fixing the naming convention and adding readonly modifier for the Dictionary

[33mcommit e29f18326358f72d32e5a03fdfd47d1f5b287723[m
Merge: 6f2c4a8 a74a3e4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 14 00:14:09 2016 -0500

    Merge pull request #4946 from dsgouda/System.IO.FileSystem.AccessControl
    
    Porting System.IO.FileSystem.AccessControl

[33mcommit 6f2c4a8b1470ef6a98fbf11780b24290042fa8c8[m
Merge: fa75bb3 9887f5f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 14 00:05:44 2016 -0500

    Merge pull request #5387 from stephentoub/immutable_collectible
    
    Workaround [ThreadStatic] limitation in ImmutableList<T>

[33mcommit fa75bb3fcaaffef8ed9edc05e1c728002a1229a5[m
Merge: 5632876 4421a08
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 14 00:04:59 2016 -0500

    Merge pull request #5395 from weshaggard/WebSocketsClientConfigs
    
    Add netcore50 support to System.Net.WebSockets.Client library

[33mcommit 5632876891b8563dd8dd5c048957464f7dd435b0[m
Merge: 4a02fa1 51916de
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 14 00:04:36 2016 -0500

    Merge pull request #5399 from justinvp/xmlserializer
    
    XmlSerializer: Avoid unnecessary allocations

[33mcommit 4a02fa1f8faeaf11d1eeba09ba7bd003a0eff2c9[m
Merge: 2273930 cc5af81
Author: David Shulman <david.shulman@microsoft.com>
Date:   Wed Jan 13 19:55:03 2016 -0800

    Merge pull request #5409 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 2273930999f79f17d413a6113c36b5c182b2b9ef[m
Merge: c8fe923 bb6d74f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 21:28:57 2016 -0500

    Merge pull request #5391 from mellinoe/system.net.sockets.netcore50
    
    Add netcore50 and net46 configurations for System.Net.Sockets

[33mcommit c8fe92337de2f82d84ad98b18883c527752c09a0[m
Merge: ba3f712 ee15466
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 21:28:07 2016 -0500

    Merge pull request #5366 from AlexGhiondea/AppContext_TFM
    
    Expose AppContext.TargetFrameworkName in the contracts

[33mcommit ba3f7122ac42ea060c4ee6d89c3a34d9ace025b7[m
Merge: 4fc64ec 21b7af1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 21:26:35 2016 -0500

    Merge pull request #5400 from mellinoe/system.threading.tasks.netcore50
    
    Add netcore50 configuration to System.Threading.Tasks

[33mcommit 4fc64ecb9046d15db4579a309bcef937f9ba889e[m
Merge: 53970ba a04c989
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 21:08:15 2016 -0500

    Merge pull request #5285 from stephentoub/more_net_logging
    
    Mop up more System.Net logging guards

[33mcommit 53970baaa98567efa67af9be95b5b1fbcefd1e95[m
Merge: 3e0849d 269e6f2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 21:07:45 2016 -0500

    Merge pull request #5402 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 7f5e2112993c04754b2e52e0ea39d4d5552a0485[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Wed Jan 13 17:59:13 2016 -0800

    Adding the Datatype for DbColumn

[33mcommit 3e0849df2317289f64db869c6f36a97c99861ea2[m
Merge: 1ba122d 8efd59b
Author: Venkatraman Mahalingam <vemaha@microsoft.com>
Date:   Wed Jan 13 17:35:03 2016 -0800

    Merge pull request #5363 from venkat-raman251/sys.thread.over
    
    Porting System.threading.overlapped

[33mcommit cc5af8120919437f45e30c03355f3ba09b1916b1[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Jan 13 17:15:12 2016 -0800

    Set SQLClient to dotnet5.4
    
    Fixes https://github.com/dotnet/corefx/issues/5359
    
    SQLClient needs to run on dotnet5.4 but was marking
    the x-plat implementation as dotnet5.5.
    
    This was incorrect and prevented folks from building
    a 'dotnet' library that would run on Net4.6 and x-plat.
    
    Nothing was preventing SQLClient from claiming
    dotnet5.4, it was left behind from prior builds where
    some of the System.Net dependencies were not
    supported on dotnet5.4.
    
    In doing this I also fixed the windows build to use
    the open source rather than closed, and updated
    the windows TFM to dotnet5.4 instead of
    DNXCore50. Despite using dotnet5.4
    we still dummy out the netcore folder in the package
    since it won't pass the WACK.
    
    I considered moving the packaging to the open
    but currently this depends on SNI.dll which is
    not ported.
    
    [tfs-changeset: 1564482]

[33mcommit 4bf34215c54f538b6cbf68861f3956d136d1e569[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Jan 13 17:12:53 2016 -0800

    Update generation of IsolatedStorage and Loader refs
    
    Both of these packages only carry a single implementation.
    IsolatedStorage for netcore50
    Loader for dnxcore50
    
    Despite this we still package the reference assembly as
    'dotnet'.  As a result, when nuget change the generation
    mapping for both netcore50 (5.4 >5.6) and dnxcore50
    (5.5 > 5.6) it caused our packaging validation to break.
    
    This is because we have a check in place to make sure
    that we don't claim a lower generation than the minimum
    supported by all implementations.
    
    I tried changing these reference assemblies to match
    the exact TFM of the lib (netcore50 and dnxcore50
    respectively) but the validation enforces a dotnet*
    reference even if only a single platform is targeted.
    I'll look into fixing this.  For now I am updating
    the reference projects to unblock the build.
    
    https://github.com/dotnet/corefx/issues/5406
    
    [tfs-changeset: 1564471]

[33mcommit d2ad9dfb3ebe05dee40a0c0cfe6b50946dc5ee9c[m
Author: sepidehMS <sekho@microsoft.com>
Date:   Wed Jan 13 12:24:34 2016 -0800

    Fix threading issue in System.Xml.XDocument tests

[33mcommit 468e4a62fbb4bdea2804e01883c0dfc91fab427f[m
Author: SGuy Ge <sguyge@microsoft.com>
Date:   Tue Jan 12 17:07:33 2016 -0800

    Fix for issue #4658: Add serialization performance tests for XmlSerializer and DCJS

[33mcommit 21b7af10f1beaf8cc269ddca7dd3eadb66701925[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Jan 13 15:19:20 2016 -0800

    Format TaskExtensions.netcore50.cs

[33mcommit 1659c247e95b796cf6903179101baabf817109df[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Jan 11 15:08:08 2016 -0800

    Add netcore50 configuration to System.Threading.Tasks

[33mcommit 16f0130ed93afa72ea0a5fe43f4a580f5b538360[m
Author: sepidehMS <sekho@microsoft.com>
Date:   Wed Jan 13 12:07:43 2016 -0800

    Rewrite ReadOuterXmlOnXmlDeclarationAttributes test

[33mcommit 0caac60407321ea452eeeac9503adf124211094e[m
Author: sepidehMS <sekho@microsoft.com>
Date:   Wed Jan 13 12:03:31 2016 -0800

    Split and fix some failing Syestem.Xml.XDocument tests

[33mcommit 1ba122d210a59c29e01bac6e1056f00d4e57f2ae[m
Merge: 700229d 9c12a91
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Jan 13 15:40:26 2016 -0800

    Merge pull request #5319 from mellinoe/resourcemanager.netcore50
    
    Add a netcore50aot configuration for System.Resources.ResourceManager

[33mcommit 700229d41764faa853679ef658636e01b59345e7[m
Merge: 74b9a6d 0261628
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 18:38:29 2016 -0500

    Merge pull request #5388 from stephentoub/disable_net_test
    
    Disable two more NegotiateStream tests

[33mcommit 269e6f28b6866a6c5ff1660f459b805efd939e7b[m
Author: Mariana Rios Flores <mariari@microsoft.com>
Date:   Wed Jan 13 15:25:22 2016 -0800

    Disable Fxtransform for most of the libraries, except the ones that ship with the ProjectN toolset.
    We added under BuildTools the logic to add the attribute __BlockReflectionAttribute to the libraries which TargetGroup is netcore50 or netcore50aot
    
    [tfs-changeset: 1564326]

[33mcommit 74b9a6d36c2e8c9bf97a7edab3728f4beebd0d1e[m
Merge: 0006804 0973db1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 18:13:33 2016 -0500

    Merge pull request #5369 from stephentoub/fix_process_args
    
    Fix Process.Start's parsing of command-line args on Unix

[33mcommit ee154664a7ece7212fa6f16aaafca2c991ea0919[m
Author: Alex Ghiondea <ghiondea.alexandru@microsoft.com>
Date:   Wed Jan 13 15:04:34 2016 -0800

    Explicitly set the TargetingPackNugetPackageId for the net462 group to be the 4.6 pack since we don't have a 4.6.2. one just yet.
    
    Not having this property set tricked genfacades into including everything in the targeting pack as seeds which led to the command line being too long and causing random errors.

[33mcommit 00068048e6efb14768ef01e7011f02437d1f4e55[m
Merge: 54090b5 6430c70
Author: Pallavi Taneja <pallavit@users.noreply.github.com>
Date:   Wed Jan 13 15:02:01 2016 -0800

    Merge pull request #5382 from pallavit/AddS.R.EPkgToOpen
    
    Update System.Runtime.Extensions pkg and assembly in corefx

[33mcommit 51916deaf70ccabd9a3b63394ca47ee8c53a9c7b[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Wed Jan 13 14:57:28 2016 -0800

    XmlSerializer: Avoid unnecessary allocations
    
    Avoid unnecessary List<T> and array allocations.

[33mcommit bb6d74fbebbde6b93b401c4514645895475e621d[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Jan 13 13:16:12 2016 -0800

    Add netcore50 and net46 configurations for System.Net.Sockets

[33mcommit 54090b5c730bc1410517c758241320ec0fffac06[m
Merge: 69b869b 207a973
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 17:31:30 2016 -0500

    Merge pull request #5375 from JonHanna/expression_tests_namespace
    
    Change namespace used in System.Linq.Expressions.Tests

[33mcommit 8efd59b6b5954b02425205bdd4906a7847a3411f[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Wed Jan 13 14:28:06 2016 -0800

    Changes to System.Threading.Overlapped

[33mcommit 69b869b469d149029d53c947b408ce4600d27f92[m
Merge: d591a68 b8742dd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 17:26:31 2016 -0500

    Merge pull request #5390 from eerhardt/Fix4706
    
    MapType_OverridingSelectionOfConventionSelectedConstructor failed in CI

[33mcommit 4421a08d58bf21013b4fa2161b9e30a28173dfe8[m
Author: unknown <wesh@weshdev.redmond.corp.microsoft.com>
Date:   Wed Jan 13 11:41:00 2016 -0800

    Add netcore50 support to System.Net.WebSockets.Client library

[33mcommit d65a77ac378d3dae058c054c671e4a7cb6518020[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Wed Jan 13 13:56:52 2016 -0800

    Fix serialization of _syncRoot field so it aligns with Desktop

[33mcommit d591a687578f01ead8421ee4898b7bf42e7d95d6[m
Merge: e7784e6 063c992
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 16:06:59 2016 -0500

    Merge pull request #5350 from dagood/fix-project-dependencies-nugetexe
    
    Fix project.json dependencies: xunit DNXCore incompatibility + invalid package dependencies

[33mcommit e7784e6d2056fd78441aa4fadda843e3b6601454[m
Merge: d264643 34f9499
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 16:06:06 2016 -0500

    Merge pull request #5351 from Priya91/directorystructure
    
    Reorder directory structure as per guidelines for RuntimeInformation.

[33mcommit 0973db1d8614c0509cc4fcaf7594e886805f6f26[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 13 16:04:00 2016 -0500

    Address PR feedback

[33mcommit d264643eca79ddbd44957dc24017f11268805977[m
Merge: e7569c9 2c5f89e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 16:01:42 2016 -0500

    Merge pull request #5374 from stephentoub/socket_option
    
    Throw SocketException rather than PNSE for unsupported socket option on Unix

[33mcommit a04c9898b9bc6d06cd42e1dfd93a63633da4dd30[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 13 15:54:16 2016 -0500

    Mop up more System.Net logging guards
    
    Some more GlobalLog.IsEnabled guards. I noticed a few while doing some other profiling, and so did another set of searches across the whole codebase. Many of these came from the System.Net.Security PRs that were in-progress at the same time I was doing the previous logging changes.

[33mcommit f8a609b288608e29064a49cc0ff1bec01483072c[m
Author: Shin Mao <shmao@microsoft.com>
Date:   Wed Jan 13 12:58:54 2016 -0800

    XmlReader.ReadValueChunk throws ArgumentException
    
    XmlReader.ReadValueChunk will throw ArgumentException when body contents contain double-wide chars encoded as UTF-8.
    
    Fixes #5352

[33mcommit bf0841210be2c974b44c2fbc32e2ea58ec2474bc[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Jan 13 12:02:24 2016 -0800

    Add netcore50 configuration to System.Net.Primitives
    
    Also consolidate the net46 project in the 'facade' directory down into the
    root project file.

[33mcommit e7569c94ebb70053543323faa279ea6bd5be8102[m
Merge: 4d55421 641df26
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 15:35:31 2016 -0500

    Merge pull request #5384 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit b8742dd271541f11c4991af7bd433dd02757a65f[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Jan 13 14:34:39 2016 -0600

    MapType_OverridingSelectionOfConventionSelectedConstructor failed in CI on mac.
    
    This test was expecting constructors to be returned in a guaranteed order.  I changed it to no longer rely on the order that the constructors are enumerated.
    
    Fix #4706

[33mcommit 9c4f78380419c5ce4595daf925ff3d8652287786[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Wed Jan 13 12:34:38 2016 -0800

    Refactor type names in serialization tests

[33mcommit 0261628c6da0b09944e00b9ae82a064157188605[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 13 15:34:05 2016 -0500

    Disable two more NegotiateStream tests
    
    These have also been taking out multiple builds.

[33mcommit 9887f5ff797e4ca43c7d4bb23f002d08b50ab233[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 13 15:12:55 2016 -0500

    Workaround [ThreadStatic] limitation in ImmutableList<T>
    
    As a perf improvement awhile back, ImmutableList<T> took a dependency on [ThreadStatic].  This unfortunately breaks cases where ImmutableList<T> is used with a T from a collectible assembly, due to https://github.com/dotnet/coreclr/issues/2191.
    
    Until that limitation is removed, this provides a workaround to restore the ability to use ImmutableList<T> with such types.  Some microbenchmarks around enumeration (which this was originally introduced to help with) show potential throughput regressions up to 10-15%.

[33mcommit 4d5542120d1f3e39cfefeda1abfac854ad12e166[m
Merge: 86835cd 5800ffb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 15:06:22 2016 -0500

    Merge pull request #5371 from stephentoub/fix_signal_handling
    
    Fix CancelKeyPress signal handling to restore original handlers

[33mcommit 86835cda205c9f5ee9d2622713b08648b7273f0d[m
Merge: ce3ac98 f6e7718
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 14:40:11 2016 -0500

    Merge pull request #5379 from stephentoub/upgrade_cc
    
    Upgrade build tools to v149

[33mcommit 34f949972c6ba4731f113a1be31bc2c03938ae8a[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Tue Jan 12 14:54:05 2016 -0800

    Reorder directory structure as per guidelines for RuntimeInformation.

[33mcommit 1f530500a510fe62a1da76491a7333a98fff6808[m
Author: Alex Ghiondea <ghiondea.alexandru@microsoft.com>
Date:   Fri Jan 8 16:43:56 2016 -0800

    Expose the TargetFrameworkName on AppContext.
    
    There are a couple of things that needed to be changed to expose a new version of AppContext.
    
    src folder
    ==========
    1. Bump up the assembly version to 4.1.0.0
       This means that the assembly implementation is now supporting the 4.1.0.0 contract
       Also bump up the PackageTargetFramework to point to the dotnet generation in which the assembly version will be available (which is 5.6)
    
    2. Because the AppContext is a façade that ships OOB on Desktop the package needs to also contain the 4.0.0.0 façade as well.
        To do this we had to introduce a proj that will restore the 4.0.0.0 version of the façade and package it for the net46 version
        This was done in the src\redist folder
    
    3. Update the builds project to make sure that the newly added depproj in the redist folder is correctly flagged as targeting 4.6
        We also had to update the source project build to make it target net462.
    
    ref folder
    =================
    1. Create a 4.0.0 folder under the ref folder that contains a .depproj
       The purpose of this is to make sure we can pull in the previous version of the ref assembly.
       We are going to restore the 4.0.0 version of the assembly and include that in the package targetting the previous dotnet generation
    
    2. Bump up the assembly version in the project in the ref folder
       Adding a new API requires us to bump up the minor version of the assembly (so the new version is 4.1.0.0)
       We also had to bump up the PackageTargetFramework version to dotnet5.6.
       We skipped the 5.5 version because this API is going to be available start with the 5.6 generation
    
    3. Update the 'frameworks' entry in the project.json file in the ref folder to dotnet5.6
       We did this to align with the information specified in the .csproj
    
    pkg folder
    ==========
    1. Update the package project to make sure that the previous version of the contract (ref\4.0.0) is going to be packaged for the net46 framework

[33mcommit 4270eca4e8921c7287f0e33b7101481c1853cc29[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Jan 12 10:01:13 2016 -0800

    Add packaging support for net462 and net461.

[33mcommit 641df2682b05f9ab212713ff5b9c93adf9e7bb2c[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Wed Jan 13 11:07:07 2016 -0800

    Fix build due to recent GitHub PR merge https://github.com/dotnet/corefx/pull/5151
    
    [tfs-changeset: 1564239]

[33mcommit 6430c70c6ca27a84795de9cd06a1246eef20583c[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Wed Jan 13 11:02:22 2016 -0800

    Fix Issue#5050
    
    The change does the following
    1. Add System.Runtime.Extensions package to corefx repo.
    2. Update the version to 4.1.0.0

[33mcommit eff08c2180da99ea8a450ecd4dca68f081e42404[m
Author: Shin Mao <shmao@microsoft.com>
Date:   Wed Jan 13 11:03:55 2016 -0800

    Bug 179164: Test failure for XmlSerializer: XmlSerializerTests.Xml_FromTypes
    
    [tfs-changeset: 1564238]

[33mcommit ce3ac987b44ac75ff3b671bf08a9f7c934fddeb2[m
Merge: 494863c 2d67baf
Author: Gaurav Khanna <gkhanna@microsoft.com>
Date:   Wed Jan 13 10:29:26 2016 -0800

    Merge pull request #5344 from gkhanna79/TPALoadChanges
    
    Expose LoadFrom Path/NI/Stream APIs from System.Runtime.Loader

[33mcommit 494863c92e55c17da4fba824ce9244abf89ed355[m
Merge: 9ecd1b9 553a9c3
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Wed Jan 13 10:09:48 2016 -0800

    Merge pull request #5231 from sokket/buffers
    
    Adding EventSource ETW tracing to the System.Buffers code

[33mcommit f6e77189ffa687649e7a54a551c62b67c08651f6[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 13 13:04:01 2016 -0500

    Upgrade build tools to v149

[33mcommit 9ecd1b9d4e4178ef37409a4ef1aa228f2f9f55ab[m
Merge: 0206ffb 150252f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 11:58:41 2016 -0500

    Merge pull request #5372 from stephentoub/groupjoin_opt
    
    Avoid creating GroupJoin lookup when outer is empty

[33mcommit 0206ffb0d84292a066f0d7dc937c7cc84e480eb9[m
Merge: 4d35096 6800636
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 11:57:51 2016 -0500

    Merge pull request #5373 from stephentoub/disable_net_test
    
    Disable failing NegotiateStream test

[33mcommit 2c5f89e42c95176323d94bbca537581474638ae7[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 13 11:26:17 2016 -0500

    Throw SocketException rather than PNSE for unsupported socket option on Unix
    
    Match Windows exception type when an unsupported socket option is provided.

[33mcommit 207a973bc93be0cdf476ca6e492951fe983948c4[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Jan 13 16:25:43 2016 +0000

    Change namespace used in System.Linq.Expressions.Tests
    
    To be consistently System.Linq.Expressions.Tests as per #2898

[33mcommit 6800636d5ff50601bc8fd84bab5c7fcc1d0ca379[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 13 10:40:56 2016 -0500

    Disable failing NegotiateStream test

[33mcommit 150252fb96601e7383c6715dbcd212845893dccc[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 13 08:58:28 2016 -0500

    Avoid creating GroupJoin lookup when outer is empty
    
    Optimization to avoid creating the ```Lookup<TKey, TInner>``` when the outer enumeration is empty.

[33mcommit 5800ffb6f6bf5d00015eba37ee2bc718dbd4b2cd[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 08:46:44 2016 -0500

    Fix CancelKeyPress signal handling to restore original handlers
    
    When a CancelKeyPress handler decides not to handle the event, we currently restore default handlers for SIGINT/SIGQUIT.  we should instead restore the original handlers.

[33mcommit 6e78043401136037925cdd7be6ccd8fc67c8110d[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Jan 13 08:03:03 2016 -0500

    Fix Process.Start's parsing of command-line args on Unix
    
    Backslashes were not being handled as intended.

[33mcommit 4d350964559bdaa595ea72fc0621a5cbe75661d2[m
Merge: f19daf9 6fe17e5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 13 07:46:23 2016 -0500

    Merge pull request #5365 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 9c12a91b311014adcff613c8854a5d2f633b7cf0[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Jan 11 15:43:29 2016 -0800

    Exclude string resources from full-facade project configurations

[33mcommit f19daf93879813e0412320b5e5fdce03684c33c2[m
Merge: e73756b 8c252d8
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Tue Jan 12 20:52:12 2016 -0800

    Merge pull request #5345 from ericstj/buildTools148
    
    Update buildtools to 1.0.25-prerelease-00148

[33mcommit e73756bdc333c3cb3cdd48417669a032a02fac86[m
Merge: 5c241cb f39502e
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Jan 12 20:50:54 2016 -0800

    Merge pull request #5151 from josguil/NetLogFix
    
    Deleting Logging.cs file and references

[33mcommit 5c241cb43256a08a55f37837d779768547b8432b[m
Merge: 0331661 e2e14e2
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Jan 12 20:39:19 2016 -0800

    Merge pull request #5357 from davidsh/websocket_tests
    
    Port additional WebSocket tests

[33mcommit 6fe17e5a349315683abc868d7f858ce5ce7ffd45[m
Author: Shin Mao <shmao@microsoft.com>
Date:   Tue Jan 12 20:27:28 2016 -0800

    Bug 179337: Test failure for XmlSerializer: XmlSerializerTests.Xml_DifferentSerializeDeserializeOverloads
    
    [tfs-changeset: 1563987]

[33mcommit 033166156385ecbb1f1055afc2d5fc5f8c6e58d8[m
Merge: b529eed 985bbcb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 12 22:39:20 2016 -0500

    Merge pull request #5358 from KrzysztofCwalina/RRResources
    
    fixed spelling in resources

[33mcommit b529eedb08ebfb690557f3be3639390e8cafcbfc[m
Merge: 19c572e 7c7cec0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 12 21:12:31 2016 -0500

    Merge pull request #5329 from AlfredoMS/asyncbridge
    
    Add missing code to remove tasks from active list and improve logging

[33mcommit 19c572e76fc29f87593a3a0f826611c23f97cff0[m
Merge: 067c288 bcaecfb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 12 21:11:40 2016 -0500

    Merge pull request #5191 from stephentoub/dataflow_forceordered
    
    Add DataflowBlockOptions.ForceOrdered to Dataflow library

[33mcommit 067c288087270cb71e95ffc6c8f364460d1a4fa6[m
Merge: 42c3e43 22358b6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 12 21:11:01 2016 -0500

    Merge pull request #5328 from bbowyersmyth/StringTests
    
    Additional String tests

[33mcommit 42c3e43f80d349b77312ada041f6b9485aa4e960[m
Merge: f91c9ee bd773d4
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Jan 12 17:14:17 2016 -0800

    Merge pull request #5322 from mellinoe/networkinformation.netcore50
    
    Add net46 and netcore50 configurations for System.Net.NetworkInformation

[33mcommit 985bbcb97cac242744105b104c46f36ef9931d5f[m
Author: Krzysztof Cwalina <kcwalina@microsoft.com>
Date:   Tue Jan 12 16:39:41 2016 -0800

    fixed spelling in resources

[33mcommit e2e14e2f1abd1bfce0b0cae4b2e85cfe659d9074[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Jan 12 15:37:23 2016 -0800

    Port additional WebSocket tests
    
    Port remaining websocket client tests dealing with close handshake semantics including "server initiated" close handshakes.
    
    Switch networking test servers to the newer Azure Cloud Service servers which work better with websocket close handshakes.

[33mcommit 4a54949940fe2d9b317e433badd1aa3181b55376[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Jan 12 18:06:18 2016 -0600

    Enable the IdnaConformanceTests.
    
    Fix #3406

[33mcommit 9f844838c1be02e5d4dba00c87fa8bc5f3d88b28[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Jan 12 23:53:27 2016 +0000

    Tests for Expression class itself, rather than its derived types and
    its factory methods the produce them.
    
    Focuses on its methods of correctly dealing with errors in custom
    expressions, as those are not covered by any of the other tests.
    
    Tests the validation methods used by subclasses via uses in those
    subclasses.

[33mcommit f91c9eee685dccc38490a2f6c2ae3b3003e61924[m
Merge: 0824d97 44ab6de
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Jan 12 17:42:40 2016 -0600

    Merge pull request #5305 from eerhardt/CompressionRename
    
    Unique names for System.IO.Compression.Native.* exports

[33mcommit 0824d9745687271503f7538d16f44f17f5ef5f18[m
Merge: aecb4d0 c80cc67
Author: VSadov <vsadov@microsoft.com>
Date:   Tue Jan 12 14:49:52 2016 -0800

    Merge pull request #4723 from JonHanna/tighten_expressions_surface
    
    Tighten public surface of Expression class.

[33mcommit aecb4d0c606f26cb9da500d8e6125a072f328e86[m
Merge: 1b9ac52 85fd489
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 12 17:09:20 2016 -0500

    Merge pull request #5321 from eerhardt/IDNA
    
    Enable some IDNA tests on Unix

[33mcommit 1b9ac52bb7e9829606f016bf0b255811011e2da4[m
Merge: 81c6f1e 8b3d78f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 12 16:58:56 2016 -0500

    Merge pull request #5336 from stephentoub/outerloop_dns_test
    
    Move failing DNS test to OuterLoop

[33mcommit 81c6f1eabd4fe78173df9ba08498cb9e3dc7cba1[m
Merge: 7eb2a85 ab16499
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 12 16:58:30 2016 -0500

    Merge pull request #5342 from natemcmaster/tools-osx
    
    Fix init-tools.sh

[33mcommit 7eb2a85ab0c747f2b8cd6294bbbbca8daf7dd73d[m
Merge: b7a6ef1 58db873
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 12 16:58:11 2016 -0500

    Merge pull request #5323 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit b7a6ef1795ae943f02b28db8d3fec33501ff54c8[m
Merge: f40f5e6 239e9d1
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Jan 12 13:26:50 2016 -0800

    Merge pull request #5316 from venkat-raman251/sys.xml.serial
    
    Changes to System.Xml.XmlSerializer

[33mcommit 063c9926f8b27cc987668deb4d75f18295506f17[m
Author: dagood <dagood@microsoft.com>
Date:   Tue Jan 12 15:14:27 2016 -0600

    Fix references to nonexistent packages by replacing with stable version where possible, otherwise the upgraded prerelease.

[33mcommit 8c252d80f8af79af09136d34ee133c00afc52ee0[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 12 13:08:04 2016 -0800

    Pick up newer code coverage tools

[33mcommit c1a771f00ed127bb3e3d0dc5975143b9330217e3[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Jan 12 12:58:56 2016 -0800

    Update buildtools to 1.0.25-prerelease-00148

[33mcommit f40f5e6da2e8bc35bb11adae899814574973cc34[m
Merge: ee0d021 11e0ed2
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Jan 12 12:09:28 2016 -0800

    Merge pull request #5341 from eerhardt/IDNAHypen
    
    Enabling all IdnMapping Std3AsciiRules tests on Unix.

[33mcommit 2d67baf314b664fce25a18c1277f70924148344c[m
Author: Gaurav Khanna (CLR) <gaurav.khanna@microsoft.com>
Date:   Tue Jan 12 12:06:33 2016 -0800

    Expose LoadFrom Path/NI/Stream APIs from System.Runtime.Loader
    
    Fixes https://github.com/dotnet/coreclr/issues/1954

[33mcommit da2e8eb34efcaf70069223bc431d80909a2fc91d[m
Author: dagood <dagood@microsoft.com>
Date:   Tue Jan 12 14:04:32 2016 -0600

    Add portable-net45+win8 import to tests.
    
    Specifically, add the import to dnxcore50 frameworks entries where "xunit" is mentioned in the project.json.
    This fixes `xunit.abstractions 2.0.0 is not compatible with DNXCore,Version=v5.0.`

[33mcommit 20794430e56267927c14a7bc295eacd05b438f51[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Mon Jan 11 13:33:07 2016 -0800

    Eliminate unnecessary GC handle allocations, in cases where a pinned local can do just as well.

[33mcommit ab16499bda5b18dea4f72f8b1f379688df722aa5[m
Author: Nate McMaster <nate.mcmaster@microsoft.com>
Date:   Tue Jan 12 11:05:53 2016 -0800

    Fix init-tools.sh

[33mcommit 1bec305c3f7dcc819de7cc503d52802ef594d7b1[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Tue Jan 12 11:20:46 2016 -0800

    Fix XmlDictionaryReaderQuotas so MaxDepth and MaxStringContentLength are hornored

[33mcommit 553a9c376305c992e465526b0ed1c2bce5ed386a[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Wed Dec 16 15:22:27 2015 -0800

    Adding EventSource ETW tracing to the System.Buffers code

[33mcommit 11e0ed2f89c8e2cc0617f6ed21c36b27e04f5479[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Jan 12 12:48:47 2016 -0600

    Enabling all IdnMapping Std3AsciiRules tests on Unix.
    
    There were two issues:
    
    1. ICU will always return an error on leading/trailing hyphens regardless of the Std3 setting.  Windows only errors when Std3 = true.
    2. ICU doesn't preserve casing in nameToASCII, so a test was failing because of upper case 'E' not matching lower case 'e'.

[33mcommit f39502ef910c90ba1e67d787df98b627d39ba6cc[m
Author: Guillermo Rangel <josra@microsoft.com>
Date:   Wed Dec 30 12:57:48 2015 -0800

    Deleting Logging.cs file
    
    Substituting Logging calls to EventSource calls, or calls to
    LoggingHash.
    
    Formatting Changes
    
    Fixing Aligment, and casing.
    
    Changing Dump methods log the hash of the object calling it instead of the method
    
    After some discussion, it was decided that it is more useful to log the
    object where the dump happens, than the method. Doing the necessary
    changes for it.
    
    Changing usage of "this" to [CallerMemberName]
    
    Instead of using this to know who called the logging method, using
    [CallerMemberName] as an attribute to the parameter to fill that
    information.
    
    Adding a TODO item.
    
    Making a note to not change NetEventSource or it can break.
    
    Missing Underscore
    
    Adding missing underscore in _wsaBuffer

[33mcommit ee0d0210291d053dfd3c4159c1512869955ed339[m
Merge: 39f94ef 0a18373
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Jan 12 09:16:44 2016 -0800

    Merge pull request #5318 from mellinoe/x509-netcore50
    
    Add netcore50 configuration for X509Certificates

[33mcommit 8b3d78fcfcfeecd52512299b37de454c714972a4[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Jan 12 09:23:33 2016 -0500

    Move failing DNS test to OuterLoop
    
    For a long time now I've been unable to get a clean local build because of
    this test.  On the networks I'm usually on, the DNS server serves up a
    descriptive page for an invalid address, which causes this test to fail,
    as the test is expecting an error.  I'm moving the test to OuterLoop so
    that at least normal builds/test runs can pass on such networks.

[33mcommit bcaecfbfefd7e4d7f1e32a8168b874579661130a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Jan 12 09:19:21 2016 -0500

    Rename ForceOrdered to EnsureOrdered

[33mcommit 62ba3fd92407f6893c53a417cb29550782651342[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Jan 5 16:59:28 2016 -0500

    Address PR feedback
    
    - Update assembly version
    - Tweak XML comments

[33mcommit eabd3b4b7a2332e0bf926df949ed4a2c959380e0[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Jan 5 15:50:34 2016 -0500

    Add DataflowBlockOptions.ForceOrdered to Dataflow library
    
    Adds the DataflowBlockOptions.ForceOrdered option, and utilizes it from TransformBlock and TransformManyBlock.

[33mcommit 39f94ef6fac4bdeff57b2e49b211e9f88bbf96c2[m
Merge: de220f3 94f273d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 12 08:37:26 2016 -0500

    Merge pull request #5300 from stephentoub/fix_eventsource_tz_test
    
    Fix EventSource fuzzing test TimeZone failures

[33mcommit de220f34e77ed1028b6a0bc7606399fe520cacbe[m
Merge: 08cab2a 3457816
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 12 08:26:15 2016 -0500

    Merge pull request #5298 from JonHanna/internal_iequatable
    
    Performance improvements of Equals overrides.

[33mcommit 7c7cec0b15806dc785d4861957026b621ef701d5[m
Author: Alfredo Menendez Sancho <alfremen@microsoft.com>
Date:   Mon Jan 11 22:59:29 2016 -0800

    Add missing code to remove tasks from active list and make logging consistent

[33mcommit 22358b6a057e158214550077414fac4aa70a80eb[m
Author: Bruce Bowyer-Smyth <bbowyersmyth@live.com.au>
Date:   Tue Jan 12 16:29:00 2016 +1000

    Additional String tests

[33mcommit 08cab2a305f34d233d8607ba984e98bbf04d92a0[m
Merge: fdb4a74 6846269
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 12 00:58:47 2016 -0500

    Merge pull request #5324 from JonHanna/remove_misleading_comment
    
    Remove misleading comment.

[33mcommit fdb4a7448f969519579d5ee4308bd9eed9d09fc1[m
Merge: 5645363 fe88eb1
Author: Krzysztof Cwalina <kcwalina@microsoft.com>
Date:   Mon Jan 11 18:39:15 2016 -0800

    Merge pull request #5309 from KrzysztofCwalina/ResourceReaderAndWriterPackages
    
    Added package projects to resource reader and writer

[33mcommit 564536333728fa8b0b57d21258e1d0a36075fc2a[m
Merge: 4f50264 44c8f41
Author: VSadov <vsadov@microsoft.com>
Date:   Mon Jan 11 17:34:27 2016 -0800

    Merge pull request #5179 from VSadov/fix5088
    
    Removing references to nonpublic methods from rd.xml

[33mcommit 6846269719ac0fff34bda5f4daa5c6298e12fe64[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Jan 12 01:32:02 2016 +0000

    Remove misleading comment.
    
    Comment says Queue<T>.Contains throws "ArgumentNullException if item == null."
    
    This is untrue. Remove comment.

[33mcommit 4f502645bdfa0ccafd95c7916bea93ffa6ef204d[m
Merge: 08b2360 21e2896
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 11 19:49:10 2016 -0500

    Merge pull request #5310 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 2ec07f9a309f835dc6d53f4c1e9623d52f2c6c49[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Jan 11 15:37:08 2016 -0800

    Format and clean up netcore50aot ResourceManager code

[33mcommit 58db873f263e234bb064deace9ae476fa40b7ecf[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Mon Jan 11 16:30:25 2016 -0800

    Move System.Data.Common to Win8 compatability
    
    [tfs-changeset: 1563352]

[33mcommit bd773d4a8c6de27f34db7900808d518b5712a30f[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Jan 11 16:23:28 2016 -0800

    net46 and netcore50 configurations for System.Net.NetworkInformation

[33mcommit 1fce1bbd91f048726781d452f21fefcf7217ebe7[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Jan 12 00:19:19 2016 +0000

    Have Expression.TypeIs return true for void expressions and void
    
    Fixes #5244

[33mcommit 85fd489fb4550f5e4d1a90570c24ef72c11b62c1[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Jan 11 18:08:38 2016 -0600

    Fix IdnMapping embedded nulls behavior.
    
    ICU doesn't check for certain illegal characters when STD3 rules are not being used.  However, .NET explicitly prohibits certain characters even when STD3 rules are not used.
    
    Adding checks for the prohibited characters on Unix platforms and enabling the disabled test.

[33mcommit a53e943d00abe795bff84e2df1219379b2bb4b94[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Jan 12 00:14:59 2016 +0000

    Fix error on interpretted TypeEqual with void expression
    
    Fixes #5247

[33mcommit c8d0ac98f38d9d5f47883b5084057fff7c322676[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Mon Jan 11 23:59:38 2016 +0000

    Stop Expression.TypeEquals throwing on Nullable<T> parameter.
    
    Fixes #5272

[33mcommit 9293fb97f061e2d4602adfef3a61aa8740ea2b11[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Mon Jan 11 16:05:00 2016 -0800

    Porting System.Threading.AccessControl

[33mcommit db638c699e33024e9e4e53fb1d28c3fdaec3c918[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Jan 11 15:32:53 2016 -0800

    Add netcore50aot configuration to System.Resources.ResourceManager

[33mcommit 08b236094c8325581f85dc5a70a8e6d2ebad97af[m
Merge: b3376fc 0b876d4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 11 18:33:23 2016 -0500

    Merge pull request #5276 from jamesqo/queue-boxing
    
    Eliminate redundant code in Queue<T>.Contains

[33mcommit b3376fcf4a9498c57114dfd41590660134cb938f[m
Merge: 6c47b8c 45ac801
Author: VSadov <vsadov@microsoft.com>
Date:   Mon Jan 11 15:01:17 2016 -0800

    Merge pull request #5279 from JonHanna/test_typebinary
    
    Test TypeBinary Expressions.

[33mcommit 6c47b8c3dccfe500e446a4c88d8948ab25a5ffb7[m
Merge: cc725ed dad7194
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Mon Jan 11 14:54:01 2016 -0800

    Merge pull request #5224 from tmat/SRMC#6
    
    Updates System.Reflection.Metadata.sln to VS2015 and the project language to C# 6

[33mcommit cc725ed4adcda7e686b9135cb41e21de8962ff28[m
Merge: 3c06fdb cc2ca2c
Author: VSadov <vsadov@microsoft.com>
Date:   Mon Jan 11 14:48:30 2016 -0800

    Merge pull request #5290 from JonHanna/fix_5289
    
    Add null check to System.Dynamic.CallInfo.Equals

[33mcommit 239e9d18c587eb30c837ebc5df665aba2492d267[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Mon Jan 11 14:43:43 2016 -0800

    Changes to System.Xml.XmlSerializer

[33mcommit 0a18373373c1896b423d5b24f8812990b655396e[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Jan 11 14:27:04 2016 -0800

    Add netcore50 configuration for X509Certificates

[33mcommit fe88eb146fee4149877991a62b145f7af57acc87[m
Author: Krzysztof Cwalina <kcwalina@microsoft.com>
Date:   Mon Jan 11 09:47:13 2016 -0800

    Added package projects to resource reader and writer

[33mcommit 3c06fdb72901d43028e0b330b22caec2972ae44f[m
Merge: fbf079a e06d751
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 11 15:04:02 2016 -0500

    Merge pull request #5288 from justinvp/sortedset_symmetricexceptwith
    
    SortedSet<T>.SymmetricExceptWith improvements

[33mcommit 21e2896210231abbf2d1f39d91508a5617f7a8b4[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Jan 11 11:43:55 2016 -0800

    Update init-tools.cmd so the semaphore file is written last so the failures are easier to recover from.
    
    [tfs-changeset: 1563091]

[33mcommit 3cbbca94331bd78f881903a2fd21edf2ebea4e31[m
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Mon Jan 11 11:43:08 2016 -0800

    Updating Dev Workflow
    
    [tfs-changeset: 1562939]

[33mcommit dad7194b7d79bac981d98581952ca6465637d0e1[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Mon Jan 11 11:34:23 2016 -0800

    Use nameof operator in a couple of places to test C# 6

[33mcommit 964a3af7cceb68a440d1762d4529ef9d11567596[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Wed Jan 6 18:34:07 2016 -0800

    Updates System.Reflection.Metadata.sln to VS2015 and the project language to C# 6

[33mcommit fbf079a3e47721a3e1ee650e2d24da9cb907debb[m
Merge: 4cdd4d9 6d54bbf
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 11 13:52:07 2016 -0500

    Merge pull request #5287 from justinvp/collectionextensions
    
    CollectionExtensions: Avoid the List<T> allocation

[33mcommit 4cdd4d9ab943546777dc67a0f30ed13d2eaa44bc[m
Merge: 71462fd d03c243
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 11 13:50:28 2016 -0500

    Merge pull request #5304 from stephentoub/switch_test_servers
    
    Switch System.Net.Security test to use shared HttpTestServers

[33mcommit 71462fdf8c979012df503a6aa2e40dd20c214cf6[m
Merge: cf0d31d f654eb1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 11 13:47:48 2016 -0500

    Merge pull request #5313 from dotnet/cmakedocs
    
    Update windows-instructions.md

[33mcommit 44ab6dec7855392d1d920d3787b956667af3cde9[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Jan 11 12:38:43 2016 -0600

    Adding un-prefixed methods temporarily to keep tests running in CI.

[33mcommit f654eb185a956b6b3ab650bf358108b94e526c90[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Mon Jan 11 10:36:35 2016 -0800

    Update windows-instructions.md

[33mcommit cf0d31d5eac0df4b3162ed2ad6c703b6cda56460[m
Merge: ac5dcc3 4ff49bf
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 11 13:31:38 2016 -0500

    Merge pull request #5307 from dotnet/eerhardt-updateInteropGuidelines
    
    Update interop-guidelines.md

[33mcommit 380e21a9a49acd0d40dcd7ee34fe1f47c78060cd[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Jan 11 12:12:59 2016 -0600

    Enable Globalization.Extensions tests marked with ActiveIssue for #810.

[33mcommit 4ff49bf12ab66ca0305c3ee7d56291f68d888a46[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Jan 11 11:27:18 2016 -0600

    Update interop-guidelines.md

[33mcommit e06d7511a315d43a7d382695c6680b8be274c3e6[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Sun Jan 10 15:24:07 2016 -0800

    SortedSet<T>.SymmetricExceptWith improvements
    
    - Avoid the enumerator allocation when other is a SortedSet<T>.
    - Avoid the potential array downsize allocation for other collections.

[33mcommit ac5dcc3ad4ebd93371ad82178cdccb55cc5eedff[m
Merge: abc7236 3456760
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 11 12:24:20 2016 -0500

    Merge pull request #5301 from stephentoub/sockets_tests
    
    Disable several System.Net tests that have been failing

[33mcommit b08adadb50f4e2b4ec89cc48b15ccb170c125a01[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Jan 11 10:49:25 2016 -0600

    Unique names for System.IO.Compression.Native.* exports
    
    The methods exported from System.IO.Compression.Native.* shims have short generic names. Making them more unique by adding "CompressionNative_" prefix to each method name.

[33mcommit 3457816c8ad189c8b74684a99e7a606d5c579a85[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Mon Jan 11 16:21:31 2016 +0000

    Performance improvements of Equals overrides
    
    Implement IEquatable<T> on internal class in System.Xml.XPath and DataContractSerialization.
    
    Remove redundant null-checks in Equals that will just be checked again.
    
    Do reference-equals test instead of both-null test.
    
      Same cost, and allows for short-circuit true in reference-equals case.
    
    Remove redundant null-check before is check.
    
      Will return false on null anyway.
    
    Unbox to local variable rather than unboxing twice.
    
    Use as-and-null-test instead of is followed by cast.

[33mcommit abc7236c4c6b7636ae472c3d20b7ce09b306d10e[m
Merge: d13050d 25cd2c1
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Mon Jan 11 08:45:52 2016 -0800

    Merge pull request #5292 from weshaggard/FixMisconfiguredProjects
    
    Update some project references to align their configurations

[33mcommit d03c243c3676fc322f567e242ec47ee63ce096f6[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Jan 11 11:19:30 2016 -0500

    Switch System.Net.Security test to use shared HttpTestServers

[33mcommit d13050ddd64ad684f397bc01e4ab7476bf54a810[m
Merge: a0d9b16 3802cd8
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Jan 11 07:03:13 2016 -0800

    Merge pull request #5302 from stephentoub/fix_https_path
    
    Fix URL used in System.Net.Security tests

[33mcommit 3456760d2e9fd755b4433b5516e656ce99607657[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Jan 11 08:51:01 2016 -0500

    Disable several System.Net tests that have been failing

[33mcommit 3802cd82257433a3208f0ed20874e867af97a283[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Jan 11 09:07:04 2016 -0500

    Fix URL used in System.Net.Security tests
    
    An incorrect URL was causing the CertificateValidationRemoteServer_EndToEnd_Ok test to fail.

[33mcommit 94f273dacd14cf23550e851e71e07fe89d6b843c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Jan 11 08:38:36 2016 -0500

    Fix EventSource fuzzing test
    
    The test fails in any time zones with a positive UTC offset as it attempts
    to create a DateTimeOffset before 0.

[33mcommit beb7760e1e6b2351f7cf73fd62013634854c72c5[m
Author: Ashley Mannix <admin@kodr.com.au>
Date:   Mon Jan 11 20:07:17 2016 +1000

    Fix Incorrect ArgNullExc in List.ForEach
    
    For #5293
    
    Fix for List.ForEach with null Action

[33mcommit 25cd2c13009f3561fed1cccf96a7b296c39dd6c2[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sun Jan 10 21:52:43 2016 -0800

    Update some project references to align their configurations
    
    A number of ProjectReferences were not configured correctly and as
    such causes some race conditions because multiple projects with different
    global properties, but with the same ConfigurationGroup, OSGroup, or TargetGroup,
    were building at the same time in parallel which means they stomped on each other.

[33mcommit cc2ca2cd593f68cc8811843911a50e623322f5b0[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Mon Jan 11 01:57:18 2016 +0000

    Add null check to System.Dynamic.CallInfo.Equals
    
    Fixes #5289

[33mcommit 6d54bbfb73c1e017ed83fde4a7302f1041c83c04[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Sun Jan 10 14:41:53 2016 -0800

    CollectionExtensions: Avoid the List<T> allocation
    
    Use EnumerableHelpers to avoid the unnecessary List<T> allocation and
    simplify the code.

[33mcommit a0d9b162b64dd152ef2e309f6c7ee23c8c053a6a[m
Merge: 6ecc9f1 6956926
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Sun Jan 10 09:28:22 2016 -0800

    Merge pull request #5277 from weshaggard/FixNativeBuildScript
    
    Fix native-build command parsing and push it to log file in build.cmd

[33mcommit 6ecc9f1b4c892722b7acda5e409731bd03100cc4[m
Merge: d338ca4 ce3531e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Jan 10 11:51:11 2016 -0500

    Merge pull request #5280 from JonHanna/test_list_skip
    
    Have IList and non-IList versions of all Enumerable.Skip tests.

[33mcommit d338ca452968fdb781d02e2ceb2c6c05925caa40[m
Merge: 5c09275 288a662
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Jan 10 10:29:14 2016 -0500

    Merge pull request #5282 from stephentoub/fix_outerloop_console
    
    Fix OuterLoop Console test failing on Windows

[33mcommit 288a66212917edb0a495bf9978f7c38a633d491e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Jan 10 08:30:51 2016 -0500

    Fix OuterLoop Console test failing on Windows
    
    Clear can't be called when input/output is redirected

[33mcommit 5c09275d6aba0bb21e0392adaf6b3d99eff80b2e[m
Merge: e77ed91 6cd395c
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Sat Jan 9 23:33:57 2016 -0800

    Merge pull request #5275 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit e77ed91ad0d5412b502ff298db5ee044aa17c47d[m
Merge: 239e7dd 1f26166
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Sat Jan 9 22:23:04 2016 -0800

    Merge pull request #5278 from weshaggard/FixAppContextBuild
    
    Fix AppContext .builds file and project.json

[33mcommit ce3531e0c5731e545d3052a3e1dcceda43e01095[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Sun Jan 10 05:09:12 2016 +0000

    Have IList and non-IList versions of all Enumerable.Skip tests.
    
    #4551 introduced optimised versions of Skip for IList<T> sources. Have all
    tests for Skip test both this and the previous path.

[33mcommit 45ac8014d5e979dcc0a131b3b87c87fca41a51fb[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Jan 8 12:13:57 2016 +0000

    Test TypeBinary Expressions.
    
    Add tests for TypeIs and TypeEqual expressions.

[33mcommit 1f26166df94eee6bf401aa7a6f4dacc08fcd5a87[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sat Jan 9 19:44:13 2016 -0800

    Fix AppContext .builds file and project.json
    
    Switched to WinRT package for Windows.winmd.
    
    Remove OSGroup=Windows_NT from netcore50 target as it isn't necessary
    and it will allow for the building of the package for this library
    on other OSGroups.

[33mcommit 6956926848c5f8d0ae86bb51796447a07ddea7d0[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sat Jan 9 19:03:45 2016 -0800

    Fix native-build command parsing and push it to log file in build.cmd

[33mcommit 0b876d4b4e877a9b62b4b9c31fd95610e165a404[m
Author: James Ko <jamesqko@gmail.com>
Date:   Sat Jan 9 21:56:03 2016 -0500

    Remove redundant code/eliminate struct boxing in Queue.Contains

[33mcommit 6cd395c06fcd8201d3d328fb4c7051918e71f5fe[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sat Jan 9 18:29:51 2016 -0800

    Update the new Console APIs to come from Console_L2 api-set as they only exist in OneCore.
    
    [tfs-changeset: 1562911]

[33mcommit 15f47efe119b17032a661f752248ae1fcc172bf3[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sat Jan 9 18:19:18 2016 -0800

    Fix break with System.IO.Compression by switching to a project reference to the open project given that we now have support for building it in the open.
    
    [tfs-changeset: 1562910]

[33mcommit 239e7dd3270aa6fc84154362918c8941c6658514[m
Merge: 183446d a8a115f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Jan 9 18:57:04 2016 -0500

    Merge pull request #5268 from jamesqo/sorted-set-sew
    
    SortedSet: Avoid redundant List allocation

[33mcommit 183446d65dda5d6d0940d06b703af7d32d1c0c99[m
Merge: c1856a3 fef8110
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Jan 9 15:23:24 2016 -0500

    Merge pull request #5270 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit c1856a36ab4ff9e09d14c02ca504e864b5e18a97[m
Merge: 2b8094c 9856c3d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Jan 9 15:07:16 2016 -0500

    Merge pull request #5264 from AlexGhiondea/AppContextPackage
    
    Port the System.AppContext package into the open

[33mcommit 2b8094c8959cdd6b5d00cb08d770374b3f9e7de9[m
Merge: bf7c0bd 56ffcb6
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Sat Jan 9 06:55:00 2016 -0800

    Merge pull request #5259 from tmat/DllCharacteristics
    
    Add DllCharacteristics.HighEntropyVirtualAddressSpace

[33mcommit bf7c0bd9331d66bd99e0d2974ea511245215a2b2[m
Merge: 17ddda6 469d66c
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Jan 8 21:09:09 2016 -0800

    Merge pull request #5263 from mellinoe/system.runtime.extensions.netcore50
    
    Add netcore50 configuration to System.Runtime.Extensions

[33mcommit 17ddda61de3066c46107564435930a86daffcd61[m
Merge: bf2f914 34f52f3
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Fri Jan 8 19:22:53 2016 -0800

    Merge pull request #5257 from stephentoub/socket_alloc
    
    Remove ExecutionContext-related allocations from System.Net.Sockets

[33mcommit bf2f9144d15786352481ec9b02673ce5764ebee4[m
Merge: a76c54c 9a414b0
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Fri Jan 8 19:21:49 2016 -0800

    Merge pull request #5156 from CIPop/nego
    
    Porting NegotiateStream

[33mcommit 931df1c4f4c37056951cd91f47991399d2e5bdf1[m
Author: James Ko <jamesqko@gmail.com>
Date:   Fri Jan 8 21:59:42 2016 -0500

    ImmutableArray: Remove workaround for bug in native compiler

[33mcommit a76c54c997f46bd48b9aeae4e94032f35a3e5664[m
Merge: 34084d3 99bb75a
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Jan 8 18:54:38 2016 -0800

    Merge pull request #5242 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit fef8110ac09dfd36125ae6dfe6249569959c5b69[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Fri Jan 8 17:43:53 2016 -0800

    Fixing package build break by removing wp8 from the supported list given this library targets generation 5.2.
    
    [tfs-changeset: 1562873]

[33mcommit 99bb75a593178809f5d3e410e83771ec5fb2e42f[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Jan 8 17:07:32 2016 -0800

    Keep FilterToOSGroup for '.proj' as well

[33mcommit 9a414b0af4230b59a06dd9e255a36400582f482e[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Tue Dec 1 16:18:03 2015 -0800

    Porting NegotiateStream.

[33mcommit 469d66ceb111e885b98834b3ab6b3ddd8507387e[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Jan 8 16:04:27 2016 -0800

    Add netcore50 configuration to System.Runtime.Extensions
    
    Tried to clean up the project as nicely as possible, and share as much in each ItemGroup as possible with all of the different configurations

[33mcommit 9856c3d82158ed737f0aa3ab4ef7f4b4702ca9fb[m
Author: Alex Ghiondea <ghiondea.alexandru@microsoft.com>
Date:   Fri Jan 8 15:18:21 2016 -0800

    Port the System.AppContext package into the open

[33mcommit 34084d3c3f4715c51c03ad3fd37566e9b925dfd9[m
Merge: 234c538 603aaa7
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Fri Jan 8 15:07:45 2016 -0800

    Merge pull request #5223 from Priya91/system.drawing
    
    Add System.Drawing.Primitives contract to .NET Core.

[33mcommit 234c538ed5eca31400c786d60c01629b3cd2d073[m
Merge: 38c1886 adaeaad
Author: Pallavi Taneja <pallavit@users.noreply.github.com>
Date:   Fri Jan 8 14:55:31 2016 -0800

    Merge pull request #5254 from pallavit/Console_APIs
    
    Enable and expose the following Console APIs

[33mcommit 56ffcb6fda40dd23caa7086f3b25d30d2d8b3615[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Fri Jan 8 14:06:36 2016 -0800

    Add DllCharacteristics.HighEntropyVirtualAddressSpace

[33mcommit 38c1886ed4f0d1d63cc26938e522fc1d51e902e0[m
Merge: 7407d05 a778034
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Fri Jan 8 13:21:07 2016 -0800

    Merge pull request #5124 from ericstj/shimPackages
    
    Add packages for remaining native shims

[33mcommit adaeaad1ff4c95666bf8534a42b8d8210592d6f3[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Fri Jan 8 12:46:19 2016 -0800

    Incorporate feedback comments

[33mcommit 34f52f32708ec327ef2d7283d6bce74033497252[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 8 15:11:41 2016 -0500

    Remove per-call ContextCallback delegate allocation
    
    Pass the 'this' reference via the state object rather than via the delegate.

[33mcommit 241eb27504a4e7bc774e202acc5447b09bb4a2d6[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 8 15:07:08 2016 -0500

    Remove ExecutionContext shim from System.Net
    
    In profiling a client/server scenario where the client launches a bunch of async operations against the server, close to 15% of all allocated instances on the client are for System.Threading.ExecutionContext (~9% of the allocated space).  This didn't make sense, because on CoreCLR ExecutionContext is immutable and neither ExecutionContext.Capture() nor ExecutionContext.CreateCopy() should be allocating.
    
    It turns out that some of the System.Net libraries had a custom System.Threading.ExecutionContext shim object with a comment in the file "Important: This is temporary code". Ugh.
    
    I've removed it.  No more ExecutionContext allocations. And using the right ExecutionContext object from CoreCLR.
    
    This also shrinks the size of SocketAsyncEventArgs by another field, as a separate ExecutionContext copy no longer need be maintained, due to ExecutionContext immutability on platforms other than the full framework.

[33mcommit 834f3fea8676d90fb45ae29911a83b15f54c5254[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 8 13:59:05 2016 -0500

    Remove ContextCallback allocated per SocketAsyncEventArgs
    
    Avoids a delegate object being allocated per SocketAsyncEventArgs instance.  Also decreases the size of SocketAsyncEventArgs by a reference field.

[33mcommit 18ab09d0fdda8336644a19b0c921c0f21de7f188[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Jan 8 12:38:29 2016 -0800

    Move System.Buffers package to the open.
    
    [tfs-changeset: 1562732]

[33mcommit 603aaa70371862fd9cbf2c614988b30fc0d87b35[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Fri Jan 8 11:33:05 2016 -0800

    Fix facade generation error.

[33mcommit 7407d05908f23f28a9f345a16c09cc1d735bbde9[m
Merge: ae34550 30191cc
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Jan 8 11:04:46 2016 -0800

    Merge pull request #5239 from mellinoe/xplat-build-breaks
    
    Fix some x-plat build breaks

[33mcommit ae3455097c0de6864f11b78df817286e3a7468e1[m
Merge: ff2436a cc8a5d1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 8 13:56:02 2016 -0500

    Merge pull request #5250 from stephentoub/more_net_logging
    
    Guard logging usage behind IsEnabled checks in the rest of System.Net.*

[33mcommit ff2436aea33a9b3f970a96cf65ed2a95eec29d91[m
Merge: 322bf11 21c81c5
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Jan 8 10:53:45 2016 -0800

    Merge pull request #4999 from ianhays/1904
    
    Fixed OS tag in ZipArchive header

[33mcommit cc8a5d162d36efc8bd56ba406efea71ee3a8af6f[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 8 12:07:12 2016 -0500

    Additional cleanup
    
    - Remove dead Assert overloads that include a Boolean conditional
    - Fix up several missed call sites.  Missed primarily due to code being conditionally included based on different build flavors (e.g. Windows vs Unix)
    - Fix up GlobalLog fakes to include IsEnabled

[33mcommit 6e15783273fe9a6620d1c62e9cea73827863aa36[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 8 11:40:15 2016 -0500

    Improve performance around logging code in System.Net.NetworkInformation
    
        Same treatment as in https://github.com/dotnet/corefx/pull/5238, but for System.Net.NetworkInformation.

[33mcommit 2dcc601e4fec2a0bd15860521bd70012224a2be6[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 8 11:31:25 2016 -0500

    Improve performance around logging code in System.Net.NameResolution
    
    Same treatment as in https://github.com/dotnet/corefx/pull/5238, but for System.Net.NameResolution.  The call sites to GlobalLog methods often do a lot of allocation and other work, even in release builds and even when logging is disabled; this commit guards those call sites behind checks for whether logging is enabled.

[33mcommit 6be02b9d8a20ef4cbcebcf1396c17ad0bb35c1e3[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 8 11:25:43 2016 -0500

    Improve performance around logging code in System.Net.Primitives
    
    Same treatment as in https://github.com/dotnet/corefx/pull/5238, but for System.Net.Primitives.  The call sites to GlobalLog methods often do a lot of allocation and other work, even in release builds and even when logging is disabled; this commit guards those call sites behind checks for whether logging is enabled.

[33mcommit ba002b1f94c43e8616b457536c29244eabc79093[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jan 8 11:13:02 2016 -0500

    Improve performance around logging code in System.Net.Security
    
    Same treatment as in https://github.com/dotnet/corefx/pull/5238, but for System.Net.Security.  The call sites to GlobalLog methods often do a lot of allocation and other work, even in release builds and even when logging is disabled; this commit guards those call sites behind checks for whether logging is enabled.

[33mcommit 322bf1180cf931afff51bf6f8a10508f09edb3bf[m
Merge: 6401e6d 18689bc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 8 10:15:29 2016 -0500

    Merge pull request #5238 from stephentoub/sockets_logging
    
    Significantly reduce release logging overhead in System.Net.Sockets

[33mcommit 18689bc598b6c2630822a2d9ccbcf8d9c5d27863[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Jan 7 22:31:12 2016 -0500

    Address PR feedback

[33mcommit 6401e6d238981cdbd24f2656801c40db14a785c9[m
Merge: 20f70bc 71544a4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 8 07:45:54 2016 -0500

    Merge pull request #5240 from bartonjs/remove_ossl_098
    
    Remove conditional compilation related to supporting OpenSSL 0.9.8

[33mcommit 20f70bceb4f701346cf1be3cd7bed25703d79f94[m
Merge: 5c536ba bb156ad
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jan 8 07:45:40 2016 -0500

    Merge pull request #5243 from ellismg/fix-3421
    
    Clean up some globalization tests

[33mcommit bb156ad3b675dac995b8b059d6a53ab25bf6f0c2[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Jan 7 22:22:50 2016 -0800

    Clean up some globalization tests
    
    - Remove some legacy tests that were setting DefaultThreadCulture to
      "hu-HU". We have coverage elsewhere from tests that don't modify
      global shared state and the way the tests were written the
      modifications did not do what was expected (i.e. force TestStrings
      to use a different culture)
    
    - Enable some tests disabled against #3421.  I believe that these were
      due to races in the tests which were screwing with the current
      culture for a thread in and not resetting it and these issues should
      be addressed now (I audited the code that actually sets
      CurrentCulture for a thread).
    
    Fixes #3421

[33mcommit 433c63a617679350953f1f2621f351194ef20a3d[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Wed Dec 23 15:04:27 2015 -0800

    Add System.Drawing.Primitives contract to .NET Core.

[33mcommit 5c536bae7ccdd30a981f8207bf9d58349c909b2e[m
Merge: 22c041b 9266808
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Jan 7 18:08:53 2016 -0800

    Merge pull request #4809 from nguerrera/signature-decoder
    
    Add SignatureDecoder to System.Reflection.Metadata

[33mcommit 0261ba7da6689bf583a472d2e1b0ac02ee49dda7[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Thu Jan 7 14:50:44 2016 -0800

    Enable and expose the following Console APIs:
    
    public static string Title { get; set; }
    public static void Beep();
    public static void Clear();
    public static bool KeyAvailable { get; }
    public static int CursorLeft { get; set; }
    public static int CursorTop { get; set; }
    public static void SetCursorPosition(int left, int top);
    public static int WindowHeight { get; set; }
    public static int WindowWidth { get; set; }
    public static int WindowLeft { get; set; }
    public static int WindowTop { get; set; }

[33mcommit 22c041b43f279d3dfea273fa4453b1fe9ebc1d70[m
Merge: 2f2e1d4 ce8e496
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 7 20:01:54 2016 -0500

    Merge pull request #5237 from dotnet/UpdateDocDebian
    
    Update Unix instructions for Debian

[33mcommit 2f2e1d4f90266b419ac66fbcd5f4a99538abf04b[m
Merge: 7b92c2f d32b06a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 7 20:01:04 2016 -0500

    Merge pull request #5232 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 30191cc2693557214eec95d757ca5d1c43d7412f[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Jan 7 14:39:52 2016 -0800

    Don't override UseECMAKey if it is set to false
    
    This was being unconditionally overridden in System.Runtime.WindowsRuntime.UI.Xaml in x-plat builds. This assembly is really only useful on Windows, but technically its a fully portable assembly and could be used anywhere.

[33mcommit 4bee54f859f499d2b9090f3d0be5b5080e9466af[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Jan 7 14:14:20 2016 -0800

    Disable Microsoft.VisualBasic on non-Windows platforms.
    
    See issue #5230

[33mcommit 8d83c84da7ec75e947a65f5b9938570054940135[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Thu Jan 7 16:04:26 2016 -0800

    Open Source CLRCompression
    
    [tfs-changeset: 1562317]

[33mcommit 0521ba9f809de30e4d8325b3833b4a9ae0ab50d8[m
Author: David Mason <davmason@microsoft.com>
Date:   Mon Dec 21 15:42:52 2015 -0800

     Merge the .Net Native and CoreCLR implementations of EventSource. This replaces a lot of the previous ifdefs in the ProjectN impelmentation with a partial class that is cleaner and easier to understand.
    
     # This is a combination of 5 commits.
    Merge the .Net Native and CoreCLR implementations of EventSource
    
    Merge the CoreCLR refactoring in to the ProjectN folder. After this change the project should be much easier to merge and all bug fixes are up to date.
    
    Refactor the interop in ProjectN so it can work without ifdefs.
    
    Move methods that use EventActivityIDControl to EventSource_ProjectN.c
    
    Add formatting to the debugger message that EventSource prints when an internal error happens.
    
    Port remaining fixes to N from CoreCLR.

[33mcommit 71544a4ea55406740b1d3a00667b3ef0b816c9a2[m
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Thu Jan 7 15:00:01 2016 -0800

    Remove conditional compilation related to supporting OpenSSL 0.9.8

[33mcommit 7b92c2f4acc442bee4c5ad4c88cf4f1dd161b811[m
Merge: b7df0ff e57af29
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Thu Jan 7 14:31:02 2016 -0800

    Merge pull request #5227 from bartonjs/revert_algo_reflection_deps
    
    Revert "Add reflection dependencies for S.S.C.Algorithms"

[33mcommit b7df0ff8e2c35f02835da6913e871ac5b42fef1c[m
Merge: a7249d9 2e0eac3
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Thu Jan 7 14:29:31 2016 -0800

    Merge pull request #5175 from bartonjs/unix_x500dn_encode
    
    Add support for encoding X500DistinguishedName values on Unix.

[33mcommit ce8e496a9d6a37899f25788195282911de5fa69f[m
Author: Nate Amundson <naamunds@microsoft.com>
Date:   Thu Jan 7 16:24:11 2016 -0600

    Update Unix instructions for Debian
    
    For Debian only, it is necessary to install libgdiplus for Mono.
    
    This change also includes two minor clean-ups:
    - Removes the http://jenkins.mono-project.com/repo/debian package repository, which is no longer necessary.
    - Changes the Mono build from mono-snapshot to mono-devel to be consistent with the CoreCLR instructions, because it is no longer necessary to use daily Mono builds.

[33mcommit a56e8a2005fb19dea770c8ae639b643eeb1cc8f6[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Jan 7 17:00:52 2016 -0500

    Guard GlobalLog.Print/Assert calls behind IsEnabled checks
    
    Most of the calls to Print do string concatenation and other work at the call site, which will happen even in release builds even if logging is disabled.  This commit puts all of that work behind checks for whether logging is enabled.

[33mcommit cffd36d55e64b30e3b251e419ffd09dafad926a7[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Jan 7 14:28:04 2016 -0500

    Avoid allocations/formatting with GlobalLog.Assert
    
    GlobalLog exposes a method Assert(bool, string, params object[]) which is used in a bunch of places for logging, including in release builds.  Even though the logging may be disabled, calling this still results in object[] arrays getting instantiated, the arguments getting evaluted (which often involves other string allocations), etc.
    
    This commit fixes those up to avoid most of these allocations unless the condition fails and logging is enabled.
    
    It also fixes other related issues.  For example, calling GlobalLog.Dump today creates a copy of the portion being dumped, even if logging is disabled.

[33mcommit a5d558bcf7713e56c237de704f3d70c4927d8f44[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Jan 7 13:52:41 2016 -0800

    Don't pass FilterToOSGroup to non-builds files
    
    FilterToOSGroup was flowing from .builds to csproj
    which was causing unique global property sets for
    the same csproj.  As a result the projects would
    build multiple times and race when writing output.
    
    [tfs-changeset: 1562265]

[33mcommit a7249d9759a3b4ba0215cadb8537f1a768909649[m
Author: Eric Eilebrecht <ericeil@users.noreply.github.com>
Date:   Thu Jan 7 13:41:49 2016 -0800

    Remove out-of-date known issue
    
    Tests *are* run on Linux now.

[33mcommit 4b207778f4379ec80126d4e144db2b8b8515bbb6[m
Merge: 138ec36 94baa89
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Thu Jan 7 13:11:37 2016 -0800

    Merge pull request #5210 from Priya91/addframeworkversion
    
    Add version information to RuntimeInformation.FrameworkDescription.

[33mcommit 21c81c5ad43c2017cec39cb536b0b6bd642ec244[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Jan 7 12:20:28 2016 -0800

    Remove net46 specific ZipArchiveEntry treatment

[33mcommit 44a11c21ebb6c059995b64c8f38d3d14aef154d2[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Tue Dec 15 15:04:57 2015 -0800

    Fixed OS tag in ZipArchive header
    
    When writing, the OS tag in the header of a ZipArchive CentralDirectoryHeader was being set to 0 (Windows) regardless of platform. When reading, the os tag was being ignored. I added logic to set/get this tag properly and also modified the ArchiveEntry Name getter to parse the path based on the source OS instead of on the running OS.
    
    This will break anyone not on net46 that was using the Name property of ZipArchiveEntries that had paths containing the backslash character within a ZipArchive that was compressed on a Unix machine but decompressed on a Windows machine.
    
    resolves #1904. Related to #4991

[33mcommit 138ec3685ae5ef55ec72d0c82eef875b4e888bd5[m
Merge: 7df9e0d 1695bde
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Jan 7 14:09:08 2016 -0600

    Merge pull request #5196 from eerhardt/Fix4818_2
    
    Add unique names for HttpNative and CryptoNative

[33mcommit 7df9e0d7ba1e3f59ec4c96cdae850c56c836ea1e[m
Merge: c1a3780 592a653
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Jan 7 14:08:20 2016 -0600

    Merge pull request #5229 from eerhardt/FixOSXBuild
    
    Fixing OSX build break.

[33mcommit d32b06ae2c67c89449118fe59e58a761d7d3f9f4[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Jan 7 11:17:05 2016 -0800

    Rename System.Net.Utilities contract to System.Net.Ping contract
    
    As per the System.Net API review (https://github.com/dotnet/corefx/issues/4732), the System.Net.Utilities contract is being renamed to the System.Net.Ping contract.
    
    [tfs-changeset: 1562210]

[33mcommit 592a653c8f0872c6913a0deb7eb646f36e634b0f[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Jan 7 12:50:19 2016 -0600

    Fixing OSX build break.
    
    I renamed all the extern methods in System.Native, but missed renaming a function call that was #if'd out on normal Linux builds.

[33mcommit 926680865341c4819660d67ef6b8e8347a175457[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Dec 8 14:46:09 2015 -0800

    Respond to PR feedback

[33mcommit 0bc15ebcff855acf36d0970d0ed95d770adf2882[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Wed Dec 2 15:29:27 2015 -0800

    Add signature decoder to System.Reflection.Metadata
    
    Up to now, System.Reflection.Metadata provides low-level access to
    ECMA-335 CLI metadata, but only provides signatures as blobs that must
    be parsed with direct knowledge of the format as described in the
    section II.23.2 of the CLI specification. There is a BlobReader for
    reading various elements out of blobs, but it is up to the caller to
    read the right things at the right positions.
    
    This was by-design as the library is designed to sit at the lowest level
    behind the scenes of higher level API such as Reflection proper, Roslyn,
    or CCI.
    
    The challenge with signatures is that they are variable-length and
    encode tree structures, and each higher level model that could sit on
    top of System.Reflection.Metadata will have different representations
    for the trees. We do not want to introduce an API to build a fully
    formed tree that then has to be traversed and rewritten to match the
    actual use case.
    
    This API is therefore a middle ground between:
    
     1. Here are the bytes and some helpers. Read the spec to decode.
        (Status quo.)
    
     2. Yet another high-level metadata API.
        (Out of scope for this layer.)
    
    It works as follows:
    
     1. The caller chooses an arbitrary representation, TType, for type
        symbols and implements ISignatureTypeProvider<TType> .
    
     2. Signatures are parsed by recursive descent and the provider is
        called to create new type nodes:
    
         * Give me the TType that represents this primitive
         * Give me the TType that represents this TypeDefinition
         * Give me the TType that represents an array of this other TType
         * etc.

[33mcommit a7780346321424720c4780e1bb880d3af6eb904d[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Jan 6 08:01:27 2016 -0800

    Skip pack of native packages when files don't exist
    
    Native build is a seperate pass that isn't always run
    prior to the managed build.  As such make missing
    files a warning for native packages and skip pack.

[33mcommit 84d1409c989702d5c118bae2f13fda262d35c33b[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Mon Jan 4 10:40:39 2016 -0800

    Specify architecture & OS in native package build recursion
    
    In the open Packages build as part of the managed build
    pass, as a platform (architecture) is not set.  Ensure that the
    shim packages are built for the correct architectures during
    the open build.
    
    In the TFS build we always set platform up front so these
    were getting the correct value from the build environment.
    
    Switch to use the OSGroup filtering instead of conditions.

[33mcommit acc39ed1d477dfbd4f586a8940706f06473bbc32[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Mon Dec 28 12:01:05 2015 -0800

    Add packages for remaining native shims
    
    This change moves the remaining native shim projects
    into corefx from TFS.  rt.native.System.IO.Compression
    still  refers to internal paths (conditioned on existence)
    until clrcompression is moved to the open.

[33mcommit c1a37804405382f2ab62dd3b4a6dd14f75825fd0[m
Merge: 358f980 d30c9dd
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Jan 7 10:44:21 2016 -0800

    Merge pull request #5009 from tmat/PEDebugDir
    
    Implements PE Debug Directory reader.

[33mcommit 1695bde2735b10c04d1c6a34642bb049dd364140[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Jan 6 12:21:14 2016 -0600

    Adding temporary un-prefixed native shim methods to keep the CI happy.

[33mcommit 358f9805dc9004338032367bf56c0fc26aba4eb9[m
Merge: 7ab1da0 21321ad
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 7 12:26:29 2016 -0500

    Merge pull request #5147 from JonHanna/fix_5141
    
    Improve memory use of HashSet constructed from HashSet.

[33mcommit 2e0eac3a95ead52ffd3154d63ba341cb7d898fe7[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Dec 23 08:13:33 2015 -0800

    Add support for encoding X500DistinguishedName values on Unix.
    
    The Unix implementation matches the Windows behavior on the Use*
    flags for choosing the RDN separator, but always uses the UTF-8
    encoding instead of the UCS-2/BMP encoding (Windows will use UTF-8 as
    an opt-in with a flag).
    
    So new X500DistinguishedName(input, flags).Decode(false) will always
    produce the same output string from both Windows and Unix, but the RawData
    will differ.

[33mcommit e57af2965b8e81d93b5dfb310d43ce0c81ebad42[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Jan 7 08:50:14 2016 -0800

    Revert "Add reflection dependencies for S.S.C.Algorithms"
    
    This reverts commit bc19d6df360348baa25b6a6b01a18850df01f2ee.

[33mcommit 7ab1da0bb62fd0bb5579cd0e132b7f5d7654c476[m
Merge: e0a215f e32d222
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 7 10:27:30 2016 -0500

    Merge pull request #5219 from ianhays/christmasanalysis
    
    Resolve nits found by Static Analysis

[33mcommit e0a215f3f959407be801c9e7837c9bb4d9df9fb6[m
Merge: d8961ae 8cbe097
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Jan 7 09:09:21 2016 -0600

    Merge pull request #5186 from eerhardt/Fix4818
    
    Unique names for System.Native.* exports

[33mcommit d8961ae8889465a247c727d477cb9e23ba4ded42[m
Merge: 513efd8 1684dec
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 7 09:05:53 2016 -0500

    Merge pull request #5207 from ericeil/Fix-3610
    
    Fix #3610

[33mcommit 513efd86d5fb290098d6823b7b847cf50dd01951[m
Merge: 4ce2253 4c67129
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 7 08:35:30 2016 -0500

    Merge pull request #5214 from ellismg/add-en-us-posix-casing-test
    
    Add regression test for dotnet/coreclr#2531

[33mcommit 4ce225387d63c07f35bd479c87cdd5e830c285c9[m
Merge: e0e13fc d05f8c7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 7 08:33:35 2016 -0500

    Merge pull request #5220 from justinvp/readerwriter_delegates
    
    Port TextReader/Writer changes from CoreCLR

[33mcommit e0e13fc600e02236748ea032af705920999ed639[m
Merge: 78ef204 88d2c2e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 7 08:08:59 2016 -0500

    Merge pull request #5218 from justinvp/streamreader_preamble
    
    Port StreamReader UTF8 preamble cache change from CoreCLR

[33mcommit 78ef204ddf7e0d123b78c7f890fbe0996cf55439[m
Merge: 9815392 7248cb5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 7 08:07:50 2016 -0500

    Merge pull request #5215 from mellinoe/buildtools-144
    
    Update to buildtools 144, Fix x-plat build breaks

[33mcommit 98153928f82033f032504737f8f97f0493a5d720[m
Merge: 365421f 7b72b53
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 7 08:07:35 2016 -0500

    Merge pull request #5203 from stephentoub/customvalidation_squash
    
    Fix CustomValidationAttribute to properly implement RequiresValidatonContext

[33mcommit 365421f3965e6cb104899de080f552f3ae9a992e[m
Merge: 6113742 2bf367c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 7 08:07:16 2016 -0500

    Merge pull request #5226 from noahfalk/master
    
    Fix issue 4976

[33mcommit 61137422f15c18e5b26d19bc57600cff85ffb1c2[m
Merge: e3a550a e171c68
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jan 7 08:07:01 2016 -0500

    Merge pull request #5225 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit e3a550a8d4a6241d27f2dd39723a23e59f94f5b9[m
Merge: 387ae53 021914c
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Jan 6 22:15:45 2016 -0800

    Merge pull request #5195 from mellinoe/system.reflection.context.net46
    
    Add netcore50 source build for System.Reflection.Context

[33mcommit e171c681871c33ed12bd00ab7dc9a3b79bcbdb31[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Jan 6 22:02:07 2016 -0800

    Fix up System.IO.csproj for the netcore50aot configuration
    
    The merging in of BufferedStream from TFS had some incompatibilities with the new netcore50aot configuration that was added

[33mcommit 2bf367c25427beccb4115362012afd922806e17a[m
Author: Noah Falk <noahfalk@microsoft.com>
Date:   Wed Jan 6 19:28:42 2016 -0800

    Fix issue 4976
    
    Addresses code review comments from the earlier PR for System.Diagnostics.StackTrace

[33mcommit 387ae53564e4ab58e9620af1ef9d2090aa68ef12[m
Author: Tomáš Matoušek <tmat@users.noreply.github.com>
Date:   Wed Jan 6 19:01:04 2016 -0800

    Update PE-COFF.md

[33mcommit c86c7bfb03ecbb229ca201123852af8d863ac397[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Wed Jan 6 18:39:35 2016 -0800

    Add BufferedStream to System.IO in CoreFX
    
    [tfs-changeset: 1561906]

[33mcommit a8a115ff314e05749a061772aa589095bd8043e9[m
Author: James Ko <jamesqko@gmail.com>
Date:   Wed Jan 6 21:35:01 2016 -0500

    Avoid allocating a new List in SortedSet.SEW

[33mcommit 31956ee7f082d3a662becd0ed2ed896ba21cae64[m
Author: Andrew Arnott <andrewarnott@gmail.com>
Date:   Wed Jan 6 17:52:24 2016 -0800

    Fix spelling error in doc

[33mcommit 94baa896497f3292c2dfeb1b7399b3cf7a3cd619[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Wed Jan 6 14:33:39 2016 -0800

    Add version information to RuntimeInformation.FrameworkDescription.

[33mcommit e32d2227fd846836ff132ed1767c82c23f7d7fca[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Jan 6 16:57:13 2016 -0800

    fixed comment in Exception message for MetadataAggregator.cs

[33mcommit 4392638bb49806ebe445985c5a26ef6f5f37758f[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Jan 6 16:04:19 2016 -0800

    Removed "if" equivalent to corresponding "else"

[33mcommit e47b871e46a6ca22e76e73cf246491784cfc25fc[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Jan 6 16:03:11 2016 -0800

    Removed "else" statement that was equivalent to the corresponding "if"

[33mcommit ee62030f266895205cefb6544ee714833695677f[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Jan 6 16:00:38 2016 -0800

    Removed check to see if a uint is positive

[33mcommit 2ffca15c3f879802dc4793722a3b61ef4e0331ff[m
Merge: 96dd94e 119b562
Author: Venkatraman Mahalingam <vemaha@microsoft.com>
Date:   Wed Jan 6 16:48:03 2016 -0800

    Merge pull request #4996 from venkat-raman251/sys.threading.accessControl
    
    Sys.threading.access control

[33mcommit a74a3e40e0948c22b25de6b88ddcdb714d97499b[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Fri Dec 4 15:19:48 2015 -0800

    Porting System.IO.FileSystem.AccessControl

[33mcommit d05f8c72bc0260c1d723a058d3f2c9ff341e26d1[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Wed Jan 6 16:13:44 2016 -0800

    Avoid unnecessary delegate allocations
    
    There are 9 up-front delegate allocations (2 for TextReader and 7 for
    TextWriter) that are unnecessary in most cases as most
    TextReader/TextWriter subclasses override the base async methods where
    such delegates are used. Instead, let the compiler allocate and cache
    such delegates lazily, only in the rare cases when the delegates are
    actually used.

[33mcommit 40f5af579cf58bca57b944a33591b1543ace44b5[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Jan 6 15:33:51 2016 -0800

    Removed impossible branch in MetadataAggregator
    
    Also added a Debug statement to cover what looked to be the original intent of the impossible branch

[33mcommit 8cbe097afa063173bd38d0b6fa81d427e9d25c33[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Jan 5 10:05:51 2016 -0600

    Adding un-prefixed methods temporarily to keep tests running in CI.

[33mcommit 7248cb5204b18b334158ff53a5df980067e5c238[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Jan 6 15:56:59 2016 -0800

    Only use ECMA key on Windows for System.IO.Compression
    
    There is an issue signing with the ECMA key on non-Windows platforms. Other places in our codebase are not overriding this property if it is explicitly set to 'false' as it is in x-plat builds.
    
    This is also a duplicate property. It is set correctly a few lines below the one I have deleted.

[33mcommit 88d2c2e3a89bd61638653d11fa671394205d36bc[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Wed Jan 6 15:51:59 2016 -0800

    Use a cached byte[] preamble for Encoding.UTF8
    
    Avoids allocations associated with GetPreamble() for the default and
    commonly used Encoding.UTF8 encoding.

[33mcommit 96dd94e3637f105ddc84442ed22024851c32bd91[m
Merge: d63a163 9a262b1
Author: Venkatraman Mahalingam <vemaha@microsoft.com>
Date:   Wed Jan 6 15:35:16 2016 -0800

    Merge pull request #5208 from venkat-raman251/sys.run.handles
    
    Changes to System.Runtime.Handles

[33mcommit 9e97e6ae90088561511e5a2e6e880d5039130dbe[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Jan 6 15:23:25 2016 -0800

    Removed unnecessary assignment in XMlSerializationWriter.cs

[33mcommit 0382cb4c1e70213fb9bb29a7ffaaf98eb62c03d7[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Jan 6 15:21:25 2016 -0800

    Removed unused assignment in SQLDecimal.cs

[33mcommit 5ab440099f2cbe0036fab8cee5ae99718a6c8835[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Jan 6 15:17:53 2016 -0800

    Removed unnecessar double assignment in WebSocketException.cs

[33mcommit 992d8dd72026e5df1222fcfc63373d0b256c8309[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Jan 6 15:08:19 2016 -0800

    SetSequence was checking for null after using a variable

[33mcommit d63a1638fed173fcbc0a6814a97277d959ae3274[m
Merge: 0ce996c 8a9cc67
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Wed Jan 6 15:08:02 2016 -0800

    Merge pull request #5018 from tmat/WriterUtils
    
    A few small public API changes

[33mcommit 4c671292dcb11241f07a093a677877ace11c705c[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Wed Jan 6 15:05:12 2016 -0800

    Add regression test for dotnet/coreclr#2531
    
    Ensure that en-US-POSIX does not get Turkish casing behavior.

[33mcommit 5eababdbe8b3abd86597ca7e1e8e669753915db1[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Jan 6 14:48:39 2016 -0800

    Update to buildtools 144

[33mcommit 9a262b1965b72db185141be7afebf8a42ab44318[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Wed Jan 6 13:47:24 2016 -0800

    changes to System.Runtime.Handles

[33mcommit 0ce996cf1583bba3f10e254841d3af88c40c5e55[m
Merge: f870bc7 dbf0448
Author: Khoa Dang <khdang@users.noreply.github.com>
Date:   Wed Jan 6 13:45:05 2016 -0800

    Merge pull request #5193 from khdang/fix-xmlserializer-readbyte-differently
    
    Fix behavior difference when XmlSerializer deserializes out-of-range byte values

[33mcommit 1684decd5332f94b998f2e2e06b81bb43da8de1b[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Wed Jan 6 13:13:17 2016 -0800

    Re-enable tests that were blocked on #3610.

[33mcommit f32940deb1818e90d4ce704637300249569e7712[m
Author: Eric Eilebrecht <ericeil@hotmail.com>
Date:   Wed Jan 6 13:12:38 2016 -0800

    When freeing GC handles, zero-out the cached pointers to pinned objects as well.
    
    Various code paths have fast paths to skip GC handle allocation if these cached pointers appear to be valid, so we have to maintain the invariant that if the GC handles are free'd the cached pointers are invalidated.
    
    Fixes #3610.

[33mcommit f870bc745188af7b46d0091ad44649bf8fc57a18[m
Merge: 462e113 4c33448
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Jan 6 12:46:40 2016 -0800

    Merge pull request #3907 from JonHanna/expressions_block_remove_unused
    
    Remove unused code from Block Expressions

[33mcommit 462e113f8ab81cd5ca48dedae7ff4137709e9876[m
Merge: 35db69c bc19d6d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 6 15:37:59 2016 -0500

    Merge pull request #5192 from bartonjs/crypto_algorithms_package
    
    Move S.S.Cryptography.Algorithms package building to Open

[33mcommit 35db69cf7e4e65bafd62d5da6d3530516eede301[m
Merge: 3ee6c06 7486c70
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 6 15:37:42 2016 -0500

    Merge pull request #5201 from pallavit/Console_CursorApis
    
    Expose Console.CursorLeft and Console.CursorTop

[33mcommit 7b72b53f2209971f21eb306f32f59da3fbd4fdb4[m
Author: DmitryGaravsky <garavskydmitry@gmail.com>
Date:   Tue Oct 13 01:31:47 2015 +0300

    Fix CustomValidationAttribute to properly implement RequiresValidationContext property
    
    The CustomValidationAttribute does not override the RequiresValidationContext property so this property always returns false due to base implementation despite of the fact that the Method parameter can actually point to the method that requires validation context as a second parameter.
    
    MS Connect link:
    https://connect.microsoft.com/VisualStudio/feedback/details/1820586/system-componentmodel-dataannotations-customvalidationattribute-does-not-correctly-implement-the-requiresvalidationcontext-property

[33mcommit 3ee6c06380497cc9dfa7600391faa973a60897e4[m
Merge: 97be79a 98023a7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 6 15:08:19 2016 -0500

    Merge pull request #4712 from justinvp/queue_ctor
    
    Optimize Queue<T>'s constructor

[33mcommit 97be79aa9cabf387b868fc6687f6d8dff9e046ec[m
Merge: 741f7ee 8b09554
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 6 15:07:21 2016 -0500

    Merge pull request #4962 from alexanderkozlenko/pr_spd_dc
    
    Remove dead code from System.Private.DataContractSerialization

[33mcommit 021914cb14c3b9975e68b00b9dfb42f61fa9967c[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Jan 5 15:19:33 2016 -0800

    Format source code in CustomReflectionContext.cs
    
    Removed unused usings, removed global:: prefix from usings, simplified type names to language alias names

[33mcommit 61bb5937c869e276734f71974e0ad14f5b59e288[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Jan 5 15:18:26 2016 -0800

    Add netcore50 source project for System.Reflection.Context

[33mcommit 119b5624e5b7ddc67f4d0fc0443b0dd8389c1d8a[m
Merge: c270026 741f7ee
Author: Venkatraman Mahalingam <vemaha@microsoft.com>
Date:   Wed Jan 6 11:32:41 2016 -0800

    Merge branch 'master' of https://github.com/dotnet/corefx into sys.threading.accessControl

[33mcommit c2700260fa9951ef4f9c145f5f6813a119a63cbc[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Wed Jan 6 11:32:29 2016 -0800

    Changes to System.Threading.AccessControl

[33mcommit 7486c70531fc6484bf74f3f657044da93adb1b51[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Wed Jan 6 11:16:00 2016 -0800

    Incorporate feedback comments

[33mcommit dbf0448f570d792c1af2f4e6069b266769631708[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Wed Jan 6 10:55:42 2016 -0800

    Move XmlSerializer negative test into separated test method

[33mcommit 53b8d6e724aa4eb0cbbf600243024aff04cbaf87[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Wed Jan 6 10:27:05 2016 -0800

    Expose Console.CursorLeft and Console.CursorTop

[33mcommit e1362e74bee6a12a28f60d65d65d05fed886856c[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Jan 5 15:37:59 2016 -0600

    Unique names for System.Security.Cryptography.Native.* exports
    
    The methods exported from System.Security.Cryptography.Native shim have short generic names. Making them more unique by adding "CryptoNative_" prefix to each method name.

[33mcommit 741f7eeb0563d852c54803dfad73efd70fdd4c3c[m
Merge: fc0e964 10e0eee
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 6 11:18:21 2016 -0500

    Merge pull request #5181 from khdang/fix-serialization-datacontract-overflow
    
    Fix serialization data contract overflow when reading object concurrently

[33mcommit bc19d6df360348baa25b6a6b01a18850df01f2ee[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Jan 4 10:26:08 2016 -0800

    Add reflection dependencies for S.S.C.Algorithms

[33mcommit 7655d2280f047e4f238b69b677e607d64120eea0[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Dec 31 14:11:02 2015 -0800

    Move the S.S.C.Algorithms packaging to open

[33mcommit fc0e964220ed704023ff737569585a58fc22ddde[m
Merge: 39a0f5d 8dc4632
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 6 10:14:58 2016 -0500

    Merge pull request #5198 from bartonjs/rsaopenssl_default_keysize
    
    Change the default keysize of RSAOpenSsl to 2048

[33mcommit 39a0f5dcb1cb61c09f553fdad4f3a0bc8a803aaa[m
Merge: e968d76 c26a8fe
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jan 6 10:14:27 2016 -0500

    Merge pull request #5197 from dotnet/stephentoub-patch-1
    
    Several fixes to badges in README.md

[33mcommit e968d76626e9342607a05e784b1a695f998d316e[m
Merge: 7855664 43b2884
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Tue Jan 5 20:47:39 2016 -0800

    Merge pull request #5184 from mellinoe/system.io.netcore50
    
    Add netcore50 configuration for System.IO

[33mcommit 8dc4632ab05c2f88ecc4b0f116272d7b20992beb[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Jan 5 18:41:47 2016 -0800

    Change the default keysize of RSAOpenSsl to 2048
    
    The original 1024 was to match RSACryptoServiceProvider, but with RSACng now being the preferred implementation on Windows we're upping the Unix version to match.

[33mcommit c26a8fe9ab98642861cfc1364507b6af20da023a[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 5 21:42:33 2016 -0500

    Several fixes to badges in README.md
    
    - The windows build and test badges were pointing to invalid URLs, resulting in 404s when clicked.
    - Move Win10 badge up so that the order is 10, 8, 7 and matches the title

[33mcommit 62c3b6fce27077f6dbd82fc2dbb96b8f1e3ca11c[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Jan 6 01:14:18 2016 +0000

    Optimise OrderedEnumerable operations.
    
    Fixes #2400
    
    If you only want the first or last element of an ordered enumerable, you do
    not need to O‎(n log n) (worse case, O(n²) but rare) operation of sorting
    the entire set in O(n) space, but can instead to an O(n) retrieval of just
    that element in O(1) space.
    
    Reduce cost of subseting ordered enumerables.
    
    OrderedEnumerable Skip, Take and combinations thereof reduced from O(n log n)
    to O(n + k log k) where k is the number of elements taken/not skipped.
    
    ElementAt and ElementAtOrDefault reduced from O(n log n) to O(n) (worse case
    is still O(n²) in rare cases, but that was previously the case).

[33mcommit 4c334481fe1180cd4d79d68c773e430f9f503af8[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Jan 5 23:40:01 2016 +0000

    Remove VariableCount
    
    The declared form is never used, and the override only used in an assertion
    that can be replaced with a direct call to Variables.Count.
    
    Don't have separate implementation for IEnumerable.GetEnumerator()
    
    Just defering to IEnumerable<Expression>.GetEnumerator() results in one less
    hidden type and removes risk of a change causing the two methods to behave
    differently.

[33mcommit 21321ad1773ed01cdcd496014eb60ef0ddb8c7e5[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Dec 29 23:38:18 2015 +0000

    Improve memory use of HashSet constructed from HashSet.
    
    If a HashSet is constructed from an existing HashSet then use the current
    approach if the count is above a particular ratio to the capacity, but if
    it is below that ratio (small enough that if created just from those items
    and then added to the next resize would still not reach that capacity) use
    an optimised version of AddIfNotPresent to add each item.
    
    Fixes #5141
    
    Use count to short-circuit during HashSet ctor
    
    Since we have to examine otherAsHashSet._count anyway, and since
    the behaviour of short-circuiting initialising _buckets and
    _slots is valid in that case, use that as the test to do so, and
    save a little bit of work.
    
    Remove unreachable branch and add test for TrimExcess in ctor.

[33mcommit 7855664eb5d8a0b35ebc2eef0a6e7bdbe1838df4[m
Merge: 3474403 3cfad6d
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Tue Jan 5 15:27:02 2016 -0800

    Merge pull request #5194 from mmitche/add-on-demand-triggers
    
    Add on-demand github pr triggers for OS's that don't currently have t…

[33mcommit 3cfad6d877d6a3a779ee967ca9fae7ef67900a75[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Tue Jan 5 15:13:26 2016 -0800

    Add on-demand github pr triggers for OS's that don't currently have them enabled by default

[33mcommit f1b3c2b83294bd2657b1e7d4cb8956df0308748c[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Tue Jan 5 15:07:47 2016 -0800

    Fix behavior difference with Desktop when XmlSerializer deserializes out-of-range values

[33mcommit 3370bc2442b9d43d29a1e6ea0f2a3a3c2e04e532[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Oct 16 12:44:09 2015 +0100

    Consistent exception on empty block expression
    
    Fixes #3882
    
    Fixes #3908

[33mcommit c2645e963ad4432b1ab0cfe0199920a98cc81989[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Oct 16 12:54:14 2015 +0100

    Correct ArgumentOutOfRangeException on out of range block expression index.
    
    Fixes #3881
    
    # Conflicts:
    #	src/System.Linq.Expressions/tests/Block/BlockTests.cs

[33mcommit 6a875fc06ad9a63bf4ec87fc5ca672d77b112fb4[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Jan 5 14:11:53 2016 -0600

    Unique names for System.Net.Http.Native.* exports
    
    The methods exported from System.Net.Http.Native.* shims have short generic names. Making them more unique by adding "HttpNative_" prefix to each method name.

[33mcommit 3474403142a1de9902507d3dfe492eaf070e3cb5[m
Merge: 88b8246 0868049
Author: VSadov <vsadov@microsoft.com>
Date:   Tue Jan 5 14:05:16 2016 -0800

    Merge pull request #3955 from JonHanna/goto_tests
    
    Add tests for Goto expressions.

[33mcommit 88b8246edf80b7cc2b5dad6bdf216228f8b784db[m
Merge: 5b58f31 5f1280b
Author: VSadov <vsadov@microsoft.com>
Date:   Tue Jan 5 14:03:02 2016 -0800

    Merge pull request #3900 from JonHanna/expressions_block_tests
    
    Add block expression tests.

[33mcommit 5b58f31ead3bd5b929278608a918e630af0f5df2[m
Merge: 26834d7 11408c1
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Jan 5 15:41:52 2016 -0600

    Merge pull request #5180 from eerhardt/RefactorAes
    
    Refactor the Aes encryption implementation

[33mcommit 43b28844bafbc23f9b859cabc2b7be636300b099[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Jan 5 11:18:53 2016 -0800

    Normalize braces/blocks, replace Contract calls with Debug

[33mcommit 51b5c52f8e3da11dc08508cdbdce17d0c5de656d[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Jan 4 15:29:58 2016 -0800

    Clean and format ported System.IO code

[33mcommit f3071a723ca1b6080ca8dbf25251a04057acc320[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Jan 4 13:12:00 2016 -0800

    netcore50 configuration for System.IO, consolidate projects

[33mcommit 26834d7470e8ceaad3d6587bbd038c9fbf660ef7[m
Merge: 6baf01d 4b87303
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Jan 5 10:08:24 2016 -0800

    Merge pull request #5174 from mellinoe/diagnostics.tools.netcore50
    
    Add netcore50 configuration to System.Diagnostics.Tools

[33mcommit 6baf01d0f424d3b8a7bed14292453ab351123a2c[m
Merge: 17b3ff7 f25c2f3
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Jan 5 09:21:52 2016 -0800

    Merge pull request #5176 from mellinoe/system.dynamic.runtime.netcore50
    
    Add .NET Native builds for Dynamic.Runtime, consolidate projects

[33mcommit 1d1ba6d5caa922bf8ccaa3b8891bfe8a30adef03[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Dec 29 13:33:53 2015 +0000

    Don't throw when create HashSet from fresh HasSet source
    Fixes #5130
    
    Remove unnecessary assignment.
    
    Value of _version doesn't matter until after the first call to
    GetEnumerator(), so assigning to it in a constructor is a waste.

[33mcommit 17b3ff7e54ff64fabebd2e29286a846ac6440491[m
Merge: 54ee206 ea7a503
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jan 5 07:56:55 2016 -0500

    Merge pull request #5177 from mellinoe/system.io.compression.zipfile.version
    
    Fix ZipFile version number, consolidate project file

[33mcommit 54ee206df32fcccfdbf61b9430107c04d2b74187[m
Merge: 9f0e25f 122042c
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Mon Jan 4 17:28:43 2016 -0800

    Merge pull request #5169 from weshaggard/FixPackageBuilds
    
    Filter package builds to OSEnviroment when building from the root

[33mcommit 242f5056334eed33974feaaaff9dcbbf81672b78[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Jan 4 18:21:47 2016 -0600

    Unique names for System.Native.* exports
    
    The methods exported from System.Native.* shims have short generic names, like Close or Stat. Making them more unique by adding "SystemNative_" prefix to each method name.

[33mcommit b565c805f626bc020744f0241ec64a9c337b0f86[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Jan 4 14:54:42 2016 -0800

    Update buildtools to version 142

[33mcommit 11408c1eea4bd3faa8bee59ad63eab986d59f213[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Jan 4 15:18:04 2016 -0600

    Refactor the Aes encryption implementation to reuse the same design as the TripleDes implementation.
    
    This cuts down on a lot of duplicate code, since we can reuse the UniversalCryptoTransform classes.

[33mcommit 9f0e25f8ce7259c8d99f6ffaf6e2fbb573487bc3[m
Merge: da7d029 cabe44c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 4 16:51:46 2016 -0500

    Merge pull request #5172 from stephentoub/remove_safefilehandle_todo
    
    Remove stale TODO in SafeFileHandle test

[33mcommit 10e0eee6aefb0e2a11bb6dbe9fa7f9c7ac4e6417[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Mon Jan 4 13:47:26 2016 -0800

    Fix serialization data contract overflow when reading object concurrently

[33mcommit f25c2f3f5189d748c8ab81ad472096a049eafcab[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Jan 4 12:05:48 2016 -0800

    Add .NET Native builds for Dynamic.Runtime, consolidate projects

[33mcommit 4b8730318e583613fd57cd1834a3e7ac902cd3a1[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Jan 4 11:18:18 2016 -0800

    Add netcore50 configuration to System.Diagnostics.Tools

[33mcommit ea7a5032f0801b3ae464fcc1381ee5e132d5dc27[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Jan 4 12:26:50 2016 -0800

    Fix ZipFile version number, consolidate project file

[33mcommit da7d029bf814052cbff6d3b671764acd9c5b7e34[m
Merge: b0a5ba7 70331aa
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 4 16:09:36 2016 -0500

    Merge pull request #5171 from mellinoe/readonly-vector-count
    
    Make backing field of Vector.Count readonly

[33mcommit b0a5ba709cdc824e3e2e189385d3f37d6575e9a4[m
Merge: 67cd5eb 84c0dbb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 4 16:09:28 2016 -0500

    Merge pull request #5170 from eerhardt/RemoveWorkInProgressString
    
    Remove unused WorkInProgress resource string.

[33mcommit 44c8f41f26c1712280fcc82bc8d28be799b4fe92[m
Author: vsadov <vsadov@microsoft.com>
Date:   Mon Jan 4 12:40:02 2016 -0800

    Removing references to nonpublic methods from rd.xml
    
    System.Linq.Expressions.Expression.CreateLambda and
    System.Linq.Expressions.Expression.ParameterIsAssignable
    
    are not public and having them in rd.xml only results in build warnings.
    
    Fixes #5088

[33mcommit cabe44c6dd6ebc405c995e3a89a782e871aae7dd[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Jan 4 13:50:06 2016 -0500

    Remove stale TODO in SafeFileHandle test

[33mcommit 70331aaff856fc784db90e245ee6b66dc996175e[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Jan 4 10:42:02 2016 -0800

    Make backing field of Vector.Count readonly

[33mcommit 84c0dbb4fc5c14e254b345ba4bcded526425f006[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Jan 4 12:39:46 2016 -0600

    Remove unused WorkInProgress resource string.

[33mcommit 122042cba8dea5b69ed538080100fdc716ce9bab[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Jan 4 10:26:28 2016 -0800

    Filter package builds to OSEnviroment when building from the root
    
    We are already filtering the library builds to OSEnviroment so we
    need to similarly filiter the package builds.

[33mcommit 67cd5eb5025ddfecdaa0c36b8c82165fc34c818e[m
Merge: 17eede3 0ed6206
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 4 13:22:25 2016 -0500

    Merge pull request #5133 from bartonjs/unix_x509_simplifystores
    
    Remove redundant OpenSslX509StoreProvider

[33mcommit 17eede393c5e75fa58ecab5b093b58f0909a1857[m
Merge: 8aa0ebc 759f4b1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 4 13:22:07 2016 -0500

    Merge pull request #5128 from speshuric/fix/serialize
    
    Restored fixes in tests of DateTime serialization

[33mcommit 8aa0ebcb2a6d0a9fc5c320faa4a6e42115dbf095[m
Merge: e9f2377 0668add
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 4 13:21:03 2016 -0500

    Merge pull request #5166 from jashook/test_enable
    
    Removing coreclr active issue 2315.

[33mcommit e9f23770ec5396820ebc6220e261e5f930e799be[m
Merge: ea7b3a3 7d775ac
Author: VSadov <vsadov@microsoft.com>
Date:   Mon Jan 4 10:04:12 2016 -0800

    Merge pull request #4551 from scalablecory/linq-skip-optimization
    
    Optimize Enumerable.Skip() for IList<> parameter

[33mcommit ea7b3a3bebf9d25da5968856f6e60637985ac4d0[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 4 11:43:50 2016 -0500

    Fix copy/paste typo in README.md badges
    
    Win10 badges were labeled as Win8

[33mcommit 5856dee336edf35660d639fb0ac0f04717e62ff8[m
Merge: ab48b6a ea6d8cc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 4 11:37:52 2016 -0500

    Merge pull request #5108 from bartonjs/X500Name_DecodeEmptyValue
    
    Correctly decode an empty value RDN on Unix.

[33mcommit ab48b6ace61c99b3939a79c77d66fd003432d1c7[m
Merge: 83a8a6b 8cc2b69
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 4 11:03:37 2016 -0500

    Merge pull request #5146 from justinvp/observablecollection_eventargscache
    
    ObservableCollection<T>: Reuse immutable EventArgs objects

[33mcommit 83a8a6b7888f7bc69c30d48625818fc187707299[m
Merge: 39d0092 37afae5
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Mon Jan 4 07:51:07 2016 -0800

    Merge pull request #5158 from bartonjs/unsupported_curve_tests
    
    Make Unix GetECDsaPublicKey throw CryptographicException on unknown curve.

[33mcommit 39d009272c492c6494497c4dff05dd22370ec0f3[m
Merge: eeed5f2 89ce11c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 4 10:50:58 2016 -0500

    Merge pull request #5075 from ellismg/update-badges
    
    Update job and badge links

[33mcommit eeed5f2ef3283cfe55bf210de0fbfefb5a2817b4[m
Merge: 5bd2ad0 84e3e46
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 4 10:46:25 2016 -0500

    Merge pull request #5084 from bartonjs/DerEncoder_WrongIA5Value
    
    Correct DerSequenceReader.DerTag.IA5String value to 0x16.

[33mcommit 0668addf374fd11eb642f6d0dd5237ef39716942[m
Author: Jarret Shook <jarret_shook@outlook.com>
Date:   Mon Jan 4 07:29:49 2016 -0800

    Removing coreclr active issue 2315.
    
    Only removes issue 2315 from the two linq tests that were disabled.

[33mcommit 5bd2ad0968d191af010d0ff4b77e8570d016e39e[m
Merge: a507ab1 cd8e6a8
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 4 10:14:19 2016 -0500

    Merge pull request #5123 from bartonjs/remove_dsaparameters
    
    Disable building DSAParameters in S.S.C.Algorithms

[33mcommit a507ab121d54f56ba8f2798359a9af242e6ef837[m
Merge: 34a4295 e83a7e2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 4 10:04:39 2016 -0500

    Merge pull request #5129 from bartonjs/unix_x509_pnse_win32api
    
    Make Windows-Specific cert properties throw PNSE on Unix.

[33mcommit 34a4295f15ace1e2fe16819fc8eee988bd651063[m
Merge: 69dc88b b0678c1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 4 10:03:29 2016 -0500

    Merge pull request #5132 from bartonjs/x509_deadcode
    
    Remove dead method PfxToCollection.

[33mcommit 69dc88ba3071590b547db658246dccee5b13a1ae[m
Merge: 88895d6 3d8569f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 4 10:01:55 2016 -0500

    Merge pull request #5135 from JonHanna/while_to_if
    
    Replace while with if when broken after single loop.

[33mcommit 88895d643c9e649809b4e159b4fabf12f4fc7ad9[m
Merge: 0a5026b 34ad6f7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 4 10:00:06 2016 -0500

    Merge pull request #5163 from weshaggard/SwitchCommonDebugVisibility
    
    Switch common Debug visibility to use partial class instead of #ifdef

[33mcommit 0a5026b4085192e9e55c0d4119dd2dc44e6a2b8e[m
Merge: 0075494 4e7c80b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 4 09:59:22 2016 -0500

    Merge pull request #5145 from bartonjs/osx_VerifyCrlCache_test
    
    Make the VerifyCrlCache test resilient to not trusting the root cert.

[33mcommit 0075494f8fede3b29667c113f485dd7fc63cf0c1[m
Merge: 86a062a 41a1e8b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jan 4 09:57:58 2016 -0500

    Merge pull request #5143 from justinvp/notifycollectionchanged_readonlylist
    
    NotifyCollectionChangedEventArgs: seal internal ReadOnlyList

[33mcommit 34ad6f76b0e0be2eb4cee5fa5d357817171e539c[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sun Jan 3 21:07:32 2016 -0800

    Switch common Debug visibility to use partial class instead of #ifdef

[33mcommit 86a062a0ca68a98cd58a2d52a66ff0df4898c98a[m
Merge: f711643 0f65fa4
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Sun Jan 3 18:14:17 2016 -0800

    Merge pull request #5125 from weshaggard/SupportAnyOS
    
    Support for AnyOS

[33mcommit f71164395fe1c90c9dff3ba1fea4a83cde69ea9d[m
Merge: 1e8a5f2 223542e
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Sun Jan 3 00:04:31 2016 -0800

    Merge pull request #5161 from Clockwork-Muse/3018_RemoveExtraReferences
    
    Remove extra references

[33mcommit 0f65fa42dd7e3926d74911d688bd1607a4cc49ce[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Wed Dec 23 17:45:57 2015 -0800

    Add GenerateBuild.ps1 file which generates builds and csproj default configurations
    
    Script used to manaully update/generate builds files based on configurations defined
    in project files.
    
    The script also has some other clean-up stuff for project updates.

[33mcommit 95efe37475916016a5fc6ee6f0ba584d990c4196[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Dec 21 19:39:45 2015 -0800

    Update .builds files to include OSGroups
    
    This these .builds files were updated and generated from a script
    based on the configurations defined in the matching csproj files.
    
    This updates the builds files to specify OSGroup and TargetGroup
    as metadata instead of using AdditionalProperties and also sorts them by
    TargetGroup followed by OSGroup.

[33mcommit 9e1da13cf6d5ff4b37b1867beb3411a2fe61da6a[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Dec 21 19:40:50 2015 -0800

    Update project files adding default configurations
    
    This add a default configuration before the Import of dirs.props
    for any projects that don't have Debug as the default configuration.
    
    Removed Configuration and Platform properties set after dirs.props
    as they would have no affect and just cause confusion.
    
    Removed OutputType=Library property as it isn't necessary.

[33mcommit 7146f1be15bbe9b82949cb71b3f1d3548a10fd5e[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Dec 21 19:49:06 2015 -0800

    Add support for building and filtering via OSGroup in .builds files
    
    After this change if you build a .builds file it will all projects
    defined in it. However if you specify OSGroup or FilterOSGroup as a property
    it will only build the projects that are for that OSGroup or AnyOS.
    
    Change the default OSGroup to AnyOS instead of Windows_NT.
    
    By default if you build from the root it will only filter the projects to
    just the OS that you are building on (including anything that is AnyOS).
    
    If you want to build all projects for all OS's from the root pass
    /p:BuildAllOSGroups=true property from the command line.
    
    Includes an update to project-guidelines.md and windows-instructions.md docs
    with information on the changes.
    
    [MERGE with support commit]

[33mcommit 223542e494fb32feb8299acb565098322040409c[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Sun Jan 3 12:47:34 2016 +0900

    Remove extra references

[33mcommit 37afae5d55f8025e991c0cdd9088a9a891f75aac[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Dec 31 15:34:23 2015 -0800

    Make Unix GetECDsaPublicKey throw CryptographicException on unknown curve.
    
    The return value from GetX509EvpPublicKey was not validated, so ECDsaOpenSsl threw an ArgumentException for the invalid handle.
    
    By validating it here, the exception changes from
    "System.ArgumentException : Cannot open an invalid handle."
    to
    "Interop+Crypto+OpenSslCryptographicException : error:0B07707D:x509 certificate routines:X509_PUBKEY_get:public key decode error"
    
    which is a lot closer to the Windows version of
    "Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : Unknown cryptographic algorithm"

[33mcommit e48f6bda60018b5c3fdeefd446a67e8488b295d0[m
Author: Michael Aird <michael.aird@gmail.com>
Date:   Thu Dec 31 11:06:05 2015 -0500

    Removing incorrect error numbers
    
    Error codes 40020, 40143, 40166, and 40540 are embedded within the message of 40197 and not SQL error numbers to retry on.

[33mcommit 1e8a5f2e2caebc78cc4c53ff89ec0cf72c6428df[m
Merge: e97d98a 1c68a40
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Dec 30 18:04:13 2015 -0800

    Merge pull request #5150 from ianhays/sortedsetconstructor
    
    Fix SortedSet constructors to use default Comparer

[33mcommit 1c68a40333b8e417db5b413f1ce33b10c64499cf[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Dec 30 13:38:34 2015 -0800

    Replace SortedSet _comparer field access with local variable

[33mcommit e97d98add0cce078a4013c8334ff7c40a90b6708[m
Merge: b6b6b62 eafb7eb
Author: David Shulman <david.shulman@microsoft.com>
Date:   Wed Dec 30 13:27:11 2015 -0500

    Merge pull request #5138 from JonHanna/fix_5137
    
    Implement IEquatable in CredentialKey and CredentialHostKey

[33mcommit b6b6b62258375b8ac95b3f3959610eeba7df850a[m
Merge: 0ea4819 2fa57bf
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Tue Dec 29 20:37:07 2015 -0800

    Merge pull request #5148 from weshaggard/PortSystemPrivteURi
    
    Port System.Private.Uri project configurations

[33mcommit 2fa57bf1e9b983339d0ec34356c5ac8ed0370561[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Tue Dec 29 13:30:45 2015 -0800

    Port System.Private.Uri project configurations

[33mcommit bfb71506b17fe29112a60c95f12832c0fea3e0a0[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Tue Dec 29 19:03:02 2015 -0800

    Fix SortedSet constructors to use default Comparer

[33mcommit 8cc2b699b08e3b7a50148f56f7c2f2bc85fde25f[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Tue Dec 29 16:00:25 2015 -0800

    ObservableCollection: Reuse immutable EventArgs objects
    
    Instead of always allocating new instances of
    PropertyChangedEventArgs for the Count and Indexer properties and
    NotifyCollectionChangedEventArgs for
    NotifyCollectionChangedAction.Reset, reuse cached instances.

[33mcommit 0ea48197647bc97c1723193a91ba7767d8838884[m
Merge: cd5b2b7 ac77365
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Tue Dec 29 15:34:20 2015 -0800

    Merge pull request #5142 from weshaggard/SwitchBuildScriptsToCofigurationGroup
    
    Change Configuration to ConfigurationGroup in our build and test scripts

[33mcommit cd5b2b79e62a66bc961d45cc589b4ee9801f2c3d[m
Merge: cc8047e 4db0e71
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Tue Dec 29 14:22:55 2015 -0800

    Merge pull request #5139 from bartonjs/sslstream_use_x509certificate2
    
    Make SslStream::RemoteCertificate return an X509Certificate2 object.

[33mcommit 4e7c80bb1339326947a29bf509c5c9132d75d074[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Dec 29 14:20:53 2015 -0800

    Make the VerifyCrlCache test resilient to not trusting the root cert.
    
    The default OpenSSL root store on OS X has no certificates in it, causing the VerifyCrlCache test to fail the precondition of a valid chain.  In order to fix that:
    * AllowUnknownCertificateAuthority is asserted
    * Check that at most one error happened in the precondition test, and that if present it's UntrustedRoot
    * All of the error count tests are changed to be relative to the precondition count.
    
    Further resilience could be attained by changing the later tests to accept the RevocationStatusUnknown checks to be allowed at either position, but the list is currently built in leaf-to-root order, so the checks are stable.
    
    Verified on both Ubuntu (trusts the root) and OS X (doesn't).

[33mcommit 41a1e8b61456644cc6ca58654e06f8a6ba9039f9[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Tue Dec 29 14:06:44 2015 -0800

    NotifyCollectionChangedEventArgs: seal internal ReadOnlyList
    
    The internal ReadOnlyList used by NotifyCollectionChangedEventArgs
    has all virtual members that don't need to be virtual. This commit
    makes ReadOnlyList sealed and includes some minor cleanup (parameter
    names to match the interfaces, Debug.Assert, and Object -> object).

[33mcommit ac77365e1c5ca65993cd20d19969ade29173bc7b[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sat Dec 26 16:40:50 2015 -0800

    Change Configuration to ConfigurationGroup in our build and test scripts

[33mcommit cc8047e7d38a3e90dfa2bdb39d7c02accd7bbace[m
Merge: 03f56e3 1cd8bf6
Author: Guillermo Rangel <josra@microsoft.com>
Date:   Tue Dec 29 13:32:19 2015 -0800

    Merge pull request #5101 from josguil/LoggingSystemNet
    
    System.Net EventSource Logging

[33mcommit 03f56e3f5a52d90fc6aaa80e60dba0684fdb4f4f[m
Merge: 9d64c06 d8d1eb3
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Tue Dec 29 13:20:17 2015 -0800

    Merge pull request #5122 from bartonjs/rsa_deadcode
    
    Remove dead code from RSA

[33mcommit 1cd8bf635d4b9a6d8a7d1e25cd320814c993f38b[m
Author: Guillermo Rangel <josra@microsoft.com>
Date:   Tue Dec 22 19:58:25 2015 -0800

    System.Net EventSource Logging
    
    Adding EventSources to substitute the previous logging model using
    TraceSources.
    
    In this PR 4 event sources are added:
    
    -NetEventSource
    -SocketsEventSource
    -HttpEventSource
    -SecurityEventSource
    
    Event methods for NetEventSource, SocketsEventSource and HttpEventSource
    are
    fully added. SecurityEventSource has only a few of
    the new event methods implemented.
    Changes in production code are done to match this new implementation.
    (Only changes for
    events in Sockets and Http are done in this iteration).
    
    Adding missing reference to LoggingHash
    
    Missing Reference in Security csproj
    
    Missing reference in NetworkInformation
    
    Adding a reference and adding a missing new line.
    
    Adding references and readonly modifier.
    
    Adding another missing reference.
    Adding some missing blank lines and making readonly the s_log in the
    EventSources.
    
    Completing SecurityEventSource
    
    Adding missing all the security events that will substitute PrintInfo
    calls.
    
    Doing changes in code to reflect this.
    
    Transforming SecurityEventSource into a Partial class
    
    Some of the events were Windows specific, because of the enums they were
    using. Those events are now in a partial class that is included when
    those enums are defined.
    
    Moving events to partial SecurityEventSource class
    
    Some more events using Interop.SecurityStatus are moved into the partial
    windows specific class.
    
    Also, a missed non event header is added for Associate method in
    HttpEventSource.
    
    Deleting Logging reference to instead use LoggingHash
    
    Addressing some of the PR feedback
    
    Adding the Issue number to TODO for localization, and using BlockCopy
    instead of a Loop to copy array. Also, correctly passing partialBuffer
    instead of Buffer to the DumpArrayAsync method.

[33mcommit 9d64c069fc429e99107c818f6f2ae7a74eb60c32[m
Merge: 83227b7 af7ced3
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Tue Dec 29 12:06:37 2015 -0800

    Merge pull request #5119 from justinvp/list_reverse
    
    Port List.Reverse changes from CoreCLR

[33mcommit 83227b7b03c9d2d99f61c9f8b9ebce09288638a9[m
Merge: 04e93f7 3536406
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Tue Dec 29 11:38:31 2015 -0800

    Merge pull request #4933 from venkat-raman251/master
    
    Porting System.Security.Claims

[33mcommit 4db0e714272a195fc29d6f904ad6bb3422e94e43[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Dec 29 11:34:08 2015 -0800

    Make SslStream::RemoteCertificate return an X509Certificate2 object.
    
    This is the only place in all of corefx (outside of the X509Certificates tests) that instantiates an X509Certificate object (instead of an X509Certificate2).
    
    Since the property still return an X509Certificate(1), the callers would have to cast it to use the X509Certificate2-only properties, but now an `as` will suffice, whereas before it required an up-converting operation.

[33mcommit eafb7ebee995c908113f212eff8283c11e017b80[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Dec 29 19:06:27 2015 +0000

    Implement IEquatable in CredentialKey and CredentialHostKey
    
    Improve performance of these types uses as dictionary keys, which
    is their intended purpose.
    
    Fixes #5137

[33mcommit 3d8569f7f2c8dd387366cbd2ef1b1cc4edab7038[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Dec 29 18:14:07 2015 +0000

    Replace while with if when broken after single loop.
    
    Two cases where a while always returns, nil effect on generated IL but
    cleaner, clearer, better-practice code.

[33mcommit 0ed6206d10b6361a3c0cf8f76515094f757f190d[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Dec 29 08:18:36 2015 -0800

    Remove redundant OpenSslX509StoreProvider
    
    OpenSslX509StoreProvider was the original stand-in for Windows Store equivalence, and it was mainly tape and bailing wire.
    
    As the Unix X509Certificates implementation expanded eventually there was a CollectionBackedStoreProvider type, which had at least as much functionality.
    
    Since OpenSslX509StoreProvider was one of the last sanctuaries of NotImplementedException in Unix X509Certificates, this type is being removed and the callers migrated over to CollectionBackedStoreProvider.

[33mcommit b0678c1f361190d093f5dc77bcb860690cef6987[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Dec 29 08:03:25 2015 -0800

    Remove dead method PfxToCollection.
    
    This method was added in commit a8f70ba3814aaf6f324af278306a4ad4222bc376, and then in a2cef285f05061860ad2863aad45ef3a1edf2d93 (less than a month later) a more generalized form of this method was made, and the only call removed.

[33mcommit 04e93f79aeee19a6fb3dabb3c95a9324883f42e7[m
Merge: e27ebbe 32340eb
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Tue Dec 29 07:49:10 2015 -0800

    Merge pull request #5121 from bartonjs/crypto_algorithms_contract
    
    Use GenAPI to regenerate S.S.C.Algorithms contract

[33mcommit e83a7e2372703054ee0dc06ae35fbe6e6f01a61a[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Dec 28 16:28:39 2015 -0800

    Make Windows-Specific cert properties throw PNSE on Unix.
    
    The Archived and FriendlyName properties are implementation details of the Windows Certificate Store, and have no equivalent on Unix.  These properties were initially filled in with NotImplementedException, and that's now being replaced with PlatformNotSupportedException since there is no plan to make these properties have a semantic interpretation for 1.0.0-rtm (or, at this point, beyond).

[33mcommit 759f4b105d2e278fc5c4dbb28c317e2f22111910[m
Author: Alexander Speshilov <speshuric@gmail.com>
Date:   Tue Dec 29 02:56:16 2015 +0300

    Restored fixes in tests of DateTime serialization
    
    Restore fixes made in #2496 and #2541 in tests of DateTime with UTC offset serialization.
    That fixes was overwritten by commit 3f91ae109263904564edaceab039ab55ef2c0518

[33mcommit e27ebbeed39f65356d77127f487d960afefcfc33[m
Merge: afe1001 2b9eafc
Author: Jan Kotas <jkotas@microsoft.com>
Date:   Mon Dec 28 12:34:11 2015 -0800

    Merge pull request #5113 from jkotas/duplicatekey
    
    Include the key in the "duplicate key" exception message

[33mcommit 353640643c1cc528f9688a289d0e80c0b317b3ae[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Mon Dec 28 12:16:06 2015 -0800

    Changes to system.security.claims

[33mcommit 47a59176c9e884fff2a0ac7d707520fdbcf6c404[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Mon Dec 28 12:00:16 2015 -0800

    Porting system.security.claims

[33mcommit cd8e6a89490fd0f80ddee39b49dda0f7de3850a5[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Dec 28 11:58:16 2015 -0800

    Disable building DSAParameters in S.S.C.Algorithms
    
    DSA isn't part of the contract yet (the base class needed the same upgrade treatment we gave RSA and ECDsa), so nothing yet needs/uses DSAParameters.
    
    Rather than delete the source file, which will likely just come back in a couple of months, I switched it to a non-compile file in the csproj.

[33mcommit d8d1eb30d59a92997e088ad369f49f73b7ee0d2e[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Dec 28 11:24:58 2015 -0800

    Remove dead code from RSA
    
    _legalKeySizesValue isn't in the contract, and no implementations of RSA exist within the Algorithms library, so no one is capable of setting it.
    
    The net result is that the derived types are already re-overriding it, and not calling base, so this is a wasted field and wasted property.

[33mcommit 32340eb8d3bd21b938dc3c553ad910a572d278a9[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Dec 28 11:16:12 2015 -0800

    Use GenAPI to regenerate S.S.C.Algorithms contract
    
    Notable additions:
    * Adds the HMACMD5 type
    * Defines multiple overrides that exist on the HMAC* types, but weren't previously defined.
        * These overrides don't exist on Desktop, but the behavior of base.HashSize was verified to continue seeking base-ward when the target method is not found.
    * The Aes::Legal*Sizes overrides
    
    Notable comments:
    * Reverted the deletion of the header
    * Reverted the addition of DSAParameters (DSA is not yet in-contract)
    * Reverted the addition of the _legalKeySizesValue protected field and LegalKeySizes property on RSA (to be cleaned up)
    * Let the tool reformat ECDsa IncrementalHash, and TripleDES.

[33mcommit af7ced3b05942530fa64227f778e628ca85d7857[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Mon Dec 28 08:33:04 2015 -0800

    Port List.Reverse changes from CoreCLR
    
    Align the CoreRT/.NET Native implementation of List.Reverse with the
    CoreCLR implementation.

[33mcommit afe10019a3205013ec0845aec61bc6be6f971a94[m
Merge: 61449e6 742f660
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Dec 28 10:03:05 2015 -0500

    Merge pull request #5080 from kapilash/i4960
    
    CurlHandler fix for cookie handling

[33mcommit 61449e6f36725f82bff2cf95bf24915775b8996d[m
Merge: f7f16cd 62a32bb
Author: Jan Kotas <jkotas@microsoft.com>
Date:   Sun Dec 27 05:42:09 2015 -0800

    Merge pull request #5115 from justinvp/dictionary_ctor
    
    Dictionary constructor perf optimization

[33mcommit 2b9eafc71c42ea5b423a924934b828168e240c9e[m
Author: Jan Kotas <jkotas@microsoft.com>
Date:   Fri Dec 25 18:42:53 2015 -0800

    Include the key in the "duplicate key" exception message
    
    Port https://github.com/dotnet/coreclr/pull/1452 to CoreRT/.NET Native clone of Dictionary, as well as other collections implemented in System.Collections.dll.

[33mcommit 62a32bb6bb1f09ceab4991d1b43059f94f0b18b6[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Sat Dec 26 16:42:07 2015 -0800

    Dictionary constructor perf optimization
    
    Regarding the constructor overloads that take an
    IDictionary<TKey, TValue>: It is likely that the passed-in dictionary
    is Dictionary<TKey, TValue>. When this is the case, avoid the
    enumerator allocation and overhead by looping through the entries
    array directly. This is only done when the dictionary is
    Dictionary<TKey, TValue> and not a subclass, to maintain back-compat
    with subclasses that may have overridden the enumerator behavior.

[33mcommit f7f16cd2fa7b16e48a03145241850e67d3427b69[m
Merge: c0b74c4 43dd2c0
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Thu Dec 24 15:56:07 2015 -0800

    Merge pull request #5112 from weshaggard/UpdateBuildTools141
    
    Update BuildTools to version 141

[33mcommit 43dd2c0eb2b7f9359c0d54e3b8f5846d24b1b53c[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Thu Dec 24 15:06:14 2015 -0800

    Update BuildTools to version 141
    
    This addresses the race condition fixed with https://github.com/dotnet/buildtools/pull/378

[33mcommit c0b74c4d36a8ad097fbae31e59a36bb284f389f4[m
Merge: 759561e 1b77984
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Thu Dec 24 10:03:21 2015 -0800

    Merge pull request #5111 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 742f6608ad14933295b3a64cf9859c9ba961c8d1[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Mon Dec 21 10:21:17 2015 +0530

    CurlHandler fix for cookie handling
    
    CurlHandler has been handling cookies only from the final HTTP response.
    The cookies sent during the intermediate http responses (during 3XX
    redirection as well as interim 401, 407 responses) were getting ignored.
    This fix ensures that the cookies from all the responses are handled.

[33mcommit 759561edfbfb9e79db22a4901c0432c292e21f73[m
Merge: f97770b 987e4e5
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Wed Dec 23 23:57:30 2015 -0800

    Merge pull request #5110 from weshaggard/SplitIntoBuildsProjects
    
    Split the project lists into ref, src, and tests projects

[33mcommit 1b77984dd736f848e39808df7802aae77b02f975[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Dec 23 19:53:16 2015 -0800

    Enable packaging task and targets from dotnet/buildtools in TFS
    
    This change switches the TFS package buid to use the packaging
    infrastructure from the buildtools package.  For any package
    project that exists in corefx/wcf we will use that in place of the
    closed source package.
    
    As we move more package projects to the open they will
    automatically be preferred over the closed source projects.
    
    [tfs-changeset: 1559910]

[33mcommit 987e4e57c12dbfff29e7a7a597d8db4bc14963dc[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Wed Dec 23 18:10:41 2015 -0800

    Split the project lists into ref, src, and tests projects
    
    This split allows folks to build individual parts of these and
    isolates them from one another.

[33mcommit ea6d8ccd870d36119728fe85345e40088e3008d6[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Dec 23 11:02:12 2015 -0800

    Correctly decode an empty value RDN on Unix.
    
    When Asn1StringPrintEx returns 0 the answer is the empty string, rather than to continue trying to do work.
    
    And Windows considers the empty RDN value quotable.
    
    Added the empty string to the quoted contents decoding suite.

[33mcommit f97770bca64cd64add8564d65ea3b52b89abcc74[m
Merge: b5e9063 3c24bae
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Tue Dec 22 22:36:52 2015 -0800

    Merge pull request #5103 from weshaggard/UpdateSRIS.WindowsRuntime
    
    Update S.R.InteropServices.WindowsRuntime targets

[33mcommit 3c24baeaaf425e62483d13ea4c27a5a60c55356b[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Tue Dec 22 21:46:43 2015 -0800

    Update S.R.InteropServices.WindowsRuntime targets
    
    Update it so that it targets dotnet5.4 for Win8 when on CoreCLR.

[33mcommit b5e90639e484043c50f51c56962c30925013af46[m
Merge: f8f86a0 43040fa
Author: Ian Hays <ianha@microsoft.com>
Date:   Tue Dec 22 15:50:06 2015 -0800

    Merge pull request #5085 from ianhays/dstcompression
    
    Fixed System.IO.Compression FileData DST bug

[33mcommit f8f86a009560222e8d3e6fdbf1bfdb8aed58b465[m
Merge: 895cdac 2f0f439
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Tue Dec 22 15:35:26 2015 -0800

    Merge pull request #5100 from ericstj/buildTools139
    
    Update buildtools to 1.0.25-prerelease-00139

[33mcommit 2f0f439caf17dcf54532c45f846c3f83b884c59b[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Dec 22 14:58:01 2015 -0800

    Update buildtools to 1.0.25-prerelease-00139

[33mcommit 895cdaca9ee2b997517781778936e43e016d8bd7[m
Merge: 67c4c6c 0d07c5c
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Dec 22 14:57:16 2015 -0800

    Merge pull request #5051 from IlyaBiryukov/issue-4777-fix1
    
    Enable custom socket end points and allow Unix Domain Sockets

[33mcommit 67c4c6cea59543cbed7dca4cdaa0d4dde976b119[m
Merge: 7e95454 7682292
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Tue Dec 22 14:44:41 2015 -0800

    Merge pull request #5092 from dsgouda/System.Runtime.WindowsRuntime
    
    Fixing netcore50aot builds for System.Runtime.WindowsRuntime

[33mcommit 43040fa8134d185b5a4b7230c8f620ed103e40cb[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Mon Dec 21 11:53:06 2015 -0800

    Fixed System.IO.Compression FileData DST bug
    
    The FileData class for testing in System.IO.Compression was initializing DateTimes using Ticks and an unspecified DateTimeKind that resulted in some times being off by an hour when the time was during Daylight Savings Time. I've fixed these times and reformatted them to use UTC times so testing is timezone independent. I also reformatted some tests to use Theories.
    
    resolves #1326

[33mcommit 0d07c5c5be8f74d25cd64f11b63975a9243da440[m
Author: Ilya Biryukov <ilbiryuk@microsoft.com>
Date:   Thu Dec 17 15:02:08 2015 -0800

    Enable custom socket end points and allow Unix Domain Sockets
    
    With code separation into System.Net.Primitives and System.Net.Sockets,
    EndPoint extensibility was broken because System.Net.Sockets started to
    use its own copy of SocketAddress and didn't respect SocketAddress that
    a custom EndPoint may provide.
    
    The fix is to allow conversion between SocketAddress from System.Net.Primitives
    and System.Net.Sockets. This way custom implementations of EndPoint will
    be able to provide their own SocketAddress and it'll be honored by the
    Socket APIs.
    
    The fix also allows sockets to use 'Unspecified' protocol type which is
    needed for Unix Domain Sockets. There are several changes in socket test
    server to allow tests pass protocol type.
    
    Add new unit tests that use end point extensibility to implement Unix
    Domain Sockets.
    
    Fix #4777

[33mcommit 7e954546636d74e939503171f096f2b622f41e57[m
Merge: fee8a38 79ee3e6
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Tue Dec 22 14:06:01 2015 -0800

    Merge pull request #5095 from ericstj/filesystemNetCore50
    
    Restore NETCore50 build of FileSystem

[33mcommit fee8a386b71f89230e4adb3b30fb7cf3546c74e2[m
Merge: bb48b17 a1ac74d
Author: Venkatraman Mahalingam <vemaha@microsoft.com>
Date:   Tue Dec 22 12:05:57 2015 -0800

    Merge pull request #5023 from venkat-raman251/sys.io.packaging
    
    Adding Desktop to System.IO.Packaging

[33mcommit 79ee3e65de790e203892a9e08be7a563ec463dab[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Dec 22 11:47:41 2015 -0800

    Restore NETCore50 build of FileSystem
    
    Bring back build that was incorrectly removed with https://github.com/dotnet/corefx/commit/58e2f6e862060039e1ebad727d75c87703fdb2f2

[33mcommit bb48b17815b7b2138bffbaa071913e012858a32a[m
Merge: 36344e2 e28fdbd
Author: Pallavi Taneja <pallavit@users.noreply.github.com>
Date:   Tue Dec 22 11:06:45 2015 -0800

    Merge pull request #5029 from pallavit/issue#4146_2101
    
    Expose Assembly.GetEntryAssembly and TypeInfo.IsEquivalentTo()

[33mcommit 7682292272cb156d3a31e8db6505584daf5cfc04[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Tue Dec 22 10:39:39 2015 -0800

    Addressed PR comments

[33mcommit 36344e25f30dad629593279265feb4386b7bee3e[m
Merge: 0172229 1c4f7da
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Tue Dec 22 09:37:45 2015 -0800

    Merge pull request #5090 from weshaggard/ReferenceWinRTPackageForSRWR
    
    Reference M.TP.P.WinRT to get Windows.winmd references for S.R.WR ref

[33mcommit 0172229ec658c84ebb43aa4cb33c91d4a5fc5b3f[m
Merge: f95fe46 9b9cce8
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Tue Dec 22 07:54:08 2015 -0800

    Merge pull request #5094 from ericstj/buildTools138
    
    Update buildtools to 1.0.25-prerelease-00138

[33mcommit 9b9cce82075336ab49dd75a2ba55150a12bbe042[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Dec 22 06:42:48 2015 -0800

    Update buildtools to 1.0.25-prerelease-00138

[33mcommit 1c4f7daf354654f175dafa27fbd44269a172c585[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Dec 21 14:45:02 2015 -0800

    Enable building of System.Runtime.WindowsRuntime reference assembly
    
    Added Microsoft.TargetingPack.Private.WinRT for windows.winmd and
    Microsoft.NETCore.Portable.Compatibility for mscorlib.dll facade.

[33mcommit fa0d51ee62824d8a2b8b2fea45600c6affbd212d[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Mon Dec 21 16:38:51 2015 -0800

    Fixing netcore50aot builds for System.Runtime.WindowsRuntime

[33mcommit f95fe468974adca38c5feb919d20cb356370fb1f[m
Merge: 50c66ff ea05ab6
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Mon Dec 21 15:38:12 2015 -0800

    Merge pull request #5091 from ericstj/buildTools137
    
    Update buildtools to 1.0.25-prerelease-00137

[33mcommit ea05ab61477a39ef52668686b60ca6d9d46c0a2b[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Mon Dec 21 14:57:24 2015 -0800

    Update buildtools to 1.0.25-prerelease-00137

[33mcommit e28fdbd9dd98810a81207c665fdc4e6b40b24e64[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Wed Dec 16 17:04:38 2015 -0800

    Expose Assembly.GetEntryAssembly and TypeInfo.IsEquivalentTo()
    
    Expose Assembly.GetEntryAssembly and TypeInfo.IsEquivalentTo() in System.Reflection.
    Fixes issues #4146 , #2101

[33mcommit 50c66ffcf62be7683a756df14a2dbc75720ae263[m
Merge: 49e5680 98fdc29
Author: Pallavi Taneja <pallavit@users.noreply.github.com>
Date:   Mon Dec 21 13:59:00 2015 -0800

    Merge pull request #5057 from pallavit/UpdateRepoPkgs
    
    Update Corefx Repo to depend on newer package versions

[33mcommit 98fdc29624cd791bba42ec1e0cd5c256f331adfe[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Thu Dec 17 16:49:18 2015 -0800

    Update Corefx Repo to depend on newer package versions
    
    Disable failing tests with the tracking active issue

[33mcommit 84e3e467ec9d5960784966606ab373186c07f93d[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Dec 21 10:52:53 2015 -0800

    Correct DerSequenceReader.DerTag.IA5String value to 0x16.
    
    ASN tag 0x15 (21 dec) is VideotexString. IA5String is tag 0x16 (22 dec).
    
    This wasn't causing any problems because the only places where an IA5 string is involved in the current codepaths came from a context-specific tag.

[33mcommit 49e56805c3134e9b4a34670182cfdc9f6df79e7d[m
Merge: e893adc 4de4f7b
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Mon Dec 21 10:45:57 2015 -0800

    Merge pull request #5083 from ellismg/remove-opensuse-13-2-from-pr
    
    Remove openSUSE 13.2 from PR testing

[33mcommit e893adcf7e12266592a3bb05caf27bf4e73a0608[m
Merge: 1978643 e55cf9b
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Mon Dec 21 10:34:14 2015 -0800

    Merge pull request #5081 from ericstj/buildTools136
    
    Update buildtools to 1.0.25-prerelease-00136

[33mcommit 4de4f7bd32a6d94a988262a64fa909bb001c38ac[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Mon Dec 21 10:31:24 2015 -0800

    Remove openSUSE 13.2 from PR testing
    
    The openSUSE 13.2 Debug build has been a fair bit recently and the
    failures look related to some recent changes in CLR (likely due to the
    recent JIT changes that have gone in).
    
    While we investigate the failure (see #5082) I am removing the per PR jobs
    from CI.

[33mcommit e55cf9bbb75b68bfc9eec70e112430b76d46d240[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Sun Dec 20 23:37:28 2015 -0800

    Update buildtools to 1.0.25-prerelease-00136

[33mcommit 89ce11c19051c9fb07f39f37d21fce59ed1fa655[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Sat Dec 19 02:20:00 2015 -0800

    Update job and badge links

[33mcommit 19786433c61890bb56cb2a2a326e4726055d392f[m
Merge: a60fa54 5a86f42
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Dec 18 20:55:43 2015 -0800

    Merge pull request #4972 from dsgouda/System.Diagnostics.StackTrace
    
    Creating src dir for System.Diagnostics.StackTrace

[33mcommit a60fa54dc5792ba1bfcf19f3478ae05e9b777230[m
Merge: 2041b2a 9199fe6
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Dec 18 20:52:42 2015 -0800

    Merge pull request #5005 from venkat-raman251/sys.sec.algorithms
    
    Adding Desktop to System.Security.Cryptography.Algorithms

[33mcommit 2041b2aa9c3d556e17b54d124dcf49c48127554d[m
Merge: 0938e91 ef24541
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Dec 18 20:50:21 2015 -0800

    Merge pull request #5028 from venkat-raman251/sys.cm.primitives
    
    Adding Desktop to System.ComponentModel.Primitives

[33mcommit 0938e919e9cc2a931a54cab99aeac54be26b6132[m
Merge: f120306 6d35571
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Dec 18 20:50:09 2015 -0800

    Merge pull request #5030 from venkat-raman251/sys.cm.typeconverter
    
    Adding Desktop to System.ComponentModel.TypeConverter

[33mcommit f12030622dbe15e716d7eb47a075ebb9ee93a5a3[m
Merge: ce42ce0 b954ee8
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Dec 18 20:49:56 2015 -0800

    Merge pull request #5059 from dsgouda/System.Runtime.WindowsRuntime.UI.Xaml
    
    Porting System.Runtime.WindowsRuntime.Xaml

[33mcommit ce42ce05a7c30886ccd4e1f364c5bf54bf95986c[m
Merge: f9447c5 e7d592e
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Dec 18 20:49:43 2015 -0800

    Merge pull request #5069 from venkat-raman251/sys.xml.xpath.xdoc
    
    Adding Desktop to System.Xml.Xpath.Xdocument

[33mcommit f9447c5a049737676d795d0105cb455b5c2e60be[m
Merge: cf17ff1 566c494
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Dec 18 20:17:43 2015 -0800

    Merge pull request #5053 from mellinoe/compression-desktop
    
    Add Desktop configuration for System.IO.Compression

[33mcommit cf17ff1d110b9984e63a1825b3d012c8002a8a3b[m
Merge: 2ec8cac 834aaae
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Dec 18 20:15:07 2015 -0800

    Merge pull request #5070 from dsgouda/System.Runtime.WindowsRuntime
    
    Porting System.runtime.windowsruntime lib

[33mcommit 2ec8cacfc345e4df91ea88f51a20329c7a300f22[m
Merge: 6816668 bdecc99
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Dec 18 20:11:04 2015 -0800

    Merge pull request #5071 from dsgouda/System.Diagnostics.Tracing
    
    Porting System.Diagnostics.Tracing

[33mcommit d30c9ddca063d2e29b65060509a019a687a41975[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Sat Dec 19 02:16:08 2015 +0100

    Add specific error messages

[33mcommit 834aaaeb8168d4d3d6b7bb76ebb1276bd293673a[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Fri Dec 18 16:34:50 2015 -0800

    Added TargetPackageRuntime=win8

[33mcommit bdecc99518177138bbcdbb42b0b6675e0a8b1248[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Thu Dec 10 17:07:34 2015 -0800

    Porting System.Diagnostics.Tracing

[33mcommit 6816668434550e47808af427194abe6d3e16ff11[m
Merge: 7eac141 962fe93
Author: Venkatraman Mahalingam <vemaha@microsoft.com>
Date:   Fri Dec 18 16:04:49 2015 -0800

    Merge pull request #5061 from venkat-raman251/sys.glob.ext
    
    Adding Desktop to System.Globalization.Extensions

[33mcommit 07e60628087861f0810aa6b7f4168f36645df969[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Thu Dec 17 12:21:44 2015 -0800

    CodeFormatter changes and code cleanup

[33mcommit e842c9ae7f2415d2adb6681923b4292c5dd39dc4[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Wed Dec 16 09:28:48 2015 -0800

    Porting System.Runtime.WindowsRuntime

[33mcommit 7eac141b1e991146680ec50c5a327ade417081d3[m
Merge: 2ca3d9b c5f022c
Author: Venkatraman Mahalingam <vemaha@microsoft.com>
Date:   Fri Dec 18 15:23:42 2015 -0800

    Merge pull request #5026 from venkat-raman251/sys.cm.annotations
    
    Adding Desktop to System.ComponentModel.Annotations

[33mcommit 2ca3d9b698ce122b0b0a3e5585078a312804325a[m
Merge: cd9621e a3d28bc
Author: Venkatraman Mahalingam <vemaha@microsoft.com>
Date:   Fri Dec 18 15:21:01 2015 -0800

    Merge pull request #5046 from venkat-raman251/sys.numerics.vectors
    
    Adding isPartialFacadeAssembly=true for System.Numerics.Vectors

[33mcommit e7d592e8e84159d02cd7dfad225b17c631265c15[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Fri Dec 18 15:12:19 2015 -0800

    Adding Desktop to System.Xml.Xpath.Xdocument

[33mcommit 6d35571294837782fe3eab660a02eae06b6c60f8[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Fri Dec 18 14:46:08 2015 -0800

    Adding Desktop to System.ComponentModel.TypeConverter

[33mcommit ef2454117e0571d22231c119a9afc078fb689a22[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Fri Dec 18 14:40:17 2015 -0800

    Adding Desktop to System.ComponentModel.Primitives

[33mcommit cd9621ed1188bcce7345b7e7bba6dafcde3c8aeb[m
Merge: d71b11c 9e45f46
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Dec 18 13:46:20 2015 -0800

    Merge pull request #5004 from mellinoe/registry-accesscontrol
    
    Port Microsoft.Win32.Registry.AccessControl

[33mcommit c5f022cf5468ec69422512741f2f61bf49fc5e89[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Fri Dec 18 13:37:44 2015 -0800

    Adding Desktop to System.ComponentModel.Annotations

[33mcommit d71b11cca32dfa71d9f361ae09422f93d4577e11[m
Merge: 7af748d 14d4e43
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Dec 18 13:35:32 2015 -0800

    Merge pull request #5047 from mellinoe/collections-netnative
    
    Port .NET Native version of System.Collections

[33mcommit a1ac74d61b32a1aa8cb4e6af2d595208e611357c[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Fri Dec 18 13:29:41 2015 -0800

    Adding Desktop to System.IO.Packaging

[33mcommit b954ee850f5d2e7cf00ed7fdaec18fec32010b82[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Fri Dec 18 12:53:20 2015 -0800

    Addressed PR comment

[33mcommit 9199fe6f2444c78df966f813834bd66a418b3bc5[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Fri Dec 18 12:44:31 2015 -0800

    Adding Desktop to System.Security.Crypto.Algorithms

[33mcommit a3d28bc6ec19e618f9cc57e37d03bc261664af5c[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Fri Dec 18 12:32:09 2015 -0800

    Adding Desktop to System.Numerics.Vectors

[33mcommit 962fe93e56d77ff8251f249136874cf9c4dc72a4[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Fri Dec 18 11:59:19 2015 -0800

    Adding Desktop to System.Globalization.Extensions

[33mcommit 7af748de8e7f3e0377a1a5df8e041e38a969c2cd[m
Merge: a888ded 5843991
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Fri Dec 18 10:54:27 2015 -0800

    Merge pull request #5062 from shrutigarg/ssl_bug
    
    Fixing System.Net.Security.Unit.Tests failure

[33mcommit 566c494db9897440eb03e7ac0ae9f4378f91e2ef[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Dec 17 14:22:15 2015 -0800

    Add Desktop configuration for System.IO.Compression

[33mcommit 14d4e4315bad3601e3a750722920922ecbd8ea46[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Dec 17 12:17:34 2015 -0800

    Port .NET Native version of System.Collections

[33mcommit a888dedaff96bbf1142b9c3585940ffbd5207240[m
Merge: 4fdaeb6 e0f3aed
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Dec 18 10:44:43 2015 -0800

    Merge pull request #5043 from mellinoe/fix-sln-refs
    
    Fix solution files for renamed projects

[33mcommit 4fdaeb6026ff0892475a398163f419d6e9d7de8f[m
Merge: bf880f3 ca3694d
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Fri Dec 18 10:37:34 2015 -0800

    Merge pull request #5063 from ericstj/packageAlwaysBuildDesktopFacades
    
    Always build desktop facades for packaged libraries

[33mcommit bf880f386c9a2ff14e0c9a27fd6a38d7d9f9a6ec[m
Merge: 75a0023 dd1de14
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Fri Dec 18 09:50:59 2015 -0800

    Merge pull request #5056 from naamunds/AddDebianCi
    
    Add Debian build CI jobs

[33mcommit ca3694d68fcb133cdcdf23284e3abe71966b754d[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Dec 18 05:44:56 2015 -0800

    Always build desktop facades for packaged libraries
    
    The desktop facade must go in the reference package,
    so we need to build it whenever we build OS-neutral
    projects.

[33mcommit 584399101e2248b5197b9ba389c7e4fc6c953333[m
Author: Shruti Garg <shgarg@microsoft.com>
Date:   Fri Dec 18 18:40:37 2015 +0530

    Fixing System.Net.Security.Unit.Tests failure

[33mcommit 75a0023da4dce00768c708659db065c5871b140e[m
Merge: 00ffa34 0faa1f3
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Dec 17 20:42:30 2015 -0800

    Merge pull request #4967 from hughbe/cookies
    
    Cookie Tests

[33mcommit 57400311310bf14c8b7536e07e26f055b70d6527[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Wed Dec 16 09:28:48 2015 -0800

    Porting System.Runtime.WindowsRuntime.Xaml
    
    CodeFormatter changes and code cleanup

[33mcommit dd1de14b098866c8962f3e37e968990892b94f8a[m
Author: Nate Amundson <naamunds@microsoft.com>
Date:   Thu Dec 17 19:04:22 2015 -0600

    Add Debian build CI jobs
    
    This is part of the work for https://github.com/dotnet/corefx/issues/4656

[33mcommit 00ffa34baed8c00bc33c67aef6fb68124fe463ee[m
Merge: 3c521c7 6d15aa6
Author: Nate Amundson <naamunds@microsoft.com>
Date:   Thu Dec 17 18:55:39 2015 -0600

    Merge pull request #4983 from naamunds/MakeTestsAsync
    
    Make unit tests async to work with 1 thread

[33mcommit 3c521c788e3e225e9517ea035d8c85085d7db8ba[m
Merge: 9ea3f1e 93395f0
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Thu Dec 17 16:48:31 2015 -0800

    Merge pull request #5048 from CIPop/snsut
    
    Disabling tests failing on *NIX. Fix #5037

[33mcommit 9ea3f1e71beb7a0c29d62fda2248b42f75cfff03[m
Merge: a9e2c63 2e35b98
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Dec 17 16:20:14 2015 -0800

    Merge pull request #5052 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 2e35b987eb9a3288b232e4091531f100f5eee694[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Thu Dec 17 14:00:37 2015 -0800

    [WesH/EricStJ] Fix a few more packaging build breaks from recent changes.
    
    [tfs-changeset: 1558643]

[33mcommit a9e2c632ef56e5e059aada6e09b089353e80c919[m
Merge: 975c3ca 8ac944a
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Dec 17 13:17:11 2015 -0800

    Merge pull request #5001 from davidsh/cookie_bug
    
    Fix WinHttpHandler response handling for manual cookie parsing

[33mcommit 93395f04a1db3040a4b40e85df7d166b23076e92[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Thu Dec 17 13:10:58 2015 -0800

    Disabling tests failing on *NIX. Fix #5037

[33mcommit e0f3aed9d4349458db6ef706bcf6dcd8ff8259ad[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Dec 17 11:40:47 2015 -0800

    Fix solution files for renamed projects
    
    I've just re-generated these solution files completely, so they also
    include the new configuration groups which were added along with the
    renames. As I was changing this, I also moved them to the stable version
    of the .NET 4.6 targeting pack NuGet package.

[33mcommit 975c3ca9ebe52679a4de40700db1dc39ee35cee1[m
Merge: dd4e729 433d063
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Dec 17 11:24:20 2015 -0800

    Merge pull request #5033 from Clockwork-Muse/System.Threading.Tasks_FixSolutionFile
    
    Fix expected project name in System.Threading.Tasks

[33mcommit dd4e729a86c2dcbc795c0e30bb9061c51e02021e[m
Merge: 4e6fcf2 d07b54a
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Dec 17 11:07:42 2015 -0800

    Merge pull request #4985 from speshuric/feature/issue_4965
    
    Fix internal overflow in BigInteger Log() and operator Double()

[33mcommit 9e45f4652aea4928dc369c6be5cce22b6b39092e[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Dec 15 16:43:24 2015 -0800

    Respond to PR feedback

[33mcommit 8ac944afcbd35d8b489e14e1c4c7f4be08f74c72[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Dec 14 16:31:23 2015 -0800

    Fix WinHttpHandler response handling for manual cookie parsing
    
    WinHttpHandler was losing 'Set-Cookie' response headers during auto redirection handling when the handler was in 'manual cookie' mode. I.e. `CookieUsePolicy.UseSpecifiedCookieContainer`. This is the only mode that HttpClientHandler uses.
    
    The 'Set-Cookie' headers were currently only parsed out when a final HTTP response happened. This meant that 'Set-Cookie' headers present in interim 3xx redirection responses as well as interim 401, 407 auth responses would not be stored into the CookieContainer. Hence, those same cookies could not be sent back to the server when needed.
    
    The fix is to make sure we parse out the 'Set-Cookie' headers whenever we get an HTTP response back from WinHTTP. As part of this fix, I re-factored out the cookie handling code into a separate class. I also added specific WinHttpHandler tests for the two different cookie modes as well as a HttpClientHandler test to validate cross-platform (i.e. CurlHandler).
    
    Address #4960 but further fixes are needed for *NIX as well.

[33mcommit 4e6fcf25aaa468ba171142124da97936a6d20261[m
Merge: 03e9d30 1ed61d8
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Thu Dec 17 10:08:20 2015 -0800

    Merge pull request #5032 from saurabh500/transientRetry
    
    Adding the Transient Fault retry handling logic for Azure SQL connections

[33mcommit 03e9d3018fa8984311cc51eeffe48ad07e835e60[m
Merge: 329e828 124df23
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Dec 17 09:39:16 2015 -0800

    Merge pull request #5035 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 124df235284a2a5f516e2bb4480c678978676b86[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Thu Dec 17 08:45:02 2015 -0800

    [WesH] Bump up the generation of System.Runtime.WindowsRuntime to 5.4 to workaround a validation bug that sees Windows.winmd as being part of that generation.
    
    [tfs-changeset: 1558575]

[33mcommit 433d063d8124de90263fdd90a873a04fb85e0780[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Thu Dec 17 17:59:14 2015 +0900

    Correct project name to match project in directory

[33mcommit 1ed61d8060d6ef447b792f1dccf80a739f2ee6fb[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Wed Dec 16 19:42:40 2015 -0800

    Addressing PR comments

[33mcommit 6f2489d28c64954b2437e90aaf304a5fde4147de[m
Author: Saurabh Singh <saurabh500@gmail.com>
Date:   Wed Dec 16 18:01:16 2015 -0800

    Adding the Transient Fault retry handling logic for Azure SQL connectivity
    
    There is a list of errors which are sent from Azure Sql which are
    considered transient and the client should retry the connection open if
    the timeout has not expired during this timeperiod when these errors are
    reported by the SqlServer.

[33mcommit d07b54a694b130ac502e2930ee7b3b2d5ea8a236[m
Author: Alexander Speshilov <speshuric@gmail.com>
Date:   Tue Dec 15 04:30:36 2015 +0300

    Fix internal overflow in BigInteger Log() and operator Double()
    
    Fixed overflow of internal integer variable in BigInteger.Log() and BigInteger operator Double() when calculate bitlength of parameter.
    Improved test coverage for this cases.

[33mcommit 329e828b5ba85c59f9a3c10d1ff9f3fb636f46f3[m
Merge: bc99595 e36a631
Author: Matt Ellis <matell@microsoft.com>
Date:   Wed Dec 16 16:48:41 2015 -0800

    Merge pull request #5027 from ellismg/use-ordinal-in-type-converter
    
    Use ordinal when checking for hex prefix

[33mcommit 5a86f4263a449da42e70eb1b308b65b2b112963c[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Wed Dec 16 16:28:32 2015 -0800

    CodeFormatter changes

[33mcommit 2237e5c24887070bcf4d4db57528af09e766112e[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Fri Dec 4 16:54:37 2015 -0800

    Creating src dir for System.Diagnostics.StackTrace

[33mcommit c80cc671e522d40b68969948321ae9d0878e7bd6[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Dec 2 16:04:53 2015 +0000

    Optimise RequiresCanRead and RequiresCanWrite.
    
    Being no longer public, the overload of RequiresCanRead that takes an
    IEnumerable can be optimised to make direct use of the IReadOnlyList it
    invariably is called with, instead of testing-and-casting to get to the
    enumerator-free path.
    
    RequiresCanWrite meanwhile could always be optimised to avoid
    unnecessary set-and-test paths.

[33mcommit bc995951ff92eeb5e28cc4e9da7a741a4e3bf3c5[m
Merge: 28b362c 67cd634
Author: Matt Ellis <matell@microsoft.com>
Date:   Wed Dec 16 15:44:26 2015 -0800

    Merge pull request #5006 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 28b362ca95008d80af8c2740fcf435b861aca454[m
Merge: c9a9f9f fe621b0
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Dec 16 15:43:47 2015 -0800

    Merge pull request #4746 from JonHanna/fix_4400
    
    Don't throw when Expression.VisitBlock() changes only variables.

[33mcommit e36a63179f46f9db746baf6f7f762f3903af2de4[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Wed Dec 16 15:09:36 2015 -0800

    Use ordinal when checking for hex prefix
    
    In general lingustic comparsion is slower than ordinal comparision.
    When using ICU for globalization, the lingustic StartsWith code path
    actually ends up doing a lot of work inside ICU itself. While we'll try
    to make things better (see dotnet/corefx#3672) for common cases like
    ASCII only, if code doesn't need ligustic comparision the best practice
    is to not request it.
    
    BaseNumberConverter was using a lingustic StartsWith to detect a hex
    prefix when trying to parse a number but it is better served by just
    always using ordinal comparisons.
    
    This results in a ~35% QPS improvement in some very barebones ASP.NET
    scenarios (like the one outlined in richardkiene/CoreCLRWebAPISample) on
    my local machine.

[33mcommit c9a9f9f8d1d47c655b0e147eec880f65b3d43620[m
Merge: e87c419 b104b70
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Wed Dec 16 13:51:57 2015 -0800

    Merge pull request #5013 from ericstj/packageDocs
    
    Add documentation describing package projects

[33mcommit e87c419b4a484d117531f40cb83125171eb037b6[m
Merge: fab9378 88021b3
Author: David Shulman <david.shulman@microsoft.com>
Date:   Wed Dec 16 11:49:45 2015 -0800

    Merge pull request #5019 from davidsh/test_server
    
    Update Http and WebSocket test servers

[33mcommit fab93786ad526ccecbd5535147f57c7982ed0d9c[m
Merge: 5f8081a eb29e99
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Wed Dec 16 11:35:49 2015 -0800

    Merge pull request #5010 from tmat/MetadataSpecs
    
    Portable PDB and PE/COFF specs

[33mcommit 88021b35c54eaf7b600d7ebad92ea54911e32bbf[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Wed Dec 16 10:45:27 2015 -0800

    Update Http and WebSocket test servers
    
    Switch to a different (more scalable) Azure-based test server for Http
    and WebSocket.tests.

[33mcommit b104b70e852cc50f67715e1fa78ab01b099789d3[m
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Wed Dec 16 09:59:51 2015 -0800

    Address feedback
    
    I've fixed the formatting, clarified "desktop", and added a section
    on selecting the right version of NETStandard/DotNet.

[33mcommit 8a9cc67bd986d37836c9de24af40b082477f6322[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Wed Dec 16 18:51:25 2015 +0100

    Make MethodSemanticsAttributes public.

[33mcommit 78dcbbb6badb6e49830794771efadd05decc58f2[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Wed Dec 16 18:50:59 2015 +0100

    Add public ctor to DirectoryEntry

[33mcommit 5f8081a4c069f75683f2c3708a5b27da82176b5a[m
Merge: f70bfd5 fe3f691
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Tue Dec 15 22:40:52 2015 -0800

    Merge pull request #5007 from venkat-raman251/sys.numerics.vectors
    
    Adding Desktop to System.Numerics.Vectors

[33mcommit 7b83c8fdb331b781ea97253210f5e2b22daf52b8[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Dec 15 22:23:28 2015 -0800

    Add documentation describing package projects

[33mcommit f70bfd503bd232c76a0a3189f79f1a8d4bf4290c[m
Merge: 915af71 fa811f3
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Tue Dec 15 22:37:14 2015 -0800

    Merge pull request #4987 from ericstj/packaging
    
    Add packaging projects

[33mcommit 915af71cae0318e87d64dea232345b0f23036e60[m
Merge: a18997e c6bd623
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Wed Dec 16 10:03:45 2015 +0530

    Merge pull request #4988 from kapilash/requrl
    
    CurlHandler Fix for request uri during redirect

[33mcommit eb29e99d2cea3d279a1aec060ac4105a1befa588[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Wed Dec 16 03:48:37 2015 +0100

    Adds Portable PDB and PE/COFF Addendum specs to System.Reflection.Metadata

[33mcommit bd40b7bc4674a5f536f94f0f80b6c6304650ac87[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Wed Dec 16 03:32:05 2015 +0100

    Implements PE Debug Directory reader.

[33mcommit fe3f691de3fff352241576187489405320034dce[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Tue Dec 15 17:30:26 2015 -0800

    Adding Desktop to System.Numerics.Vectors

[33mcommit 67cd634fcbf85d08eac5be41e7d5b77c32e08f4d[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Tue Dec 15 17:16:22 2015 -0800

    Adding wrapper projects to RuntimeInformation for different targeting platforms to keep the TFS builds green.
    
    [tfs-changeset: 1557955]

[33mcommit fa811f379c45504a4b5fdae5b08a22a31202bea9[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Dec 3 13:23:55 2015 -0800

    Initial integration of packaging support
    
    Adds packages for a few libraries and integrates
    package build into the binary build process.

[33mcommit 05d55a550cc5e37b5967d4afa1fde700c4592ae8[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Mon Dec 14 16:45:33 2015 -0800

    Update buildtools to 1.0.25-prerelease-00134

[33mcommit c142f227c3a16a74b28c6932fa187c41867608ae[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Dec 15 09:38:38 2015 -0800

    Only set PackageTargetFramework when it is not already set.
    
    The repo dir.props default PackageTargetFrameowork for
    TargetGroups like net46 and netcore50.  We should not be
    overriding those.  The purpose of the setting in the project
    is to provide the default for the empty/null TargetGroup.

[33mcommit 337338047185c0ddf1e129fdf70ddb1a13e0e598[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Mon Dec 14 12:08:50 2015 -0800

    Fix generation of System.Runtime.InteropServices.RuntimeInformation

[33mcommit 3d5b12c039666aa36028a2374365b01b31694cca[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Dec 15 15:41:04 2015 -0800

    Port Microsoft.Win32.Registry.AccessControl

[33mcommit a18997ef20d3a1ddcf5d0c2517a1a19485f8f430[m
Merge: cdbd35f 0aaeb54
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Tue Dec 15 14:42:35 2015 -0800

    Merge pull request #4995 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit cdbd35f965ba599b34b8143a2bb02c06275d16ec[m
Merge: 648377a e45b6b3
Author: Pallavi Taneja <pallavit@users.noreply.github.com>
Date:   Tue Dec 15 14:17:16 2015 -0800

    Merge pull request #4975 from pallavit/Issue#4954
    
    Incorporate feedback comments raised while open sourcing System.IO.IsolatedStorage

[33mcommit 648377a1a6febb277523c27c0049d4598d1a3d45[m
Merge: 13fe515 6af0676
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Tue Dec 15 13:00:49 2015 -0800

    Merge pull request #4993 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 0aaeb54912848eecfb35b6bcaa4f6655b5da78a3[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Tue Dec 15 12:41:40 2015 -0800

    Adding packaging support for System.Buffers
    
    [tfs-changeset: 1557861]

[33mcommit 13fe515d624629a19950d25a8f70739864d06e24[m
Merge: c685244 ec46c48
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Tue Dec 15 12:15:24 2015 -0800

    Merge pull request #4982 from Priya91/runtimeinformation
    
    Support platform-dependent features in RuntimeInformation.

[33mcommit 6af0676275ab180cdd7c612b2297509a32ab7b56[m
Author: Alex Ghiondea <ghiondea.alexandru@microsoft.com>
Date:   Tue Dec 15 11:39:46 2015 -0800

    We have to hard code the TFM until we have a good way of obtaining it.
    
    [tfs-changeset: 1557838]

[33mcommit c685244fc248ed4a663d5c734cabe7cd9527d46e[m
Merge: 890c589 8c3b8fd
Author: Kurniawan Kurniawan <kkurni@gmail.com>
Date:   Tue Dec 15 10:55:52 2015 -0800

    Merge pull request #4958 from kkurni/unix-locale
    
    Replace windows API Locale to mapper for Non Windows build

[33mcommit 196ca26581d9353457fd2878f7656f985236c074[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Tue Dec 15 10:55:46 2015 -0800

    Porting System.Threading.AccessControl

[33mcommit 84334850713ec7d7cdcb322527e33984fae81e89[m
Author: Alex Ghiondea <ghiondea.alexandru@microsoft.com>
Date:   Tue Dec 15 10:43:03 2015 -0800

    Add the implementation of the TargetFrameworkName method on AppContext.
    
    This change does not contain the packaging work required to expose this API yet.
    
    [tfs-changeset: 1557809]

[33mcommit 0faa1f388bda40fc20c8bb108f42133efbfd4a84[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Sun Dec 13 16:41:25 2015 +0000

    Cookie Tests
    
    Added tests, especially for CookieContainer/Parser/Tokenizer/Collection

[33mcommit c6bd6230f268f49c09d04ea2d000eb71c6ecc57f[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Tue Dec 15 20:10:03 2015 +0530

    CurlHandler Fix for request uri during redirect
    
    CurlHandler is fixed to set the Response.RequestMessage.RequestUri to
    the redirected uri.

[33mcommit ec46c485b98226225e3e4fe7f4e981c024d2d980[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Mon Dec 14 16:07:43 2015 -0800

    Support platform-dependent features in RuntimeInformation.
    
    Modified RuntimeInformation type to work as expected on Desktop, .NET
    Native and ASP.NET vNext, and using the APIs available on each platform.

[33mcommit 890c58909dc2ed981e83f3e1a384824595a9a3cc[m
Merge: 1baacf9 82eaaaf
Author: Kurniawan Kurniawan <kkurni@gmail.com>
Date:   Mon Dec 14 17:49:38 2015 -0800

    Merge pull request #4959 from alexanderkozlenko/pr_sds_dc
    
    Remove dead code from System.Data.SqlClient

[33mcommit 1baacf9008a23fb3947cc715015f04fcbc16cb3a[m
Merge: 2c0c05a 48c4d86
Author: Ian Hays <ianha@microsoft.com>
Date:   Mon Dec 14 16:59:14 2015 -0800

    Merge pull request #4973 from ianhays/1355
    
    Re-enable DriveInfo VolumeLabel test

[33mcommit 6d15aa69e332866e6282994edfd2de5ca0192899[m
Author: Nate Amundson <naamunds@microsoft.com>
Date:   Mon Dec 14 18:21:49 2015 -0600

    Make unit tests async to work with 1 thread
    
    Currently, the tests System.IO.Tests.FileStream_SafeFileHandle.
    ThrowWhenHandlePositionIsChanged and System.Net.NetworkInformation.
    Tests.UnixPingUtilityTests.PacketSizeIsRespected hang when running on a
    Unix machine with 1 thread.  Declaring the tests async fixes this issue.

[33mcommit 8c3b8fdf309d5c1e2c2b2cc4695c4b64a339b0d3[m
Author: kkurni <kkurni@microsoft.com>
Date:   Mon Dec 14 16:08:15 2015 -0800

    Locale - Add spaces format for LocalMapper.Unix.cs
    
    For whatever reason Codeformatter doesn't format this list well.
    So I just added manual space beside the comma to make it less dense.

[33mcommit 2c0c05a634e222d18bf5a680686363e7921282d8[m
Merge: cd37c8d 122c5d0
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Dec 14 18:03:15 2015 -0600

    Merge pull request #4932 from eerhardt/CipherCloneIV
    
    SymmetricAlgorithms shouldn't clone the IV byte[] unnecessarily.

[33mcommit cd37c8db316083368acd61fd83f0b7073bd03486[m
Merge: 51391c4 b886463
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Mon Dec 14 15:34:20 2015 -0800

    Merge pull request #4898 from sokket/buffers
    
    Adding the initial implementation of the System.Buffers namespace.

[33mcommit 3c6e547dc96bcaab7951aab0e77564669cc6c80a[m
Author: kkurni <kkurni@microsoft.com>
Date:   Mon Dec 14 14:31:03 2015 -0800

    Locale - Use  File base switch between unix and windows.
    
    After discussion, we decided to switch using File base .Unix and .Windows instead adding abtraction. The reason is to make it simpler as we don't really need abtraction at this moment.
    
    I also rename Locale Interop to Locale as interop call only used for Windows.
    And I put LocaleMapper.Windows.cs inside Interop folder to keep convention.

[33mcommit 51391c46e293b8c316d685b9a4fef81ed524b2fc[m
Merge: bbe3976 9d80601
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Dec 14 14:28:31 2015 -0800

    Merge pull request #4947 from mellinoe/consolidate-facades
    
    Consolidate partial/full facade projects

[33mcommit bbe3976eac31957a129dfe91eaee18450ef22ce9[m
Merge: b334330 c932c47
Author: Cory Rivera <corivera@microsoft.com>
Date:   Mon Dec 14 14:19:42 2015 -0800

    Merge pull request #4978 from dotnet/corivera_DataReaderCloseExceptionFix
    
    Add extra exception catching in FinishExecuteReader

[33mcommit b886463294d307e118f1760054c0af2ccf6949db[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Tue Dec 1 15:49:30 2015 -0800

    Adding the initial implementation of the System.Buffers namespace.
    This includes the initial ArrayPool for buffered Arrays as well
    as Unit Tests for verifying the pool's usage. This is the initial
    fix for issue #4547. Note that this is not the final implementation
    but rather the initial implementation that will be iterated on in
    the coming weeks.

[33mcommit 9d806012e71f628f67062bbc6c1c7127746e1864[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Dec 14 13:33:14 2015 -0800

    Clean up TargetingPackReference ItemGroup's

[33mcommit c932c47a60d946e9725f203b7beef754e791ace1[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Mon Dec 14 13:12:47 2015 -0800

    Add extra exception catching in FinishExecuteReader, so that exceptions in the catch block don't hide the original exception.

[33mcommit cde60ebe2d99f8b8a35550e22a3037c386bd5d07[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Dec 14 11:47:14 2015 -0800

    Clean up spacing and formatting of project file conditions

[33mcommit e45b6b3ef5ab6a9b887656531b60d4c4f3a76d96[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Mon Dec 14 11:30:13 2015 -0800

    Fix Issue#4954

[33mcommit 48c4d86581c21745b6a7ff6bc2cc210d4452f937[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Mon Dec 14 11:06:54 2015 -0800

    Re-enable DriveInfo VolumeLabel test
    
    resolves #1355

[33mcommit f39d73a00d80c5552c3c88a6b82521c71fecf568[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Dec 11 12:03:31 2015 -0800

    Consolidate facade project files

[33mcommit b334330a1a2223543ff810a7ec2568b81ce8fea9[m
Merge: 673e69b f92e75a
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Sun Dec 13 09:31:16 2015 -0600

    Merge pull request #4747 from eerhardt/CompareOptions
    
    Enabling Globalization tests that currently pass on Unix.

[33mcommit 8b09554b268e62c03a388d72461cbb9ca42f9a1c[m
Author: Alexander Kozlenko <alexander.kozlenko@live.com>
Date:   Sat Dec 12 23:37:04 2015 +0200

    Remove dead code from System.Private.DataContractSerialization

[33mcommit f92e75a41dc0c39262750db426dbc0b4ea5a1d14[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Dec 8 21:14:00 2015 -0600

    Fixing and enabling more Globalization tests now that String Comparison is implemented on Unix.  I also added a few more test cases.

[33mcommit 87c00a7b370acd67f32b33f1bc5b7d4290117451[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Nov 19 18:13:50 2015 -0600

    Enabling Globalization tests that currently pass on Unix.

[33mcommit 673e69bf5e4558162d59d94dc0f09197c7f996e6[m
Merge: 3f76d23 0db8f7b
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Sat Dec 12 10:26:48 2015 -0600

    Merge pull request #4948 from eerhardt/TripleDES
    
    Implement TripleDES on Windows using CNG and on Unix using OpenSsl.

[33mcommit 122c5d02bf728545af48c6b2bd49272c0cc735ea[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Dec 10 17:09:57 2015 -0600

    SymmetricAlgorithm classes shouldn't clone the IV byte[] unnecessarily.
    
    Since the ICryptoTransform classes clear out its IV byte[] upon Dispose(), it needs to clone the IV byte[] that it gets from callers. However, we clone it unnecessarily in certain situations. This fixes those situations so the byte[] is only cloned once.
    
    Also, fixing a small issue with the ArgumentExceptions thrown from calling CreateEncryptor and CreateDecryptor on AesCng and TripleDESCng.  The name of the parameters are rgbKey and rgbIV, so the strings passed in to the ArgumentException should match.

[33mcommit 0db8f7bd7aeb2c679af6c48d86d36034888015c9[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Sat Dec 12 09:22:44 2015 -0600

    Adding a TripleDES test that reuses the encryptor and decryptor objects in multilpe transforms.

[33mcommit 3f76d23c95c1bc59654275c5456653a98e81a1b8[m
Merge: ec8ca57 92d15ff
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Dec 11 22:13:47 2015 -0800

    Merge pull request #4938 from dsgouda/System.IO.IsolatedStorage
    
    Creating src dir for System.IO.IsolatedStorage

[33mcommit ec8ca57d72f11d59effd593d7a7c0976f3fcc73b[m
Merge: 8844247 e68a86a
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Dec 11 21:43:28 2015 -0800

    Merge pull request #4957 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 84f65e1124512f9295be78311d4003e1b12d7a36[m
Author: kkurni <kkurni@microsoft.com>
Date:   Fri Dec 11 21:10:27 2015 -0800

    Add LocaleWindowsApiHelper

[33mcommit 8844247fd3c2a11e1681ccec98ec82ce86cbe306[m
Merge: 1395a9d fff226c
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Dec 11 20:30:35 2015 -0800

    Merge pull request #4930 from alexanderkozlenko/pr_spuc_dc
    
    Remove dead code from System.Private.Uri

[33mcommit 94bb94627a623bf656c43edcd2e656c98460f182[m
Author: kkurni <kkurni@microsoft.com>
Date:   Fri Dec 11 19:59:24 2015 -0800

    Replace windows API Locale to mapper for Non Windows build

[33mcommit 1395a9dd15416a03904c8bc9ca00ead28f60c84a[m
Merge: 4da1bea 6978900
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Dec 11 21:39:07 2015 -0500

    Merge pull request #4952 from jashook/exclude_test
    
    Exclude two tests due to a JIT integration bug.

[33mcommit e68a86a2c9da90aba69ac7ec1878191152f0b8f2[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Fri Dec 11 18:23:08 2015 -0800

    https://github.com/dotnet/corefx/issues/2302
    
    [tfs-changeset: 1557127]

[33mcommit 92d15ff309f702c04e17260fe8d0ec255f8d6de9[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Fri Dec 11 16:57:25 2015 -0800

    Removed usage of [System.Security.*] attrs

[33mcommit 82eaaafa5b7a1d9569a95baa15077b36516fc3ba[m
Author: Alexander Kozlenko <alexander.kozlenko@live.com>
Date:   Sat Dec 12 02:37:25 2015 +0200

    Remove dead code from System.Data.SqlClient

[33mcommit 4da1bea56e5a575873ecd5f4469acd418c1d0fdb[m
Merge: 598ef5d c571454
Author: Joel Hendrix <jhendrix@microsoft.com>
Date:   Fri Dec 11 16:28:00 2015 -0800

    Merge pull request #4951 from jhendrixMSFT/master
    
    Make System.Runtime.Extensions.Tests copy its product assembly to OutDir

[33mcommit 6978900405a9cf3c71b148bb42a02ed6b125300c[m
Author: jashook <jashoo@microsoft.com>
Date:   Fri Dec 11 16:03:45 2015 -0800

    Exclude two tests due to a JIT integration bug.

[33mcommit 598ef5d3f23dae3fb969d9bb1e27958359a97b86[m
Merge: 0341b36 ed8693b
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Dec 11 15:29:13 2015 -0800

    Merge pull request #2591 from justinvp/cookiecollection
    
    Cleanup CookieCollection

[33mcommit c5714549f4fe9fd818a417339c70a456468e6a7f[m
Author: Joel Hendrix <jhendrix@microsoft.com>
Date:   Fri Dec 11 15:03:12 2015 -0800

    Make System.Runtime.Extensions.Tests copy its product assembly to OutDir.
    
    Building System.Runtime.Extensions.Tests.csproj doesn't copy it product
    assembly to OutDir (like the other test projects do) which breaks cloud
    testing.  Add the necessary build metadata to facility the copy.

[33mcommit 0341b36992e1d8adfe32fed78bb099d3e26b87f8[m
Merge: 9365944 f1a4b51
Author: Joel Hendrix <jhendrix@microsoft.com>
Date:   Fri Dec 11 14:57:38 2015 -0800

    Merge pull request #4943 from jhendrixMSFT/master
    
    Use build tools task CopySupplementalTest data for copying test data.

[33mcommit 93659449ea1b14a4e53f87df70569810df16200f[m
Merge: 26faa18 5e0e3c5
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Dec 11 13:46:49 2015 -0800

    Merge pull request #4939 from dsgouda/Microsoft.CSharp
    
    Addressed inverted condition for UNIX

[33mcommit f1a4b51ffee958304d44b56296ec7f7e73e55549[m
Author: Joel Hendrix <jhendrix@microsoft.com>
Date:   Fri Dec 11 13:16:09 2015 -0800

    Use build tools task CopySupplementalTest data for copying test data.
    
    The task for copying test data has been consolidated into build tools (see
    build tools PR#363) and first appeared in build tools build 133. Update
    projects that copy test data to use the new task.

[33mcommit 0fea3d18ef9668aad1dbbbff7e41d84d62a2ff7a[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Dec 9 22:49:35 2015 -0600

    Implement TripleDES on Windows using CNG and on Unix using OpenSsl.
    
    Fix #4845

[33mcommit 26faa1892c294390487d9f617b6e35ab70a56ec4[m
Merge: a097d67 b2b916e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Dec 11 15:53:42 2015 -0500

    Merge pull request #4936 from stephentoub/use_valuetask
    
    Update System.Xml.ReaderWriter to use System.Threading.Tasks.Extensions

[33mcommit 5e0e3c58f681f0aa4aa430a5d25d05c82280e20a[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Fri Dec 11 12:26:48 2015 -0800

    Modified Csharp to build on windows targets only

[33mcommit a097d6762b1ccf6956b5879cfa8efe4f55b7b578[m
Merge: f9da3b4 dd8f820
Author: Davis Goodin <dagood@users.noreply.github.com>
Date:   Fri Dec 11 12:11:12 2015 -0600

    Merge pull request #4926 from dagood/upgrading-validate
    
    Add dependency correction target that reuses validation rules, plus documentation

[33mcommit 6dcf416a2ca769f35d2cea97e9ce99643696bb4e[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Fri Dec 11 10:01:18 2015 -0800

    Addressed inverted condition for UNIX

[33mcommit 82b7f7785262819e1ed6f730914af4aa961fac3f[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Wed Dec 9 12:20:33 2015 -0800

    Creating src dir for System.IO.IsolatedStorage

[33mcommit dd8f820304c72d1f90ee1a471b2a1c466616b47f[m
Author: dagood <dagood@microsoft.com>
Date:   Thu Dec 10 11:16:38 2015 -0600

    Update buildtools, add updating-validate target, add documentation.

[33mcommit b2b916ea844bf4eb456922d4d4d123ec4d89c062[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Dec 10 22:43:31 2015 -0500

    Update System.Xml.ReaderWriter to use System.Threading.Tasks.Extensions
    
    Delete the old internal TaskValue and instead use the new ValueTask from the new System.Threading.Tasks.Extensions library.

[33mcommit 6f6303f0356be4d2dd4ac117373f1e37f8752248[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Dec 10 22:34:07 2015 -0500

    Update package validation to rc2-23610

[33mcommit f9da3b4af08214764a51b2331f3595ffaf162abe[m
Merge: 2a92e4a 185fac5
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Dec 10 18:55:22 2015 -0800

    Merge pull request #4917 from ianhays/4895
    
    Remove custom header writers in System.IO.Compression

[33mcommit 185fac5aa8fdc8a6b95cae22473e14fd68d04dc4[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Dec 9 19:33:46 2015 -0800

    Remove custom header writers in System.IO.Compression
    
    Now that we removed the managed implementations for compression we can remove the manual header writing/reading in favor of calling the zlib header setter/getter. I also cleaned up the constructors a bit and removed some now dead code.
    
    resolves #4895

[33mcommit 2a92e4affaec363c2b3edf239fd5265a84470389[m
Merge: 4c241d9 3244d1a
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Dec 10 16:17:16 2015 -0800

    Merge pull request #4862 from andschwa/callsite-type
    
    Fix CallSite type problem

[33mcommit 4c241d9d3f5d3df3ebdd1f09862c7d6e414daf43[m
Merge: 174c8ca 3353dea
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Dec 10 18:40:59 2015 -0500

    Merge pull request #4879 from ianhays/flushbug
    
    Modify System.IO.Compression.DeflateStream.Flush to actually flush.

[33mcommit fff226c8ce1d69c879098986d44963da1f7bb87b[m
Author: Alexander Kozlenko <alexander.kozlenko@live.com>
Date:   Fri Dec 11 00:51:05 2015 +0200

    Remove dead code from System.Private.Uri

[33mcommit 3353dea87b95a8b4e5e9909b48ac0ad8d5a38180[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Dec 10 13:22:49 2015 -0800

    Response to PR feedback

[33mcommit 174c8ca6658c464b4fa40f4a2459278a38f40fd2[m
Merge: ba64486 58e2f6e
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Dec 10 12:33:09 2015 -0800

    Merge pull request #4878 from mellinoe/facade-port
    
    Add facade projects for all supported platforms

[33mcommit ba644864d6950688216f2018733cdcc822720595[m
Merge: 1266896 8bff5d8
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Dec 10 12:55:58 2015 -0600

    Merge pull request #4924 from eerhardt/BasicCipherDispose
    
    Dispose pattern on BasicSymmetricCipher.

[33mcommit 58e2f6e862060039e1ebad727d75c87703fdb2f2[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Dec 9 16:10:27 2015 -0800

    Add facade projects for all supported platforms
    
    These facade project files were generated using a porting tool I wrote,
    which examined some information from our internal build and created
    appropriate project files. I have also re-generated all of the .builds
    files so that they import the facade projects in the correct manner.

[33mcommit a399fca70c747f31b204e8bfeaec8eaf53b124a0[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Mon Dec 7 17:46:16 2015 -0800

    Modify System.IO.Compression.DeflateStream.Flush to actually flush.
    
    The existing implementation of Flush and FlushAsync for System.IO.Compression.DeflateStream doesn't actually flush - it only checks that the stream isn't disposed. This commit modifies Flush to Flush and also adds unit tests around the new functionality.
    
    A more detailed discussion is available at #3669

[33mcommit 8bff5d88687fcad38fe37d0d345cee6c1da004cd[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Dec 10 11:11:52 2015 -0600

    Dispose pattern on BasicSymmetricCipher.
    
    BasicSymmetricCipher should implement the Dispose pattern correctly.

[33mcommit 126689606651692aa12cd4fddd1791970cbe829a[m
Merge: d30e663 ad55894
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Dec 10 11:40:04 2015 -0600

    Merge pull request #4921 from eerhardt/FixTripleDESCng
    
    Fix CngProvider constructors for AesCng and TripleDESCng

[33mcommit d30e663afa7398c6e9ab14e7a546c43135274a8b[m
Merge: 5230ad0 80646bf
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Dec 10 08:07:18 2015 -0800

    Merge pull request #4922 from mmitche/disable-mac-temporarily
    
    Disable mac temporarily while machine counts are a problem.

[33mcommit 80646bf71880170fe6e2eaa90ec521800356a9c0[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Dec 10 08:03:53 2015 -0800

    Disable mac temporarily while machine counts are a problem.

[33mcommit ad558943e716dc588c40428cbd9dd1a7ee8af20c[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Dec 10 09:42:42 2015 -0600

    The constructors for AesCng and TripleDESCng that take a CngProvider don't use the CngProvider parameter and instead hard-code the SoftwareKey storage provider.
    
    I updated the constructors to use the passed in provider.

[33mcommit 5230ad0d7b4f303a7a66438a528de309c02e9806[m
Merge: 40dec31 46acd47
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Dec 10 08:09:18 2015 -0500

    Merge pull request #4918 from weshaggard/RemoveRestorePackagesFromProjects
    
    Remove RestorePackages=true from S.Diagnostics.Tracing.Tests project

[33mcommit 46acd47ce98db1a6cc3656ab8275c025314a2a0b[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Wed Dec 9 23:38:34 2015 -0800

    Remove RestorePackages=true from S.Diagnostics.Tracing.Tests project

[33mcommit 40dec317928786115db42819f3542c0974fde0b4[m
Merge: 47bd93c 4e97a3e
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Wed Dec 9 22:35:14 2015 -0800

    Merge pull request #4889 from dsgouda/System.Runtime
    
    Compiling System.Runtime lib using netcore50

[33mcommit 47bd93cc17efa44061a1503e6ae7b16ebf5ea224[m
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Wed Dec 9 22:22:36 2015 -0800

    Update .builds sample to remove dangling ItemGroup tag

[33mcommit bf8f5453399d6c89e131790ea4f0eb9594ab61fa[m
Merge: 6fa2783 9e0a7cf
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Dec 9 22:05:53 2015 -0500

    Merge pull request #4913 from stephentoub/fix_socket_select_test
    
    Fix two issues in SelectAndPollTests

[33mcommit 6fa2783d97863853ac9bd7e71f8f6d46f9227556[m
Merge: e580450 e3651d1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Dec 9 22:05:04 2015 -0500

    Merge pull request #4914 from stephentoub/console_encoding
    
    Separate ConsolePal.GetCharset into a reusable Common helper

[33mcommit e58045065c22ea8fd5cdbbc56ef5dba8c015af4c[m
Merge: 7f09d21 d9d41dc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Dec 9 20:26:12 2015 -0500

    Merge pull request #4912 from eerhardt/RemoveDES
    
    Remove DES and RC2 code

[33mcommit 4e97a3e23631ff1ee5f9f8cc51ee645fdc450355[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Fri Dec 4 15:19:48 2015 -0800

    Compiling System.Runtime lib using netcore50

[33mcommit 7f09d21ec4c566d23bde3851f3e0abfb5d10c5bd[m
Merge: 4025aa6 98e7d90
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Dec 9 19:53:55 2015 -0500

    Merge pull request #4910 from davidsh/winhttphandler_todo
    
    Optimize error handling around chain.Build in WinHttpHandler

[33mcommit e3651d17d2d560c3bf1403dd900dd0267b35bd0a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Dec 9 17:44:45 2015 -0500

    Separate ConsolePal.GetCharset into a reusable Common helper
    
    To allow it to be used from other components.

[33mcommit 4025aa695fba8033670d3bfcfdb3ec6d17479968[m
Merge: 2e3b7b1 d5490dd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Dec 9 18:51:56 2015 -0500

    Merge pull request #4893 from stephentoub/islittleendian
    
    Implement BitConverter.IsLittleEndian dynamically

[33mcommit 2e3b7b107f295e3943ba8a81b485867adc571854[m
Merge: a5533d1 0a1eeaa
Author: Davis Goodin <dagood@users.noreply.github.com>
Date:   Wed Dec 9 17:04:32 2015 -0600

    Merge pull request #4894 from dagood/dagood/remove-lockfiles
    
    Remove lockfiles, update dependency versions, and add dependency upgrade/validation tooling

[33mcommit 9e0a7cf5da88b8239347287b48fe4d9f30b819ff[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Dec 9 17:16:33 2015 -0500

    Fix two issues in SelectAndPollTests
    
    1. The timeout value used in the tests was written assuming the unit was milliseconds, but microseconds is actually used.  This meant we were passing in a timeout of 5 milliseconds instead of 5 seconds.  Changed to use the right value.
    
    2. The SelectRead_Multiple_Success test attempts to use Select as a form of "when all", passing in two sockets and expecting that it'll find both have data available.  But the data is available asynchronously from the send, and Select returns when at least one of the sockets is readable.  As a result, there's a race condition that results in the test failing sporadically: on my machine, it fails ~15 out of every 1000 runs.  I've fixed the test by looping until either the timeout is reached or we find both sockets available, whichever comes first.

[33mcommit 0a1eeaad0c4fdd92a19d271795293e752cc10a97[m
Author: dagood <dagood@microsoft.com>
Date:   Tue Dec 8 14:03:09 2015 -0600

    Add validation and upgrade targets, powered by new buildtools. Make batch restore find all project.json files.
    Also removes RestorePackages -> true in many csproj files. It was causing redundant work.

[33mcommit 0d881222d8c3269157639e2e67056e5a83aad834[m
Author: dagood <dagood@microsoft.com>
Date:   Tue Dec 8 13:58:33 2015 -0600

    Change all project.json files to validate. Remove lockfiles from source control and add to gitignore.
    A few new references to pick up changes that happened over time.

[33mcommit a5533d1426b36fff4c665997a50be1e597713d21[m
Merge: 7558968 849bf9c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Dec 9 17:22:01 2015 -0500

    Merge pull request #4908 from stephentoub/principalwindows_win32exception
    
    Update System.Security.Principal.Windows to use Win32Exception

[33mcommit d9d41dc7f55e16ab828efbec1745b089a8b9f8b3[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Dec 9 16:01:52 2015 -0600

    Remove DES and RC2 code since they are not supported on .NET Core and there are no contracts for them.

[33mcommit 98e7d90e143fd2e8d046a2aa0fcb04072cb4134f[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Wed Dec 9 13:45:39 2015 -0800

    Optimize error handling around chain.Build in WinHttpHandler
    
    This was a TODO item from #2165 suggested by @bartonjs.
    
    The X509CertificateChain.Build() method returns a boolean indicating if
    there were errors building the chain. It's more performant to check that
    instead of inspecting the individual fields in the chain.

[33mcommit 755896840e9bf4ada44306c22d30e947fece645b[m
Merge: cc6aff0 e146c5a
Author: David Mason <davmason@microsoft.com>
Date:   Wed Dec 9 13:15:40 2015 -0800

    Merge pull request #4843 from davmason/master
    
    Porting EventSource tests to CoreFX

[33mcommit cc6aff066d47a48048dba6da3b3b6b0aa5c62a82[m
Merge: 37b0db5 b921e24
Author: David Shulman <david.shulman@microsoft.com>
Date:   Wed Dec 9 12:58:55 2015 -0800

    Merge pull request #4906 from davidsh/http_version
    
    Support HttpRequestMessage.Version in WinHttpHandler

[33mcommit 849bf9cd771e4279eb16b164b9cdce7c000e05bc[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Dec 9 15:44:14 2015 -0500

    Use Win32Exception instead of P/Invoking to FormatMessage

[33mcommit 98640db03767253a486d28bf4a1ef9102f3762e1[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Dec 9 15:38:51 2015 -0500

    Throw Win32Exception instead of Exception in System.Security.Principal.Windows

[33mcommit e146c5a67090c253fdaef54c7105dcf84c59e3db[m
Author: David Mason <davmason@microsoft.com>
Date:   Mon Dec 7 10:43:23 2015 -0800

    Address PR feedback.
    
    Updating tests so they run sequentially using the XUnit DisableParallelTests assembly attribute instead of a global lock.
    
    Change all instances of Console.WriteLine to Debug.WriteLine.
    
    Move the DisableParallelTests assembly attribute to a separate file.
    
    Change Debug.WriteLine to use the correct overload in some cases.
    
    Remove ExceptionAssert.cs, it was functionality we used when the tests were running on MSTest, but it exists in XUnit as Assert.Throws.
    
    Clean up the #if false use throughout the tests.
    
    Indicate that USE_ETW is meant for commenting out code until TraceEvent is available.
    
    Change all uses of #if USE_ETW to indicate that they are used to comment out code until TraceEvent is available on CoreCLR.
    
    Remove unnecessary region.
    
    Fix typo in Listeners.cs
    
    Fix typo in EtwListener
    
    Remove Assert.Inconclusive, which is an artifact from when we ran tests on MSTest.
    
    Ran codeformatter on the tests.
    
    Add XUnitAssemblyAttributes.cs to System.Diagnostics.Tracing.Tests.csproj.
    
    Fix Test_WriteEvent_InvalidCalls. The EventSource was not disposed at the end of the test.
    
    Removing a test that was only for the nuget package EventSource.
    
    Remove unecessary TODOs and clean up tests.
    
    Add the ActiveIssue attribute for the tests that are failing on linux/OSX.
    
    Add the ActiveIssue attribute to Test_Write_Fuzzy.
    
    Remove unecessary PlatformID.Linux since PlatformID.AnyUnix already covers it.

[33mcommit dfae3053e4c92f301ac7b9e40daee5128856673b[m
Author: David Mason <davmason@microsoft.com>
Date:   Fri Dec 4 14:44:32 2015 -0800

    Porting EventSource tests to CoreFX
    
    Porting EventSource tests to CoreFX
    
    Updating System.Diagnostics.Tracing.Tests.csproj to not include the baselines.
    
    EventSource tests will timeout after waiting for enable for 5 seconds rather than waiting indefinitely.
    
    Disable parallelization in the tests the right way.

[33mcommit b921e2493feba902ca4394f77a4406ec20810d8e[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Wed Dec 9 11:35:43 2015 -0800

    Fix tests to use unknown HTTP version
    
    The default value for HttpRequestMessage.Version is Version(1,1). So, we
    need to set something different to test the "unknown" version.

[33mcommit f48989bbe10dd4b24a9e3b085672c30b5251cda6[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Wed Dec 9 11:11:54 2015 -0800

    Support HttpRequestMessage.Version in WinHttpHandler
    
    WinHttpHandler was currently ignoring the `HttpRequestMessage.Version`
    property and was always sending out requests using 'HTTP/1.1' which is the
    default for winhttp.
    
    This fix now will look at the request message `Version` property and
    send out the request using either 1.0 or 1.1.  If neither of these
    versions are specified, then the request is sent out using the default
    winhttp version (which is currently 1.1 as of Windows 10).
    
    Note: The .NET Framework (Desktop) will throw an exception if neither
    1.0 nor 1.1 version is specified.  Currently CoreFx including NETNative,
    WinHttpHandler and CurlHandler will simply use a default instead of
    throwing. While this is different behavior than Desktop, it is more
    desirable in the long run.
    
    There is a separate issue #4870 to add HTTP/2.0 support to WinHttpHandler.
    
    Fixes #4754

[33mcommit 37b0db5e65779fc83bc253bc48f683af8f53eeab[m
Merge: a87ee02 9acd229
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Dec 9 13:53:59 2015 -0500

    Merge pull request #4904 from ellismg/lock-deps
    
    Lock some unlocked project.lock.json files

[33mcommit 9acd2297c0f35f4dd81a093a3813a8ad242be323[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Wed Dec 9 10:11:43 2015 -0800

    Lock some unlocked project.lock.json files

[33mcommit a87ee02ff2aec883ee50d9e69cbeb53168e7ed4c[m
Merge: d8508b2 9343457
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Dec 9 11:33:40 2015 -0500

    Merge pull request #4903 from stephentoub/fix_test_names
    
    Fix a few typos in test names

[33mcommit 934345749688a5c1911e85987bef2e1b9596afd0[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Dec 9 11:21:08 2015 -0500

    Fix a few typos in test names

[33mcommit d8508b20caa5fe523f1552cde174cb9ba5c31730[m
Merge: 791ed76 c0ded7d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Dec 9 11:10:50 2015 -0500

    Merge pull request #4876 from eerhardt/CheckIo
    
    Move the IO check for EINTR down into the native shims.

[33mcommit 791ed760638059109339e3f6f69b3a3719374941[m
Merge: 0caed32 b20a16c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Dec 9 11:06:19 2015 -0500

    Merge pull request #4888 from davidsh/sockets
    
    Add System.Net.Sockets, SocketOptionName.ReuseUnicastPort

[33mcommit 0caed32c9caaef1b71a0a7f56cfce9ce1b392b39[m
Merge: 5d42dae ee22ccf
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Dec 9 11:04:02 2015 -0500

    Merge pull request #4892 from dotnet/stephentoub-patch-1
    
    Add "error:" prefix to error messages from run-test.sh

[33mcommit 1722d5ab7b414d65dcd20c811e785b9da2e87cb7[m
Author: Alfred White <AlgorithmsAreCool@gmail.com>
Date:   Wed Dec 9 08:27:03 2015 -0600

    Fix SqlParameter Scale and Precision inheritance
    
    The .Net implementation relied on the interfaces to access the
    properties on the child class. With the interfaces removed, the child
    was not updated to override the member, so getting or setting Scale or
    Precision was broken if the object was cast to DbParameter. As noted by
    @mgravell in issue dotnet/corefx#1612
    
    This should correct the behavior, but I'm curious why the parent member
    are not abstract, instead of stubs.

[33mcommit c0ded7d939c7c8ae702586f57011265686879537[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Dec 4 17:46:04 2015 -0600

    Move the IO check for EINTR down into the native shims.
    
    This allows for the managed code to be cleaner, and it can easily return SafeHandle objects from P/Invoke methods.
    Also, it fixes the problem where some code wasn't looping on Interop.CheckIo, which is a problem when EINTR is returned.
    
    Fix #3168

[33mcommit b20a16c6f10c29e364a60102ded9e876cba00526[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Dec 8 19:05:21 2015 -0800

    Address PR feedback 2

[33mcommit ee22ccfedadf9d3a2fd44dae0a28ffef65d5eba9[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Dec 8 18:03:15 2015 -0500

    Add "error:" prefix to error messages from run-test.sh
    
    Without these, it can be difficult to spot the cause of an error in an output log.

[33mcommit d5490dd89d5f68f73e80bd8bb130f1c45fd5e459[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Dec 8 18:26:33 2015 -0500

    Implement BitConverter.IsLittleEndian dynamically
    
    It's currently hardcoded under a BIGENDIAN ifdef that we don't set anywhere.  With this change, it should now be correct on a big endian platform when we eventually run on one.

[33mcommit 1000c225694b2a5e368a888f8bb99d7613ff2876[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Dec 8 15:08:27 2015 -0800

    Adjust tests for Windows vs. non-Windows platforms

[33mcommit 5d42dae73a4b935c9ab5550a51f22352492c6259[m
Merge: 89e1497 68c3b6a
Author: Joel Hendrix <jhendrix@microsoft.com>
Date:   Tue Dec 8 14:35:09 2015 -0800

    Merge pull request #4885 from jhendrixMSFT/master
    
    Update build tools to latest build to pick up fixes.

[33mcommit b3097031439058c6ae1d86c63ac4278c0d4c1efe[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Dec 8 14:16:43 2015 -0800

    Remove unneeded 'using' statement

[33mcommit 848bcba62167354bfdda1683edd323f0a17e36c9[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Dec 8 14:11:23 2015 -0800

    Address PR feedback
    
    * Use Capability and RuntimeInformation patterns
    * Add sample PowerShell setup scripts
    * Add tests for non-Window10 platforms including *NIX

[33mcommit 89e14972eaf9f61354ae217c1fd4f416b60be48a[m
Merge: 085865e 6ef513f
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Tue Dec 8 13:17:13 2015 -0800

    Merge pull request #4860 from dsgouda/libporting
    
    Creating src dir for System.AppContext

[33mcommit 085865e6f375d11dd1d5dd815b251356b0f88d2b[m
Merge: 1c1bb15 973203e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Dec 8 14:33:24 2015 -0500

    Merge pull request #4861 from stephentoub/unix_useshellexecute
    
    Add ProcessStartInfo.UseShellExecute support on Unix

[33mcommit 1c1bb1543b6f870760c58e0d3b78cf80c91ce0e7[m
Merge: 8610df7 b4d81a4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Dec 8 14:08:04 2015 -0500

    Merge pull request #4886 from weshaggard/FixVSIssues
    
    Force .NET 4.5 version of build tools task library

[33mcommit 362011ea0a350c5a37a61c45178d8eb81fb7ca19[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Dec 7 15:26:22 2015 -0800

    Add System.Net.Sockets, SocketOptionName.ReuseUnicastPort
    
    As per the System.Net.* API review dotnet/apireviews#21 adding back
    the SocketOptionName.ReuseUnicastPort enum value. Also, reserving
    SocketFlags.MaxIOVectorLength=16 enum value to prevent future conflicts.
    
    Part of #4732

[33mcommit b4d81a485b3964602d8ce4157a3b02e7b9dad6b8[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Tue Dec 8 09:25:38 2015 -0800

    Force .NET 4.5 version of build tools task library
    
    Fixes https://github.com/dotnet/corefx/issues/4883
    Fixes https://github.com/dotnet/corefx/issues/4884

[33mcommit 8610df7d9743e9217c62bbedb1c07bfcb2a09292[m
Merge: 5ddb1d4 4945069
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Dec 8 10:38:16 2015 -0500

    Merge pull request #4857 from stephentoub/task_extensions
    
    Add new System.Threading.Tasks.Extensions library

[33mcommit 49450694f9ba3b45dc16fcad8a19c658c3bbe38f[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Dec 8 09:39:48 2015 -0500

    Address PR feedback
    
    - Throw an exception when ctor is passed null task

[33mcommit 5ddb1d4db82761091ca312a573413a2ca1bb2053[m
Merge: 4d4f489 36270c6
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Dec 7 18:46:04 2015 -0800

    Merge pull request #4868 from davidsh/nosync
    
    Remove sync APIs from SslStream and NegotiateStream

[33mcommit 4d4f48936b57a9800b48106240ed991b81d9cbef[m
Merge: 12e5d3d 2a98428
Author: Ian Hays <ianha@microsoft.com>
Date:   Mon Dec 7 20:47:57 2015 -0500

    Merge pull request #4874 from ianhays/removemanagedcompression
    
    Removed Managed Inflater/Deflater code in System.IO.Compression

[33mcommit 2a984283daaccd14ce54b4b2131a0aa5ba0d9661[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Mon Dec 7 16:14:21 2015 -0800

    Removed Managed Inflater/Deflater code in System.IO.Compression
    
    Now that we always use the zlib implementations for inflation/deflation, the managed ones may be safely removed.
    
    resolves #4451

[33mcommit 12e5d3d8637d6579e3c32ebe00c4a48a7e0ca1b1[m
Merge: fbe4f27 133e84b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Dec 7 18:17:39 2015 -0500

    Merge pull request #4863 from stephentoub/boost_sre_cc
    
    Boost System.Runtime.Extensions code coverage

[33mcommit 68c3b6acb5d44e3ada099ac523c600f41672322c[m
Author: Joel Hendrix <jhendrix@microsoft.com>
Date:   Mon Dec 7 14:17:42 2015 -0800

    Update build tools to latest build to pick up fixes.

[33mcommit 6ef513fd310ea4a15cef35a4e1a756a6f58b2c1c[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Fri Dec 4 15:19:48 2015 -0800

    Creating System.AppContext src

[33mcommit 36270c6ea4741054b48b33be06dafee3438f07b3[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Dec 7 13:09:09 2015 -0800

    Remove sync APIs from SslStream and NegotiateStream
    
    As per the System.Net.* API review dotnet/apireviews#21 removing
    the sync versions of the AuthenticateAsClient, AuthenticateAsServer
    methods from the SslStream and NegotiateStream classes.
    
    Part of #4732

[33mcommit 133e84bb177a5e3eec94f8331e2d0fd654025237[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Dec 7 15:04:18 2015 -0500

    Boost System.Runtime.Extensions code coverage
    
    From ~70% to ~80%.  Deleted some dead code in the process.

[33mcommit fbe4f279c524dc3c13187907d17dd0ab114f0189[m
Merge: 5c1d234 6910c63
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Dec 7 14:59:26 2015 -0500

    Merge pull request #4858 from stephentoub/move_rps
    
    Move RemoveRelativeSegments to Path.Unix.cs

[33mcommit 3244d1aa4b6e8652fdc25e0f08358aad1bf19691[m
Author: Andrew Schwartzmeyer <andschwa@microsoft.com>
Date:   Mon Dec 7 11:35:27 2015 -0800

    Fix CallSite type problem
    
    For GitHub issue #3556

[33mcommit 5c1d234a83dcaaef40dcb62ce121d8f444433e86[m
Merge: 2c8ce52 d3d5a4b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Dec 7 14:23:12 2015 -0500

    Merge pull request #4859 from stephentoub/remove_lld_enum
    
    Remove unused LowLevelDictionaryWithIEnumerable

[33mcommit 2c8ce526bf9fbb466181397269a3b74b728d6978[m
Merge: 6ebc925 2fbeaff
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Mon Dec 7 10:53:14 2015 -0800

    Merge pull request #4334 from Priya91/ri
    
    Add new apis proposed in #4137 to System.Runtime.InteropServices.RuntimeInformation

[33mcommit 973203e4b751331238516ba5ba9baacbe0fb0ddd[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Dec 7 12:51:28 2015 -0500

    Add ProcessStartInfo.UseShellExecute support on Unix
    
    Implemented via the existing fork/execve mechanism, but using /bin/sh as the target filename.

[33mcommit d3d5a4b972847a5712fee45f39b93238f3f22fc5[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Dec 7 10:32:11 2015 -0500

    Remove unused LowLevelDictionaryWithIEnumerable
    
    It's not used anywhere in corefx.  Delete it.

[33mcommit 6910c630d0c47900a22e4894d52c062b36a41e34[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Dec 7 08:46:56 2015 -0500

    Move RemoveRelativeSegments to Path.Unix.cs
    
    This code is only used by the Unix implementation of Path, but is being compiled into the Windows implementation as well.  This commit simply moves the method.  If in the future we need it in the Windows implementation, we can move it back.

[33mcommit 6ebc925bd0f9537adfc495248fc16e943bcc5da1[m
Merge: 99bad24 f667b27
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Dec 7 08:41:19 2015 -0500

    Merge pull request #4810 from weshaggard/ExpressionTreesProjectMigration
    
    Add other library builds for System.Linq.Expressions project.

[33mcommit 99bad2480bcf380cce23f54aa99f6ed690aca78f[m
Merge: fa5eb56 6113a3d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Dec 7 08:39:33 2015 -0500

    Merge pull request #4852 from axelheer/biginteger-dangerous
    
    Cleanup NumericsHelpers.DangerousMakeTwosComplement

[33mcommit be200c4d26d4767352c906f584c7caf4f87d270b[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Dec 7 08:24:50 2015 -0500

    Add new System.Threading.Tasks.Extensions library
    
    For now, it contains just ```ValueTask<TResult>``` and its awaiters.

[33mcommit 6113a3dcd4b74dd3e5eba5a33f7f5722df6331e5[m
Author: Axel Heer <axel@heer.eu>
Date:   Sun Nov 22 12:11:44 2015 +0100

    Cleanup NumericsHelpers.DangerousMakeTwosComplement
    
    * Remove "weird" code since it's not in use anyway
    * Simplify rest of it to just do the required complement

[33mcommit fa5eb56caafd40dee9479c27ee98681ac9dc9389[m
Merge: b846054 6ad9f02
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Dec 6 22:17:40 2015 -0500

    Merge pull request #4853 from axelheer/biginteger-length
    
    Remove BigInteger.Length

[33mcommit ed8693b8717e1b1906e440c3cf8cf84e8b5721e7[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Fri Jul 31 15:58:00 2015 -0700

    Cleanup CookieCollection
    
    - Public surface area now matches the reference assembly contract
    - Removed the custom enumerator (_list.GetEnumerator() used instead)
    - Avoid the enumerator allocation in Add(CookieCollection)
    - Removed unused internal constructor and associated field
    - Made the _list field readonly
    - Removed unused usings
    - Removed trailing whitespace

[33mcommit b84605422a74d69e7aa61a25d8760bfe2fa32296[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Dec 5 20:23:53 2015 -0500

    Fix code coverage badge on README.md

[33mcommit 6ad9f02f3a7321d6d4c65ce3ab43a1b8ea0ed0e0[m
Author: Axel Heer <axel@heer.eu>
Date:   Sat Dec 5 22:07:04 2015 +0100

    Remove BigInteger.Length
    
    Since there is no actual measurement and only the value of `.Length`
    gets returned there is no use. Leading zeros aren't allowed anyway.

[33mcommit f4be0833ed5644a20be55f6977b50925c5bd5177[m
Merge: bece224 e807986
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Dec 5 13:21:31 2015 -0500

    Merge pull request #4849 from AArnott/BumpMinorVersion
    
    Bump minor version on immutable collections

[33mcommit bece224b5dba6c4a44860525166d0dd6b93caff6[m
Merge: 5414089 4737a1f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Dec 5 12:50:38 2015 -0500

    Merge pull request #4848 from Maxwe11/serialization-culture-issue
    
    Fix culture issue in serialization unit tests

[33mcommit e8079861ebcb17d766ff7db1555aea261c3c036d[m
Author: Andrew Arnott <andarno@microsoft.com>
Date:   Sat Dec 5 07:48:18 2015 -0800

    Bump minor version on immutable collections
    
    API was added to this assembly in commit 54140899. So bumping the minor version is appropriate per the policy set by Eric St. John in commit 40723b79.

[33mcommit 54140899edf23d1f2bea2a8f4f57fc6cdea540d6[m
Merge: b9bfdc3 629bd24
Author: Andrew Arnott <andrewarnott@gmail.com>
Date:   Sat Dec 5 07:36:28 2015 -0800

    Merge pull request #3878 from AArnott/fix2167
    
    Add Sort(Comparison<T>) methods to ImmutableArray and Builder

[33mcommit 4737a1ffe0ea1eb5397903f27a7ced07a562c86a[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Sat Dec 5 15:44:28 2015 +0200

    Fix culture issue in serialization unit tests
    This commit fixes tests that fails on cultures where decimal symbol different from "." (dot).

[33mcommit b9bfdc3c85e5b074d8817ab3c0b51859d8a21904[m
Merge: de716af 96ef101
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Dec 5 08:27:14 2015 -0500

    Merge pull request #4844 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit de716af04a3b319b1d67493b591f70da88cc0d0b[m
Merge: 4c7fb0c 2c2e57d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Dec 5 08:22:34 2015 -0500

    Merge pull request #4846 from chamila-c/concurrentdictionary-minor-comment-fix
    
    Fix typos in XML docs for ConcurrentDictionary

[33mcommit 2c2e57d858b44e08ade65c90fd5121b3349b708a[m
Author: Chamila Chulatunga <chamila.chulatunga@gmail.com>
Date:   Sat Dec 5 19:23:28 2015 +1100

    Fix typos in XML docs for ConcurrentDictionary

[33mcommit 4c7fb0cc15d6a2309368abb86ddd5d76ee235654[m
Merge: cbec313 e50c8bc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Dec 4 19:57:58 2015 -0500

    Merge pull request #4837 from dotnet/weshaggard-project-guildelines
    
    Update file and define conventions

[33mcommit cbec313b441a6fbc7e1aa2cbfdc5895c6aed4c6c[m
Merge: 23e727c 96dfc82
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Dec 4 19:56:22 2015 -0500

    Merge pull request #4841 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit e50c8bceb31b6858cc9130d1162dce7c177f7e07[m
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Dec 4 16:41:59 2015 -0800

    Some minor edits to project-guidelines
    
    These edit fix some wording and clarify some cases, like matching the case of the configurations.

[33mcommit 23e727c531697a1f1d39dfc940912127050945c1[m
Merge: 37fb0e5 501c054
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Dec 4 16:33:50 2015 -0800

    Merge pull request #4842 from mellinoe/disable-matrix-decompose
    
    Disable Matrix4x4DecomposeTest01 on OSX

[33mcommit 37fb0e5887d3f9ed1356790b71b78610c0dd3ecb[m
Merge: 989e561 6e3041e
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Dec 4 18:00:40 2015 -0600

    Merge pull request #4791 from eerhardt/ShimIntPtr
    
    Shims should use intptr_t for file descriptors.

[33mcommit 96ef10191969d8216d538e9a2a25222661b83683[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Fri Dec 4 15:13:41 2015 -0800

    DevDiv VSO# 158455 - Deprecate System.Private.Networking.dll and move to building from GitHub sources in .NET Core
    
    Switching System.Net Win contracts to use code in the Open partition.
    Creating individual implementations for System.Net contracts for Win.
    Removing System.Private.Networking (partial, requires a second check-in due to TFS limitations).
    Removing System.Private.Networking.Build.
    Removing System.Net.Common.
    Updating ToF tests.
    Reactivating all ToF tests for System.Net (validated on private builds).
    Porting remaining UnitTests to GitHub.
    Creating packages for System.Net.Utilities for Unix.
    
    [tfs-changeset: 1554743]

[33mcommit 501c054c86162756fdb47f6f76e1cda908a2a75a[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Dec 4 14:50:02 2015 -0800

    Disable Matrix4x4DecomposeTest01 on OSX

[33mcommit f9b070004ad27951c6a53bc18a9bfa9832107845[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Fri Dec 4 14:38:40 2015 -0800

    System.IO.Packaging packaging
    
    [tfs-changeset: 1554724]

[33mcommit 96dfc8285d02efd4cb4434725f66250816a5f516[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Fri Dec 4 13:24:29 2015 -0800

    BUILD: This unblocks the ProjectK build. Updates buildtools to get a fix for ValidateProjectDependencyVersions.
    
    Earlier it would try to write multiple project.json files simultaneously resulting in build breaks. Now it will never attempt to write. (Unnecessary for validation.)
    
    [tfs-changeset: 1554703]

[33mcommit 989e561cdf6cf1879b48f6f21a969a4c3f6e366a[m
Merge: f1d6ebf be31472
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Fri Dec 4 13:16:04 2015 -0800

    Merge pull request #4781 from sokket/fsw
    
    Fixing issues in OS X FSW regarding a Dispose Deadlock and failing UTs

[33mcommit f1d6ebf20a05330fc7ac774d7670b96feef7cc79[m
Merge: 5a9e018 9a5f6a8
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Dec 4 15:20:38 2015 -0500

    Merge pull request #4783 from stephentoub/move_semaphore_to_mscorlib
    
    Remove System.Threading.Semaphore implementation from corefx

[33mcommit 5a9e018bed5f1d1bd6e80f61143f5a8753d2382a[m
Merge: 91946eb ac39821
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Dec 4 15:12:31 2015 -0500

    Merge pull request #4828 from stephentoub/jamesqo_reg_tests
    
    Add tests for corrupt values in RegistryKey

[33mcommit 91946eb4e501734f853fb92dff385a32340240fc[m
Merge: c005f5b bd93f79
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Dec 4 15:06:02 2015 -0500

    Merge pull request #4835 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 6e3041e22fea05a0a270e5d11de4e15b734088bf[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Dec 4 13:28:44 2015 -0600

    MemoryMappedFiles tests asserts in System.Native shim.
    
    Our managed MemoryMappedFiles code explicitly passes -1 for a file descriptor into MMap.  This is causing an assert to fail, since the assert was expecting valid file descriptors.
    
    The fix is to disable the assert for just this one scenario.

[33mcommit 1837b8c529d747fa6e917506792ec85ced284f94[m
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Dec 4 11:07:15 2015 -0800

    Update file and define conventions

[33mcommit be314721b0f787a18366d8e01ca677db9219e716[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Tue Dec 1 16:08:53 2015 -0800

    Refactoring the OS X FileSystemWatcher to more match the Linux implementation
    by using an internal Instance class in order to allow each instance to clean
    itself up without causing side effects to other instances during rapid
    start-stop-start scenarios. This refactor fixes issue #4738
    
    Fixing a couple broken UTs by preventing notifications from being sent out for
    the watched folder. This fixes #4830, #4831, and parts of #2279

[33mcommit c005f5b82737d19a53d12c585231cb548087df82[m
Merge: 74e95d0 3940e87
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Dec 4 13:56:47 2015 -0500

    Merge pull request #4832 from stephentoub/disable_osx_process_test
    
    Disable failing TestWorkingSet64 test on OS X

[33mcommit 2fbeaff367db2c65afe76d02d186c2064722f8af[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Fri Oct 30 15:21:21 2015 -0700

    Add new environment apis proposed to
    System.Runtime.InteropServices.RuntimeInformation.

[33mcommit bd93f79901e2e9480fe0165d452949a4a1908c04[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Fri Dec 4 10:29:38 2015 -0800

    System.IO.FileSystem, System.Net.Sockets, and System.Security.Cryptography.Algorithms used to have different builds for OS X and Linux, but now after all the shimming work that was done recently, those were consolidated into a single Unix build, with no differences between Linux and OS X. However, they still have Linux-specific and OSX-specific packages. This change consolidates these.
    
    [tfs-changeset: 1554643]

[33mcommit 74e95d009ab2e3f981660519c725ad8f4fb9702a[m
Merge: b524ffe e514ffb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Dec 4 12:47:06 2015 -0500

    Merge pull request #4827 from stephentoub/fix_cc_libs
    
    Fix code coverage for a couple of libraries

[33mcommit 3940e87de17f8f0451ab95555197461b3de7b63e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Dec 4 12:37:04 2015 -0500

    Disable failing TestWorkingSet64 test on OS X
    
    I'd seen this test fail sporadically in the past, but now that we're running OS X tests as part of every PR, it's happening very frequently and taking out a bunch of runs.

[33mcommit ac39821345eb84e3a5f0a0f39075fa17846c191d[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Dec 4 12:28:07 2015 -0500

    Address PR feedback from #4521

[33mcommit b524ffe3e6d427c5b29166d4bc990740403240dd[m
Merge: 01386de b22906f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Dec 4 12:24:08 2015 -0500

    Merge pull request #4819 from benpye/arm-build-enable
    
    Fix native code to build on 32 bit platforms

[33mcommit 01386de534a4ccb31e96a50b0b83cfc799f5d2de[m
Merge: 28d08cf 19ab445
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Dec 4 09:10:43 2015 -0800

    Merge pull request #4815 from weshaggard/FileSystemProjectMigration
    
    Add other library builds for System.IO.FileSystem project.

[33mcommit c39727c7b3d5d62242784c19168166ee501f5e06[m
Author: James Ko <jamesqko@gmail.com>
Date:   Mon Nov 16 18:44:33 2015 -0500

    Add tests for corrupt values in RegistryKey

[33mcommit 9a5f6a806c293ba4c99531f93a989dd23ac35481[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Dec 4 09:06:45 2015 -0500

    Update test runtime and targeting pack to pull in newer mscorlib

[33mcommit 1921420a3fb6187ebdc7bf7fa64ddb76ed1537ed[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Dec 4 10:33:03 2015 -0600

    Workaround the way CI runs tests.
    
    The current changes in FileSystem.Watcher and MemoryMappedFiles require the latest
    System.IO.FileSystem in order for their tests to be passing.

[33mcommit e514ffbf5dace02a65acba109e63937865bc6602[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Dec 4 11:24:00 2015 -0500

    Fix code coverage for a couple of libraries
    
    A couple of libraries were not deploying their pdb for tests, which meant code coverage wasn't be produced.

[33mcommit 28d08cfbc666ac207d3d6926f9ed610816744756[m
Merge: 6b30470 707f934
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Fri Dec 4 08:02:11 2015 -0800

    Merge pull request #4826 from mmitche/add-centos
    
    Add centos to PRs

[33mcommit 707f934d3e2381926ea73a3ffec4b9a380058fc0[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Fri Dec 4 08:01:33 2015 -0800

    Add centos to PRs

[33mcommit 6b3047025292075421e5b9fb8b3fdc4f8eac93ed[m
Merge: 2b67328 71127ae
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Dec 4 09:30:09 2015 -0500

    Merge pull request #4816 from stephentoub/fix_centos_http
    
    Fix pipelining in System.Net.Http on CentOS

[33mcommit 2b673287d7a3918cf039611be2602ea546bf71a4[m
Merge: da03417 501214d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Dec 4 09:29:04 2015 -0500

    Merge pull request #4814 from jhendrixMSFT/master
    
    Update to latest build tools to pick up fixes for cloud-based testing.

[33mcommit af23e104e4912df980804b9e91667cc456951579[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Dec 2 16:33:55 2015 -0500

    Remove System.Threading.Semaphore implementation from corefx
    
    It's moving into mscorlib. This removes the last of the corefx dependencies on the libcoreclr PAL.  Also means that System.Threading.dll no longer needs separate Windows and Unix builds.

[33mcommit da03417f7adf78c9ca8eb7a2e137f479c8a60569[m
Merge: 943dcc4 9ed6724
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Dec 4 07:28:36 2015 -0500

    Merge pull request #4821 from CIPop/snsdisable
    
    Disabling intermittently failing tests (timeout) from System.Net.Security

[33mcommit 9ed672456b9ce6a47727f6d8d9c3e3fd16a10bbb[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Thu Dec 3 23:17:19 2015 -0800

    Disabling intermittently failing tests (timeout) from System.Net.Security.

[33mcommit b22906f9d66efa16df8853b4096f25c2c75eebe4[m
Author: Ben Pye <ben@curlybracket.co.uk>
Date:   Fri Dec 4 04:52:17 2015 +0000

    Fix native code to build on 32 bit platforms

[33mcommit 71127aeb45a8fb2f49dbd468a97988f57c176650[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Dec 3 23:16:18 2015 -0500

    Workaround breaking change in System.Net.Http.Native

[33mcommit 6d7793e3c24a779c5dde9e9b9419c2e452c32e6c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Dec 3 22:35:08 2015 -0500

    Fix pipelining in System.Net.Http on CentOS
    
    My previous change to add HTTP/2 multiplexing broke some System.Net.Http functionality on CentOS, or more specifically when using an old version of libcurl that's in our CentOS 7.1 image.
    
    That version of libcurl is from before HTTP/2 multiplexing was introduced.  When multiplexing was added to libcurl, one of the existing libcurl functions (curl_multi_setopt) was changed such that if you were to pass in the HTTP/2 multiplexing option (which didn't exist at the time), due to the way the method was implemented, you'd end up opting in to HTTP 1.1 pipelining rather than having the option just be ignored.  This is not the desired behavior and ends up breaking behaviors where we issue multiple HTTP 1.1 calls on the same multi handle concurrently.
    
    This fix exposes from the native shim whether we're using a version of libcurl that supports HTTP/2 and that knows about the multiplexing option, and only configures the multi handle for multiplexing in that case.

[33mcommit 943dcc446ba964f2ca565d690946e4ea0ff566e5[m
Merge: 8068fca 9c6cd5b
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Dec 3 18:20:50 2015 -0800

    Merge pull request #4811 from nguerrera/bump-md-master-ver
    
    Bump System.Reflection.Metadata version to 1.2

[33mcommit f667b27cbc497f0946d64ca57d207a0b30e92d65[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Thu Dec 3 14:10:03 2015 -0800

    Add other library builds for System.Linq.Expressions project.

[33mcommit 19ab445faa47a76bb4f32aae8980ebdd412333d4[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Thu Dec 3 17:53:16 2015 -0800

    Add other library builds for System.IO.FileSystem project.

[33mcommit 501214d84aeb7dba969bae829061f1e83e89fb95[m
Author: Joel Hendrix <jhendrix@microsoft.com>
Date:   Thu Dec 3 15:52:05 2015 -0800

    Update to latest build tools to pick up fixes for cloud-based testing.

[33mcommit 8068fca7dcdfbd40e56600db9cd0c8417e2c4f2f[m
Merge: adfc57a 33ff08c
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Dec 3 14:53:10 2015 -0800

    Merge pull request #4808 from mmitche/enable-prs-over-some-oss
    
    Enable some OS's for PR testing (OSX, SuSE, Windows_NT, Ubuntu)

[33mcommit 9c6cd5b9eb1f70ff69d5dae443ac1930e7f04a3b[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Dec 3 14:27:04 2015 -0800

    Bump System.Reflection.Metadata version to 1.2

[33mcommit adfc57a86bc1fdc3cad13b4c7ef1f4d14cb6d4dd[m
Merge: f72215e d469032
Author: Steve Harter <steveharter@users.noreply.github.com>
Date:   Thu Dec 3 16:19:23 2015 -0600

    Merge pull request #4806 from steveharter/AddSanitizers
    
    Enable Clang sanitizers for debug build

[33mcommit 33ff08c2bd80f9e0d5477202bab814f01b677aac[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Dec 3 13:44:32 2015 -0800

    Enable some OS's for PR testing (OSX, SuSE, Windows_NT, Ubuntu)

[33mcommit 13b3ff5610cd1d42121d842929b2580cbaf29f02[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Dec 3 14:57:00 2015 -0600

    Respond to PR feedback.
    
    Also, fixing the tests by adding a private default constructor to SafeFileHandle so the runtime interop can create the SafeFileHandle from a P/Invoke.

[33mcommit d469032fbae96c4d0269fc23b8151166e8edf7fb[m
Author: Steve Harter <sharter@microsoft.com>
Date:   Thu Dec 3 14:42:25 2015 -0600

    Enable Clang sanitizers

[33mcommit f72215e77a5d96b8b71d92d9853fe7ca45a5923c[m
Merge: 99364d9 052062e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Dec 3 13:55:29 2015 -0500

    Merge pull request #4800 from stephentoub/fix_net_freebsd_compile
    
    Fix a compilation error in native FreeBSD build

[33mcommit 052062ed166f44370b0dad13ac15ada191fa4426[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Dec 3 11:40:46 2015 -0500

    Fix a compilation error in native FreeBSD build
    
    "error: comparison of integers of different signs: 'int32_t' (aka 'int') and 'unsigned int' [-Werror,-Wsign-compare]"

[33mcommit 99364d99393acb7e576c737bf976d87bd06beda2[m
Merge: 4062574 64d288d
Author: Steve Harter <steveharter@users.noreply.github.com>
Date:   Thu Dec 3 10:10:51 2015 -0600

    Merge pull request #4785 from steveharter/FixHuTest
    
    Fix HU locale test for ICU

[33mcommit 64d288d317c0771fc824fa56960dfe5791badbcf[m
Author: Steve Harter <sharter@microsoft.com>
Date:   Wed Dec 2 15:02:06 2015 -0600

    Fix HU locale test for ICU

[33mcommit 4062574cd18119a824bfcb4a9cfb68c01cb0891c[m
Merge: 88ad6d1 5e1c34c
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Dec 3 08:02:49 2015 -0800

    Merge pull request #4799 from mmitche/fix-build-selectors
    
    Fix build selectors to be variables

[33mcommit 5e1c34ce04409fd98bf4bdd51821dc8769b13688[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Dec 3 07:59:02 2015 -0800

    Fix build selectors to be variables

[33mcommit 88ad6d105b43a29f421e7ad592257d7f71d92f5f[m
Merge: d43a8a9 f0eb132
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Dec 3 07:56:17 2015 -0800

    Merge pull request #4789 from mmitche/change-outerloop-badges
    
    Update outerloop badges to new location

[33mcommit d43a8a92151b2af9073257bd3c40160dd7404927[m
Merge: 24c2827 d9497dc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Dec 3 09:11:32 2015 -0500

    Merge pull request #4790 from justinvp/sortedset_setequals
    
    Avoid enumerator allocations in SortedSet<T>.SetEquals

[33mcommit 24c28277a5e5955bf4ed362a1c592bb575fa79f7[m
Merge: 0709884 d2a1c48
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Dec 3 09:09:01 2015 -0500

    Merge pull request #4788 from mellinoe/fix-dns-suffix
    
    [NetworkInformation] Detect when /etc/resolv.conf does not exist on Unix

[33mcommit 8a5cbc165a696b39b8d9bb48554c09473d4ca6bc[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Dec 2 21:48:33 2015 -0600

    Shims should use intptr_t for file descriptors.
    
    Changing all file descriptors used in System.Native to use intptr_t instead of int32_t.  This way we can marshal SafeHandles without having to add DangerousAddRef/Release code.
    
    Fix #2904.

[33mcommit 0709884a0dfd41d2f53f4efff15bd9fbdefcec56[m
Merge: 89ec735 7c88190
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Wed Dec 2 18:27:14 2015 -0800

    Merge pull request #4787 from JeremyKuhne/4040b
    
    Remove ActiveIssue tag now that the runtime has been updated.

[33mcommit d9497dcb86044bb9dff55d7c44a81462ae65293d[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Wed Dec 2 17:51:16 2015 -0800

    Avoid enumerator allocations in SortedSet<T>.SetEquals
    
    Avoid unnecessary boxing of the struct enumerators.

[33mcommit f0eb132317660ab53fbf76c94d0665d4cbec0fb9[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Wed Dec 2 10:05:20 2015 -0800

    Update outerloop badges to new location

[33mcommit 89ec7354b1818e1bfde7cefc615b2891ca47b231[m
Merge: 8564df2 869470e
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Wed Dec 2 16:45:24 2015 -0800

    Merge pull request #4761 from mmitche/add-rest-of-configs
    
    Add rest of configs

[33mcommit 869470ee57a055b167259c74fad91c5d683cf304[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Tue Dec 1 10:33:07 2015 -0800

    Add CoreFX innerloop configurations to netci.  Also includes additions of centos and openSuSE innerloop

[33mcommit 8564df2594e2bcca684103584fd42fc9b44bf46e[m
Merge: e994bec a20fd22
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Wed Dec 2 16:01:47 2015 -0800

    Merge pull request #4780 from dsgouda/libporting
    
    Created .builds files for building libraries

[33mcommit d2a1c48caef97f3e47bbfe1e7ffe6dca59a9d85f[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Nov 30 12:17:48 2015 -0800

    Detect when /etc/resolv.conf does not exist on OSX

[33mcommit 7c8819094b38807f54ff4904034c6ed0ae83f5f8[m
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Wed Dec 2 15:52:06 2015 -0800

    Remove ActiveIssue tag now that the runtime has been updated.

[33mcommit a20fd22b1e44d13e437c235a957a47a2af52838d[m
Author: Deepak Shankargouda <deshank@microsoft.com>
Date:   Tue Dec 1 18:08:09 2015 -0800

    Created initial set of .builds files

[33mcommit e994bec517fd7aed71d9c0ecb041fba0577e43d1[m
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Wed Dec 2 14:26:16 2015 -0800

    Fix anchor links in project-guidelines.md

[33mcommit 52c6c0f899863496bb1f8af4caaa6bced26f87a8[m
Merge: 87ef347 40b6e9f
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Wed Dec 2 14:09:18 2015 -0800

    Merge pull request #4743 from weshaggard/AddTargetGroup
    
    Add TargetGroup support into dir.props

[33mcommit 87ef347c72f037dac6ddd4cc62a63d045d48b053[m
Merge: c126a42 b1fc994
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Dec 2 14:59:07 2015 -0500

    Merge pull request #4778 from stephentoub/fix_http2_centos
    
    Fix System.Net.Http.Native build on CentOS

[33mcommit c126a42ce91d4c3c153d290e7800cc00d8b10efc[m
Merge: a085f7d 167824b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Dec 2 14:58:56 2015 -0500

    Merge pull request #4766 from stephentoub/improve_console_terminfo
    
    Some cleanup and memory improvement for System.Console on Unix

[33mcommit a085f7d22f758f15de5133501fa9ba18176a04bf[m
Merge: 008fae3 2f91db2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Dec 2 14:21:09 2015 -0500

    Merge pull request #4768 from stephentoub/concurrent_queue_tests
    
    Rewrite ConcurrentQueue unit tests

[33mcommit b1fc9940f64c88d371414ff04408253259dab0ba[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Dec 2 14:03:11 2015 -0500

    Fix System.Net.Http.Native build on CentOS
    
    The default install has an older libcurl that doesn't have CURL_HTTP_VERSION_2_0 defined.

[33mcommit 40b6e9fbc08233a8784da9d8c789127ac1428524[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Tue Dec 1 18:51:45 2015 -0800

    Add TargetGroup support into dir.props
    
    This change is an initial go add supporting our new projects that need
    to build for more target frameworks like netcore50/netcore50aot/etc.
    
    It shouldn't have any impact on the existing projects or defaults but
    will enable us to open source our other cross-compiled projects.
    
    This commit also contains an initial copy of the project-guidelines.md
    file for documenting the structure.

[33mcommit 008fae3a1b34ad2184ea31ed3110ba35f085e2e2[m
Merge: 0bf594d 4b789b5
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Wed Dec 2 10:10:07 2015 -0800

    Merge pull request #4745 from pgavlin/Poll2
    
    Minor changes to the Poll() shim.

[33mcommit 0bf594d34eecd8c0a3cef509edd52d2a515dad29[m
Merge: 2872386 131c1c6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Dec 2 13:06:34 2015 -0500

    Merge pull request #4756 from stephentoub/curl_http2
    
    Add HTTP/2 support to HttpClient on Unix

[33mcommit 287238630f54fd6faaff8c15cd0dcb6d6bd33d5b[m
Merge: 7e729bd 63b83aa
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Dec 2 12:41:35 2015 -0500

    Merge pull request #4775 from stephentoub/packaging_cleanup
    
    Code cleanup for System.IO.Packaging

[33mcommit 7e729bd03807e58990a055ab18a60303e326ed59[m
Merge: 58c3c42 6fa3cbd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Dec 2 12:40:28 2015 -0500

    Merge pull request #4773 from kseo/origin_getter
    
    Use Origin getter where applicable.

[33mcommit 131c1c6fbfbac7c530247bb96176a45c9bc224ad[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Dec 2 12:29:50 2015 -0500

    Enable pipelining for HTTP/2 requests

[33mcommit 58c3c42411d9affb1ae17764d82dd38b98110d74[m
Merge: 01c53d2 bed72c4
Author: Joel Hendrix <jhendrix@microsoft.com>
Date:   Wed Dec 2 08:50:01 2015 -0800

    Merge pull request #4765 from jhendrixMSFT/master
    
    Update to latest build tools to pick up some fixes.

[33mcommit 01c53d2eb1da1bdc7588a5c9116c9a6fba23a051[m
Merge: 739a442 f7d23ec
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Wed Dec 2 08:38:22 2015 -0800

    Merge pull request #4763 from joperezr/AddBuildToolsNet45Property
    
    Adding BuildToolsTarget45 property so that Linux build will still work once buildTools package version is upgraded.

[33mcommit 6fa3cbdf1c81f56be14d59e9ff61d7297eea4ad7[m
Author: Kwang Yul Seo <kwangyul.seo@gmail.com>
Date:   Wed Dec 2 23:15:38 2015 +0900

    Use Origin getter where applicable.
    
    Use Origin instead of manully creating a MutationInput from this. This change
    makes the code more consistent because Origin getter is already used in other
    places.

[33mcommit 63b83aa87ccedb0c2e1e83210b2cf57b9fdaecd8[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Wed Dec 2 09:17:40 2015 -0500

    Code cleanup for System.IO.Packaging

[33mcommit 5c675e61fa56c8eeecf0a75db6f6217ea80a6436[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Dec 2 13:16:26 2015 +0000

    Tests for LabelExpression and LabelTarget.
    
    The actual use of label targets when compiling, interpretting or
    otherwise acting upon an expression that makes use of them is by
    necessity covered by testing those GotoExpressions that make use of
    them. These tests focus on the LabelTarget class and the factory
    methods producing them, with compilation only when some feature of a
    target itself (viz. a name that is not a valid C# name is still valid)
    could perhaps have an effect in a regression error.

[33mcommit 167824b7519805312b585087608d8cebb51ea625[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Dec 1 22:47:49 2015 -0500

    Fix tests accessing ConsolePal internals via reflection
    
    When refactoring things, I neglected to fix-up the tests accessing members via reflection.

[33mcommit 2f91db28c8b5c86cf67a3d8e9b4d38f74dbc7161[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Dec 1 22:24:47 2015 -0500

    Rewrite ConcurrentQueue unit tests
    
    Some cleanup to:
    - Remove non-xunit-isms
    - Improve line code coverage from ~70% to ~90%

[33mcommit f7d23ecddcebcd25815baaf7865b9836e0b9796f[m
Author: Jose Perez Rodriguez <joperezr@microsoft.com>
Date:   Tue Dec 1 14:01:07 2015 -0800

    Adding BuildToolsTarget45 property so that Linux build will still work once buildTools package version is upgraded.

[33mcommit bed72c4bb1681d2657178ea123d669c197348740[m
Author: Joel Hendrix <jhendrix@microsoft.com>
Date:   Tue Dec 1 16:30:14 2015 -0800

    Update to latest build tools to pick up some fixes.

[33mcommit 6dc11364098e67c3b0e90e59f69c50561d9896fe[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Nov 30 16:29:04 2015 -0500

    Avoid holding on to Database after it's no longer needed
    
    This Database object can be upwards of 4K, and we don't need it after we've extracted all the relevant data from it.  This commit refactors things to consolidate all of the strings into a single class, and we throw away the Database after we've populated from it.

[33mcommit 3545ad84247172c2855aa96850a8750ad899c7ec[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Nov 30 15:52:29 2015 -0500

    Move well-known indices into enums
    
    Helps to better organize and also use strong-typing to help minimize chances of errors.

[33mcommit dbb56d9c550089cd234175818a26edffb403498e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Nov 30 15:35:15 2015 -0500

    Separate TermInfo out into its own file
    
    No functional changes, just cut-and-pasted TermInfo into its own file (and made one private method on ConsolePal instead be internal).  The ConsolePal.Unix.cs file was just becoming unwieldy, with the TermInfo code being ~1000 lines.

[33mcommit 739a4429a17c53fffb9d5dce882946437f2d12ad[m
Merge: 79bc5b7 1cfe055
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Dec 1 17:01:22 2015 -0500

    Merge pull request #4758 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 79bc5b75b566fced445bbf6eadb6335610113c11[m
Merge: cc6f76b 48b8cb4
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Tue Dec 1 13:20:26 2015 -0800

    Merge pull request #4759 from mmitche/update-code-coverage-badge
    
    Update the code coverage badge to new location

[33mcommit cc6f76bbb27b64f16dfaeabceb4f4b32b914187d[m
Merge: cca69d8 570536e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Dec 1 15:45:49 2015 -0500

    Merge pull request #4757 from CIPop/snslockfile
    
    Updating and locking project.lock.json for Security UnitTests.

[33mcommit cca69d8e5a703622b945a81a4dde9bfcfdc285fc[m
Merge: 4f8da35 1b46b4a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Dec 1 15:45:27 2015 -0500

    Merge pull request #4755 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 3e205589a9e17a5b8ff9a4971e227d5f46c7e4c0[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Dec 1 14:42:17 2015 -0500

    Address PR feedback and fix a few tests

[33mcommit 4f8da35d09bcba6bd9a35dca6d720d6a67783e23[m
Merge: 64b3796 9b400e8
Author: Steve Harter <steveharter@users.noreply.github.com>
Date:   Tue Dec 1 14:27:17 2015 -0600

    Merge pull request #4753 from steveharter/FixDiacriticTest
    
    Fix diacritic test

[33mcommit 64b3796bc9f68e30285abc6b2329a4a4aaff262f[m
Merge: cb63a20 beb7d50
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Tue Dec 1 12:12:44 2015 -0800

    Merge pull request #4573 from JeremyKuhne/4274
    
    Clean up path handling and align with legacy behavior

[33mcommit 1cfe0550103d039a9ae28b9ccaee956c438dbd18[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Tue Dec 1 12:06:18 2015 -0800

    BuildToolsTaskDir property is required in order to update the version of the buildtools package. The reason is because the task library in the package has two versions now, the .Net Core version and the net45. In order for builds to continue working in all environments, we require to override this property.
    
    [tfs-changeset: 1553048]

[33mcommit 98023a75c8f469b7d8d5c10e03013103f348e390[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Sat Nov 28 14:33:20 2015 -0800

    Optimize Queue<T>'s constructor
    
    Instead of enumerating through the IEnumerable<T> directly, use
    EnumerableHelpers.ToArray, which has optimizations for collections
    that implement ICollection<T>.

[33mcommit 570536ed5ae5c6b136b9a100ba6983eceaf17320[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Tue Dec 1 11:53:08 2015 -0800

    Updating and locking project.lock.json for Security UnitTests.

[33mcommit 9b400e8068b697f5c905690d2b48ee7453d4f818[m
Author: Steve Harter <sharter@microsoft.com>
Date:   Tue Dec 1 13:06:29 2015 -0600

    Fix diacritic test

[33mcommit 3440aa3cdbd6f82de3746762a08eb796b8b3d90a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Dec 1 14:33:01 2015 -0500

    Add HTTP/2 support to HttpClient on Unix
    
    The latest versions of libcurl have HTTP/2 support; this commit enables that to be used from HttpClient via setting the request Version.  Setting the Version will now pass along that version preference to libcurl; if it's set to 2.0, libcurl will use HTTP/2 if supported, otherwise it'll fall back to its default (1.1).  As part of this I also fixed CurlHandler to pass along v1.0 and v1.1 so libcurl can respect the developer's explicit wishes.
    
    (Note that the HTTP/2 light-up is only available if libcurl supports it.  libcurl relies on nghttp2, which needs to be installed, and a version of libcurl needs to be used that's built against it.  To test, I built these locally from source.)

[33mcommit 1b46b4a473ab85e1dc99c42c60846435ea788fb8[m
Author: Khoa Dang <khdang@microsoft.com>
Date:   Tue Dec 1 11:20:30 2015 -0800

    Fix DCS serialization tests compilation failures
    
    [tfs-changeset: 1553017]

[33mcommit cb63a202710896ad5cc883b690a3d8080968e1c0[m
Merge: a8ff01e f040858
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Tue Dec 1 10:53:15 2015 -0800

    Merge pull request #4752 from mmitche/triggerPhrases
    
    Use parameterized project name and regex for code coverage build.

[33mcommit f0408583b6b07623c0753254a4d37ff6fe8d5eda[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Tue Dec 1 10:49:44 2015 -0800

    Use parameterized project name and regex for code coverage build.

[33mcommit a8ff01e369cf2116035848e02278221a7e883675[m
Merge: 9297703 3fa8fc3
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Dec 1 08:51:19 2015 -0500

    Merge pull request #4713 from bbowyersmyth/CompareInfoOrdinal
    
    Additional CompareInfo.Compare ordinal tests

[33mcommit fe621b0c86c89a79f1ea583f57affe498ae7c6cf[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Dec 1 05:01:01 2015 +0000

    Don't throw when Expression.VisitBlock() changes only variables.
    
    Currently if a an ExpressionVisitor changes the variables of a
    block visited with VisitBlock(), but not any of the nodes in
    its body, the call to VisitBlock() will then throw a
    NullReferenceException. Fix this.
    
    Fixes #4400
    
    This change allows null to be passed to the args argument of
    BlockExpression.Rewrite(). Add asserts that this has not happened
    to all subclasses which don't have variables.
    
    Add private constructor to Scope1 allowing direct reuse of _body
    reducing allocations in this case.
    
    Add protected property to ScopeN allowing read-only access of
    body list, again so allocations can be reduced in this case.
    
    Add tests that cover this for all overrides of BlockExpression that
    can have more than zero variables.

[33mcommit 92977037241f6246afe542022d159e4f16470a20[m
Merge: 3070876 06cec74
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Nov 30 17:35:55 2015 -0800

    Merge pull request #4740 from davidsh/webexception_ctor
    
    Fix WebException constructor parameters to match Desktop naming

[33mcommit 3070876b867c6e381c9da99b708d1aeb55c45534[m
Merge: a46fbbb 6b5e341
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Mon Nov 30 16:22:36 2015 -0800

    Merge pull request #4678 from billwert/patch-1
    
    Update getting-started-core.md for VS2015U1

[33mcommit 4b789b544cd66315a12ee81a214c5299f295c54c[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Nov 30 16:22:16 2015 -0800

    Minor changes to the Poll() shim.
    
    - Minor cosmetic changes to the Poll() datatypes
    - Change the Poll() shim to return an Error instead of an errno.
      The number of triggered file descriptors is now an output
      parameter.
    - Fix the implementation of Poll() to handle > 2 poll events.
    
    This change is preparing for a future change that will move
    Socket.{Select,Poll} to use `poll` instead of `select`.

[33mcommit 6b5e341ddc643270f5e60fc61f17144c6fac7e86[m
Author: Bill Wert <billwert@microsoft.com>
Date:   Wed Nov 25 16:40:45 2015 -0800

    Update getting-started-core.md for VS2015U1
    
    With U1 separate downloads of Nuget are no longer required. I also changed the project file changes from a screenshot to an image, so it's easy to copy/paste the blobs of XML. Other minor formatting cleanups.

[33mcommit 06cec74fcc60f74e8d120e9bc72b09b419abed4b[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Nov 30 15:55:40 2015 -0800

    Fix WebException constructor parameters to match Desktop naming
    
    As per the System.Net.* API review dotnet/apireviews#21 fixing the
    parameter name used for the inner exception in the WebException
    constructor overloads to match the name used in .NET Framework (Desktop).
    
    Part of #4732

[33mcommit 48b8cb499b15b467b9c8634ee2f53f62fa2ebc5c[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Mon Nov 30 14:18:01 2015 -0800

    Update the code coverage badge to new location

[33mcommit a46fbbb9f8da154371157b9999d3e8b9d643a671[m
Merge: 9b50505 8bc3e55
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Nov 30 16:32:08 2015 -0500

    Merge pull request #4734 from khdang/update_dependency_of_xmlserializer
    
    Remove dependency from System.Xml.XmlSerializer on System.Runtime.WindowsRuntime 4.0.10

[33mcommit f3e9c6e7653bee96abaef97a15d1b8a095099eb7[m
Author: Khoa Dang <khdang@microsoft.com>
Date:   Mon Nov 30 13:00:02 2015 -0800

    Fix DCS serialization tests compilation failures
    
    [tfs-changeset: 1552601]

[33mcommit 9b50505689b2d7c18ff3935aa1182ba8e38f6e4f[m
Merge: abca8d2 b49b16c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Nov 30 15:18:55 2015 -0500

    Merge pull request #4730 from stephentoub/fix_fvi_tostring
    
    Don't hardcode Version.ToString length in FVI

[33mcommit abca8d2e984e8efcb787a9b9b692d9f94662ec64[m
Merge: 5c5f736 315463c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Nov 30 14:34:46 2015 -0500

    Merge pull request #4731 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 8bc3e55b74d46215e2e53eda17c49bfcd0cedec1[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Mon Nov 30 11:32:35 2015 -0800

    Remove dependency from System.Xml.XmlSerializer on System.Runtime.WindowsRuntime 4.0.10

[33mcommit b49b16cb36b6b0ad4d6d9c3e452390de93b56ce4[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Nov 30 13:47:03 2015 -0500

    Don't hardcode Version.ToString length in FVI
    
    If Build or Revision isn't set, Version.ToString(4) will throw.  We instead just use the default ToString() overload, which will internally call toString(2), ToString(3), or ToString(4) based on how many parts are actually defined in the version.
    
    Additionally, Build or Revision may return -1 to indicate they're not provided, but in the same case, the Windows code uses 0, so we special case to match.

[33mcommit 420c1ec860c9f07f0aeca6a6e3cec99199acb3c6[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Mon Nov 30 11:28:13 2015 -0800

    Update PackageTargetFramework of System.ComponentModel.Primitives
    
    Follow up to TFS CS #1552535, I missed updating PackageTargetFramework
    in the open project.  This currently isn't used by anything but we want it to
    stay consistent.
    
    [tfs-changeset: 1552553]

[33mcommit a9008489cb0a73071d5229cb18ee5987c7bb3e43[m
Author: Khoa Dang <khdang@microsoft.com>
Date:   Mon Nov 30 11:10:21 2015 -0800

    Add Desktop OOB for serialization surrogate
    
    [tfs-changeset: 1552543]

[33mcommit 5c5f7367648d4bcfce3648c535f4b4c056e35c6e[m
Merge: 13c96a5 52d9e5e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Nov 30 13:55:02 2015 -0500

    Merge pull request #4711 from stephentoub/console_lookups
    
    Avoid Console-based allocations when typing on Unix

[33mcommit 315463cdabc68a5c6d213a40c05c00536176fa61[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Mon Nov 30 10:52:59 2015 -0800

    Ensure System.ComponentModel.Primitives supports Net45
    
    Previously we OOBed System.ComponentModel.TypeConverter
    but this didn't work entirely because its dependency (Primitives)
    still wasn't supported back that far.  Fix that by retargeting
    to the earliest generation and adding a desktop facade for net45.
    
    [tfs-changeset: 1552535]

[33mcommit 13c96a54af5d1bc9ae2416f1cc1e5d099ed1e1cd[m
Merge: 6cc8247 c825ba3
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Nov 30 13:52:23 2015 -0500

    Merge pull request #4716 from kseo/unused
    
    Remove unused SortedInt32KeyNode.NodeTreeFromList method.

[33mcommit 6cc8247cc4d6637998ca8d5d4c9fa7a5acd30eac[m
Merge: 0dbdb2a 8727aa6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Nov 30 13:51:49 2015 -0500

    Merge pull request #4725 from eerhardt/FollowUp4667
    
    Responding to PR #4677 feedback.

[33mcommit 0dbdb2ae6041e8493dda084fda3e2039d94afd44[m
Merge: 88b633f a0efed6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Nov 30 12:45:10 2015 -0500

    Merge pull request #4707 from stephentoub/fix_fdset
    
    Fix corruption when FD_SETSIZE larger than expected

[33mcommit 8727aa69e3dcaf50cf8d8ef90cf927397c012bd2[m
Author: Eric Erhardt <eerhardt@Erics-MacBook-Pro.local>
Date:   Mon Nov 30 09:39:38 2015 -0600

    Responding to PR #4677 feedback.

[33mcommit 183eb5ccf4240ad93495945c58b12428ca275195[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Mon Nov 30 11:27:35 2015 +0000

    Tighten public surface of Expression class.
    
    Fixes #4722

[33mcommit 88b633f6cd60078e5e87ddecddfab379911e413d[m
Merge: 7066aed ddbb3fe
Author: Josh Free <joshfree@users.noreply.github.com>
Date:   Sun Nov 29 14:06:27 2015 -0800

    Merge pull request #4715 from JonHanna/direct_left_arrow
    
    Replace incorrectly displaying `&larr;` with `←`.

[33mcommit c825ba3b5c427ca4d38ed001f5ecff3e753167d3[m
Author: Kwang Yul Seo <kwangyul.seo@gmail.com>
Date:   Mon Nov 30 01:06:11 2015 +0900

    Remove unused SortedInt32KeyNode.NodeTreeFromList method.

[33mcommit ddbb3fe7d18f4ca5fd90aee6c67d3b1e1318b664[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Sun Nov 29 13:54:00 2015 +0000

    Replace incorrectly displaying `&larr;` with `←`.
    
    Fixes #4714.

[33mcommit 7066aed4a822842a79c2384c41a5d7ce5f2236f2[m
Merge: 88fddca 0667485
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Nov 28 18:12:31 2015 -0500

    Merge pull request #4710 from justinvp/IdentityReferenceCollection_enumerator
    
    Cleanup IdentityReferenceCollection's enumerator

[33mcommit 88fddca5a654b1651ea6e3254a7855d73829f7f1[m
Merge: 836f048 87088ae
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Nov 28 18:12:07 2015 -0500

    Merge pull request #4709 from justinvp/queue_stack_enumdup
    
    Remove duplication in Queue<T> & Stack<T> enumerators

[33mcommit 3fa8fc3645e430f0b85214988c6967503ec57541[m
Author: Bruce Bowyer-Smyth <bbowyersmyth@live.com.au>
Date:   Sun Nov 29 08:39:20 2015 +1000

    Additional Compare ordinal tests

[33mcommit 52d9e5e1e5735a11f9af2960a82dbeec244cd6c5[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Nov 28 17:29:25 2015 -0500

    Avoid Console-based allocations when typing on Unix
    
    The Console implementation on Unix relies on a dictionary from string to ConsoleKeyInfo to determine whether a given character sequence represents a special known sequence that should be converted into a particular ConsoleKeyInfo, e.g. the escape sequence that represents an arrow key.  As typing happens, a buffer of characters fills up, and then strings are created from that buffer to determine whether they match anything in the dictionary.  This means we incur one ore more allocations any time a lookup needs to happen.
    
    This commit adds a new internal struct type, StringOrCharArray, that is a discriminated union of a String and of a char[]/offset/index tuple.  This is then used as the key in the dictionary, which lets us look up a character sequence with zero allocations.  It comes at the expense of needing to store a few extra fields for each key in the dictionary, but given the number of keys we need to store (~100), this is a good tradeoff compared to needing to allocate/copy each string one or more times (depending on the length) each time we evaluate a special sequence.
    
    (I experimented with other data structures, including several trie variations, and this approach yielded the best performance, both in memory consumption and in throughput.)

[33mcommit 0667485cee2d2ab0078952e9e3302abacca74c79[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Sat Nov 28 14:10:16 2015 -0800

    Cleanup IdentityReferenceCollection's enumerator
    
    Swap the implementations of Current and IEnumerator.Current to avoid
    having to use casts in Current's implementation.

[33mcommit 87088ae4dafc67785976fa3a585bb5f8d464bfd9[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Sat Nov 28 13:58:38 2015 -0800

    Remove duplication in Queue & Stack enumerators
    
    Change IEnumerator.Current to simply return Current, instead of
    having duplicate code in both properties.

[33mcommit 836f0480afbfc8fe7555530c6d98f70873db8ae4[m
Merge: 28c5498 6992ca0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Nov 28 12:40:11 2015 -0500

    Merge pull request #4705 from justinvp/observablecollection_ctor
    
    Optimize ObservableCollection<T>'s constructor

[33mcommit 28c5498f89657cc94953bf67662805560fd681fd[m
Merge: 6b2deee 75392f1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Nov 28 12:39:48 2015 -0500

    Merge pull request #4703 from justinvp/keyedcollection_enumallocs
    
    Avoid enumerator allocations inside KeyedCollection<TKey, TItem>

[33mcommit 6b2deeede6f9921718cd012e009764c6f4194363[m
Merge: 5492674 e88f65b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Nov 28 12:39:31 2015 -0500

    Merge pull request #4575 from hughbe/runtime-tests
    
    Cleanup Some Runtime Tests

[33mcommit 75392f1aafd8498bca3dd54c9715a45348c61d84[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Fri Nov 27 17:19:23 2015 -0800

    Avoid enumerator allocations inside KeyedCollection
    
    Methods on KeyedCollection<TKey, TItem> will internally loop over its
    Items using foreach before the dictionary threshold is reached. Items
    is a protected (non-virtual) property defined on the base
    Collection<T> class and typed as IList<T>. This means
    KeyedCollection<TKey, TValue> members like Contains and Item[TKey]
    allocate an enumerator when looping over Items.
    
    We can avoid the enumerator allocations inside
    KeyedCollection<TKey, TValue> by providing a new private Items
    property that is typed as List<T>, so that List<T>'s struct
    enumerator is used, which also avoids interface dispatch.
    
    KeyedCollection<TKey, TItem>'s constructors call the default
    Collection<T> constructor which already initializes Items to
    an instance of List<T>, so this change is just being explicit
    about the use of List<T> for Items.

[33mcommit a0efed6cac8eb2528938f5e7b15fa1205cc98095[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Nov 28 09:28:16 2015 -0500

    Fix corruption when FD_SETSIZE larger than expected
    
    The expected FD_SETSIZE for Select is currently hardcoded to be 1024.  While common, this is not required, and many servers will have this limit increased.  With the current hardcoded value, if a file descriptor comes in beyond the limit, we end up corrupting memory.
    
    This commit fixes it by making the limit in managed code dynamic, supplied via a call to the native shim to return the actual value of FD_SETSIZE so that the managed and native expectations match.

[33mcommit 54926742e4f72b7db7eed8c6f20c5579865d55db[m
Merge: ae14925 fb817ff
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Nov 28 10:03:51 2015 -0500

    Merge pull request #4701 from hughbe/fix-4961
    
    Fix #4691

[33mcommit ae149253ace3e1e22c8a4e2f4ca8c54430fda552[m
Merge: 7f47720 58413e0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Nov 28 10:02:28 2015 -0500

    Merge pull request #4704 from mgravell/master
    
    use &larr; / &rarr; instead of unicode arrows; fix #4702

[33mcommit 6992ca092454231f8152d4f771d2d6d7416de44d[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Fri Nov 27 20:36:26 2015 -0800

    Optimize ObservableCollection<T>'s constructor
    
    Instead of enumerating through the IEnumerable<T> directly, make use
    of the List<T> constructor that takes an IEnumerable<T>, which has
    optimizations for collections that implement ICollection<T>.
    
    Also, cleaned up the ObservableCollection constructor/property tests.

[33mcommit 7f4772097f4ebc651d25959f4ca5d5cfbeaab185[m
Merge: 49b8925 2bb2c05
Author: VSadov <vsadov@microsoft.com>
Date:   Fri Nov 27 17:42:50 2015 -0800

    Merge pull request #4700 from hughbe/fix-4694
    
    Fix #4694

[33mcommit 58413e065d56efd96a19f19bd29a5efec8839846[m
Author: Marc Gravell <marc.gravell@gmail.com>
Date:   Sat Nov 28 01:29:37 2015 +0000

    use &larr; / &rarr; instead of unicode arrows; fix #4702

[33mcommit fb817ffc54ef2fa62339d9239c4d43a7f96d8f34[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Fri Nov 27 21:01:10 2015 +0000

    Fix #4691
    
    Code in the Add and Remove methods in KeyedCollection checked for a null parameter redundantly after verifying that the parameter was not null by throwing an exception.

[33mcommit 2bb2c0557d4fd251ff78a1137bb7c3ca319939c1[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Fri Nov 27 20:53:41 2015 +0000

    Fix #4694
    
    The exception thrown when calling `Expression.Label(default(LabelTarget));` is now "target" instead of the incorrect name "label"

[33mcommit dca41fe03d86468f891a4933eae4c7e9c0bb698f[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Nov 27 12:52:54 2015 +0000

    Reduce number of checks in most calls to TypeUtils.ValidateType()
    
    TypeUtils.ValidateType(Type) checks first IsGenericTypeDefinition
    and then ContainsGenericParameters, throwing a different error in
    either case. Since IsGenericTypeDefinition entails
    ContainsGenericParameters, and since the most common case would be
    that neither are true, we can check ContainsGenericParameters first,
    only checking IsGenericTypeDefinition if that is true, to determine
    which exception to throw.
    
    The result is a micro-opt to a method called in several factory
    methods.

[33mcommit e88f65b95b65bcb837ace70d3817af200637f43d[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Thu Nov 26 16:05:19 2015 +0000

    Cleanup System.Runtime tests

[33mcommit 49b8925bcf2bd1bd742915fe2f673b153dc74942[m
Merge: 5971b57 f2199be
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 26 09:16:35 2015 -0500

    Merge pull request #4687 from stephentoub/disable_osx
    
    Disable several failing tests on OS X

[33mcommit f2199be65eb6b8020deb0a348923875020b8435a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Nov 26 08:34:53 2015 -0500

    Disable several failing tests on OS X
    
    One new sockets test is still failing.
    
    And a handful of IO tests related to read-only files just recently started failing, presumably due to some kind of OS-related upgrade.

[33mcommit 5971b57f025f8e708f2da084d230eb1d19ca3286[m
Merge: af6e43a 172f587
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 26 07:26:10 2015 -0500

    Merge pull request #4677 from eerhardt/Fix4667
    
    GetNumberGroupSizes test fails on OSX Yosemite.

[33mcommit af6e43ab3f5d9309a0ed07f4f849b1fe7fb26c90[m
Merge: e043947 045a778
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 26 07:22:29 2015 -0500

    Merge pull request #4680 from stephentoub/update_readme
    
    Add CI version numbers to README for Windows and OS X

[33mcommit e043947c2d536576ec539c241f47bd2df23a4ba2[m
Merge: 871ba43 5e8a510
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 26 07:16:55 2015 -0500

    Merge pull request #4679 from stephentoub/fix_requests_p2p
    
    Remove workaround from System.Net.Requests tests project

[33mcommit 871ba4385341e668d767c78e54ac57c7d6c9ba1c[m
Merge: ac4b6c5 9e95066
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 26 07:15:11 2015 -0500

    Merge pull request #4664 from stephentoub/extended_console_names
    
    Add extended string support to Console's terminfo database

[33mcommit ac4b6c57c3df365c3389dea80c72b55437b10043[m
Merge: 2eef0ef 0ac3b77
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 26 07:14:54 2015 -0500

    Merge pull request #4684 from stephentoub/terminfo_tests
    
    Fix terminfo tests to not assume specific files exist

[33mcommit 2eef0efa6408e6cc0a0e3c95246bd3c594228827[m
Merge: 334f261 411f101
Author: Vijay Kota <vijaykota@users.noreply.github.com>
Date:   Thu Nov 26 10:33:16 2015 +0530

    Merge pull request #4683 from kapilash/redir_emptyhdr
    
    Fix CurlHandler to allow empty headers in redirect

[33mcommit 0ac3b77680246f4f946ccd382ef0473cc06b7e42[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Nov 25 23:35:45 2015 -0500

    Fix terminfo tests to not assume specific files exist
    
    The terminfo tests assume that a specific set of terminfo definition files exist; they do on Ubuntu, CentOS, and OS X, but not all of them do on openSUSE, resulting in test failures.  This commit just makes them optional, bailing out of the test if the file isn't found.  It also cleans up some code to use a theory, now that the bug that was preventing a theory from being used originally has been fixed.

[33mcommit 411f1013b2154715ded08ffa27e50f4160f80d08[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Wed Nov 25 22:50:02 2015 +0530

    Fix CurlHandler to allow empty headers in redirect
    
    libcurl does not pass empty headers in case of a redirect uri. This
    results in discrepency between CurlHandler and UnixHandler. To work
    around this, we set the request headers again in response to a redirect.

[33mcommit 9e95066a11453dcde31cebea908804d60b548fd6[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Nov 25 21:46:57 2015 -0500

    Address PR feedback

[33mcommit 045a7785ae759f6dbcd8f7c08222b12c1a86cb51[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Nov 25 21:22:28 2015 -0500

    Add CI version numbers to README for Windows and OS X

[33mcommit 334f2615b42bba8e2b2f277b4ae75ffebfdd917d[m
Merge: ad893fe f4996fc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Nov 25 21:07:43 2015 -0500

    Merge pull request #4675 from pgavlin/SelectFix
    
    Fix another bug in Select().

[33mcommit 172f58768e637eebdc05c753ac3580b5146c9014[m
Author: Eric Erhardt <eerhardt@Erics-MacBook-Pro.local>
Date:   Wed Nov 25 16:22:29 2015 -0600

    GetNumberGroupSizes test fails on OSX Yosemite.
    
    The culture data for ur-IN is different on OSX El Capitan than on Yosemite.  Thus we have a failing test that is expecting the wrong data.
    
    This fix gets the current OSX Kernel version by P/Invoking sysctlbyname("kern.osrelease") and compares it to 15.0 (El Capitan).
    
    Fix #4667

[33mcommit ad893fe979b9386ef4714884a3765b8bba02520a[m
Merge: 9405353 3d12f1b
Author: Krzysztof Cwalina <kcwalina@microsoft.com>
Date:   Wed Nov 25 14:20:51 2015 -0800

    Merge pull request #4660 from KrzysztofCwalina/RRSupportSubstream
    
    Support reading resources from non-zero offset

[33mcommit f4996fc313ac51327a250fc2e149b5d7be4174ae[m
Author: Pat Gavlin <pagavlin@microsoft.com>
Date:   Wed Nov 25 13:53:50 2015 -0800

    Fix another bug in Select().
    
    There was an off-by-one in a memcpy in the PAL <-> native file
    descriptor set conversions.
    
    Fixes #4665.

[33mcommit 3d12f1b759e4bd68a6951225f5657219f8c2e0b8[m
Author: Krzysztof Cwalina <kcwalina@microsoft.com>
Date:   Tue Nov 24 14:33:24 2015 -0800

    Support reading resources from non-zero offset
    
    Before this change, the reader assumes that the beginning of the resource stream
    is the absolute beginning of the stream, i.e. that the resources start at stream position 0.
    This means the reader cannot be used to read resources from an assembly,
    as resources are embedded not at the beginning of assemblies.
    This change fixes this issue.

[33mcommit 9405353cc0256d20c345b1917f461cdeac116a13[m
Merge: 8dbd728 fc4748e
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Nov 25 11:58:44 2015 -0800

    Merge pull request #4674 from ianhays/perfversionbug
    
    Manually specify perf runner version to avoid lock failures.

[33mcommit fc4748e21a2df4d5694f2483ffe0466d43bcecfd[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Nov 25 11:03:24 2015 -0800

    Manually specify perf runner version to avoid lock failures.
    
    Temporary solution to #333

[33mcommit 5e8a5102cab8f9e4fb5fd385e05d43916de3f05c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Nov 24 23:44:24 2015 -0500

    Remove workaround from System.Net.Requests.Tests project
    
    It was temporarily using a P2P reference while we were waiting for the
    packages to be updated with a new shim that it depends on.  Now that the
    new packages are available, removing the workaround and updating the
    project.lock.json and the test-runtime to pick up the fix.

[33mcommit 8dbd7282faeb6857cfcb57485d9f543c38d41a33[m
Merge: bf9e9f2 38d0979
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Nov 25 08:25:04 2015 -0500

    Merge pull request #4666 from stephentoub/opensuse_readme
    
    Add openSUSE badges to README.md

[33mcommit 38d0979b6246da3ed44ca6eebb576222150bc2c7[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Nov 24 23:21:23 2015 -0500

    Add openSUSE badges to README.md

[33mcommit 176c405446b0a09444e85d597d67c504bae8b4ac[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Nov 24 20:59:27 2015 -0500

    Add extended string support to Console's terminfo database
    
    Our support for terminfo files was missing the extended / user-defined section, which stores bools, numbers, and strings for which there aren't well-known indices but instead have well-known names.  These are especially important on certain terminals that have special sequences for things like arrow keys when various modifiers are engaged, e.g. alt+left arrow.
    
    This commit adds support for extended strings, and uses them to add support for various arrow and other keys we weren't previously recognizing.

[33mcommit bf9e9f2ee985760aed634514a921deea9f8c9274[m
Merge: 29b45c2 b0ff1d6
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Nov 24 20:21:36 2015 -0600

    Merge pull request #4662 from eerhardt/Fix4599
    
    Fixing TestSpecialCulturesParsing on CentOS.

[33mcommit b0ff1d6e8712fc9c12546e3fa419cf662e2f2b63[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Nov 24 19:22:39 2015 -0600

    Fixing TestSpecialCulturesParsing on CentOS.
    
    DateTime.TryParse can correctly parse the short DateTime if the Date and Time Separators are different, or if the ShortDatePattern has 4 year digits.  Adding a check for different Date and Time Separators to the test.
    
    Fix #4599

[33mcommit 29b45c2b5efab149c990c5cc0200b3252fc315c1[m
Merge: 293e681 93134c4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Nov 24 20:23:09 2015 -0500

    Merge pull request #4639 from stephentoub/unix_console_members
    
    Implement more of Console on Unix

[33mcommit 293e68187126dd8826856d30d488ae772b7b25b0[m
Merge: 339dcf2 180fdb2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Nov 24 20:03:59 2015 -0500

    Merge pull request #4615 from bartonjs/x509chainstatusflags
    
    Add contract support for new X509ChainStatusFlags values.

[33mcommit 339dcf26af4625489e9bf2a36ce6b9c2a193dd37[m
Merge: 820921f c148fc6
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Nov 24 16:58:04 2015 -0800

    Merge pull request #4652 from pgavlin/gh4631
    
    Fix a bug in Select() on *nix.

[33mcommit 820921f03c0781f7201c4b9223c7680994e1ee5e[m
Merge: 5b18c3f 8dfaaaf
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Nov 24 19:57:49 2015 -0500

    Merge pull request #4655 from justinvp/packaging_verifyencoding
    
    System.IO.Packaging.PackagingUtilities: Avoid ToUpperInvariant allocations

[33mcommit 5b18c3f8dd2a0614cb3aef2f69ae19b2c76db152[m
Merge: 093de55 a7bfd74
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Nov 24 16:56:17 2015 -0800

    Merge pull request #4644 from mellinoe/vector-test-overflow
    
    Fix SByte overflow in Vector<T> tests

[33mcommit 8dfaaaf13cc22c71baf5fdb8a9cac7042c119885[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Tue Nov 24 12:32:49 2015 -0800

    System.IO.Packaging: Avoid ToUpperInvariant allocation
    
    Avoid unnecessary allocations associated with ordinal ignore case
    string comparisons and fix a typo in the name of
    PerformInitialReadAndVerifyEncoding. Also change string.Compare =>
    string.Equals while modifying this file.

[33mcommit c148fc605d4eed7d64d187fa59192619c6b34760[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Nov 23 16:10:32 2015 -0800

    Fix a bug in Select() on *nix.
    
    The translations between PAL <-> platform file descriptor sets were inverted,
    causing incorrect behavior in the case that a Select() completed with any
    signalled file descriptors.

[33mcommit 093de55ac6c886fede1923c48bebedbfd617b3f1[m
Merge: 851cf44 d23c8b7
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Nov 24 09:47:09 2015 -0600

    Merge pull request #4625 from eerhardt/Fix3243
    
    Fix and enable Globalization tests that differ based on OS and culture

[33mcommit 851cf4433aeb2d46911364db07b99d2d58eb309a[m
Merge: 82608fe 3c88498
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Nov 23 21:41:38 2015 -0500

    Merge pull request #4645 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 93134c4d66f9419207da1b3f74ae150be5946a49[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Nov 23 17:17:45 2015 -0500

    Address PR feedback

[33mcommit 3c88498400d595a35fc45b27537113a495adbceb[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Nov 23 17:58:01 2015 -0800

    Rolling back the build tools version update.
    
    This build tools update breaks a number of our internal builds and x-plat builds when because some of the new Msbuild libraries, at least Microsoft.Build.Tasks.Core.dll has references to Array.Empty which will not work when running on mono or a version of .NET less than 4.6 (which our internal builds do).
    
    [tfs-changeset: 1551483]

[33mcommit a7bfd7467b985277b716e4b6d672cfb308511160[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Nov 23 17:36:06 2015 -0800

    Fix SByte overflow in Vector<T> tests

[33mcommit beb7d50f962c1ece1d11e9bb21e2ff248baea85e[m
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Wed Nov 4 16:37:59 2015 -0800

    Clean up path handling and align with legacy behavior
    
    Fixes issues with Path.GetDirectoryName() and relative paths.
    
    - Added directory separator normalizer method.
    - Added comments clarifying behavior and usage.
    - Clarified and simplified internal methods.

[33mcommit d23c8b740521c6aaedd2369c9abc5cd020ba1717[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Nov 23 16:41:02 2015 -0600

    Fix currency negative pattern tests on CentOS, which uses an older ICU version.

[33mcommit 82608fe8f77b13cb6227881928da55b659dd396a[m
Merge: 2806128 3fd223d
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Nov 23 13:51:32 2015 -0800

    Merge pull request #4624 from mellinoe/ping-cmdline-tests-pr
    
    Add some validation/sanity tests for usage of the Unix ping command line tool

[33mcommit 2806128151e59cd3c10264eaca327917b84b0781[m
Merge: e2df706 405b799
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Nov 23 16:31:37 2015 -0500

    Merge pull request #4459 from ianhays/processkill
    
    Fix intermittent perf_process test failure.

[33mcommit 3fd223d64d5c06874ae35d7ec3929b4a81997905[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Nov 23 11:35:39 2015 -0800

    Respond to Unix command-line Ping PR feedback

[33mcommit e2df7064bcd420fe3bab46aa8d69af9df042ae4a[m
Merge: 1674cad 6fe0ecd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Nov 23 16:07:18 2015 -0500

    Merge pull request #4640 from jhendrixMSFT/master
    
    Update to latest build tools package to pick up some fixes.

[33mcommit 6fe0ecd4abbbc5bb9125a8e885cc6acdf4bf65c7[m
Author: Joel Hendrix <jhendrix@microsoft.com>
Date:   Mon Nov 23 12:33:00 2015 -0800

    Update to latest build tools package to pick up some fixes.

[33mcommit accb4ed745d60f90dad0201a9159024ab6c87b39[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Nov 23 15:09:33 2015 -0500

    Fix ReadLine delete on OS X

[33mcommit 405b79985b19048b2195080526a37d99293d2164[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Mon Nov 23 11:18:54 2015 -0800

    Removed CreateProcessInfinite and changed CreateProcessLong to timeout after 10 minutes.

[33mcommit 1674cad7ce5047475be009d05bcfac5915ec4f47[m
Merge: fc6a31d 121ca50
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Nov 23 13:53:14 2015 -0500

    Merge pull request #4626 from mellinoe/partial-facade-refassm
    
    Use new reference assembly package for partial facades.

[33mcommit 95a58123db46dfd576927b9632cd7b17b14f9481[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Nov 23 13:32:43 2015 -0500

    Add GitHub issue numbers to TODOs

[33mcommit 704a4ca386ced45d1cf34841996eadc2b29ee509[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Nov 23 13:23:56 2015 -0500

    Add Unix implementation of Console.WindowTop/Left

[33mcommit 30a31cca1c0b992fda0f3a977f81160e8236a479[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Nov 23 11:31:45 2015 -0500

    Some code cleanup

[33mcommit 2b5593f29d085ffc09f855ba96c9bcab095388f0[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Nov 23 11:30:08 2015 -0500

    Add more ConsoleKeyInfo mappings
    
    e.g. We were missing a bunch that involve the shift key.

[33mcommit dd4e2048e438280560f18e7262485806cf858225[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Nov 23 07:53:10 2015 -0500

    Add and cleanup some tests

[33mcommit e14db6c38281ce92084955c5ae95c0210b00ba98[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Nov 23 07:38:44 2015 -0500

    Add Unix implementation of BufferWidth/Height

[33mcommit 02d4c3e2831f197b5bc4d9941f9d855c6ec455dc[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Nov 23 00:29:22 2015 -0500

    Add back missing ConsoleKeys
    
    There's little value in removing from the enum, as it only serves to make it harder for existing code to compile.
    
    (As with the other commits, this doesn't touch the ref code yet.)

[33mcommit 3fd594b785b283df8a14e20a57ffaaaabb456c3e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Nov 22 23:17:23 2015 -0500

    Add Unix implementation of Console.CursorLeft/Top

[33mcommit 5a76953c74820ee9ef537fc996fa68752843ebfc[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Nov 22 18:52:38 2015 -0500

    Add Unix implementation of Console.KeyAvailable
    
    Our current implementation of reading involving ICANON and ECHO was flawed, such that due to race conditions with typing, keys might or might not be intercepted and displayed on the screen.  For that reason, and to enable the implementation of KeyAvailable, I've changed the implementation to now always be in the appropriate mode, and we then do more handling StdInStreamReader.

[33mcommit ed1495ab3b5a88a51bfa186385a562e40183b7bd[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Nov 22 14:20:09 2015 -0500

    Add Unix implementation of Console.WindowHeight
    
    Windows already had one implemented, so I also made it public.
    
    And I added argument validation to the public Console entrypoints.

[33mcommit 9445b6813ebe43f69dbecda2f9269cf9719d2c5a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Nov 22 14:03:37 2015 -0500

    Reduce allocations related to Console ANSI escape strings
    
    - Cache params arrays for one and two arguments for evaluating terminfo strings
    - Stack allocate most byte buffers for encoding the string before writing it

[33mcommit 353a8550d7d8d705190dc371e3e10aa2908ef0c0[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Nov 22 13:39:10 2015 -0500

    Fix several checks for existing terminfo strings
    
    We should be checking for null or empty, but we're currently just checking for null.

[33mcommit 0b8f533f2692e59a15a7823484f7c44009bb983f[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Nov 22 13:37:21 2015 -0500

    Add Unix implementation of Console.SetCursorPosition

[33mcommit 0b52f45336d9f323b70750cf47b8a803703ceb08[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Nov 22 13:06:32 2015 -0500

    Add Unix implementation of Console.Clear

[33mcommit f30ab3bfe45f981bd0936d6e122d4d552d149f70[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Nov 22 13:01:51 2015 -0500

    Add Unix implementation of Console.Beep

[33mcommit 8a01e106bbe2991706501b3db23a75cf89df9ffe[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Nov 22 10:30:28 2015 -0500

    Add Unix implementation of Console.Title

[33mcommit fc6a31d3a544848d411490d5ca2408e554d3f4cb[m
Merge: f6c3681 4bcdb14
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Nov 23 07:01:46 2015 -0800

    Merge pull request #4635 from kapilash/cbt_test
    
    Enable ChannelBinding Test for CurlHandler

[33mcommit 4bcdb1400b85d2a3d9a0b1bc04e5c08c10f51851[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Mon Nov 23 16:13:38 2015 +0530

    Enable ChannelBinding Test for CurlHandler
    
    Enabling Channel Binding test for curlhandler.

[33mcommit f6c36812e5a914b765a3bc0b1d712eb172b7f79f[m
Merge: 1374608 d50a00d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Nov 21 11:38:12 2015 -0500

    Merge pull request #4629 from axelheer/biginteger-fixpow
    
    Handle overflow in BigInteger.Pow

[33mcommit d50a00dbbddabb5bef8e41c26bac1d9ea799ddbd[m
Author: Axel Heer <axel@heer.eu>
Date:   Sat Nov 21 15:14:18 2015 +0100

    Handle overflow in BigInteger.Pow
    
    Calling Pow on a big integer with a very large exponent leads naturally
    to an overflow, which should result in an ordinary OverflowException.
    The current implementation estimates the result buffer, which leads to
    an unexpected behavior, since that estimate overflows silently. Adding
    `checked` to the estimate fixes this.

[33mcommit 13746088c5fa61a028224582952c95e07ff2e633[m
Merge: 211e8a4 97bdf1e
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Sat Nov 21 18:29:56 2015 +0530

    Merge pull request #4534 from rajansingh10/Bugfix
    
    Fixed Issue #4480, crash due to parent handle getting released before child.

[33mcommit 97bdf1e94e988a65d504dabd5e30ae0f0c37c50a[m
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Mon Nov 16 16:38:34 2015 +0530

    Fixed Issue #4480, ReleaseHandle() call order issue

[33mcommit 211e8a445c6d565a431b914c18d142b04a0f0eba[m
Merge: b7e9fbf 3ddb6dd
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Nov 20 19:48:48 2015 -0800

    Merge pull request #4627 from bartonjs/unix_x500dn_format
    
    Add Unix support for X500DistinguishedName.Format

[33mcommit 3ddb6dd36fa174029ac59450604d3b341d7f476b[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Fri Nov 20 18:21:13 2015 -0800

    Add Unix support for X500DistinguishedName.Format
    
    Format(false) is the same as Decode(None).
    Format(true) is the same as Decode(UseNewLines), except it also has a newline at the end.  This is enabled to telling X500DistinguishedNameDecode to just add an extra delimiter in multiLine mode.

[33mcommit 121ca50791b950e560a6b6a16bd2408219074f01[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Nov 20 16:32:31 2015 -0800

    Use new reference assembly package for partial facades.

[33mcommit d37f6d9fe941e48e337ae32a171c3d3b4f9d2715[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Nov 20 14:17:16 2015 -0800

    Add some validation/sanity tests for the Unix ping command line utility

[33mcommit ac97bd7172731ecef248c9ff6baca22bcf9d3101[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Nov 20 18:07:54 2015 -0600

    Fixing TestCurrencyNegativePatternLocale test for different culture data.

[33mcommit b7e9fbf2f5696f4aecc0031976605ed76d694978[m
Merge: 93797cd ab074de
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Fri Nov 20 16:12:13 2015 -0800

    Merge pull request #4623 from mmitche/fix-outerloop
    
    Use vcvarsall and not vsdevcmd so that cl.exe is on path

[33mcommit ab074de2a2fcfd417c9beff1148a563049d9aba3[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Fri Nov 20 16:08:40 2015 -0800

    Use vcvarsall and not vsdevcmd so that cl.exe is on path

[33mcommit c8dbb89f7701d74383784c0444a1567e3a2cb3f0[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Nov 20 17:17:17 2015 -0600

    Fix some data and number tests that had workarounds for Windows 10 culture data.

[33mcommit 93797cd31234db71ea48a809f033ec46bfc0e55e[m
Merge: d073b1e 6d6bd53
Author: Cory Rivera <corivera@microsoft.com>
Date:   Fri Nov 20 15:28:53 2015 -0800

    Merge pull request #4594 from dotnet/corivera_EmitSNIExceptionMessages
    
    Include Exception Callstack in Exception-Caused Error Messages

[33mcommit d073b1e6d4fc6f1b675fe15684c9c334e85816f2[m
Merge: 69e6abc 20df022
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Nov 20 18:09:11 2015 -0500

    Merge pull request #4613 from stephentoub/ping_fixes
    
    Remove EAP implementation from Ping

[33mcommit 69e6abc1764a452e8bb59ff0649d47849d7e2cde[m
Merge: accaf2a 145e97b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Nov 20 18:09:00 2015 -0500

    Merge pull request #4620 from ellismg/update-linux-testing-doc
    
    Call out managed code may be built on Linux

[33mcommit 2a33513ce70e6c6532b0986ced5c75ca586c9579[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Nov 20 16:19:50 2015 -0600

    Fix and enable NumberGroupSizes test.

[33mcommit accaf2a83ea4c97972530530638d454f86ce558f[m
Merge: 78efdc1 03182de
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Nov 20 14:19:37 2015 -0800

    Merge pull request #4618 from bartonjs/ecdsa_cert_restrictions
    
    Make GetECDsa*Key respect the Key Usage extension

[33mcommit 6d6bd531c5d2b643c1623875d8a7b6ebb0577290[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Fri Nov 20 14:18:27 2015 -0800

    Modify error reporting to propagate SNI exceptions as innerException of SqlExceptions emitted by SqlClient to the user.

[33mcommit 2aa3b48e07c6fe4f960a4f65ac164fb85c3420f2[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Nov 20 16:11:54 2015 -0600

    Fix and enable month and day name tests on OSX.

[33mcommit 78efdc1734dedd0e8d9eed068a15ddd3ec83d46d[m
Merge: e9418ea 8cb599f
Author: Krzysztof Cwalina <kcwalina@microsoft.com>
Date:   Fri Nov 20 13:31:47 2015 -0800

    Merge pull request #4592 from KrzysztofCwalina/ResourceReader
    
    optimized some string allocations

[33mcommit 145e97b07267b177bf675747b22f78b9be0a3408[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Nov 20 13:30:20 2015 -0800

    Call out managed code may be built on Linux
    
    When this document was written, we didn't support building managed code
    on Linux or OSX, but now we have experimental support for doing so. Call
    that out in the document.
    
    Fixes #4616

[33mcommit e9418ea055e9f4f5f4e2320fa1ccf2f20f50b2d0[m
Merge: 34999ee c7a82e3
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Nov 20 13:18:54 2015 -0800

    Merge pull request #4619 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 34999ee032e10f5be7c5f55bbfed8b767668f658[m
Merge: 1aeb5dc 9a48282
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Nov 20 15:30:06 2015 -0500

    Merge pull request #4617 from eerhardt/DateParsing
    
    Fixing and enabling DateTime parse tests with special cultures.

[33mcommit c7a82e30fd5041b6646da14f094532fa49be4d73[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Nov 20 12:23:00 2015 -0800

    Validate dotnet generation even for FX-specific packages
    
    We weren't doing this before and as a result we missed
    a couple packages that had refs much lower than impl.
    
    [tfs-changeset: 1550795]

[33mcommit 20df022e98d33f49b7ac37fef2d0006a48bd5e86[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Nov 20 11:16:03 2015 -0500

    Add more Ping tests
    
    Also remove an unnecessary internal ctor

[33mcommit 9a482822272beb0f0652826c18750bd07c77b42d[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Nov 20 12:52:50 2015 -0600

    Fixing and enabling DateTime parse tests with cultures that have the same date and time separators.
    
    Fix #3616 #4599

[33mcommit 1aeb5dcbf5bf2670f8fe9a9e21c496184379487c[m
Merge: 08fc62a 7e10742
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Nov 20 14:16:46 2015 -0500

    Merge pull request #4612 from gsfreema/master
    
    Fixing a typo in developer-guide.md

[33mcommit 03182ded26e2214b6e56d94b2c2ec50e787a21d6[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Fri Nov 20 11:07:19 2015 -0800

    Make GetECDsa*Key respect the Key Usage extension
    
    The net461 implementation of GetECDsa*Key checks that the certificate subject key oid is id-ecPublicKey and that the Key Usage extension hasn't selected against signature usages (DigitialSignature, NonRepudiation, CrlSign, KeyCertSign).  The port of this code to CoreFX lost the key usage verification.

[33mcommit 180fdb242eb78011bb3dac8bd4a0879c79ba7cb1[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Nov 17 18:12:32 2015 -0800

    Add contract support for new X509ChainStatusFlags values.
    
    These values were added in .NET Framework 4.6.1, and independently to the CoreFX implementation (but not contract).  The Windows error codes also weren't aligned, so a generic message was presented instead of the one which matches.

[33mcommit 7e1074263c37f95ca32eeb5e66d36d0d34b3dadc[m
Author: Gerald Scott Freeman <gsfreema@gmail.com>
Date:   Fri Nov 20 13:08:59 2015 -0500

    Fixing a typo in developer-guide.md
    
    The words 'are' and 'and' were mistyped and need to be switched.  This
    is the same issue that was just fixed in coreclr.

[33mcommit 08fc62a3e686f44207c416e945c0053faa932c3d[m
Author: Lee Coward <leecow@microsoft.com>
Date:   Fri Nov 20 09:26:44 2015 -0800

    Grammar fix-up

[33mcommit 289ba6a5932b82fe9e38ca7d954376c7ee62ae21[m
Author: Lee Coward <leecow@microsoft.com>
Date:   Fri Nov 20 09:24:59 2015 -0800

    Added Full Framework support info

[33mcommit a53a5d8565f82c478b78400e9b2ddc4ab7334e8e[m
Merge: 7b294cc b35d0e9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Nov 20 11:57:07 2015 -0500

    Merge pull request #4589 from eerhardt/Fix4475
    
    Mapping our Optimal CompressionLevel to ZLib's Best Compression

[33mcommit 8cb599f0a5060aa7dac86a62e236f1cb3fe899f7[m
Author: Krzysztof Cwalina <kcwalina@microsoft.com>
Date:   Thu Nov 19 13:51:45 2015 -0800

    optimized some string allocations

[33mcommit b35d0e927dc25197d12118d95290c362b423ebdf[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Nov 19 16:30:57 2015 -0600

    Mapping our Optimal CompressionLevel to ZLib's Best Compression instead of hard-coding our own level - 6.
    
    Fix #4475.

[33mcommit 59cbe2b5acbabc27ead29f4e77eb667de91f9b84[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Nov 20 10:22:08 2015 -0500

    When System.Net.NetworkInformation.Ping had async functionality added to it originally, it was done with the Event-based Async Pattern (EAP).  Then when Task-based Async Pattern (TAP) was added to it, the Task-based implementation was done in a quick manner on top of the EAP implementation.  And now that Ping is being exposed in corefx, it only has the TAP implementation.
    
    There are several ramifications of this and issues to be addressed:
    - The Task-based implementation is suffering from some of the behaviors of the EAP implementation, e.g. completing the Task requires posting back to the original synchronization context, which both is inefficient and can cause problems for a caller that blocks waiting for the result.
    - There's lots of unnecessary code now in Ping.
    - There are members being exposed as public and protected that aren't part of the contract.
    - When a host name is provided, an extra worker was being queued and then synchronously blocked waiting for the results of the DNS lookup.
    
    This commit fixes all of that.

[33mcommit 7b294ccafffbab194bdcaeedb7443c3f32c3fdf1[m
Merge: b45f2e6 90e8f28
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Nov 20 08:58:53 2015 -0500

    Merge pull request #4484 from mellinoe/ping-xplat-pr
    
    Implement Ping on Unix.

[33mcommit b45f2e63f58dffd21c3f9989d387bfc76b4562f0[m
Merge: 6817a97 93a9704
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 19 23:46:44 2015 -0500

    Merge pull request #4604 from stephentoub/curl_novalue_header
    
    Ensure CurlHandler sends no-value headers

[33mcommit 93a9704371ab0b45794f2faa39cefb736c9a71a5[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Nov 19 23:04:29 2015 -0500

    Ensure CurlHandler sends headers with empty values
    
    By default libcurl drops headers with empty values, as it uses an empty value as a sentinel to mean "remove a previously added header with this key name."  If you actually want a header with an event value, it needs to have a semicolon appended to the key name.

[33mcommit 6817a97fe3f72e50c3560b554b8103c0045545b4[m
Merge: f6c630d 163d3af
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 19 22:07:04 2015 -0500

    Merge pull request #4580 from stephentoub/catch_console_exception
    
    Catch right exception in Console for unknown charset

[33mcommit f6c630d80353623591647f0edd7d5e1c72bc5406[m
Merge: 86f24e2 fc95e72
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 19 22:05:27 2015 -0500

    Merge pull request #4600 from eerhardt/Fix4455
    
    Changing the order of parameters to EncodeIntoBuffer, which works around #4455 when running on Mono.

[33mcommit 86f24e20f1bd3f7ecbee3dfc1703ba9ecf3999ea[m
Merge: 6f900be 7cddb0e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 19 21:33:58 2015 -0500

    Merge pull request #4584 from ericstj/reduceInteropDependencies
    
    Remove Interop dependencies from reference assemblies

[33mcommit 163d3af26e562f520a0609dac7af9972f25dfc23[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Nov 19 09:10:47 2015 -0500

    Catch exception for unknown charset
    
    When System.Console.dll was first ported to Unix, we didn't have our
    globalization stack implemented at all, and Encoding.GetEncoding would
    throw a NotSupportedException if the supplied charset wasn't recognized,
    so Console was written to catch NotSupportedException to handle the case
    of an unknown charset.  Now that our stack is implemented, GetEncoding
    throws an ArgumentException as documented on MSDN, and we need to fix
    Console to catch the right exception type, otherwise an unknown charset
    causes exceptions when attempting to use Console. Further, as arbitrary
    encoding providers could throw arbitrary exceptions from GetEncoding, we
    need to catch and eat everything.

[33mcommit 6f900be8dfaa2d7342b9842403fcfa43cd5d5ec3[m
Merge: b76fe83 3354311
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Nov 19 18:06:53 2015 -0800

    Merge pull request #4601 from ellismg/disable-test
    
    Disable failing test against active issue

[33mcommit b76fe83b71dfed9f796f97cde23c6df24502a380[m
Merge: f431edb d3be6bb
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Fri Nov 20 07:28:48 2015 +0530

    Merge pull request #4562 from kapilash/client_certs
    
    Support TLS client certs in CurlHandler (for libcurl+openssl)

[33mcommit f431edb2856b6a985c1f9ef25d4cf34e5a52db4a[m
Merge: 9fdc673 aaaceee
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Nov 19 17:02:27 2015 -0800

    Merge pull request #4585 from davidsh/websocket_protocol
    
    Port more System.Net.WebSockets.Client tests

[33mcommit 3354311800abedaab42849bb39283c67387244fc[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Nov 19 16:17:01 2015 -0800

    Disable failing test against active issue

[33mcommit 9fdc673ef392f1426ad613ac388851df00166b43[m
Merge: c91d6a3 03eb9da
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Nov 19 16:00:26 2015 -0800

    Merge pull request #4598 from mmitche/add-outerloop
    
    Add outerloop testing to corefx netci

[33mcommit 03eb9daa04796b8f30d9160d36c79a54d31c4526[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Nov 19 15:56:32 2015 -0800

    Fixup

[33mcommit 2f63d91d96dd4ac4fdbac3d47494f3a60ea4c115[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Nov 19 15:53:50 2015 -0800

    Add outerloop testing to corefx netci

[33mcommit e97f96621ee044f284724f17c51895725b4c5ee9[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Thu Nov 19 15:37:38 2015 -0800

    Modifies SNI error reporting to include exception callstack in error messages caused by exceptions.

[33mcommit 90e8f28effe87389d30b877f65fd22219d8077d9[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Nov 19 11:56:41 2015 -0800

    Respond to PR feedback

[33mcommit aaaceeeba25657ebf77b7a4cc99c0a751d85b826[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Nov 19 11:14:57 2015 -0800

    Address PR feedback

[33mcommit c91d6a3e0a97d866fdf8105f8cb128a8bd6adc20[m
Merge: 38047a1 c8005cd
Author: Krzysztof Cwalina <kcwalina@microsoft.com>
Date:   Thu Nov 19 11:14:44 2015 -0800

    Merge pull request #4576 from KrzysztofCwalina/ResourceReader
    
    Removed dependency from ResourceReader to BinaryReader

[33mcommit 38047a1659675f5ed475863effa7fa1fcac9c119[m
Merge: e63c2de 5aea424
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 19 13:49:09 2015 -0500

    Merge pull request #4583 from stephentoub/update_test_runtime
    
    Pick up newer test-runtime

[33mcommit ad216f04b61694c2cdabfe53e93846469104fc96[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Thu Nov 19 10:30:13 2015 -0800

    Port more System.Net.WebSockets.Client tests
    
    Add subprotocol tests
    Add unknown/incorrect websocket endpoint tests

[33mcommit c8005cdfa0bd48210e168c586a3170217bf91510[m
Author: Krzysztof Cwalina <kcwalina@microsoft.com>
Date:   Wed Nov 18 19:26:48 2015 -0800

    Removed dependency from ResourceReader to BinaryReader
    
    We want to add resource reader to the low level layer of the platfrom,
    but more BinaryReader a bit higher.

[33mcommit fc95e7231f6c309d0fddc80ea9ec0ab28d77e4b3[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Nov 19 11:06:51 2015 -0600

    Changing the order of parameters to EncodeIntoBuffer, which works around #4455 when running on Mono.
    
    When calling stackalloc on Mono, and then immediately passing the size parameter into another method, Mono is zero'ing out the size int. This results in EncodeIntoBuffer throwing an exception because it doesn't think it has any room in the buffer to write the encoded characters.
    
    Switching the order of the parameters appears to work around the issue on Mono, and shouldn't have any negative results on other platforms.
    
    Fix #4455.

[33mcommit d3be6bbe9aee8f748f2688fb7bb00c577ac4b11e[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Wed Nov 18 12:55:20 2015 +0530

    Use libcurl+openssl to support TLS client certs
    
    Make curlHandler support Client Certificates when the linked libcurl's
    ssl backend is compatible with openssl. CurlHandler is also updated to
    support ChannelBindingToken

[33mcommit 7cddb0e175d51afc0cfd049a0c94d310990f38cc[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Nov 19 08:46:03 2015 -0800

    Remove Interop dependencies from reference assemblies
    
    We don't want reference assemblies to have an interop dependency.
    This is because we don't like the shape of the interop contract and
    plan to split it up such that future platforms might not have to
    implement the entire set of API (eg: COM related APIs).
    
    Both of these contracts were referencing Interop just for SafeHandle.
    Since that's already been pushed down we'll move these to use
    System.Runtime.Handles instead.
    
    @BartonJS already fixed a crypto refefrence dependency on interop
    (thanks) which leaves us with two remaining dependencies in refs:
    System.IO.MemoryMappedFiles
    System.IO.UnmanagedMemoryStream
    
    Both of those dependencies exist due to SafeBuffer.  @yizhang82
    is looking into refactoring interop in order to split some of these
    types out.

[33mcommit 5aea424a2119a886241468951656410ba6b04c85[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Nov 19 11:39:00 2015 -0500

    Pick up newer test-runtime

[33mcommit 7d775acd6db8e23b22bc976dd52ad336d31e5583[m
Author: Cory Nelson <cnelson@ctlglobalsolutions.com>
Date:   Thu Nov 19 10:16:22 2015 -0600

    Revert "Avoid repeated interface call as suggested by @stephentoub."
    
    This reverts commit c9953f400dc80d6ca7d918d2e8cd8c1d43c0ede2.

[33mcommit e63c2de265217c9d2891f9a3a036045b0977a39f[m
Merge: 93825ca 6c1145d
Author: Krzysztof Cwalina <kcwalina@microsoft.com>
Date:   Wed Nov 18 17:51:15 2015 -0800

    Merge pull request #4568 from KrzysztofCwalina/ResourceRWSplit
    
    Split ReasourceReader and ResourceWriter

[33mcommit 93825caaff0e45ca9fa50faef2c91b16e1c8cfd5[m
Merge: be9efe5 ea5cd89
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Nov 18 18:10:29 2015 -0500

    Merge pull request #4570 from pgavlin/GH4396
    
    *nix: do not queue completion callbacks for closed sockets.

[33mcommit be9efe5d7b21432014a13fffed62d5d99f0466d3[m
Merge: a528cc9 e999eba
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Nov 18 17:46:04 2015 -0500

    Merge pull request #4407 from hughbe/master
    
    Cleanup String Tests

[33mcommit a528cc9772699e2ca0beb6fbd4f511414b46ff91[m
Merge: 45b0680 1f4d83b
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Wed Nov 18 14:06:21 2015 -0800

    Merge pull request #4518 from justinvp/ipaddress_fields
    
    Reduce the size of System.Net.IPAddress

[33mcommit cef5578af5e1f834f391809eba3ad704d1a5ba0c[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Nov 17 16:22:02 2015 -0800

    Fix a few issues with xplat Ping and tests
    
    * The data buffer was not being properly copied from real ICMP responses (in the raw sockets path). If you are doing an IPv4 ping, the socket response includes the IP header (IPv6 does not), so the offset was wrong for IPv4 pings, and you'd get part of the IP header in your returned data buffer. I fixed that.
    
    * Added a Task.Run call around the process exit's callback.
    
    * Use ConfigureAwait(false) on the ReadToEndAsync call in the process stdout reading/parsing. All async calls should have this now.
    
    * Rework the Ping test async functionality. These would deadlock if Xunit's SynchronizationContext was limited to one thread (either by default or by explicitly specifying that in the runner).

[33mcommit ea5cd8959875c41d50b2671c1892588399f19598[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Wed Nov 18 10:22:34 2015 -0800

    *nix: do not queue completion callbacks for closed sockets.
    
    This matches Winsock behavior.
    
    Fixes #4396.

[33mcommit 6c1145daa2c782460d30baa53191a27e1368351c[m
Author: Krzysztof Cwalina <kcwalina@microsoft.com>
Date:   Wed Nov 18 09:35:25 2015 -0800

    Splited ReasourceReader and ResourceWriter
    
    The reader will be used commonly in very low level scenarios.
    For example, we want to move all corefx to use the reader instead of relying on ResourceManager.
    On the other hand, the writer is mainly for tooling scenarios.

[33mcommit e999eba93970c60d8a074637fd2473167824b8f7[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Wed Nov 18 19:55:49 2015 +0000

    Cleanup System.Runtime.String Tests

[33mcommit 45b068019e51555ade8c2dc9814d371e4b31d19d[m
Merge: 8a2435d 6923377
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Nov 18 14:25:17 2015 -0500

    Merge pull request #4567 from stephentoub/fix_process_deadlock
    
    Fix deadlock when ending process watching on Unix

[33mcommit 6923377f1fcccbf1670564d3234286ceafdfc005[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Nov 18 11:25:18 2015 -0500

    Fix deadlock when ending process watching on Unix
    
    Move a RegisteredWaitHandle.Unregister out of a lock.

[33mcommit 8a2435dfe9860cdaa6b5dbaa28728a91458e8d56[m
Merge: c974a9f a269a93
Author: Rich Lander <rlander@microsoft.com>
Date:   Wed Nov 18 07:51:45 2015 -0800

    Merge pull request #4566 from blackdwarf/master
    
    Add additional data to patents file

[33mcommit c974a9f36f8ce405782e0d2ecb5cbb867ec09563[m
Merge: ddd1dc7 211d71a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Nov 18 07:55:01 2015 -0500

    Merge pull request #4558 from dotnet/corivera_RemoveSNIProxyGCHandle
    
    Removes redundant GChandle object from SNIProxy.

[33mcommit ddd1dc74a3183ac456f4b516f9dce5167803b543[m
Merge: d76765d 131ba90
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Nov 18 07:54:09 2015 -0500

    Merge pull request #4560 from bartonjs/x509chain_verifytime_tests
    
    Add X509Chain tests for certificate expiry

[33mcommit a269a93daff4256c05154fe12b33ce2c84d8ae42[m
Author: Zlatko Knezevic <zlakne@microsoft.com>
Date:   Wed Nov 18 02:23:18 2015 -0800

    Add additional data to patents file

[33mcommit d76765dd53c47c47e4c9f18786020cab5d9d08a2[m
Merge: 5b6dd31 d74edc6
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Tue Nov 17 20:09:48 2015 -0800

    Merge pull request #4559 from bartonjs/csp_contract
    
    Fix bad dependency in S.S.Cryptography.Cng contract

[33mcommit d74edc660144d0179f8ce94a0e0d5512fbb8a004[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Nov 17 18:20:34 2015 -0800

    Fix bad dependency in S.S.Cryptography.Cng contract
    
    The contract depended on System.Runtime.InteropServices when it really wanted System.Runtime.Handles.

[33mcommit 131ba904cd50fd482c67787ea42462656e59e155[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Nov 17 18:18:52 2015 -0800

    Add X509Chain tests for certificate expiry

[33mcommit 5b6dd31c76cd24dd97da99d57ebb57a5dd991c97[m
Merge: 9240d3a e26e8c9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Nov 17 21:07:30 2015 -0500

    Merge pull request #4552 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 9240d3a674a6ea72be7bb0333350bf5fa9ea21f2[m
Merge: be57ad2 53bc1fe
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Nov 17 21:05:26 2015 -0500

    Merge pull request #4557 from stephentoub/fix_task_test
    
    Fix recently added Task test

[33mcommit be57ad238e214d9c90909dd0db9a4386a9faaf77[m
Merge: abcc2b2 eea9c53
Author: Khoa Dang <khdang@users.noreply.github.com>
Date:   Tue Nov 17 18:02:57 2015 -0800

    Merge pull request #4554 from khdang/fix_xmlserializer_timespan
    
    Fix XmlSerializer writes empty element when serializing TimeSpan

[33mcommit 211d71ae51a48b68b5fadb05a48ae3774d7e0671[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Tue Nov 17 17:39:42 2015 -0800

    Removes redundant GChandle object from SNIProxy.

[33mcommit 53bc1fe695e84604374ff36083b56371506d23ee[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Nov 17 20:16:29 2015 -0500

    Fix recently added Task test
    
    The test needs to run its work off of xunit's thread in order to escape
    the synchronization context that will mess up the results of the test.
    But we were inadvertently still potentially running on the calling thread
    due to how we were waiting on the task.

[33mcommit abcc2b21db2757a0465ad1787f4c1ae1e8b8d32c[m
Merge: 259809a 591d7ac
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Tue Nov 17 17:09:18 2015 -0800

    Merge pull request #4549 from tarekgh/SupportUnicode8
    
    Support Unicode 8 in System.Text.Encodings.Web

[33mcommit eea9c530fd7355ca157bfd5d6e65fdc90cb111e7[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Tue Nov 17 16:22:43 2015 -0800

    Fix XmlSerializer writes empty element when serializing TimeSpan

[33mcommit 591d7ac5fbd68dc88380c1f273e0a63da1dffa21[m
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Tue Nov 17 12:21:04 2015 -0800

    Support Unicode 8 in System.Text.Encodings.Web
    
    The change here is to upgrade the Unicode data used in System.Text.Encodings.Web
    from Unicode version 7.0 to 8.0. Also the change fixes the issue in the data
    which we used to ignore the codepoints inside the spans like:
    
       3400;<CJK Ideograph Extension A, First>;Lo;0;L;;;;;N;;;;;
       4DB5;<CJK Ideograph Extension A, Last>;Lo;0;L;;;;;N;;;;;
    
    But now with the change,  all codepoints inside the spans are included if it has
    one of the supported category
    
    Note: We need to port the tool that generate the Unicode data to somewhere.
    Currently we don’t include any tools in corefx repo so we need to find a home
    for such tool (maybe corefx-tools repo?).

[33mcommit e26e8c9401be3ef08b8377aa287210e61bd6ef76[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Nov 17 15:01:27 2015 -0800

    Remove use of NuGetIngoreLockFile
    
    Remove use of an outdated property that was integrated from .NET Native to .NET Core as part of the dev workflow work.  This property does not need to be set in .NET Core, we use a new enough version of DNX such that everything understands everything.
    
    [tfs-changeset: 1549366]

[33mcommit 259809a2230a9db62da546847dbc0f7809d3feb0[m
Merge: 42d0b35 ba56eb0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Nov 17 17:52:13 2015 -0500

    Merge pull request #4550 from pallavit/Issue#3134
    
    Add ConditionalFact to System.ServiceProcess.ServiceController tests

[33mcommit c9953f400dc80d6ca7d918d2e8cd8c1d43c0ede2[m
Author: Cory Nelson <cnelson@ctlglobalsolutions.com>
Date:   Tue Nov 17 16:45:52 2015 -0600

    Avoid repeated interface call as suggested by @stephentoub.

[33mcommit 19924406b79bcaa6091d8340c5ca658f03ef3cb1[m
Author: Mariana Rios Flores <mariari@microsoft.com>
Date:   Tue Nov 17 14:37:35 2015 -0800

    Fix bad merge introduced with changeset 1548843 (RestorePackages property back in the file)
    
    [tfs-changeset: 1549358]

[33mcommit ba56eb08a466f5bb014c3cbc9c4dfc04be2ee2a0[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Tue Nov 17 12:30:21 2015 -0800

    Add ConditionalFact to System.ServiceProcess.ServiceController tests
    Fixes Issue#3134

[33mcommit 42d0b3583c26c98f2f0ba3a93dcd0ca476ea73ef[m
Merge: 3ffb86d 15b77be
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Nov 17 16:42:19 2015 -0500

    Merge pull request #4542 from stephentoub/task_rca_tests
    
    Add several tests for Task's RunContinuationsAsynchronously

[33mcommit dd67d83ff67a25f617e0c49c7fdcfcc1d55cd607[m
Author: Mariana Rios Flores <mariari@microsoft.com>
Date:   Tue Nov 17 13:22:10 2015 -0800

    [tfs-changeset: 1549337]

[33mcommit 5a723128c22b42050a451c9c4ac6bfcec996a2f2[m
Author: Cory Nelson <cnelson@ctlglobalsolutions.com>
Date:   Tue Nov 17 14:55:29 2015 -0600

    Optimize Enumerable.Skip for IList.

[33mcommit 3ffb86d23bb1c69e49397ff461a7f5efcfb256e7[m
Merge: bd9dfa0 c001e36
Author: Cory Rivera <corivera@microsoft.com>
Date:   Tue Nov 17 12:29:06 2015 -0800

    Merge pull request #4548 from dotnet/corivera_MarsFINSessionBugFix
    
    SNIMarsConnection FIN Session Removal Fix

[33mcommit bd9dfa0e37625517b9cb0202b7dfa9924039c00d[m
Merge: e130983 8aacdee
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Nov 17 14:36:38 2015 -0500

    Merge pull request #4536 from stephentoub/vb_newline
    
    Obsolete Microsoft.VisualBasic.Constants.vbNewLine

[33mcommit 2fd681e1ed9c67fc8683938ad2e264e44cd2e5ff[m
Author: Mariana Rios Flores <mariari@microsoft.com>
Date:   Tue Nov 17 11:29:38 2015 -0800

    Fixing merge conflict produced by the FI of changeset 1547627, checked-in in ProjectK as changeset 1548846
    
    [tfs-changeset: 1549309]

[33mcommit c001e36efc54e15ce5d9ee085a35621aa65b01ef[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Tue Nov 17 11:19:55 2015 -0800

    Fixes a bug in SNIMarsConnection where FIN sessions would get removed from the session list immediately before checking if the received session was in the list. Thus an error would be thrown on every FIN session, even though the session should be treated as valid

[33mcommit e130983bac747218caac500308026b2cc514d3f5[m
Merge: 3d0ba1c c2f47ef
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Nov 17 13:54:11 2015 -0500

    Merge pull request #4523 from stephentoub/delete_envexit_consoleapp
    
    Delete the EnvironmentExitConsoleApp from System.Runtime.Extensions tests

[33mcommit 3d0ba1cee30dd75b4634701ad2627c1a26063502[m
Merge: 4bbfc43 d98b02a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Nov 17 13:51:26 2015 -0500

    Merge pull request #4545 from dotnet/Petermarcu-patch-1
    
    Removing the word "Generations"

[33mcommit 4bbfc43a40e9315d3997f11494c9f92d9f1ac596[m
Merge: dc25e27 1cca223
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Nov 17 13:46:33 2015 -0500

    Merge pull request #4524 from stephentoub/fix_registry_test
    
    Tweak registry test around max nested length

[33mcommit d98b02a85f0c30c32b28b9d76a2abb31c8a6b9e8[m
Author: Peter Marcu <Peter.Marcu@Microsoft.com>
Date:   Tue Nov 17 09:42:54 2015 -0800

    Update getting-started-core.md

[33mcommit 6221dee91898a7c560eed7b2bb3b1b1376b145da[m
Author: Peter Marcu <Peter.Marcu@Microsoft.com>
Date:   Tue Nov 17 09:34:17 2015 -0800

    Removing the word "Generations"

[33mcommit 15b77be65180acba403c45d7757b9216440addbb[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Nov 16 12:25:54 2015 -0500

    Add several tests for Task's RunContinuationsAsynchronously

[33mcommit 1f4d83b746b9d67a523e93d2517edbfaf8ed7ecf[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Sat Nov 14 12:07:43 2015 -0800

    Reduce the size of System.Net.IPAddress
    
    Reduce the size of IPAddress from 40 bytes to 24 bytes (64 bit).
    Also avoid an unnecessary array allocation for IPv4 addresses.

[33mcommit 52ce1e2a3ad49dc8d4e4847285148646b2731155[m
Author: Mariana Rios Flores <mariari@microsoft.com>
Date:   Mon Nov 16 17:32:28 2015 -0800

    Disabling RestorePackages != false in dir.targets until we have more of this changesets integrated from Fxmain. This in order to unblock the build.
    
    [tfs-changeset: 1548857]

[33mcommit 525354be26f628a2a18ac4439f5a66c3697c1f88[m
Author: Mariana Rios Flores <mariari@microsoft.com>
Date:   Mon Nov 16 16:35:26 2015 -0800

    [tfs-changeset: 1548846]

[33mcommit c183f4176377fbdee3e56b5fd05c7f48ddbda456[m
Author: Mariana Rios Flores <mariari@microsoft.com>
Date:   Mon Nov 16 16:22:23 2015 -0800

    [tfs-changeset: 1548843]

[33mcommit dc25e27e1349afaff2d5bf39c8f9f0d56cb16529[m
Merge: e6c9ce8 d573223
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Nov 16 18:28:43 2015 -0500

    Merge pull request #4495 from bartonjs/unix_sslstream_idna
    
    Support IDNA host matching on Unix SslStream

[33mcommit e6c9ce88f04a0aa471d26870b32439657fe75e3b[m
Merge: 13505fd ee4ab86
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Nov 16 18:28:32 2015 -0500

    Merge pull request #4525 from stephentoub/address_pr_netrequests
    
    Address PR feedback for System.Net.Requests

[33mcommit 13505fd1dc72958a0b4eb952ac1d8a89cafef565[m
Merge: 75bfd30 8bedbc4
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Nov 16 13:28:09 2015 -0800

    Merge pull request #4528 from davidsh/websocket_tests_2
    
    Port more System.Net.WebSockets.Client tests

[33mcommit 75bfd30b46afc24b5f56b88407bf9cbe58f42892[m
Merge: 8977259 1f4deea
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Mon Nov 16 12:53:44 2015 -0800

    Merge pull request #4483 from CIPop/remove_ssl23
    
    Removing SSLv2 and SSLv3 support from System.Net.Security

[33mcommit 897725987b30aba3363afd0a3a08992ec02e8923[m
Merge: 905a194 b19ff34
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Mon Nov 16 12:45:29 2015 -0800

    Merge pull request #4538 from dotnet/StandardizedErrorMessages
    
    Standardize Managed SNI Error Messages.

[33mcommit f235dd27e8d146f949418a8d17c11f0870cc4cb6[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Nov 16 12:02:15 2015 -0800

    Raise Ping timeout for tests slightly
    
    The Linux implementation is timing out more than expected in these tests, because the default timeout value for them is very low, actually the minimum timeout for the ping utility. The ping utility code path is being taken in the CI runs because of the lack of permissions. Interestingly, the OSX tests are not timing out on these requests.

[33mcommit 1f4deea8946d2e54dfd3c88e64c85bc3c3d9805c[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Thu Nov 12 16:35:32 2015 -0800

    Removing SSLv2 and SSLv3 support from System.Net.Security.
    
    APIs will throw NotSupportedException if SSLv2 or v3 is used. This
    behavior is different from .NET Desktop.
    Tests have been changed to pin this new behavior.
    Increased passing-test timeouts to 15s.
    
    Fix #3114 (partial), #4467

[33mcommit b19ff343706fe2088e5d0b9dac98d2bd50826683[m
Author: Cory Rivera <corivera@microsoft.com>
Date:   Mon Nov 16 10:53:49 2015 -0800

    This changeset changes managed SNI to use standardized Strings.resx error messages when reporting errors.

[33mcommit 8aacdeeec583f045e55b9daf62f6e8e72afb19fd[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Nov 16 12:33:03 2015 -0500

    Obsolete Microsoft.VisualBasic.Constants.vbNewLine

[33mcommit 8bedbc44c65e25e7529a2b965fa42cce83485e76[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Sat Nov 14 17:18:32 2015 -0800

    Port more System.Net.WebSockets.Client tests
    
    Continued porting internal ToF tests to GitHub.
    Modified tests to use a good dev pattern of 'using' around websocket use.

[33mcommit 905a1940bcda0afdca2f14ceb2b0161ebc4d1d02[m
Merge: 2e6a24d 29390d3
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Nov 15 20:55:59 2015 -0500

    Merge pull request #3770 from jamesqo/uma-behavior
    
    Fix inconsistent behavior of UnmanagedMemoryAccessor.ReadDecimal()

[33mcommit 2e6a24d292e4ad7506dc9562b3d4d2c5c0205b83[m
Merge: c16dad4 59c9f29
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Nov 15 20:00:35 2015 -0500

    Merge pull request #4526 from stephentoub/disable_timeout_tests
    
    Disable three System.Net.Security tests that repeatedly timeout

[33mcommit 59c9f299fba30a2ac3ca328d3013c70ca28bb1f5[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Nov 15 19:26:25 2015 -0500

    Disable three System.Net.Security tests that repeatedly timeout

[33mcommit c16dad4c106d6753483e3b72dd4a955de585dd64[m
Merge: 5250ca7 c06de03
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Nov 15 19:18:38 2015 -0500

    Merge pull request #4522 from jamesqo/reg-cleanup
    
    RegistryKey: Use using instead of try/finally

[33mcommit ee4ab86ee03873776cc69b290393685fa1f8175b[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Nov 15 19:17:09 2015 -0500

    Address PR feedback for System.Net.Requests
    
    - Remove unnecessary string.Format in WebException
    - Replace several string.Compare calls with string.Equals
    - Improve FromAsync usage in WebRequest

[33mcommit 1cca223383cde4bb993858be51fa187cdfc9ccca[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Nov 15 18:53:13 2015 -0500

    Tweak registry test around max nested length
    
    Fix a comment and verify both sides of a max length limitation.  The nesting limit includes all parts of the registry path, not just the new parts being appended.

[33mcommit c2f47efa5705e1ee85667a4e63ab1abde497efbe[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Nov 15 18:00:00 2015 -0500

    Delete the EnvironmentExitConsoleApp
    
    We have a generic utility for offloading test work to another process.  We no longer need a custom console app and custom process launching logic.

[33mcommit 29390d3c7dba09a38671201cecc331495719bd9f[m
Author: James Ko <jamesqko@gmail.com>
Date:   Sun Nov 15 13:20:54 2015 -0500

    Fix behavior when reading decimals in UnmanagedMemoryAccessor
    
    To maintain consistency with the version in mscorlib, we have to throw ArgumentException when reading a bad value.

[33mcommit c06de0312cb5249301803d88af93df2408fd4b84[m
Author: James Ko <jamesqko@gmail.com>
Date:   Sun Nov 15 13:03:46 2015 -0500

    RegistryKey: Use using instead of try/finally

[33mcommit 5250ca777a2e64a2ce4f57bfa399f9357a551b89[m
Merge: 5a426a4 fa74380
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Nov 14 22:25:39 2015 -0500

    Merge pull request #4519 from stephentoub/remove_table_readme
    
    Remove component table from README.md

[33mcommit 4bba20b41312e2d46477c14dedd4474482f762dd[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Sat Nov 14 18:19:26 2015 -0800

    Ignore exceptions thrown from Process.Kill when ping request has timed out
    
    We are only trying to ensure we don't leave behind a zombie process here. If the process is already exiting, then we don't care that our Process.Kill() call failed, since the process is ending anyways.

[33mcommit 5a426a4372d62998cfb8f270c2454d34276f4357[m
Merge: 8a6c1f2 f58cc5d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Nov 14 20:46:08 2015 -0500

    Merge pull request #4515 from stephentoub/readme_update
    
    Add CentOS to README.md badges

[33mcommit e19eb68b7a185f1ce44a06f4311097933be0666a[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Sat Nov 14 14:30:49 2015 -0800

    Add a fallback for an IPv4 address in the TestSettings

[33mcommit f58cc5d3e498ca6f41d8feed22c6084f65fb0382[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Nov 14 13:45:10 2015 -0500

    Add CentOS to README.md badges

[33mcommit fa7438068b8a310a1dd9340368b0beee0ec83318[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Nov 14 15:58:20 2015 -0500

    Remove component table from README.md
    
    When the corefx repo was first created, we had four components in it, and
    it made sense to list them out on the README.md.  Since then, the table
    has expanded, to include more components, to include badges, to include
    descriptions of each component, etc.
    
    However, the table is still with regards to all of the components in
    corefx, missing a few dozen entries.  It contains text duplicated from the
    NuGet package descriptions, which need to be kept in sync.  And it contains
    badges for the version numbers pulled from MyGet, and these badges can
    take quite some time to load.  Etc.
    
    I propose we get rid of the table, and replace it with basic information
    and links where the same data can be retrieved, e.g. on the structure of
    the src folder (which essentially provides an always-up-to-date list of
    all components in the repo), and with a link to the daily builds gallery
    on MyGet.

[33mcommit 8a6c1f2164e360a1c51ab49dda593683793da4ce[m
Merge: fb968fc a81da39
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Sat Nov 14 12:56:09 2015 -0800

    Merge pull request #4517 from stephentoub/disable_crypto_centos
    
    Temporary workaround to get ECDsa tests passing on CentOS

[33mcommit fb968fc25ab511e725a3614868e9e6dab74f60ac[m
Merge: fa12212 64ef4cf
Author: VSadov <vsadov@microsoft.com>
Date:   Sat Nov 14 12:35:47 2015 -0800

    Merge pull request #3751 from JonHanna/expression_new_vistor
    
    Use new visitor class for EnumerableQuery expressions.

[33mcommit fa122124393d13a2c0806e893bb3d4417b9dc108[m
Merge: 3731e48 3e1587e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Nov 14 15:30:38 2015 -0500

    Merge pull request #4516 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 3731e48bb1110754c3796177d5c3b7aa2e1bbca5[m
Merge: c00cb32 90a894a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Nov 14 15:11:43 2015 -0500

    Merge pull request #4514 from stephentoub/random_test
    
    Add a test for Guid.NewGuid() randomness

[33mcommit a81da3939236e64794a42046568bb36bdbbf1bd5[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Nov 14 15:06:50 2015 -0500

    Temporary workaround to get ECDsa tests passing on CentOS
    
    Makes three tests execute conditionally based on whether secp224r1 is enabled.  It's a bit hokey, in that we're using the very mechanism we're intending to test, and further doing string comparison against a known error message, but it's good enough as a temporary workaround, and better than just disabling the tests on all Linux. (Eventually we'll want to look into allowing PlatformSpecific/ActiveIssue to be specialized further.)

[33mcommit 3e1587e687d5fb55e14e1c878bde7e7c693886b6[m
Author: Jan Kotas <jkotas@microsoft.com>
Date:   Sat Nov 14 11:51:02 2015 -0800

    Fix build break in WinRTFileStream
    
    [tfs-changeset: 1548428]

[33mcommit 90a894a9f8a4e3f503cad0fd8799460a2e280362[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Nov 14 09:26:29 2015 -0500

    Add a test for Guid.NewGuid() randomness
    
    We already have a test for RandomNumberGenerator that provides minimal verification of the randomness of the generated data.  This commit just moves that test to a common location and then reuses it in System.Runtime's tests to verify the randomness of generated Guids.

[33mcommit 50a0f5205d49c1fbf076dabd541b8707bd039430[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Nov 9 17:01:06 2015 -0800

    Implement Ping on Unix.
    
    There are two "modes" in which a Ping can be sent on Unix. If the user has
    privileges to create and use raw sockets, then the "good" path is taken.
    The good path uses raw sockets to send ICMP echo requests to the given
    host, and then listens for ICMP echo replies. If the user does not have
    privileges to do so, then the implementation simply launches a new process
    using the ping or ping6 utility program (depending on whether the
    destination address is an IPv4 or IPv6 address), parses the output, and
    returns the result. The information from the "bad path" is less reliable,
    and doesn't include things like the IPStatus property, which should be
    able to cover most of the possible ICMP response message types, not just
    "Success". Additionally, the "bad path" can not send arbitrary buffers
    along with the echo request, although we can at least preserve the size of
    the data. This means you can't inspect the PingReply and see that the same
    data you sent in the echo request was returned unchanged.

[33mcommit c00cb322c8abcb50b2c2b6f1971f6c0bb5de094d[m
Merge: 23a59d3 610a47a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Nov 14 00:24:12 2015 -0500

    Merge pull request #4513 from stephentoub/conditional_websockets
    
    Use new ConditionalFact in WebSockets tests

[33mcommit 23a59d3fed169af6c7c1aeb7743fb2ebe6a00589[m
Merge: 74d9fd3 ab8fb55
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Nov 13 23:54:52 2015 -0500

    Merge pull request #4464 from Page-Not-Found/removeunderscore
    
    Remove leading '_' from all source file names

[33mcommit 610a47a65c637c87ea0ed57d0392b142ed974b2f[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Nov 13 23:25:01 2015 -0500

    Use new ConditionalFact in WebSockets tests
    
    Upgrade to new buildtools and try out ConditionalFact in the WebSockets tests.  Other tests elsewhere in corefx can be moved over separately.

[33mcommit ab8fb5531134b4018b09d45040f334d2dcfdda54[m
Author: Page-Not-Found <sriren6029@gmail.com>
Date:   Fri Nov 13 21:09:49 2015 -0500

    PR Comments changes.

[33mcommit 74d9fd3669e1ff48b893ba19eb7d9288730d2dd1[m
Merge: 2417cc1 c6d1cb3
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Nov 13 18:04:00 2015 -0800

    Merge pull request #4506 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 2417cc15a31199521167549c280903e1732d3c0d[m
Merge: 702a531 0cb1c0e
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Nov 13 16:24:34 2015 -0800

    Merge pull request #4505 from ellismg/fix-win7-outerloop
    
    Move to newer dnx toolset

[33mcommit c6d1cb3bbd981d29f4421429755652d7b4b9499a[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Nov 13 16:19:33 2015 -0800

    Ensure that minimum reference generation satisfies minimum implementation generation.
    
    [tfs-changeset: 1548362]

[33mcommit 702a5314bf7d5b1084e297db938ac05efe690e14[m
Merge: ecd3e63 9c04117
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Nov 13 18:58:24 2015 -0500

    Merge pull request #4493 from stephentoub/startsendswith_nullinstrings
    
    Add String tests for null chars in strings

[33mcommit ecd3e63febe15b58ae2a4fb1252bb0c5757f6523[m
Merge: 67a13ab ebf2df4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Nov 13 18:58:12 2015 -0500

    Merge pull request #4494 from stephentoub/stringattribute_encodingfallback
    
    Add test for runtime's encoding fallback when loading strings

[33mcommit 0cb1c0e299cf2a7c8ecc5afcc0195e4610647397[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Nov 13 14:05:40 2015 -0800

    Move to newer dnx toolset
    
    The previous version we were using contained an HTTP client bug that we
    were hitting on Windows 7 which prevented outerloop CI runs from working.
    
    Fixes #4468

[33mcommit 67a13ab96311d9fc146203cab5fcfa7d1e017d37[m
Merge: 37c7d55 d05235a
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Nov 13 15:26:54 2015 -0800

    Merge pull request #4496 from steveharter/AddDefaultLocaleTest
    
    Update globalization tests for CentOS version of ICU

[33mcommit 37c7d551c571c85cca056affe857fa5f9f468745[m
Merge: e97328c da0d615
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Nov 13 15:00:17 2015 -0800

    Merge pull request #4499 from pgavlin/FixSelectShim
    
    Fix the Select() shim.

[33mcommit e97328cfc6966a9d89d6833667da00b02f9d9476[m
Merge: f9885e5 e52adbf
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Nov 13 12:42:36 2015 -0800

    Merge pull request #4498 from bartonjs/osx_native_brew_openssl
    
    Improve support for `brew install openssl` on OSX

[33mcommit da0d615ad9fc9fdd9cd7e71bc4cce194b626f1ea[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Fri Nov 13 11:39:43 2015 -0800

    Fix the Select() shim.
    
    The Select() shim was not zeroing out the destinatino when converting
    a platform file descriptor set to a PAL file descriptor set. This was
    causing false positives in the caller, which does not check the number
    of file descriptors that were signalled.

[33mcommit e52adbfb2cc329cd721e0046bc73d5302f843a54[m
Author: Jeremy Barton <bartonjs@jsb-mac.local>
Date:   Fri Nov 13 10:16:06 2015 -0800

    Improve support for `brew install openssl` on OSX
    
    The test for algorithm_enc vs algorithms was using only the default includes path. Now it
    also includes the place where find_package found the openssl headers, so the test executes
    successfully, leading to a successful compilation.

[33mcommit f9885e55286a0d251a8d5a4ca897527b6ea08e96[m
Merge: e17dd58 b7d96a0
Author: Peter Marcu <Peter.Marcu@Microsoft.com>
Date:   Fri Nov 13 09:36:10 2015 -0800

    Merge pull request #4472 from Petermarcu/std_platform
    
    Adding more platforms and file list

[33mcommit e17dd587f44c81e6220a9f40d800b0e25c4336dd[m
Merge: 95c5410 5006756
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Nov 13 09:26:09 2015 -0800

    Merge pull request #4478 from davidsh/websocket_tests
    
    Add System.Net.WebSockets.Client tests

[33mcommit d05235a8e0fbc1a6bdded58f65cc264446ff0694[m
Author: Steve Harter <sharter@microsoft.com>
Date:   Fri Nov 13 10:55:28 2015 -0600

    Update globalization tests for CentOS ICU

[33mcommit d573223a0d99d41daf8ed26fa89647894a9770da[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Fri Nov 13 08:22:27 2015 -0800

    Support IDNA host matching on Unix SslStream
    
    * Split the Unix and Windows project.json files for System.Net.Security since they have different dependencies at the implementation level.
    * Use the managed IdnMapping to do the IDNA rules application
    * Update comments in the native half of the match logic
    
    This was verified against a private domain which uses a mix of ASCII and non-ASCII characters.
    * Lowercase punycode form: Success before, success after
    * Mixed-case punycode form: Failed before, success after
    * Unicode form: Failed before, success after.

[33mcommit ebf2df48bbd80aab9b0ea02356372254b5bb810d[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Nov 13 10:50:12 2015 -0500

    Add test for runtime's encoding fallback when loading strings

[33mcommit 9c04117da59a9cb09a1f7555750b741b318fbcfe[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Nov 13 10:23:14 2015 -0500

    Add String tests for nulls in strings
    
    Add several StartsWith, EndsWith, IndexOf, and LastIndexOf tests involving null characters in strings.  These currently pass on Windows but fail on Unix.

[33mcommit 95c54107044b68c2b8ce8f66ea58f95731969258[m
Merge: d501724 d1fc703
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Nov 13 07:34:05 2015 -0500

    Merge pull request #4447 from kouvel/TpaBinder
    
    Update a Loader test

[33mcommit d501724faeb9b1fd36f2c6a6842583b03e01579c[m
Merge: 998c584 48057d2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Nov 13 06:44:39 2015 -0500

    Merge pull request #4488 from stephentoub/fix_whc_todo
    
    Fix WebHeaderCollection test TODO

[33mcommit 5f1280b7d00fdf64ae27f546214631486c06b5ad[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Nov 13 11:42:13 2015 +0000

    Add block expression tests.
    
    Includes removal of dead code in BlockExpression.cs; `GetVariable(int)` is
    never hit.

[33mcommit 64ef4cf881e085470069aef320c3197285fd426e[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Nov 13 11:23:48 2015 +0000

    Don't construct dictionaries in EnumerableRewriter unless they are used.

[33mcommit 998c5846f04728a67ad2bc0fe9e1de80bca22fa3[m
Merge: fe9351e 3d70316
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Nov 12 22:05:00 2015 -0800

    Merge pull request #4421 from hughbe/net-primitive-tests
    
    Some System.Net.Primitive Tests

[33mcommit fe9351ee17518b75a2f83aa4965baa645c39ce51[m
Merge: 5344db3 3ae7592
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Nov 12 21:55:32 2015 -0800

    Merge pull request #3874 from JonHanna/unbox_expression_tests
    
    Add tests for unbox expressions and remove incorrect assertion

[33mcommit 5344db30650f331851f3232538616704d713d9e1[m
Merge: d3a38e7 9ca5418
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 12 23:28:19 2015 -0500

    Merge pull request #4486 from kkurni/fix-mars-control-packet
    
    SqlClient - Fix Mars race condition while sending control packet

[33mcommit 48057d24e275ccc63fbb681821279a163ede48e9[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Nov 12 22:46:01 2015 -0500

    Fix WebHeaderCollection test TODO
    
    Now that our xunit runner doesn't balk at some bad characters in theory arguments, fixing a few TODOs.

[33mcommit 9ca54187d8bf33137134b2eb10cb941031d69a7f[m
Author: kkurni <kkurni@microsoft.com>
Date:   Thu Nov 12 19:15:10 2015 -0800

    SqlClient - Fix Mars race condition while sending control packet
    
    SendingControlPacket need to be sync otherwise there will be potential race condition
    where data packet get sent first before control packet.
    e.g SYN need to be sent first before send any packet to create a new session.

[33mcommit d3a38e71e76f913a33aeca6f2a30918b6c6a0738[m
Merge: 9d4e2c9 57e194e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 12 22:40:12 2015 -0500

    Merge pull request #4485 from stephentoub/update_build_tools
    
    Update build tools and xunit.console.netcore

[33mcommit 57e194e4617f2194f791f124a524937e2e63568b[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Nov 12 21:36:34 2015 -0500

    Update build tools and xunit.console.netcore

[33mcommit 9d4e2c9002ff7d81e4862fc23b83f2c8a0e86cbb[m
Merge: c4e8436 c4e7374
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 12 21:16:57 2015 -0500

    Merge pull request #4470 from stephentoub/fix_debugdataflow_tests
    
    Fix faulty dataflow DebugAttributeTests

[33mcommit c4e84361e8bf03b49d5b2cbfd4847e3f1874a928[m
Merge: 895e759 86d8198
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 12 20:30:54 2015 -0500

    Merge pull request #4482 from stephentoub/encodings_tests
    
    Fix TODO in several System.Text.Encodings.Web tests

[33mcommit 86d819822d4391848bfb3cfd35040c00e3a36140[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Nov 12 19:05:38 2015 -0500

    Fix TODO in several System.Text.Encodings.Web tests
    
    Some of our System.Text.Encodings.Web tests were written using a loop as a temporary replacement for using a [Theory] due to a failure coming from xunit when trying to write out the results XML file.  The failure was due to text xunit was trying to write containing invalid Unicode.
    
    As it turns out, there were two issues here, one masking the other:
    1) The runtime is not handling improper UTF8 on Linux the same way it is on Windows (the text gets converted from UTF8 to UTF16 by the runtime as part of loading the [InlineData] attributes containing the strings).  I've opened https://github.com/dotnet/coreclr/issues/2037 for this.
    2) If we didn't have the first bug and had done this using a [Theory], the tests would have been busted anyway (and silently), as the replacements would have already been made by the time the text made it to the test. So, from a corefx perspective, the fix is simply to remove the TODO and expand the tests into better style.
    
    Fixes #3537

[33mcommit 5006756101cab2edb9bb40590542d7a3df15f0cc[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Thu Nov 12 11:29:04 2015 -0800

    Add System.Net.WebSockets.Client tests
    
    * Port some of the ToF ClientWebSocket tests that talk to a real websocket server
    * Cleanup naming of existing tests to conform to System.Net test method naming
    * Skip tests if not supported on platform. Specifically, these tests were failing
    on Win7 since Win7 does not support WinHttp WebSockets. We haven't really noticed this
    failing since the CI doesn't yet run Win7 tests (issue #4468)
    
    I plan to port the remainder of the ToF websocket related tests in a subsequent PR.

[33mcommit 3d703164e660f2072532cafc4ab41db5f18468e5[m
Author: Hugh Bellamy <hughbellars@gmail.com>
Date:   Mon Nov 9 21:28:29 2015 +0000

    Some System.Net.Primitive Tests
    
    Covered:
    - IPAddress
    - IPEndPoint
    - DnsEndPoint
    - EndPoint
    - Cookie
    - CookieCollection
    - CookieContainer
    - SocketAddress
    - NetworkCredential
    - SystemCredential
    - CredentialCache

[33mcommit 895e759d4eb77aa36a88e53643e7b644378629d0[m
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Thu Nov 12 10:44:56 2015 -0800

    Update getting-started-core.md
    
    Update the link to the sample project.

[33mcommit b7d96a079126635a924925f0ca032a2aca192076[m
Author: Peter Marcu <pmarcu@microsoft.com>
Date:   Thu Nov 12 10:31:04 2015 -0800

    Adding more platforms file list

[33mcommit f16fe683a263e07778cef47a0f38b11d6a8240a6[m
Merge: a53282d b41ed87
Author: Josh Free <joshfree@users.noreply.github.com>
Date:   Thu Nov 12 10:10:38 2015 -0800

    Merge pull request #4471 from Petermarcu/porting
    
    Adding getting started porting guide

[33mcommit a53282d0836ee73a0f905124287f9eac589c0645[m
Merge: dc3f959 b6178dd
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Nov 12 10:10:15 2015 -0800

    Merge pull request #3876 from JonHanna/expressions_exclude_unreachable_from_coverage
    
    Exclude unreachable members in System.Linq.Expressions from coverage.

[33mcommit dc3f9599de563cdc72391d806db6c53805fc7fb9[m
Merge: 73b15e8 f76d11a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 12 13:07:50 2015 -0500

    Merge pull request #4469 from eerhardt/CompressionCleanup
    
    Remove empty try blocks with the implementation in the finally block.

[33mcommit b41ed877535425a7ee55fb1451f42a7a6ad2e4e8[m
Author: Peter Marcu <pmarcu@microsoft.com>
Date:   Thu Nov 12 09:59:14 2015 -0800

    Adding getting started porting guide

[33mcommit c4e7374dc43abdb707f66411d48ac2df75533a95[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Nov 12 12:49:05 2015 -0500

    Fix faulty dataflow DebugAttributeTests
    
    The dataflow blocks have debugger attributes providing displays and views.  These invoke functionality that examine the state of the block, and that examination expects to be done when everything is paused under the debugger, in particular for the views.  This is because properties on the views may end up enumerating collections that are being modified concurrently by asynchronous operations internal to the block.
    
    We have tests that exercise these debugger views, and do so without the pause-the-world-first semantics provided by the debugger.  As such, every once in a while, we get an InvalidOperationException stemming from trying to examine one of these collections while it's being modified.
    
    This commit simply disables testing the views in the few cases where we've kicked off asynchronous operations on the objects being analyzed.

[33mcommit 73b15e8afda0b23da193f6c00188f1e0540c083f[m
Merge: fc4ecdf d6e9cd6
Author: SGuy Ge <SGuyGe@users.noreply.github.com>
Date:   Thu Nov 12 09:40:22 2015 -0800

    Merge pull request #4461 from SGuyGe/Issue4457
    
    Fixing issue #4457: System.InvalidOperationException is thrown during deserialization if DateTimeOffset is passed to known type list more than once (directly or indirectly)

[33mcommit f76d11abea17f501a154f1c8c0bb68419668b07c[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Nov 12 10:28:59 2015 -0600

    Remove empty try blocks with the implementation in the finally block.
    
    This pattern is no longer useful on .NET Core. This pattern is useful to ensure a thread abort doesn't interupt the execution of a block of code. On .NET Core, we don't have thread aborts.

[33mcommit fc4ecdfffc80499dbb91d5bffe7d5f43ab4abc2b[m
Merge: aec9e02 c2561f5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 12 09:38:25 2015 -0500

    Merge pull request #4440 from eerhardt/ShimZLib
    
    Add shims for the zlib functions used in System.IO.Compression on Unix.

[33mcommit c2561f5360e2e28ebb927f4c580e9b0b3bf41574[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Nov 11 15:21:21 2015 -0600

    Respond to PR feedback.
    
    - Add asserts.
    - Clean up any unused enum values.
    - Remove the "IsZLib and Crc32 Available" shim methods, hard-code to being 'true' in managed code and assume that on Unix it will have a libz library.
    - Rearrange the PAL_ZStream struct to have all pointers at the beginning.

[33mcommit aec9e0256bb4bc1e83a7c1b0caba460af69c9a81[m
Merge: 1d90ea6 b9e3c7a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 12 00:07:47 2015 -0500

    Merge pull request #4401 from axelheer/biginteger-readonly
    
    Mark members of BigInteger as readonly

[33mcommit 1d90ea6067e2e0cb421d01a84e115cb663d2ee06[m
Merge: 441ed83 14f3600
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 12 00:06:44 2015 -0500

    Merge pull request #4427 from stephentoub/track_console_color
    
    Track and always resend both ConsoleColors

[33mcommit 14f36001ee138522f496318fc685d37c9f3ab9ae[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Nov 11 23:22:29 2015 -0500

    Implement Console.get_Foreground/BackgroundColor on Unix
    
    There is no general mechanism on Unix for getting the terminal's current foreground or background color, only operations for setting either or resetting both.  As such, the current implementation throws a PlatformNotSupportedException when trying to use Console.get_ForegroundColor and Console.get_BackgroundColor.
    
    While there's no 100% valid way to implement these members, this commit provides a compromise that should address the most common usage, even though there are possible points of failure:
    - We use a value of (ConsoleColor)(-1) to represent an unknown color.  This is not added to the contract so that a) we don't cause problems for existing implementations, and b) we don't encourage the usage of a new Unknown value that's really meant to be an implementation detail.
    - We track the values of ForegroundColor and Background color, which start as unknown and have their tracked values updated when they're set.
    - When either is set, we reset all colors and then re-issue the setting of each of the colors that's not unknown.
    
    This approach supports the most common usage pattern:
    ```C#
    ConsoleColor orig = Console.ForegroundColor;
    Console.ForegroundColor = ConsoleColor.Yellow;
    Console.WriteLine("hello");
    Console.ForegroundColor = orig;
    ```
    as well as a pattern where either background or foreground color is manipulated while the other remains constant, e.g.
    ```C#
    Console.BackgroundColor = ConsoleColor.Blue;
    
    ConsoleColor orig = Console.ForegroundColor;
    Console.ForegroundColor = ConsoleColor.Yellow;
    Console.WriteLine("yellow on blue");
    Console.ForegroundColor = orig;
    Console.WriteLine("orig on blue");
    ```
    
    It has a few known issues that we've agreed to accept:
    - When the program starts, we're are unable to determine the actual starting colors and so will use unknown, which will then result in all colors being reset when the unknown value is stored back into one of the properties.
    - We are unable to determine if the colors were modified through means other than the Console APIs, e.g. by other code writing out the ANSI escape sequences directly.
    - Console.ForegroundColor and Console.BackgroundColor are capable on Unix of returning the value -1, which would throw if this value was ever serialized and used to set these properties on Windows.

[33mcommit b8822ee94def0949007c5986bb33cf75b9ff8a59[m
Author: Page-Not-Found <sriren6029@gmail.com>
Date:   Wed Nov 11 21:15:18 2015 -0500

    System.Net.Sockets solution changes.
    
    System.Net.Sockets solution changes.

[33mcommit d6e9cd694201f477cb37e0c6267fe10dbc5b4aab[m
Author: SGuy Ge <sguyge@microsoft.com>
Date:   Wed Nov 11 17:16:54 2015 -0800

    Fixing issue #4457: System.InvalidOperationException is thrown during deserialization if DateTimeOffset is passed to known type list more than once (directly or indirectly)
    Cause: CheckAndAdd() uses bare type for validation which doesn't work for types with adapters (e.g. DateTimeOffset).
    Solution: Use DataContractCriticalHelper.GetDataContractAdapterType() instead of bare type.

[33mcommit fde2db5eeddabd25a8d719bbc78c7ba434b550b3[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Nov 11 16:05:07 2015 -0800

    Fix intermittent perf_process test failure.
    
    Perf_Process.Kill was trying to kill processes that could exit before it had the chance to get to them. I modified the ProcessTestBase helpers to make CreateProcessInfinite create an actually infinitely running process for the Kill test and renamed the old CreateProcessInfinite to the more accurate CreateProcessLong
    
    resolves #4397

[33mcommit 441ed83a05e2ca76a5670b16c320fa9cce3491a2[m
Merge: 5a266d2 75f2e14
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Wed Nov 11 15:13:46 2015 -0800

    Merge pull request #4452 from CIPop/snntest
    
    Changing S.N.NetworkInformation tests to allow NICs with Speed==-1

[33mcommit db3748dd3f24b30f4d869c42886bb12e6bdac3a6[m
Author: Page-Not-Found <sriren6029@gmail.com>
Date:   Wed Nov 11 16:00:34 2015 -0500

    System.Net.Security File Renames
    
    System.Net.Security File Renames

[33mcommit 75f2e14dbf094ac21b9aec0728635cc42cdf0887[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Wed Nov 11 11:10:48 2015 -0800

    Updating network card tests with behavior observed for not-connected WiFi adapters.

[33mcommit 0a1a2a024797091a645ea42561441fcd8586525c[m
Author: Page-Not-Found <sriren6029@gmail.com>
Date:   Wed Nov 11 15:45:12 2015 -0500

    Commonfolder rename and __Error, __HResult
    
    Commonfolder rename and __Error, __HResult

[33mcommit 5a266d299dffa52ba118964ae1fb4ddfac751343[m
Merge: 8cb9405 d2d810a
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Wed Nov 11 10:59:50 2015 -0800

    Merge pull request #4389 from CIPop/snscert
    
    Removing the X509Chain shim from System.Net.Security

[33mcommit 8cb940503841de13da0ad9a862173004c1d4cc51[m
Merge: 8a7842c ce27027
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Nov 11 13:51:59 2015 -0500

    Merge pull request #4449 from stephentoub/http_asserts
    
    Replace faulty assert in CurlHandler with proper handling

[33mcommit ce27027eb8924d32b5d75d4c46d36660e98570ee[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Nov 11 12:30:23 2015 -0500

    Replace faulty assert in CurlHandler with proper handling
    
    CurlHandler's support for pausing the connection needs to be resilient against spurious unpausing.  This commit just removes a faulty assert for a condition that is possible and replaces it with proper handling (repausing).

[33mcommit d1fc7034bd8b10e9c6e066ee216a8ec02aaf10c8[m
Author: Koundinya Veluri <kouvel@microsoft.com>
Date:   Tue Nov 10 14:12:32 2015 -0800

    Update a Loader test
    
    See https://github.com/dotnet/coreclr/pull/2015
    Related to #1187

[33mcommit 8a7842ca9fb516365b814e6c91a5b9ceb4080dcd[m
Merge: a8a6c1e cecc699
Author: Peter Marcu <Peter.Marcu@Microsoft.com>
Date:   Tue Nov 10 22:45:35 2015 -0800

    Merge pull request #4437 from dotnet/Petermarcu-patch-2
    
    Adding some details around anchor platforms

[33mcommit cecc699ab15fbb9f244d22216fa0be991ff4c4d7[m
Author: Peter Marcu <Peter.Marcu@Microsoft.com>
Date:   Tue Nov 10 17:29:58 2015 -0800

    Update standard-platform.md
    
    Clarifying some of the wording around Standard Library for clarity.

[33mcommit d2d810a2971fc56b55fc192e64038e8b4fa0c568[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Tue Nov 3 11:32:08 2015 -0800

    Fixing code and removing the X509Store shim. Adding new tests and
    changing the certificate used to allow end to end tests with valid
    certificate chains.

[33mcommit 7ecc159fbc97dc01bc58f9d5c934e23e5d577e7a[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Nov 10 18:01:27 2015 -0600

    Add shims for the zlib functions used in System.IO.Compression on Unix.

[33mcommit a8a6c1e54617f2879df4c4507f5bef6bd4c7a108[m
Merge: d7b3996 4752cbb
Author: Pallavi Taneja <pallavit@users.noreply.github.com>
Date:   Tue Nov 10 15:03:00 2015 -0800

    Merge pull request #4435 from pallavit/Environment_GetCommandLineArgs
    
    Expose Environment.GetCommandLineArgs

[33mcommit 4752cbb364767e8dc3a5cb299207393a8ddb704a[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Thu Nov 5 12:16:45 2015 -0800

    Expose Environment.GetCommandLineArgs

[33mcommit d7b39963b135d762bec99d986a88a186d0831f72[m
Merge: be8ca8e 141afa6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Nov 10 16:10:03 2015 -0500

    Merge pull request #4436 from stephentoub/fix_arrow_keys
    
    Fix arrow keys in Console.ReadKey() on Unix

[33mcommit 2ffe67a71e76c6eed7b300e502eadbabcb7cf39c[m
Author: Peter Marcu <Peter.Marcu@Microsoft.com>
Date:   Tue Nov 10 11:45:38 2015 -0800

    Adding some details around anchor platforms
    
    Adding some details around anchor platforms.

[33mcommit 141afa6e07c1b293dd8fb480e56032e6ae9657a5[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Nov 10 14:32:59 2015 -0500

    Fix arrow keys in Console.ReadKey() on Unix
    
    We interpret the escape strings sent to stdin in order to determine what keys were pressed, and we do so using the terminfo data for the current terminal.  However, the terminfo data is written to assume "application" mode, but apps are invoked by default in "normal" mode.  To enter "application" mode, we need to emit the keypad_xmit string.
    
    The arrow keys in particular have terminfo strings affected by normal vs application mode.  Before this change, using the arrow keys with ReadKey() would result in the values being misterpreted.  Now they're correctly understood.

[33mcommit be8ca8e94401e92b1ec3a9f48e7acde58d8f4ef9[m
Merge: f6f6c46 40744bf
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Tue Nov 10 11:21:27 2015 -0800

    Merge pull request #4433 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit b9e3c7a174841ec547e14029bd3945e2ae5c29e5[m
Author: Axel Heer <axel@heer.eu>
Date:   Tue Nov 10 20:13:36 2015 +0100

    Address PR feedback

[33mcommit f6f6c46d4d13c38defd661f0e218b7ed509a8cdf[m
Merge: 0cef89d 3348234
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Nov 10 13:56:55 2015 -0500

    Merge pull request #4430 from ericstj/reduceDependencies
    
    Reduce dependencies

[33mcommit 40744bf2192ae16fe6b7650b6f724af07f398d46[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Nov 10 10:38:48 2015 -0800

    [build] Update System.ComponentModel.Annotations package to 4.1
    
    System.ComponentModel.Annotations made an API change to add
    a property to RegularExpressionAttribute.  This property is only
    present on desktop 4.6.1.
    
    That means that the API change requires a unique reference assembly
    to still support portability to .NET 4.6, and thus the new contract should
    go in a new generation.  At the moment putting in the new generation
    will also drop support for NetCore50 since that is mapped to 5.4.
    https://github.com/nuget/home/1709
    
    To enable the new surface area on desktop we need to OOB a
    4.1 facade, so I have added this as a partial facade project.
    
    For now I am lying about this being in generation 5.4, but adding
    the depproj to enabling moving to 5.5.
    
    I will follow up with another fix to relax the validation and package
    the reference assembly correctly with both 5.4 and 5.5.  To do this
    and not drop support for UAP I will put the implementation
    in the 5.4 folder temporarily and lie about the generation (need
    to add an override to packaging to support this).
    
    [tfs-changeset: 1546928]

[33mcommit 3348234db28a1c186f0bab9b0437bc48a81d0ad2[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Nov 10 07:15:56 2015 -0800

    Add back more missing dependencies
    
    Build on the CI is complaining about missing base types for many
    reference assemblies (where we only pass the compiler direct
    references, trimming transitive dependencies).
    
    Additionally I removed the test data packages from some tests
    because, of course, they were not directly referenced :).

[33mcommit 0cef89dc6721924d3b6f3a18dd00d405c4b55a49[m
Merge: 48b69dd 12819c5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Nov 10 08:13:56 2015 -0500

    Merge pull request #4383 from ianhays/getitemobj
    
    Fix Culture bug around NameValueCollection tests

[33mcommit 6aeea5eabf2aff3baf15f501cabd156dfc5b3f8f[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Mon Nov 9 22:38:10 2015 -0800

    Update project.lock.json to latest and lock

[33mcommit 78fd45ec74afc507a40df519b4df650ac9bd4c42[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Mon Nov 9 06:49:48 2015 -0800

    Remove unused dependencies

[33mcommit 12819c578f9d28d51c58ae038c81d7549f4f30e9[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Mon Nov 9 19:46:57 2015 -0800

    Fix Culture bug around NameValueCollection tests
    
    Some tests for NameValueCollection were setting the DefaultThreadCurrentCulture to Turkish and not resetting it back to the default. This was causing failures in the HybridDictionary tests that were running concurrently with these tests. I refactored the code to instead use CurrentCulture and also added a try/finally to reset the CurrentCulture just to be safe.
    
    Resolves #1136

[33mcommit 48b69dd3f9a8de3dc9568bbcc0a27c2b22527b5b[m
Merge: f3ded5f eb43ce0
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Mon Nov 9 16:14:29 2015 -0800

    Merge pull request #4319 from lajones/151103_RegexMitigation_01
    
    Security Fix: 4 DataAnnotations Attributes updated to prevent / mitigate use of regexes

[33mcommit f3ded5f6a73d6ed684d0f648504d7416bec4ad4d[m
Merge: 337e5dd 94bf9ba
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Nov 9 15:41:50 2015 -0800

    Merge pull request #4424 from pgavlin/FixFileCasing
    
    Change file casing to fix the build on *nix.

[33mcommit 94bf9ba19922a06640a3d1b1e412fb6cbbc676b5[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Nov 9 14:50:43 2015 -0800

    Change file casing to fix the build on *nix.

[33mcommit 337e5ddaa80a6b58f021cd63ec12b5ea5474a763[m
Merge: 322f4e8 3134b4d
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Nov 9 14:49:02 2015 -0800

    Merge pull request #4422 from davidsh/disable_test
    
    Disable test BeginSend_AsyncOperationCompletes_Success

[33mcommit 3134b4d58ac655450c4868679785d12a86e9d18e[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Nov 9 14:13:22 2015 -0800

    Disable test BeginSend_AsyncOperationCompletes_Success
    
    Issue #4363

[33mcommit 322f4e84ea187bf8575bee02ff408093a6a5d9af[m
Merge: 1cbd791 525b980
Author: SGuy Ge <SGuyGe@users.noreply.github.com>
Date:   Mon Nov 9 13:21:24 2015 -0800

    Merge pull request #4392 from SGuyGe/Issue4355
    
    Fixing issue #4355: Remove project reference to System.Runtime.Serialization.Primitives from System.Private.DataContractSerialization

[33mcommit 1cbd791ada4a87c1dd5d20f4f11490eb99d6706b[m
Merge: cc72918 4c73128
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Nov 9 16:03:49 2015 -0500

    Merge pull request #4419 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 4c73128377067477d5f8cde79dcfc457d8b8feef[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Mon Nov 9 12:23:50 2015 -0800

    OOB TypeConverter back to WP8/Net45/Win8/WPA81
    
    TypeConverter is pure IL and can be OOB'ed back to older platforms.
    On desktop platforms we need to build a new facade that will unify
    to the inbox types.
    
    [tfs-changeset: 1546583]

[33mcommit cc72918b7931ba73df5075ab8313d6b05f3dd84f[m
Merge: d1d2a85 36acb05
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Nov 9 12:16:11 2015 -0800

    Merge pull request #4417 from davidsh/http_test_servers
    
    Rename HttpTestServers2.cs to HttpTestServers.cs

[33mcommit 36acb05abd55f62aad0c18bc6ede2cef1c58628e[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Nov 9 11:20:41 2015 -0800

    Rename HttpTestServers2.cs to HttpTestServers.cs

[33mcommit d1d2a852e5e828073a0bff418974b30200963c1f[m
Merge: 15b3ce8 b543ace
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Nov 9 11:11:16 2015 -0800

    Merge pull request #4416 from davidsh/test_servers
    
    Cleanup System.Net.Http.WinHttpHandler tests

[33mcommit 15b3ce8ba9baccaa99655e987582d4c20fb22831[m
Merge: 2eb74eb 0e03697
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Mon Nov 9 11:03:46 2015 -0800

    Merge pull request #4387 from Maxwe11/sqlclient-allocations
    
    Avoid unnecessary char array allocations in System.Data.SqlClient

[33mcommit b543ace69e663e00c8c60c82d7cbf271b148b25d[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Nov 9 10:09:51 2015 -0800

    Cleanup System.Net.Http.WinHttpHandler tests
    
    * Move tests to the new test server
    * Fixup an SSL certificate test to handle wildcard certs
    * Remove HttpTestServers.cs file. The next PR will then rename HttpTestServers2.cs to HttpTestServers.cs

[33mcommit 2eb74eb6ae996e3ea9ef3c74918b562346642cc7[m
Merge: 1d9edc6 773c8ae
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Nov 9 08:43:44 2015 -0800

    Merge pull request #4414 from davidsh/test_cleanup
    
    Cleanup System.Net.Http tests

[33mcommit 773c8ae1db5aa7e5d695a74fb63968382f8529da[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sat Nov 7 14:51:09 2015 -0800

    Cleanup System.Net.Http tests
    
    * Move more tests to the new test server
    * Cleanup 'var' coding patterns
    * Remove duplicate tests (*Content clas related) that are already covered with the *Content class tests
    * Utiilize the newer test server VerifyUpload endpoint which does 'Content-MD5' verification of transmitted payload to the server
    as well as payload from the server
    * Add GZip related tests in addition to Deflate compression schemes

[33mcommit 1d9edc6f2da2c9cedf1e1c700fe88d3fe3299d91[m
Merge: b2203cb ca6cd40
Author: Kurniawan Kurniawan <kkurni@gmail.com>
Date:   Sun Nov 8 18:19:47 2015 -0800

    Merge pull request #4398 from kkurni/refactor-to-use-out
    
    SqlClient - Refactor SNIHandle Receive to use 'out' instead of 'ref'

[33mcommit b2203cb686a2c0793dccb961984f4b7b2bcb8b32[m
Merge: 2b8975d d7f6b13
Author: David Fowler <davidfowl@gmail.com>
Date:   Sun Nov 8 17:34:33 2015 -0800

    Merge pull request #4413 from Pilchie/patch-1
    
    Update PCL compatibility section to mention imports

[33mcommit 2b8975daf6f304bd441feb3d07f95e6ecc74d527[m
Merge: 8828736 871beea
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Nov 8 17:52:59 2015 -0500

    Merge pull request #4412 from stephentoub/disable_benchmark_unix
    
    Disable running Benchmarks as part of unit tests on Unix

[33mcommit d7f6b13634e47aa3fec622c52ea9d8c84ade5117[m
Author: Kevin Pilch-Bisson <me@pilchie.com>
Date:   Sun Nov 8 13:17:11 2015 -0800

    Update PCL compatibility section to mention imports

[33mcommit e6fb102154cfaccc376feea34bff006ef990ae2c[m
Author: Axel Heer <axel@heer.eu>
Date:   Sat Nov 7 20:45:28 2015 +0100

    Mark members of BigInteger as readonly
    
    - Marking members as readonly allows several optimizations and
      BigInteger isn't a mutable structure anyway.
    - The unary negate operator mutates the _sign value. Thus, we use the
      internal constructor to negate instead, leading to the same result.
    - The constructors for Single and Double use a helper method, which
      mutates during construction. But the former can just use the latter,
      which can include the body of this helper method accordingly.

[33mcommit 871beea92caf8c8b4d04d88fbffd0261286ada28[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Nov 8 15:26:42 2015 -0500

    Disable running Benchmarks as part of unit tests on Unix
    
    https://github.com/dotnet/buildtools/pull/332 disabled running benchmarks as part of unit tests, but only on Windows.  They're still running on Linux and OS X, and are causing builds to timeout, e.g. the Process tests are currently taking over 5 minutes:
    ```
    11:03:02    System.Diagnostics.Process.Tests  Total: 77, Errors: 0, Failed: 0, Skipped: 0, Time: 318.916s
    ```

[33mcommit 8828736ce190ea6f7f7743f9e5a1bd951e0d48e8[m
Merge: e678832 b8ed167
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Nov 8 12:42:59 2015 -0500

    Merge pull request #4403 from stephentoub/netinfo_consolidate
    
    Consolidate some shared Linux/OSX code in NetworkInformation

[33mcommit e678832c10de9eb4c50eaa617b0c72188a0fce58[m
Merge: 84dc7de 3abf8ab
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Nov 8 12:42:50 2015 -0500

    Merge pull request #4402 from stephentoub/unknown_unix_build
    
    Enable building all of corefx with an "unknown" Unix

[33mcommit 84dc7de5d35efc45a4f62eab665ebad42bf12bb4[m
Merge: b77c3f4 b917f7e
Author: Peter Marcu <Peter.Marcu@Microsoft.com>
Date:   Sun Nov 8 09:22:17 2015 -0800

    Merge pull request #4404 from onovotny/tool-docs
    
    Add section on tooling support for platform standard doc

[33mcommit b917f7e1ea50a67d1e096932a4fb525b6e675f3a[m
Author: Oren Novotny <oren@novotny.org>
Date:   Sun Nov 8 10:12:00 2015 -0500

    Put TBD for all and add Xamarin Studio placeholder

[33mcommit 441179a561e7f9d4e05cb3520ebc2298fcbf5f28[m
Author: Oren Novotny <oren@novotny.org>
Date:   Sat Nov 7 16:00:05 2015 -0700

    Change to required tools

[33mcommit 07fe89f428be53c22f63da5517f61fd904552423[m
Author: Oren Novotny <oren@novotny.org>
Date:   Sat Nov 7 14:01:23 2015 -0700

    Include VS 2012 in tools

[33mcommit 68e76e166729f3ae7750a8744b16d9373f1bb096[m
Author: Oren Novotny <oren@novotny.org>
Date:   Sat Nov 7 13:54:01 2015 -0700

    Add section on tooling support

[33mcommit 3abf8ab0009d0ae3483677121c61256accf5d2da[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Nov 7 15:21:46 2015 -0500

    Address PR feedback

[33mcommit b8ed167249a8142557a99735041d3320d0ccd53e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Nov 7 15:16:05 2015 -0500

    Consolidate some shared Linux/OSX code in NetworkInformation
    
    The same code was duplicated in both the Linux and OSX implementations, when it could instead be on the base Unix implementation.  This also results in a better error message being used on OS X.

[33mcommit b77c3f4abbacfa340aaca6bcf5d0ce1077d69d9a[m
Merge: 9c7814c d63e194
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Nov 7 11:58:26 2015 -0800

    Merge pull request #4395 from bbowyersmyth/StringEndsWithTests
    
    String ends with tests and Compare ordinal

[33mcommit 3e9f21b5f32e88925d97b928b9456f4cf8f5a1f5[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Nov 7 10:39:52 2015 -0800

    Enable building all of corefx with an "unknown" Unix
    
    After all of the shim work that's been done, the vast majority of corefx assemblies now are either platform-agnostic or have a Windows build and a Unix build, without further specialization based on OS in managed code.  We do still have a few such assemblies, though (and this is unlikely to change any time soon):
    - System.Diagnostics.Process
    - System.IO.FileSystem.Watcher
    - System.Net.NetworkInformation
    - System.Runtime.InteropServices.RuntimeInformation
    
    As a result, attempting to do a full build for Unix targets other than Linux or OS X currently results in compilation failures. This commit adds a new TargetsUnknownUnix property to the build as well as stub implementations that throw PlatformNotSupportedException for all of the missing functionality that causes such compilation errors.
    
    With this change, doing ```build.cmd /p:SkipTests=true /p:OSGroup=FreeBSD" now completes successfully, as does ```build.cmd /p:SkipTests=true /p:OSGroup=Stephenix```.

[33mcommit 9c7814c301157de43e5c35d630a0352d77efde29[m
Merge: 8080c1c aef8666
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Nov 7 06:04:32 2015 -0800

    Merge pull request #4394 from ianhays/slowperf
    
    Update buildtools to 119

[33mcommit ca6cd4038b20e66759c6d686af5829c725203deb[m
Author: kkurni <kkurni@microsoft.com>
Date:   Sat Nov 7 00:46:01 2015 -0800

    SqlClient - Refactor SNIHandle Receive to use 'out' instead of 'ref'

[33mcommit 8080c1cd5de2505ad518c49de5ed6df2e2a380b3[m
Merge: b00dc2a 90bf9c1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Nov 6 23:09:18 2015 -0800

    Merge pull request #4386 from davidsh/update_test_servers
    
    Cleanup System.Net.Requests tests

[33mcommit b00dc2a80e51da164db3b9490a7a132cf54153ea[m
Merge: 33bd944 1f91736
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Nov 6 22:59:40 2015 -0800

    Merge pull request #4393 from stephentoub/process_affinity
    
    Fix several issues in Process.ProcessorAffinity on Linux

[33mcommit d63e194ccf1ed76144d4da94f375b931047ab2fc[m
Author: Bruce Bowyer-Smyth <bbowyersmyth@live.com.au>
Date:   Sat Nov 7 15:17:10 2015 +1000

    Include Compare in CompareOrdinal tests

[33mcommit 5eeb7029d8b3508aba8b3e81ecd2e6e00445aeea[m
Author: Bruce Bowyer-Smyth <bbowyersmyth@live.com.au>
Date:   Sat Nov 7 15:08:40 2015 +1000

    Additional String.EndsWith tests

[33mcommit aef86661b7c8267e3bb5c00f9ae71751d452b71c[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Nov 6 19:06:40 2015 -0800

    Update buildtools to 119

[33mcommit 33bd944181f9bbc204aa0ab3e19e6ac53d4438e9[m
Merge: face3e7 4ace514
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Nov 6 18:17:28 2015 -0800

    Merge pull request #4390 from ellismg/update-buildtools
    
    Update to buildtools 118

[33mcommit 1f91736223f5429330ef34f9a85628905fb2ddfa[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Nov 6 18:09:29 2015 -0800

    Fix several issues in Process.ProcessorAffinity on Linux
    
    A few issues being fixed with the shim:
    - Compilation: The ```sizeof(CpuSetBits) >= sizeof(cpu_set_t)``` static assert was tripping for OpenSUSE and causing the build to fail.
    - Perf: We were making a P/Invoke call for each bit set in the affinity mask, so up to 64 managed/native transitions just to get/set the bits.
    
    Since the managed API works in terms of IntPtr, I changed the shim to as well, saving most of the complexity.  If we ever add/change to an API that works with a larger number of bits, we can update the shim accordingly.

[33mcommit 525b980f6346ae00603569eb042062f09b97d71a[m
Author: SGuy Ge <sguyge@microsoft.com>
Date:   Sat Nov 7 00:02:46 2015 +0000

    Fixing issue #4355: Remove project reference to System.Runtime.Serialization.Primitives from System.Private.DataContractSerialization

[33mcommit 4ace514f479920e7c64ab389c6b4e4e4cc0d923b[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Nov 6 14:15:39 2015 -0800

    Update to buildtools 118

[33mcommit 0e03697dc6b682dc06825a9a9e43504a9a9765a9[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Fri Nov 6 23:43:17 2015 +0200

    Avoid unnecessary char array allocations in System.Data.SqlClient

[33mcommit 90bf9c1e4c410d39df7f2a63d907156fac1afc26[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Nov 6 11:31:27 2015 -0800

    Cleanup System.Net.Requests tests
    
    Switch remaining tests to use the new test server.
    Fix up 'var' usage.
    Use 'async Task' pattern and 'await' instead of GetResult() for tests.

[33mcommit face3e78b3d6327ae6a15a8e09b8b3a8463ffbe9[m
Merge: 6e57ba4 cf50575
Author: Kurniawan Kurniawan <kkurni@gmail.com>
Date:   Fri Nov 6 13:32:03 2015 -0800

    Merge pull request #4356 from kkurni/fix-infinite-timeout
    
    SqlClient - Fix Inifinite Timeout

[33mcommit 6e57ba46b3f7b034eac6029b4a2d970b8ae0cab1[m
Merge: db14345 449dbec
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Nov 6 13:18:18 2015 -0800

    Merge pull request #4380 from stephentoub/update_test_runtime
    
    Move test-runtime to newest packages

[33mcommit eb43ce036c26d8dab6be9f8a22b3a5a5233901d8[m
Author: lajones <lajones@microsoft.com>
Date:   Fri Nov 6 10:42:01 2015 -0800

    Updated per review comments.

[33mcommit db143451ee06709c9aee7e865fb685afda90c68d[m
Merge: 8ea9830 0a2c023
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Nov 6 11:00:03 2015 -0800

    Merge pull request #4369 from stephentoub/delete_test_code
    
    Delete SslStreamAPMExtensions.cs from System.Net.Security tests

[33mcommit 8ea9830181dac938fed7d8c8a498fcb8e6fe6628[m
Merge: 2a72c1a 15b2d69
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Fri Nov 6 10:57:22 2015 -0800

    Merge pull request #4315 from shrutigarg/ssl_test3
    
    Fixing System.Net.Security test failures in OS X

[33mcommit 449dbec4f59879b13b0005e8d8c7bd235bb632f4[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Nov 6 10:44:59 2015 -0800

    Move test-runtime to newest packages
    
    Motivated by needing to pick up newer System.Console and System.Diagnostic.Debug assemblies.

[33mcommit 2a72c1a26907279ccc62f2b34acabdd8e4113567[m
Merge: de8c803 4c92447
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Nov 6 10:24:07 2015 -0800

    Merge pull request #4118 from ianhays/perf
    
    Modified perf testing targets

[33mcommit de8c80331f52d29e1d0bbd249872a0e5824e0b09[m
Merge: ac37343 ce4f7c6
Author: Kurniawan Kurniawan <kkurni@gmail.com>
Date:   Fri Nov 6 09:58:36 2015 -0800

    Merge pull request #4381 from kkurni/tcpclient-comment
    
    Change TCPClient.ReceiveTimeout comment into Milliseconds

[33mcommit ac37343ac90fdb002041394e93f107b94ec2a5b2[m
Merge: 47bddb3 6fa52c6
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Nov 6 11:55:34 2015 -0600

    Merge pull request #4307 from eerhardt/ShimCallbacks
    
    Add shims for Seek, ReadWrite and SslCtx callbacks in libcurl.

[33mcommit ce4f7c6dba491968a4b97068ba916e6d0bbb1c49[m
Author: kkurni <kkurni@microsoft.com>
Date:   Fri Nov 6 09:45:46 2015 -0800

    Change TCPClient.ReceiveTimeout comment into Milliseconds

[33mcommit 47bddb3c912742523a1bbdf35b66ca9b63fa6293[m
Merge: 68ade78 b83f942
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Nov 6 09:36:35 2015 -0800

    Merge pull request #4352 from Maxwe11/net-delegate-allocations
    
    Avoid delegate and closure allocations in System.Net.Sockets

[33mcommit 68ade786c63dfeb3c619060b18d2d75b49b4862b[m
Merge: 1f77137 297cab3
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Nov 6 08:42:48 2015 -0800

    Merge pull request #4374 from dotnet/davidfowl/multi-target
    
    Changed cross compile to multi target

[33mcommit 6fa52c6daed5675662140ec23c2e76cd8f64ce5d[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Nov 4 12:28:52 2015 -0600

    Respond to PR feedback.
    
    Instead of creating 5 safe handles to native code, only allocate a single native handle in EasyRequest. The single native object will hold all the function and user data pointers necessary to invoke the managed callbacks.

[33mcommit c874d10c29ae61f7e16f8cea327c1ae14f7568ea[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Nov 2 18:23:04 2015 -0600

    Add shims for Seek and ReadWrite callbacks in libcurl.
    
    Since libcurl defines callbacks with varying signatures from platform to platform, we need to define a signature for the callbacks that doesn't change. Then we register our own native callbacks, which then converts the parameters from the varying signature to the unchanging signature and invokes the managed callback.

[33mcommit 1f77137ecb1958fe961f1d3b324ec8e2bbcd73c5[m
Merge: fcf3a22 4b14193
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Nov 6 07:04:53 2015 -0800

    Merge pull request #4370 from stephentoub/winhttp_windowsonly
    
    Remove non-Windows clutter from WinHttpHandler sln/projs

[33mcommit 297cab330c7ef06dacc2768fc090bdb7ea187073[m
Author: David Fowler <davidfowl@gmail.com>
Date:   Fri Nov 6 04:22:38 2015 -0800

    Changed cross compile to multi target
    
    Depending on who you talk to, cross compile means something completely different

[33mcommit fcf3a22c5346f80016777cac333ed5e54634f238[m
Author: David Fowler <davidfowl@gmail.com>
Date:   Fri Nov 6 04:20:37 2015 -0800

    Update standard-platform.md

[33mcommit 15b2d692c05619da3350d5f0ed2a26002ea6c646[m
Author: Shruti Garg <shgarg@microsoft.com>
Date:   Fri Nov 6 17:39:48 2015 +0530

    Fixing System.Net.Security test failures in OS X

[33mcommit 5411650d899a7dc0468e8b5a9e4f6a9aa9ddc576[m
Merge: 73cef9e a51097f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Nov 6 00:03:01 2015 -0800

    Merge pull request #4372 from stephentoub/console_in_src
    
    Remove System.Console from several src project.jsons

[33mcommit 73cef9e8329c4f1ffdf6a129f5fab0e73a5293d6[m
Author: David Fowler <davidfowl@gmail.com>
Date:   Thu Nov 5 23:52:11 2015 -0800

    Update standard-platform.md

[33mcommit a51097f9da5c231799a7cf7c89b8d402be2623a8[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Nov 5 22:28:14 2015 -0800

    Remove System.Console from several src project.jsons
    
    While looking at something unrelated, I happened to notice that two corefx assemblies had a project.json that included System.Console, which isn't necessary for any of our assemblies.  I've just removed that entry from the two files, one for System.Diagnostics.Process, one for System.Data.SqlClient.

[33mcommit 8bf28ed082ba662aa9271024bc652b368321686c[m
Merge: 913c178 06d51d6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 5 22:15:57 2015 -0800

    Merge pull request #4302 from khdang/cleanup_directives_in_serialization
    
    Cleanup an inactive directive in serialization

[33mcommit 913c1780710c193c8335350da4dba1d882e4f54c[m
Merge: 3ab2a65 54853b1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 5 22:09:00 2015 -0800

    Merge pull request #4359 from tpetrina/hashsetopt2
    
    Added optimizations for set operations with self

[33mcommit 4b141937a40536536eb43272b45cb0b130079efd[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Nov 5 22:05:33 2015 -0800

    Remove non-Windows clutter from WinHttpHandler sln/projs
    
    This project is and will always be Windows-specific.  There's no need for
    all of the placeholders related to non-Windows targets.

[33mcommit 0a2c023520bb890c5de8cc16b4391515e8b99c3a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Nov 5 21:58:31 2015 -0800

    Delete SslStreamAPMExtensions.cs from System.Net.Security tests
    
    After https://github.com/dotnet/corefx/pull/4331, it's now dead code.

[33mcommit 3ab2a657530a0361beb744ebdd1a7ca8848d508d[m
Author: David Fowler <davidfowl@gmail.com>
Date:   Thu Nov 5 20:01:18 2015 -0800

    Update standard-platform.md

[33mcommit cf50575c6647fdb8df8bb505350f45a9a0013787[m
Author: kkurni <kkurni@microsoft.com>
Date:   Thu Nov 5 19:37:09 2015 -0800

    SqlClient - Fix Infinite Timeout - Fix CRs

[33mcommit 9c96a9cff00cea736c71186a0f19872f60236fb5[m
Merge: 29f3976 bd46537
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 5 17:29:43 2015 -0800

    Merge pull request #4358 from alexsorokoletov/fix2699-2
    
    Code cleanup for System.IO.Packaging

[33mcommit 29f3976f27285e717979073928f9c9f0bf1d7cf6[m
Author: David Fowler <davidfowl@gmail.com>
Date:   Thu Nov 5 17:19:21 2015 -0800

    Update standard-platform.md

[33mcommit 06d51d6f49eb41a71810833c26c3eb4a89a73df7[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Tue Oct 6 13:23:34 2015 -0700

    Cleanup directives in serialization

[33mcommit 36381729d6017540c48f40fb616c38c39f156592[m
Merge: bbc9bb8 c747d92
Author: Peter Marcu <Peter.Marcu@Microsoft.com>
Date:   Thu Nov 5 15:57:55 2015 -0800

    Merge pull request #4362 from dotnet/davidfowl/rename-tfm
    
    Rename because of feedback

[33mcommit c747d929093681a475559f804043cb5ac5470a49[m
Author: David Fowler <davidfowl@gmail.com>
Date:   Thu Nov 5 15:55:18 2015 -0800

    Rename because of feedback

[33mcommit bbc9bb81a0879f5e4d99a4baba61c5ff9e5d4609[m
Merge: 4c01fc2 55f2b22
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Nov 5 15:42:22 2015 -0800

    Merge pull request #4329 from mellinoe/ni-osx-networkchange
    
    Implement NetworkAddressChanged event on OSX

[33mcommit bd4653753f236189777cd1e4fe37c568784c5578[m
Author: Alex Sorokoletov <alex@dreamteam-mobile.com>
Date:   Thu Nov 5 14:43:03 2015 -0800

    Code cleanup for System.IO.Packaging
    
    Second batch of changes in ContentType.cs
    
    Related to #2699

[33mcommit 4c01fc2c1168b41c11ae52aabec6a23de054a579[m
Merge: a223642 962da24
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 5 15:24:48 2015 -0800

    Merge pull request #4281 from stephentoub/html_encode_perf
    
    Improve WebUtility.HtmlEncode/Decode perf

[33mcommit a22364202c6d6cabeeb662fde346941b7284a8da[m
Merge: 51bef29 75522e9
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Nov 5 14:46:05 2015 -0800

    Merge pull request #4351 from davidsh/sockets_fix
    
    Adjust System.Net.Sockets implementation to match contract

[33mcommit 54853b16469cfeaf12961527b2ea244b1053987a[m
Author: Toni Petrina <tpetrina@tpetrina.com>
Date:   Thu Nov 5 13:39:12 2015 -0800

    Added optimizations for set operations with self

[33mcommit 51bef29569c1b8d8ae5ee6db110b5d275e98d797[m
Merge: 8e50535 e5c3af0
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Nov 5 14:40:05 2015 -0800

    Merge pull request #4353 from alexsorokoletov/fix2699
    
    Code cleanup for System.IO.Packaging

[33mcommit 8e5053509fc9f468af23aa6a104d502ef2b78536[m
Merge: 0a81e24 d1e7f89
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Nov 5 14:37:50 2015 -0800

    Merge pull request #4349 from tpetrina/hashsetopt
    
    HashSet<T> performance constructor tuning

[33mcommit e4a8847ec65a627e61441cf58028f762de1fe0ac[m
Author: kkurni <kkurni@microsoft.com>
Date:   Thu Nov 5 14:14:36 2015 -0800

    SqlClient - Fix Inifinite Timeout
    
    -1 for infinite need to be translated to 0 in tcp client for infinitive
    0 timeout need to be translated to -1 in tcp client for timeout

[33mcommit 75522e90ec60b450b8eb070f6b257b12bd120615[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Nov 5 11:41:14 2015 -0800

    Adjust System.Net.Sockets implementation to match contract
    
    The System.Net.Sockets 4.1 contract (refs folder) does NOT have public methods for Socket.Close() or NetworkStream.Close().
    However, the implementional DLL was still having public methods for these.
    
    Removed the Close() methods and related fields.

[33mcommit e5c3af07a006443ad4f20374f9a202823048b307[m
Author: Alex Sorokoletov <alex@dreamteam-mobile.com>
Date:   Thu Nov 5 13:37:01 2015 -0800

    Code cleanup for System.IO.Packaging
    
    This request has several changes in ContentType.cs to make sure I understand the contribution workflow
    
    Related to #2699

[33mcommit d1e7f89ab31dcb8437c65b005d6c8f6fd1177c0f[m
Author: Toni Petrina <tpetrina@tpetrina.com>
Date:   Thu Nov 5 11:08:12 2015 -0800

    HashSet<T> performance constructor tuning

[33mcommit b83f94259bb7604ffe7b898e1f9c576c4a293e77[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Thu Nov 5 20:01:42 2015 +0200

    Avoid delegate and closure allocations in System.Net.Sockets

[33mcommit 55f2b229abbfd41bc5fc867fed95fc36de84c601[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Nov 5 12:13:52 2015 -0800

    Respond to PR feedback

[33mcommit 08db4a1b69b514472febf8508f7a8e8b9215da56[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Nov 3 00:05:18 2015 -0800

    Implement NetworkAddressChanged event on OSX
    
    This uses the OSX SystemConfiguration Framework to listen for IPv4 and
    IPv6 address changes on the machine. The framework gives you a way to
    listen for changes on a "dynamic store", and allows you to register for
    changes in specific keys. This uses OSX RunLoop functionality from the
    CoreFoundation Framework, and runs on a background thread.

[33mcommit 0a81e24acc8fe88e04a5d1cc8a0dc2538c7b012a[m
Merge: 96e70a6 f582ee5
Author: Peter Marcu <Peter.Marcu@Microsoft.com>
Date:   Thu Nov 5 11:41:31 2015 -0800

    Merge pull request #4350 from dotnet/davidfowl/platform-standard
    
    Rename Standard Platform to Platform Standard

[33mcommit f582ee5ba9c7d3d6e3e9ba96b0ee5ef200d6df19[m
Author: David Fowler <davidfowl@gmail.com>
Date:   Thu Nov 5 11:37:55 2015 -0800

    Rename Standard Platform to Platform Standard
    
    Rolls off the tongue better

[33mcommit 96e70a65cf42f876b39d913febbd8d95b7d98427[m
Merge: 501ef63 0650f65
Author: David Fowler <davidfowl@gmail.com>
Date:   Thu Nov 5 11:22:22 2015 -0800

    Merge pull request #4348 from dotnet/AArnott-patch-1
    
    Clarify nuget dotnet folder usage, and fix typo

[33mcommit 501ef632d399909fa4fbcf09e2a6cf7a9c78fb22[m
Merge: 476f591 7774c67
Author: Peter Marcu <Peter.Marcu@Microsoft.com>
Date:   Thu Nov 5 11:20:48 2015 -0800

    Merge pull request #4342 from dotnet/davidfowl/relationship-clarification
    
    Explain relationship between platform and standard

[33mcommit 0650f6581db687ddd006eb9253afe442df01c551[m
Author: Andrew Arnott <andrewarnott@gmail.com>
Date:   Thu Nov 5 11:15:48 2015 -0800

    Clarify nuget dotnet folder usage, and fix typo

[33mcommit 476f5917b4b438032da7a0f6c256fc24e15e388a[m
Merge: 7db7059 a324e58
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Nov 5 11:15:37 2015 -0800

    Merge pull request #4347 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 7db705906de9fca67f2c03817f3d3e637f6106b5[m
Merge: 8d07359 4fe5a67
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Nov 5 10:28:50 2015 -0800

    Merge pull request #4340 from ellismg/update-buildtools
    
    Update to buildtools 117

[33mcommit a324e5822678f3b579f54a261a4b74666ac3522f[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Nov 5 10:13:14 2015 -0800

    Enable System.Net.Sockets 4.1 for UWP
    
    Since the 4.1 Sockets contract is now established, we are enabling
    the contract for UWP (NETCORE50 NuGet target) as well as CoreFx (DNXCORE50 NuGet target).
    
    This brings the System.Net.Sockets contract into the proper NuGet dotnet5.4 generation.
    
    [tfs-changeset: 1545555]

[33mcommit 7774c67539f2162485f923d7f3951091fe260e47[m
Author: David Fowler <davidfowl@gmail.com>
Date:   Thu Nov 5 02:49:21 2015 -0800

    Update standard-platform.md
    
    Attempt to explain the relationship between the .NET Standard Platform and
    actual platforms.
    
    I thought about the abstract base class implementation analogy but didn't write out the code sample.
    
    PS: I'm not in love with the wording so tear it apart :smile:
    
    
    #4341

[33mcommit 4fe5a6777434647f78c3157847739a5469bcb662[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Wed Nov 4 23:47:09 2015 -0800

    Update to buildtools 117

[33mcommit 8d073595a0ba8f59b684f1d5931bb8489ecb0c86[m
Merge: d541fd8 2a329e2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Nov 4 23:37:17 2015 -0800

    Merge pull request #4327 from bartonjs/unix_x509chain_verificationflags
    
    Add support for X509VerificationFlags on Unix

[33mcommit d541fd84a30c4b72e44f35c303e3e1566b52f7ad[m
Merge: ec6e00c c0aab82
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Nov 4 23:37:01 2015 -0800

    Merge pull request #4331 from stephentoub/fix_security_tests
    
    Fix 43 of the 44 failing System.Net.Security tests on Linux

[33mcommit ec6e00c254bbfe951185152b69098f9771353413[m
Merge: 4ff65d7 47a435c
Author: Kurniawan Kurniawan <kkurni@gmail.com>
Date:   Wed Nov 4 23:04:26 2015 -0800

    Merge pull request #4332 from kkurni/fix-sqludt-exception
    
    SqlClient - Fix SqlUDT Type Exception

[33mcommit 4ff65d7f8218e26bc575792e40addaa34e9b14f6[m
Merge: b02d9c5 892f6d1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Nov 4 21:54:30 2015 -0800

    Merge pull request #4333 from dotnet/standard-platform
    
    Introducing the .NET Standard Platform

[33mcommit 892f6d112b2b2a39e0e19876c7caa6c1c0b9eef1[m
Author: David Fowler <davidfowl@gmail.com>
Date:   Wed Nov 4 21:53:47 2015 -0800

    PR updates

[33mcommit 51399fbe27ab0aab8bc38c71b80d7026f9e4a521[m
Author: David Fowler <davidfowl@gmail.com>
Date:   Wed Nov 4 21:32:08 2015 -0800

    Update standard-platform.md

[33mcommit c0aab82ea70453324f5e7d51902a0e1bb40db365[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Nov 4 18:01:28 2015 -0800

    Fix 43 of the 44 failing System.Net.Security tests on Linux
    
    - System.Net.Sockets removed a bunch of APIs.  They're somehow still in the contracts, so compilation succeeds, but they're not implementation, so the tests fail when trying to use methods like TcpClient.Connect and various Begin/End methods.  I've changed these to use the appropriate Async methods.
    - SslStream has a Debug.Fail which has been failing regularly, but it wasn't being noticed.  Now that Debug.Fail will throw an exception, the tests that were previously asserting are now failing.  I've temporarily commented out the Debug.Fail with a TODO comment.
    
    One test is still failing:
    ```
    System.Net.Security.Tests.ClientAsyncAuthenticateTest.ClientAsyncAuthenticate_MismatchProtocols_Ssl2_Fails_Linux(server: Ssl2, client: Tls11, expected: typeof(System.Security.Authentication.AuthenticationException)) [FAIL]
          Assert.Throws() Failure
          Expected: typeof(System.Security.Authentication.AuthenticationException)
          Actual:   typeof(System.InvalidOperationException): EndAuthenticate can only be called once for each asynchronous operation.
          Stack Trace:
                at System.Net.Security.SslState.EndProcessAuthentication(IAsyncResult result)
                at System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult asyncResult)
    ```

[33mcommit 9e0b539c9ee3dd105ff55e81c1c32cd2976b71ef[m
Author: David Fowler <davidfowl@gmail.com>
Date:   Wed Nov 4 18:42:21 2015 -0800

    Create standard-platform.md
    
    Added description of the standard platform

[33mcommit b02d9c502b3ffa5871167f2d94d6e365d6bf9854[m
Merge: 025d2d2 e38c48e
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Wed Nov 4 18:40:14 2015 -0800

    Merge pull request #4330 from kkurni/revert-unicode-encoding
    
    SqlClient - Revert back to use UnicodeEncoding

[33mcommit 025d2d2fd2e78346aebfba89251c365df80e7b98[m
Merge: 6940171 ec2a6dd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Nov 4 18:33:49 2015 -0800

    Merge pull request #4320 from stephentoub/move_cmake_check
    
    Address minor feedback on PR #4312

[33mcommit 69401710c644afb2ff0866aa01fe60199c662446[m
Merge: 4e8e6c8 e624dc5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Nov 4 18:33:36 2015 -0800

    Merge pull request #4313 from stephentoub/ctrlc_handling
    
    Implement ctrl-C and ctrl-\ signal handling in System.Native

[33mcommit 47a435c7acdc667911404fa0e5681ff56f843038[m
Author: kkurni <kkurni@microsoft.com>
Date:   Wed Nov 4 18:33:25 2015 -0800

    Issue :
              When we throw "UDT Not Supported" Exception, that exception was overridden by Internal Error.
              This Internal Error was caused by try{}catch{} which try to close the connection.
              Inside Close Connection, if the TDSParser.State == OpenedLoggedin, it will try to continue reading TDS Packet.
              That TDS Packet is invalid since we throw UDT Exception on the earlier calls which result Invalid Token and throw Internal Error Exception.
    
    Fix:
              Set TDSParser state as broken and break the connection when we throw exception will stop cleanup (close connection) code to continue reading TDS packet.
              This is following the same pattern in TDSParser.TryRun when there is error in InvalidToken, it set the status as broken and break the connection. I just called this earlier so that it won't called the cleanup and continue read the TDS.

[33mcommit 4e8e6c8c90fa045d9a3b46ac07d6e48370183262[m
Merge: ad522ac 281230e
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Nov 4 18:10:54 2015 -0800

    Merge pull request #4322 from mellinoe/ni-last-fixes-pr
    
    [NetworkInformation] Make last fixes tracked by issue #4060.

[33mcommit ad522ac2d0870a47568538b479f8e7f0a1abd7eb[m
Merge: d827524 93ea53c
Author: Matt Ellis <matell@microsoft.com>
Date:   Wed Nov 4 17:47:14 2015 -0800

    Merge pull request #4326 from BrennanConroy/patch-1
    
    Typo in linuxmint RID

[33mcommit 2a329e267d94f4cebd44e728c768c7f745aa5f36[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Nov 4 15:56:52 2015 -0800

    Make the BuildChain pass on OSX
    
    The test should no longer be depending on machine state (it was previously implicitly requiring that the root CA be trusted).

[33mcommit 7994951b8c5bb49b14693fe1b324f8b56a7bbc47[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Nov 4 15:29:18 2015 -0800

    Add support for X509VerificationFlags on Unix
    
    Rather than let OpenSSL stop processing at the first error encountered, implement a callback to collect the errors it reports (and tell it to keep going).
    
    Then, in the Verify step, loop over all errors found, and report on any that are not suppressed by the verification flags.
    
    Note that the use of the verification flags does not remove the information from the ChainElementStatus or ChainStatus arrays, this matches the Windows behavior.

[33mcommit 4c92447cec368d83c9dbf41a5aa127fee55cd790[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Nov 4 17:43:20 2015 -0800

    upgrade buildtools and fix the common lock file

[33mcommit e38c48ed3c4b4aa258bfe10188975eb399b13014[m
Author: kkurni <kkurni@microsoft.com>
Date:   Wed Nov 4 17:38:50 2015 -0800

    SqlClient - Revert back to use UnicodeEncoding because we have bring back Encoding.Extension into this package

[33mcommit d827524cc63659cbcf7a0506dc10958392d8b03a[m
Merge: 63551aa 1301191
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Nov 4 16:51:25 2015 -0800

    Merge pull request #4328 from stephentoub/disable_sec_tests
    
    Disable System.Net.Security tests on Unix

[33mcommit 13011914b9c9a8db574bd8562c3dab1691f300bc[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Nov 4 16:38:49 2015 -0800

    Disable System.Net.Security tests on Unix

[33mcommit 93ea53c2b60386d939b76f841c82f290dde52b54[m
Author: BrennanConroy <brecon@microsoft.com>
Date:   Wed Nov 4 14:58:50 2015 -0800

    Typo in linuxmint RID

[33mcommit 281230e1b2982781b2c647a6e318bf029cb44655[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Nov 3 17:12:47 2015 -0800

    Make last fixes tracked by issue #4060.
    
    * When calling into System.Native for obtaining TCP and UDP socket
      connection information (current open/listening sockets), just bail if
      the first call fails, i.e. if the estimated buffer size is not big
      enough. This is what most code examples do that I have seen, and I have
      not personally seen the first call fail anyways.
    
    * Shim out MapTcpState for Linux. There was previously a function doing
      the same thing, but only for OSX, and only in the context of gather
      connection informations. I've pulled it out into a separate source file
      and made an implementation for both platforms. This replaces the
      hard-coded enum in the managed code. NOTE: I have kept the managed enum
      in the test project, because the static test files we are using are from
      a specific distribution, and we therefore need to account for that some
      way in the parsing logic in the test library.

[33mcommit ec2a6ddcaf7877507b2c036cc9712dc4bddd18b0[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Nov 4 14:41:49 2015 -0500

    Address minor feedback on PR #4312

[33mcommit e624dc5a106c6aed93e107f7f96de6563f720e29[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Nov 4 14:31:48 2015 -0500

    Address PR feedback

[33mcommit 070e282397b21450f80a20028c5e5eff10ec46a4[m
Author: lajones <lajones@microsoft.com>
Date:   Tue Nov 3 14:52:14 2015 -0800

    Microsoft Security Bulletin MS15-101, CVE-2015-2526 - Removing the regexes
    for EmailAddressAttribute, PhoneAttribute and UrlAttribute and update
    RegularExpressionAttribute to allow user to specify a timeout.

[33mcommit 63551aabf91244f5960b498849098920512a648d[m
Merge: 5760b84 40b4619
Author: Pallavi Taneja <pallavit@users.noreply.github.com>
Date:   Wed Nov 4 11:08:24 2015 -0800

    Merge pull request #4266 from pallavit/Environment_Exit
    
    Expose Environment.Exit in NetCore

[33mcommit fa1635c07dc664cfde16f471c296697d4fdb4c42[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Oct 29 14:07:42 2015 -0700

    Perf test targets were buggy and required specific setup to not fail. I've hardened them so that the tests can be more easily built without also running them. I also removed the v5.0 libraries requirement. This commit also allows the perf tests to be run as regular unit tests.

[33mcommit 5760b84a25fe007a2360d936736de3e2fb68f32a[m
Merge: f45a9a1 2dc86c4
Author: shrutigarg <shgarg@microsoft.com>
Date:   Wed Nov 4 17:19:02 2015 +0530

    Merge pull request #4262 from shrutigarg/ssl_TODO
    
    Remove obsolete TODOs from xplat SslStream code

[33mcommit 2dc86c42cf97db170408c2cbdc4bda24a9be9d42[m
Author: Shruti Garg <shgarg@microsoft.com>
Date:   Fri Oct 30 11:57:52 2015 +0530

    Remove obsolete TODOs from xplat SslStream code

[33mcommit f45a9a13ccb3ce93d79ff1d7ed2b44e5fa88aeb2[m
Merge: bec99a0 bfdfa39
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Nov 4 00:00:52 2015 -0800

    Merge pull request #4294 from rainersigwald/patch-1
    
    Grammar and clarity updates for Windows build instructions

[33mcommit bec99a0c7fe37e12846e01d8c041513e274b346e[m
Merge: 3fec23b d22ce11
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Nov 3 23:42:30 2015 -0800

    Merge pull request #4311 from bartonjs/unix_pkcs7_export
    
    Add support for exporting as a PKCS#7 on Unix

[33mcommit 8a11cbbc29132a5d66f25a5ad2294732c4103733[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Nov 3 23:34:48 2015 -0800

    Implement ctrl-C / ctrl-\ signal handling in System.Native
    
    In System.Console.dll on Unix, we currently rely on libcoreclr's signal handling to support Console.CancelKeyPress.  Such a dependency is problematic if System.Console.dll is ever to be used on another runtime.
    
    This commit adds support for SIGINT/SIGQUIT signal handling to System.Native and then uses that support from System.Console.dll.  The functionality is implemented very similar to how libcoreclr currently does it: since we're unable to call out to managed code as part of a signal handler, a worker thread is maintained while a callback is registered, the signal handler writes to a pipe, and the worker thread reads from that pipe and dispatches the handler call to managed code.

[33mcommit eb0e7ba3553e8f0ab6ffed2271397ec3210555b5[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Nov 3 20:28:38 2015 -0800

    Move console functionality into pal_console
    
    Just moving some code around.

[33mcommit 3fec23b9d60b25473a752986997c77e58d28c366[m
Merge: 22ae847 04e50cb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Nov 3 20:09:26 2015 -0800

    Merge pull request #4312 from stephentoub/fix_curl_error_centos
    
    Fix System.Net.Http.Native compilation error on CentOS

[33mcommit d22ce1196b1d30c9913302a812f489b8953aec38[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Nov 3 18:39:53 2015 -0800

    Add support for exporting as a PKCS#7 on Unix
    
    This change also finishes off the exceptions for unsupported formats in Unix.  SerializedStore and SerializedCert are PlatformNotSupportedException, anything else is the same "unknown type" CryptographicException from Windows.

[33mcommit 04e50cb4783506023d4f548bf66ceaa0b04349d7[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Nov 3 18:07:54 2015 -0800

    Fix System.Net.Http.Native compilation error on CentOS
    
    Older versions of libcurl don't have an error code we're referencing.
    
    It's not actually needed in managed code other than to throw the right
    exception when this error code is returned.  If we're using an older
    version of libcurl where the error doesn't exist, it'll never be
    returned, so the managed code that references it will just be a nop.

[33mcommit 22ae847c82ba5242404833a59af14b7c3253d344[m
Merge: 73d4fe8 6a24d40
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Nov 3 17:32:26 2015 -0800

    Merge pull request #4310 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 6a24d40bfd53271002eaed5ade3e5f890d6b089d[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Nov 3 16:43:47 2015 -0800

    Add RIDs for OSX 10.11, OS.version, OSfamily-arch
    
    This adds more RIDs as follows:
      OSFamily-arch, eg: unix-x64
      OSX 10.11 El Capitan
      centos.7 synonomous with centos.7.1
    
    experimental RIDs added for consistency with DNX:
      ubuntu.15.04, linuxmint.17, linuxmint.17.1,
      linuxmint.17.2, linuxmint.17.3
    
    Previously we had only created RIDs for runtimes where
    needed to pivot assets in our own packages, but this
    creates a more complete set to permit 3rd party packages
    to define assets more granularly.
    
    I've also moved the runtime.json to the open source.
    We still haven't migrated all of the packaging infrastructure
    to run from the github repo, but this is a small step in order
    to better support collaboration with DNX on this shared
    data.
    
    [tfs-changeset: 1544730]

[33mcommit 73d4fe88bea44318888a3de7eb63dd0e53e1b8cd[m
Merge: c818044 e009a81
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Nov 3 15:42:42 2015 -0800

    Merge pull request #4309 from pgavlin/GH4172
    
    Fix a race in DynamicWinsockMethods.

[33mcommit e009a814e2a6d802b7e1f4153c59fdac48b513d8[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Nov 3 14:05:51 2015 -0800

    Add some assertions for clarification.

[33mcommit 03a43ac74177086fd5981e02a23afa424efb2849[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Nov 3 14:03:28 2015 -0800

    Address PR feedback.

[33mcommit 141ac82b7cdee5c941fe00861dca6c4408f37608[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Nov 3 12:47:04 2015 -0800

    Fix a race in DynamicWinsockMethods.
    
    There was a race between an initialization check and an initializer: in
    EnsureWSARecvMsg, the field used to check that multiple fields had been
    initialized was written to before the other field. The writes have been
    reordered and appropriate barriers have been added.
    
    Fixes #4172.

[33mcommit c8180448b4fb7fdca6185f7a3d3dc09de5afbb46[m
Merge: 1c534a2 8c3e516
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Tue Nov 3 11:24:43 2015 -0800

    Merge pull request #4304 from bartonjs/emptyoid
    
    Make new Oid("").Value always be ""

[33mcommit 8c3e51622e77434d80cb4339008a58183218dded[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Nov 3 10:35:24 2015 -0800

    Make new Oid("").Value always be ""
    
    Windows FindOIDInfo appears to match the empty string with 1.2.840.113549.1.9.9, which is confusing.  Desktop had a guard in place to prevent that from being returned, and this change restores that guard, and adds a test.

[33mcommit 1c534a2a53e5b14264a9faaf252c43f434ff186f[m
Merge: 5df5388 f144876
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Tue Nov 3 10:01:01 2015 -0800

    Merge pull request #4297 from shrutigarg/ssl_test3
    
    Fix FakeNetworkStream to remove direct Fix DoNetworkRead() use

[33mcommit 5df5388cfc8c0012ee52a41500712c2f9dca6cf9[m
Merge: 9b0b387 a18073d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Nov 3 10:00:36 2015 -0800

    Merge pull request #4300 from bartonjs/x509_cleanup
    
    Resolve outstanding style issues in X509Certificates

[33mcommit a18073dd05e784bbce35eae683f9eb96a79430da[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Nov 3 09:10:22 2015 -0800

    Make X509Cert2ToStringVerbose Dispose its IDisposables.

[33mcommit 8e8220ba202a87ac88acac6431e9705b6369eeb6[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Nov 3 09:02:26 2015 -0800

    Remove redundant field initializers from X509Certificates
    
    The redundant initializers were definitely in the minority, so collapsed the style inconsistencies by eliminating them.

[33mcommit 4189a1e8f0941efae0b4cd71101d16b622097854[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Nov 3 08:59:42 2015 -0800

    Eliminate trailing return statements from X509Certificates

[33mcommit fec1b85832223a2ff9276d82fad80b0de08dd06c[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Nov 3 08:58:08 2015 -0800

    Fix style issues in X509ExtensionEnumerator
    
    * Remove lots of unused using-import statements
    * Made IEnumerator.Current defer to Current
    * Pulled the properties up to single-line style

[33mcommit 078dfda8d0ce27c72e93c7e2cfded0aea54f864c[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Nov 3 08:28:38 2015 -0800

    Replace types with keywords where possible in X509Certificates
    
    String => string
    Object => object
    
    Also caught a few unnecessary return statements that were nearby.

[33mcommit 9b0b387e470b6989720c4561962494f575fb023d[m
Merge: 4ab53b1 7e85173
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Nov 3 07:15:00 2015 -0800

    Merge pull request #4295 from shrutigarg/ssl_test2
    
    Enabling ChannelBinding testcase in Unix

[33mcommit f144876d84fbfee06f4ad174d0c88944eb70eb47[m
Author: Shruti Garg <shgarg@microsoft.com>
Date:   Tue Nov 3 18:43:23 2015 +0530

    Fix FakeNetwrokStream to remove direct Fix DoNetworkRead() use

[33mcommit 4ab53b13420f90c7fc3ba24b09ac5c9af4fcd52e[m
Merge: 2e51800 19095a2
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Nov 3 00:10:26 2015 -0800

    Merge pull request #4285 from mellinoe/ni-xplat-cleanup
    
    [NetworkInformation] Address remaining code issues and general code cleanup

[33mcommit 7e8517315ffd7138e4c645df110a311a0124d0bb[m
Author: Shruti Garg <shgarg@microsoft.com>
Date:   Tue Nov 3 12:57:52 2015 +0530

    Enabling ChannelBinding testcase in Unix

[33mcommit 2e518000a747b758cdae8c2f8d48eb0a823ebcb3[m
Merge: c105e90 2503efd
Author: shrutigarg <shgarg@microsoft.com>
Date:   Tue Nov 3 12:42:33 2015 +0530

    Merge pull request #4263 from shrutigarg/ssl_test1
    
    Enabling System.Net.Security tests in Linux

[33mcommit c105e90426c1c1caeda398a6699095cbf87fb400[m
Merge: c97dc4f 9dda8df
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Mon Nov 2 16:14:32 2015 -0800

    Merge pull request #4270 from CIPop/DocDebugging
    
    Windows advanced debugging documentation.

[33mcommit 9dda8dfef549658ec53bda7e0aebdbfb5494de2c[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Fri Oct 30 15:22:03 2015 -0700

    Windows advanced debugging documentation.

[33mcommit c97dc4f10bb44f9b5163dfb53ea17856cb80fe95[m
Merge: 0b8c12f 1532551
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Mon Nov 2 16:08:55 2015 -0800

    Merge pull request #4293 from CIPop/SNSocketsLifetimeFix
    
    Fixing Debug code to do proper snapshot isolation of the ref-count variable.
    
    Fix #4204

[33mcommit 0b8c12fb69e07b56c3ca82a5acb968e895a5f934[m
Merge: fbec8f3 8168872
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Nov 2 15:30:03 2015 -0800

    Merge pull request #4277 from davidsh/requests_async
    
    HttpWebRequest request stream WriteAsync, FlushAsync overrides

[33mcommit fbec8f3c43c6a5a1fcf1182561bb8071ac4485ab[m
Merge: 4195071 28db45c
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Nov 2 15:28:27 2015 -0800

    Merge pull request #4276 from Maxwe11/issue-4052
    
    Optimize delegate allocations in SocketTaskExtensions

[33mcommit bfdfa3984a82f403a1b2758a483c47ac2cfe2c1a[m
Author: Rainer Sigwald <raines@microsoft.com>
Date:   Mon Nov 2 16:46:04 2015 -0600

    Grammar and clarity updates for Windows build
    
    When looking at how CoreFX does platform-specific tests, I found a stale reference to `XunitTraitDiscoverers`, which was removed with #1668.  While updating the documentation for that I made a few other clarity edits.

[33mcommit 4195071d6952f4431d41cc01fb146f33c3a4a2a6[m
Merge: f103882 2f439d3
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Nov 2 13:45:35 2015 -0800

    Merge pull request #4292 from jhendrixMSFT/master
    
    Update to latest build tools.

[33mcommit f10388239a67a21c0c3d136da2e85e2b2de0dd69[m
Merge: f753161 e318c8e
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Nov 2 13:09:25 2015 -0800

    Merge pull request #4280 from stephentoub/delete_stale_errors_osx
    
    Delete stale Interop.Errors.cs file

[33mcommit f753161630b4cd54cf4e1d3340c5c7700d3bddd4[m
Merge: 82f79dd 44322ee
Author: Khoa Dang <khdang@users.noreply.github.com>
Date:   Mon Nov 2 13:05:45 2015 -0800

    Merge pull request #4291 from khdang/fix-DataContractSurrogateCaller-header
    
    Header and formatting changes for serialization

[33mcommit 2f439d35824454db55390ef401e88f1bb0f587bb[m
Author: Joel Hendrix <jhendrix@microsoft.com>
Date:   Mon Nov 2 12:35:04 2015 -0800

    Update to latest build tools.
    
    Picks up a fix for cloud testing.

[33mcommit 44322eebb631ed1eb03559e78f1747e7b15575ed[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Mon Nov 2 11:47:36 2015 -0800

    Header and formatting changes for serialization

[33mcommit 82f79ddcdbf12999b5c0eb9c559c42fdd7910f18[m
Merge: 1a3e6b3 eda4bcb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Nov 2 10:43:23 2015 -0800

    Merge pull request #4258 from stephentoub/pal_time
    
    Implement Stopwatch's timing support in native shims

[33mcommit 1a3e6b3e375b690fdc6cd5d58afa295d4b4c0bee[m
Merge: 5668050 9176c6c
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Nov 2 10:13:14 2015 -0800

    Merge pull request #4272 from mellinoe/ni-xplat-tests
    
    [NetworkInformation] Add basic API surface tests for Linux, OSX

[33mcommit 56680500f0d8e1c5452e88b2a5fed2c00114ddb0[m
Merge: 9773aad 294839f
Author: Josh Free <joshfree@users.noreply.github.com>
Date:   Mon Nov 2 09:59:44 2015 -0800

    Merge pull request #4269 from stephentoub/process_fix
    
    Avoid hang related to System.Diagnostics.Process and shutdown

[33mcommit 9773aadfd7f16f12ae8a3c338c4906d6687c8b12[m
Merge: 1667676 dfb7e3c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Nov 2 09:54:55 2015 -0800

    Merge pull request #4229 from stephentoub/console_tests
    
    Add a few Console tests

[33mcommit 16676760efc66253f4148390825b5aca0e1dd557[m
Merge: 865dfdc 1824810
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Nov 2 11:46:53 2015 -0600

    Merge pull request #4267 from eerhardt/ShimMulti2
    
    Add shims for libcurl multi_* functions.

[33mcommit 18248105021cac41ac67f831e36a9b092a2e6869[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Nov 2 10:54:52 2015 -0600

    Respond to PR feedback.

[33mcommit eda4bcbeeb0f2b4c1e5e506b2723e97070f45025[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Nov 2 08:41:38 2015 -0800

    Address PR feedback

[33mcommit 9ef0026c342747eb85e80625568bceec9d0f5143[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Oct 29 20:38:29 2015 -0400

    Implement Stopwatch's time support in native shims
    
    We've eliminated most of our direct dependencies on libcoreclr from corefx, however we still have three:
    1. QueryPerformanceCounter/QueryPerformanceFrequency: these are used by Stopwatch in System.Runtime.Extensions.dll
    2. SetConsoleCtrlHandler: this is used by Console in System.Console.dll.
    3. CreateSemaphore/ReleaseSemaphore/FormatMessage: these are used by Semaphore in System.Threading.dll
    
    We're unlikely to be able to eliminate the third one, unless we remove the Semaphore implementation from corefx and instead type forward from the partial facade to mscorlib's implementation.  (This is due to libcoreclr's internal simulation of synchronization wait handles.)
    
    The second one can be removed, though it'll take a bit of work, porting the signal handling logic out of libcoreclr to System.Native or another shim.
    
    This commit removes the first, adding equivalents of QueryPerformanceCounter/QueryPerformanceFrequency to System.Native for use by Stopwatch.  I started with the code that was in libcoreclr but simplified and renamed it.

[33mcommit 865dfdc26984864e8370ffe466e0d3ae168438a0[m
Merge: fb284e6 157e83a
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Mon Nov 2 21:07:10 2015 +0530

    Merge pull request #4237 from rajansingh10/NetFeature2
    
    Added Support for GetChannelBinding() in SslStream xplat

[33mcommit 19095a24947af8be3952e85776cc5efa641c72bb[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Nov 2 02:24:51 2015 -0800

    Address remaining code issues and general code cleanup
    
    * Attempted to normalize the formatting of properties (single-line
      properties for trivial getters)
    * Added missing newlines
    * Normalized exception messages and exception throwing behavior in the
      library, particularly around string parsing errors, and PInvoke errors
      encountered when calling to System.Native.
    * Re-formatted existing comments into XML documentation comments in
      variety of shared files. I also removed some redundant comments from
      derived classes when the parent class already has the comment in place.
    * Deleted some dead code and some unused files from previous
      work-in-progress states
    *

[33mcommit 2503efd50ecff681887246f6f2de8a20c1e6469a[m
Author: Shruti Garg <shgarg@microsoft.com>
Date:   Mon Nov 2 14:42:35 2015 +0530

    Resolved review comments

[33mcommit 9176c6c4ddf837767b96cbb61c2d6a4690c0d974[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Sun Nov 1 21:31:33 2015 -0800

    Handle values up to UINt64.MaxValue in /proc/net/dev

[33mcommit 157e83aa4cd6511889f7075dc8400818de008048[m
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Thu Oct 15 17:26:09 2015 +0530

    Added Support for GetChannelBinding() in xplat

[33mcommit 8168872901f24ab9250b576358e95b34b56aff8e[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sat Oct 31 15:32:51 2015 -0700

    HttpWebRequest request stream WriteAsync, FlushAsync overrides
    
    This was a prior TODO from PR #2386.
    
    Added overrides for Stream's WriteAsync and FlushAync methods. As the request stream is a memory stream, it'll perform the operations synchronously anyways. Whereas if these methods remain not overridden, it'll default to the base stream's implementation which will queue work items that just call Write and Flush, respectively. So, this improves performance a little bit by not having to queue work items.
    
    Added tests for RequestStream class that is returned via the HttpWebRequest.GetRequstStream* methods.

[33mcommit 962da245f255b9cfb961f019806f76fa586456ff[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Nov 1 21:00:50 2015 -0500

    Delete dead code in WebUtility
    
    s_htmlDecodeConformance and s_htmlEncodeConformance were uncoditionally being set to Strict in an explicit static cctor and then never changed.  This commit removes those unnecessary fields, the unnecessary cctor, the unnecessary enums, and the dead code that was there for other values.

[33mcommit af19c942c15748df49881079c7912139856da707[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Nov 1 20:54:39 2015 -0500

    Improve HtmlEncode/Decode perf
    
    - It was unnecessarily duplicating calls to IndexOfHtmlEncodingChars and StringRequiresHtmlDecoding.
    - It was unnecessarily checking args that were already validated.
    - It was unnecessarily allocating LowLevelTextWriter wrappers when the only usage needed was StringBuilder.
    - It was unnecessarily making virtual calls for each append.
    - It was unnecessarily allocating StringBuilders, as StringBuilderCache is already in use by this assembly.
    
    In benchmarks measuring the throughput of HtmlEncode/Decode on strings that required changes, in my measurements this commit doubles the throughput of HtmlEncode/Decode.

[33mcommit e318c8ee638956253388419263cda5420fda965e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Nov 1 18:25:29 2015 -0500

    Delete stale Interop.Errors.cs file

[33mcommit 28db45cbfb4e5c5d82a2f3919b7e24f3a1a8b2cb[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Sat Oct 31 13:33:28 2015 +0200

    Optimize delegate allocations in SocketTaskExtensions

[33mcommit fb284e62a62bad0280c3f0c530ddb4a8c1ec79c0[m
Merge: 34676fa d7024b9
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Oct 30 20:40:53 2015 -0700

    Merge pull request #4275 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 34676fa61d751f5b7ed229488346336487fe45cd[m
Merge: ea36a9e 0da52d5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 30 22:34:42 2015 -0400

    Merge pull request #4271 from sokket/fsw
    
    Moving some less-reliable FSW tests out to OuterLoop

[33mcommit 15325510b084f3c5d59f1ea8e78a8fc6f577d229[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Fri Oct 30 18:04:19 2015 -0700

    Adding snapshot isolation to debugging ref-count code to avoid a race condition with SafeCloseSocket.Dispose() or .CloseAsIs().

[33mcommit d7024b97a2b0932a464a49c4d01279e54e7e75fc[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Oct 30 16:46:33 2015 -0700

    Fix NuGet packaging build for System.Net.Http.WinHttpHandler, System.Net.WebHeaderCollection, System.Net.Websockets
    
    [tfs-changeset: 1543747]

[33mcommit 54f9db36bbe0b7ffcc482800febd6ee1c3f6da21[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Oct 30 14:36:40 2015 -0700

    Add basic API surface tests for Linux, OSX
    
    I've copied out the existing tests that Windows uses, which log all of the
    properties available on various pieces in the library, to separate
    versions for Linux and OSX. For those properties that aren't supported on
    Linux or OSX, I instead assert that a PlatformNotSupportedException is
    thrown. Although this doesn't give us guarantees about the results of
    those methods, it does let us know if they have stopped working
    altogether.

[33mcommit ea36a9e8a533c82730d725d1b4632ed74cdc0f55[m
Merge: 301f28e 0471824
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 30 19:08:31 2015 -0400

    Merge pull request #4268 from mellinoe/ni-enumerator-impl
    
    Implement GetEnumerator for InternalIPAddressCollection

[33mcommit 301f28e557494ee0a729c6a56bd02d9d56a41a60[m
Merge: 3669a88 f34792d
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Oct 30 16:07:18 2015 -0700

    Merge pull request #4265 from mellinoe/ni-perf-todos3
    
    Use Ordinal string comparison for Linux network file parsing

[33mcommit 3669a883eae0ee87f2db20f88005a26b825f0dc2[m
Merge: 383db8b 6a458f1
Author: Guillermo Rangel <josra@microsoft.com>
Date:   Fri Oct 30 15:08:09 2015 -0700

    Merge pull request #4248 from josguil/testfixSockets
    
    Fixing tests having different behavior

[33mcommit d7dca1088ecc8b487e4bb02574b2f6b36510d63a[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Oct 30 16:39:38 2015 -0500

    Remove "libcurl" from Interop.Libraries.

[33mcommit 0471824bb3dec6e3db318642d6234b1afafbe828[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Oct 30 14:33:23 2015 -0700

    Implement GetEnumerator for InternalIPAddressCollection

[33mcommit 294839fa2e43847c1b77e2334f1a2ffaf0c358b4[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Oct 30 17:37:04 2015 -0400

    Workaround hang related to System.Diagnostics.Process and shutdown
    
    There appears to be an issue related to GC, finalization, and cleaning up Process objects that's causing some usage to hang sporadically at process shutdown.  I'm still trying to narrow down the exact cause, but in the meantime this commit works around the problem.  A few small tweaks:
    - We now avoid disposing of managed objects in ProcessWaitState.Holder's finalizer if we're shutting down.
    - We now avoid Dispose'ing a ManualResetEvent while holding a lock that the Holder finalizer might try to take, instead delaying disposal until after exiting the lock.

[33mcommit f09762189ce3813017f375a27e29559aba200117[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Oct 30 16:25:25 2015 -0500

    Add a shim for curl_multi_wait.

[33mcommit 0da52d55f2ddd61daf95c5378f95a5003066e7b4[m
Author: Jon Miller <sokket@outlook.com>
Date:   Fri Oct 30 14:21:32 2015 -0700

    Moving some less-reliable FSW tests out to OuterLoop

[33mcommit 6a458f16915bd554224871704aaea0bb2c0edc12[m
Author: Guillermo Rangel <josra@microsoft.com>
Date:   Thu Oct 29 13:40:09 2015 -0700

    Fixing tests having different behavior
    
    We discovered some tests were having a different behavior due to the
    nondeterministic nature of calling a disposal of a socket that is doing
    an EndAccept operation in a different thread.
    
    Also, the test was incorrectly propagating the expected SocketException
    coming from the client socket, using the server as an intermediary.  Now
    it's correctly done using a SocketError.
    
    Fix #4052
    
    Fixing race condition
    
    Added a handler so the connect is correctly awaited.
    
    Format Fix
    
    Added some blank lines required by coding guidelines

[33mcommit 40b46199dafa957a95323e415a62a4469f82c7a4[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Mon Oct 26 13:38:34 2015 -0700

    Expose Enviornment.Exit

[33mcommit 383db8b8a8b5a83e540d7fcb952e0e9b4f2da6c4[m
Merge: 236a3c6 5386014
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Oct 30 14:08:16 2015 -0700

    Merge pull request #4255 from davidsh/streaming_fix
    
    WinHttpHandler ResponseStream reads should return back with partial data

[33mcommit f34792de99e06ed210f545c8c8344e6fedb91562[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Oct 30 12:04:22 2015 -0700

    Use Ordinal string comparison for Linux network file parsing
    
    * These files are already expected to be well-formatted and uniform text
      files provided by the kernel. Therefore, we should just use ordinal
      comparisons for these checks.

[33mcommit 236a3c6fc31afa41c226778ef0c55eb96bdc7999[m
Merge: d45049d 57e0add
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Oct 30 11:45:20 2015 -0700

    Merge pull request #4256 from mellinoe/ni-perf-todos2
    
    [System.Net.NetworkInformation] Address performance to-do markers

[33mcommit c85bae2550b24149b5419b6065ec1ab614a3debb[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Oct 29 14:53:27 2015 -0500

    First round of libcurl Multi shimming.

[33mcommit d45049dc11c8653ffe178555fdd199a3d3588071[m
Merge: 9e69e25 f95b1ec
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Fri Oct 30 23:42:33 2015 +0530

    Merge pull request #4131 from kapilash/statuscode
    
    Handling Invalid http response

[33mcommit 5386014a6b74a8d38010b244f9e9ced96df53b69[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Oct 29 15:36:39 2015 -0700

    WinHttpHandler WinHttpResponseStream reads should return back with partial data
    
    .NET Stream.Read() semantics leave it to the implementation to decide how much data to return given a buffer of size N:
    
    https://msdn.microsoft.com/en-us/library/system.io.stream.read(v=vs.110).aspx
    "An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached."
    
    The behavior of System.Net HTTP APIs (i.e. .NET Framework) are such that stream reads are able to return as soon as data is available. They don't wait until the provided buffer is full. The current WinHttpHandler was not behaving that way because it didn't call WinHttpQueryDataAvailable before calling WinHttpReadData. WinHttpQueryDataAvailable would indicate how many bytes can be read immediately.
    
    This fix changes the WinHttpResponseStream.Read* methods to use WinHttpQueryDataAvailable before calling WinHttpReadData.
    
    Added both WinHttpHandler unit tests (helps with simulating/testing network errors) and HttpClientHandler functional tests (which will test x-plat).
    
    Fixes #1825

[33mcommit 9e69e25983a855525b8e6e58e412d043fb15a5c1[m
Merge: 5afe0af 6847322
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 30 13:37:32 2015 -0400

    Merge pull request #4260 from ellismg/update-buildtools
    
    Move to buildtools 115

[33mcommit 5afe0af9d6527480ff2297af2edd6dbfb506a6d5[m
Merge: e3dc9e3 d0ed91e
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Oct 30 10:36:19 2015 -0700

    Merge pull request #4239 from bartonjs/unix_x509_extensions
    
    Finish Unix support for X509 extensions

[33mcommit f95b1ec5d25c9046363bf85373060485f76c70a6[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Mon Oct 26 17:33:47 2015 +0530

    Handling Invalid http response
    
    CurlHandler to throw HttpRequestException if the HttpResponse message from the server has invalid format

[33mcommit e3dc9e34facd63eb47eb9129da038baccc5be0ce[m
Merge: 1e02c4f 02d0b75
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Oct 30 08:51:07 2015 -0500

    Merge pull request #4216 from eerhardt/ShimLibCurl
    
    Shim libcurl slist and easy functions

[33mcommit a450fde974f7ff4514505b5b953af6deadae51ff[m
Author: Shruti Garg <shgarg@microsoft.com>
Date:   Fri Oct 30 15:47:37 2015 +0530

    Enabling System.Net.Security tests in Linux

[33mcommit d0ed91e00cd85a8fe12abd4e46ea995afd7c62eb[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Oct 29 16:47:41 2015 -0700

    Add some negative tests for the EKU extension

[33mcommit d549f2893340c8d3d25c1ad5d91dd090399436f7[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Oct 29 10:00:07 2015 -0700

    Add support for CapiSha1 SubjectKeyIdentifier creation to Unix.
    
    CapiSha1 is the SHA-1 of the entire SubjectPublicKeyInfo structure.  Since the input to the generation is a detached PublicKey structure, it seemed easier to just DER encode it in managed code than rebuild it in native.

[33mcommit 4946f500b6e2f45f83ec90e3ff811d3f46896418[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Oct 29 09:55:05 2015 -0700

    Implement EncodeX509SubjectKeyIdentifierExtension for Unix

[33mcommit d2f195d993b58df2aae4c420a712e39e53e1265d[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Oct 29 08:37:06 2015 -0700

    Dispose the SHA1 object used by X509SubjectKeyIdentifierExtension creation

[33mcommit 979e6865ff1009038146c31e028ab648fd3be396[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Oct 28 19:28:30 2015 -0700

    Implement EncodeX509EnhancedKeyUsageExtension for Unix

[33mcommit d28f63f53521b149cca8c618c6c11c49afb9087e[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Oct 28 19:27:37 2015 -0700

    Add OID-encoding support to DerEncoder

[33mcommit 17f3e93d15e70b87a653c39b9070a01291753dd8[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Oct 28 13:42:39 2015 -0700

    Finish support for X509BasicConstraintsExtension on Unix
    
    The form of the extension called szOID_BASIC_CONSTRAINTS (2.5.29.10) doesn't have a public documented ASN structure, and is legacy.  Rather than add code to support it, and tests to verify it, just make the Unix implementation treat it as an unknown extension object.  But, in the event someone manually creates an X509BasicConstraintsExtension object with the legacy OID, throw a PlatformNotSupportedException on decode.
    
    The encoding of the extension (OID 2.5.29.19, from ITU X.509 03/2000) is performed with the fledgling DerEncoder.

[33mcommit 6847322606894b08f00812a6062a40236d100004[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Oct 29 21:52:02 2015 -0700

    Move to buildtools 115
    
    Pick up the fix for how we build the command line to corerun.
    
    Fixes #4227

[33mcommit 02d0b755cfb2b84fa27d48a064d5a5e6b81f9311[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Oct 29 17:14:54 2015 -0500

    Respond to PR feedback.
    
    - Rename Interop.LibCurl to Interop.Http.
    - Rename EasyPause to EasyUnpause, since that is what the method does.
    - Removed usages of macros in native code.
    - Changed managed libcurl constants to use enums.

[33mcommit 57e0addb1431ee1772e584c7785fb343663cc461[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Oct 29 14:58:58 2015 -0700

    Address // PERF markers in NetworkInformation
    
    There was an additional marker regarding using sysctl to query the machine's address count. I don't think it's actually worth bothering, since all we are doing instead is adding up the number of addresses from the list of interfaces we already have. It's probably faster than PInvoking for a single number.

[33mcommit 1e02c4fb5c4f9aadce27acb88ca002ea8ec9b432[m
Merge: cc48965 0de21ce
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Oct 29 17:54:12 2015 -0700

    Merge pull request #4252 from justinvp/netinfo_list
    
    System.Net.NetworkInformation: Use List<T> instead of Collection<T>

[33mcommit 6d307afc351901490891702a6a1d98551f3061fa[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Oct 28 16:56:13 2015 -0500

    Add shims for libcurl curl_easy_* functions.
    
    Also adding PAL enums for any constants needed for those easy functions.

[33mcommit 1a8f6cdc72d7281aeb520b251eb3dead3b011b96[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Oct 28 10:59:30 2015 -0500

    Add shims for Interop.libcurl_slist.cs functions.

[33mcommit cc48965ee9e11d2be0566f8d77748e306cd460aa[m
Merge: 353a032 a7d9abb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 29 19:35:09 2015 -0400

    Merge pull request #4250 from mmitche/set-code-formatter-to-only-trigger-on-phrase
    
    Set code formatter job to only trigger on phrase

[33mcommit 353a03215561e6bec1804818b8faca26aa4f0851[m
Merge: 6c106c3 e5bf476
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 29 19:34:54 2015 -0400

    Merge pull request #4253 from bartonjs/unix_https_legacy_osx_curl
    
    Handle CURLE_UNKNOWN_OPTION when registering HTTPS callbacks on older…

[33mcommit e5bf4763ce60bf50c36c2d473baaee76f09c740c[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Oct 29 14:45:18 2015 -0700

    Handle CURLE_UNKNOWN_OPTION when registering HTTPS callbacks on older versions of curl.
    
    Prior to curl 7.39 the case label for CURLOPT_SSL_CTX_FUNCTION was compiled out, resulting in CURLE_UNKNOWN_OPTION.  In 7.39 they changed it to always present, but reporting CURLE_NOT_BUILT_IN when the backend SSL provider didn't support that callback.
    
    The code was written based on the behavior of curl 7.43, so didn't know about the legacy behavioral difference.

[33mcommit 0de21cef0af8dc17db3c7c8e0fbe4393a8b57dc4[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Thu Oct 29 14:36:14 2015 -0700

    System.Net.NetworkInformation: Use List<T> over Collection<T>
    
    Avoids unnecessary Collection<T> overhead.

[33mcommit a7d9abb544aae8f4ac36380ea9db1239cd153d80[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Oct 29 14:17:18 2015 -0700

    Set code formatter job to only trigger on phrase
    
    Also some general cleanup and refactoring to use new APIs

[33mcommit 6c106c380249ebd394ea5ad75103cfa6bf71abe0[m
Merge: 27be68f 185e583
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Thu Oct 29 13:47:56 2015 -0700

    Merge pull request #4247 from sokket/style
    
    Disabling the formatting check globally in the groovy script

[33mcommit 185e5836a9efbd570b10de7f608f18dbbe2572c0[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Thu Oct 29 13:27:22 2015 -0700

    Disabling the formatting check globally in the groovy script

[33mcommit 27be68f3a17d4e1bee6a6b063ed59b4ca008cce7[m
Merge: b546f56 d07b927
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 29 16:16:19 2015 -0400

    Merge pull request #4246 from sokket/style
    
    Disabling style checking until the Ubuntu build machines get clang-format v3.6 installed

[33mcommit d07b927ee8eb86cd417cb3246788ed02f9a9d061[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Thu Oct 29 13:12:27 2015 -0700

    Disabling style checking until the Ubuntu build machines get
    clang-format v3.6 installed

[33mcommit b546f56401f3f3ba16eb779efed8430c0bc84031[m
Merge: b292478 2345e42
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 29 16:04:53 2015 -0400

    Merge pull request #4245 from sokket/style
    
    Fixing groovy script to use shell on Ubuntu instead of batchFile

[33mcommit 2345e425ce67e832d87bb19b7c1f22f2a2eb424b[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Thu Oct 29 13:02:03 2015 -0700

    Fixing groovy script to use shell on Ubuntu instead of batchFile

[33mcommit b292478a12909f87fb0333a09936d82aef1a0fbc[m
Merge: eea461b 304584f
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Thu Oct 29 12:57:55 2015 -0700

    Merge pull request #4241 from sokket/style
    
    Fixing the python style script to fix CI builds

[33mcommit eea461b7063e567f6ae56bb121b409889f664664[m
Merge: c6f3cf4 ed714a7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 29 15:54:54 2015 -0400

    Merge pull request #4240 from nguerrera/native-type-guidance
    
    Add more info about native data types to guidelines

[33mcommit c6f3cf417b392ed5bd985bbac5c7032d70316b53[m
Merge: 99d1ba1 1c81449
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 29 15:53:54 2015 -0400

    Merge pull request #4242 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 99d1ba1fa10a5cd2e2fb1a57a6d28dd85cea2bbc[m
Merge: 3f977f6 68e46ff
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 29 15:52:46 2015 -0400

    Merge pull request #4226 from stephentoub/debug_take_two
    
    Several changes to Debug.Assert

[33mcommit ed714a7c9463e5c980547dbba6ad32ae873daa19[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Oct 29 11:42:05 2015 -0700

    Add more info about native data types to guidelines

[33mcommit 304584f6240c6e73642d47314dc0af83c73d652a[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Thu Oct 29 11:42:16 2015 -0700

    Fixing the python style script to output only the differences when
    the checkonly flag has been placed. This will normalize the output
    and allows us to check for the expected output length to determine
    if any style replacements happened in the file. Also, fixing a bug
    in the clang-format file where we were using a format key that
    does not exist in the clang-format version we support; removing the
    key and bringing the files into compliance.

[33mcommit 1c8144920c62e89f77567a16ebfa8c1324e52f07[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Oct 29 11:42:25 2015 -0700

    Raise generation of refs to match min generation of all impl.
    
    Previously generations were strictly calculated.  We had a set
    of seed assemblies which defined generation boundaries based
    on where they were supported. Eg: System.Runtime 4.0.0.0 was
    supported inbox in Net45, 4.0.10.0 was supported inbox in
    Net451, we could not OOB 4.0.0.0 to Net451 due to unification
    so that defined a generation boundary.
    
    All non-seed assemblies got the maximum generation
    of all their transitive dependencies.
    
    This worked fine, but created a confusing picture when
    looking at the packages.  New contracts that were only
    implemented in DNXCore50 and Net46 had a reference assembly
    that claimed to be dotnet5.1 even though they weren't
    supported by any framework that was exclusive to 5.1-5.3.
    It also meant that targeting a generation required that
    someone use guardrails to ensure that they'd actually have
    an implementation on any framework targeting that generation.
    Without guardrails they might produce an assembly that would
    not run on any framework of the generation it claimed.
    
    This change raises the generation of all the reference assemblies
    to a minimum that supports any implementation.  This makes it
    clear which generation of frameworks support the package,
    it also lets someone target that generation without using guardrails
    and guarantees that they'll at least run somewhere.
    
    [tfs-changeset: 1543192]

[33mcommit 3f977f637cd986971157b63e7602f795bcf204ef[m
Merge: 0e05175 ca106a1
Author: Khoa Dang <khdang@users.noreply.github.com>
Date:   Thu Oct 29 11:39:54 2015 -0700

    Merge pull request #4215 from khdang/add_serialization_surrogate
    
    Add implementation and contract change for serialization surrogate

[33mcommit 0e051754fe95fbbb8e8336720e2fafc3559daf0b[m
Merge: 3080755 6154247
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Oct 29 11:01:30 2015 -0700

    Merge pull request #4211 from mellinoe/ni-string-parsing-pr
    
    Separate out Unix string parsing logic and test it

[33mcommit 3080755f51c6935b9ab1e5eff5abf03340c68b57[m
Merge: 7d6b905 6fccb05
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Thu Oct 29 10:38:48 2015 -0700

    Merge pull request #3992 from JeremyKuhne/StringBuffer
    
    Avoid StringBuilder interop perf

[33mcommit 7d6b905232f8efcd4b606d79d9e6fa63a73a8a63[m
Merge: d765eec 8d4dc6c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 29 12:45:02 2015 -0400

    Merge pull request #4238 from stephentoub/more_formatting_changes
    
    Fix formatting errors in pal_ssl.cpp

[33mcommit 8d4dc6c52be4a7ff2499e4269075f9b6e44eb993[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Oct 29 12:43:48 2015 -0400

    Fix formatting errors in pal_ssl.cpp

[33mcommit d765eec7f5e89a5485039f0f0fa94ff68791e342[m
Merge: ef0a29b d2e5caa
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 29 12:42:38 2015 -0400

    Merge pull request #4228 from eerhardt/FormatCode
    
    Running format-code.py to get the current code to a clean state.

[33mcommit ef0a29bcf2dd20eaf9d72f1740a7af6900cdebff[m
Merge: 093f8de 4af8f9d
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Oct 29 09:29:16 2015 -0700

    Merge pull request #4236 from mmitche/run-on-windows
    
    Run on windows, which has clang-format

[33mcommit ca106a12beff13d3746eb6b773e51284bffd6d07[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Thu Oct 29 09:20:06 2015 -0700

    Refactor surrogate code

[33mcommit 4af8f9d3a751fa94ba86da583da91f0fb5b34ef1[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Oct 29 09:08:51 2015 -0700

    Run on windows, which has clang-format

[33mcommit 093f8de556a11f2b9fe5d252a8d66f06ae2374d4[m
Merge: b258863 e3510f7
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Oct 29 08:26:45 2015 -0700

    Merge pull request #4232 from mmitche/fix-code-format
    
    Use shell instead of batch on linux

[33mcommit e3510f787a5c04aead7bc0b5e60d76c47ab0dd91[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Oct 29 08:08:07 2015 -0700

    Use shell instead of batch on linux

[33mcommit b258863eadd8bcc97fd9602741e084f2987a7ec4[m
Merge: 3711f36 02e3992
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 29 10:49:20 2015 -0400

    Merge pull request #4169 from shrutigarg/ssl_new1
    
    Populate DataHash key size in SslConnectionInfo

[33mcommit dfb7e3c14a9a6f8e4a7923e9e7400f9711182c64[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Oct 29 10:20:03 2015 -0400

    Add a few Console tests
    
    Noticed a few easily rectified gaps in code coverage.  Just a few additional tests.
    
    Also fixed the tests project to specify System.Diagnostics.Process in the project.json rather than with a P2P reference in the project file.

[33mcommit d2e5caa1aa563bb18ccd171f402f11c9ea8f3cf3[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Oct 29 08:57:54 2015 -0500

    Running format-code.py to get the current code to a clean state.

[33mcommit 68e46ff1b9bf5dea3490028bcd9742bd3dd92fc7[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Oct 29 09:10:08 2015 -0400

    Several changes to Debug.Assert
    
    This is another attempt at #4212, which was then immediately reverted in #4220 because it broke some internal build stuff due to the APIs being used.
    
    Changes on Windows:
    - When an Assert fires and the debugger isn't attached, instead of Environment.FailFast'ing, we throw an exception.
    - When an Assert fires, we were previously calling Debug.WriteLine twice; now we only call it once.
    
    Changes on Unix:
    - Made the Assert functionality match that of Windows in terms of the APIs being called.
    - Changed WriteCore to check Debugger.IsLogging and, if it's true, do a Debugger.Log, just as we do on Windows.  Right now these are nops, but when that changes this will become useful.  The fallback when IsLogging is false remains the same: write to syslog.
    - Fixed the WriteToStderr function to ignore errors from Write, as we don't want this function throwing exceptions due to failed attempts to output to stderr, such as if it was piped to another program that ended before this one (as with #4221).

[33mcommit 61542473e189e0510f1326ebf90c4e5b8561ce24[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Oct 22 16:33:15 2015 -0700

    Separate out Unix string parsing logic and test it
    
    These changes separate out all of the string parsing logic into a
    separate class, which I have added unit tests for. The unit tests
    operate on some static test files that I have created / copied from my
    dev machine. They are mostly unchanged, but I have added some more
    interesting data to the files in some cases.
    
    This should protect us from breaks in the parsing logic in the future,
    as we are using quite a bit of shared, common code that might be changed
    often in the future. The only issue that I encountered during the
    writing of these tests was that the Linux parsing logic for current
    active/listening TCP and UDP sockets was using the wrong entry in the
    table. It was using the remote endpoint rather than the local endpoint
    as listed in the file.
    
    Separate out Unix string parsing logic and test it
    
    Move ICMPv6, IPv4, IPv6 statistics parsing to helper class
    
    Separate all of the global statistics parsing for Linux
    
    Separate IPInterfaceStatistics parsing for Linux
    
    Separate out remainder of LinuxNetworkInterface string parsing
    
    Separate TCP/UDP connection parsing
    
    Separate string parsing in LinuxIpv4/6InterfaceProperties
    
    Add missing files to test project
    
    Separate out string parsing from LinuxIPInterfaceProperties
    
    Finish separating out the rest of the string parsing functions.
    
    Cleaned up some naming things and project files
    
    Add tests for all protocol statistics and connection infos
    
    Finish up adding string parsing tests
    
    Write out normalized files on Unix
    
    Fix test file paths, and fix a missed Trim() call
    
    Fix issue with Tcp6 statistics parsing (wrong file)

[33mcommit 02e3992cf5f11d7fc50debe4a16c4cb9527461e8[m
Author: Shruti Garg <shgarg@microsoft.com>
Date:   Thu Oct 29 14:56:44 2015 +0530

    Fixed PR Comments and Synced code

[33mcommit 86dec922c45391762b29c1da1563633cfb02f05a[m
Author: Shruti Garg <shgarg@microsoft.com>
Date:   Tue Oct 27 19:43:23 2015 +0530

    Populate DataHash key size in SslConnectionInfo

[33mcommit 6fccb05a3f1084c2f5f2c6401cfe002a8545212e[m
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Mon Oct 19 22:34:09 2015 -0700

    Address Path.GetFullPath perf on Windows
    
    Creates an internal buffer specifically for interop purposes (NativeBuffer/StringBuffer).
    Caching is implicit, disposing will return the buffer to the cache immediately.
    Buffers resize implicitly and handle content copying if needed. Buffers do not zero memory
    for added perf. StringBuffer can copy directly with strings and other StringBuffers.
    
    Utilize an array of native types to manage the cache. Avoids allocating Nodes and SpinWait usage.
    (30% tax and GC pressure avoided)
    
    Keep a thread local for the FullPathName buffer to avoid allocating in the normal case.
    Leaving the short path code path without a thread local as it is atypical.
    
    Some StringBuilder perf/functionality issues for interop that this tries to address:
    - Does not pin, but could if unchunked (creating 4x allocations for out strings with P/Invoke)
    - Does not allow fast copying between StringBuilders
    - Does not allow indexing in to skip characters with P/Invoke (char* + offset)
    - Cannot compare substrings without allocating or walking char indexing
    - Difficult to split null separated string arrays (common in Win32)
    - Capacity is actually +1 (doesn't include the null), most Win32 APIs want count + null
    
    Start moving String/StringBuilder/StringBuffer path internal helper methods to use core
    char* helper for longer methods. Keep StringBuffer overloads in a separate file to
    allow inclusion just with interoping projects.
    
    Make a few tweaks to improve the perf of GetFullPath(). Notably:
    
    - Avoiding the indexer to walk the path
    - Inlining a few methods
    - Precheck for special characters while walking
    - Remove extra recently added opportunistic short path filter
    
    Path resolution is now 2X as fast as legacy code when run sequentially or in parallel.
    GC pressure is lower as well, going from 2-3 GC's to none under heavy load (10 million paths).

[33mcommit 3711f36460a806435deb9503f17f3f7c1b3af5e1[m
Merge: c837eb9 f3fbbc7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 28 22:29:29 2015 -0400

    Merge pull request #4188 from sokket/style
    
    Adding a PR leg to run our style check and bringing native code into style compliance

[33mcommit c837eb9d604292d00d20f753ad6df53b532b2ef2[m
Merge: 8ffae31 da110e8
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 28 22:28:06 2015 -0400

    Merge pull request #4221 from stephentoub/console_eat_brokenpipe
    
    Ignore EPIPE errors on Unix when writing to Console

[33mcommit 8ffae31968a218c5d861cc68b380b6bdf6a7524b[m
Merge: c2e697b 9ea0681
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Wed Oct 28 17:55:19 2015 -0700

    Merge pull request #4218 from pgavlin/GH4143
    
    Add some missing using statements.

[33mcommit c2e697bcf02d6b5d03df185abf1b6aad5956c6df[m
Merge: 09a66bf 5d21902
Author: Matt Ellis <matell@microsoft.com>
Date:   Wed Oct 28 17:36:05 2015 -0700

    Merge pull request #4220 from dotnet/revert-4212-debug_write_stderr
    
    Revert "Change Debug.Assert on Windows when no debugger attached"

[33mcommit da110e8ae0c1567e4e5ceac5fb4f988571dccd89[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Oct 28 20:12:38 2015 -0400

    Ignore EPIPE errors on Unix when writing to Console
    
    If you pipe from a managed app to another app that ends (or doesn't exist to begin with), attempting to write to it via Console will throw an exception due to the pipe getting broken.
    
    This commit just changes Console's Write to ignore EPIPE (broken pipe) errors.  For now I still have it throw an other failures, but we could choose to add additional ignored errno values to the list, or simply not throw for anything.

[33mcommit 5d21902f19024823f86e3d9f549d049c463c6738[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 28 19:58:53 2015 -0400

    Revert "Change Debug.Assert on Windows when no debugger attached"

[33mcommit 9ea0681683c3ac9528a99ce6e8c717da732dcdfe[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Wed Oct 28 16:07:29 2015 -0700

    Add some missing using statements.
    
    The lack of these statements was breaking the TFS build.
    
    Fixes #4143.

[33mcommit 09a66bfc38e52befdd136c248d0ede1314867978[m
Merge: 40ca2da 4dda65c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 28 19:23:05 2015 -0400

    Merge pull request #4212 from stephentoub/debug_write_stderr
    
    Change Debug.Assert on Windows when no debugger attached

[33mcommit bae89d37206505d33a85f88502f829d5cebd3e0b[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Wed Oct 28 14:41:07 2015 -0700

    Add implementation and contract change for serialization surrogate

[33mcommit 40ca2da8cfb7329b29f717448b29d77ae34f2d0d[m
Merge: ce66915 5e3cd1d
Author: Matt Ellis <matell@microsoft.com>
Date:   Wed Oct 28 15:16:16 2015 -0700

    Merge pull request #4189 from ellismg/xplat-dev-workflow-improvements
    
    Cross plat dev workflow improvements.

[33mcommit f3fbbc7196c06edd94e9f2fad0029a98b4347748[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Tue Oct 27 16:53:07 2015 -0700

    Moving clang-format code over to a cross-platform python script and adding
    a leg to the PR builds that will fail the leg if the native code violates
    our code style; also, running the formatting script

[33mcommit 4dda65c086068bf710a614d54f79cd23f050cf2a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Oct 28 17:05:05 2015 -0400

    Change Debug.Assert behavior when no debugger attached
    
    Today on Windows if no debugger is attached, Debug.Assert fail fasts, which makes diagnosing difficult in a continuous integration environment; it also causes any other tests in the same process to be abandoned.
    
    This commit changes Assert to instead write to stderr and throw an exception in such situations.  The exception helps to ensure that code containing the assert is alerted to the failure, and the stderr output helps to ensure that it's noticed even if the exception is eaten.

[33mcommit ce669157ba8108fe27b41eef0ce297a2ab3150ed[m
Merge: 0217138 4e45e64
Author: David Shulman <david.shulman@microsoft.com>
Date:   Wed Oct 28 13:10:50 2015 -0700

    Merge pull request #4203 from stephentoub/substring_trim
    
    Replace Substring(...).Trim() with SubstringTrim(...)

[33mcommit 0217138deb8163e5e4380ffa8d727d42b0fada7a[m
Merge: 388b3e5 ae1c599
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Wed Oct 28 10:21:18 2015 -0700

    Merge pull request #4193 from bartonjs/unix_encode_keyusage
    
    Implement EncodeX509KeyUsageExtension for Unix

[33mcommit 388b3e52a73e1746d1edf638211f724d1a8c93cf[m
Merge: bd5ff44 97f864b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 28 12:36:58 2015 -0400

    Merge pull request #4197 from saurabh500/winidentity
    
    Support Correct exception for windows authentication failure on Xplat

[33mcommit 4e45e641c9d97c3a5d3b6fec4f6ffc33a2405fee[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Oct 28 10:06:07 2015 -0400

    Replace Substring(...).Trim() with SubstringTrim(...)
    
    System.Net.WebHeaderCollection already had a SubstringTrim helper that's used instead of Substring(...).Trim() to avoid first creating the substring and then trimming it, instead just offsetting the startIndex and length appropriately to do the Substring once.
    
    I've factored this helper out into Common, added unit tests, cleaned it up a bit, and used it in several more places in System.Net.

[33mcommit bd5ff4476937dc236585e9f7eef703f7dcd74979[m
Merge: 3ca3f46 0ac85cd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 28 12:19:15 2015 -0400

    Merge pull request #4121 from bartonjs/unix_https_validation
    
    Make Unix HttpClient use X509Chain instead of the default chain validator

[33mcommit 3ca3f46872d5d90f8f66d5a2d86a75d1bd6fe571[m
Merge: 2715e4f 5a95c96
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 28 12:14:14 2015 -0400

    Merge pull request #4145 from eerhardt/ShimLibc
    
    Add shims for the rest of the libc native calls.

[33mcommit 2715e4f3d6cc657953c008bef895b45405bdc38b[m
Merge: b9dacbd 3fea379
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 28 12:13:56 2015 -0400

    Merge pull request #4202 from ericstj/RuntimeInfo45
    
    Make RuntimeInformation work on Net 4.5

[33mcommit b9dacbd6d8c03f92dc62b4c6745e4a0d8b47cc35[m
Merge: 8924a5c 48c0424
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Oct 28 08:33:42 2015 -0700

    Merge pull request #4192 from bartdesmet/Issue-4191
    
    Adding Compile(bool) overload to ref file for System.Linq.Expressions.

[33mcommit 8924a5c367ce53c8bcb60cd44ccbf37e0a3fcf6a[m
Merge: e45d704 18d5afe
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Oct 28 10:03:09 2015 -0500

    Merge pull request #4186 from eerhardt/ShimLibCurl
    
    Add shim for libcurl version info.

[33mcommit 5a95c96c86073a2e22b9dab997abede8afa6a8d3[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Oct 28 10:02:09 2015 -0500

    Changing the HAVE_GETDOMAINNAME_SIZET check to have warnings as errors and fail on errors, instead of checking for -Wshorten in the build output.

[33mcommit 97f864b8f8b6a31b81f2bb514e55cf9b73ff8b84[m
Author: Saurabh Singh <sausing@microsoft.com>
Date:   Wed Oct 28 07:42:11 2015 -0700

    Making field readonly

[33mcommit eab7dd5ec88690665b4fcbf51a2b6c2367486833[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Oct 27 15:05:34 2015 -0500

    Fixing getdomainname build error on OSX by checking passing size_t into getdomainname and looking for a warning.
    
    Fixing unused parameters build error on OSX.
    
    Update for PR feedback.
    - Collapse the 3 HAVE_INOTIFY defines into a single define.

[33mcommit 7077b4d74707b9e07787b5fbc1fbe6a0db202ea9[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Oct 26 17:35:11 2015 -0500

    Add shims for the rest of the libc native calls.
    
    This removes all direct dependencies from managed code
    to native libc functions.
    
    Fix #4106

[33mcommit 18d5afe0c3b910e90a8d53807d1e29d104db06ba[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Oct 27 18:38:50 2015 -0500

    Add shim for libcurl version info.
    
    Adding a native shim for curl_version_info and removing the managed constants that are no longer needed.

[33mcommit 3fea3799b8c26847bc243e4deb7c7a67dfcf8d9b[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Oct 28 07:03:50 2015 -0700

    Make RuntimeInformation work on Net 4.5
    
    Fixes #4200

[33mcommit e45d7043735d986ce036f0087924f94fd33698f2[m
Merge: 7086e5c a5053a1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 28 07:49:25 2015 -0400

    Merge pull request #4194 from stephentoub/trim_response_header
    
    Trim response headers in CurlHandler

[33mcommit 7086e5c2c28902d00a6087c3e659ca5a6653a623[m
Merge: 8c1e7ec 3b0ec96
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 28 07:32:13 2015 -0400

    Merge pull request #4162 from stephentoub/marshal_tests
    
    Add a few Marshal.*HGlobal tests

[33mcommit 268262674e3d0b19a14fad548e63b14b4cb53880[m
Author: Saurabh Singh <sausing@microsoft.com>
Date:   Tue Oct 27 22:32:15 2015 -0700

    Support Correct exception for windows authentication failure on Xplat

[33mcommit ae1c599db409a89f3ed631e99a51e0995e68bf39[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Oct 27 19:15:16 2015 -0700

    Implement EncodeX509KeyUsageExtension for Unix
    
    OpenSSL doesn't have a direct encoder for KeyUsage.  Utilizing its encoder would require one of
    * calling ASN1_BIT_STRING_set_bit for each bit
    * Presuming its data encoding and building it directly
        * The complicated part is setting the "number of unused bits" value
    * Making a native function which does the bit-testing and calls ASN1_BIT_STRING_set_bit itself
        * But what order should the bits be assigned in?
    
    So, instead just add support for encoding a "NamedBitList" bit string to the fledgling DerEncoder.

[33mcommit a5053a14559ea30d224bf9f74892c86435d9166b[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Oct 27 22:47:56 2015 -0400

    Trim response headers in CurlHandler
    
    Apply same header response trimming done by WinHttpHandler.
    Fixes #4187
    
    (At some point I'd like to go through and replace all Substring(...).Trim() calls with a more efficient SubstringTrim(...) that doesn't allocate an intermediate string.  But in the meantime, this addresses the problem.)

[33mcommit 8c1e7ec8b39314e712f007098b179e92ea81ffe8[m
Merge: b367c26 a5cd86f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 27 22:32:14 2015 -0400

    Merge pull request #4159 from stephentoub/ping_pal
    
    Stub out System.Net.Utilities on Unix

[33mcommit 48c0424cee5a5329a845af584add44514ed65ff8[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Tue Oct 27 19:04:07 2015 -0700

    Adding Compile(bool) overload to ref file.

[33mcommit b367c26167bfa415589f1161984a147d04f70673[m
Merge: 7c5c55a 395312b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 27 21:56:19 2015 -0400

    Merge pull request #4181 from bartonjs/unix_getcertcontenttype
    
    Implement GetCertContentType for Unix

[33mcommit 7c5c55acdfddc9ac345619cf499ed9aba1ba2b5f[m
Merge: 01e8af2 d9842e8
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 27 21:56:10 2015 -0400

    Merge pull request #4184 from davidsh/http_verbs
    
    Add HttpClient tests to support all HTTP verbs

[33mcommit a5cd86f79310b63601a69a55341205937cc891dd[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Oct 26 15:36:44 2015 -0400

    Stub out System.Net.Utilities on Unix
    
    Separates the Windows implementation from shared code, and adds a Unix
    build of the library.  The Unix implementation is currently stubbed out to
    throw PlatformNotSupportedException.

[33mcommit 5e3cd1d3899ef75f0143e7030165377d58525126[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Mon Oct 26 18:56:44 2015 -0700

    Enable running tests as part of build

[33mcommit f68af8bd49a1a8bb4684cc6f14c96f8ffae59ed3[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Mon Oct 26 18:54:37 2015 -0700

    Update to buildtools 00112

[33mcommit 13486efbd6619da273c6658fbf927cccd67fa27c[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Sun Oct 25 23:46:24 2015 -0700

    Pass extra arguments to MSBuild, not make
    
    CoreFX folks are going to want to be able to do things like build.sh
    /p:SkipTests=true but today all unrecognized arguments to build.sh are
    passed to make instead of MSBuild.
    
    This is a bad default for us.
    
    If we have the need to start passing arguments to build the native build
    process and managed, we should agument build.sh to do something like
    treating all unrecgonized arguments after the "native" token to be
    things to pass to make and have the default behavior do the right thing
    most of the time which is pass arguments to MSBuild.

[33mcommit f430cedb84b28ed40b688f8fe5cd6ba5769db9e0[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Sun Oct 25 23:43:34 2015 -0700

    Don't set debug properties in projects
    
    Setting <DebugSymbols> and <DebugType> like this breaks building cross
    platform because Roslyn can't emit PDBs. Our top level properties files
    define these settings to false when building cross platform and there is
    no reason these projects need to be doing their own thing.

[33mcommit b9c943cc904369dbc976c23933e222fa3969c7b9[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Sat Oct 24 15:09:41 2015 -0700

    Use $(OsEnvironment) instead of $(OS)
    
    This hygenic changes matches what we do in other files, where
    $(OsEnvironment) is the host OS.

[33mcommit 0d292370e8c6a13ef5f1331e1221e00ca9021517[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Oct 23 17:53:07 2015 -0700

    Always use Roslyn when building on Unix

[33mcommit 488779164d09a5c2977c244964abcb6597190bba[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Oct 23 16:21:23 2015 -0700

    Try to guess a reasonble default for Tool RID
    
    This helps with cases where folks invoke msbuild directly without going
    through build.sh or build.cmd.  On Windows it's very easy to guess but
    on "Unix" it's harder so right now we assume that the Target OS and Host
    OS are the same (of course, this could be overridden).

[33mcommit d9842e88757ebc10c472d96008ec6b627433219f[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Oct 27 17:26:12 2015 -0700

    Address PR feedback

[33mcommit 01e8af21a2261fead1cb910f2f06b53927b2c6b3[m
Merge: df8b4f3 0c614ff
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 27 20:04:28 2015 -0400

    Merge pull request #4183 from bartdesmet/ReenableTests151027
    
    Reenabling tests that were disabled due to CoreCLR bugs

[33mcommit ae49b8e5428e509920b722912649e9a733cd1a3d[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Oct 27 16:51:09 2015 -0700

    Disable tests on Linux

[33mcommit df8b4f3c50c7ac2b9b2fa14c9a1c7f2cdabc173c[m
Merge: 2dcfd65 4a491ca
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 27 19:46:56 2015 -0400

    Merge pull request #4185 from stephentoub/xml_fix
    
    Fix XML docs containing an ampersand

[33mcommit 2dcfd6500536896a130dd0837f9e1189e395c1e3[m
Merge: 02ccdb5 de7aedb
Author: Joel Hendrix <jhendrix@microsoft.com>
Date:   Tue Oct 27 16:42:42 2015 -0700

    Merge pull request #4141 from jhendrixMSFT/master
    
    Add a hook for executing targets after the main build.

[33mcommit 02ccdb55ac52041c87a8ad0ec1520a1d40895c72[m
Merge: 8f28b55 2d66c1f
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Oct 27 15:46:02 2015 -0700

    Merge pull request #4180 from pgavlin/EnableTests
    
    Enable some System.Net tests for OSX/*nix.

[33mcommit 79e3350eec6c9fdee9081f9d3dd8b42fe574ada3[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Oct 27 15:29:43 2015 -0700

    Removed commented-out code.

[33mcommit 8f28b55e925b3c7205372b317cf192656a7b615d[m
Merge: 7ba9b92 2bd58b0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 27 18:24:51 2015 -0400

    Merge pull request #4178 from bartdesmet/Issue-4174
    
    Fixing some faulty expression interpreter write-back behaviors

[33mcommit 7ba9b928dbf6c67d0f321041d3b9dd32830034c0[m
Merge: d4879d9 d3622f1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 27 18:20:37 2015 -0400

    Merge pull request #4167 from bartdesmet/Issue-4135
    
    Fixing issues with NewExpression parameterized by static or abstract constructors

[33mcommit 4a491ca6f02122e9dc4dcff568134e0660ff767d[m
Author: mihailik <mihailik@gmail.com>
Date:   Fri Oct 23 09:39:38 2015 +0100

    Fix XML docs containing an ampersand

[33mcommit 057f0a9bc938606f9e3a24a51f64f3a4fd9bbb55[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Oct 27 15:01:40 2015 -0700

    Add HttpClient tests to support all HTTP verbs
    
    Added tests for validating against all standard and custom HTTP verbs. These tests use the new networking test server.
    
    Cosolidated some existing tests that were duplicative. More test porting and reorganzing will be done in later PRs.

[33mcommit 0c614ff5a9bec17cec084a19a369524e61cab996[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Tue Oct 27 14:53:06 2015 -0700

    Reenable tests that were disabled due to coreclr/1835.

[33mcommit 2c884df74b2d0c13383c908c7b09bf5aae7debb0[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Tue Oct 27 14:52:53 2015 -0700

    Reenable tests that were disabled due to coreclr/1831.

[33mcommit 068169fc93906271d6f321d38c60c7a37731ac13[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Sun Oct 25 22:54:01 2015 -0700

    Reenabling various tests for conversion nodes.

[33mcommit 5d7d0f6a1922029d680322b0ee25566d7e5b9c57[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Mon Oct 26 16:49:41 2015 -0700

    Fixing InvalidCastException behavior in interpreter.

[33mcommit 2d66c1f10b4b16d2db8930a504d3bc2560d85220[m
Author: Pat Gavlin <pagavlin@microsoft.com>
Date:   Tue Oct 27 10:49:58 2015 -0700

    Enable some System.Net tests for OSX/*nix.
    
    - The NameResolution functional tests were disabled on all *nixes.
    - The NameResolution PAL tests have been switched to the more modern
      style.
    - The Sockets.Legacy tests were disabled for OS X when using
      run-test.sh.

[33mcommit b18c68c35db7f411dc1db559522f41bc8995052c[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Sun Oct 25 22:52:00 2015 -0700

    Fixing interpreter behavior for enum conversions.

[33mcommit 8d328efe22cdbac148601db3a9c7486cbb5a9513[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Sun Oct 25 22:50:54 2015 -0700

    Adding more tests for boxing and unboxing.

[33mcommit 79d8aca5bf4568b76ca1924ca3879b8162dd10d7[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Wed Oct 21 02:02:08 2015 -0700

    Fixing interpreter behavior when converting a null reference to a value type.

[33mcommit b8f11e7d56faf8d6451e381f24af75a4829c274e[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Wed Oct 21 01:49:36 2015 -0700

    Adding interpreter support for conversions from Boolean to numeric types.

[33mcommit de7aedba0239465427870ac4659473f8c72291ef[m
Author: Joel Hendrix <jhendrix@microsoft.com>
Date:   Tue Oct 27 14:13:19 2015 -0700

    Add a hook for executing targets after the main build.
    
    There is a need to execute some targets after the product and test
    binaries have been built; this change adds such a hook,
    PostBuildDependsOn, allowing targets to execute post-build.
    
    Move to latest version of build tools.
    
    Fixed a build issue for XML serialization perf tests.

[33mcommit 2bd58b0dc33a7cd425c9bbe16a0a16e6e5bc7ab7[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Tue Oct 27 10:28:15 2015 -0700

    Fixes for write-back behavior in the interpreter.

[33mcommit d172427dc817a857c47b892c81fc9ef3b14865fd[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Tue Oct 27 10:20:33 2015 -0700

    Adding support for void-returning cross-check tests.

[33mcommit d4879d9ac795fda97520a6ac825ca3a774c441cf[m
Merge: 48c1ed9 be2daa9
Author: VSadov <vsadov@microsoft.com>
Date:   Tue Oct 27 13:14:54 2015 -0700

    Merge pull request #4179 from bartdesmet/CodeFormatting
    
    Code formatting and untabification for System.Linq.Expressions

[33mcommit 395312b302d8d54ab56f996605f441e2f5c8bf98[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Oct 27 13:04:17 2015 -0700

    Implement GetCertContentType for Unix

[33mcommit be2daa91a08f971949f83c92137ec1649b02c2ab[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Tue Oct 27 12:15:53 2015 -0700

    Code formatting and untabification.

[33mcommit 48c1ed9683b5727bfb4a5d139ce311ad0c9742a2[m
Merge: c3f14a0 de9f9d3
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 27 14:47:08 2015 -0400

    Merge pull request #4175 from pgavlin/KEventUData
    
    Fix a bug in OS X/BSD socket shims.

[33mcommit c3f14a0f107117b8e32e4ae85fc6c5dbf2d1b164[m
Merge: 7f49f46 5875c5c
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Wed Oct 28 00:02:09 2015 +0530

    Merge pull request #4166 from kapilash/libcurl_delete
    
    Support for http delete method for CurlHandler

[33mcommit 3b0ec9643739ead108286dadd767d95680f19330[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Oct 27 14:17:52 2015 -0400

    Add a few Alloc/ReAlloc/FreeCoTaskMem tests, too

[33mcommit 7f49f462ad5ed7c783c53df64973cd9ac129c497[m
Merge: 94e83e7 64e53e9
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Oct 27 10:48:38 2015 -0700

    Merge pull request #4176 from bartdesmet/MoreUnsafeCleanup
    
    Removing unsafe modifier in test code

[33mcommit 64e53e9d76baa0c60de3abfdc61130f06e9e5fea[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Tue Oct 27 10:10:46 2015 -0700

    Removing unsafe modifier.

[33mcommit de9f9d30fe5bd39a8961268fa66bc1a91e341243[m
Author: Pat Gavlin <pagavlin@microsoft.com>
Date:   Tue Oct 27 10:04:12 2015 -0700

    Fix a bug in OS X/BSD socket shims.
    
    The wrong field in `kevent` was being used to store user data.

[33mcommit d3622f110a6353a6388dcd1c6686f6949b51f4d4[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Tue Oct 27 02:32:10 2015 -0700

    Fixing NewExpression behavior for use with static or abstract constructors.

[33mcommit 0ac85cd61e98ab684278dc3fe7a882623e207828[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Fri Oct 23 18:00:27 2015 -0700

    Make CurlHandler use X509Chain to validate the chain.
    
    libcurl+openssl defaults to just using X509_verify_cert, and the chain that came with the TLS handshake.
    
    The X509Chain class has support for a user-defined trust list, downloading intermediate CA certs, and downloading CRLs (which isn't utilized in this change).
    
    The existing approach was not doing CRL checking, and since the Unix X509Chain implementation does not support opportunistic CRL checking, this change leaves that functionality disabled.

[33mcommit 5875c5cc6f900941be8ac3ec21bd1cce53f4b3ae[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Tue Oct 27 22:00:00 2015 +0530

    Fix CurlHandler for http TRACE method
    
    TRACE should not upload content.

[33mcommit 94e83e7ef2c7f22259d44af3301e36dc6a7fb232[m
Merge: 69254df 0a86a3d
Author: VSadov <vsadov@microsoft.com>
Date:   Tue Oct 27 09:26:37 2015 -0700

    Merge pull request #4164 from bartdesmet/Issue-4161
    
    Fixing expression compiler support for multi-dimensional arrays of rank 1

[33mcommit c76364b7d4a315c976be649c86af8445a8b37ad4[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Oct 26 22:49:08 2015 -0400

    Add a few Marshal.*HGlobal tests
    
    Implementing Marshal.ReAllocHGlobal in coreclr, and we didn't have any tests exercising it.

[33mcommit 69254df2bf37aa0f5696e41e56ba99dd53014e9f[m
Merge: f575182 a061a52
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 27 12:03:47 2015 -0400

    Merge pull request #4130 from bbowyersmyth/CompareOrdinalTests
    
    Additional tests for String.CompareOrdinal(string, int, string, int, int)

[33mcommit 20819227e708d42db9c3c4f8b7c0fd13180da777[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Tue Oct 27 14:36:41 2015 +0530

    Support for http delete and other methods for CurlHandler
    
    Update CurlHandler to allow sending Http 'delete', 'options' and etc
    Add two test cases for delete
    Add two test cases for options
    
    Support for other Http methods
    
    Added tests for options as well

[33mcommit f3197d731d66b14cf2c87ebb643dd2bde44220e5[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Fri Oct 23 17:19:06 2015 -0700

    Extract SslCtx methods for better sharing

[33mcommit 2d2324bd8179c3fe7e597eefc356836da35ed8bf[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Fri Oct 23 17:18:14 2015 -0700

    Extract X509Stack and X509StoreCtx methods for better sharing

[33mcommit f57518208fd6e3b73cf0d8172f56372d76112666[m
Merge: 2a070e8 5cf4da6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 27 10:40:39 2015 -0400

    Merge pull request #4165 from bartdesmet/CleanUpUnsafeTests
    
    Removing unsafe modifier from System.Linq.Expressions tests.

[33mcommit 2a070e8b0ebd1ea13ec1ca79252b451ec761fc9a[m
Merge: 3c4b8a3 44bce1b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 27 10:36:28 2015 -0400

    Merge pull request #4156 from SGuyGe/MinorFixes
    
    Minor fixes for tests:

[33mcommit a061a52446fb15b4a8ccb6e1454472aac7159a64[m
Author: Bruce Bowyer-Smyth <bbowyersmyth@live.com.au>
Date:   Tue Oct 27 19:04:37 2015 +1000

    Address PR feedback

[33mcommit 5cf4da68f29fbc224a96ab82c6c73a087b3caa31[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Tue Oct 27 01:34:54 2015 -0700

    Removing `unsafe` modifier from tests.

[33mcommit 0a86a3df8bd87bd674f018c16848de3047cb5f15[m
Author: Bart J.F. De Smet <bartde@microsoft.com>
Date:   Tue Oct 27 01:19:05 2015 -0700

    Simplifying IsVector helper method

[33mcommit 2142c7c858d4d0c649e1be893ab5ff1fac0c9f37[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Mon Oct 26 23:00:54 2015 -0700

    Fixing expression compiler support for multi-dimensional arrays of rank 1.

[33mcommit 3c4b8a3231e339eb7f1346498f2a992daf9b5d7b[m
Merge: a28f255 64ba745
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 26 23:15:25 2015 -0400

    Merge pull request #4158 from CIPop/SocketTimeouts
    
    Removing ActiveIssue since the test timeouts have been already increased

[33mcommit a28f255746e48811002f0dcf291e679fc6371b74[m
Merge: 0b84d86 1662286
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Mon Oct 26 18:42:29 2015 -0700

    Merge pull request #4155 from CIPop/snnapm
    
    Removing APM and synchronous methods from System.Net.NetworkInformation.
    
    Fix #4044

[33mcommit 0b84d862335e7b461fbf3e946bc8cab02d6caa01[m
Merge: 5ae8b14 9a57124
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Mon Oct 26 18:41:35 2015 -0700

    Merge pull request #4153 from CIPop/sslstreamtimeout
    
    Increasing test timeout for System.Net.Security (SslStream).
    
    Fix #3845

[33mcommit 64ba745089e1bdf2a39181e46d76ce2cb5acdd4a[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Mon Oct 26 18:23:43 2015 -0700

    Removing ActiveIssue since the test timeouts have been already increased.
    
    Fix #3497

[33mcommit 44bce1beb6ba9b69656743fb86ae105aec780b1b[m
Author: sguyge <sguyge@microsoft.com>
Date:   Mon Oct 26 17:05:04 2015 -0700

    Minor fixes for tests:
    1. Verification of array content
    2. Avoid using Array.Empty which was added in later version of contracts
    3. Moving tests involving types that are not in public contracts to XmlSerializerTests.Internal.cs

[33mcommit 1662286d7cc15fc497b36fde5e9dce1af45993d6[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Mon Oct 26 17:38:10 2015 -0700

    Removing APM and synchronous methods from System.Net.NetworkInformation
    
    Fix #4044

[33mcommit 5ae8b14babce4b5b62a5e99ca78fea5e7e005d87[m
Merge: 5e5cd90 75631e8
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Oct 26 17:29:28 2015 -0700

    Merge pull request #4151 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 9a5712441b9d7eea761a57f6159bd5c00dbf081d[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Mon Oct 26 16:56:31 2015 -0700

    Increasing test timeout for System.Net.Security (SslStream).
    
    Fix #3845

[33mcommit 5e5cd90b3a1c59209427e77064a665b4841913c6[m
Merge: 03c8029 194e7e4
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Oct 26 16:33:28 2015 -0700

    Merge pull request #4139 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 03c8029e71b1bd82231331ddfc5bae8e72d5ce15[m
Merge: 34a258e 4d83ab1
Author: Ian Hays <ianha@microsoft.com>
Date:   Mon Oct 26 16:16:50 2015 -0700

    Merge pull request #4147 from ianhays/clrcompression
    
    Added explicit reference to Compression in test-runtime

[33mcommit 34a258eb548e34539d9ebaaca3aca52a8df7c5c6[m
Merge: 3a2579f 58fddea
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Oct 26 16:15:25 2015 -0700

    Merge pull request #4136 from pgavlin/SocketsDeadCode
    
    Remove dead code in S.N.Sockets.

[33mcommit 3a2579f8fb9c781e035bd019c4556ecd42253375[m
Merge: e288e3e 62f4008
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Oct 26 16:15:17 2015 -0700

    Merge pull request #4140 from pgavlin/GH4003
    
    Readjust a Sockets test to accommodate OS X.

[33mcommit e288e3e1ac829529f4b93cee7ae20cc95d2cda05[m
Merge: f1b70eb 3baafe4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 26 19:08:19 2015 -0400

    Merge pull request #4144 from CIPop/WebSocketsClientTrackingItem
    
    Adding TODO issue number to WebSockets.Client

[33mcommit 75631e8ea76b00c8c6d5404d2dd9a727c6c6672e[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Oct 26 15:55:38 2015 -0700

    Enable x-plat packaging for System.Net.NetworkInformation
    
    [tfs-changeset: 1541848]

[33mcommit 3baafe4be43cca752e3a7eb1e69df249ba248001[m
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Mon Oct 26 15:32:19 2015 -0700

    Adding TODO issue number.
    
    Adding TODO tracking issue number (#4143) to fix the NetNative WebSocket.Client contract implementation.

[33mcommit 4d83ab117fc735e28de57c29931aa76ddd9c9bd8[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Mon Oct 26 15:31:25 2015 -0700

    Added explicit reference to Compression in test-runtime
    
    DNX is consuming the runtime.json for 4.0.0 and pulling in old versions of CLRCompression that went by a different name. Adding an explicit reference in the common test-runtime project.json to System.IO.Compression resolves this issue until the DNX issue https://github.com/aspnet/dnx/issues/3078 is resolved. This change is to update our CLRCompression to a more recent version that includes the CRC32 function export.

[33mcommit f1b70ebc0e7b02afb4508ba45067725dc21f1df0[m
Merge: 78bc63b c400ce0
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Oct 26 15:08:46 2015 -0700

    Merge pull request #4105 from jasonwilliams200OK/native/kevent
    
    native: Uses kevent instead of kevent64

[33mcommit 194e7e437642d9df08276567ae2a97c99b565152[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Oct 26 14:44:09 2015 -0700

    Bump System.Reflection.Metadata version to 1.1.1
    
    Version 1.1.0 out of release branch will be marked stable.
    
    [tfs-changeset: 1541837]

[33mcommit 62f40087b5b694ad2e453c44811cd420304703ee[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Oct 26 14:18:28 2015 -0700

    Readjust a Sockets test to accommodate OS X.
    
    OS X returns yet another different error code when an IPv4 socket address is
    passed to recvmsg on an IPv6-only socket.
    
    Fixes #4003.

[33mcommit 58fddeabd172ea755408cd461fd4b19233883c4b[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Oct 26 13:58:01 2015 -0700

    Remove dead code in S.N.Sockets.
    
    Now that the Disconnect* APIs are gone, we can remove the remnants of the
    code that used to support these APIs.

[33mcommit 78bc63b4661f0fb8d5f55ad3d7396eb62e5a13d7[m
Merge: 0e59e61 8be0a29
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Oct 26 13:50:27 2015 -0700

    Merge pull request #4111 from pgavlin/GH4005
    
    Change some dual-mode tests to accommodate platform differences.

[33mcommit 8be0a29d201b743e26fbc9c4646a09518a98fbaa[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Fri Oct 23 13:40:11 2015 -0700

    Change some dual-mode tests to accommodate platform differences.
    
    On *nix, the OS IP stack changes a dual-mode socket back to a normal IPv6
    socket once the socket is bound to an IPv6-specific address. This can
    cause behavioral differences in code that checks the value of DualMode
    (e.g. the checks in CanTryAddressFamily). We've decided not to emulate the
    Winsock behavior (which does not change the value of `IPV6_V6ONLY` for
    dual-mode sockets bound to IPv6-specific addresses) due to the cost of
    caching the expected value on each socket instance; some tests needed
    changes as a consequence of this decision.
    
    Fixes #4005.

[33mcommit 53060c467b1e30a34fe369cdb11e0dd4412d2e7b[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Mon Oct 26 17:04:15 2015 +0000

    Variable expression tests.
    
    Add tests for Expression.Parameter(), Expression.Variable() and
    Expression.RuntimeVariables().

[33mcommit 0e59e61e5d715c13fcca365e0074fc6b62713bc8[m
Merge: 8845ca7 b374589
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 26 12:36:01 2015 -0400

    Merge pull request #4127 from stephentoub/remove_sb_interop
    
    Remove StringBuilder marshaling from Unix interop

[33mcommit 3ae75922c3097b19eb0fbb07d53a38ba66f72149[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Oct 15 12:12:47 2015 +0100

    Add tests for unbox expressions and remove incorrect assertion

[33mcommit b374589022f30988dd58306a8852bee35625a441[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Oct 26 12:04:29 2015 -0400

    Remove StringBuilder marshaling from Unix interop
    
    We use StringBuilder marshaling in our Unix interop code in a few places, all in crypto, and it's unnecessarily expensive. We need to allocate the StringBuilder, and allocate its underlying char[]. The marshaling implementation will then allocate some native memory to store the results, and on the way back a new char[] is allocated to store the result and is copied into the StringBuilder. Then a string is built from the contents of the StringBuilder.
    
    We can instead just allocate a byte, have the native code write into that, and decode it into a string.

[33mcommit cdb16d986aa3b444044658f6b46e5d28bb728466[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Oct 13 11:07:57 2015 +0100

    Remove error methods that are no longer ever hit.

[33mcommit 0f0c1874f877bb16d2574b0b9fab930b7b3620a6[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Oct 13 10:48:37 2015 +0100

    Use new visitor class for EnumerableQuery expressions.
    
    Fixes #3607
    
    Have EnumerableRewriter inherit from ExpressionVisitor, hence allowing those
    Expression classes introduced after 3.5 to be used. Also handle explicit
    typing of those expressions that can be explicitly typed.

[33mcommit fac00ec7f9a7d404cac20f17f6fb64eb910bbffb[m
Author: Bruce Bowyer-Smyth <bbowyersmyth@live.com.au>
Date:   Mon Oct 26 22:12:28 2015 +1000

    Additional tests for String.CompareOrdinal(string, int, string, int, int)

[33mcommit 8845ca79ea5dc4fa292c41bd3b0c72d8c6005971[m
Merge: 534ef3d 0945300
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Oct 25 22:08:04 2015 -0400

    Merge pull request #4126 from jkotas/getlasterror
    
    Delete unused references to Interop.GetLastError.cs

[33mcommit 09453001f20990bb4c357a89469df6137d610168[m
Author: Jan Kotas <jkotas@microsoft.com>
Date:   Sun Oct 25 12:19:31 2015 -0700

    Delete unused references to Interop.GetLastError.cs

[33mcommit 534ef3d25c010d910c7b791b06f9d41060ddbcf5[m
Merge: 41edd85 a465212
Author: Jan Kotas <jkotas@microsoft.com>
Date:   Sun Oct 25 12:44:43 2015 -0700

    Merge pull request #4103 from stephentoub/improve_hs_memory
    
    Reduce HashSet<T> memory consumption via StructLayout

[33mcommit a465212d79ac68656b0a8a6d5e1c6e984b5680d5[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Oct 25 13:07:19 2015 -0400

    Reorganize several struct layouts to improve memory efficiency
    
    Due to padding, these structs can end up being unnecessarily large on 64-bit.  Reorganizing the fields helps to minimize the overhead, helping in particular when these are used in arrays.

[33mcommit 41edd850946cb647079046f4347fa9d44bba2649[m
Merge: 3827759 eefb441
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Oct 24 20:09:47 2015 -0400

    Merge pull request #4124 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit eefb4412ceff05d013190f1fff69ded4c067d5c6[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Sat Oct 24 15:51:40 2015 -0700

    Fix System.IO.Compression desktop build break
    
    The desktop version of System.IO.Compression is a partial facade but
    uses some code from the open source version.  A recent GitHub change
    introduced some dependencies that are breaking the desktop
    version. Until a real fix can be made I have worked around the issue
    by introducing a new ifdef to guard the problematic code in the shared
    files which is not set in the desktop project.
    
    [tfs-changeset: 1541463]

[33mcommit 38277597fc07b4d44a10d9ae841af025d8aae934[m
Merge: 86a14b4 c66001f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Oct 24 07:28:18 2015 -0400

    Merge pull request #4122 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit c66001f5e2f670f815ca9c691d18f1472261e5b4[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Oct 23 21:38:06 2015 -0700

    System.Net.NetworkInformation 4.1 contract support for N (UWP) and K
    
    This change allows the System.Net.NetworkInformation 4.1 contract to be properly supported with the "generations" for the NuGet packages. This means that the 4.1.* NuGet package will be supported on both K (DNXCORE50) and N (NETCORE50) targets.
    
    Except for a few methods that already worked for N (UWP) in the 4.0 contract, the rest are stubbed out and throw PlatformNotSupportedException on N.
    
    It is still to be decided whether the full 4.1 contract for N (UWP) will continue to use the WinRT APIs for the implementation or switch over to common sources used in K. That will depend on whether the dependent Win32 APIs will pass the WACK.
    
    [tfs-changeset: 1541417]

[33mcommit 86a14b4d655b0f4f30a5efaad98722abecd68b8a[m
Merge: 417b91e 0776e74
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Oct 23 21:26:49 2015 -0700

    Merge pull request #4117 from davidsh/post_fixes
    
    WinHttpHandler: Fix POSTs with zero length content

[33mcommit 417b91e5457ac9bc95ee1aeaaa8f6ebc86119b5e[m
Merge: 104adcd 3cdc97e
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Oct 23 15:26:45 2015 -0700

    Merge pull request #4116 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 0776e741430e83fe72bf4be544701f0eeddce042[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Oct 23 14:55:57 2015 -0700

    WinHttpHandler: Fix POSTs with zero length content
    
    While researching #3292, I discovered that POST'ing zero length content throws an exception. This was because we were calling WinHttpWriteData() and passing in a zero length for the buffer size. This returns an error back from WinHTTP.
    
    We don't need to call WinHTTP APIs to write zero length data. We simply need to return a completed task back to the caller.
    
    Added tests to verify the fix.

[33mcommit 104adcd4a0a677f4bfe5a5c2943db19289e01436[m
Merge: 60efb9c 2b6725d
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Fri Oct 23 15:16:03 2015 -0700

    Merge pull request #4114 from pgavlin/GH4003
    
    Update a socket test to accommodate differences on *nix.

[33mcommit 60efb9cabdf1101506282d6bbc9f888859bbdd7f[m
Merge: 61850ff 76cc425
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Oct 23 16:36:37 2015 -0500

    Merge pull request #4088 from eerhardt/LibSsl
    
    Add shims for the remaining libssl methods.

[33mcommit 2b6725de621c93d32ccb386d2ba5fe11598d689d[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Fri Oct 23 14:10:29 2015 -0700

    Update a socket test to accommodate differences on *nix.
    
    On *nix, the SendTo APIs return ENETUNREACH instead of EFAULT when confronted
    with a socket address with an invalid address family: these platforms check
    the family of the provided socket address before checking its size (as long as
    the socket address is large enough to store an address family).
    
    Fixes #4003.

[33mcommit 61850ff7eb807c3c11a08f60a74d6924f65e2bc9[m
Merge: 0f6d96c 9782882
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Fri Oct 23 14:03:41 2015 -0700

    Merge pull request #4092 from josguil/TestFix
    
    Fixing some of the tests throwing different expected exceptions

[33mcommit 0f6d96cd2a29e18144ff5440fb1f0f18b4b76c8c[m
Merge: 46d39e7 3f91ae1
Author: SGuy Ge <SGuyGe@users.noreply.github.com>
Date:   Fri Oct 23 20:36:59 2015 +0000

    Merge pull request #4109 from SGuyGe/TestConsolidation
    
    Consolidating serialization tests.

[33mcommit 76cc425721f619b22a067015d5d0d30a7dee33c6[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Oct 23 14:55:48 2015 -0500

    Respond to PR feedback.

[33mcommit 3f91ae109263904564edaceab039ab55ef2c0518[m
Author: SGuy Ge <sguyge@microsoft.com>
Date:   Fri Oct 23 19:29:28 2015 +0000

    Consolidating serialization tests.

[33mcommit 46d39e709bb6ba102509c77917b18cfacaf38658[m
Merge: c077cc5 0a774a2
Author: VSadov <vsadov@microsoft.com>
Date:   Fri Oct 23 12:11:44 2015 -0700

    Merge pull request #4102 from bartdesmet/Issue-3836-2
    
    Removing and conditionally including some code in System.Linq.Expressions

[33mcommit 97828821f1046950cbac0b1beeb544d93a4d1f5b[m
Author: Guillermo Rangel <josra@microsoft.com>
Date:   Fri Oct 23 12:06:30 2015 -0700

    Changing the behavior adapter
    
    This chance is done so we have an even closer behavior for the APM
    extensions regarding error management.

[33mcommit c077cc584a73fd16369920dfecf072ff3d09cf17[m
Merge: 42b2bb0 ec3ff4d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 23 15:05:59 2015 -0400

    Merge pull request #3987 from bjjones/crc32_native
    
    Support for crc32 generation using clrcompression.dll

[33mcommit 42b2bb0f22d6d0fda000cd701111c5675e626ffd[m
Merge: b9b44e7 462b3c0
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Fri Oct 23 12:01:49 2015 -0700

    Merge pull request #4107 from nguerrera/trim-dependencies
    
    Remove unnecessary dependencies from S.R.TypeExtensions.Tests

[33mcommit c400ce030b76d42dce8aeb0728cd61bf2580ea65[m
Author: Charlie Root <necmon@yahoo.com>
Date:   Fri Oct 23 18:23:26 2015 +0000

    code: Formats document.

[33mcommit 7be04f199a400b68e0bee8d7f04ed73f64a8cb60[m
Author: Charlie Root <necmon@yahoo.com>
Date:   Fri Oct 23 11:57:25 2015 +0300

    native: Uses kevent instead of kevent64.
    Some operating systems, such as FreeBSD, do not provide kevent64_t but
    instead have kevent. This change switches to use kevent for all
    platforms.

[33mcommit ec3ff4d7c76ce68793611a6346354bbb341b34b7[m
Author: bjjones <brandon1.jones@intel.com>
Date:   Mon Oct 19 14:03:12 2015 -0700

    Added native interface for crc32 included with Zlib

[33mcommit 32a6d32306947d9926820176157a9b6d93473784[m
Author: Guillermo Rangel <josra@microsoft.com>
Date:   Fri Oct 23 10:56:03 2015 -0700

    Adding Feedback from PR
    
    Since ArgumentNullException and ArgumentOutOfRangeException are both
    ArgumentExceptions, we re throw them before catching the more general
    exception.

[33mcommit 462b3c0efca4173c0905552d8297dfab7b0d07e0[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Fri Oct 23 10:44:53 2015 -0700

    Remove unnecessary dependencies from S.R.TypeExtensions.Tests
    
    These had already been removed but came back due to TFS <-> Git
    merge issues. Removing them once again.
    
    The objective is to keep the dependencies such that the main test
    project can run on .NET Native.

[33mcommit 3cdc97e1ae2cdaacc75826b33bb8c4f8b1568a1a[m
Author: Vance Morrison <vancem@microsoft.com>
Date:   Fri Oct 23 08:40:54 2015 -0700

    Remove the building of System.Diagnostics.Tracing.Telemetry.   This has been renamed to System.Diagnostics.DiagnosticSource.
    
    This DLL has already been gutted (to remove all content but a tombstone).  This removes actually building it.
    
    [tfs-changeset: 1541193]

[33mcommit b9b44e7c06388891275f4df8e05a6d78cc63b391[m
Merge: aee47f7 ebad2d3
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 23 09:07:39 2015 -0400

    Merge pull request #4095 from stephentoub/curlhandler_sync_serializetostreamasync
    
    Fix CurlHandler deadlock with synchronous CopyToAsync

[33mcommit aee47f7b8d196e8d1c0e03c89028c660ae0eda65[m
Merge: e715350 7ccbd5d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 23 08:45:02 2015 -0400

    Merge pull request #4098 from bartdesmet/Issue-3995-2
    
    Reenabling some expression tests

[33mcommit ebad2d3426af24201526263401fb010a78ee60bd[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Oct 22 23:46:08 2015 -0400

    Fix CurlHandler deadlock with synchronous CopyToAsync
    
    CurlHandler calls to HttpContext.CopyToAsync with a stream that CopyToAsync should write to asynchronously.  If, however, the call to CopyToAsync writes to it synchronously as part of the synchronous call to CopyToAsync, CurlHandler will deadlock.
    
    As a precaution, we ensure that the CopyToAsync call is asynchronous from the perspective of CurlHandler.

[33mcommit e715350896154fc554f4d995c0c1294d6535ce08[m
Merge: 0892994 775f07f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 23 08:19:58 2015 -0400

    Merge pull request #4078 from davidsh/requeststream_hang
    
    Fix hang when writing request stream in WinHttpHandler

[33mcommit 0a774a2ce67be2028a0cafc98d038205f89ab339[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Fri Oct 23 02:48:08 2015 -0700

    Addressing a small test gap for LoadStaticField in the interpreter.

[33mcommit 951e80af5b07ba3287d1f21d5e38cd09160e74d3[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Fri Oct 23 02:47:26 2015 -0700

    Fixing conditional file inclusion in System.Dynamic.Runtime.csproj.

[33mcommit 7b4414328dc10d37a7f65f23119db31109ba3d9a[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Fri Oct 23 02:47:01 2015 -0700

    Removing or disabling some unused code.

[33mcommit 7ccbd5db8cf7c5480eb1266b6ceabc08617a7e80[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Thu Oct 22 22:24:25 2015 -0700

    Reenabling tests for issues that have been fixed.

[33mcommit 5c1b9a92d955a1496809c231ee4418b94f259ee2[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Thu Oct 22 22:19:09 2015 -0700

    Fixing whitespace issues in generated tests.

[33mcommit 089299456284cbecc9f2afb43882183cfb457e6c[m
Merge: 09e3fee 4eba3c0
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Oct 22 22:18:53 2015 -0700

    Merge pull request #4096 from stephentoub/immut_coll_test
    
    Disabling a flaky Immutable collections test

[33mcommit 09e3fee83196120656e27af9f2cfec0986d92bd6[m
Merge: 7f61495 207fb12
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Oct 22 22:18:48 2015 -0700

    Merge pull request #4097 from stephentoub/disable_sslstream_test
    
    Disable sporadically failing SslStream test

[33mcommit 207fb12d26edc3b19ad888fe469a16116dfe6a26[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Oct 23 00:36:02 2015 -0400

    Disable sporadically failing SslStream test
    
    The timeout may simply need to be increased. For now, disabling. as it's failed several times.
    
    #3845

[33mcommit 7f614954c48225ce1b8d0b2ec9a148716e9b2fbe[m
Merge: 397ec33 767f8b2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 23 00:14:51 2015 -0400

    Merge pull request #2650 from martincostello/master
    
    Support ICollection with [MaxLength] and [MinLength] data annotations

[33mcommit 4eba3c0c3d58191519e7bbe26b1631e958d0b004[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Oct 23 00:09:12 2015 -0400

    Disabling a flaky Immutable collections test
    
    This has been failing sporadically for a while, almost certainly due to the same issue we've seen with other immutable collection comparison tests previously, where the "default" comparer captured into one instance may (due to a race condition) be a different instance than one captured into another.
    
    #780

[33mcommit 775f07fac48137520e66b848fc9cf29428ebf07a[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Oct 22 20:13:39 2015 -0700

    Disable test on Linux

[33mcommit 01197398dcc0271770df111fe49d371121fe76fd[m
Author: Guillermo Rangel <josra@microsoft.com>
Date:   Thu Oct 22 20:00:54 2015 -0700

    Fixing some of the tests throwing different expected exceptions
    
    A method CreateArraySegment for correctly throw
    ArgumentOutOfRangeException instead of ArgumentException is added to fix
    the Tests in ArgumentValidationTests.
    
    Fix #4083

[33mcommit 397ec33af29c26e1ba206d45d5ecdd3ca9a1e350[m
Merge: 7db7ad0 0244389
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Thu Oct 22 17:23:06 2015 -0700

    Merge pull request #4086 from pgavlin/GH4008
    
    Validate linger time.

[33mcommit 7db7ad04ab82e551a1066a5d95a35e281fc8d08f[m
Merge: 9eb435e daef0e5
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Thu Oct 22 17:18:18 2015 -0700

    Merge pull request #3980 from bartonjs/remove_more_crypto_p2p
    
    Remove missed P2P references in crypto

[33mcommit 9eb435e62a5202db1c30d97e327f99fa4b7afed1[m
Merge: aea4867 f618c22
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Thu Oct 22 17:17:51 2015 -0700

    Merge pull request #3988 from bartonjs/enable_ecdsa_validatessignature
    
    Enable X509 TestECDsaPublicKey_ValidatesSignature

[33mcommit aea4867fb7622a3065254c84b0bfda888af62d91[m
Merge: 7216a90 292079c
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Oct 22 17:16:12 2015 -0700

    Merge pull request #4087 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 7216a901d12da06f25ef203e17aa986ba1001faa[m
Merge: a3050ba 8f467b3
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Oct 22 17:05:42 2015 -0700

    Merge pull request #4073 from nguerrera/normalize-basedir
    
    Normalize paths in Assembly.Location test

[33mcommit 9ff5207e5114791836d3dfb0baeba513cf6bec74[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Oct 22 18:35:50 2015 -0500

    Add shims for the remaining libssl methods.
    
    This change completely removes all managed code direct dependencies on libssl.
    Instead, all calls are now invoked through our native shims.

[33mcommit babb7c6c65bf1e02dab667cbda80f0e24af21ed8[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Oct 22 11:55:48 2015 -0700

    Fix hang when writing request stream in WinHttpHandler
    
    WinHttpHandler was hanging due to blocking on the WinHTTP status callback thread. The blocking was coming from a task continuation resuming on the same thread and subsequently calling a blocking Stream.Write method in a custom HttpContent class being written onto the request stream.
    
    Blocking is not allowed on the WinHTTP callback thread. So any task continuations need to occur on a different thread. The fix is to create the TaskCompletionSources to use RunContinuationsAsynchronously. This allows them to unblock the WinHTTP thread. Additionally, I added some missing ConfigureAwait(false) settings to some await'd operations.
    
    Added a new test which uses a custom HttpContent class that uses a blocking Write() call when serializing onto the request stream.
    
    Fix #4077

[33mcommit a3050bacc9b716f52f086751bfb4bf0384019f53[m
Merge: 89faf2e 81d9bc4
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Oct 22 16:36:18 2015 -0700

    Merge pull request #4079 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 0244389f4fe5478ab66863c1e1b763e71bebe976[m
Author: Pat Gavlin <pagavlin@microsoft.com>
Date:   Thu Oct 22 16:12:09 2015 -0700

    Address PR feedback.

[33mcommit daef0e56760fba2d9b972fc739ca6328ea261d3a[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Oct 19 14:49:05 2015 -0700

    Remove missed P2P references in crypto
    
    The previous change to remove the Project-to-Project references from the cryptography libraries apparently stopped one directory short of completion.  The X509Certificates\tests project still had P2P.

[33mcommit f618c22dd62eecf3873a0324552f5764b4efdcef[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Oct 20 09:14:38 2015 -0700

    Enable X509 TestECDsaPublicKey_ValidatesSignature
    
    The test was effectively fixed with issue 3769, but due to the X509 tests having a nuget package dependency on the library with the bug the test couldn't be re-enabled at the same time.

[33mcommit 89faf2e11da662e7405f6f96b9e9e2a94c9a0db2[m
Merge: 71dff92 e60f070
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 22 19:05:39 2015 -0400

    Merge pull request #4084 from brianrob/enableprocesstests
    
    Re-enable process tests broken by coreclr change.

[33mcommit 2980b2381b19248bbb7940e7946ad4ad365c2f26[m
Author: Pat Gavlin <pagavlin@microsoft.com>
Date:   Thu Oct 22 15:47:12 2015 -0700

    Validate linger time.
    
    Some platforms behave strangely when confronted with linger times that
    are out-of-range. In particular, OS X silently truncates
    `linger::l_linger` to 16 bits and interprets the results as a `short`.
    This change validates the linger time before calling `setsockopt` to
    ensure reliable behavior across platforms.
    
    On OS X, the maximum linger time is actually in units of ticks, so
    validation is a bit more involved than on other platforms (where the
    max time is defined by the size of the integer used to store the
    value): on the first call to `SetLingerOption`, the number of ticks
    per second is obtained via `sysconf()` and is then used to derive
    the maximum linger time by simple division. This does mean that the
    maximum linger time on OS X may vary with the number of ticks per
    second, and so may vary between machines.

[33mcommit 292079ca842550d9ca487f30a47bc2178b6460e9[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Oct 22 15:46:33 2015 -0700

    Runtime packaging for System.Net.WebSockets.Client
    
    [tfs-changeset: 1540906]

[33mcommit 71dff92c0a4960ebe452bd72649f678b84a83dde[m
Merge: 3d6b270 c87b390
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Oct 22 15:19:05 2015 -0700

    Merge pull request #4082 from mellinoe/enable-ni-xplat-tests
    
    Enable NetworkInformation tests on Linux, OSX

[33mcommit 81d9bc423036c68af26e88e83c20a89b4e06fa86[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Oct 22 15:14:13 2015 -0700

    Take TFS Version of project.json
    
    The merge took the version of this file in "master" but the build is
    broken without the changes from TFS. Take them and rebuild the lock file.

[33mcommit 3d6b27087fecdd9144329c5f49164e5f022a6213[m
Merge: 20b6136 2cad409
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Thu Oct 22 15:05:26 2015 -0700

    Merge pull request #4041 from pgavlin/GH2542
    
    Unify the two definitions of WinHttpException.

[33mcommit e60f07086b0937dd567a15676a45ab88772cab79[m
Author: Brian Robbins <brianrob@microsoft.com>
Date:   Thu Oct 22 15:02:34 2015 -0700

    Re-enable process tests broken by coreclr change.

[33mcommit d2adfbd3f3d3936c701b645bdab7c023e541dd89[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Oct 22 14:51:00 2015 -0700

    Disable failing tests against 4083

[33mcommit c87b390dc2aee8cc15968d65b8dad2c8a2f6bc35[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Oct 22 12:57:34 2015 -0700

    Implement OperationalStatus for OSX Network Interfaces
    
    The implementation is very crude, and only tells you whether the
    interface is "Up" or not. It's possible that we can gather more
    information than this, but it's not clear to me whether that information
    will actually be useful in categorizing the interface's operational
    status according to our "OperationalStatus" enum values. I believe we
    may be able to detect if an interface is "Down", but I don't think we
    can differentiate between things like "Dormant", "NotPresent", "Testing",
    etc.

[33mcommit 274039eda68fbc0152d934c1941754db6b44b94b[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Oct 22 12:22:09 2015 -0700

    Fix two issues in NetworkInforation x-plat
    
    * When closing the netlink socket, I was not setting the static field
      storing the socket file descriptor to zero, so if you tried to
      subscribe to the event, and then unsubscribe twice in a row, you would
      hit one of my debug assertions. I've fixed this and also added a better
      message to the debug assertions so it's obvious which code path you
      are on.
    * When refactoring out the UnixIPInterfaceProperties (v4/v6), I made a
      mistake of grabbing the interface's "Index" property too early. The
      properties on UnixNetworkInterface are not fully initialized until all
      of the addresses have been enumerated, which is some time after
      the object is created. There should be a better pattern for
      initialization for these sub-objects of UnixNetworkInterface, as this
      is a common issue.

[33mcommit 43808c3d46b662705b4218141359ca8b72fd34b1[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Oct 22 14:11:31 2015 -0700

    Provide default for TestNugetRuntimeId
    
    Restoring the test runtime for a project was failing if this wasn't set
    when building for OSX.  We should fix that bug (it was a null reference
    in a target) but if providing a sensible default based on OSGroup can
    help, that's goodness as well.

[33mcommit 20b6136be45cd2504dbf623085e6a7c59a26abe5[m
Merge: 5e46d54 d1db7cf
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Oct 22 13:45:24 2015 -0700

    Merge pull request #3943 from jasonwilliams200OK/fix/native-centos-7-clang-3.4
    
    native: Disable unreachable rule for clang v3.4

[33mcommit a540308fe12cfbd40be8b4f1849bdbca5eb12c51[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Oct 22 13:43:29 2015 -0700

    Update project.lock.json files

[33mcommit 5e46d54fea43309d22020b7ab5abd901674906eb[m
Merge: ba5c7ff 2d3bfdd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 22 16:39:52 2015 -0400

    Merge pull request #4080 from davidsh/win7_fix
    
    Fix WinHttpHandler on Win7

[33mcommit 262aebcb35b4e0b09b1e08d37cdd70de3fb092e8[m
Merge: 3ce6c29 ba5c7ff
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Oct 22 13:15:56 2015 -0700

    Merge 'upstream/master' into from-tfs
    
    Conflicts:
    	src/Common/test-runtime/project.lock.json
    	src/System.Reflection.TypeExtensions/src/project.json
    	src/System.Reflection.TypeExtensions/src/project.lock.json

[33mcommit 3ce6c29f66ef4f4b0f67c0f98e21d0d7d59deb23[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Oct 22 13:11:28 2015 -0700

    Fix dnu restore in CI
    
    In CI we have a long basename for the repo root, which was causing the
    dnu restore command we generate to work around a dnu breaking change to
    be longer than the maximum length in Windows.
    
    Change our MSBuild logic for dnu restore to batch once per thing to
    restore instead of trying to do everything at once.

[33mcommit ba5c7ffe8624039c91830b751834d65e5fbfd90b[m
Merge: d32ca61 cff2822
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 22 16:05:31 2015 -0400

    Merge pull request #4069 from jasonwilliams200OK/native/cleanup
    
    native: Removes redundant check

[33mcommit 2d3bfddf2a684ddd2532b7d50407d1d1c0bfdaf6[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Oct 22 13:03:23 2015 -0700

    Address PR feedback

[33mcommit d32ca618bd30c82b65039ac99be74597fc4177cf[m
Merge: a1da79c 249d1c5
Author: Guillermo Rangel <josra@microsoft.com>
Date:   Thu Oct 22 12:49:11 2015 -0700

    Merge pull request #4081 from josguil/NugetProps
    
    Removing Nuget.Props file

[33mcommit 4b9494cce56b8762b55688310a3529f71958dda4[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Oct 22 12:27:49 2015 -0700

    Fix WinHttpHandler on Win7
    
    When WinHttpHandler was recently switched to use async WinHTTP pattern, it started setting an option which improves performance. However, the WINHTTP_OPTION_ASSURED_NON_BLOCKING_CALLBACKS option is not available on downlevel Windows versions. This was causing an exception to be thrown when sending an HTTP request.
    
    The fix is to ignore the ERROR_WINHTTP_INVALID_OPTION error code when trying to set this option.

[33mcommit 249d1c5e48e2ed205d88b6a881ed2bafba333ff2[m
Author: Guillermo Rangel <josra@microsoft.com>
Date:   Thu Oct 22 12:31:15 2015 -0700

    Removing Nuget.Props file
    
    Nuget.Props file was added by mistake in a previous commit.

[33mcommit cff28221b866ab8d1a0193101cfc1d1c4084114c[m
Author: Charlie Root <necmon@yahoo.com>
Date:   Thu Oct 22 12:10:26 2015 +0300

    native: Removes redundant check.
    `sys/socket.h` has the definition of `AP_PACKET` on Linux and `AP_LINK`
    on OSX and BSD. We were testing the capability by compiling the source
    in cmake, which was failing on FreeBSD because of the missing
    `sys/types.h`, but as it turned out this check was not required.

[33mcommit 40e0b5f75c3b4b230ab10cfb8397434e0dff897d[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Oct 22 11:13:34 2015 -0700

    Enable System.Net.NetworkInformation tests on all platforms
    
    Some tests are still disabled because they test things that are not supported on all platforms.

[33mcommit a1da79c78f0398cdcca0967083a93d2d1901f2e4[m
Merge: 9e36767 b22edbd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 22 13:54:14 2015 -0400

    Merge pull request #4075 from stephentoub/cursor_visible
    
    Fix System.Console.Tests to not leave cursor hidden

[33mcommit 9749cf4f5ff8b1af10051e621cb75ee5be80ba3b[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Thu Oct 22 10:29:29 2015 -0700

    Rollback the change as this was done by Eric
    
    [tfs-changeset: 1540797]

[33mcommit e75a2c1e1c4bc1b6074a639a7db3a153da4cff31[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Thu Oct 22 10:20:03 2015 -0700

    Fix Build Break caused by a dependency miss
    
    [tfs-changeset: 1540795]

[33mcommit 9e367678f579312a3a37413a4917e2216813cbef[m
Merge: 09a5cf6 54aa88d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 22 11:39:53 2015 -0400

    Merge pull request #4023 from bartdesmet/Issue-3995
    
    Interpreter/compiler cross-check tests

[33mcommit 09a5cf69c5563f292f04c06599270bb996dbd92b[m
Merge: 00f9ebc 7550e8b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 22 11:39:09 2015 -0400

    Merge pull request #4066 from kapilash/empty_cookie
    
    CurlHandler sending empty cookie

[33mcommit b22edbd7fae63183333a18e25e2906c691dda585[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Oct 22 11:37:27 2015 -0400

    Fix System.Console.Tests to not leave cursor hidden
    
    When I run the console tests locally, my cursor disappears and remains
    hidden after the tests have completed.

[33mcommit 8f467b3f93ba1b627b6e4731697a8509f8116c64[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Oct 22 08:11:17 2015 -0700

    Normalize paths in Assembly.Location test

[33mcommit 00f9ebcb594e20590a62e83d2b7c4e3939183cc4[m
Merge: 7b43a8d dc637b7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 22 10:59:40 2015 -0400

    Merge pull request #4026 from eerhardt/MoreLibSsl
    
    Round #2 of LibSsl shim work

[33mcommit 7b43a8d311517c483fe509d44d26d7e3175d214d[m
Merge: daeec46 b682d63
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 22 10:54:19 2015 -0400

    Merge pull request #4070 from stephentoub/disable_process_tests
    
    Disable two Process tests due to coreclr change

[33mcommit 7550e8bdd3af85f322fd309f412f919a6cd4f150[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Thu Oct 22 20:22:19 2015 +0530

    Test case for default state of HttpClientHandler.CookieContainer
    
    Adding a new test case that verifies that httpClient does not send any cookie unless set

[33mcommit b682d63e0e3b8f5aeef32a096c25748629bfcdd8[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Oct 22 10:10:32 2015 -0400

    Disable two Process tests due to coreclr change

[33mcommit eacc447a214725aa9eff00b8e8c456ed332f3084[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Thu Oct 22 06:23:37 2015 -0700

    [BUILD] ericstj: add missing dependency SqlClient > System.Net.NameResolution.
    
    [tfs-changeset: 1540770]

[33mcommit 22a4ac0704cbe25815946d6fe09c68694423dea1[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Oct 22 00:52:41 2015 -0700

    Update build tools to 1.0.25-prerelease-00109
    
    [tfs-changeset: 1540722]

[33mcommit 54aa88d42d410f240118de6940da9797f0eb7545[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Thu Oct 22 00:35:01 2015 -0700

    Disabling a bunch of tests on Unix-based platforms due to known issues.

[33mcommit 68fd009e22e94fee9c5b1ad540a670a34110c0c1[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Oct 21 23:40:50 2015 -0700

    Fix restore failures
    
    Restore was failing because build-tools still contained an out-of-date project.lock.json
    Update to get that fix.
    
    Additionally we were not restoring some projects due to a DNX change,
    workaround this temporarily (dangerously close to commandline character
    limit) until DNX adds better control for specifying which projects to restore.
    
    [tfs-changeset: 1540655]

[33mcommit d1db7cf14252d7e687a348bb2a999d0b613a1b12[m
Author: vagrant <necmon@yahoo.com>
Date:   Thu Oct 22 08:04:19 2015 +0200

    native: Disable unreachable rule for clang v3.4.
    The latest EPEL provisioned version of Clang on CentOS 7 is v3.4.2.
    On compiling native binaries, I was getting the following error:
    
    ```bash
    /home/root/corefx/src/Native/System.Native/pal_process.cpp:439:25: error: will never be executed
          [-Werror,-Wunreachable-code]
            for (size_t i = sizeof(native); i < sizeof(pal); i++)
                            ^~~~~~~~~~~~~~
    1 error generated.
    make[2]: *** [System.Native/CMakeFiles/System.Native.dir/pal_process.cpp.o] Error 1
    make[1]: *** [System.Native/CMakeFiles/System.Native.dir/all] Error 2
    make[1]: *** Waiting for unfinished jobs....
    ```
    
    The fix was to disable the rule for Clang version less thant 3.5.
    
    This was the only stopper.

[33mcommit abc20ae4735e54c076e34795827af02ec7c9ce74[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Thu Oct 22 11:27:54 2015 +0530

    CurlHandler sending empty cookie
    
    CurlHandler is sending an empty cookie unnecessarily. This commit fixes the behavior

[33mcommit daeec466d6b8fe3b87e81bffb893c3c1dfa21828[m
Merge: 6da989e 754b858
Author: Matt Ellis <matell@microsoft.com>
Date:   Wed Oct 21 19:10:30 2015 -0700

    Merge pull request #4051 from pgavlin/OSXPacketInfo
    
    Fix TryGetIPPacketInformation on OS X.

[33mcommit 9a682788cb6537c72b5b7220899f64bd00411a14[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Wed Oct 21 19:09:03 2015 -0700

    Porting the Multi subnet failover and Exception strings
    
    1. The parallel connection to Sql Server in case of Multiple Subnet feature.
    2. The exception strings for SNI have been ported over.
    
    [tfs-changeset: 1540454]

[33mcommit 3622cccc1b22fa1947a72d5126b59864e9d2fd0d[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Oct 21 18:59:09 2015 -0700

    Update lock files that were missed in previous restore.
    
    A change was made to DNX to no longer restore project.jsons
    that are in nested folders.  This caused my batch update to miss
    a number of tests and reference assembly projects.
    
    This fixes the stale lock files, but restore is still broken.
    
    [tfs-changeset: 1540448]

[33mcommit 6da989e664344a573449ab74d9bc3cb15d0b973c[m
Merge: a2289a4 6f8f85f
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Wed Oct 21 18:12:36 2015 -0700

    Merge pull request #4050 from JeremyKuhne/4040
    
    Normalize separators with path root.

[33mcommit 2d6de874008b0ba74c877c5895847421f3adf1af[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Wed Oct 21 17:55:27 2015 -0700

    Changing the API surfae of System.Net.Sockets for 4.1
    
    Adding TPL Extension methods.
    Adding APM wrappers using the TPL extensions.
    Updating tests.
    
    [tfs-changeset: 1540419]

[33mcommit a2289a4a3e5d291f82a185e8f35fc69fd17db0ad[m
Merge: 1522c86 8d60957
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 21 20:51:10 2015 -0400

    Merge pull request #4042 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 1522c8675e02ac1bd49b0bbeca7b572b90116551[m
Merge: 7e4dee4 4047ec3
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Oct 21 17:22:33 2015 -0700

    Merge pull request #4039 from mellinoe/ni-xplat-masterpr
    
    Implement System.Net.NetworkInformation on OSX, Linux

[33mcommit 38f8d7a3ca1ee819c2b8eabb1c07ee4e99683c97[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Oct 21 17:03:48 2015 -0700

    Update dnx to v1.0.0-rc1-15838, update dotnet projects to generations
    
    We need a new DNX to understand the latest packages.
    
    We also need to move all "dotnet" projects to use dotnetX.X (generations)
    now that the packages no longer have "dotnet" assets.
    
    The new version of DNX dropped support for the aspnetcore
    so I needed to update a few projects/packages that depended
    on old package versions that had this moniker.
    
    [tfs-changeset: 1540388]

[33mcommit 754b8583155701eb50957ee4a85b38ff6d99a2a5[m
Author: Pat Gavlin <pagavlin@microsoft.com>
Date:   Wed Oct 21 16:47:21 2015 -0700

    Fix TryGetIPPacketInformation on OS X.
    
    CMSG_FIRSTHDR returns a non-null but empty message on OS X if there is
    room in the control message buffer. Check for the empty message to avoid
    looping forever.
    
    This also changes an IPPacketInformation test to use IPv4 sockets (as
    opposed to dual-stack IPv6 sockets) to get a non-default IPPacketInformation
    value.

[33mcommit 668d93669e219b6e52dfe5ed171a19a75e7388ea[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Wed Oct 21 16:51:09 2015 -0700

    Bump S.R.TypeExtensions version to 4.1.0
    
    [tfs-changeset: 1540382]

[33mcommit 6f8f85fcae028961a49a280ae8177f49da36cb7a[m
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Wed Oct 21 16:44:08 2015 -0700

    Normalize separators with path root. #4040

[33mcommit 7e4dee4c988c29793b76b7dafbc67e97f089ec36[m
Merge: 6ef847b 0eb31ee
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Oct 21 16:38:12 2015 -0700

    Merge pull request #4036 from bartdesmet/Issue-4018
    
    Fixing NullReferenceException in MemberInitExpression interpretation

[33mcommit 4047ec3ae7809d92d8113243bfa5bce0e077fde2[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Oct 21 12:36:45 2015 -0700

    Run CodeFormatter.exe on managed source

[33mcommit 3c068d4ba1d973c2d98f1887bd8343960e2e4715[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Oct 21 12:36:26 2015 -0700

    Format csproj cleanly for System.Net.NetworkInformation

[33mcommit d053fbd6f13a4da72ee7d604ad1eb82301452a43[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Oct 20 19:22:48 2015 -0700

    Implement System.Net.NetworkInformation on OSX, Linux
    
    This commit adds the Linux and OSX implementations for
    System.Net.NetworkInformation, a library for querying local system
    information regarding network interfaces, network capabilities, current
    network connection status, socket connections, various network protocol
    statistics, both global and per-network-interface, current network
    addresses, and various other configuration options and statistics.
    
    On Linux the information is primarily surfaced through:
        * /proc/net/*, various other in-memory files that expose network
          configuration and machine statistics
        * Getifaddrs() for querying the addresses for all network
          interfaces
        * Netlink sockets for detecting network address change events
    On OSX:
        * sysctl: Exposes most of the network andprotocol statistics, as
          well as routing information, configuration options, etc.
        * Getifaddrs(): Same as above, for enumerating addresses.
        * Some network configuration files are also parsed from disk, if
          available, similar to above.
    
    NOTE: Due to the fact that this API is closely tied to the information
    and statistics that are	exposed through Win32 APIs (iphlpapi.dll), some
    individual pieces of information are not available on Linux and	OSX.
    Depending on the range of information exposed through those operating
    systems, we are	able to gather much of the same data, but it is often
    not identical to the set that is exposed from Windows. Members that
    cannot be retrieved instead throw a PlatformNotSupportedException.

[33mcommit 6ef847b9a5b80c1e541869a9e1924046b8263d2b[m
Merge: 52eaf3e 57b47ac
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Oct 21 15:27:57 2015 -0700

    Merge pull request #4029 from bartdesmet/Issue-4020
    
    Fixing expression interpreter behavior for initialization of hoisted locals

[33mcommit 52eaf3e45d237df219f477ae3e401155d500e711[m
Merge: f154e24 a30e8dc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 21 18:26:35 2015 -0400

    Merge pull request #3941 from jasonwilliams200OK/fix/native-pt2
    
    native: Check if in_pktinfo exists

[33mcommit 1bc138af86b0c8048e6a21e0d8ca8768f1cba9d8[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Tue Oct 20 19:19:03 2015 -0700

    Adding interpreter/compiler cross-check tests.

[33mcommit 38de4d7118eafdbbf1c8ce524ea6b702946c8110[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Tue Oct 20 12:42:33 2015 -0700

    Adding expression catalog functionality.

[33mcommit 2cad4090903ddfd1f11b78156f11bb614f391aa8[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Wed Oct 21 13:51:01 2015 -0700

    Unify the two definitions of WinHttpException.
    
    Fixes #2542.

[33mcommit f154e24d333a1e5275697894c7c3f85befbc771f[m
Merge: 45dca65 34a8a4d
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Wed Oct 21 14:45:52 2015 -0700

    Merge pull request #3896 from nguerrera/mvid-token
    
    Add mvid and metadata token API to S.R.TypeExtensions

[33mcommit 8d609579a4ef3127372400faa664796c1435d634[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Oct 21 14:42:53 2015 -0700

    Refine package validation for generations
    
    When calculating generations I wasn't considering transient
    dependencies.  I was assuming that if a dependency wasn't
    tracked by generations it wouldn't impact the generation
    of the depender.  That was incorrect since every assembly
    effectively has a generation.  This updates the algorithm to
    walk the entire dependency graph when calculating the generation
    
    I also wasn't validating support for targeting generations: PCLs
    consuming the packages.  I was only testing for specific
    platforms.   I added validation for generation monikers and
    derived the support matrix for these from the specific platforms.
    
    This uncovered a handful of bugs which I have fixed.
    
    [tfs-changeset: 1540300]

[33mcommit dc637b76523eac289bfddd854adca3117ca349ef[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Oct 21 11:54:11 2015 -0500

    Rebase and respond to PR feedback.

[33mcommit 30c98cc053bcdd0f7aef556bbe203ada1b9f23a2[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Oct 20 22:56:05 2015 -0500

    Move SSL_CIPHER struct usage into native shim.
    
    Instead of having managed code duplicate the SSL_CIPHER struct, moving all the code that uses the cipher struct into a native shim method.
    
    That also pulled a lot of algorithm constants to be defined in native instead of managed.

[33mcommit d3939b58a14ec991b5c27939f6003f263b1ae138[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Oct 20 16:32:06 2015 -0500

    Add shims for the next set of SSL interop methods.
    I also moved the SSL SafeHandle classes out of the Interop class to be
    better aligned with the rest of the SafeHandles.

[33mcommit 34a8a4dd31fb9889b0acbb73bb1a3c8fb22cfd6d[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Wed Oct 21 13:36:38 2015 -0700

    Update coreclr package dependencies

[33mcommit 5b25327746ab5ea2d245d88bce4fe70060282ba9[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Oct 15 16:12:43 2015 -0700

    Add mvid and metadata token API to S.R.TypeExtensions

[33mcommit a30e8dc12157a1c20a92d6dac38fc0ab49a72c17[m
Author: Peter <necmon@yahoo.com>
Date:   Sat Oct 17 18:02:15 2015 +0000

    native: Check if in_pktinfo exists.
    If it does not exist, `typedef in_addr in_pktinfo`.

[33mcommit 45dca6588a159886fe5d3628ca30f2888ef5aeb8[m
Merge: e7a9a7e acfa110
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 21 16:39:22 2015 -0400

    Merge pull request #4025 from bartdesmet/Issue-4021
    
    Fixing interpreter for NullReferenceException behavior in Unbox.

[33mcommit e7a9a7e150ea58fac1a8ab2a6f6e8f19199effc9[m
Merge: ca9421a c4e51ac
Author: Krzysztof Cwalina <kcwalina@microsoft.com>
Date:   Wed Oct 21 13:30:55 2015 -0700

    Merge pull request #4038 from KrzysztofCwalina/VirtualEncode
    
    Made Encode methods virtual to make it easier to write mocks

[33mcommit c4e51accbff1f3c359671f6b95334ae089e710df[m
Author: Krzysztof Cwalina <kcwalina@microsoft.com>
Date:   Wed Oct 21 13:14:53 2015 -0700

    Made Encode methods virtual to make it easier to write mocks

[33mcommit ca9421aa8fc4f4ab5a89bc53a6935a47d6c60d4c[m
Merge: 5bc2e99 a68ec1e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 21 16:09:32 2015 -0400

    Merge pull request #4034 from bartdesmet/Issue-4033
    
    Enabling the interpreter in all builds.

[33mcommit 5bc2e994d7456f1fd068878075dcea0da85fbec3[m
Merge: dbc63a7 ef1b8f0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 21 16:01:37 2015 -0400

    Merge pull request #4032 from gregg-miskelly/master
    
    Stop emitting a BOM into stdin when using System.Diagnostics.Process

[33mcommit dbc63a77dec2e992aa0987c8916c7284ccf97bca[m
Merge: ceb1623 9e50dc9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 21 15:53:14 2015 -0400

    Merge pull request #4024 from richlander/rich-cleanup
    
    Update license attribution

[33mcommit ceb16234137acf8956effaa2169b3257f17397dd[m
Merge: 03b9e23 ca4fca0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 21 15:35:05 2015 -0400

    Merge pull request #4001 from davidsh/async_crash
    
    Fix assert and leak of WinHttpRequestState object

[33mcommit 03b9e2388567f83a6cd38418aa595b872fdaa510[m
Merge: e769efe 2651c35
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 21 15:32:46 2015 -0400

    Merge pull request #3939 from pallavit/ConsoleReadKey
    
    Enable System.Console.ReadKey

[33mcommit e769efec1d9d17d80de4ecc595e9ad51d122f495[m
Merge: 4bc4fa5 61bcd09
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 21 15:20:13 2015 -0400

    Merge pull request #4035 from eerhardt/CleanupLibSsl
    
    Clean up current libssl shim work.

[33mcommit 0eb31ee323b3c4a124e1dd6ef7377df4d65657c4[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Wed Oct 21 11:40:27 2015 -0700

    Fixing NullReferenceException in MemberInitExpression interpretation logic.

[33mcommit 61bcd097aade191538cabe4cbc13b6c8bc0c3ea3[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Oct 21 13:25:16 2015 -0500

    Clean up current libssl shim work.
    
    There are a number of clean up tasks that came out of the first 2 rounds of libssl shim work.
    
    1. Add some Debug.Asserts when reading/writing to buffers.
    2. Split the SSL extern methods into a separate class from the Interop.Crypto class. This allows the minimum amount of intialization to occur as needed. It also better keeps libssl separate from libcrypto shims.
    3. Use a configure.cmake and #cmakedefine01 feature in our CMake file to create defines. This is consistent with CoreCLR and the other of CoreFX shims.

[33mcommit a68ec1e38132216b3d4ce9ecc4c9ae05824cec1f[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Wed Oct 21 10:48:34 2015 -0700

    Enabling the interpreter in all builds.

[33mcommit 4bc4fa50a5d7eeb987ee138af232d5f38401a9bc[m
Merge: bdc6c8f 4afa700
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Wed Oct 21 10:35:18 2015 -0700

    Merge pull request #4010 from pgavlin/GH3441
    
    Address PR feedback for System.Net.Sockets.

[33mcommit ef1b8f03c5d84deccee21e99e683988ddb5071e7[m
Author: Gregg Miskelly <greggm@microsoft.com>
Date:   Wed Oct 21 10:10:16 2015 -0700

    Stop emitting a BOM into stdin when using System.Diagnostics.Process
    
    When using standard input redirection on Unix with System.Diagnostics.Process, the code would emit a BOM. This screws up many unix tools which don't understand the BOM.

[33mcommit ca4fca0513c72af811e2541f530526e8c02c5f75[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Oct 20 14:24:01 2015 -0700

    Fix assert and leak of WinHttpRequestState object when disposing response stream
    
    Discovered during testing with DEBUG version of CoreCLR running internal ToF tests. The design of the WinHttpRequestState is such that it stays alive due to a GCHandle.Alloc(this) in its constructor. This keeps the object alive during any of the native WinHTTP callbacks. However, the object was being prematurely disposed during the Dispose() of the WinHttpResponseStream. Instead, it should have been explicitly disposed during the final HANDLE_CLOSING callback from WinHTTP when the request handle was disposed. The early disposing of the WinHttpRequestState object was doing a GCHandle.Free() of the state object. This later caused an Assert() in the DEBUG version of the CoreCLR when doing GCHandle.FromIntPtr() indicating that the handle was already deallocated.

[33mcommit 57b47ace6bde167c19a2c39c012f10e86cc3dd40[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Wed Oct 21 02:48:27 2015 -0700

    Removing dead code.

[33mcommit efe36702a6661da3d401683c4e96b6730f8be159[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Wed Oct 21 02:47:06 2015 -0700

    Fixing initialization logic for hoisted variables in interpreter.

[33mcommit bdc6c8ff8e32890d5f6a9e95f92e6b4427fdc6d7[m
Merge: 45f7eff 42affb1
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Oct 21 00:42:15 2015 -0500

    Merge pull request #3979 from eerhardt/ShimLibSsl
    
    1st shims for the LibSsl library.

[33mcommit acfa110f6f3f8b96c10c970aa9bd8bfd7fa035d0[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Tue Oct 20 22:22:42 2015 -0700

    Fixing interpreter for NullReferenceException behavior in Unbox.

[33mcommit 9e50dc930a5fbfc54bd0aefc297fb5344fad863b[m
Author: Richard Lander <rlander@microsoft.com>
Date:   Mon Oct 19 18:10:46 2015 -0700

    Remove NR reference
    After speaking to the authors the attribution comment is not required for this instance. However, Numerical Recipes in C is an awesome book written by some very smart and classy folks. It's a great book.

[33mcommit 8993a5c59200b81c92f432377efcca87646c5055[m
Author: Richard Lander <rlander@microsoft.com>
Date:   Mon Oct 19 22:41:06 2015 -0700

    Add attribution for Unicode data

[33mcommit ff7471827b26d81c6649b362327cc9192883debf[m
Author: Richard Lander <rlander@microsoft.com>
Date:   Mon Oct 19 22:39:24 2015 -0700

    Add attribution for CRC32 algorithm

[33mcommit 45f7efff813ae01a29705ab1ff40c89b816d53b8[m
Merge: c5553f7 3651e62
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 20 23:12:55 2015 -0400

    Merge pull request #3991 from bartonjs/unix_sslstream_ecdsa
    
    Add support for ECDSA certificates on Unix SslStream.

[33mcommit c5553f73d6d8ead50862b31ebd64225aaeb80883[m
Merge: 34b8658 7acf2d7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 20 23:09:23 2015 -0400

    Merge pull request #3996 from Maxwe11/xdoc-misc-tests-to-xunit
    
    Convert System.Xml.XDocument.Misc.Tests to use xunit (Part 1)

[33mcommit 34b8658e10411b81898b50f9b77741433fdbdfc2[m
Merge: ba28465 c0fbe3c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 20 22:50:26 2015 -0400

    Merge pull request #3985 from stephentoub/asyncstream_syncwrite
    
    Implement HttpContentAsyncStream.Write in CurlHandler

[33mcommit ba28465323a0a585c5e46dc516beac0f4c8f3f45[m
Merge: 3db2951 193c911
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 20 21:51:08 2015 -0400

    Merge pull request #4015 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 3db29510a62afaa50dca1b35411801d163b92bed[m
Merge: 5fcfafd e945fa2
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Oct 20 18:03:31 2015 -0700

    Merge pull request #4011 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 193c911c0f3b2e152851c4ea68723ec38979fb53[m
Author: Khoa Dang <khdang@microsoft.com>
Date:   Tue Oct 20 17:57:52 2015 -0700

    Add ISerializationSurrogateProvider interface to S.R.S.Primitives contract. Set Desktop/Phone/TestNet contract version to not support 4.1.0.0 yet
    
    [tfs-changeset: 1539946]

[33mcommit 2651c35f47b3ce469418ff0d4d3836659330b99e[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Mon Oct 12 18:18:49 2015 -0700

    Enable System.Console.ReadKey

[33mcommit 42affb18cbaeaa07bf2deaed4258910364f27d5a[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Oct 20 19:07:03 2015 -0500

    Ensure SSL is initialized.
    
    Now that libssl is getting shimmed into System.Security.Cryptography.Native, we need to ensure libssl is initialized properly when libssl shims are getting used.

[33mcommit e945fa2b4e1d54ee68c92e8d027e99fc4b894448[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Oct 20 17:03:29 2015 -0700

    BUILD: Ensure that an invalid lock file will fail the build
    
    DNX has an issue https://github.com/aspnet/dnx/issues/2771
    where an invalid lock files will cause the entire repro to be updated
    to the latest packages.  I've fixed the invalid lock files, this adds
    an error to block it from happening again.
    
    [tfs-changeset: 1539937]

[33mcommit 5fcfafd1670155cb9418b9c4af07086714fd339a[m
Merge: ba895f1 b1c56d3
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Oct 20 16:44:45 2015 -0700

    Merge pull request #3999 from nguerrera/assembly-entrypoint
    
    Expose Assembly.EntryPoint via public contract

[33mcommit ba895f11b42501e696d2e9ab666c1b84db2d3c1f[m
Merge: 12d9a84 7762d9a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 20 19:44:34 2015 -0400

    Merge pull request #4000 from stephentoub/more_indexof_tests
    
    Add more string.IndexOf/LastIndexOf tests

[33mcommit 4afa70011b975a557c3e5b57045185f94bc2587a[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Oct 20 16:20:44 2015 -0700

    Address PR feedback for System.Net.Sockets.
    
    I've also replaced all of the dummy issues with the actual issue numbers.
    
    Fixes #3441.

[33mcommit 12d9a842dc1a9ce8181d561de01c31a0bbea72db[m
Merge: ad54833 02dfd89
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Oct 20 15:38:19 2015 -0700

    Merge pull request #3997 from pgavlin/GH3213
    
    Append unknown scope IDs if necessary.

[33mcommit b1c56d3723e12c9c8ff0fd557631af3028036706[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Oct 20 15:07:28 2015 -0700

    Expose Assembly.EntryPoint via public contract

[33mcommit 7762d9a899999200ff834d9081970de0eb54f61e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Oct 20 18:17:47 2015 -0400

    Add more string.IndexOf/LastIndexOf tests
    
    As part of redoing our IndexOfOrdinal and LastIndexOfOrdinal implementations in coreclr, I found that we had little Ordinal/OrdinalIgnoreCase test coverage in corefx, in particular for LastIndexOf.
    
    I revised the existing tests, which had a lot of duplication, and added some more.

[33mcommit ad5483393e9bb5b821d88798588a266f26343217[m
Merge: 5a41b18 cf92d01
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Oct 20 14:09:28 2015 -0700

    Merge pull request #3998 from pgavlin/GH2318
    
    Fix a typo in pal_networking.cpp.

[33mcommit cf92d01126ad32393ea638ccf6b7504d0ebb414d[m
Author: Pat Gavlin <pagavlin@microsoft.com>
Date:   Tue Oct 20 13:29:06 2015 -0700

    Fix a typo in pal_networking.cpp.
    
    This change also re-enables a disabled NameResolution PAL test.
    
    Fixes #2318.

[33mcommit 02dfd89d7d221bc14cc9ab685163ecb1c97a4917[m
Author: Pat Gavlin <pagavlin@microsoft.com>
Date:   Tue Oct 20 13:08:18 2015 -0700

    Append unknown scope IDs if necessary.
    
    Certain platforms (e.g. OS X) will not append unknown scope IDs to
    IPv6 addresses when converting them from `sockaddr_in6` values to
    strings. Append the scope manually in this case.
    
    Fixes #3213.

[33mcommit 5a41b1846ac80f04fa441874acb119909f80f622[m
Merge: 89bb636 b0debea
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 20 15:59:53 2015 -0400

    Merge pull request #3994 from pgavlin/GH2499
    
    Unify the definitions of SHZeroOrMinusOneIsInvalid.

[33mcommit c0fbe3c8e4d50bbf57acd330de8eac136d59c013[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Oct 20 15:50:44 2015 -0400

    Make HttpContentAsyncStream readable only internally
    
    An instance of HttpContentAsyncStream is passed to HttpContent.CopyToAsync.  Currently HttpContentAsyncStream is both readable and writable, but reading is only meant for internal usage by CurlHandler's libcurl callbacks.  This change codifies that, such that CanRead now returns false and the public Read* methods throw NotSupportedException.  Internal reading is done via ReadAsyncInternal.

[33mcommit 7acf2d76f6144f0b69e95aee92dfa8928b19df41[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Sun Oct 18 21:30:59 2015 +0300

    Convert System.Xml.XDocument.Misc.Tests to use xunit

[33mcommit b1bc8d48484f4104d0ec2c440544620b920b605f[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Oct 20 11:21:53 2015 -0400

    Implement HttpContentAsyncStream.Write
    
    WCF ends up trying to use Write as part of HttpContent.CopyToAsync implementations.  While that should be addressed separately to use WriteAsync, it's possible others are also using Write instead of WriteAsync, and today we throw NotSupportedException from Write.  So as to let this at least work, I'm implementing Write to delegate to WriteAsync.
    
    I also noticed we were missing a FlushAsync implementation, so I've added one.

[33mcommit 4fc85158a399ffb78bfc51907d5cd7a6a2fc5b05[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Oct 20 14:10:16 2015 -0500

    Fixing build break on OSX by adding feature checks for the unsupported TLS methods on OSX.
    Adding a decent exception message when SSL methods are not available.
    
    Also responded to PR feedback by using an unsafe code block instead of the whole method being marked as unsafe.

[33mcommit 89bb636ebf8874fdba1bde507aeb5318076df4cd[m
Merge: 5c67163 9eafe66
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Tue Oct 20 12:02:57 2015 -0700

    Merge pull request #3917 from natemcmaster/getfieldvalue
    
    Add runtime directive for DbDataReader.GetFieldValue<T>

[33mcommit b0debea41b54c6f27eb00b72d4b41d0f8fc501f8[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Oct 20 11:38:17 2015 -0700

    Unify the definitions of SHZeroOrMinusOneIsInvalid.
    
    Fixes #2499.

[33mcommit 5c671639db54130474ad20bc47daccc6c9cc7190[m
Merge: ad56aed d796dca
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Oct 20 11:12:53 2015 -0700

    Merge pull request #3989 from pgavlin/GH3948
    
    Fix an AV in *nix sockets.

[33mcommit 3651e62baf07ee79557d4a62333357737e25346a[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Oct 20 10:53:23 2015 -0700

    Add support for ECDSA certificates on Unix SslStream.
    
    Now the code tries RSA, falls back to ECDSA, then throws (vs asserting).
    
    DSA, Diffie-Hellman, ECDH, etc, are the things that will throw, because we have no support for them in CoreFX (as of this time).

[33mcommit d796dca11968ea99b42ebde1e98dd025dce4a779[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Oct 20 10:04:38 2015 -0700

    Address PR feedback.

[33mcommit c0c1e30835be2096a1a0c96e9457f30192533904[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Oct 20 09:33:49 2015 -0700

    Fix an AV in *nix sockets.
    
    If the inner handle of a SafeCloseSocket is null, return an already-closed
    AsyncContext for SafeCloseSocket.AsyncContext.
    
    Fixes #3948.

[33mcommit ad56aed9670a1e30cbad93289b7d9f8ee41ff280[m
Merge: 035155d 22df77e
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Oct 20 08:51:35 2015 -0700

    Merge pull request #3984 from pgavlin/PRFeedback
    
    Address PR feedback for #3978.

[33mcommit 035155df6ff041bc9d2bb5288d7d159433bc89ff[m
Merge: 7a35640 3c3c6e9
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Oct 20 10:48:42 2015 -0500

    Merge pull request #3981 from eerhardt/CleanUpLibCrypto
    
    Clean up the remaining shim work for libcrypto.

[33mcommit 22df77eb59f01d6e66ebc30bed960e85ba78d3c6[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Oct 20 07:54:22 2015 -0700

    Address PR feedback for #3978.
    
    - Rename some macros
    - Move defines into configure.cmake cna pal_config.h.in

[33mcommit 3c3c6e98a388b1e0fa6377ccc031b41e768a319b[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Oct 20 08:58:51 2015 -0500

    Respond to PR feedback.
    
    Include Interop.Libraries.cs in the OpenSsl.Tests.csproj.
    Remove the Interop.libcrypto partial class in Interop.Initialization.

[33mcommit 7a35640c05525bef92303d694168e2f70a8c8cac[m
Merge: 47d8b28 e952e7e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 20 09:28:35 2015 -0400

    Merge pull request #3976 from stephentoub/string_tests
    
    Add more string tests for IndexOf / LastIndexOf / ToLower / ToUpper

[33mcommit 47d8b285eb53442f1724c04528e9a2a2867f9b4a[m
Merge: e2c888f 19f4f0a
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Oct 19 21:07:22 2015 -0700

    Merge pull request #3978 from pgavlin/NameResolutionShims
    
    Shim the last platform APIs used by S.N.NameResolution.

[33mcommit 19f4f0a896913b7dd4098bd148bc83fb83c06ef9[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Oct 19 20:20:41 2015 -0700

    Address PR feedback.

[33mcommit 55befb0c5a5633530fc85b9675a51e53d53ab116[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Oct 19 14:06:02 2015 -0700

    Shim the last platform APIs used by S.N.NameResolution.
    
    gethostbyaddr and gethostbyname had not yet been shimmed.

[33mcommit 11c339a53f7eae07324d2555b000613499362f02[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Oct 19 18:51:21 2015 -0500

    Clean up the remaining shim work for libcrypto.
    
    - Removed LibCrypto from the Interop.Libraries list
    - Converted "unsigned char" usages to "uint8_t"
    - Converted any remaining "int" usages to "int32_t"
    - Moved two OpenSSL initialization calls ino EnsureOpenSslInitialized PAL method.
    - Moved a few OpenSSL.Tests to use the PAL shims instead of directly calling libcrypto.

[33mcommit e2c888f2a413940e9946ed2125f835e852d266e5[m
Merge: c8352c2 a14b227
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Mon Oct 19 16:49:39 2015 -0700

    Merge pull request #3977 from bartonjs/update_locks_23419
    
    Update all project.lock.json files

[33mcommit c8352c26c957b80ce9e59834304c2eb275379387[m
Merge: 1401e0f 184a657
Author: VSadov <vsadov@microsoft.com>
Date:   Mon Oct 19 16:20:19 2015 -0700

    Merge pull request #3714 from bartdesmet/Issue-3244
    
    Initial work to expose lambda interpreter alongside lambda compiler

[33mcommit a14b22705df253508bd5f2dab0407bd2c7e4d639[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Oct 19 14:28:17 2015 -0700

    Update all project.lock.json files
    
    Built Windows_NT, Linux, OSX with /p:LockDependencies=true.
    
    CoreFX beta-* => 23419
    xunit.netcore.extensions => 00107

[33mcommit 1401e0f7b6e08dc5723b4d80d2c22f1a136987c5[m
Merge: 3a1bfd7 62d8ce2
Author: Krzysztof Wicher <kwicher@microsoft.com>
Date:   Mon Oct 19 15:49:19 2015 -0700

    Merge pull request #3929 from krwq/fix_1899
    
    Add test for issue #1899

[33mcommit 3a1bfd7b50b20c67c7fc5e2a8fa503ab8cff9f5b[m
Merge: 8f3c8fb 84df559
Author: Krzysztof Wicher <kwicher@microsoft.com>
Date:   Mon Oct 19 15:45:44 2015 -0700

    Merge pull request #3931 from krwq/fix_641
    
    Clean up XDocument's Events tests

[33mcommit cc364e67c841c4c7d49eeac87ae6f0feef412748[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Oct 19 17:44:52 2015 -0500

    1st shims for the LibSsl library.
    
    I added shims the first 8 libssl functions and did a little clean up.
    - Put all Interop files under "Common\Interop" in System.Net.Security.
    - Removed some unused fields from StreamSizes.
    - Changed some unnecessary IntPtr usages to byte[] or byte*, where appropriate.

[33mcommit 62d8ce24f2ae5f77d76e9917a7ab734ca3d4eec1[m
Author: Krzysztof Wicher <kwicher@microsoft.com>
Date:   Mon Oct 19 14:39:10 2015 -0700

    Add test for issue #1899

[33mcommit 8f3c8fb08309d2b79d501c2829f39a59cc24e00e[m
Merge: d67494a 15e4fd6
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Oct 19 16:37:26 2015 -0500

    Merge pull request #3928 from eerhardt/ShimRsa
    
    Add shims for Interop.Rsa methods.

[33mcommit d67494ab679ee99de56e7e95555793409822f2d8[m
Merge: 58c016b 387ba5a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 19 17:06:37 2015 -0400

    Merge pull request #3971 from davidsh/networkinformation_update
    
    Add System.Net.NetworkInformation to README.md

[33mcommit 58c016be3e27384e4a565bc34d7a57589063a073[m
Merge: 1b72e7d 0685dc9
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Oct 19 14:03:58 2015 -0700

    Merge pull request #3962 from pgavlin/SocketsShims
    
    Finish the shims for S.N.Sockets.

[33mcommit 84df559a03ac2a90c170122c622e38b3c97ba99e[m
Author: Krzysztof Wicher <kwicher@microsoft.com>
Date:   Mon Oct 19 13:52:07 2015 -0700

    Replace nested classes with namespace in XDocument tests

[33mcommit 92021f5b6b2427ed5c11ee3ff3155b6bc30f4ab3[m
Author: Krzysztof Wicher <kwicher@microsoft.com>
Date:   Mon Oct 19 13:42:25 2015 -0700

    Switch parameters in Assert.Equal in XDocument Events tests

[33mcommit 7c2ebcde09c7692a54041e461ec2eb2bd86a6751[m
Author: Krzysztof Wicher <kwicher@microsoft.com>
Date:   Sat Oct 17 01:58:25 2015 -0700

    reduce dependencies in XDocument Events tests

[33mcommit 6eb7d9b9286c602d6b52df1d997d84abe323a429[m
Author: Krzysztof Wicher <kwicher@microsoft.com>
Date:   Fri Oct 16 21:28:59 2015 -0700

    XDocument tests clean up

[33mcommit e952e7e3be54fc17c736ba6d5a3f479b87019b84[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Oct 19 16:46:40 2015 -0400

    Add string tests for IndexOf / LastIndexOf
    
    Ported and expanded on some tests to cover IndexOf / LastIndexOf with Turkish 'i', Hungarian double compression, diacritics, and Cyrillic E.
    
    A few of the test cases are currently commented out due to #3972 and #3973.
    
    Also added a ToLower/ToUpper casing test for Turkish 'i', for invariant, tr-TR, and en-US cultures.
    
    And removed the [ActiveIssue] from a few tests that are now passing.

[33mcommit 0d5f650a177cb4a394a439466a1ee2aa33d64542[m
Author: Krzysztof Wicher <kwicher@microsoft.com>
Date:   Fri Oct 16 21:09:16 2015 -0700

    remove dependency on common project for xdocument.axes

[33mcommit 387ba5a75edd381265eefe4b91fd690bf22193ba[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Oct 19 12:25:06 2015 -0700

    Add System.Net.NetworkInformation to README.md

[33mcommit 1b72e7d36b03d2c3af323c37c10fc51db0517d05[m
Merge: 5f1ebe8 6db9cd6
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Mon Oct 19 11:45:12 2015 -0700

    Merge pull request #3965 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 5f1ebe853c658fbc23a8ab81815926d09ec33ce2[m
Merge: 3a55c0f abce09c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 19 14:25:48 2015 -0400

    Merge pull request #3964 from Maxwe11/xmldiff-coverage
    
    Exclude XmlDiff project from code coverage

[33mcommit 15e4fd62bdcdd3c9f72ed7195de678f3e759cc47[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Oct 19 12:44:53 2015 -0500

    Changing the signature of GetRsaParameters to return an error code.
    Also, ensuring the 'out' parameters are initialized in the shim.

[33mcommit 3a55c0f2e2c80590c5d15f3be644e8e8947b9ec7[m
Merge: f331c01 294036e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 19 13:46:03 2015 -0400

    Merge pull request #3884 from AtsushiKan/isense
    
    Fix VS intellisense experience on corefx projects.

[33mcommit 6db9cd624e9f30416ac4bb41884068199276dedb[m
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Mon Oct 19 10:40:20 2015 -0700

    Bump the locked reference of the new S.S.C.OpenSsl\ref project to 23419
    
    [tfs-changeset: 1539369]

[33mcommit abce09ce51ccd821a0e78fa7e4435ef779cd06a0[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Mon Oct 19 20:31:10 2015 +0300

    Exclude XmlDiff project from code coverage

[33mcommit f331c0158ce364dcb60b5f9a1e0ac558fb9337a7[m
Merge: 25aee55 559f9b5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 19 12:58:19 2015 -0400

    Merge pull request #3953 from bartonjs/unix_aes_reusabletest
    
    Fix logic error in TestDecryptorReusability test

[33mcommit 0685dc98286cf65da08e2593044d51f1c05b9137[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Oct 19 09:56:53 2015 -0700

    Finish the shims for S.N.Sockets.
    
    - Unify the remaining platform-specific managed bits: Information on platform
      support for multiple connection attempts and dual-stack IPv4 packet info is
      now provided by a pair of shim functions rather than compile-time constants.
    
    - Change Interop.Sys.Socket() to be more restrictive in the address families,
      socket types, and protocol families it allows. The code now only recognizes
      values that we have mappings for and returns appropraite errors otherwise.
    
    - Delete some leftover files.

[33mcommit ab344dc4c091fc11a075bcffd65b35663db70083[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Oct 19 11:48:36 2015 -0500

    Add a PAL enum for Rsa encryption padding.

[33mcommit dddcf7db43e7f8149d4babe86211c275658661d7[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Oct 16 22:26:25 2015 -0500

    Respond to PR feedback.
    
    Added asserts and renamed a poorly named parameter.

[33mcommit 57a17b06c21935754d5611a4fcddb0bbe83ca5fe[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Oct 16 21:08:29 2015 -0500

    Remove Interop.RSA's dependency on RSA_ST struct by adding native methods to do the work.

[33mcommit 34b1634727b023dfd304f4389af07d52f9f26d5d[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Oct 16 18:21:28 2015 -0500

    Shim Interop.Rsa methods except for ones using RSA_ST struct.

[33mcommit 0868049bd8ea8fe811d57a5611aaf8eedf568318[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Sat Oct 17 11:32:44 2015 +0100

    Add tests for Goto expressions.

[33mcommit 559f9b588f2ac1d5069d785a73ea5c8933e2d353[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Sun Oct 18 22:20:11 2015 -0700

    Add explicit VerifyInPlaceDecryption test
    
    TransformStateSeparation was tagged as failing for the wrong reason, when its suggested issue was resolved it continued to fail.  Now that test functions, and there's a dedicated test tracking why it failed.

[33mcommit fd2564c9d98e85054c98134e8ef36405920765c9[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Sun Oct 18 22:18:47 2015 -0700

    Fix logic error in TestDecryptorReusability test.
    
    The test assumed that the there was no data holdover, and that TransformFinalBlock was just a reset operation.  But there was holdover (on Unix), and it did emit semantic information.

[33mcommit 25aee556519300cd5c6feb5dec448f223de70c3f[m
Merge: 3bedc54 80b2ee8
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Sun Oct 18 22:00:14 2015 -0700

    Merge pull request #3940 from pgavlin/SocketsShims
    
    Shim the socket async backend.

[33mcommit 0931c347eb836c9da94d0d5ff9ad7a14403b9738[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Sun Oct 18 21:12:23 2015 -0700

    Switch from using "dotnet" to using "dotnet<generation>"
    
    All projects that previously used dotnet have been updated to specify the appropriate generation of the surface area they depend on or in the case of desktop inbox contracts, the generation that includes the set of platforms they can support.
    
    Now all packages contain all generations of API that they have ever shipped.
    
    In doing this I needed to change how we determine package version.  Before we ensured all assemblies would have the same version and used that.  Now we choose the max.
    
    Additionally I needed to change how we chose which asset to use for netcore50 when the dotnet asset was obscured by a placeholder for a previous netcore release (eg System.Runtime will have placeholders for Win8 since it was inbox there).  To do this I wrote a task that uses nuget to evaluate the package assets with and without the placeholders.  In this way it chooses the "best" dotnet implementation and reference assembly to use for netcore50.
    
    This new model made my old MSBuild-based validation impossible to carry forward, so I wrote better validation in a task that actually uses Nuget's asset resolution algorithm.  This uncovered many existing issues in packages that I have cleaned up.  The validation algorithm could use some polish but its working now.  Perf is not great, package build went from 15s to ~2 minutes.  I'll work on this some more by making it incremental (input: nuspec, output: marker created on success).  Profiling shows that most of the time is spent in calling the nuget APIs.  I'll see if I can reduce some of this with caching for things that don't change (eg: RID graph).  Ultimately I think its a reasonable tradeoff for the types of bugs I can find this way.
    
    [tfs-changeset: 1539216]

[33mcommit 3bedc54e35ecc6d334086caced4e49d265c769db[m
Merge: 99c49d9 f084de8
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Oct 18 22:40:27 2015 -0400

    Merge pull request #3946 from bartonjs/bad_null_intptr_checks
    
    Fix some IntPtr == null vs IntPtr.Zero checks

[33mcommit f084de8b45480f41bf54b280df5dba0ce5a3a123[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Sun Oct 18 12:22:44 2015 -0700

    Remove incorrect/redundant ptr != null checks
    
    The code was comparing an IntPtr (which is a struct) to null, which is never a true comparison.
    
    But since Marshal.PtrToStringAnsi handles an IntPtr.Zero input to return null, the if as intended is also unnecessary.

[33mcommit 99c49d96437c4a5e884476782fce1f74d6347fca[m
Merge: 74b3373 9234196
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Oct 18 20:35:05 2015 -0400

    Merge pull request #3949 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 923419680e598a2279b0807487eb351a62d0b958[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sun Oct 18 16:34:28 2015 -0700

    Fix broken build of System.Net.WebSockets.Client.NETNative.csproj due to missing types.
    
    Comment out code for now so that build will work.
    
    [tfs-changeset: 1539097]

[33mcommit 74b33731af46c7c2bde0dcc9b486ecf38a94bc7c[m
Merge: ef3c9c7 01eedcf
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Oct 18 17:36:16 2015 -0400

    Merge pull request #3945 from bartonjs/unix_pfx_singlecert
    
    Make Unix X509Certificate2(PFX) prefer a cert with a private key.

[33mcommit ef3c9c711e2104581412e6bf231967f342891908[m
Merge: 32648e1 5a823ad
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Oct 18 17:35:12 2015 -0400

    Merge pull request #3947 from bartonjs/unix_lm_stores_notsupported
    
    Throw PNSE instead of NIE on machine X509Store not-supported functionality

[33mcommit 32648e1ff9ff47ddd025b223c0846d6d91321660[m
Merge: 8114261 66167b1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Oct 18 17:33:59 2015 -0400

    Merge pull request #3944 from bartonjs/fix_encode_typo
    
    Correct the spelling of OpenSslEncode

[33mcommit 811426184e2e8b58c89b917814b2b0e76d00469c[m
Merge: 5e4ea71 ccfc8a1
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Sun Oct 18 14:21:55 2015 -0700

    Merge pull request #3922 from pgavlin/WebSocketClientPNSE
    
    Add a temporary PAL for ClientWebSocket.

[33mcommit 5a823ad57c4f545418aa0cade7e77e970f026e6a[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Sun Oct 18 12:45:15 2015 -0700

    Throw PNSE instead of NIE on machine X509Store not-supported functionality.

[33mcommit 01eedcfb3ebd3213eee4be438b5f9f25ac6372db[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Fri Oct 16 13:59:35 2015 -0700

    Make Unix X509Certificate2(PFX) prefer a cert with a private key.

[33mcommit 66167b11cb484d13e21e16d93a0900c1650677da[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Sun Oct 18 12:06:27 2015 -0700

    Correct the spelling of OpenSslEncode

[33mcommit ccfc8a10fe6ef77b8bca8991d26e3ccb03696409[m
Author: Pat Gavlin <pagavlin@microsoft.com>
Date:   Sun Oct 18 10:37:28 2015 -0700

    Address PR feedback.

[33mcommit 5e4ea713c3d287580c0c9a7728664924bab2c74e[m
Merge: 81c8ce6 7fea4e5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Oct 18 12:49:11 2015 -0400

    Merge pull request #3937 from bartonjs/unix_findby_skid_fallback
    
    Compute the fallback value for FindBySubjectKeyIdentifier when needed.

[33mcommit 81c8ce6cecbe9ff25d0f70706158d09fb726083b[m
Merge: e5f637f 70d2e69
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Oct 18 12:44:34 2015 -0400

    Merge pull request #3854 from Maxwe11/xdoc-Properties-tests-to-xunit
    
    Convert System.Xml.XDocument.Properties.Tests to use Xunit (Part 1)

[33mcommit e5f637f76f46ed1088f36a390a3e2c3aa678da92[m
Merge: 30e06d0 960bc52
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Oct 18 12:43:26 2015 -0400

    Merge pull request #3938 from bartonjs/unix_decodeskid_perf
    
    Use DerSequenceReader instead of marshalling for the SubjectKeyIdentifier.

[33mcommit 30e06d0592c12e241f6d3825e2df31ed420d88fe[m
Merge: 5fbab81 430e5fc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Oct 18 12:42:59 2015 -0400

    Merge pull request #3912 from bartonjs/unix_x509_serialpad
    
    Add a padding byte for "negative" cert serial numbers on Unix

[33mcommit 80b2ee85bc54727a6063db262133482c661643f1[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Fri Oct 16 14:38:21 2015 -0700

    Shim the socket async backend.
    
    The async backend is exposed via a collection of methods for managing
    socket events. The actual mechanism in use varies by platform: on
    Linux, the code uses epoll; on OS X, it uses kqueues.

[33mcommit dcfea18a1143a624ce373509a52c478ec66dcd8a[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Fri Oct 16 15:54:42 2015 -0700

    Add a temporary PAL for ClientWebSocket.
    
    On Windows, the PAL delegates to WinHttpWebSocket; on *nix, all methods
    throw PlatformNotSupportedException.

[33mcommit 5fbab81ad714672c087a2458c151f58b32f83b47[m
Merge: 1cc9570 8d83c7f
Author: Ian Hays <ianha@microsoft.com>
Date:   Sat Oct 17 16:11:04 2015 -0700

    Merge pull request #3923 from ianhays/perf
    
    Modified Collections perf tests to use ints

[33mcommit 1cc9570e3a7f6aa3ecda6f5183652fd69eaa0359[m
Merge: aa871b5 9b6cf87
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Oct 17 18:29:14 2015 -0400

    Merge pull request #3932 from jasonwilliams200OK/fix-native
    
    native: Adds check for header

[33mcommit 960bc52863a60aba4664f4a5907d95f766726914[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Sat Oct 17 11:50:57 2015 -0700

    Use DerSequenceReader instead of marshalling for the SKID.
    
    Across several sets of 1,000,000 calls this change reduces the total time by about 26%, mostly because it doesn't send data to native to read it right back. (DER Octet String decoding is just "skip the tag and length")

[33mcommit 7fea4e548e1903f55082042969e9b5d48a483f75[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Sat Oct 17 09:56:10 2015 -0700

    Compute the fallback value for FindBySubjectKeyIdentifier when needed.
    
    The Windows CryptoAPI method that FindBySubjectKeyIdentifier defers to has documented fallback logic that, happily, a test was testing.
    
    Updated the names of the tests to better identify what they're accomplishing, and implemented the fallback logic described.

[33mcommit aa871b59c7d908c7442e0649449f89e818162c23[m
Merge: e3291ad dc89faf
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Sat Oct 17 11:11:12 2015 -0500

    Merge pull request #3914 from eerhardt/ShimEcEvp
    
    Add shims for EcKey, EvpPkey, and EcDsa files

[33mcommit 9b6cf873d9f2654d115f52f42be4bde926e5e97e[m
Author: Peter <necmon@yahoo.com>
Date:   Sat Oct 17 12:45:48 2015 +0000

    native: Adds check for header.
    `<alloca.h>` is not available on FreeBSD, instead `stdlib.h` has
    `alloca()` defined.
    Also added check for `EAI_NODATA` and `EAI_FAIL`, as those are
    considered obsolete in FreeBSD.

[33mcommit dc89faf9638cd213ada2f39cf57b9dd3b9a246a8[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Oct 16 22:08:40 2015 -0500

    Respond to PR feedback.
    
    Add SignedCast function.

[33mcommit e3291adfecd5cafe3f719a3fde4e71a117d5e05b[m
Merge: 9e3d1a8 333047c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Oct 17 10:29:40 2015 -0400

    Merge pull request #3933 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 9e7e3777f6546431817b887ace481a95f58ef436[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Oct 16 14:34:00 2015 -0500

    Add shims for all Interop.EcDsa methods.

[33mcommit e1c1aafbe2faa225e7f9d20aba5b22efbd308df8[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Oct 16 13:43:15 2015 -0500

    Add shims for all Interop.EvpPkey.EcKey methods.

[33mcommit babbf0b7f08b241ea37b09f29fd020335000ce5a[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Oct 16 11:57:42 2015 -0500

    Add shims for all Interop.EvpPkey.Rsa methods.

[33mcommit 565ffade51dc2c63adfce3cb8abe49da90ec2d43[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Oct 16 11:30:04 2015 -0500

    Shim all Interop.EvpPkey methods.

[33mcommit db441ff6fab176741c90be1aa7b58b80555b5f10[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Oct 16 11:14:10 2015 -0500

    Add shims for all Interop.EcKey methods.

[33mcommit 9e3d1a88ff93d53d531f844c994cad4b646c3c7d[m
Merge: 82b522f 853a01a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Oct 17 09:35:18 2015 -0400

    Merge pull request #3926 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 430e5fc006977faa1637bf8cef486d658ae23d87[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Fri Oct 16 10:25:28 2015 -0700

    Correctly read ASN1_INTEGER byte values
    
    When reading ASN1_INTEGER values from OpenSSL we were
    directly reading from asn1Integer->data; but that didn't have
    the representation that we were expecting.
    
    In particular, -3 might be stored as type=V_ASN1_NEG_INTEGER, data={ 0x03 }, instead of type=V_ASN1_INTEGER, data={ 0xFD }.  And 255 is V_ASN1_INTEGER { 0xFF } instead of V_ASN1_INTEGER { 0x00 0xFF }.
    
    Rather than rely on the internal storage mechanisms, export the value to DER, then read it from the normalized form.

[33mcommit 4e0f322f756147892337285a52384e0ded8a2baf[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Fri Oct 16 22:31:18 2015 -0700

    Make helper methods for opening SafeInteriorHandles

[33mcommit e5405122fa5c0e5ce2075add786028fafbffba5c[m
Author: Krzysztof Wicher <kwicher@microsoft.com>
Date:   Fri Oct 16 20:11:30 2015 -0700

    Fix building from VS in Xml tests

[33mcommit 82b522f9e68d1a22457215fc8d4696c9c62e069a[m
Merge: 66444b8 2f8b7e2
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Oct 16 17:50:54 2015 -0700

    Merge pull request #3899 from bartonjs/unix_x500name_decode
    
    Make X500DistinguishedName.Decode be the same on Unix and Windows.

[33mcommit 333047c109bcff23907c9e7ec679d68f82d13604[m
Author: Khoa Dang <khdang@microsoft.com>
Date:   Fri Oct 16 17:11:50 2015 -0700

    Rollback CS #1538860 to fix build break
    
    [tfs-changeset: 1538909]

[33mcommit 66444b881895d81e3fcc544ad102c8b257140546[m
Merge: 2c6a6dc 91e3d1f
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Oct 16 16:48:10 2015 -0700

    Merge pull request #3921 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 2c6a6dc47ce711ced3705d09641a816d4903baa5[m
Merge: 7b69799 055a145
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Oct 16 15:57:39 2015 -0700

    Merge pull request #3919 from ianhays/FileVersionInfo
    
    Fixed FileVersionInfo typo

[33mcommit 8d83c7f4e214d06da0ffb61e6a0b376b5d10692f[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Oct 16 15:55:13 2015 -0700

    Modified Collections perf tests to use ints
    
    The perf results for the Collections tests were being affected by the performance of the String Equals/GetHashCode methods. I've modified the tests to use ints so that the overhead of string comparison is taken out of the measurement.

[33mcommit 7b69799268b1d748fe91047c895f3fe0b72b56ff[m
Merge: b5846e3 d8e5371
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Oct 16 15:49:16 2015 -0700

    Merge pull request #3867 from davidsh/winhttphandler_async
    
    WinHttpHandler uses async WinHTTP patterns

[33mcommit 9eafe668a838b43a471759e94ac877839c64ca7f[m
Author: Nate McMaster <nate.mcmaster@microsoft.com>
Date:   Fri Oct 16 13:33:09 2015 -0700

    Add runtime directive for DbDataReader.GetFieldValue<T>

[33mcommit 2f8b7e293c003685a77690e1242fd1a4b5c82c73[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Oct 15 17:38:39 2015 -0700

    Make X500DistinguishedName.Decode be the same on Unix and Windows.
    
    The Windows and Unix implementations differed in a few cases:
    * Key 2.5.4.8: Windows: "S", Unix: "ST"
    * Key 1.2.840.113549.1.9.1: Windows "E", Unix "emailAddress"
    * Value quoting: Windows wrapped the value in quotes for several special characters (such as comma).  Unix did not.
    
    Now they're substantially closer to agreeing.  There's at least one known difference, and that is a single RDN with multiple components gets treated as separate RDNs on Unix, but is a special case on Windows.

[33mcommit 853a01ace044bdd535fa979d534268585eed0d5d[m
Author: Matt Connew <mconnew@microsoft.com>
Date:   Fri Oct 16 15:13:23 2015 -0700

    Refactor ClientWebSocket to have common code for all platforms.
    Moved WinRTWebSocket implementation into.
    Fix bug in WinRTWebSockets where calling CloseAsync(state, null) would throw.
    Fix bug in WinHttpWebSocket where calling SendAsync with a 0 length buffer would throw.
    Added tests for bug fixes to catch regressions.
    
    [tfs-changeset: 1538869]

[33mcommit 91e3d1f2181d5e02897b7844260e286fbb7b4148[m
Author: Khoa Dang <khdang@microsoft.com>
Date:   Fri Oct 16 14:41:44 2015 -0700

    Add new interface to S.R.S.Primitives contract for serialization surrogate support
    
    [tfs-changeset: 1538860]

[33mcommit b5846e3aac4800d267a22f3800c433527e0eccf9[m
Merge: c679cf8 6c4956f
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Oct 16 16:39:00 2015 -0500

    Merge pull request #3904 from eerhardt/ShimX509
    
    Add shims for all Interop.X509 methods.

[33mcommit c679cf81df522d737b49628ce51821f27bafbc67[m
Merge: 126241e f25dc89
Author: Immo Landwerth <immo@landwerth.net>
Date:   Fri Oct 16 14:04:34 2015 -0700

    Merge pull request #3853 from dotnet/terrajobst/api-reviews
    
    Update API review process

[33mcommit 6c4956feef3e3e672906469dcf87bb68adecca39[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Oct 15 18:38:30 2015 -0500

    Add shims for all Interop.X509 methods.
    
    I was able to remove all manage code dependencies on OpenSSL
    constants, except for X509VerifyStatusCode, which I made static_assert
    checks to ensure we are in sync with openssl's values.

[33mcommit f25dc8960641dbc6aa3816b838dbb2dc0defd307[m
Author: Immo Landwerth <immol@microsoft.com>
Date:   Fri Oct 16 13:45:21 2015 -0700

    Clarify namespaces and fix typo

[33mcommit 126241eae298d914b10b38dced1ba0e98ad63c55[m
Merge: 88a594b c57eba5
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Fri Oct 16 13:43:48 2015 -0700

    Merge pull request #3861 from nguerrera/assembly-location
    
    Expose Assembly.Location via public contract

[33mcommit 055a1451d76aa1e354ab5e5fba1c693d6d071f5a[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Oct 16 13:39:15 2015 -0700

    Fixed FileVersionInfo typo
    
    The test dll for FileVersionInfo SecondNativeLibrary.dll contained a typo for the word "unknown". I was unable to find the source for this dll anywhere inTFS/ToF, so opted instead to modify the binary info directly and merge that as a fix.
    
    resolves #636

[33mcommit d8e5371a5d0f9f4bb3aa85127cb78adf89dde1fb[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Sep 15 14:14:37 2015 -0700

    WinHttpHandler uses async WinHTTP patterns
    
    This is a large PR and addresses work item #3000. I apologize for not being able to structure it in a series of smaller commits.
    
    The bulk of this PR is switching WinHttpHandler to use the async pattern of calling WinHTTP APIs. This involved a significant restructuring of the code. As part of that, I split up the large WinHttpHandler class into multiple, smaller, helper classes.
    
    While the intent of using async WinHTTP calls is better performance and cancel-ability, this PR has not been fully optimized yet. Due to the schedule of RC1 code complete next week, it's important that this PR get in and get mileage on it in the next few weeks.
    
    There are several TODO items that will be done in later PR's. There is still work being tracked in #2165 for various follow-up items. For example, re-conciling the best SafeHandle pattern to use for WinHTTP between WebSockets.Client and WinHttpHandler.
    
    I'm currently using a simple Debug.WriteLine for verbose debug logging which can be turned on/off via environment variable. I plan to switch this to System.Net ETW trace loggers in the next commit and/or PR. But the logging has proved very useful in diagnosing issues.
    
    Please provide feedback. Depending on the feedback, some of it will be marked as follow-up items for future PRs.

[33mcommit 88a594b7ed44e3bd330d95f79f01e672e032c368[m
Merge: 2d7c6c1 f7dfadb
Author: shrutigarg <shgarg@microsoft.com>
Date:   Sat Oct 17 00:34:13 2015 +0530

    Merge pull request #3807 from shrutigarg/ssl_CA
    
    Adding client cert validation logic and usage of EncryptionPolicy

[33mcommit 6f48b3a10c70c16436276cd42cf9efb7262207c8[m
Author: Immo Landwerth <immol@microsoft.com>
Date:   Fri Oct 16 11:58:14 2015 -0700

    Address feedback

[33mcommit c57eba5bc806f85b597319af92e7144c32bf3fc1[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Oct 13 17:56:02 2015 -0700

    Expose Assembly.Location via public contract

[33mcommit f7dfadba8e9372f1e960c273a4a31ab17e244d76[m
Author: Shruti Garg <shgarg@microsoft.com>
Date:   Sat Oct 17 00:04:26 2015 +0530

    Adding client cert validation logic and usage of EncryptionPolicy

[33mcommit 2d7c6c125f7d2e65f9f4d924e94fafe4f330312b[m
Merge: 3597019 ee56a6b
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Fri Oct 16 11:01:31 2015 -0700

    Merge pull request #3911 from pgavlin/SocketsShims2
    
    Finish most of the sockets shims.

[33mcommit ee56a6bdfdc8731b87f984835608537061eb71c9[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Thu Oct 15 19:51:40 2015 -0700

    Finish most of the sockets shims.
    
    - Shim SocketFlags
    - Shim select()
    - Fix some issues with error propagation in socket creation and accepted
      sockets

[33mcommit 359701949fe18a719263d16ac24d00cfc88fc44f[m
Merge: 67be4a8 52fd6a4
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Oct 16 06:57:32 2015 -0700

    Merge pull request #3905 from weshaggard/DisableFailingSocketTests
    
    Disable failing socket tests running in elevated mode

[33mcommit 67be4a88eefdf9c1ae9d6398c93b5f0dca0e3a27[m
Merge: 6a88925 17f0033
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 16 08:36:55 2015 -0400

    Merge pull request #3846 from JonHanna/expressions_binary_tests
    
    Add more tests for binary expressions.

[33mcommit 6a889252d91d10cec19a7531f7dcf73eb67e0989[m
Merge: 6f1c2a8 4e26fd9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 16 08:20:59 2015 -0400

    Merge pull request #3344 from heXelium/Fix#1305
    
    Fix #1305 InsertAfter method throws if dub attribute is inserted at the end of the collection.

[33mcommit 52fd6a45dce86953a8172ca7b6bd7d43e85821b3[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Thu Oct 15 20:59:30 2015 -0700

    Disable failing socket tests running in elevated mode
    
    Some of the cases expected to fail don't actually fail when running
    elevated. See https://github.com/dotnet/corefx/issues/3726. This
    disables those test cases so the tests can run in elevated mode.

[33mcommit 6f1c2a86fb8fa1bdaee7c6e70a684d27842d804c[m
Merge: 95eaf4b 446547a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 15 21:20:20 2015 -0400

    Merge pull request #3898 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 446547ad7bb8462e89e5f8499a0712b48b733fb8[m
Author: Khoa Dang <khdang@microsoft.com>
Date:   Thu Oct 15 17:35:34 2015 -0700

    Bump version number of serialization contracts for contract surrogate feature work
    
    [tfs-changeset: 1538481]

[33mcommit 95eaf4b56368a276022a49982e0ec07bb788b81c[m
Merge: 771e057 e4731ad
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Thu Oct 15 17:13:57 2015 -0700

    Merge pull request #3890 from pgavlin/SocketsShims
    
    Shim Interop.libc.socket().

[33mcommit 771e0571980e65ce561932d6216ae5d364ac0519[m
Merge: 48158af ae7b96c
Author: Andrew Arnott <andrewarnott@gmail.com>
Date:   Thu Oct 15 16:59:37 2015 -0700

    Merge pull request #3880 from AArnott/fix2028
    
    Do not throw from ImmutableArray<T>.RemoveRange when index==length

[33mcommit 48158afa12a7d290e09141f110809f36aca473ec[m
Merge: a3859cf e99694f
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Oct 15 18:38:07 2015 -0500

    Merge pull request #3870 from eerhardt/ShimPcks
    
    Shim Interop.Pkcs* methods

[33mcommit b6178dd768e1837472d0cb2f845c24634b7e563f[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Oct 16 00:22:03 2015 +0100

    Mark method that should never be reached as unreachable.

[33mcommit e4731ad428d538cbfc75d4dc2dcc8fd7d3aba534[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Thu Oct 15 12:18:27 2015 -0700

    Shim Interop.libc.socket().

[33mcommit a3859cf9bd91b77496b1e1b7282b3b7f0e65f1ab[m
Merge: a685093 758ad09
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Thu Oct 15 13:59:50 2015 -0700

    Merge pull request #3877 from pgavlin/SocketsShims2
    
    Shim various socket methods.

[33mcommit 758ad095a82071353424914ac9ea2599d545a3ce[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Thu Oct 15 10:08:54 2015 -0700

    Shim {get,set}sockopt.

[33mcommit a6850934cb3d84f92e67172a52fcee1fe0829fc6[m
Merge: 7ea05a5 9855270
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 15 15:41:32 2015 -0400

    Merge pull request #3885 from stephentoub/console_stdoutwriting
    
    Change how/when Console writes escape strings on Unix

[33mcommit 7ea05a51b9119eef62438b2aa9f279b06ba76e77[m
Merge: 52c5b37 a9e237f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 15 15:41:23 2015 -0400

    Merge pull request #3886 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit e99694fe6c7a484fd26e0e5f1b90a67eb8df3187[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Oct 15 13:50:06 2015 -0500

    Respond to PR feedback.
    
    Renaming D2I and I2D to Decode and Encode respectively.
    
    Fixing a code formatting issue with STACK_OF(X509).

[33mcommit 52c5b37d630dbfba5dbd95b3d8aa0022c4e45b6f[m
Merge: 06d7780 607f1df
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 15 14:32:18 2015 -0400

    Merge pull request #3879 from stephentoub/exclude_release
    
    Make ExcludeFromCodeCoverage attribution conditional on DEBUG

[33mcommit 98552707c585bc0f0c138fdeed991c28f00a0ac5[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Oct 15 14:28:38 2015 -0400

    Change how/when Console writes escape strings on Unix
    
    ForegroundColor, BackgroundColor, ResetColo, and CursorVisible all need to write out ANSI escape strings to perform their work, and we only want to do such writing if we expect the target will be able to correctly understand the inputs.
    
    Previously, we were doing this by checking whether the file descriptor wrapped by the current output stream was a character device.  However, this behavior differs from the Windows implementation, which doesn't factor Console.SetOut into its decisions.  The heuristic is also susceptible to non-terminal character devices being the target of redirection, e.g. /dev/null.
    
    This change updates the Unix implementation to be more consistent with Windows, simply checking whether stdout has been redirected rather than factoring in SetOut.  It also now uses isatty to determine whether to write out to the terminal.

[33mcommit 06d77806176641f778176b00864506e054532127[m
Merge: ceb02d1 2035055
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Oct 15 12:59:06 2015 -0500

    Merge pull request #3875 from eerhardt/ShimX509Ext
    
    Respond to PR feedback from Jeremy.

[33mcommit 294036e6ff9992dd8faa3213675b80509c404dbd[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Thu Oct 15 10:51:03 2015 -0700

    Fix VS intellisense experience on corefx projects.
    
    The forward slash inside Common source files disconnects them
    from their containing projects, breaking the Intellisense
    experience. See Issue #3534

[33mcommit aaeecbe2398ec7df8669cb3c478655afc084683e[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Thu Oct 15 08:47:25 2015 -0700

    Shim various socket methods.
    
    This change adds shims for most of the remaining straightforward methods
    in sockets:
    - accept
    - bind
    - connect
    - getpeername
    - getsockname
    - listen
    - shutdown

[33mcommit ae7b96c5f55b603cc73a74894e53fa2e0fff0fe1[m
Author: Andrew Arnott <andarno@microsoft.com>
Date:   Thu Oct 15 09:26:14 2015 -0700

    Do not throw from ImmutableArray<T>.RemoveRange when index==length
    
    ImmutableArray<T>.RemoveRange(int, int) would throw when the first argument equals the length of the array, whereas ImmutableList<T>.RemoveRange(int, int) allows the first argument to equal the length of the list. This makes them consistent by slightly widening the allowed input to ImmutableArray.
    
    ImmutableList is changed slightly to simplify the logic (but keep the meaning equivalent). The test is enhanced and a bug in the test fixed.

[33mcommit 607f1df9aa73a7bfe6ab790d9658175094ea6bfc[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Oct 15 12:08:38 2015 -0400

    Make ExcludeFromCodeCoverage conditional on DEBUG
    
    Some of our assemblies use ExcludeFromCodeCoverage to exclude from code
    coverage various members.  Since we only do code coverage runs against
    debug builds, there's no need to bloat such assemblies with
    ExcludeFromCodeCoverage on these members in release builds.

[33mcommit 629bd2490b12c075b238fa10b4932283f215f637[m
Author: Andrew Arnott <andarno@microsoft.com>
Date:   Thu Oct 15 08:49:51 2015 -0700

    Add Sort(Comparison<T>) methods to ImmutableArray and Builder

[33mcommit ceb02d1ff0f540ff7658efa4cba3db6288689928[m
Merge: 5eb2d25 9b1a983
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Thu Oct 15 08:37:01 2015 -0700

    Merge pull request #3868 from pgavlin/SocketsShims
    
    Shim {send,recv}msg and related types.

[33mcommit 5eb2d2513b90518bf53b8b59505c7f7de5f6c0ed[m
Merge: 724cf90 2f5b702
Author: Andrew Arnott <andrewarnott@gmail.com>
Date:   Thu Oct 15 08:28:48 2015 -0700

    Merge pull request #3860 from AArnott/fix1414
    
    Fix ImmutableList<T> IList implementation for incompatible element types

[33mcommit 1d30bf5b161dd7fef253322f2db553ea4e3e82ae[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Oct 15 16:04:11 2015 +0100

    Exclude unreachable members in System.Linq.Expressions from coverage.
    
    All such members are entirely unreachable, and coverage including them is not
    informative.

[33mcommit 203505578a4376109796677b65dbbe3a3cc46c4e[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Oct 15 10:23:16 2015 -0500

    Respond to PR feedback.
    
    Adding 'isCritical' to the X509ExtensionCreateByObj method.
    Checking for NULL before dereferencing pointers.

[33mcommit 724cf9086bdbba1b13ba23f14665fe3ec3b35a07[m
Merge: aa21175 7bc755e
Author: Andrew Arnott <andrewarnott@gmail.com>
Date:   Thu Oct 15 08:14:32 2015 -0700

    Merge pull request #3871 from AArnott/fix2036
    
    Accept null comparers and update docs around these parameters

[33mcommit 17f0033ef765402a31879c8d6e9fd1823ea94718[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Oct 15 16:08:15 2015 +0100

    Add more tests for binary expressions.
    
    Filling in checks for correct behaviour on Reduce, CanReduce and null arguments
    to existing tests. Adding tests for assigning expressions.
    
    Add tests for unreadable and/or unwritable nodes passed inappropriately.
    
    Test checks on argument expressions being readable.

[33mcommit aa21175389ecf9595188bbc7e92735904683156a[m
Merge: be2c178 77e56f1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 15 11:04:52 2015 -0400

    Merge pull request #3859 from stephentoub/string_ascii_test
    
    Add string.ToLower/UpperInvariant test for ASCII

[33mcommit 7bc755e200f1411f75b9ba8ec1baee9f365e1c06[m
Author: Andrew Arnott <andarno@microsoft.com>
Date:   Thu Oct 15 07:23:27 2015 -0700

    Remove CustomComparer<T> test class

[33mcommit 77e56f1cc46d883cc201c1e9c0063cb8419ede2a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Oct 14 16:25:17 2015 -0400

    Add string.ToLower/UpperInvariant test for ASCII
    
    Validate a string with all of the ASCII characters converted to lower and upper case with invariant culture.

[33mcommit be2c1781d1c1c4391ed85a0c51c0d13fed2c6299[m
Merge: ec18bb5 68a32d9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 15 09:11:11 2015 -0400

    Merge pull request #3817 from bjjones/sb8_crc32
    
    Improved crc32 generation using improved algorithm in managed code

[33mcommit 4e26fd9245c429977511b7a96269cc155c176fa8[m
Author: Maksym Rozborskyi <hexelium@gmail.com>
Date:   Thu Oct 15 12:16:42 2015 +0300

    Added InsertAfter tests.

[33mcommit ec18bb512a58d4f2db080a9bcef78ef45e9556ff[m
Merge: 149c958 8c45619
Author: shrutigarg <shgarg@microsoft.com>
Date:   Thu Oct 15 12:54:53 2015 +0530

    Merge pull request #3525 from shrutigarg/ssl_connection
    
    Updating SSLConnectionInfo with correct protocol version and Cipher algorithms

[33mcommit 8c45619b6c1101f80662717493d525dd7545dc75[m
Author: Shruti Garg <shgarg@microsoft.com>
Date:   Thu Oct 15 12:22:37 2015 +0530

    Updating SSLConnectionInfo with correct protocol version and Cipher algorithms

[33mcommit e448e86b36e75e315c61479222692a97d8e0a22b[m
Author: Andrew Arnott <andarno@microsoft.com>
Date:   Wed Oct 14 23:04:26 2015 -0700

    Sort methods now accept null Comparers

[33mcommit 6bb577b3460a8f84c11d2f7781307cb1fb5a628d[m
Author: Andrew Arnott <andarno@microsoft.com>
Date:   Wed Oct 14 22:29:22 2015 -0700

    Allow null EqualityComparer<T> in Replace(T, T, EQ)

[33mcommit a605a3b548f915d259c26f8780cd3182c255bfdb[m
Author: Andrew Arnott <andarno@microsoft.com>
Date:   Wed Oct 14 22:16:40 2015 -0700

    Allow null EqualityComparer<T> in Remove(T, EQ)

[33mcommit 740b0244f39590bb2a393b66f6b75b2c77f22c07[m
Author: Andrew Arnott <andarno@microsoft.com>
Date:   Wed Oct 14 22:10:14 2015 -0700

    Allow null EqualityComparer<T> in RemoveRange

[33mcommit 9b1a983d6a4e79d1a68080a7a905782771ffc4c7[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Wed Oct 14 16:14:30 2015 -0700

    Shim {send,recv}msg and related types.

[33mcommit 149c958ffb3d8e505e04c7befead1f23832b9c13[m
Merge: 386da05 8ef10f3
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Wed Oct 14 20:42:22 2015 -0700

    Merge pull request #3869 from mellinoe/disable-sbyte-tests
    
    Disable Vector<SByte> tests failing on AVX2

[33mcommit bad084de38498f3e8cf38c455abbd9c9f95a73b7[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Oct 14 22:10:00 2015 -0500

    Running format-code.sh to keep the code format clean.

[33mcommit c47cf8170488aded3b674df46452e73c906715db[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Oct 14 22:04:49 2015 -0500

    Add shims for all Interop.Pkcs12 methods.

[33mcommit 690dc858675b726bbfd281b6dedd4a26ead975f0[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Oct 14 16:27:44 2015 -0500

    Adding shims for all Interop.Pkcs7 methods.
    
    I also moved the existing GetPkcs7Certificates method from Interop.Crypto to Interop.Pkcs7, so System.Net.Security didn't need to include all the Pkcs7 files, which it doesn't use.

[33mcommit 8ef10f3b02cf9c25dfa9ceb68fbe244e041f30c5[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Oct 14 16:53:31 2015 -0700

    Disable Vector<SByte> tests failing on AVX2
    
    This is failing because on AVX2, the number of elements in these bytes is so large that the vector construction logic is overflowing its inputs, because it is based on the index of the vector element.

[33mcommit 386da05b964738131fc87b12cef53e3be767c81c[m
Merge: 772e42b d228e5a
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Wed Oct 14 16:47:26 2015 -0700

    Merge pull request #3857 from pgavlin/SocketsShims2
    
    Shim ip_mreqn, ipv6_mreq, and linger.

[33mcommit 68a32d9bc05afbb7adec97376f87589db7cf7dcf[m
Author: bjjones <brandon1.jones@intel.com>
Date:   Wed Oct 14 16:34:10 2015 -0700

    response to stephentoub's feedback

[33mcommit 772e42b5d6f3ed46cfb455a94b1ea6891d3271f4[m
Merge: 5d0ef11 863ae5d
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Wed Oct 14 15:47:25 2015 -0700

    Merge pull request #3825 from CIPop/snspr
    
    Adding original SSPI object model back to the Windows SslStream implementation.

[33mcommit a9e237f4e74081d243854cc1ba0994391f3bc145[m
Author: Khoa Dang <khdang@microsoft.com>
Date:   Wed Oct 14 15:31:55 2015 -0700

    Rollback CS #1537401 to fix build break
    
    [tfs-changeset: 1537913]

[33mcommit 5d0ef11b9374a0f8e0284b3efd74e34bd9bc7b0a[m
Merge: 01fc685 c1f2b22
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 14 18:04:56 2015 -0400

    Merge pull request #3852 from stephentoub/fix_zip_issues
    
    Fix three issues in ZipArchiveEntry from #3820

[33mcommit 863ae5dfcc36b66a599c6b022a88b02046b0d8a4[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Mon Oct 12 16:46:50 2015 -0700

    Adding original SSPI object model back to the Windows SslStream implementation.

[33mcommit 37021105f8f3ffb3bf343e84c4388f406322d093[m
Author: Andrew Arnott <andarno@microsoft.com>
Date:   Wed Oct 14 14:26:23 2015 -0700

    Allow null EqualityComparer<T> in ImmutableList IndexOf and LastIndexOf methods
    
    Work toward #2036

[33mcommit 0b643658aa761e76fe5c1c166639ae46c78cd9c6[m
Author: Immo Landwerth <immol@microsoft.com>
Date:   Wed Oct 14 13:42:31 2015 -0700

    Fix typo

[33mcommit d228e5a81a1ec8af14ad753c1701c9ec50d1b044[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Wed Oct 14 13:31:30 2015 -0700

    Address PR feedback.

[33mcommit 2f5b702223ec1a70dedae1d89e930ad61d2ff6b5[m
Author: Andrew Arnott <andarno@microsoft.com>
Date:   Wed Oct 14 13:28:15 2015 -0700

    Fix ImmutableList's IList methods' handling of various types
    
    The type compatibility check is now equivalent to List<T>'s IList implementation from the BCL.
    This fixes the 15 failing unit tests just added in the prior two commits.
    
    Fix #1414

[33mcommit 6b1fedd09ad6aee26670022ddd81913c0cb5c022[m
Author: Andrew Arnott <andarno@microsoft.com>
Date:   Wed Oct 14 13:25:50 2015 -0700

    Add tests for IList's Contains and Remove methods
    
    And build up IList.IndexOf tests further.

[33mcommit 19c900b26bc0af280bb97e65ed64c95e428d497d[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Wed Oct 14 12:34:08 2015 -0700

    Shim ip_mreqn, ipv6_mreq, and linger.
    
    These types are used for getting and setting IP multicast and socket
    linger options, respectively.

[33mcommit 01fc685707daaa022d00cb63e4c7b38c5c1ac1d9[m
Merge: 4e415b5 4605415
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 14 15:58:40 2015 -0400

    Merge pull request #3851 from eerhardt/ShimX509
    
    Shim X509Ext methods.

[33mcommit 4e415b5365b992371b0cb48f7dd08c12b3a7ecb6[m
Merge: cce3844 8668749
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 14 15:58:10 2015 -0400

    Merge pull request #3856 from AArnott/RemoveNotImplementedException
    
    Fix exception documentation on System.Collections.Immutable

[33mcommit cce3844701f15a79369427a389641fa8b01102ef[m
Merge: 8851722 3bca01a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 14 15:43:55 2015 -0400

    Merge pull request #3847 from AArnott/fix3293
    
    Add SecurityTransparentAttribute to System.Collections.Immutable

[33mcommit 8851722479d08022bdbee0302e8533d81200e999[m
Merge: 839706d 9ab9280
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 14 15:43:42 2015 -0400

    Merge pull request #3855 from eerhardt/FormatCleanup
    
    Clean up formatting in our native code.

[33mcommit 460541583baed4e9f17d648eda42fe6631af7199[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Oct 14 12:47:19 2015 -0500

    Shim X509Ext methods.
    
    Adding shims for all methods in Interop.X509Ext.cs.
    
    I also moved the decoding of X509 Basic Constraints into native code
    so we don't have to marshal structs from native to managed.
    This also saves on a few native calls.
    
    I refactored some Basic Constraints tests to use a Theory, and split
    the test into 2 - encoding and decoding. Encoding doesn't work on
    Unix yet, so this allows the decoding test to run.

[33mcommit 8668749265b82b37c75309d5c9462935c428e1b1[m
Author: Andrew Arnott <andarno@microsoft.com>
Date:   Wed Oct 14 12:02:05 2015 -0700

    Remove reference to setter on API docs that don't fit
    
    This was a copy/paste bug.

[33mcommit f4c1b75eb5d3e6e440bc8d1ddbd7c0f44150587b[m
Author: Andrew Arnott <andarno@microsoft.com>
Date:   Wed Oct 14 11:54:47 2015 -0700

    Improve exception documentation on ImmutableList<T>

[33mcommit 9ab92802ac23a73cde6a745fddbf8a8192d9f7d4[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Oct 14 13:50:43 2015 -0500

    Clean up formatting in our native code.
    
    Running format-code.sh on the current native code to get it to a clean state.

[33mcommit 62c54252a97cc2050603607d488d8204941f088e[m
Author: Andrew Arnott <andarno@microsoft.com>
Date:   Wed Oct 14 11:47:55 2015 -0700

    Remove docs suggesting we throw NotImplementedException

[33mcommit 70d2e69559db641566e12da5ab0f1033ef68a2de[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Wed Oct 14 20:00:59 2015 +0300

    Convert System.Xml.XDocument.Properties.Tests to use Xunit

[33mcommit 839706d19379238b256a10b450218b9686e2e9b2[m
Merge: 5f8f644 5e7f8e7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 14 14:31:13 2015 -0400

    Merge pull request #3759 from steveharter/AddDefaultLocaleTest
    
    Add test for non invariant default locale and collation

[33mcommit 92b1e62d6012b4339d5da8c37235d8c54c5cb746[m
Author: Immo Landwerth <immol@microsoft.com>
Date:   Wed Oct 14 11:30:02 2015 -0700

    Update API review process
    
    Our current API review process is a bit too complicated. We want to
    streamline it a bit and clarify criteria for closure and who is
    responsible for transitions.

[33mcommit c1f2b225f176f5476261d7fe0c76eb4ec59a7884[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Oct 14 14:27:53 2015 -0400

    Fix three issues in ZipArchiveEntry from #3820
    
    - AllowLargeZipArchiveEntriesInUpdateMode was returning whether the size of a pointer was >= 4.  That's going to be true on both 32-bit and 64-bit, when the intention was for it to only be true on 64-bit.
    - AllowLargeZipArchiveEntriesInUpdateMode was a property.  Making it a readonly static bool allows the JIT compiler to essentially treat it as a constant, trim away unnecessary branches, etc.
    - WriteLocalFileHeaderAndDataItemIfNeeded was unnecessarily creating a MemoryStream around a byte[] just to be able to CopyTo that stream to another one.  We can just write the bytes directly.

[33mcommit 75e828042d042bb6f22fe5e6d7feca76d8d90beb[m
Author: Andrew Arnott <andarno@microsoft.com>
Date:   Wed Oct 14 11:23:30 2015 -0700

    Add tests for ImmutableList's IList.IndexOf
    
    These tests focus on unexpected input argument types, null values, and values with Equals overrides with peculiar behaviors.
    
    Reproduces #1414 and other related bugs.

[33mcommit 5f8f64437cf36f3baf0438b72a3987d3a527308f[m
Merge: 4e27a6a 7372860
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 14 14:13:01 2015 -0400

    Merge pull request #3848 from AArnott/fix2278
    
    Remove internal Validation namespace

[33mcommit 4e27a6ace46e867d6a9f82f83ae9edb2b1984a6f[m
Merge: eac3ef8 581aebc
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Oct 14 10:19:08 2015 -0700

    Merge pull request #3837 from bartdesmet/Issue-3836
    
    Removing some dead code in the expression interpreter

[33mcommit eac3ef84bf1e37ad01125d5e31c1897128ed8b7d[m
Merge: 6aa485d 377080a
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Oct 14 10:17:51 2015 -0700

    Merge pull request #3804 from JonHanna/optimise_enumerable_block
    
    Reduce allocations in Enumerable.Block and remove always-true test

[33mcommit 6aa485d363eda82cd4bdd3c779e5f9e3140a1329[m
Merge: 84bccd4 b1d069c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 14 13:11:02 2015 -0400

    Merge pull request #3835 from bartdesmet/Issue-3834
    
    Adding InstructionName overrides where missing.

[33mcommit 84bccd4b3b74b9125042b220f7d67085c6bebf6c[m
Merge: 19db634 2cdff2f
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Wed Oct 14 09:57:30 2015 -0700

    Merge pull request #3821 from pgavlin/SocketsShims
    
    Shim in{,6}_pktinfo.

[33mcommit 19db634dd57f670d9e093ad189cef34f1f074e3d[m
Merge: 625b9bd bfa812b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 14 12:49:51 2015 -0400

    Merge pull request #3803 from JonHanna/remove_needless_toreadonly
    
    Remove needless checks on creating ReadOnlyCollection in Linq.Queryable

[33mcommit 625b9bd2dcb8809455cddaf0c882d87bdfcc682c[m
Merge: 5666b36 17fdc68
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 14 12:48:15 2015 -0400

    Merge pull request #3806 from kapilash/rewindable
    
    PreAuthenticate fix

[33mcommit 5666b36e0143709e5f8fdc739a47c37fd83563cc[m
Merge: 8fc93d4 207c5fd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 14 12:47:39 2015 -0400

    Merge pull request #3842 from vancem/TombstoneTelemetrySource
    
    Delete TelemetrySource and TelemetryListener (make renaming Tombstone)

[33mcommit 7372860a7c7fc0c66591e5b00441a03581cf0a96[m
Author: Andrew Arnott <andarno@microsoft.com>
Date:   Wed Oct 14 09:47:23 2015 -0700

    Remove internal Validation namespace
    
    This moves the two internal types in the "Validation" namespace into the System.Collections.Immutable namespace so that we don't have any 'internal only' namespaces in the assembly.
    
    Fix #2278

[33mcommit 3bca01ad742767953de01cb2dc054b374e64cd66[m
Author: Andrew Arnott <andarno@microsoft.com>
Date:   Wed Oct 14 09:28:25 2015 -0700

    Add SecurityTransparentAttribute to System.Collections.Immutable
    
    Fix #3293
    Fix #1512

[33mcommit 2cdff2f366080b11420b63f932691200a881b5ba[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Fri Oct 9 14:13:55 2015 -0700

    Shim in{,6}_pktinfo.
    
    This moves all of the processing for control messages--arguably some of
    the trickier interop in Sockets--into the native shims.

[33mcommit 8fc93d423dc646f8fddb03c38852a6aed4bb9ee7[m
Merge: 127809a 2ad9a6f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 14 11:11:26 2015 -0400

    Merge pull request #3764 from ianhays/perf
    
    Update and addition to Performance tests

[33mcommit 127809aafbd7b6da8d46ad27946fbe159aed3b29[m
Merge: 323743d3 b8ad721
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 14 10:16:30 2015 -0400

    Merge pull request #3829 from bartonjs/unix_sslstream_ipaddress
    
    Unix SslStream: Implement RFC2812 IP Address matching for HTTP over TLS.

[33mcommit 323743d3f9a7a39756ec1e10aecaa440f7c2e462[m
Merge: 596fdaa 072085d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 14 09:51:36 2015 -0400

    Merge pull request #3796 from khdang/add_large_obj_deserialization_perf_test
    
    Add perf test to deserialize large object graph

[33mcommit 596fdaadabc7bf6506085326ed2500ce15a9211f[m
Merge: 86d774a 11395b2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 14 08:33:31 2015 -0400

    Merge pull request #3828 from ellismg/fix-3739
    
    Don't override dir.props' ECMA Key setting

[33mcommit 86d774a15ca804b11ecdaef3e0c1532828d1df37[m
Merge: 44b2048 b652828
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 14 08:32:57 2015 -0400

    Merge pull request #3830 from davidsh/re-enable_unit_tests
    
    Re-enable some WinHttpHandler unit tests

[33mcommit 207c5fdc4afa200e3b5446d0c01654c2eb59c925[m
Author: Vance Morrison <vancem@microsoft.com>
Date:   Wed Oct 14 04:55:38 2015 -0700

    Make a Tombstone for TelemetrySource and TelemetryListener.   This forces people to stop using this API and move the renames of this: DiagnosticSource and DiagnosticListener in System.Diagnostics.DiagnosticSource.dll

[33mcommit 581aebcd51432165137f07240d665f9a3e5947c5[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Wed Oct 14 03:00:38 2015 -0700

    Removing unused LightLambdaCompileEventArgs class.

[33mcommit f5525deeeaf3732baa21f0f01827e718ea6c1319[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Wed Oct 14 02:51:45 2015 -0700

    Removing dead code in InterpretedFrame.

[33mcommit b1d069cd8dd8adb62522b9a70a4c11a355cb90c8[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Wed Oct 14 02:43:41 2015 -0700

    Adding InstructionName overrides where missing.

[33mcommit 17fdc686de07b9f9711956eea25e6c0c9042cd17[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Tue Oct 13 19:10:00 2015 +0530

    PreAuthenticate fix for CurlHandler
    
    When CURLOPT_HTTPAUTH is set to 'any', libcurl will always try to make more than one call to figure out the
    right authentication scheme needed by the server. This breaks the behavior when PreAuthenticate is set to true.
    The fix is to iterate over available schemes and set the auth-scheme flags to only those that are available.
    Also, while updating the CredentialCache, we ignore ArgumentException (raised when the cache contains the given url and scheme pair)
    Throw exception when network credentials are different for auth schemes

[33mcommit b8ad721e56d09fc16016a8a961938be30aa7a114[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Oct 13 20:26:11 2015 -0700

    Implement RFC2812 IP Address matching for HTTP over TLS.
    
    If the hostname looks like an IP Address then do exact matches against GEN_IPADDR Subject Alternative Name entries.  Unlike the GEN_DNS matching of text hostnames, the IP Address form always falls back to the CN text comparison if no other match has been found.

[33mcommit b652828b662f0052deeddea9151f34fccafe3d2a[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Oct 13 20:41:30 2015 -0700

    Re-enable some WinHttpHandler unit tests
    
    Turned on tests:
    
    SendAsync_NoWinHttpDecompressionSupportAndResponseBodyIsDeflateCompressed_ExpectedResponse
    SendAsync_NoWinHttpDecompressionSupportAndResponseBodyIsGZipCompressed_ExpectedResponse
    
    since the issue with clrcompression.dll was resolved a while ago.
    
    Removed a *Nix annotation suppressing a unit test. This is not needed in
    the test sources since the WinHttpHandler library and tests are only
    supported on Windows and won't run anymore in CI (disabled in CSPROJ
    files) for non-Windows platforms.

[33mcommit 44b20486223cc0525062877370d4854acaa65f7e[m
Merge: eb99c7d 58b4054
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Oct 13 20:23:56 2015 -0700

    Merge pull request #3827 from davidsh/re-enable_test
    
    Re-enable test on *Nix

[33mcommit eb99c7d3e41481a747d77bd766463b75742317b3[m
Merge: 4e8cae9 ed480a7
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Oct 13 18:55:21 2015 -0700

    Merge pull request #3824 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 58b40540cf56a43469ccb1cee1323cfc392aa4aa[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Oct 13 18:40:08 2015 -0700

    Re-enable test of *Nix
    
    HttpContentTest.ReadAsStringAsync_SetInvalidCharset_ThrowsInvalidOperationException
    can be re-enabled due to fixes in the CoreCLR for System.Text.Encoding on
    *Nix.  This fixes #3343.

[33mcommit 11395b20dac9dff22be141b2a78c394268ab146e[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Oct 13 18:15:56 2015 -0700

    Don't override dir.props' ECMA Key setting
    
    Due to https://github.com/dotnet/roslyn/issues/2444, we have disabled
    ECMA signing when the host platform for our build is not Windows. This
    is done by explicitly setting the property in our top level dir.props.
    Some of the reference assemblies explicitly set UseECMAKey to true,
    overwriting this value which leads to build breaks when building on non
    Windows platforms.
    
    Guard the setting of this property so that we don't override it if it
    already set.
    
    Fixes #3739

[33mcommit ed480a79973329ebb7fe6cda21cf8338940b3194[m
Author: Khoa Dang <khdang@microsoft.com>
Date:   Tue Oct 13 16:26:48 2015 -0700

    Bump version number of serialization contracts for contract surrogate feature work
    
    [tfs-changeset: 1537401]

[33mcommit 4e8cae99fb904cc625472a63307e02b4f7dd2d36[m
Merge: 805c55d 0920c09
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 13 19:10:41 2015 -0400

    Merge pull request #3820 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 805c55d1af53ed511737d30d0a5c1a8dee0f16b9[m
Merge: aa215e4 f690ad4
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Tue Oct 13 15:35:31 2015 -0700

    Merge pull request #3800 from bartonjs/unix_ecdsa_signverify
    
    Make Unix ECDSA support the Windows signature format

[33mcommit 2ad9a6ffa7f6bcd31382372609849af5caa6a1bd[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Tue Oct 13 14:28:01 2015 -0700

    Update and addition to Performance tests
    
    - Made the existing perf tests for Linq follow the new syntax and use the new runner
    - Removed all references to v5.0 libraries being required as they no longer are
    - Added new tests using usage data from aspnet/benchmarks
    - Modified some existing tests to be more easily comparable using analysis tools that look at inlinedata/memberdata (e.g. System.IO.Compression)
    - Updated the lock files to use the latest xunit-performance package
    - Modified test structure and innerIteration loops to produce more consistently repeatable results
    - Updated docs with change to csproj requirements

[33mcommit aa215e42ba8a20b24a8c077d971de3fb70086318[m
Merge: 7691049 9d0a749
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 13 17:11:08 2015 -0400

    Merge pull request #3812 from eerhardt/ShimBio2
    
    Shim Interop.Bignum and Interop.BIO methods.

[33mcommit 7691049201bf8e65edd1a66cf92f23ecdd5d57cc[m
Merge: 722b5c9 8c6587f
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Tue Oct 13 14:06:01 2015 -0700

    Merge pull request #3798 from sokket/shim
    
    Shim'ing out the processor affinity function calls for the Linux kernel

[33mcommit 0920c09b50b548d75278fd6a13c6651672f367ab[m
Author: Matt Cohn <macohn@microsoft.com>
Date:   Tue Oct 13 13:57:27 2015 -0700

    This fix to System.IO.Compression allows a ZipArchive that has an entry with a greater than 2GB compressed size to be loaded when running as a 64-bit process.
    
         There are other limitations working with large files in archives that are not addressed, including opening a ZipArchiveEntry with a greater than 2GB uncompressed size.
         On desktop, System.IO.Compression is a partial facade.  The fix included here modifies only classes included in the implementation of the partial facade.
         To deliver this fix, the minor version of the assembly needs to be incremented to prevent the loader from unifying to the in-box version of the assembly.  With that, the contract version needs to be updated.  The package is also updated as the in-box assemblies def no longer matches the contract's ref.
         This change updates the contracts for Desktop, ProjectK, and ProjectN.  The package contained an implementation for ProjectK and ProjectN from fxcore\src\System.IO.Compression\System.IO.Compression.csproj which itself includes the open\src project, and is now modified to also include the partial desktop facade for desktop from fxcore\src\System.IO.Compression\System.IO.Compression.Desktop.csproj
    
    CR: ericstj, wesh, erme
    
    [tfs-changeset: 1537312]

[33mcommit 8c6587f27ca8aa0d9292c1d7d0bcce922be7b97b[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Mon Oct 12 17:08:27 2015 -0700

    Shim'ing out the processor affinity function calls for the Linux kernel

[33mcommit 9d0a7495cb4d820194d5baf7593539823ee5a120[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Oct 13 12:01:17 2015 -0500

    Shim Interop.Bignum and Interop.BIO methods.

[33mcommit 722b5c9d49000dca369d5e18b0360266dc976fd3[m
Merge: 2fe24ac 2e95773
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 13 15:30:47 2015 -0400

    Merge pull request #3791 from eerhardt/ShimD2I
    
    Shim all the d2i_* functions in OpenSSL.

[33mcommit 072085d5b0eafcca204d41ccbd5c9e7ce24371d6[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Tue Oct 13 12:07:33 2015 -0700

    Update var to type, fix index, update proj property

[33mcommit 2e9577325e194f4624a4af917c7ac8e7b4ed63ee[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Oct 12 16:28:50 2015 -0500

    Shim all the d2i_* functions in OpenSSL.

[33mcommit f690ad4bbc31d8aed74704d2871179aaf63bae77[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Oct 12 21:37:39 2015 -0700

    Make Unix ECDSA support the Windows signature format.
    
    OpenSSL's ECDSA signature routine returns a signature block conforming to the structure embedded in a certificate:
    SEQUENCE(
      r INTEGER,
      s INTEGER
    )
    
    Windows creates an array of BitsToBytes(KeySize) for each of r and s, then returns the concatenation of their values.
    
    Since ECDsaCng was added in .NET 3.5 as a thin wrapper over the Windows API, that's the .NET data format.
    
    ECDsaOpenSsl converts the Windows format to the OpenSSL format on VerifyHash, and the OpenSSL format to the Windows format on SignHash.
    
    Signatures produced with values prior to this commit will no longer verify, only the Windows format is supported.

[33mcommit b77611ae9cc9c3df80c8cc1c67809a55fa7b69a5[m
Author: bjjones <brandon1.jones@intel.com>
Date:   Tue Oct 13 11:21:07 2015 -0700

    Replaced Crc32helper with improved Slicing-By-8 algorithm

[33mcommit 2fe24acc9217c7ea3328c544bab161b8734eca03[m
Merge: 85388f5 c71e33b
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Oct 13 10:37:09 2015 -0700

    Merge pull request #3809 from pgavlin/PacketInformationCoverage
    
    Fix bugs in IPPacketInformation.

[33mcommit 85388f55971bc57fe0f092ce0b617478bc8f0aba[m
Merge: db552be c994d15
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 13 12:32:14 2015 -0400

    Merge pull request #3808 from stephentoub/disable_more_sockets
    
    Disable another failing sockets test

[33mcommit db552be1364eea75cb6201656f000a51ce8711a1[m
Merge: 8798434 4b4694d
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Tue Oct 13 08:51:53 2015 -0700

    Merge pull request #3795 from bartonjs/unix_ecdsa_256
    
    Enable support for secp256r1 (NIST-P256) in Unix ECDSA

[33mcommit c994d159b0ea35bcc0d4dd0d02d2698a358e920c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Oct 13 11:50:59 2015 -0400

    Disable another failing sockets test

[33mcommit c71e33bf580075bbee039ce7ea99e231dc9bbda4[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Oct 13 08:49:04 2015 -0700

    Fix bugs in IPPacketInformation.
    
    - GetHashCode() and Equals() both stood the chance of dereferencing a null
      pointer when called on default values.
    - GetHashCode() was using a weak method of combining hash codes. This has
      been updated to use the same technique used by Roslyn.
    - The equality and inequality operators were unnecessarily boxing input
      parameters.

[33mcommit 8798434ae67383524de37f3e8d33711c5b5ecba7[m
Merge: 1b732fd bd9e69e
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Oct 13 07:24:47 2015 -0700

    Merge pull request #3805 from nguerrera/srm-nuspec-readme
    
    Update README, remove obsolete nuspec

[33mcommit bd9e69e80c8326e16a1915e9947baf33cb45141a[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Oct 13 06:19:19 2015 -0700

    Remove out-of-date S.R.Metadata nuspec

[33mcommit da659e41bd1c0a34db69e2cce327ef36af1d5356[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Oct 13 06:17:29 2015 -0700

    Update README to use myget dev feed for all packages

[33mcommit f939cc60419a315235081c580983347f97eed6e7[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Oct 12 21:33:25 2015 -0700

    Create a simple DER encoder.
    
    Presently it only supports encoding (unsigned) integers, and sequences.  More functionality can be added as it is needed.

[33mcommit ead1920f6313e7b1713ceaf2669eb2dab8c0017b[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Oct 12 21:27:34 2015 -0700

    Add DerSequenceReader tests in S.S.C.Encoding
    
    One day a successor to DerSequenceReader might be public,
    and it would live in the Encoding library, so add the tests there.
    
    The X509 library already has some indirect tests of the functionality, but this sets the stage for a place to add more tests.

[33mcommit 1823068b9b61dc7f218409aff47ff1e4c2667363[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Oct 12 11:06:21 2015 -0700

    Move DerSequenceReader to CommonSrc

[33mcommit 1b732fd7225ed3f05a9fbf146376319213ec2e71[m
Merge: b552a64 460f7ff
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 13 08:12:12 2015 -0400

    Merge pull request #3801 from bartonjs/fixlocks
    
    Update the project.lock.json files which were invalidating all locks

[33mcommit 377080a540d950029099bc3e7aad197f7b566364[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Oct 13 12:00:05 2015 +0100

    Remove always-true test.
    
    One overload of `Block` uses `as IReadOnlyList<Expression>` and a null-check on
    a variable that will never be null, and of a type that implements
    `IReadOnlyList<Expression>` and hence will always take that branch.
    
    Change to just use that variable directly.

[33mcommit 6f97dd1e57948079dbe04b6a59ee444d02a21671[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Oct 13 11:51:40 2015 +0100

    Reduce allocations in Enumerable.Block
    
    Don't call `ToArray()` in `GetOptimizedBlockExpression()` if the argument is
    a `ReadOnlyCollection`, to work with the attempts throughout the project to
    reduce allocations of such collections.
    
    Conversely, don't call `ToReadOnlyCollection()` in one of the `Block()`
    overloads if the source already implements `IReadOnlyList` to allow lighter
    array objects to be used more often.

[33mcommit bfa812bd8d362f9f7cba8a75711a16213a7751a1[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Oct 13 11:32:00 2015 +0100

    Remove needless checks on creating ReadOnlyCollection in Linq.Queryable
    
    System.Linq.Queryable uses ReadOnlyCollectionExtensions to create
    ReadOnlyCollection instances in a way that should increase aliasing (hence
    reducing allocations), and guarantee that the underlying collection is not
    mutated elsewhere.
    
    However, the only paths that hit it do so with collections that will never
    be already ReadOnlyCollection (one possible alias opportunity gone) or empty
    or null (the other gone). Nor will the collections ever be accessed by any
    other code (removing the risk of mutation).
    
    Futher, while the use of `ToArray()` also gives the lightest possible choice
    for contained collection, with an advantage on memory pressure if the instance
    was long-lasting, all collections so-produced are soon eligible for collection,
    so calling `ToArray()` just leads to more allocations unnecessarily, along with
    having a more costly interface invocation.
    
    Therefore, replace such uses with `List<T>`'s `AsReadOnly()`.

[33mcommit b552a644c1c1ca107f795de15cecfe3d5edfacd4[m
Merge: 7daa37c 5a37b66
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Tue Oct 13 12:01:26 2015 +0530

    Merge pull request #3742 from rajansingh10/Netfeature
    
    Fixed consecutive SSL stream write issue in System.Net.Security, introduced by PR#3675

[33mcommit 5a37b66d98464dba2aca5fe73b5ece2051837b83[m
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Fri Oct 9 15:27:18 2015 +0530

    Fixed second write issue, introduced by PR#3675

[33mcommit 460f7ff5241aa6575bb0742dc1c12a7ad4bba38c[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Oct 12 21:58:06 2015 -0700

    Update the project.lock.json files which were invalidating all locks

[33mcommit f621f39ed52fb168e8a071697e4d90a20b17a338[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Mon Oct 12 16:35:49 2015 -0700

    Add perf test to deserialize large object graph

[33mcommit 7daa37cb7bcb5765cc26af2688548da26b990401[m
Merge: 2eead41 c608bc2
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Oct 12 16:34:22 2015 -0700

    Merge pull request #3560 from nguerrera/portable-pdb
    
    Add portable PDB reader to System.Reflection.Metadata

[33mcommit 4b4694d60621f5185bccc8cbb892d19544418289[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Sun Oct 11 10:14:31 2015 -0700

    Enable support for secp256r1 (NIST-P256) in Unix ECDSA

[33mcommit c608bc2ba3291f695a96b876e920907f22807d08[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Oct 12 12:54:59 2015 -0700

    Respond to PR feedback

[33mcommit 2eead4151f3aea89829b2e3bc68278d5f06d9710[m
Merge: e1f34ac 7ffcdf1
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Mon Oct 12 15:56:23 2015 -0700

    Merge pull request #3773 from bartonjs/unix_getecdsapublickey
    
    Implement GetECDsaPublicKey for Unix.

[33mcommit e1f34ac00ce182ab042e4cbd1a04903ad25208a7[m
Merge: acf5f71 d4836ff
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Mon Oct 12 15:38:23 2015 -0700

    Merge pull request #3792 from sokket/shim
    
    Removing stale interop file that is no longer called

[33mcommit acf5f71fbf8a6d6bf1081c6a9d326623b9337d78[m
Merge: 7445782 11b457d
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Mon Oct 12 15:25:27 2015 -0700

    Merge pull request #3549 from JeremyKuhne/GetFullPath
    
    Address perf for GetFullPath and defer to OS.

[33mcommit 7ffcdf16cd9dd89120caa4b7378a8bb8bc291e10[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Fri Oct 9 19:12:15 2015 -0700

    Implement GetECDsaPublicKey for Unix.
    
    Unfortunately, the test for this was the first place where Windows ECDsa and Unix ECDsa were in the same place with the same key, and it was observed that they do not use the same data format for Sign/Verify.  This problem is tracked in issue 3769.

[33mcommit d4836ff6e87f58db55ce4d58c63a46b99bc9b4c0[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Mon Oct 12 14:49:40 2015 -0700

    Removing stale interop file that is no longer called

[33mcommit 5e7f8e7157ca278cc029fe66080cbffb2ce380fd[m
Author: Steve Harter <sharter@microsoft.com>
Date:   Fri Oct 9 17:22:18 2015 -0500

    Add test for non invariant default locale and test for locale with collation

[33mcommit 7445782a678699b1c17010cf32bcac81e92c7b28[m
Merge: 366b1a0 349edc9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 12 16:40:12 2015 -0400

    Merge pull request #3767 from stephentoub/fix_curlhandler_pullpush
    
    Update CurlHandler to use HttpContent.CopyToAsync

[33mcommit 366b1a08485539d21893055543f62ce5fdf7e939[m
Merge: 708c8e5 a8e001d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 12 16:37:03 2015 -0400

    Merge pull request #3786 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 349edc9f77c2aedb36f54a0e971219a733a27c64[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Oct 10 20:43:43 2015 -0400

    Address PR feedback
    
    - Ensure CurlException in addition to IOException is wrapped in an HttpRequestException
    - Consolidate such wrapping to one place
    - Update a comment
    - Check for already disposed in Dispose

[33mcommit 708c8e599c071d953f8ce5e9b91bc726d5d425b7[m
Merge: 167450b b76db20
Author: VSadov <vsadov@microsoft.com>
Date:   Mon Oct 12 12:51:27 2015 -0700

    Merge pull request #3763 from bartdesmet/Issue-3758
    
    Fixing expression interpreter for Increment and Decrement nodes

[33mcommit 52aace9364de641030affa8c1c6a5d24526a65ae[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Oct 10 08:12:58 2015 -0400

    Improve perf for synchronous CopyToAsync
    
    It's common for the HttpContent to synchronously give back a Task from CopyToAsync and for CopyToAsync have synchronously initiated a WriteAsync.  In such cases, the previous commits would have made that asynchronous by scheduling it in a Task, which means that it's more likely a subsequent ReadAsync from a libcurl callback would end up having the ReadAsync complete asynchronously, which is expensive due to the pausing infrastructure.
    
    This change removes the asynchronous scheduling of CopyToAsync, making it more likely that synchronously available data will be available by the first ReadAsync call.

[33mcommit 993e5f482a6ebbf9c1a19092dd9b93d70008f812[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Oct 10 01:16:47 2015 -0400

    Fix CurlHandler to only wrap IOExceptions
    
    When a failure occurs, we're currently wrapping all exception types except for HttpRequestException.  To match the desktop and WinHttpHandler behavior, we should only be wrapping IOExceptions.

[33mcommit 3678490e2d53d9a9fca6c7e50daadd7152b836f7[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Oct 10 01:09:07 2015 -0400

    Update CurlHandler to use HttpContent.CopyToAsync
    
    To get a request content stream, CurlHandler currently uses the
    HttpContent's ReadAsStreamAsync, and when libcurl needs to rewind the
    stream, CurlHandler seeks on the stream.
    
    Unfortunately, it turns out ReadAsStreamAsync isn't actually intended to
    be used by handlers in this manner, and as such there are some
    deficiencies that lead to correctness problems.  For example, some of the
    WCF HttpContent-derived types return non-seekable streams from
    CreateContentReadStreamAsync and thus from ReadAsStreamAsync.  This means
    that, using ReadAsStreamAsync, if we need to resend a request, we need to
    call ReadAsStreamAsync again. But ReadAsStreamAsync doesn't do the same
    _contentConsumed check that SerializeToStreamAsync does. That means if the
    content is actually a StreamContent, whose CreateContentReadStreamAsync
    just does ```return Task.FromResult(new
    ReadOnlyStream(this._content));```, and if the stream is non-seekable,
    then we'll end up getting back the "new" stream but that's already had its
    content consumed, and we won't know. We can't even try to do an object
    reference comparison, because StreamContent is wrapping the returned
    stream in a new ReadOnlyStream instance each time.  The recommended
    approach for handlers is to use HttpContent.CopyToAsync.
    
    CopyToAsync is a push-based model, letting the HttpContent write to a
    target stream.  CurlHandler/libcurl have a pull-based model, with
    CurlHandler ReadAsync'ing from the request content based on callback from
    libcurl.  To straddle this divide, this commit adds a specialized
    push/pull adapter stream that let's CurlHandler effectively read from the
    pushing source.  If/when libcurl asks to rewind, the stream resets itself
    by doing a new CopyToAsync operation.
    
    This revised approach does incur more costs, however care has been taken
    to try to minimize those overheads as much as possible, and the change is
    necessary for correctness.

[33mcommit a8e001d3bedad956fa36f535162577a0c1260905[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Mon Oct 12 12:42:59 2015 -0700

    Adding NegotiateStream contract and a temporary no-op implementation within both System.Private.Networking and System.Net.Security within the Open partition.
    
    [tfs-changeset: 1536739]

[33mcommit 167450bc29acfc84fe354127b8efc43f3621b0bb[m
Merge: 1e3b1b9 7ea03d6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 12 15:40:43 2015 -0400

    Merge pull request #3782 from sokket/formatting
    
    Fixing up the formatting of the native code

[33mcommit 1e3b1b975a10d66ef16504a4a706e256863e5bb8[m
Merge: 297c989 6a73faa
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 12 15:40:32 2015 -0400

    Merge pull request #3783 from stephentoub/disable_sockets_test
    
    Disable failing ConnectV4MappedIPEndPointToV4Host_Success test

[33mcommit 297c9895a886e95073f5244d6346423b586394c6[m
Merge: eefccc4 b30a71b
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Mon Oct 12 12:33:49 2015 -0700

    Merge pull request #3768 from CIPop/SNSecurityPalPR
    
    Refactoring System.Net.Security PAL

[33mcommit eefccc4926db57cb48679cc425089dd9974bc33f[m
Merge: 1f09da3 8416bfb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 12 15:09:43 2015 -0400

    Merge pull request #3756 from eerhardt/ShimEncoding
    
    Shim ASN1 native calls to OpenSSL.

[33mcommit 1f09da3af8bd261ae48e6405b98daf6f7fe516b3[m
Merge: 2adb413 9a5546c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 12 15:09:10 2015 -0400

    Merge pull request #3774 from stephentoub/cleanup_test_folder
    
    Reorganize src\Common\tests\ a bit

[33mcommit 2adb413dacc7e00ddf48bba74502896613971ea5[m
Merge: b641e4f cb3724d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 12 14:57:27 2015 -0400

    Merge pull request #3781 from rainersigwald/recursive-delete-trailing-slash
    
    Allow recursive Directory.Delete of paths with trailing slash

[33mcommit b641e4feb23f92a16c66b98ebda2ccfcec5d24d7[m
Merge: ceae1d3 99f1c96
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 12 14:56:30 2015 -0400

    Merge pull request #3775 from Maxwe11/trimming
    
    Avoid unnecessary trimming in FrameworkName c-tor

[33mcommit 17008854c7cb4007061ad5c7dc4871e142ddbff5[m
Merge: 980abfe ceae1d3
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Oct 12 11:32:26 2015 -0700

    Merge branch 'master' into portable-pdb
    
    Conflicts:
    	src/System.Reflection.Metadata/src/System/Reflection/Metadata/Internal/MetadataFlags.cs
    	src/System.Reflection.Metadata/src/System/Reflection/Metadata/MetadataReader.cs

[33mcommit 7ea03d642fbf969cd79a96388e6ada0d36af96a3[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Mon Oct 12 10:49:41 2015 -0700

    Fixing up the formatting of the native code (everything under src/Native)
    to adhere to our style guidelines.

[33mcommit 6a73faa3f26e84dcbd4fc058a5f41ee58c236537[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Oct 12 14:16:59 2015 -0400

    Disable failing ConnectV4MappedIPEndPointToV4Host_Success test

[33mcommit 980abfe862e3bd4fed523f066aeea9206a906905[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Oct 12 11:13:10 2015 -0700

    Convert enumerators to enumerables

[33mcommit b30a71bfd0919c2d69fedbe3e2139331c5110ae1[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Sat Oct 10 15:55:48 2015 -0700

    Refactoring SslStreamPal.

[33mcommit e2338f9c1c2923d04d7c485cf470442c0645a950[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Mon Oct 12 09:47:50 2015 -0700

    Multi-part method bodies should have MethodDebugInfo.Document set to nil

[33mcommit cb3724deb88743495f8b73f56509267db9796300[m
Author: Rainer Sigwald <raines@microsoft.com>
Date:   Mon Oct 12 11:30:50 2015 -0500

    Allow recursive Directory.Delete of paths with trailing slash
    
    Fixes #3780.
    
    FindFirstFile with a normal path will happily collapse multiple
    backslashes into a single logical path separator, but when presented
    with a `\\?\` path, that doesn't happen.  As a result, unconditionally
    concatenating a path-separator was fine until RemoveDirectoryHelper was
    always called with EnsureExtendedPrefix (which is needed for extended
    path support, introduced in 0721434).  With that, Win32 FindFirstFile
    returns an error if there's a double backslash in the path beyond the
    prefix.

[33mcommit 0d20ff2a17085211845a17584c08457487f9ea0a[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Mon Oct 12 00:29:19 2015 -0700

    Renames and public API polish

[33mcommit 2ac2ecb43b9c7277a3611d6b46fe10e630353063[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Sun Oct 11 23:56:03 2015 -0700

    Propertize public fields

[33mcommit 6b467ba3b880fe8da81d99a220e6b025e64e04df[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Sun Oct 11 23:08:24 2015 -0700

    Check that debug tables are declared sorted

[33mcommit b0e64fa23c2a2ff05bd09d9b9fd446540016d091[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Sun Oct 11 18:27:17 2015 -0700

    Rename MethodBodies to MethodDebugInformation

[33mcommit e6103255e1fddd37114dbb0765be9edb4374731a[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Sun Oct 11 18:23:57 2015 -0700

    Add MethodDefinitionHandle.ToDebugInformation and MethodDebugInformation.ToDefinition methods

[33mcommit e6b4510b8f0f36585c978d9c9959726bb6d743a5[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Sun Oct 11 18:06:21 2015 -0700

    Rename MethodBody table to MethodDebugInformation

[33mcommit a49cd4f13ea13359a63e7b1709f308aecd8d868c[m
Author: Tomas Matousek <tomas.matousek@microsoft.com>
Date:   Sun Oct 11 17:39:32 2015 -0700

    Portable PDB v1.0

[33mcommit 99f1c96f8e2b966d601b416006284a5b458aca82[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Sun Oct 11 23:39:49 2015 +0300

    Avoid unnecessary trimming in FrameworkName c-tor

[33mcommit 9a5546c439f7700d3462564678aa4206c7fbf4f1[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Oct 11 15:44:39 2015 -0400

    Reorganize src\Common\tests
    
    Our common tests folder has gotten a bit unwieldy in its organization.  This change simply moves files around to better map to how src\Common\src is organized.  Files are now stored in a path based on functionality/namespace.
    
    I mostly kept groups of functionality together and did not attempt to reorganize at that level, e.g. I moved the src\Common\tests\System.Xml.XPath\ folder to be src\Common\tests\System\Xml\XPath\ and did not further reorganize all of the folders/files it contains.  Such cleanup can be done separately on each individual area.
    
    Some of the files also need to be cleaned up internally, e.g. the namespace (or lack thereof), so I put such things in a path that I thought made sense even if it differs from the current namespace in the file; I wanted this change to be relatively simple and just be about moving files around to clean up the main hierarchy.

[33mcommit ceae1d38c93e3f53210ad91884dabc1bd6d30a90[m
Merge: 4554758 df648a8
Author: VSadov <vsadov@microsoft.com>
Date:   Sat Oct 10 15:26:52 2015 -0700

    Merge pull request #3527 from JonHanna/queryable_remove_redundancies
    
    Remove some redundancies from System.Linq.Queryable

[33mcommit 4554758fbfe2aee3a8c18420d00104af761307cf[m
Merge: daa6140 01ee1a9
Author: VSadov <vsadov@microsoft.com>
Date:   Sat Oct 10 08:55:33 2015 -0700

    Merge pull request #3547 from JonHanna/enumerablequery_prevent_stackoverflow
    
    Prevent stack overflow from EnumerableQuery of null enumerable

[33mcommit b76db20fff136580c37139741718421216894d4e[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Fri Oct 9 16:14:08 2015 -0700

    Adding tests for Increment and Decrement nodes.

[33mcommit 7f5d9230c52e62801d5be41b5fc57c1d9e8aa430[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Fri Oct 9 15:43:59 2015 -0700

    Fixing interpreter for Increment and Decrement nodes.

[33mcommit daa61406917558e886f6273af1d07a2f2aa12412[m
Merge: 5965fd3 4f69298
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 9 21:20:11 2015 -0400

    Merge pull request #3757 from stephentoub/reenable_linq_tests
    
    Reenable System.Linq.Expressions tests on Unix

[33mcommit 5965fd3756bc9dd9c89a27621eb10c6931126de2[m
Merge: 808c134 58c709f
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Oct 9 16:36:48 2015 -0700

    Merge pull request #3752 from davidsh/certificate_tests
    
    Add more WinHttpHandler client certificate tests

[33mcommit 8416bfb00bf369fb77e1a43bfeaff40ec8cd531f[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Oct 9 18:29:53 2015 -0500

    Respond to PR feedback.

[33mcommit 808c1349372a7d713127bca979cc66652730b8e5[m
Merge: d1eba76 bb146ee
Author: Pallavi Taneja <pallavit@users.noreply.github.com>
Date:   Fri Oct 9 16:25:28 2015 -0700

    Merge pull request #3683 from pallavit/Issue#3558_3559
    
    Expose Console.WindowWidth and Console.CursorVisible

[33mcommit d1eba76bc903286eb322a25d5ec37b367fa3bda9[m
Merge: eff8394 663b0d9
Author: VSadov <vsadov@microsoft.com>
Date:   Fri Oct 9 14:21:29 2015 -0700

    Merge pull request #3754 from bartdesmet/Issue-3750
    
    Fixing expression interpreter for NegateChecked overflow behavior

[33mcommit bb146eef1b193bff3af0cf34c4096e40f3d4fff2[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Fri Oct 9 14:12:37 2015 -0700

    Incorporate feedback comments

[33mcommit 4f69298459deaf4b2ad2d48d8837b40b375f9627[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Oct 9 16:59:45 2015 -0400

    Reenable System.Linq.Expressions tests on Unix
    
    https://github.com/dotnet/corefx/issues/3712

[33mcommit eff8394ba35c88375dc3a493904b27afcf9ecca4[m
Merge: a5b83ba 6f8fb64
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 9 16:44:30 2015 -0400

    Merge pull request #3755 from stephentoub/reenable_http_encoding_tests
    
    Re-enable HttpClient encoding tests on Unix

[33mcommit a5b83ba4ccce0a2c3f079a868bde254eca1754ad[m
Merge: ce490c4 671d3a2
Author: VSadov <vsadov@microsoft.com>
Date:   Fri Oct 9 13:24:40 2015 -0700

    Merge pull request #3747 from bartdesmet/Issue-3737
    
    Adding OnesComplement node support in the expression interpreter

[33mcommit 6f8fb64d2a994dc120b1ab539d0a2e93030c6663[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Oct 9 16:14:25 2015 -0400

    Re-enable HttpClient encoding tests on Unix

[33mcommit 2988ead97f043f01213dc1097b2c9f6a0697493b[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Oct 9 15:10:01 2015 -0500

    Shim ASN1 native calls to OpenSSL.
    
    Added shims for all native calls in Interop.ASN1.cs.

[33mcommit 663b0d909aa02c2352d6d928aace76126021c24b[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Fri Oct 9 11:59:55 2015 -0700

    Adding tests for NegateChecked nodes.

[33mcommit 58d62ad8d239d1068d3c72ed8ad7ac7558cd7557[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Fri Oct 9 11:59:35 2015 -0700

    Fixing checked expression scope for NegateChecked instructions.

[33mcommit 62f015a436580c2f939de68610a281228f1ce929[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Fri Oct 9 11:47:03 2015 -0700

    Removing unused interpreter instructions.

[33mcommit ce490c45745ef1564c8861ca04912f5c51c0e837[m
Merge: cd26f44 39ff855
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 9 15:58:01 2015 -0400

    Merge pull request #3540 from eerhardt/Encodings
    
    Enabling fixed System.Text.Encoding tests.

[33mcommit b806d1d7d9028950382e4dfc033fd3a29582994a[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Tue Oct 6 17:02:52 2015 -0700

    Expose Console.WindowWidth and Console.CursorVisible

[33mcommit cd26f4483a9ab18bb1ffc62150622329dca4437e[m
Merge: 9a99095 4d05588
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Fri Oct 9 11:51:57 2015 -0700

    Merge pull request #3735 from pgavlin/SocketShims2
    
    Shim socket addresses.

[33mcommit 58c709f1521ab55a7e358d32bd331987259fdc43[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Oct 9 11:40:04 2015 -0700

    Add more WinHttpHandler client certificate tests
    
    Added a fake X509Store to the unit tests. Add tests related to
    WinHttpHandler ClientCertificateOption.Automatic property setting.

[33mcommit 4d05588d45a4543ebaffbcdc28a13e22eecd08fd[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Fri Oct 9 10:45:39 2015 -0700

    Address PR feedback.

[33mcommit 671d3a2c4efbd0036f5920eba46b19c7ed5670dd[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Fri Oct 9 10:35:26 2015 -0700

    Adding tests for OneComplement nodes.

[33mcommit edc7e586871288be44b522973a4dad939c82d95f[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Fri Oct 9 10:35:03 2015 -0700

    Adding OnesComplement node support to the interpreter.

[33mcommit 9a9909503e82d3eee09d9b80f18d3c807eaf48fa[m
Merge: 2297fef 0d0e2f9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 9 12:49:22 2015 -0400

    Merge pull request #3710 from stephentoub/networkstream_async
    
    Implement NetworkStream.ReadAsync/WriteAsync

[33mcommit 2297fef1cf73c80f40c2aee422fce1c6d97bcd66[m
Merge: e58596b edcbae6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 9 12:00:27 2015 -0400

    Merge pull request #3650 from pallavit/Issue#2353
    
    Expose Console.Is[Input\Output]Redirected APIs

[33mcommit 2ecf78b022de3463e67a5b5f9164bcf8a3242bca[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Fri Oct 9 08:21:51 2015 -0700

    Remove sockaddr type definitions.

[33mcommit e58596be7a6903648e4d998dfd2c1d0035959e03[m
Merge: 46fbf55 63b05c3
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Oct 9 08:08:32 2015 -0700

    Merge pull request #3736 from bartonjs/unix_sslstream_ca_list
    
    Read the allowed certificate issuers list on Unix SslStream

[33mcommit 63b05c3daa624e166fe5b18de5f8e52b5c007f28[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Oct 7 17:08:46 2015 -0700

    Implement GetRequestCertificateAuthorities for the Unix PAL

[33mcommit 46fbf5532c12fa3bb742e70d772226c21e8e2c69[m
Merge: e49cfb4 7584d1d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 9 10:08:44 2015 -0400

    Merge pull request #3692 from stephentoub/stringbuilder_marshaling
    
    Fix StringBuilder marshaling directions in Common\src\Interop

[33mcommit e49cfb4a5da35a56d363df2e579478cd918a3391[m
Merge: 860c11c 9237d6f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 9 10:02:11 2015 -0400

    Merge pull request #3743 from stephentoub/disable_net_tests
    
    Disable three Sockets tests

[33mcommit 860c11c36547835a5402705da8e5379af131d808[m
Merge: f862cf0 42fe388
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 9 09:58:48 2015 -0400

    Merge pull request #3745 from JonHanna/remove_unsued_collection_copy
    
    Remove CollectionExtensions.Copy which is no longer used.

[33mcommit 42fe388c2691d8118b430c7627bf31b98d70bd68[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Oct 9 14:15:34 2015 +0100

    Remove CollectionExtensions.Copy which is no longer used.

[33mcommit 9237d6fe8f1259b1828562180ca3e21617ca0a68[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Oct 9 08:34:11 2015 -0400

    Disable three Sockets tests
    
    These have been failing with some frequency, one on Windows, two on Linux.

[33mcommit 7584d1d0a557ad8843a34559e2c9a026af5f4fae[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Oct 7 10:56:48 2015 -0400

    Fix StringBuilder marshaling across Common\src\Interop
    
    StringBuilders by default are marshaled both In and Out.  Both directions incur cost.  But in most of our uses in corefx, we only care about marshaling in one direction, either passing the contents of the StringBuilder into the native function for it to use, or passing in an empty buffer for the native function to fill.  We can save most of the marshaling costs for the other direction by being explicit about [In] or [Out].

[33mcommit f862cf044c0246635dd5c69e41ec547d32639eb1[m
Merge: dea1e8c 287baea
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 9 08:10:32 2015 -0400

    Merge pull request #3720 from stephentoub/fix_curlhandler_scheme_checking
    
    Remove unnecessary scheme check in CurlHandler

[33mcommit dea1e8c17f7d49bb4caa14b7c5799f0fec1b55c0[m
Merge: 1f70f1a b52306a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 9 08:10:15 2015 -0400

    Merge pull request #3733 from weshaggard/FixConflictWarnings
    
    Fix dependency conflicts by explicitly matching them

[33mcommit 1f70f1a0a1b0452e00b5a48c7f178978691a6227[m
Merge: adb84f7 4542d21
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 9 08:09:44 2015 -0400

    Merge pull request #3738 from weshaggard/LockSDDStestlockfile
    
    Lock the S.D.DiagnosticSource\tests\project.lock.json

[33mcommit 4542d2179977c8199a9267bf64ff14cc20b7b7de[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Thu Oct 8 23:36:03 2015 -0700

    Lock the S.D.DiagnosticSource\tests\project.lock.json

[33mcommit adb84f7a61c322ef4aa67293b4ccf11f27b6b1f8[m
Merge: 68acb0f b378315
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Thu Oct 8 19:24:17 2015 -0700

    Merge pull request #3734 from pgavlin/FixBuildSh
    
    Fix test RID in build.sh.

[33mcommit ecc092e2dcc87a3a17370ff6951dc48c6b37fea7[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Thu Oct 8 17:17:44 2015 -0700

    Shim socket addresses.
    
    The socket address shim adds native accessors for the various bits that
    managed code needs to access, namely:
    - Address families
    - Port numbers
    - IP addresses
    
    This change also updates the name resolution shim to use an iterator-based
    design for walking host entries. This interface trades chattiness (a
    P/Invoke per IP address) for memory footprint (various native and managed
    allocations per IP address).

[33mcommit b378315358a25c7edc708d7930f0568176d3aa16[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Thu Oct 8 18:34:45 2015 -0700

    Fix test RID in build.sh.
    
    build.sh was not properly setting the test RID when invoked without
    a target OS parameter.

[33mcommit 0d84ed5d7597ad29e3deddaf333b57736f5977de[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Oct 7 16:07:18 2015 -0700

    Create SafeInteriorHandle from SafeSharedX509StackHandle.
    
    Extract the parent tracking logic to a base class to enable the generation of more SafeShared*Handle types without having to duplicate the logic.

[33mcommit 892731282ae4d69667112b2c2ba996fe41ece435[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Oct 7 15:08:52 2015 -0700

    Move LoadX500Name to Interop.Crypto to facilitate sharing

[33mcommit b52306a2df60c2a73392ffe09364e2a8d4f6c03d[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Thu Oct 8 17:32:45 2015 -0700

    Fix dependency conflicts by explicitly matching them
    
    We had a number of conflicts that could cause issues in the future
    plus I wanted to clean out all the warnings.
    
    This should take care of all the warnings of the form:
    
     C:\Program Files (x86)\MSBuild\14.0\bin\Microsoft.Common.CurrentVersion.targets(1819,5):
     warning MSB3277: Found conflicts between different versions of the same dependent assembly that could not be resolved.
     These reference conflicts are listed in the build log when log verbosity is set to detailed.

[33mcommit 68acb0fc2c4d6ea1425b0d885329aaea208ba057[m
Merge: 63155e1 7aa4a1f
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Oct 8 16:49:05 2015 -0700

    Merge pull request #3731 from davidsh/more_http_tests
    
    Add test to verify default values for HttpClientHandler

[33mcommit 63155e1050ba52113699a41d5eabec4c2f9e8073[m
Merge: c61cbbc 01d8922
Author: Josh Free <joshfree@users.noreply.github.com>
Date:   Thu Oct 8 16:22:18 2015 -0700

    Merge pull request #3732 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 0d0e2f9ce2301befe3396c5c5c9aecb1c8cf5dc8[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Oct 7 22:02:21 2015 -0400

    Add a few NetworkStream tests

[33mcommit 1c5957c4e80a140a92a1b4d11bcc32e106cbc650[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Oct 7 20:39:43 2015 -0400

    Add NetworkStream overrides of ReadAsync/WriteAsync
    
    NetworkStream currently implements its async functionality via the APM Begin/EndRead/Write methods.  In the full Framework, the base Stream exposes these methods as well, as virtual, and NetworkStream's override the base ones.  Then the base Stream's ReadAsync/WriteAsync implementations use these for their implementation, which means NetworkStream gets at least a basic async ReadAsync/WriteAsync implementation "for free".
    
    In corefx, however, Stream doesn't expose the Begin/End methods, which means NetworkStream's Begin/End methods don't override them, which means NetworkStream's ReadAsync/WriteAsync methods are currently just using the base implementation that queues a work item to call the synchronous Read/Write methods.  That's far from ideal for a stream focused on I/O with high latency.
    
    This commit just adds basic implementations of NetworkStream.ReadAsync/WriteAsync that use TPL's FromAsync methods to delegate to the Begin/End methods, very similar to how the base class would have.
    
    There are currently no unit tests for NetworkStreamin the repo, so I haven't added any yet for these new methods.  However, there is an existing functional test that does use ReadAsync/WriteAsync, so they're getting at least some coverage.

[33mcommit 7aa4a1f71640351230943fa06f51602cb2c07cb3[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Oct 8 15:35:10 2015 -0700

    Add test to verify default values for HttpClientHandler
    
    Ported this test to GitHub.
    
    Note that the change in default values between Desktop and CoreFx for two
    of the properties is an "intentional, improving, change".

[33mcommit c61cbbc1a0fd82da03fde040e86534b19d08902f[m
Merge: 694f546 43a0be8
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Oct 8 17:26:06 2015 -0500

    Merge pull request #3721 from eerhardt/CryptoErr
    
    Shim OpenSSL ERR* methods.

[33mcommit 694f546b4e842eb395c271a1c8268aa891ace528[m
Merge: 820073f 2296861
Author: chcosta <chcosta@microsoft.com>
Date:   Thu Oct 8 15:21:15 2015 -0700

    Merge pull request #3728 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 820073fe591d7550761c21b4cca9a38a2a967ba7[m
Merge: 6cfe6c0 870810a
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Oct 8 15:08:04 2015 -0700

    Merge pull request #3727 from davidsh/more_http_tests
    
    Add more HTTP tests

[33mcommit 01d8922dc2bb8ad79ec96c05e08a6aec2205a989[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Oct 8 14:37:26 2015 -0700

    XPlat packaging for System.Net.Security
    
    [tfs-changeset: 1535271]

[33mcommit 2296861acbd90afa3b4d9305e0c92702d42f7cc4[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Oct 8 14:35:35 2015 -0700

    XPlat packaging for System.Net.Sockets
    
    [tfs-changeset: 1535270]

[33mcommit 870810a3a50b41acc088a907dd7a5ea88a214ec8[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Oct 8 14:00:31 2015 -0700

    Add more HTTP tests
    
    Ported some missing tests to GitHub. Cleaned up some of the existing
    tests.

[33mcommit 43a0be87f84678eb626aadccfced0dcc9ffbf1d6[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Oct 8 15:34:46 2015 -0500

    Respond to PR feedback.
    
    Returning a boolean from ErrGetError so managed code doesn't need knowledge of OpenSSL constants.

[33mcommit 6cfe6c0267e651b488fb8db5cf9a42d423b442b8[m
Merge: 6c0729d fd4be8f
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Oct 8 12:31:04 2015 -0700

    Merge pull request #3724 from davidsh/fix_httpwebrequest_tests
    
    Renable some HttpWebResponse tests

[33mcommit 184a657220bfd396c4fa7ce55e1caa230447031a[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Thu Oct 8 11:39:08 2015 -0700

    Making Compile overload for interpretation preference available unconditionally.

[33mcommit fd4be8fbb8edc08ce738dce6816a97ffb99b75db[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Oct 8 11:29:44 2015 -0700

    Renable some HttpWebResponse tests
    
    Modify tests checking for presence/absence of 'Content-Type' response
    headers. Switch to using the new HttpTestServers2 class which supports
    these kind of endpoints.
    
    Simplify the tests to be [Fact] and not [Theory]. These tests don't require
    to be run against both HTTP and HTTPS servers. I will be making these
    kinds of changes further in order to streamline the number of tests
    running in CI.
    
    This PR also fixes #2385.

[33mcommit edcbae6e373b1f9fe7ddab99b2d849dac1cd35d3[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Tue Oct 6 18:00:53 2015 -0700

    Incorporate feedback comments

[33mcommit 65d85a3a843a15e7d57686c16a773d998b1fb7b3[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Thu Oct 8 10:48:51 2015 -0700

    Changing Interpret to an overload of Compile.

[33mcommit 6c0729d608ab941bc3e242a9f4e3dc5a3e4f594f[m
Merge: a71df00 fd8d3b2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 8 13:47:28 2015 -0400

    Merge pull request #3723 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit a71df00d94451a255a92dd04ad6c594f225b9f12[m
Merge: 65dbf1c 8b6e00a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 8 12:52:03 2015 -0400

    Merge pull request #3719 from stephentoub/notimplemented_removal
    
    Remove NotImplemented.cs from several projects

[33mcommit 65dbf1ca87a0b9d711eb56e5139689a229360cfc[m
Merge: 091b26f 37d4e0f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 8 12:51:31 2015 -0400

    Merge pull request #3722 from stephentoub/unnecessary_todo
    
    Remove unnecessary TODO in CurlHandler

[33mcommit 091b26f636986e3bf49451a27a021514f74d91fd[m
Merge: b6a8864 f8ab366
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Oct 8 09:40:42 2015 -0700

    Merge pull request #3686 from bartdesmet/Issue-3297
    
    Use optimized N-ary BlockExpression nodes from all Block factories

[33mcommit b6a88649877f355498745a7b99d5611668584b83[m
Merge: 13e9425 2651028
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Oct 8 09:29:59 2015 -0700

    Merge pull request #3706 from bartdesmet/Issue-3149
    
    Fix for LeftShift and RightShift code generation in LambdaCompiler

[33mcommit fd8d3b21fea8f515955db1f654a4e36fde64f6ba[m
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Thu Oct 8 09:20:21 2015 -0700

    Don't set ProjectJson in X509Certificates if it's already set (NetNative compilation build break)
    
    [tfs-changeset: 1535143]

[33mcommit 5b85112a9cc9c4b7338ed9eb8d718c50e22ebe99[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Oct 8 09:44:50 2015 -0500

    Shim OpenSSL ERR* methods.
    
    Adding shims for all OpenSSL methods in Interop.ERR.cs.

[33mcommit 37d4e0f08ee24839be1475a07d236e4a820ad09c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Oct 8 11:12:17 2015 -0400

    Remove unnecessary TODO in CurlHandler
    
    This is handled by HttpClient.

[33mcommit 287baeadf7348f0c671a8bcd07842977935de215[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Oct 8 10:43:18 2015 -0400

    Remove unnecessary scheme check in CurlHandler
    
    CurlHandler is explicitly checking to ensure that the request URI scheme is either http or https. HttpClient already does this check before getting to this point, WinHttpHandler doesn't do the duplicative check, and even if a bad scheme sneaks in, our subsequent usage of libcurl will enforce that only http/htps are used. Replacing the check/exception with an assert.

[33mcommit 8b6e00ac6c376e7ec041e84270d518ca523a32a3[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Oct 8 08:50:35 2015 -0400

    Remove NotImplemented.cs from several projects
    
    A handful of projects are still including NotImplemented.cs even though they no longer need it.

[33mcommit 13e9425188dc54b0ad8780072bc5bc553bfa6604[m
Merge: 1a76cad 0c8525a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 8 08:19:57 2015 -0400

    Merge pull request #3019 from Maxwe11/xdoc-SDMsample-tests-to-xunit
    
    Convert System.Xml.XDocument.SDMSample.Tests to use Xunit

[33mcommit 1a76cadb039230e3ddc11cd2c26a755c0b8dedca[m
Merge: fd46a9e bbdcca6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 8 08:04:56 2015 -0400

    Merge pull request #3013 from Maxwe11/xdoc-streaming-tests-to-xunit
    
    Convert System.Xml.XDocument.Streaming.Tests to use Xunit

[33mcommit fd46a9edde064d7990c8c61392f88a98b1eb9957[m
Merge: 11eb90c 23e8c33
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 8 07:54:30 2015 -0400

    Merge pull request #3696 from rajansingh10/Netfeature
    
    Added exception messages to *.resx file. using Debug.Fail wherever ap…

[33mcommit 23e8c33df8557ff4cb16939f272f63d5ec99dffb[m
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Wed Oct 7 22:28:22 2015 +0530

    Added exception messages to *.resx file. using Debug.Fail wherever applicable. Fixed GetException.

[33mcommit 97ef471225c7eb52ea5b534baec46f89b446ac3f[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Thu Oct 8 00:37:25 2015 -0700

    Initial work to expose lambda interpreter alongside lambda compiler based on build flags.

[33mcommit 11eb90ccbeb5bd2565c84e91e76fb68f9c7b3cfa[m
Merge: 7430ba7 011a4be
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Wed Oct 7 23:36:00 2015 -0700

    Merge pull request #3670 from bartonjs/crypto_no_projref
    
    Remove project references in crypto libraries

[33mcommit 7430ba7ac7eb919cd2897a4ada0011700aaff28a[m
Merge: 9e603be 4ec244a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 8 00:19:14 2015 -0400

    Merge pull request #3631 from alexperovich/coverRODictionary
    
    Add test coverage for ReadOnlyDictionary

[33mcommit 9e603bedf489a9cf074d3e81ea408061c28777c9[m
Merge: 69baa39 a3df92d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 7 23:42:32 2015 -0400

    Merge pull request #3677 from eerhardt/EvpCipherShim
    
    Shim OpenSSL Evp_Cipher* methods.

[33mcommit 69baa3996ef54ac1582acac968914214ab59f36c[m
Merge: 364bb37 2b2470b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 7 23:40:26 2015 -0400

    Merge pull request #3713 from stephentoub/disable_sle_tests
    
    Temporarily disable System.Linq.Expressions tests on OS X

[33mcommit 364bb371f4c9a23ebd24bee2105f0ea170f09a4a[m
Merge: 3913153 77fb5b2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 7 20:53:29 2015 -0400

    Merge pull request #3700 from CIPop/SocketsTimeouts_PR
    
    Increasing timeout values for sockets tests.

[33mcommit 2b2470b6473f619727e91ce7ca510a7971da616d[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Oct 7 20:51:36 2015 -0400

    Temporarily disable System.Linq.Expressions tests on OS X
    
    We're hitting a sporadic crash in CI that's keeping us from having a green
    CI job.

[33mcommit 265102868539890bc84866178fd4b3f589c2bb37[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Wed Oct 7 16:03:10 2015 -0700

    Removing some stale comments in the interpreter.

[33mcommit 011a4bee932aa2971acc6afc87e39ccefbdcd53e[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Oct 6 11:03:59 2015 -0700

    Remove project references in crypto libraries
    
    * Move ProjectReference to project.json
    * RSA's derived types were using a protected field that isn't in the contract, so now they implement it with no secret ability.
    * Removed the Console references from the crypto test libraries that were not using Console
    * Had to split the project.json for X509Certificates into two, because project.json doesn't support the conditional compilation dependencies required for X509
        * Windows: S.S.C.Cng + S.S.C.Csp
        * Unix: S.S.C.OpenSsl

[33mcommit 8cd8e7820a4c3fa60e3efaca2c87575f25c2c717[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Fri Oct 2 11:00:09 2015 -0700

    Add Console.Is[Input\Output]Redirected APIs

[33mcommit 3913153c17e4347770e884ab38de46e5dbbaa270[m
Merge: 4414185 c0d9b75
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Wed Oct 7 15:56:01 2015 -0700

    Merge pull request #3704 from AtsushiKan/removeexport
    
    Don't make imported key automatically exportable.

[33mcommit 5ba65fb32fdf1c817e4dd741a110514222484a02[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Wed Oct 7 15:17:33 2015 -0700

    Adding tests for LeftShift and RightShift behavior.

[33mcommit 982750eee37686707ac08d03bf8e9c53d7349607[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Wed Oct 7 13:28:39 2015 -0700

    Adding bit mask to emitted code for shift operators in LambdaCompiler.

[33mcommit c0d9b755f2f7040edaa235c75be77a78197e4aab[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Wed Oct 7 14:42:34 2015 -0700

    Don't make imported key automatically exportable.

[33mcommit 77fb5b238f66c7a22cc3e67362a4048d2edaabf2[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Wed Oct 7 11:58:46 2015 -0700

    Increasing timeout values for sockets tests.
    
    Increased expected success timeouts to 5s and expected failures to 0.1s.
    Adding Sockets common configuration and extracting timeout common parameters.
    
    Fix #3504, #3641

[33mcommit 4414185df30092a182c450b1e82350dbba2b3b2f[m
Merge: 2394c1e b3328f3
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Wed Oct 7 12:59:24 2015 -0700

    Merge pull request #3694 from weshaggard/FixOutdatedLockFile
    
    Update outdated project.lock.json file

[33mcommit a3df92dbdf6bda2a52ac6d2b78c16040a0543870[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Oct 7 14:15:13 2015 -0500

    Update Interop.EVP to use XXXCreate() and XXXDestroy() shims instead of pure 1:1 functions.

[33mcommit 2394c1eac70de3e4809bea700623d4cce19da7a8[m
Merge: 698b4b1 f14225a
Author: David Shulman <david.shulman@microsoft.com>
Date:   Wed Oct 7 11:51:42 2015 -0700

    Merge pull request #3680 from davidsh/http_post_tests
    
    Add more tests for System.Net.Http library

[33mcommit f8ab3664889df5a939ef607d071cf51ed5fb240f[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Tue Oct 6 19:54:04 2015 -0700

    Adding tests for Block factory methods.

[33mcommit 49d6eb9b7b8ea303b64e78195ee2ef609a559226[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Tue Sep 29 14:48:30 2015 -0700

    Adding optimization for block expression factories.

[33mcommit 5eadf4c26cb3a7ad40daeca167c1485f29a046c5[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Fri Sep 18 14:20:32 2015 -0700

    Extracting optimization code from Block factory to make it reusable.

[33mcommit 698b4b162565649d36557619522def009473dfa8[m
Merge: 2d36889 bbde329
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Wed Oct 7 11:39:39 2015 -0700

    Merge pull request #3665 from tarekgh/EncdoingFallbackTests
    
    Adding Text Encoder/Decoder fallback tests

[33mcommit 11b457d1186c364bdf3e7d978006eb2417e8d060[m
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Tue Sep 29 20:36:13 2015 -0700

    Address perf for GetFullPath and defer to OS.
    
    This change attempts to limit the number of allocations made when evaluating
    full paths. This is particularly important when Windows paths can be way over
    the historical max of 260 characters. (The new max is over 32K)
    
    We no longer kick paths in Windows that are valid, outside of paths with colons
    that are not directory separators. (This has the effect of blocking alternate
    data stream access- which is a legacy behavior.)
    
    When creating directories, we still drop the trailing separator, which causes
    trailing whitespace to be trimmed. This makes it particularly difficult to create
    paths with trailing spaces in .NET, which is still desirable as most code has
    a tough time dealing with this scenario. We'll open them fine now, which hits
    the above point of not kicking valid legacy paths (paths that don't require
    extended syntax).
    
    Several simplifications to the logic were made, including moving relative segment
    evaluation to shared code and calling it directly when getting directory names
    rather than relying on the not-so-obvious prior behavior of GetFullPath without
    "full checks".

[33mcommit f14225a7355bdae2468bb3c28562da0a0976f206[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Oct 2 16:34:08 2015 -0700

    Add more tests for System.Net.Http library
    
    Ported more HTTP related tests.  These tests focus mostly on POST
    scenarios mixed with authentication, pre-authentication, and the
    "rewind-ability" of content if it needs to be re-POST'd due to AUTH
    challeges by the server.
    
    Added a new HttpTestServers2 class to Common/tests/System/Net. This is a
    point-in-time thing as we improve the test infrastructure capability. In
    particular, we are moving away from the use of the "httpbin.org" server.
    Our new networking test server that we are bringing up has more features
    than httpbin.org. It can support all the main HTTP verbs when doing "echo"
    of request headers. It includes a "Content-MD5" HTTP response header. This
    contains a hash of the response body. This makes it easier to validate the
    returned payloads. The "httpbin.org" server also has a bug where it does
    not properly echo chunked upload headers which was causing issues when
    trying to port these tests.
    
    I did not change other networking tests still using "httpbin.org" and the
    Common HttpTestServers class. I will be doing that later as we finalize
    the test infrastructure.

[33mcommit bbde32986e3427cb99a1563e8a9d43a22485f1d9[m
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Tue Oct 6 09:04:31 2015 -0700

    Adding Text Encoder/Decoder fallback tests
    
    Renamed fallback.cs file and use Assert.Equal instead of custom array check
    
    Fix minor nit issues
    
    More nit issues
    
    Disable the new tests on Linux as Encoding not supported yet there

[33mcommit 0e208b318e43ff2151b910abbec5d2b040228e8a[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Oct 7 12:44:01 2015 -0500

    Update Interop.EVP.Cipher to use XXXCreate() and XXXDestroy() shims instead of pure 1:1 functions.
    
    Fix #1963

[33mcommit b3328f361db9bfd89c5c5d07c9be33fc8f878807[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Wed Oct 7 10:00:22 2015 -0700

    Update outdated project.lock.json file
    
    Fixes #3691

[33mcommit 2d368892638bdd97dd06fe20a10d4bc5a7c6afc6[m
Merge: bf803cc fb770bd
Author: Eric StJohn <ericstj@microsoft.com>
Date:   Wed Oct 7 09:29:45 2015 -0700

    Merge pull request #3589 from ericstj/ericstj/generationRefAssms
    
    Add reference assembly projects for significant past contract versions

[33mcommit fb770bd3e71e434a1288375d065db1ea8fae5cd0[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Oct 7 08:46:58 2015 -0700

    Fix build of System.Reflection.DispatchProxy ref assm
    
    Our reference assemblies projects require all dependencies
    to be explicit.  DispatchProxy was missing a reference to
    System.Reflection.Primitives.

[33mcommit bf803ccab28fd70a94a98f837bb15f12632fa8ef[m
Merge: 0bd4394 cf47694
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Wed Oct 7 08:44:12 2015 -0700

    Merge pull request #3678 from bartonjs/unix_sslstream_openstore
    
    Implement EnsureStoreOpened for the Unix PAL

[33mcommit cf47694b707097d5fd0032a11f97b4f29a5a040a[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Oct 6 15:34:43 2015 -0700

    Implement EnsureStoreOpened for the Unix PAL

[33mcommit 14bba95f542a22bedd789d8f45c0f167da55de24[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Oct 6 16:18:25 2015 -0700

    Fix build in VS2013
    
    The change to start building reference assembly projects exposed a
    pre-existing problem in a couple reference assembly projects: they
    were relying on C# 6.0 semantics.

[33mcommit 0bd4394375bcc5f3bceaa27003c6f7c7fb2e72eb[m
Merge: 870639a 860c76a
Author: Vijay Kota <vijaykota@users.noreply.github.com>
Date:   Wed Oct 7 19:16:28 2015 +0530

    Merge pull request #3528 from vijaykota/feature
    
    Using SafeHandles instead of IntPtrs in Interop.libssl

[33mcommit 860c76acd11bbf123029ed270c594a874dc7a900[m
Author: Vijay Kota <vijayko@microsoft.com>
Date:   Tue Sep 29 19:04:00 2015 +0530

    Using SafeHandles instead of IntPtrs in Interop.libssl
    
    - Also fixed an issue with handling of return code in Encrypt logic

[33mcommit 870639abeeadbd8cd005346098f75a9cadaa951d[m
Merge: 3241f30 1970d96
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Oct 7 08:55:17 2015 -0400

    Merge pull request #3687 from kseo/typos
    
    Fix typos in the API documentation of IImmutableQueue and ImmutableQu…

[33mcommit 1970d96731d7a284e6ff01813d7713685fd94ed1[m
Author: Kwang Yul Seo <kwangyul.seo@gmail.com>
Date:   Wed Oct 7 17:01:50 2015 +0900

    Fix typos in the API documentation of IImmutableQueue and ImmutableQueue.
    
    stack -> queue

[33mcommit 3241f304b18b598df13d82787a9f373b08712001[m
Merge: 197d869 ec0f408
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Oct 6 19:16:12 2015 -0700

    Merge pull request #3684 from ellismg/runtest-improvements
    
    Remove some of the magic from run-test.sh

[33mcommit ec0f408ac1b9a772db630b43b6f284148c0055d6[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Oct 6 18:46:43 2015 -0700

    Mark corerun as executable

[33mcommit 197d86986c9bec40f442daf771d2e05ccf9e8355[m
Merge: 1032614 bd16fe9
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Tue Oct 6 18:39:21 2015 -0700

    Merge pull request #3681 from saurabh500/netsockets
    
    Upgrading the System.Net.Sockets dependency

[33mcommit 1032614aa0622820254456bb4eb7107276643629[m
Merge: ce08831 20720d8
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Oct 6 18:36:55 2015 -0700

    Merge pull request #3675 from pgavlin/SocketsDeadCode2
    
    Remove dead code from S.N.{Security,Sockets}.

[33mcommit ce0883161955cf5283cb7a04a67c417d0cac90b8[m
Merge: 0fd7b18 5030dae
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Oct 6 18:11:35 2015 -0700

    Merge pull request #3676 from ellismg/introduce-custom-test-runtime
    
    Use custom test-runtime project.json

[33mcommit 0fd7b18cca01568a1e7a80ca7241527c2852e27b[m
Merge: 4e2857e 8ff7b16
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Oct 6 18:01:04 2015 -0700

    Merge pull request #3679 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 115653f3ac60119029ea5ba701967e0299c10c04[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Oct 6 17:01:21 2015 -0700

    Add missing runtimes to project.json
    
    System.Diagnostics.TextWriterTraceListener.Tests has some dependencies
    on System.Diagnositcs.TraceSource which has a different version per
    runtime (due to the fact that it can't run in UWP, I believe). We need
    to list runtimes in our project.json files so the correct platform
    speficic assets are deployed when we build out the test drop.

[33mcommit 4e2857e41b4c5eb6295cdcb7c45444f8cecdfcc0[m
Merge: 9e04458 befcfb2
Author: Vance Morrison <vancem@microsoft.com>
Date:   Tue Oct 6 17:05:19 2015 -0700

    Merge pull request #3666 from vancem/master
    
    Add an EventSource to System.Diagnostics.DiagnosticSource.

[33mcommit 830fe6b883c9e5a17a9ef9767621a468ca73f9c4[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Oct 6 16:48:40 2015 -0700

    Remove CoreFX copying step in run-test.sh
    
    Now that we can properly restore cross platform binaries when building
    out the test library, we no longer need the the step where we copy over
    the Linux product build to the overlay. There was some other overlay
    related stuff that we could remove as well (e.g. the need for picking up
    the test host from a seperate place).
    
    We continue to copy the runtime itself and the native corefx bits. In
    time we should remove the copy of the runtime and mscorlib.dll (but for
    now we continue to use it to speed up the rate at which we can implement
    features in CoreCLR and test them in CoreFX, since if we we used the
    runtime that came down from NuGet it would always be at least a day
    old).
    
    I have also changed the defaults of run-test.sh to ease folks doing
    local development (e.g. it defaults to $OS for the version of the test
    binaries instead of always using Windows versions).
    
    In addition, I updated build.sh to set TestNugetRuntimeId to
    ubuntu.14.04-x64 or osx.10.10 if you are building on "Linux" or
    "Darwin". Obviously this is not complete because we don't actually try
    to figure out your distro and version but it better than just deploying
    windows stuff when building the test runtimes and run-test.sh will
    replace all the native bits which is the major thing that changes anyway.

[33mcommit bd16fe90dfacdcc1ecf8e6c2af0f1446b4a3998e[m
Author: Saurabh Singh <sausing@microsoft.com>
Date:   Tue Oct 6 16:17:38 2015 -0700

    Upgrading the System.Net.Sockets dependency

[33mcommit 8ff7b168c083d54863043805ddd63bd698347ff4[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Tue Oct 6 15:50:13 2015 -0700

    Adding SqlClient packaging support for OSX and Linux.
    
    [tfs-changeset: 1534226]

[33mcommit 8ece9ab5a3880cd3b00fa096cc339c0bf97c6141[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Oct 6 17:26:51 2015 -0500

    Shim OpenSSL Evp_Cipher* methods.
    
    Adding shims for all OpenSSL methods in Interop.EVP.Cipher.cs.

[33mcommit 9e04458a3c01ad5fc22fbb3c30a5b9f1bbbf6856[m
Merge: bef793a c257f55
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 6 18:08:12 2015 -0400

    Merge pull request #3653 from eerhardt/EvpShim
    
    Shim OpenSSL Evp_* methods.

[33mcommit bef793ab06d4349f3c1853bfc376e68bf850fe80[m
Merge: 74c1679 52ee9a1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 6 18:07:33 2015 -0400

    Merge pull request #3660 from Clockwork-Muse/2898_System.Net
    
    Update test namespaces in System.Net.Requests

[33mcommit 74c16791e3c0ef680208535d64feca6079cb55d9[m
Merge: 0f66f48 84c1bd5
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Oct 6 15:03:21 2015 -0700

    Merge pull request #3648 from pgavlin/SocketsCoverage
    
    Add Tcp{Client,Listener} and UdpClient SendReceive tests.

[33mcommit 5030daeb4353cdc76eba5266d18b4e3d70ad5984[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Oct 6 14:58:31 2015 -0700

    Use custom test-runtime project.json
    
    Today, the test-runtime project.json and project.lock.json we have comes
    from the buildtools package. This is less than ideal for a few reasons:
    
     - To change anything in here requires that we roll a new version of
       build tools and consume that.
     - The version in buildtools does not have runtime sections for either
       Ubuntu 14.04 or OSX 10.10, so when we restore a test runtime we
       always get the windows version. This leads us to having to do upstack
       hacks like "run-test.sh" which tries to replace the windows versions
       of things with correct cross platform versions.
    
    Now that we are publishing cross platform packages, we should be using
    them when we run tests. This change introduces a copy of the test
    runtime project.json we can version at a different cadence than build
    tools and updates the build to use it instead.
    
    One artifact of this change is you can now pass
    /p:TestNugetRuntimeId="ubuntu.14.04-x64" to the build and the test
    folders produced will actually be runable on Ubuntu 14.04 (and you could
    do a similar thing for osx.10.10-x64).
    
    The next step will be to start ripping out code in run-test.sh so we
    don't actually do a bunch of extra copies we don't need (e.g. we can
    remove all of the CoreFX managed copying).
    
    This also moves us one step closer to being able to easily update the
    version of the runtime we test against.

[33mcommit 20720d890fe016a4934e7215d22cf35e7c1224b3[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Oct 5 21:47:54 2015 -0700

    Remove dead code from S.N.{Security,Sockets}.

[33mcommit 993760371cf08eaaf858d7a612e1a2d6d65efb40[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Oct 5 21:22:03 2015 -0700

    Remove more dead code in Sockets.

[33mcommit 0f66f48c647df3232634390d09aff57b67f67de6[m
Merge: 09a5343 d17d6d7
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Oct 6 14:37:43 2015 -0700

    Merge pull request #3644 from pgavlin/SocketsDeadCode
    
    Remove dead code in S.N.Sockets.Socket.

[33mcommit 09a5343cfd6621669ad645bc786d0225ae8336c2[m
Merge: 9569f48 357db04
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 6 17:15:22 2015 -0400

    Merge pull request #3638 from rajansingh10/NetFeature2
    
    Fixed Renegotiate & sslV3 issue in System.Net.Security xplat. Made op…

[33mcommit 9569f482f1c92993b2ba88a6fcb1fcd5ff3adb43[m
Merge: 1107cbd a3b3add
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 6 16:52:14 2015 -0400

    Merge pull request #3649 from mellinoe/quaternion-doc
    
    Improve Quaternion.CreateFromAxisAngle docs [Issue #71]

[33mcommit 1107cbd33feb9df9301dfde0cd8c645393957ea5[m
Merge: aa1a38d 32b0d17
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 6 16:51:49 2015 -0400

    Merge pull request #3651 from jasonwilliams200OK/env-platform-fix
    
    build: Unset %Platform% on invoking build.cmd

[33mcommit aa1a38d430342c20e4c859f57dbe37956c0452da[m
Merge: b9cc45b 382ab41
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 6 16:50:43 2015 -0400

    Merge pull request #3652 from jasonwilliams200OK/fix-license-text
    
    license: Replace Apache with MIT

[33mcommit b9cc45b57e92b58bcdfb09a93af06b716e82f350[m
Merge: 35a47d6 7a11477
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 6 16:37:33 2015 -0400

    Merge pull request #3659 from nguerrera/obfuscation-fix
    
    Allow "extra data" as native metadata reader does

[33mcommit 35a47d6375c2cc56af4e5c9428eae8a9230a1154[m
Merge: 74b01b5 4fa89d2
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Oct 6 13:30:11 2015 -0700

    Merge pull request #3673 from davidsh/fix_client_certs
    
    WinHttpHandler client SSL certificate fixes and tests

[33mcommit 74b01b5a8b1cfa16ae42de3dd77b85742a7e20eb[m
Merge: 8588a04 1bb1c02
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 6 16:26:56 2015 -0400

    Merge pull request #3664 from stephentoub/disable_socket_perf
    
    Disable socket perf tests

[33mcommit 8588a041bec4da9101df2d52e70b59326308b900[m
Merge: 5ecc634 5a62c04
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 6 16:23:09 2015 -0400

    Merge pull request #3639 from stephentoub/fix_gc_tests
    
    Fix and enable a few GC tests

[33mcommit 5ecc63414f38bb6460fe6104b1806315f2ea0f3a[m
Merge: e65559b 55a0740
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 6 16:22:55 2015 -0400

    Merge pull request #3662 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit e65559bc628cc69f9c1a8b6618d7fc6ccea8d845[m
Merge: 5f5c64f 544a388
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 6 16:21:44 2015 -0400

    Merge pull request #3663 from jasonwilliams200OK/spell-occurred
    
    code: Fixes occurred spelling

[33mcommit 5f5c64fc55a871a0d315656f7942750feb026858[m
Merge: 56ff6ba 31d636d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 6 16:11:13 2015 -0400

    Merge pull request #3509 from dtrebbien/improve-BigInteger-ToByteArray-efficiency
    
    Improve efficiency of BigInteger.ToByteArray()

[33mcommit 56ff6ba56c7538e2a0facdd31763c3fc3d1447cd[m
Merge: 48c0d9e 047b16d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Oct 6 16:05:31 2015 -0400

    Merge pull request #3671 from pgavlin/UnixSocketAsserts
    
    Fix async abort behavior for *nix accept().

[33mcommit d17d6d7b8f209c3cac5a8e66779623d6d4827986[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Oct 5 11:56:23 2015 -0700

    Remove dead code in S.N.Sockets.Socket.

[33mcommit 48c0d9e0c2407547115510fbb71a1fb6f498ea23[m
Merge: 0698c91 5a67678
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Tue Oct 6 12:54:05 2015 -0700

    Merge pull request #3600 from CIPop/SNNetworkInformationPR
    
    Porting System.Net.NetworkInformation and System.Net.Utilities

[33mcommit 31d636dbb70bd3b0b5c59052cad585646367871b[m
Author: Daniel Trebbien <dtrebbien@gmail.com>
Date:   Tue Oct 6 14:55:48 2015 -0400

    Improve efficiency of BigInteger.ToByteArray()
    
    ToByteArray() was previously implemented in two passes. The first pass
    would create a byte array with space for 4 * dwords.Length bytes and
    write all uint elements of dwords into the byte array in little Endian
    form. The second pass would create a new array to store the result,
    which would be the array created by the first pass, trimmed to remove
    unnecessary high bytes, and padded with a high byte if the extra byte
    was needed.
    
    This commit makes BigInteger.ToByteArray() more efficient by combining
    the two passes and performing two's complement on the stack without
    creating a copy of _bits.

[33mcommit 4fa89d2b9b8949bdb261909748808180f2fe1ef5[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Oct 5 16:12:37 2015 -0700

    WinHttpHandler client SSL certificate fixes and tests
    
    Fixed a couple of bugs discovered in WinHttpHandler where it was not
    sending out client SSL certificates. Changed the final parameter to the
    X509Certificate2Collection.Find() method to false. I had originally set
    this parameter to true. The parameter tells the .Find() API to only
    select "valid" certificates from the collection. The problem is that
    "valid" also means "trusted by the client". But a lot of client SSL
    certificates are not trusted by the client. They are only trusted by the
    server since many servers issue client certificates based on a different
    trust root.
    
    Added more tests for client SSL certificates.

[33mcommit befcfb23516e06d62160747641c3f74c8cbb4d2e[m
Author: Vancem <VanceMorrison@comcast.net>
Date:   Tue Oct 6 11:09:41 2015 -0700

    Pull Request Feedback.   Moved DiangosicSourceEventSource to its own file, other nits.

[33mcommit f6968fb43f91a974f7bc6ed5fafacb53b05b9bc2[m
Author: Vancem <VanceMorrison@comcast.net>
Date:   Mon Oct 5 16:03:44 2015 -0700

    Added DiagnosticsSourceEventSource (Microsoft-Diagnostics-DiagnosticSource) needed for debugger attach scenarios

[33mcommit 047b16d3ca6ff472e89efd45b4ff5aed26cb7379[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Oct 6 09:36:38 2015 -0700

    Fix async abort behavior for *nix accept().
    
    Aborted accept attempts are currently returning an accepted file
    descriptor of 0 instead of the proper -1. This change corrects this
    behavior.

[33mcommit 7c3927b2883b073517b9189eed077e8558a8ff2b[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Oct 6 11:01:35 2015 -0700

    Write a message when an xUnit invocation fails
    
    Previously finding out which xunit projects failed was difficult because
    unlike Windows we didn't write a message when xUnit returned with a non
    zero exit code.  In cases where tests failed, it was somewhat easy to
    search the logs for xUnits "a test failed" messages but if the runtime
    crashed, things were much harder.
    
    Update run-test.sh to write an error message in the same style as what
    we do on windows as part of the xUnit invocation from MSBuild.
    
    While I was in the area, I reduced some noise in the log by pushing the
    output of a grep for supported platforms to /dev/null. We print a
    message anyway when we detect a project is unsupported, so the output of
    grep is not interesting.

[33mcommit 39f58b237486101e17b210c864a41da38df72cf9[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Tue Oct 6 10:56:29 2015 -0700

    Update build tools to 1.0.25-prerelease-00104

[33mcommit 0544bfef70ed304f6ce079e42466f8974d13afa0[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Oct 1 21:12:46 2015 -0700

    Add deployment projects for past reference assemblies.

[33mcommit 581a77341ea7fd3f8ed9897b5d2810eea87eb44b[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Oct 1 21:12:23 2015 -0700

    Enable build of reference assembly projects

[33mcommit 32b0d1727c4989563a61f449bf9b070b1afbf179[m
Author: Peter Jas <necmon@yahoo.com>
Date:   Mon Oct 5 21:50:17 2015 +0000

    build: Unset %Platform% on invoking build.cmd.
    Unset `%Platform%`, so build don't get disrupted by the incorrect value
    set in evn variable.
    
    Fixes #69.

[33mcommit c257f552d8cf1aa92031e83c391eadc328ff8730[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Mon Oct 5 17:46:22 2015 -0500

    Shim OpenSSL Evp_* methods.
    
    Adding shims for all OpenSSL methods in Interop.EVP.cs.

[33mcommit 1bb1c02ef617c4f8c59a5b86bc7f5039b036c649[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Oct 6 12:02:29 2015 -0400

    Disable socket perf tests
    
    These are currently in outer loop, but they're sporadically failing due to lack of appropriate infrastructure to accurately run and measure them.

[33mcommit 7a11477c7864eb83a7942079be70eaf133dec671[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Oct 5 23:46:09 2015 -0700

    Allow "extra data" as native metadata reader does
    
    Although not mentioned in the CLI spec, the native metadata reader allows
    an EXTRA_DATA flag to be set, which indicates that there are 4 bytes of
    extra data after the row counts. A customer has reported being unable to
    compile against obfuscated assemblies, and it turns out that the obfuscator
    in question is using this flag.

[33mcommit 544a3885ff51e04db89b70e3f155be1a5c64f166[m
Author: Peter Jas <necmon@yahoo.com>
Date:   Tue Oct 6 15:26:38 2015 +0000

    code: Fixes occurred spelling.
    Fixes #3661.

[33mcommit 55a074092c42478c4edb89cdfd0d0b3ea36b21a1[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Tue Oct 6 07:45:32 2015 -0700

    Remove DES and RC2 (since WinCrypto convinced us not to support DESCng/RC2Cng)
    
    [tfs-changeset: 1533997]

[33mcommit 52ee9a1d5dcd9fd9f650f7d4006a4b115b638cb8[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Mon Sep 28 19:32:33 2015 +0900

    Update test namespaces in System.Net.Requests per #2898.
     - Clean up `using`s.

[33mcommit 357db0467e6a635a1ddacab29925cf75a67c791d[m
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Sat Oct 3 12:37:04 2015 +0530

    Fixed Renegotiate & sslV3 issue in System.Net.Security xplat. Made openSSL method initialization static.

[33mcommit 5a67678925c2f2731fdb55eb3c88a287149e8db4[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Tue Sep 29 17:05:28 2015 -0700

    Porting System.Net.NetworkInformation and System.Net.Utility to GitHub.
    
    Completing #894

[33mcommit 0698c9190d40cb1bead0bb407322f14a19cedfe1[m
Merge: f60f9e2 9d7a7bd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 5 18:51:22 2015 -0400

    Merge pull request #3450 from Clockwork-Muse/516_System.Net
    
    516 system.net

[33mcommit f60f9e2776b5bcc1cec84d994ff6209fb8d94b17[m
Merge: 6f05e04 2f3dc06
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Oct 5 15:50:55 2015 -0700

    Merge pull request #3645 from pgavlin/SocketsCoverage2
    
    Add argument validation tests for S.N.Sockets.

[33mcommit a3b3add715b1f6ec6fdaea836d26c8d30e4f45e6[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Oct 5 15:42:32 2015 -0700

    Improve Quaternion.CreateFromAxisAngle docs
    
    This adds some documentation around the fact that the "axis" parameter
    needs to be of unit length before calling the method.

[33mcommit 6f05e0475d1388a96c3725a31000a301d9e726f2[m
Merge: b079b9a fbddea5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 5 18:28:46 2015 -0400

    Merge pull request #3643 from stephentoub/cleanup_common_tests
    
    Remove dummy Console.cs from Common\tests

[33mcommit 382ab41fb58434b13df6dac84e219e905b8baa7f[m
Author: Peter Jas <necmon@yahoo.com>
Date:   Mon Oct 5 22:07:50 2015 +0000

    license: Replace Apache with MIT.

[33mcommit 84c1bd5ab4711c31db175b958fac96b5f3ff9aad[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Oct 5 15:05:03 2015 -0700

    Address further PR feedback.

[33mcommit 76954feb9d9a8103d7037e9c4333199d7d13650e[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Oct 5 14:38:26 2015 -0700

    Address PR feedback.

[33mcommit a3730d0f2c3390e7ca68d0a10655760d73ab87f8[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Oct 5 13:19:20 2015 -0700

    Add Tcp{Client,Listener} and UdpClient SendReceive tests.
    
    This exercises NetworkStream as well as the aforementioned types.

[33mcommit b079b9a26b4bb6cf1b4f8c6290cbb5054c9fa6d5[m
Merge: fde184a 12a2c2a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 5 17:00:11 2015 -0400

    Merge pull request #3637 from stephentoub/improve_process_enumeration
    
    Improve Process.GetProcesses* performance on Linux

[33mcommit fde184a4dd0c96d386d887a5dbcecd3f66764d86[m
Merge: 23a49ff 07a4ff6
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Mon Oct 5 13:05:52 2015 -0700

    Merge pull request #3567 from saurabh500/managedsni
    
    Adding the Managed SNI for System.Data.SqlClient for xplat

[33mcommit 23a49ffae4e2bfc6740c26b7c8c2c53a4f13db79[m
Merge: 0fbce37 b62a5f7
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Mon Oct 5 12:56:33 2015 -0700

    Merge pull request #3627 from bartonjs/unix_x509_find
    
    Implement X509Certificate2Collection.Find for Unix.

[33mcommit 0fbce377a1fc7f3eeeedf7a439e3aeef61649360[m
Merge: c02d33b 8347e22
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Mon Oct 5 12:11:53 2015 -0700

    Merge pull request #3640 from AtsushiKan/scng
    
    Implement AesCng and TripleDESCng

[33mcommit 8347e2215a915d2ed042e4a612712c4bcad370d4[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Mon Oct 5 12:11:01 2015 -0700

    Implement AesCng and TripleDESCng

[33mcommit b62a5f7e925d4772f844bef18eaabe0d600a891f[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Oct 5 11:42:24 2015 -0700

    Correct some style issues in the Windows FindPal

[33mcommit a716069efafe9fc646ff7a5ab04e9f7445708064[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Fri Oct 2 21:03:26 2015 -0700

    Replace KeyUsages if-cascade with a dictionary

[33mcommit f4601a0f98443a135573aa0271daf4dc0ad35ea4[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Oct 5 09:27:21 2015 -0700

    Make PositiveBigIntegerFromByteArray more efficient.
    
    In the statistically even (random distribution) chance that the number would be positive, don't do a realloc+copy to grow the array.
    
    Since these numbers are (usually) assigned sequentially, there should be a better than 50% chance this optimization will apply, because any CA that retires will have an unused space within their current byte count, and that would have been in the high-bit ("negative capable") numbers before any low-bit numbers.

[33mcommit afd6dee1ffe36ec6995dd24953fb4f388df20300[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Oct 1 14:33:59 2015 -0700

    Implement X509Certificate2Collection.Find for Unix.
    
    * All of the object->rich type parsing code is in the common FindPal class.
    * Each of the X509FindType types dispatches pre-parsed data to an IFindPal instance.
    * There are still two sources of disabled tests for the Unix port
        * Issue 1985: Distingushed Names have (e.g.) "S=Washington" on Windows, "ST=Washington" on Unix.
        * Issue 3099: The Unix and Windows implementations are choosing different certificates out of a multi-file PFX
    * Across the various [Theory] components, a little over 100 test cases were added to verify consistent behavior

[33mcommit 2f3dc060953c161979a86a4903115ddc2011b5f5[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Fri Oct 2 14:01:18 2015 -0700

    Add argument validation tests for S.N.Sockets.
    
    These tests cover the validation of input arguments for all public methods
    on the Socket class.

[33mcommit fbddea55638921186299e9c0eb51d3f3a8dd73b7[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 5 14:34:05 2015 -0400

    Remove dummy Console.cs from Common\tests
    
    Several of the test projects are doing Console.WriteLine, but aren't actually using System.Console.dll, and are instead including a dummy Console.cs file where WriteLine just calls Debug.WriteLine.  This commit deletes that dummy file and updates the consuming test projects to just use Debug.WriteLine. (We don't want our tests to be using Console.WriteLine for this kind of debug spew, anyway.)

[33mcommit 07a4ff6b115f398391b1845c7b93d0fee83c7a83[m
Author: Saurabh Singh <sausing@microsoft.com>
Date:   Mon Oct 5 11:26:46 2015 -0700

    Fixing the formatting and cleaning up the code.

[33mcommit c463c2c5a7a7a42aefb02df0348b7bc4bb931fee[m
Author: Saurabh Singh <sausing@microsoft.com>
Date:   Fri Oct 2 15:40:24 2015 -0700

    Adding the changes with the PR comments

[33mcommit e9f4df853575f65e9f9c15c39fa1db138c6da78e[m
Author: Saurabh Singh <sausing@microsoft.com>
Date:   Wed Sep 30 16:44:32 2015 -0700

    Adding the Managed SNI for System.Data.SqlClient for Non-Windows platform.

[33mcommit 4ec244aa618f4b4db8d5a5ca75678f02a2039037[m
Author: Alex Perovich <alperovi@microsoft.com>
Date:   Mon Oct 5 10:56:17 2015 -0700

    Respond to PR feedback.

[33mcommit 5a62c0453a29408b5a046317fded331430b74afd[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Oct 5 10:43:27 2015 -0400

    Fix and enable a few GC tests
    
    Several GC tests were previously disabled due to poor assumptions about the behavior of several GC behaviors, e.g. assuming that objects always move to a higher generation up to the max when a full collection occurs, assuming that the GC won't kick in due to other things happening concurrently in the process, etc.
    
    This commit deletes one test and revamps another two that were previously disabled.

[33mcommit 12a2c2afed6814cf3a0862046f84b40da4fb1d67[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Oct 4 09:18:48 2015 -0400

    Add a reusable stream reader to significantly reduce allocations
    
    When enumerating processes in procfs, we use File.ReadAllText to read each
    file for each process and each file for each thread in each process.  This
    ends up creating streams, stream readers, encoders, byte arrays, char
    arrays, etc. for each file, resulting in significant garbage and
    throughput reductions.
    
    This commit improves Process.GetProcess* throughput by another 2x and
    reduces gen0 GCs by 10x by introducing a ReusableStreamReader that caches
    all of the relevant objects other than the stream, allowing all of the
    text to be read from a stream using the cached data structures.

[33mcommit 60a36cd12b03bbe97a74fa6a9bd7097bfb6b6428[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Oct 3 19:25:28 2015 -0400

    Minimize allocations in StringParser
    
    The common StringParser type is used to parse primitive types from the
    text files in procfs.  The parsers for Int32, Int64, UInt32, UInt64, and
    Char currently first allocate a string and then parse that string; this is
    expensive because of the intermediate strings but is done because there's
    no built-in parsing functionality that works on substrings.
    
    This commit modifies StringParser to do its own parsing for those
    primitive types, avoiding the need for the intermediate string
    allocations.  This has a significant impact on the amount of garbage
    created while parsing files in procfs, and improves throughput slightly.

[33mcommit 67dee4da3b7b2304f241f19cb052eb8413f3c86d[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Oct 3 17:58:03 2015 -0400

    Filter Process.GetProcessesByName prior to enumerating thread info
    
    Previously we would enumerate all of the processes, constructing all of their ProcessInfo and ProcessThread objects, and then filter by name.  With this change, we enumerate the IDs, parse the stat file for each ID, filter down by name, and only with those that pass the filter do we construct the relevant objects and parse thread information.  In common cases, where there's significantly fewer processes that match the filter name than those that don't, this improves throughput by ~3x and reduces allocations by ~4x.

[33mcommit c02d33b18398199f6acc17d375dab154e9a1df66[m
Merge: 60c78da c137fbb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Oct 3 18:29:56 2015 -0400

    Merge pull request #3617 from pgavlin/SocketsCoverage
    
    Fix a bug in the Socket constructor.

[33mcommit 60c78da3c918b0d256cc1f878de06d351dbe3342[m
Merge: f4bbddf 9c53175
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Oct 3 08:32:47 2015 -0400

    Merge pull request #3626 from ianhays/perf
    
    Updated to new buildtools for perf targets

[33mcommit f4bbddfdda9cce2493143ba3123f948fbbb96688[m
Merge: 2ca7f12 9d76e96
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Oct 2 21:41:07 2015 -0700

    Merge pull request #3551 from bartonjs/oid_table
    
    Use a fixed dictionary for common OIDs to remove platform differences.

[33mcommit 9d76e965d781a12fabb2eaa5d503119912f8ebec[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Sep 30 07:51:20 2015 -0700

    Use a fixed dictionary for common OIDs to remove platform differences.
    
    Use a classic Dictionary for the most common (non-localized) OID values, then a ConcurrentDictionary for on-the-fly memoization to save on p/invoke and repeated parsing.
    
    The "common values" dictionaries ensure that Windows FriendlyName values resolve on Unix, and that OID -> FriendlyName gives a consistent result for those cases where someone is likely to have tried writing matching logic.
    
    The Oid class tests were refactored and spruced up a bit as a part of this change.

[33mcommit 9d7a7bdb5b56c33e48da1986be02e6b63c6360ee[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Tue Sep 22 17:25:01 2015 +0900

    Remove custom error checking from System.Net.Security, per #516 .
     - Remove .nuget.props for test project.

[33mcommit 1e6a129dbbb17e5cd67ecaa9c9fc312919e1edfd[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Tue Sep 22 16:54:14 2015 +0900

    Remove custom error checking from System.Net.Requests, per #516 .

[33mcommit f333a31abbe1de0feb8a79b348aedb6e21d9c67e[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Fri Oct 2 13:12:29 2015 +0900

    Remove custom error checking from System.Net.Http, per #516
    
    - Use ShouldNotBeInvokedException to explicitly state some callbacks
    should not be invoked.

[33mcommit 2ca7f12a42d2ecdbffc0b146d27e18279c67789e[m
Merge: ff99691 b1ef198
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 2 21:18:36 2015 -0400

    Merge pull request #3632 from kouvel/LoaderTestFix
    
    Fix assembly load context InitializeDefaultContext test

[33mcommit ff99691e62c1ba0a01b79bfd6db0e6f2ac0505f3[m
Merge: 179d847 6f66c4b
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Fri Oct 2 15:44:32 2015 -0700

    Merge pull request #3628 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 179d847cb9a745c81cf13b34afc7681c909449d2[m
Merge: c942505 8aeb672
Author: Vance Morrison <vancem@microsoft.com>
Date:   Fri Oct 2 15:42:43 2015 -0700

    Merge pull request #3618 from vancem/ObsoleteTelemetrySource1
    
    Obsolete TelemetrySoruce it is now called DiagnosticSource

[33mcommit d48412af1e014175da0976acc463fe901f910d87[m
Author: Alex Perovich <alperovi@microsoft.com>
Date:   Fri Oct 2 15:15:11 2015 -0700

    Add test coverage for ReadOnlyDictionary
    
    Add additional test coverage for ReadOnlyDictionary improving assembly coverage from 54% to 73%.
    
    Fix #990

[33mcommit b1ef198c631cccf0063e2b9f18e40f6ded9324b3[m
Author: Koundinya Veluri <kouvel@microsoft.com>
Date:   Fri Oct 2 13:27:44 2015 -0700

    Fix assembly load context InitializeDefaultContext test
    
    Related to #3569

[33mcommit 6f66c4b5c7a500fbb8812a15e403f904cae8ef24[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Fri Oct 2 14:42:47 2015 -0700

     Remove the left over pieces for SecureString from the open.
    
    [tfs-changeset: 1533070]

[33mcommit 8aeb672af4649722752170f34684a94502308960[m
Author: Vancem <VanceMorrison@comcast.net>
Date:   Fri Oct 2 14:39:16 2015 -0700

    Suppressed warnings as errors for release as well as debug

[33mcommit 230471ece101f10f0cbd78161f6dcd51c20aa5d6[m
Author: Vancem <VanceMorrison@comcast.net>
Date:   Fri Oct 2 14:36:48 2015 -0700

    suppress obsolete warning messages

[33mcommit 9c53175a722f9feb40b9aa6cd771738377e9b661[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Oct 2 14:21:34 2015 -0700

    Updated to new buildtools for perf targets

[33mcommit c942505ba2012140fefad34128347e256ba88683[m
Merge: b41fa01 0ef637c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 2 17:03:30 2015 -0400

    Merge pull request #3613 from tarekgh/FixDateParsing
    
    Fix and enable the DateTime parsing tests

[33mcommit b41fa014bad304c81ef5e6dcc9ac61f0127cf9a2[m
Merge: 2ea446c 6ca45de
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 2 16:59:49 2015 -0400

    Merge pull request #3619 from ianhays/perf
    
    Updated perf tests and documentation

[33mcommit c137fbb4b03edc2024c42ed26562b783270a7060[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Fri Oct 2 11:13:29 2015 -0700

    Fix a bug in the Socket constructor.
    
    Only the Windows constuctor was throwing the appropriate exceptions due
    to misplacement of the `throw` behind the PAL. The `throw` has been
    moved into the platform-independent code and tests have been added.

[33mcommit 3a84b39f7a2dfc74793d8c04b80725878e7f31c5[m
Author: Vancem <VanceMorrison@comcast.net>
Date:   Fri Oct 2 13:14:37 2015 -0700

    Fix warning as error about obsolete method

[33mcommit 2ea446cc13790ae5ccdff1b2df155d2d6680e6d9[m
Merge: e935655 40171a9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 2 15:49:23 2015 -0400

    Merge pull request #3595 from bartonjs/x509find_parsehex
    
    Fix DecodeHexString parsing to match .net 4.6 behavior

[33mcommit e935655404b159e0457ae4adc5caa26594b94bab[m
Merge: c7057f6 979026e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 2 15:44:54 2015 -0400

    Merge pull request #3615 from stephentoub/array_copy_zero
    
    Add explicit 0 index args to Array.Copy usage

[33mcommit c7057f610041993c356a5b0177e281228f6d1369[m
Merge: ffbc22c 1b23f24
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 2 15:44:39 2015 -0400

    Merge pull request #3611 from stephentoub/disable_sockets_test
    
    Disable SendToRecvFromAsync_Single_Datagram_UDP_IPv6 test

[33mcommit 6ca45dedc43c638f86d02dfe7080db4dff8b4ae1[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Oct 2 11:51:15 2015 -0700

    PR feedback

[33mcommit ffbc22ce6d7b8940e1ec24bdb7638a75fe9aa9fe[m
Merge: 5de4aa4 8ba6140
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 2 14:49:17 2015 -0400

    Merge pull request #3612 from stephentoub/delete_plinq_tests
    
    Delete two PLINQ tests

[33mcommit f551cdfe7bd815b8d99ac5577fbbc7d88b5ae472[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Oct 2 11:37:12 2015 -0700

    Updated perf tests and documentation
    
    - Updated getting started perf docs
    - Removed caching of collections for tests; my results found the caching of negligible benefit
    - Changed from MemberData to InlineData where possible to simplify matching method signatures for the perf analysis tools.
    - Fixed the namespace for FileSystem tests to be the same as the other FS tests

[33mcommit 06cc46db00e6ba23d50e28fc3e1d683e25b0b5a9[m
Author: Vancem <VanceMorrison@comcast.net>
Date:   Fri Oct 2 11:19:26 2015 -0700

    Obsolete TelemetrySoruce it is now called DiagnosticSource

[33mcommit 0ef637c0f0cfca2861884d56d5f720760adc32a6[m
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Fri Oct 2 11:16:07 2015 -0700

    Remove ToDo comment and added a tracking issue reference

[33mcommit 1b23f241fb155e4e7d50ead75879ba6ae20edc28[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Oct 2 12:28:35 2015 -0400

    Disable SendToRecvFromAsync_Single_Datagram_UDP_IPv6 test

[33mcommit 979026e435672e611e3f6e0647c873aa96ccc684[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Oct 2 13:56:48 2015 -0400

    Add explicit 0 index args to Array.Copy usage
    
    Array.Copy is implemented to work with any System.Array, not just T[].  When Array.Copy(sourceArr, destArray, length) is used, it delegates to Copy(sourceArr, sourceIndex, destArray, destIndex, length), and as such needs to query for the lower-bound of the supplied arrays, since although a T[] in C# always has a lower-bound of 0, an arbitrary Array may not.  Given this, when calling Array.Copy, instead of calling Array.Copy(src, dest, length), it's slightly more efficient to just call Array.Copy(src, 0, dest, 0, length), avoiding the need for the GetLowerBound calls made while delegating to the 5-arg version.
    
    I noticed one occurrence of this in some code I was looking at, and while fixing that, I fixed all of them across corefx\src.

[33mcommit c3aed5d06034d81d8f7f307d33d0be7087dad8fe[m
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Fri Oct 2 10:20:40 2015 -0700

    Fix and enable the DateTime parsing tests
    
    The test used to fail on Windows because we didn't have the update coreclr
    package. after updating the package the test work fine.
    The test used to fail on Linux because the Serbian cultures Date patterns
    are wrong and not matching CLDR as it include spaces after the date separator
    and in same time the date separator and time separartor are start same with the
    same char ".".
    that causing the parser to get confused and fail. we need to fix the date
    pattern for such cultures when reading it from ICU or fix the parser to handle
    such case but this can be risky as it can break other cases.

[33mcommit 40171a9ad535239693a67a7b63ce85a835d2e12a[m
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Oct 2 10:36:33 2015 -0700

    Add another DecodeHex test case, with lots of unicode whitespace.

[33mcommit 8ba6140a8c9d9584f71731e8856f6e2bdcfc8d17[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Oct 2 12:41:28 2015 -0400

    Delete two PLINQ tests
    
    Enumerators, even those produced by PLINQ, are not safe to be used concurrently from multiple threads.  Two PLINQ tests are doing exactly that, trying to Dispose of an enumerator concurrently with calling MoveNext on it and potentially concurrently with other calls to Dispose.  This is resulting in sporadic hangs in CI.
    
    I'm simply deleting the tests, as their sole purpose is to test this particular unsupported and unsafe situation.

[33mcommit 5de4aa4c334339c20745b3401b77aa1eb01af605[m
Merge: 21e9e1a 16ab5ff
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Fri Oct 2 09:21:14 2015 -0700

    Merge pull request #3594 from nguerrera/fix-handle-kind-values
    
    Restore HandleKind.Namespace and HandleKind.String values

[33mcommit 21e9e1ac09cd34dd620d0c05342aa173f22615c7[m
Merge: d925084 6b05f71
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 2 12:18:15 2015 -0400

    Merge pull request #3608 from JonHanna/expression_tests
    
    Add tests for EnumerableQuery created from expression.

[33mcommit d925084dd73eff8f134b99b3cdd6b5c00444e088[m
Merge: bf25455 45b9a4c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 2 11:58:52 2015 -0400

    Merge pull request #3587 from pgavlin/SocketsSendReceiveTests
    
    Move the SendReceive tests out of [OuterLoop].

[33mcommit bf2545562bda1c1b7d38bd7c1177722429c17633[m
Merge: 35668ab cb17885
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 2 11:58:21 2015 -0400

    Merge pull request #3585 from ellismg/run-test-copy-exclusions
    
    Don't copy WP8 aseemblies to test overlay

[33mcommit 6b05f714a20d5fb2812d01bc45e672ecdc1404e8[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Oct 2 13:05:23 2015 +0100

    Add tests for EnumerableQuery created from expression.
    
    Try to cover a large range of possible expressions.

[33mcommit 35668ab9aa781c5a172372ea59218332181c6bbd[m
Merge: c099c40 153e428
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 2 09:38:11 2015 -0400

    Merge pull request #3511 from stephentoub/filestream_perf
    
    Improve UnixFileStream.Read/WriteAsync consistency and perf

[33mcommit c099c401ffc164aa3b5ae01ea53e607fb9ca75eb[m
Merge: 12171bf f346e17
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 2 09:24:31 2015 -0400

    Merge pull request #3606 from Clockwork-Muse/2898_System.Xml
    
    Update test namespaces in some System.Xml.* assmblies

[33mcommit 12171bf657df709cc3ddd546b38aa7226e774f7e[m
Merge: 8c65e09 fba0f76
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 2 09:19:24 2015 -0400

    Merge pull request #3605 from Clockwork-Muse/2898_System.Threading
    
    Update test namespaces in System.Threading.Tasks.Parallel

[33mcommit 8c65e09e680b07d6d6c71f631e616fcc0aaec96b[m
Merge: 908f3c4 4a2b31b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Oct 2 09:16:06 2015 -0400

    Merge pull request #3604 from Clockwork-Muse/2898_System.Text
    
    Update test namespaces in some System.Text.* assemblies

[33mcommit f346e17ff4e9602d5b56ba6bf65ded651a02cb2c[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Thu Oct 1 16:23:13 2015 +0900

    Update test namespace in System.Xml.XmlDocument per #2898 .
     - Change some names to avoid conflicts.
     - Clean up `using`s.

[33mcommit e5645c07aa9a81a82736f06d33b6cd9122d12bee[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Wed Sep 9 10:04:57 2015 +0900

    Update test namespace in System.Xml.ReaderWriter, per #2898 .
     - Add namespace to lone file (XmlWriter/WriteWithEncoding).
     - Rename some types to avoid conflicts.
     - Clean up `using`s.

[33mcommit fba0f761d6c49e802f0db12521e764772cf3a4f1[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Fri Oct 2 17:49:01 2015 +0900

    Update test namespaces in System.Threading.Tasks.Parallel, per #2898 .
     - Clean up `using`s.
     - Some types moved inside existing namespace.
     - ParallelStateTest only updated to reference moved logger (indentation changes too large).

[33mcommit 908f3c4f5bc2875910b69a3b7bd2017507cc9ef7[m
Merge: 5656bfa b9f29bf
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Oct 2 00:55:19 2015 -0700

    Merge pull request #3602 from ellismg/update-lock-files
    
    Update lock files

[33mcommit 4a2b31b243d8ec2527542ddb8dea80f9fe241a94[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Thu Sep 3 14:10:43 2015 +0900

    Update test namespace in System.Text.Encoding.CodePages, per #2898 .

[33mcommit 72f17d002e22670de2d1b9a6528f451715969aaf[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Thu Sep 3 13:11:30 2015 +0900

    Update test namespace in System.Text.Encoding, per #2898 .
     - Add namespace in lone file.
     - Clean up `using`s.

[33mcommit b9f29bfa2b29055e3f93b23fadc86323f728637d[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Oct 2 00:21:35 2015 -0700

    Update lock files

[33mcommit 5656bfa0b49c0076b7981edb3751954e5117d15a[m
Merge: c3aa319 87b48c5
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Oct 1 20:38:37 2015 -0700

    Merge pull request #3599 from ianhays/xunit
    
    Upgrade to xunit 2.1.0

[33mcommit 87b48c58936d66fcb201b3a8ad0961fa055f23b9[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Oct 1 18:07:04 2015 -0700

    Update CoreFX to xunit 2.1.0

[33mcommit 35869b70716c61dca64c4546f61b30eb1bf7fd6d[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Oct 1 14:55:33 2015 -0700

    Fix DecodeHexString parsing to match .net 4.6 behavior
    
    During the port to CoreFX DecodeHexString gained some interesting new quirks.
    
    "010305"   => {0x01, 0x03, 0x05} (OK)
    "01 03 05" => {0x01, 0x00, 0x03} (no)
    "0 10305"  => {0xFF, 0x10, 0x30} (no)
    " 010305"  => {0x00, 0x01, 0x03} (no)
    "  010305" => {0x00, 0x00, 0x01} (no)
    
    This change restores the behavior to be functionally equivalent to the parsing logic in .NET (Full Framework) 4.6, but still without creating the intermediate string.
    
    Because one of the existing test certificates has both an 0xFF byte and a 0xFx byte (other than 0xFF) in its subject key identifier field, the behavior of this method is most optimally tested with the subject key identifier tests.
    
    Test cases have been added to prevent future regressions.

[33mcommit 16ab5ff4fb54be05610fa4d80c5d3220be627c61[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Oct 1 14:53:20 2015 -0700

    Restore HandleKind.Namespace and HandleKind.String values
    
    Change a4ecef2c659586922512a9b6ce43e6091ebf6a94 inadvertently
    modified the values of these public facing enum members.
    
    It has only affected pre-release builds so far and so this change
    restores the values from the stable release so that a binary built
    against one stable release can safely run against the next one.
    
    The code has also been refactored to clarify the points of confusion
    that led to this mistake and a test has been added to check for
    specific numeric values for all HandleKinds.

[33mcommit 55746c857f9da84fb48bd9df7ebec759cd13c9e7[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Oct 1 14:38:34 2015 -0700

    Add portable PDB handles to HandleKind

[33mcommit c3aa3191b0ebb3bc244ba2f26c0a33f4c3901892[m
Merge: f467911 45cc5ab
Author: Vance Morrison <vancem@microsoft.com>
Date:   Thu Oct 1 13:13:04 2015 -0700

    Merge pull request #3552 from vancem/master
    
    Rename System.Diagnostics.Tracing.Telemetry.TelemetrySource -> System…

[33mcommit f4679117d4fa9881f6d0a1b25ffb042d4d005c0f[m
Merge: 45e0383 058cf9b
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Thu Oct 1 12:47:24 2015 -0700

    Merge pull request #3586 from sokket/timer
    
    Increasing the positive case timeout for an unreliable Timer test

[33mcommit 45cc5ab0c2c7b10be9f14fe92bfe6455be5bfcfb[m
Author: Vancem <VanceMorrison@comcast.net>
Date:   Thu Oct 1 12:42:31 2015 -0700

    Update nuget packages (we had a build failure)

[33mcommit 058cf9bcb912229168b97f0ad6ff474633f2614a[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Thu Oct 1 11:52:14 2015 -0700

    Increasing the positive case timeout for an unreliable Timer test

[33mcommit 45e0383bed8120d1602df72f25c9c1cfe28258f4[m
Merge: 5da58c0 5b4931f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 1 14:59:16 2015 -0400

    Merge pull request #3584 from bartonjs/x509find_keyidentifier
    
    Make X509FindType.FindBySubjectKeyIdentifier correctly check for equality

[33mcommit 45b9a4c23e1f24dc3db0a5c3bf72f2e0799e2e75[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Thu Oct 1 11:54:55 2015 -0700

    Move the SendReceive tests out of [OuterLoop].
    
    With the Windows fix in #3575, these tests should be stable enough to
    run per-PR in CI.

[33mcommit cb1788525cffc0bf5d2eacc7356b53d17a633340[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Oct 1 11:18:16 2015 -0700

    Don't copy WP8 aseemblies to test overlay
    
    Before we moved to using packer to slim down our test drop, we had
    Jenkins exclude the System.Threading.Tasks.Dataflow.WP8 assemblies when
    uploading build artifacts. This meant that the OSX and Linux jobs would
    never copy them down and hence they could not be picked up by
    run-test.sh (and overwrite the correct version of
    System.Threading.Tasks.Dataflow when building the test overlay).
    
    With packer, we now archive everything, so depending on the order in
    which find discovered files, we may have copied over the WP8 version,
    which does not have ETW support.
    
    For now, update run-test.sh to exclude this folder when copying stuff
    over. The correct long term fix is to just do what we do on
    Windows (have the build produce the correct test layouts and get out of
    this run-test.sh test overlay game).
    
    Fixes #3520

[33mcommit 5b4931f9df0ea21e085f70b9015ba4e02052ce1c[m
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Thu Oct 1 11:08:45 2015 -0700

    Make X509FindType.FindBySubjectKeyIdentifier correctly check for equality
    
    FindBySubjectKeyIdentifier only checked the byte[].Length and the value of the first byte; it returned false matches for an incremented key value.
    
    Added a test that fails without this change to keep it from regressing.

[33mcommit 5da58c0a057b4434b49145306d66fb00dbfc7c52[m
Merge: 0d203d3 f319198
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Thu Oct 1 11:10:24 2015 -0700

    Merge pull request #3471 from sokket/pal
    
    Shim'ing out GetNameInfo, get/free addrinfo, and GetHostName

[33mcommit 153e42839c3090de8ea705f94fd6f83b119ba4f4[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Sep 28 17:16:44 2015 -0400

    Improve UnixFileStream.Read/WriteAsync consistency and perf
    
    This commit addresses two related issues.
    
    1) When a FileStream is created on Windows with FileOptions.Asynchronous (the default in corefx), synchronous Read and Write operations are actually implemented as blocking wrappers for ReadAsync and WriteAsync.  Since in FileOptions.Asynchronous mode ReadAsync and WriteAsync can be used to issue requests that run concurrently, this also means that a call to Read/Write could safely be made on the stream while a ReadAsync/WriteAsync operation was in progress.  In contrast in the current Unix implementation, Read/Write are not implemented as wrappers for ReadAsync/WriteAsync, so although ReadAsync/WriteAsync can have operations overlapped, using Read/Write while such an operation was outstanding could result in corruption of the FileStream, and in particular of its internal buffer.  In general, such usage patterns are not encouraged, but we should aim to be consistent across platforms in how we handle them and whether corruption is possible.
    
    2) On Windows, when in FileOptions.Asynchronous mode, ReadAsync/WriteAsync use the stream's internal buffer directly, potentially avoiding making any asynchronous calls and just returning synchronously if the request can be satisfied using the buffer.  On Unix we were never doing that.
    
    This commit addresses these as follows:
    - One extra field is added to UnixFileStream that stores additional state used when FileOptions.Asynchronous is set.  This state includes a semaphore used to synchronize operations, as well as storage for the buffer/offset/count from the currently active async call, and a cached task that can be handed back for some ReadAsync operations.
    - When FileOptions.Asynchronous is not set, little changes: Read/Write/ReadAsync/WriteAsync/ReadByte/WriteByte all check _useAsyncIO, and do exactly what they do today if it's false.
    - When FileOptions.Asynchronous is set, Read/Write/ReadByte/WriteByte wrap their current behavior with calls to the semaphore's Wait/Release, such that they will be appropriately serialized with other outstanding asynchronous operations happening on the stream.  This addresses issue (1).
    - For (2), when FileOptions.Asynchronous is set, ReadAsync/WriteAsync check whether there is enough data/space in the internal buffer to satisfy the request synchronously, and if there is they do the buffer copy synchronously and return an already completed task.  Since it's very common to ask for the same amount of data on each call, and thus if it's satisified by the buffer get exactly the same amount of data on each call, in ReadAsync we cache a task with a Result of the last number of bytes returned, and we reuse that task the next time if it contains the appropriate count.  This same optimization is already employed in the Windows implementation. When we do need to schedule work asynchronously, we also do so explicitly using a continuation off of the semaphore's WaitAsync rather than using the base implementation.  Due to the base Stream's implementation and its need to account for legacy async models, this ends up reducing the amount of memory used to schedule the async operation by ~50%.

[33mcommit 0d203d30289044806630cb194ffc221d62c4fb24[m
Merge: 8ea328a 2b70316
Author: Krzysztof Cwalina <kcwalina@microsoft.com>
Date:   Thu Oct 1 10:47:24 2015 -0700

    Merge pull request #3561 from KrzysztofCwalina/WebEncoders
    
    Removed dependency on System.Runtime 4.0.20

[33mcommit 8ea328a05df9f18c0ba93ccf479a7e3a1cbca639[m
Merge: e90731e 86241bd
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Thu Oct 1 10:39:08 2015 -0700

    Merge pull request #3575 from pgavlin/FixSocketsBufferPinning
    
    Fix a bug in Windows async sockets.

[33mcommit 2b703164ffdea6e0466e8df6619db8bdcfadbeaf[m
Author: Krzysztof Cwalina <kcwalina@microsoft.com>
Date:   Wed Sep 30 13:04:52 2015 -0700

    Removed dependency on System.Runtime 4.0.20
    
    This component needs to depend on System.Runtime 4.0.10,
    which does not have Buffer.MemoryCopy exposed.
    This change adds an implementation of Buffer.MemoryCopy directly to this component.

[33mcommit e90731ef2c14c65ce5a3525679bdaec713f560b4[m
Merge: 834671b 7c59e04
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 1 12:45:53 2015 -0400

    Merge pull request #3578 from kapilash/curl_redirection_fix
    
    CURL Handler redirect fixes

[33mcommit 834671b02f41d32216bf21d832d11acfcbc5c75e[m
Merge: 6ea23e6 5a8d23b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 1 12:07:17 2015 -0400

    Merge pull request #3582 from stephentoub/fix_crypto_interop
    
    Fix seg faults due to incorrect crypto DllImport signatures

[33mcommit 5a8d23be16d6baed0968b5156f866291b451a699[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Oct 1 11:36:07 2015 -0400

    Fix seg faults due to incorrect crypto DllImport signatures
    
    Three DllImports were declared to return strings rather than IntPtr.  Returning a string like this should only be done when the native code is allocating a ```char*``` that must be freed by the consumer, and the CLR dutifully attempts to do so after marshaling the ```char*``` to the managed string.  However, these three DllImports all return ```char*```s that shouldn't be freed, which was resulting in seg faults.
    
    The fix is simply to declare the DllImports to return IntPtr, and then use Marshal.PtrToStringAnsi to do the marshaling.

[33mcommit 6ea23e6519e0e7c4d8987a617142ed26eb3e97b0[m
Merge: c85dad1 d433faa
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 1 10:24:22 2015 -0400

    Merge pull request #3579 from stephentoub/disable_alc_test
    
    Disable failing AssemblyLoadContext test

[33mcommit 7c59e04ce8b26887c386fc3045882196a3142b36[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Thu Oct 1 12:42:55 2015 +0530

    CURL Handler redirect fixes
    
    This commit fixes the following issues  in CurlHandler w.r.t following URI redirection
    
    * Ensure that the credentials are nullified at the right place. We should not set username and/or password to null unnecessarily. libcurl differentiates between unset UserNames/Passwords and null user names/passwords
    
    * Ensure that libcurl follows only HTTPS uri if the original request was for a HTTPS URL.
    
    * Ensure that libcurl follows only a HTTPS or a HTTP uri if the original request was for a HTTP URL.
    
    * Ensure redirect results in a proper response code
    
    * For all requests, limiting protocols to http and https

[33mcommit c85dad19b6c768615af3a7ed48292827df1211bf[m
Merge: a8c301e 09932a4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 1 09:20:44 2015 -0400

    Merge pull request #3564 from pgavlin/SocketsSendReceiveTests
    
    Add unidirectional tests for Socket.{Send,Receive}.

[33mcommit a8c301e2940f423c99443cb7ec056e795587c946[m
Merge: 94d289b a0d361d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 1 09:02:27 2015 -0400

    Merge pull request #3521 from ellismg/disable-failing-osx-tests
    
    Disable OSX tests failing in CI

[33mcommit d433faa3fa308288a20151ebe076aaf3a9f1c2d0[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Oct 1 09:00:02 2015 -0400

    Disable failing AssemblyLoadContext test

[33mcommit 94d289bb34834761be5480ee45f6e0199d5d7662[m
Merge: 7e3a3b8 69b8724
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 1 08:45:12 2015 -0400

    Merge pull request #3553 from bartonjs/sslstream_extrastore
    
    Extract the whole cert chain during SSL handshake.

[33mcommit 7e3a3b83029b9ad821890ac64aae5eb4167bf000[m
Merge: 252333c 2b44375
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 1 08:35:29 2015 -0400

    Merge pull request #3545 from justinvp/dictionary_ctor_tests
    
    Add initial Dictionary<TKey, TValue> constructor tests

[33mcommit 252333c428055b628495f72214936c0a05de9477[m
Merge: 4efcf86 82a82c1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 1 08:33:10 2015 -0400

    Merge pull request #3523 from ianhays/perf
    
    Updated performance tests

[33mcommit 4efcf8614016bcad530cd74a20a5a29053c1da0e[m
Merge: 1338765 c26ece1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Oct 1 08:30:17 2015 -0400

    Merge pull request #3500 from akoeplinger/keyvaluepairs-coverage
    
    System.Collections.NonGeneric: populate collections in debugger attribute tests

[33mcommit 1338765c9d6be95506edcdf2dab00f4c5d9153d2[m
Merge: 05137b6 ad55c1d
Author: David Shulman <david.shulman@microsoft.com>
Date:   Wed Sep 30 20:49:57 2015 -0700

    Merge pull request #3554 from davidsh/more_http_tests
    
    Add more HTTP tests

[33mcommit ad55c1d5685afc4009cb2481fcc7c5e4f4a551f8[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Sep 29 16:20:12 2015 -0700

    Add more HTTP tests
    
    * Add more tests ported from the internal ToF tests.
    * Cleanup existing tests to be consistent in style and format as it has
    drifted due to many different people working on the tests.
    * Disposing the HttpClient object will dispose the handler as well so we
    don't need multiple 'using' statements unless we are explicitly testing
    dispose ordering semantics.

[33mcommit 86241bd4e80971e803b1c7440888fee23afaa1d3[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Wed Sep 30 20:08:03 2015 -0700

    Fix a bug in Windows async sockets.
    
    Consider the following sequence of events for a SocketAsyncEventArgs `args`
    and a non-null `byte` buffer `buf`:
    1. `args._buffer` is set to `buf` via `args.SetBuffer(buf, 0, buf.Length)`
    2. Some asychronous call is made using `args` (e.g. `socket.SendAsync(args)`)
    3. The asynchronous call completed
    4. `args._buffer` is set to `null` via `args.SetBuffer(null, 0, 0)`
    5. A GC occurs that relocates `buf`.
    6. `args._buffer` is reset to `buf` via `args.SetBuffer(buf, 0, buf.Length)`
    7. Another asynchronous call is made using `args` (e.g.
       `socket.SendAsync(args)`)
    
    - (2) will pin `buf` via a `PreAllocatedOverlapped` instance, store the
      instance in `args._preAllocatedOverlapped`, set `args._pinState` to
      `PinState.SingleBuffer`, set up a native overlapped object, and finally set
      `args._ptrNativeOverlapped` to a safe handle that wraps the overlapped
      object.
    - (3) will dispose the handle stored in `args._ptrNativeOverlapped` and set
      `args._ptrNativeOverlapped` to `null`.
    - (4) will call `args.FreeOverlapped`, which will dispose
      `args._preAllocatedOverlapped` (thus unpinning `buf`) and set
      `args._preAllocatedOverlapped` to `null`. `args._pinState` and related
      fields will not be updated: the code that does so is conditional upon
      `args._ptrNativeOverlapped` being non-`null`, and (3) already set the
      same to `null`.
    - (6) will call `args.CheckPinSingleBuffer`, which will observe that
      `args._pinState` is `PinState.SingleBuffer` and `_pinnedSingleBuffer`
      is the same as `_buffer` and consider the buffer already pinned. As a
      result, the call will not re-pin `buf`.
    - Because (6) did not re-pin `buf`, the asynchronous call made in (7) will
      reuse the address at which the buffer was located the last time it was
      pinned. At best, this address is no longer mapped and the call results in
      an AV; at worst, this address contains unknown (and potentially sensitive)
      data.
    
    The fix is to reset `_pinState` and related fields when `_preAllocatedOverlapped`
    is disposed.

[33mcommit f3191981b3739742e4f728b6a13a880abe12c5a6[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Mon Sep 28 13:37:05 2015 -0700

    Shim'ing out GetNameInfo, get/free addrinfo, and GetHostName.
    
    The calls to getaddrinfo are not 1-to-1 with the native calls due to
    complexities around the native structs. Calls using sockaddr and
    addrinfo have nested structs pointing to different data depending
    on if the IP is IPv4 or IPv6. To mitigate the complexities around
    this code and around the underlying struct differences on the
    currently supported platforms, I kept the same calling pattern (as
    in Get* and Free*) but converted them to use an intermediate data
    structure that is defined in the PAL. We can then take in the
    required data from the Managed World and determine which native
    types are required, handle all the native structs and casts, and
    give back only the information that the managed code needs in a
    much simpler format.

[33mcommit 09932a45e3cfd470f7386d04b7aa683f30a753ac[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Wed Sep 30 10:36:52 2015 -0700

    Add unidirectional tests for Socket.{Send,Receive}.
    
    These tests send data in a loop from one socket to another and check that
    all data was correctly received. There are tests for each of:
    - {SendTo,ReceiveFrom}
    - {Begin,End}{SendTo,ReceiveFrom}
    - {SendTo,ReceiveFrom}Async
    - {Send,Receive}
    - {Begin,End}{Send,Receive}
    - {Send,Receive}Async
    
    The SendTo/ReceiveFrom tests use UDP sockets; the others use TCP sockets.
    All tests use either the IPv4 or IPv6 loopback interface.

[33mcommit 9ff902c77ad34959c154b1289dac19a54ba2cffb[m
Author: Tomas Matousek <tomat@microsoft.com>
Date:   Wed Sep 30 12:06:01 2015 -0700

    Add portable PDB reader to System.Reflection.Metadata

[33mcommit 2b443752cfea182dc481e5b0b55674352141a413[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Tue Sep 29 09:32:16 2015 -0700

    Add initial Dictionary<TKey, TValue> constructor tests
    
    Tests for the Dictionary<TKey, TValue> constructors that accept an
    IDictionary<TKey, TValue> parameter.

[33mcommit 05137b690dedb6f71ea3decafd8ff99fe0d11b3b[m
Merge: c961581 ebf752b
Author: Pallavi Taneja <pallavit@users.noreply.github.com>
Date:   Wed Sep 30 10:28:56 2015 -0700

    Merge pull request #3536 from pallavit/removeSecureStringFork
    
    Remove System.Security.SecureString from .NetCore

[33mcommit df648a8f60ac70113bdcbb2695ce87e3ef320dee[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Sep 30 17:44:43 2015 +0100

    Don't cache Func<T> produced by EnumerableExecutor<T>
    
     Method is never called twice on same instance, so caching saves nothing.
    
    Remove redundant array creation.
    
     No calling code benefits from this. Use Where rather than explicit
     filtering with yield as one caller then uses Where so the predicates
     can be combined.
    
    Hold result of repeated calls to GetTypeInfo in local
    
    Hold result of repeated calls to Method getter in local
    
    Don't construct array just to select just one element from it.

[33mcommit 01ee1a956ee9d4e4a0f7c8927ac5da3f5faf5927[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Sep 30 17:30:13 2015 +0100

    Prevent stack overflow from EnumerableQuery of null enumerable
    
    Fixes #3546
    
    If an EnumerableQuery is created from a null IEnumerable<T>, calling
    GetEnumerator() will cause infinite recursion. Change this to throw
    immediately.

[33mcommit 69b872484086379160ea03bcfe8fa55fbeaec0db[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Sep 30 08:48:40 2015 -0700

    Extract the whole cert chain during SSL handshake.
    
    When the server sends the whole cert chain, extract the elements after the leaf/EE certificate to be passed into X509Chain.ChainPolicy.ExtraStore; this will prevent failures due to unknown intermediate CAs (and may also prevent the need to download that intermediate).

[33mcommit c961581bb785b139fb8cf8153ea107f959056965[m
Merge: 8b6efd4 4511c6f
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Sep 30 08:35:02 2015 -0700

    Merge pull request #3531 from JonHanna/enumerable_query_tests
    
    Add EnumerableQuery tests

[33mcommit a3702f6d2e5c348233e823cee8e0d1b5d652359b[m
Author: Vancem <VanceMorrison@comcast.net>
Date:   Wed Sep 30 08:26:24 2015 -0700

    Rename System.Diagnostics.Tracing.Telemetry.TelemetrySource -> System.Diagnostics.DiagnosticSource
    Rename the DLL from System.Diagnostics.Tracing.Telemetry -> System.Diagnostics.DiagnosticSource
    WriteTelemetry -> Write

[33mcommit 4511c6fd77195ce0e8fa4c5c30a7b298d11bfb79[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Sep 29 13:54:25 2015 +0100

    Add EnumerableQuery tests

[33mcommit 8b6efd4a91288d94b13f9757c6f1a3b356d39dd8[m
Merge: ebd82ba 53f3456
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Sep 29 21:18:30 2015 -0700

    Merge pull request #3548 from pgavlin/SocketsPerfOuterLoop
    
    Move Sockets performance tests into [OuterLoop].

[33mcommit 53f3456ff988303c223bc46309618059eae02fc1[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Sep 29 18:14:29 2015 -0700

    Move Sockets performance tests into [OuterLoop].
    
    Fixes #3495, #3542.

[33mcommit ebd82ba9e5032813ef68a381400130e51b682c88[m
Merge: 1ee4f60 2c09d41
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Sep 29 17:22:54 2015 -0700

    Merge pull request #3541 from pgavlin/SocketsNoAssertAsyncFailure
    
    Remove Assert(asynchronous failure) from Sockets tests.

[33mcommit ebf752bf2c3fe7f6a04fbd3ef2db536700318e17[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Tue Sep 29 17:18:49 2015 -0700

    Update the lock files for the updated projects

[33mcommit 2c09d418fab022e24c53f5c34c81686393b0ac70[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Sep 29 15:54:29 2015 -0700

    Address PR feedback.
    
    - Remove `DoAsyncCall` in favor of explicitly checking the return value
      of the async call itself.

[33mcommit 46db5bcbb484baf02f98320287d2fe0bd2e86599[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Tue Sep 29 11:08:30 2015 -0700

    Remove SecureString usages

[33mcommit 1ee4f60145a851adbacbb16e7b0c65bec3ec0d02[m
Merge: 6e819f8 cec3a0f
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Tue Sep 29 13:41:30 2015 -0700

    Merge pull request #3513 from bartonjs/update_package_refs
    
    Update all CoreFx package references to 23328 build.

[33mcommit 82a82c16418f094e82117825940368c8c5da2ef4[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Tue Sep 29 13:32:35 2015 -0700

        Updated performance tests
    
        - PerfUtils is no longer static and is instantiated on a test-by-test basis
        - Greatly increased the size of the testable area for a number of the tests
        - Tweaked the collection and innerIteration sizes for a number of tests
        - Fixed some namespace bugs

[33mcommit b4695480bb328d1631bd3b44bf6ef17a59aa7850[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Sep 29 13:09:23 2015 -0700

    Remove Assert(asynchronous failure) from Sockets tests.
    
    In principle, any call that fails ansynchronously may also fail synchronously.

[33mcommit 6e819f8f8215bd0c0cdb54eee19e227e183279c1[m
Merge: a237f8e 0c5cd6c
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Sep 29 13:06:19 2015 -0700

    Merge pull request #3539 from ellismg/update-build-tools-to-00097
    
    Bump buildtools to 00097

[33mcommit 0c5cd6cf5f22be1169322e1a748e0ae26a9fdeda[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Sep 29 12:38:32 2015 -0700

    Bump buildtools to 00097

[33mcommit 39ff855597bee655d1746452a461f013c3fc6a74[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Sep 29 14:31:23 2015 -0500

    Enabling fixed System.Text.Encoding tests.
    
    I also logged a specific issue for a Encodings.Web test to use a Theory instead of a Fact, which is still causing an error after globalization has been implemented.

[33mcommit a237f8e9b15fdf1bd163c0653b7683db5cbdae06[m
Merge: c7cc3e3 318c6b9
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Tue Sep 29 12:02:09 2015 -0700

    Merge pull request #2986 from saurabh500/sqlclient
    
    Add System.Data.SqlClient source

[33mcommit c7cc3e34a157b162955578722a51534c7f49b590[m
Merge: c7060bd 8d9817f
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Sep 29 12:00:46 2015 -0700

    Merge pull request #3519 from pgavlin/SocketsAnonymousPorts2
    
    Use anonymous ports in S.N.Sockets.Legacy/test/FunctionalTests.

[33mcommit cec3a0f2db542bfa9d9c56bf988d966eacc35ad9[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Sep 28 15:48:22 2015 -0700

    Update all CoreFx package references to 23328 build.
    
    `build.cmd /p:LockDependencies=true` was the start of this change, but some errors with xunit build numbers led to all xunit upgrades being reset back to what they had in master.
    
    project.json changes:
    * System.Net.Security\src Switch off of explicit beta versioning, use the same baseline as everyone else.  The S.S.C.Algorithms explicit upgrade is no longer required.
    * System.Net.Requests\tests didn't build.  Looking at the project.lock.json change, it appeared that a System.Net.Http reference was lost, restored it.
    * System.Net.Http\tests didn't build. Looking at the project.lock.json change, it appeared that a System.IO.FileSystem reference was lost, restored it.
    * System.Net.WebSockets.Client\src didn't build. Looking at the project.lock.json change, it appeared that a System.Collections (4.0.10) reference was lost, restored it.
    * System.Diagnostics.TextWriterTraceListener\tests needed the runtime reference to load the correct System.Diagnostics.TraceSource binary.

[33mcommit 8d9817ff2e76893b08f688506abc848cc5d477de[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Sep 29 11:33:15 2015 -0700

    Address PR feedback.

[33mcommit 318c6b9fcd38ab81392bfc1522af14f0e43e2a2b[m
Author: Saurabh Singh <sausing@microsoft.com>
Date:   Wed Aug 26 20:19:07 2015 -0700

    Adding the missing file in the build for PR and incorporating PR feedback

[33mcommit 2ccf129032f1b6d3ca988889b65b4b70eaeba29f[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Wed Aug 26 19:15:31 2015 -0700

    Add System.Data.SqlClient source

[33mcommit c7060bdd184ab54db492b511b59e627c75264bac[m
Merge: 85796c6 4688c90
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 29 13:12:01 2015 -0400

    Merge pull request #3526 from kseo/rename
    
    Rename the local variable queue to stack.

[33mcommit 4688c9038c9214f9617dfc32c88a3d715b74f25d[m
Author: Kwang Yul Seo <kwangyul.seo@gmail.com>
Date:   Tue Sep 29 17:25:51 2015 +0700

    Rename the local variable queue to stack.
    
    It is an instance of ImmutableStack.

[33mcommit 85796c629cab4b49c05a584ba79895abf272ce8a[m
Merge: ebbed16 d4a08f5
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Mon Sep 28 22:13:05 2015 -0700

    Merge pull request #3490 from rajansingh10/NetFeature2
    
    Incorporated some comments - Net Secure Xplat Implementation

[33mcommit d4a08f5df7d21764792b448cf0f4a3f7b39e6958[m
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Tue Sep 22 21:13:07 2015 +0530

    System.Net.Security - Fixed mutiple review comments, Added TODOs with issue number for all pending items

[33mcommit ebbed1633fde129caba4df774f0e59fd3f69b43e[m
Merge: 85ec0f5 fd7231f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Sep 28 23:30:48 2015 -0400

    Merge pull request #3522 from JonHanna/query_dead_code
    
    Simple removal one line redundant code.

[33mcommit fd7231fc7227e8c0b1cb5cc271c013fdf96ce8d4[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Sep 29 02:50:24 2015 +0100

    Simple removal one line redundant code.
    
    ReadOnlyCollection is used to create an array, but that array is then never
    used.
    
    As the collection cannot be null, doesn't even change exception timing of null
    reference to remove it, just removes redundant array construction.

[33mcommit a0d361d142399845eca08cc754157d4892af6d2c[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Mon Sep 28 18:47:50 2015 -0700

    Disable OSX tests failing in CI

[33mcommit 590f4a38afbc90a5869997594bdcb8aad2954e2b[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Sep 28 18:14:26 2015 -0700

    Address PR feedback from #3508.

[33mcommit 85ec0f52c8750b96b31d6e3224e2304643d94532[m
Merge: 5f53ce0 75f0e3b
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Sep 28 18:13:22 2015 -0700

    Merge pull request #3508 from pgavlin/SocketsAnonymousPorts
    
    Change S.N.Sockets/tests to use (mostly) anonymous ports.

[33mcommit 5f53ce082e67406dad38442196f83f24d7fedd53[m
Merge: 13fd180 3c10f3d
Author: Ian Hays <ianha@microsoft.com>
Date:   Mon Sep 28 17:50:15 2015 -0700

    Merge pull request #3516 from ianhays/path
    
    Modified PathInternal.Unix for great perf increase

[33mcommit 13fd180b20a6a2e1d9868784a3a3e57ffdbd96de[m
Merge: 2bfa699 1e08ba4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Sep 28 20:00:36 2015 -0400

    Merge pull request #3514 from Alcaro/patch-1
    
    Fix Markdown typo in the coding style

[33mcommit 3c10f3dbec3daa52b5b26f2bf14477e96c22eca1[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Mon Sep 28 16:56:37 2015 -0700

    Modified PathInternal.Unix for great perf increase
    
    resolves #3515, #3515

[33mcommit 18701e1f718f3862e17ce19932e922187cec50d7[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Sep 28 15:18:34 2015 -0700

    Use anonymous ports in S.N.Sockets.Legacy/test/FunctionalTests.
    
    This is a follow-up to #3508. With this change, all of the legacy functional
    tests use anonymous ports.

[33mcommit 1e08ba44eb93bdd1dddc73cde6c170cfc6c48168[m
Author: Alcaro <Alcaro@users.noreply.github.com>
Date:   Tue Sep 29 00:51:39 2015 +0200

    Fix Markdown typo

[33mcommit 2bfa699a68925573826acfd426b6d25ea7240ad7[m
Merge: dc90019 13bcab0
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Mon Sep 28 15:26:50 2015 -0700

    Merge pull request #3510 from CIPop/SNSocketsTests
    
    Disabling System.Net.Sockets tests intermittently failing in CI.
    
    #3497 #3447

[33mcommit dc900196af30b6b2469d229446ce42105980abd8[m
Merge: 5a8e4fd 33a9316
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Mon Sep 28 14:04:17 2015 -0700

    Merge pull request #3507 from AtsushiKan/morecng
    
    Fix issue #3502

[33mcommit 13bcab06825f2dab3e50e80ed0b2b3df26f19074[m
Author: Cristian Pop <Cristian.Pop@microsoft.com>
Date:   Mon Sep 28 14:03:09 2015 -0700

    Disabling System.Net.Sockets tests intermitently failing in CI.

[33mcommit 75f0e3bb4f40ef9fe936a24998f68723662ef30d[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Sep 28 11:13:17 2015 -0700

    Change S.N.Sockets/tests to use (mostly) anonymous ports.
    
    This change only touches tests in System.Net.Sockets/tests; those under
    S.N.Sockets.Legacy/tests will be taken care of in a follow-up commit.

[33mcommit 33a9316e65578d5c3ae3195b26c1fa4af331d067[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Mon Sep 28 13:21:42 2015 -0700

    Fix issue #3502

[33mcommit 5a8e4fddff83064584bb6551811a4dc31c4913d8[m
Merge: 35f2a11 3befd1b
Author: Koundinya Veluri <kouvel@users.noreply.github.com>
Date:   Mon Sep 28 11:17:28 2015 -0700

    Merge pull request #3101 from kouvel/LoadUnmanagedDll
    
    Add AssemblyLoadContext.LoadUnmanagedDllFromPath to System.Runtime.Lo…

[33mcommit c26ece11d2c1df042dc533ae86eab9d6a8e61145[m
Author: Alexander Köplinger <alex.koeplinger@outlook.com>
Date:   Mon Sep 28 19:53:03 2015 +0200

    System.Collections.NonGeneric: populate collections in debugger attribute tests
    
    This follows the lead of ImmutableCollections tests and ensures the previously uncovered
    KeyValuePairs internal class is covered. Coverage of this package slightly increases from 94.3% to 94.6%.

[33mcommit 35f2a11d38e3309c1da59d867b46402b08a15c75[m
Merge: aae4427 46678dc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Sep 28 13:47:25 2015 -0400

    Merge pull request #3498 from davidsh/update_readme
    
    System.Net changes for README.md

[33mcommit 3befd1bbd91453eb6d86b6c1e893b28562452d77[m
Author: Koundinya Veluri <kouvel@microsoft.com>
Date:   Wed Sep 2 13:13:12 2015 -0700

    Add AssemblyLoadContext.LoadUnmanagedDllFromPath to System.Runtime.Loader reference assembly
    
    This patch adds the new API to the System.Runtime.Loader reference assembly. Tests will be added separately, after the new API
    is published and can be consumed.
    
    Part of dotnet/coreclr#937 and dotnet/corefx#3054

[33mcommit 46678dc7bdf924d54cd91ae8b77ef848e4091cd9[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Sep 28 10:26:27 2015 -0700

    System.Net changes for README.md
    
    - Update System.Net.Security description
    - Add System.Net.Sockets description

[33mcommit aae4427cd46cbbcd81f95bd992b70be09534f58e[m
Merge: 0320ab0 28c7cd6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Sep 28 12:51:41 2015 -0400

    Merge pull request #3491 from Clockwork-Muse/2898_System.Runtime
    
    Update test namespaces in some System.Runtime.* assmblies

[33mcommit 28c7cd6db19a8be0a6f2443c65ff3a00c716e931[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Thu Sep 3 11:50:47 2015 +0900

    Update test namespaces in System.Runtime.Numerics per #2898.
     - Clean up `using`s.

[33mcommit ad9d32b919642d471b9ebf005441a33b09497707[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Mon Sep 28 14:09:29 2015 +0900

    Update test namespaces in System.Runtime.Extensions per #2898.
     - Clean up `using`s.
     - Some files still have no namespace.

[33mcommit 58960e25ece02c69d4d5ee42ba324e360e581963[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Mon Sep 28 14:00:16 2015 +0900

    Update test namespaces in System.Runtime per #2898.
     - Clean up `using`s.
     - Some files have no namespace.

[33mcommit 0320ab029e7db749f1ba40ebbb8f973c87172ddf[m
Merge: d64ed00 8b3d0a4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Sep 28 08:10:51 2015 -0400

    Merge pull request #3492 from Clockwork-Muse/2898_System.ServiceProcess.ServiceController
    
    Update test namespace in System.ServiceProcess.ServiceController

[33mcommit 8b3d0a46340c719073bb956513cbe21f19e520a5[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Thu Sep 3 12:23:05 2015 +0900

    Update test namespaces, per #2898
    Clean up `using`s.

[33mcommit d64ed004af63e29d4469def79b4c4ba8cb66df63[m
Merge: 8f84bb3 40ee8c0
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Sun Sep 27 15:55:00 2015 -0700

    Merge pull request #3487 from jasonwilliams200OK/clang-err
    
    Native: Disables a warning for clang v3.6.

[33mcommit 40ee8c0bf4d8fcdd46cc3058bf1f7eb379a47130[m
Author: Peter <necmon@yahoo.com>
Date:   Sun Sep 27 16:50:18 2015 +0000

    Native: Disables a warning for clang v3.6.
    While building with clang36 on FreeBSD (`./build native clang3.6`),
    I was getting this warning: `macro name is a reserved identifier`.

[33mcommit 8f84bb37e843a1b2324583878efa54d82ce9820e[m
Merge: 5ccf8c5 a024bfd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Sep 27 15:45:32 2015 -0400

    Merge pull request #3488 from pgavlin/CasingFix
    
    Fix file casing in S.D.Process.csproj.

[33mcommit 5ccf8c591bf756c457daa7cc0d093506c9d429e6[m
Merge: 8088549 efaa387
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Sun Sep 27 12:16:18 2015 -0700

    Merge pull request #3486 from ellismg/remove-test-platform-hack
    
    Remove platform specific hack in test projects

[33mcommit a024bfdb1587711dd3ad2b11b0d4c811f4163269[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Sun Sep 27 12:13:44 2015 -0700

    Fix file casing in S.D.Process.csproj.
    
    This fixes a break when cross-compiling the Windows code on other
    platforms.

[33mcommit efaa3878068c6a927ce58b66144d40116de56749[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Sun Sep 27 08:30:38 2015 -0700

    Remove platform specific hack in test projects
    
    Previously CI would use the output of the Windows build to grab the test
    assemblies for all the cross plat builds. To work around this some test
    projects had a csproj per platform which set properties and then
    included a common file. The CI system no longer has this limitation (it
    now uses the Linux build to get the Linux tests, etc.) so we can remove
    this hack.

[33mcommit 80885498c56e8eead320d2a4cf63ec0efb022dfa[m
Merge: e5c73c4 e95c86a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Sep 26 20:28:57 2015 -0400

    Merge pull request #3478 from bbowyersmyth/StringStartsWithTests
    
    Additional String.StartsWith tests

[33mcommit e5c73c43c952ae2c7dfc54039ea2dbb314db4ac2[m
Merge: 0a1b102 e348434
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Sat Sep 26 16:51:44 2015 -0700

    Merge pull request #3479 from jasonwilliams200OK/native
    
    Native: Multiple fixes

[33mcommit e3484348fe6df0a12f2ac1e51a6b7372d77ca369[m
Author: Peter <necmon@yahoo.com>
Date:   Sat Sep 26 10:12:37 2015 +0000

    Build: Do not search for unrequired dependencies.
    * It builds without llvm-* dependencies.
    * Minor conditions and comment fixes.

[33mcommit d9cf2d8157d86616d48c9984b91b19326e8de071[m
Author: Peter <necmon@yahoo.com>
Date:   Sat Sep 26 09:50:12 2015 +0000

    Native: Fixes [get/set]priority cast for FreeBSD.
    Clang on FreeBSD caught this as an error.

[33mcommit e95c86a916cdefd54d3bfe3f6ea317c6cc3e39c6[m
Author: Bruce Bowyer-Smyth <bbowyersmyth@live.com.au>
Date:   Sun Sep 27 07:37:19 2015 +1000

    Additional String.StartsWith tests

[33mcommit 0a1b102698d50a6006f4f6a82737a16bde6d6b88[m
Merge: 64a48fd 11ea534
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Sep 26 11:56:29 2015 -0400

    Merge pull request #3304 from ianhays/perf2
    
    Added performance microbenchmarks

[33mcommit 64a48fde3be953de9ae0915c2787f9da3fe9cc0b[m
Merge: a8a7cb8 1fe3d77
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Sat Sep 26 02:10:46 2015 -0700

    Merge pull request #3472 from bartonjs/restore_exception_order
    
    Restore the exception order in ValidateCreateContext.

[33mcommit a8a7cb830460ccee137281a033ba7d6df26d5bb1[m
Merge: 748c152 78acaed
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Sep 25 16:41:09 2015 -0700

    Merge pull request #3469 from pgavlin/SocketsFix
    
    Fix a behavior mismatch in Linux Sockets.

[33mcommit 748c1521cc722ce6761eea4e7fcaf2c8af223367[m
Merge: 6f704eb d0c10e0
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Sep 25 15:20:23 2015 -0700

    Merge pull request #3470 from ellismg/icu-collation-prep-test-disable
    
    Disable tests failing with ICU collation

[33mcommit 78acaedb8ff34e96f21172a4cbbaaca4b41c227e[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Fri Sep 25 15:04:33 2015 -0700

    Address CR feedback.

[33mcommit 1fe3d77606061dcebe795e2fb9b3721f05ea3008[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Fri Sep 25 14:37:16 2015 -0700

    Restore the exception order in ValidateCreateContext.
    
    During PAL refactoring the order that a null server certificate and no valid protocols were checked got flipped, resulting in a minor observable difference in exception flows.
    
    This restores the order to what it was before.

[33mcommit 6f704eb954628e88bea4760c687fc321b7773bd5[m
Merge: 391d5c7 ed6c084
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Sep 25 14:35:19 2015 -0700

    Merge pull request #3463 from dotnet/dev-sslstream
    
    Enable SslStream for Unix

[33mcommit d0c10e03333c4789c076c7b3552dc8ecf41972e9[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Sep 25 13:24:41 2015 -0700

    Disable tests failing with ICU collation
    
    We will need to investigate these tests to understand if the ICU
    behavior is expected or not (it's possible that the sort weight
    differences between Windows and ICU is problematic here).
    
    Commiting these now before the ICU collation work lands in CoreCLR to
    keep CI happy.

[33mcommit 391d5c7509b95b025b6f0f30a180438a4c9be0b2[m
Merge: 62c7fd9 e4385ba
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Sep 25 15:29:31 2015 -0400

    Merge pull request #3458 from Clockwork-Muse/2898_System.Reflection
    
    Correct test namespaces for some System.Reflection.* assemblies

[33mcommit 62c7fd9e1487dc3dafe037cd29411a012bd6010c[m
Merge: da94569 406f76a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Sep 25 15:28:48 2015 -0400

    Merge pull request #3466 from tarekgh/FixDateFormatPatternTests
    
    Fix the Globalization test with checking date/time formats

[33mcommit c9fe2ad047375fef597356a38704aeccfad1be4d[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Fri Sep 25 12:07:52 2015 -0700

    Fix a behavior mismatch in Linux Sockets.
    
    Winsock tolerates a call to shutdown[1, 2] on a TCP socket whose underlying
    connection has already transitioned to the CLOSED state[3]. Linux, however,
    returns ENOTCONN, since the connection is already closed.
    
    This change fixes the mismatch by exposing the socket instance's connection
    state (i.e. Socket._isConnected) to the PAL and changing the *nix
    implementation of SocketPal.Shutdown to ignore ENOTCONN if the socket is
    connected.

[33mcommit 406f76a6337248a7673a0fcb5835d41bd35caafc[m
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Fri Sep 25 10:59:43 2015 -0700

    Fix the Globalization test with checking date/time formats
    
    All globalization tests shouldn't be written assuming any fixed culture data
    culture data (including the date/time formats) can be changed by the OS or
    can be overriden by the users which make the tests to fail.

[33mcommit da945695aa3306b06cfe656f6e3a5fce34398c68[m
Merge: f5261f6 40bb1ca
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Sep 25 13:17:52 2015 -0400

    Merge pull request #3462 from steveharter/LinuxTest
    
    remove failing globalization test on Linux

[33mcommit ed6c0849ecc0dfa22d930e20490c847b0bd186c2[m
Merge: 0edb1d0 f5261f6
Author: bartonjs <jbarton@microsoft.com>
Date:   Fri Sep 25 09:47:22 2015 -0700

    Merge remote-tracking branch 'dotnet/master' into dev-sslstream

[33mcommit 0edb1d08cdd88f4ec97ac0fcbc3ab03d48fc37c4[m
Merge: 0ce6be2 c9407c8
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Sep 25 09:37:22 2015 -0700

    Merge pull request #3449 from bartonjs/sslstream_unix_checkname
    
    Validate hostname when using SslStream as a client

[33mcommit f5261f6c84888784d2f38aa63a544dd1762050d7[m
Merge: 2b7d5c8 5b5717c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Sep 25 11:44:13 2015 -0400

    Merge pull request #3456 from Clockwork-Muse/2898_System.IO
    
    Correct test namespace in System.IO.FileSystem

[33mcommit 2b7d5c84746568a7e3643f03f108fcbe0dbae9f9[m
Merge: 7a29d7d 198551e
Author: VSadov <vsadov@microsoft.com>
Date:   Fri Sep 25 08:36:25 2015 -0700

    Merge pull request #3442 from JonHanna/queryable_tests
    
    Increase test coverage of System.Linq.Queryable

[33mcommit 40bb1ca270b40d395209360779fb5b161702fa90[m
Author: Steve Harter <sharter@microsoft.com>
Date:   Fri Sep 25 10:35:20 2015 -0500

    remove failing globalization test on Linux

[33mcommit 7a29d7da5f1e4be319fb7bf0c2f2d1d141f45eba[m
Merge: 30acd67 4b94c18
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Sep 25 11:07:51 2015 -0400

    Merge pull request #3452 from Clockwork-Muse/2898_System.Collections
    
    Correct test namespaces for System.Collections.*

[33mcommit 30acd6790c056ce8d734c7f8cd6ff17517a64071[m
Merge: 3de6cba 905c8ac
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Sep 25 10:59:28 2015 -0400

    Merge pull request #3453 from Clockwork-Muse/2898_System.Diagnostics
    
    Correct test namespaces for System.Diagnostics.*

[33mcommit c9407c8daa7498ebb4ae1e35c92995f62d8c3c38[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Sep 24 21:05:47 2015 -0700

    Validate hostname when using SslStream as a client
    
    Added a method in the crypto shim (CheckX509Hostname) which does the heavy lifting. It may end up making sense to push this up into managed for better flexibility when trying to add support for IDNA; but that would be greatly assisted by having good managed decoders for the subject name pieces and the SubjectAltNames extension.
    
    Verified that it works against an explicit SAN entry and a wildcard SAN entry.

[33mcommit 3de6cba6a7e7b9654e2980678373004067cdcef0[m
Merge: c78305f 3893809
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Sep 25 10:26:58 2015 -0400

    Merge pull request #3457 from Clockwork-Muse/2898_System.ObjectModel
    
    Correct test namespaces for System.ObjectModel

[33mcommit c78305fe5bbf97b5ffac068b5e7c4816a198760a[m
Merge: fad2479 fab2c79
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Sep 25 09:49:29 2015 -0400

    Merge pull request #3455 from Clockwork-Muse/2898_System.Globalization
    
    Correct test namespace in System.Globalization.Extensions

[33mcommit 4b94c18297332fbd991d6c9a8c713b818ce042bb[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Fri Sep 25 22:29:47 2015 +0900

    System.Collections.NonGeneric
    
    - Clean up `using`s in updated files.
    - Move some helper types inside the namespace in the shared file.

[33mcommit 5d98db946cd949471b8a6d6c3163181f5036a757[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Fri Sep 25 16:22:54 2015 +0900

    System.Collections.Immutable

[33mcommit 3adf37cac6693b348587a45ddcd8d3ce8776138c[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Mon Aug 31 16:20:13 2015 +0900

    System.Collections.Concurrent

[33mcommit fad2479a6bd9d65f0dbcadccb61676f914773f44[m
Merge: ea54432 e275b4b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Sep 25 09:02:15 2015 -0400

    Merge pull request #3459 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit e4385ba6f637acf9d62b8ef673d4911d2a186774[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Fri Sep 25 21:57:58 2015 +0900

    System.Reflection.TypeExtensions

[33mcommit 351cb1a2406cc63546f29d276975d65c4a805698[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Wed Sep 2 18:14:13 2015 +0900

    System.Reflection.Metadata

[33mcommit 55d7edb3fe50a0ab325a181443792c0ff55c4f0b[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Wed Sep 2 17:10:40 2015 +0900

    System.Reflection.Extensions

[33mcommit 38938090b961898d119c61a2ac6fb1e051e0a294[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Fri Sep 25 21:44:28 2015 +0900

    Conform test namespaces in System.ObjectModel to standard in #2898
    
    - Some namespaces changed.
    - `using`s cleaned up in updated files.

[33mcommit 5b5717c2eb8fc88ed5bd59babe39890c581ad622[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Fri Sep 25 21:29:55 2015 +0900

    Update test namespace in System.IO.FileSystem
    
    Update test namespace where applicable.
    Cleanup `using`s in updated files.

[33mcommit fab2c79a8dd4e2cd0441afc28d4eb7282d0d496b[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Wed Sep 2 09:07:09 2015 +0900

    System.Globalization.Extensions

[33mcommit 905c8ac34a2475f98df7e747bfd8947bece5dfb2[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Wed Sep 2 09:01:11 2015 +0900

    System.Diagnostics.Tracing.Telemetry

[33mcommit 5071903e5150cdf6519de6878a57976b721b3771[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Thu Sep 3 18:27:40 2015 +0900

    System.Diagnostics.Process

[33mcommit ea54432aa38643c3953f7e3ee72d253a3c55ecb6[m
Merge: 9fa71e1 f8c4536
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Sep 25 07:09:24 2015 -0400

    Merge pull request #3440 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 9fa71e1a035832c2583f45fab48a0e767be87158[m
Merge: 2de269a da78c49
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Sep 25 07:05:59 2015 -0400

    Merge pull request #3448 from stephentoub/fs_assert
    
    Remove overaggressive assert in UnixFileStream

[33mcommit da78c4987dc463a4de2fd7d0e12515fb7bce424a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Sep 24 23:34:20 2015 -0400

    Remove overaggressive assert in UnixFileStream
    
    I'd added an assert that fires if a DeleteOnClose file's unlink during disposal fails.  But it's valid for it to fail, e.g. if something elsewhere in this process or otherwise deletes or moves the file while it's open.  This happens, for example, in a bunch of our FileSystemWatcher tests.
    
    Removing the assert.

[33mcommit 2de269a1e3bc827804fccdc0dc1d1eb90efaa96e[m
Merge: dea1152 ab1743b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 24 23:24:46 2015 -0400

    Merge pull request #3020 from Clockwork-Muse/516_corefx
    
    Remove custom error checking

[33mcommit dea11520c2dee15235ec44b9e7093ef0f11c5df0[m
Merge: ae855d6 041c9ed
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 24 22:12:50 2015 -0400

    Merge pull request #3443 from steveharter/LinuxTest
    
    Remove failing globalization test on Linux

[33mcommit 0ce6be21666fb9273528da7ce32bc2e8e8b77897[m
Merge: b78ba80 ccbcc01
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Thu Sep 24 18:40:25 2015 -0700

    Merge pull request #3409 from bartonjs/sslstream_bind_privkey
    
    Bind the SSL certificate, when presented with one.

[33mcommit 041c9ed99a1e8ede1041227542354ff0b8451dbd[m
Author: Steve Harter <sharter@microsoft.com>
Date:   Thu Sep 24 19:47:13 2015 -0500

    remove failing globalization test on Linux

[33mcommit 198551e1b26fea4915f8ba3fae2fa6678c637846[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Sep 25 01:05:39 2015 +0100

    Increase test coverage of System.Linq.Queryable
    
    Adapt Enumerable tests for Queryable.
    
    Copy tests for System.Linq.Enumerable.
    
    Remove those specific to Enumerable, varying to test implementation details of
    Enumerable, testing promises of Enumerable that Queryable doesn't promise (e.g.
    stability in OrderBy), or otherwise not relevant.
    
    Move the previous tests in QueryableTests into the relevant class introduced
    with this.
    
    Add some tests for runtime error checks not covered by this.
    
    Increases line/branch coverage of assembly from 74.5%/44.7% to 85.6%/75.5% with
    System.Linq.Queryable going from 86.8%/50.2% to 100%/100%.

[33mcommit ae855d66b1404fbae920f00d6a17309c572ddda7[m
Merge: 3eae6ff 765f4c9
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Sep 24 16:53:03 2015 -0700

    Merge pull request #3413 from nguerrera/resurrect-nuget-config
    
    Resurrect NuGet.config for a more pleasant VS experience

[33mcommit ccbcc0120687e4c21719eb2a9983e753818b2e12[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Sep 24 15:02:03 2015 -0700

    Change S.S.C.OpenSsl project reference to package reference

[33mcommit 3eae6ffddb41ddcf7645d49f32840dcc6de97279[m
Merge: 42f60f5 aa63f31
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Thu Sep 24 16:38:15 2015 -0700

    Merge pull request #3422 from pgavlin/SocketsPR1
    
    Initial import of System.Net.Sockets.

[33mcommit e275b4b36e2148f8df4eda0a07dc860fed047ad0[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Sep 24 16:24:24 2015 -0700

    System.Net.Primitives xplat packaging, targetframework for windows shouldn't denote UWP.
    
    [tfs-changeset: 1529327]

[33mcommit db4b74fc713085553508bc8ca58fb4f8ceb1d02a[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Sep 24 16:18:18 2015 -0700

    System.Net.NameResolution xplat packaging
    
    [tfs-changeset: 1529321]

[33mcommit 42f60f5a5dab877947be0ca358e8c9c2bcbdfe20[m
Merge: c71257e 2e56dd4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 24 19:07:59 2015 -0400

    Merge pull request #3437 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit b78ba80597876349061499132c7ba37a55f0c85a[m
Merge: 67874fd f14f035
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 24 18:45:48 2015 -0400

    Merge pull request #3432 from bartonjs/sslstream_pal_certverify
    
    Adjust the PAL separation for certificate verification

[33mcommit c71257e0f29f5bc9f16d728267f59814fde68558[m
Merge: 47946e4 7b4c307
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 24 18:45:06 2015 -0400

    Merge pull request #3424 from JonHanna/consolidate_enumerable_tests
    
    Tidy up enumerable tests after import of legacy completed

[33mcommit f8c45366460fe08c217c38e8ac21db514006d203[m
Author: Matt Connew <mconnew@microsoft.com>
Date:   Thu Sep 24 15:22:13 2015 -0700

    System.Net.WebSockets.Client implementation for UWP. Fill in some functionality in CoreClr.
    
    [tfs-changeset: 1529284]

[33mcommit 47946e4c53f3c1c9ddb5652ed605e1e549d8bcbb[m
Merge: 44971e4 e659ca4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 24 18:12:10 2015 -0400

    Merge pull request #3430 from eerhardt/NullPassword
    
    Ensure X509 directory based store uses correct file permissions.

[33mcommit 44971e485fc57ca5135893b4d519a27269ac1890[m
Merge: dff901e 9d9b16e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 24 17:06:14 2015 -0400

    Merge pull request #3436 from twsouthwick/update-apiport-link
    
    Update ApiPort directions

[33mcommit dff901e3867d9b1abf8caabc1ab72f6d18129712[m
Merge: 4ef6cb1 b77211a
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Sep 24 14:05:34 2015 -0700

    Merge pull request #3438 from mmitche/fix-html-report-name
    
    Report index file is htm not html

[33mcommit b77211ab7ab69e2aa18a29976f26476d01f6d4cf[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Sep 24 14:04:48 2015 -0700

    Report index file is htm not html

[33mcommit 765f4c99292bab9dcc828040220b600e35db8e5c[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Sep 24 13:45:15 2015 -0700

    Remove unnecessary nuget source

[33mcommit 4ef6cb1227b5bd82cfdeac1ff21c8e4ecf696602[m
Merge: f6fac36 80aa3bc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 24 16:17:23 2015 -0400

    Merge pull request #3433 from nguerrera/disable-against-3391-on-windows-too
    
    Disable test against #3391 on Windows too.

[33mcommit f6fac36d438b4ebb09142f868c07812a3149037d[m
Merge: be3bd4a 157a6b6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 24 16:15:49 2015 -0400

    Merge pull request #3434 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit be3bd4af5f06c688dde4a34d1ffdcaa24be9c588[m
Merge: f106622 deebfed
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 24 16:14:38 2015 -0400

    Merge pull request #3435 from bartonjs/openssl_asymm_handles_master
    
    Merge the OpenSsl DuplicateKeyHandle feature from dev-sslstream

[33mcommit 02ffef7d78807d62599ec480c27134b966d0a5cd[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Wed Sep 23 16:56:18 2015 -0700

    Resurrect NuGet.config for a more pleasant VS experience
    
    The deletion of nuget.config made VS unaware of our feeds and was
    causing builds in VS 2015 to "fail" package restore, but still
    build. So even successful builds had "errors" in the  error list,
    which was most annoying.
    
    Putting the file back gets clean builds without any junk in the
    error list. :)

[33mcommit e659ca4b42fe20da01a3d958b4d4167c8f7f05ae[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Thu Sep 24 14:49:24 2015 -0500

    Respond to PR feedback.

[33mcommit 7b4c3076d65f1e2f3e4e1474026b253845431da7[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Sep 24 20:21:28 2015 +0100

    Tidy up enumerable tests after import of legacy completed
    
    Move tests from EnumerableTests into specific classes (average tests dropped
    as all duplicates).
    
    Change some Fact tests calling helpers into Theory tests fed by properties.
    
    Make EnumerableTests base of test classes.
    
    Move repeated methods and classes into EnumerableTests and inherit. In some
    cases just replacing such classes with anonymous classes.
    
    Check parameter name on all argument exception tests.
    
    Add tests for check of null key‎Selector on OrderBy, ThenBy, etc.
    
    Tests for correct behaviour is enumerable is coerced into being enumerator.
    
    More tests on null checks.
    
    More tests on null checks.
    
    Use Assert.Empty where appropriate.
    
    Typos

[33mcommit f106622ce7706fc750c9f5316b157e67fa56e30f[m
Merge: 0c2c555 4774046
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 24 14:42:59 2015 -0400

    Merge pull request #3429 from justinvp/linqtolist
    
    Enumerable.ToList() Optimization

[33mcommit 9d9b16ee7f1c45622cd8e27750e28dd3f578b49e[m
Author: Taylor Southwick <tasou@microsoft.com>
Date:   Thu Sep 24 11:19:30 2015 -0700

    Update ApiPort directions

[33mcommit aa63f31b4d0f5541621ebd4e0a13d22761ba3c03[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Thu Sep 24 11:07:53 2015 -0700

    Fix up project.json files for Sockets.
    
    This also removes leftover references to System.Diagnostics.Contracts from
    the same.

[33mcommit 2e56dd4922838ec014bdb2722b573f6d5ec75816[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Sep 24 10:39:35 2015 -0700

    System.Net.Requests xplat packaging
    
    [tfs-changeset: 1529153]

[33mcommit 80aa3bc62218a1ffc4625bed4e6fbca32c04f3de[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Sep 24 10:34:03 2015 -0700

    Disable test against #3391 on Windows too.
    
    The test is failing on Windows 10 as well.

[33mcommit 157a6b6ec8671edc3525c9211f847f5c7f6fb563[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Thu Sep 24 10:32:26 2015 -0700

    System.IO.Compression.ZipFile is now platform-agnostic.  Rollback changes to create a platform specific package. This also undoes the way that we are importing packaging.targets / packaging.settings.targets, but I'll be fixing that up in a separate cleanup change.
    
    [tfs-changeset: 1529144]

[33mcommit deebfed3373c537882f38ad5c80b38ead02619c9[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Sep 24 10:32:21 2015 -0700

    EVP_PKEY_get1_EC_KEY was added in a different file in dev-sslstream and master; unifying on the one whose file was named more accurately.
    
    (cherry picked from commit 7941baa3248a9160f4f8f9b319433bd908a9fe01)

[33mcommit c8e1e75bac683eb3ae86d74524a59d089de7f42f[m
Merge: ae899fc 0c2c555
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Sep 24 10:13:57 2015 -0700

    Merge remote-tracking branch 'dotnet/master' into openssl_asymm_handles_master
    
    Conflicts:
    	src/System.Security.Cryptography.X509Certificates/src/System.Security.Cryptography.X509Certificates.csproj

[33mcommit f14f03502bb8cc020c29eeb84d88baab6267dbc0[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Sep 24 10:05:21 2015 -0700

    Make Unix VerifyCertificateProperties validate the chain

[33mcommit 11ea534258ced35948e53a4ece8fb1284698bf8a[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Sep 17 17:55:54 2015 -0700

    Added performance microbenchmarks
    
    - Added "Performance" folders containing perf xunit tests to a number of highly-used libraries (determined by Usage data)
    - Two sets of usage data from store apps; I added a test for every function used in more than 5% of the covered assemblies in both data sets.
    - This is a first-round pass of the most highly used libraries and does not include: abstract classes, interfaces, or Attributes
    - Created a static utility class for commonly used functions across perf tests, stored in src\Common\tests\Performance.
    - These tests will run using ```msbuild /t:BuildAndTest /p:performance=true``` from the projects test directory
    - Added conditional properties that check if v5.0 is installed on the user's computer when running perf tests. If it isn't, a detailed error is thrown with a link to a performance-test github page that I've also added.

[33mcommit 4774046623d7ad991003954a76d054664b97593f[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Thu Sep 24 08:59:38 2015 -0700

    Enumerable.ToList() Optimization
    
    Via a new internal IListProvider<TElement> interface similar to
    IArrayProvider<TElement> for ToArray().

[33mcommit 581753ae44f90379d3621277f2d45a73b7988c09[m
Author: Vijay Kota <vijaykota@users.noreply.github.com>
Date:   Thu Sep 24 09:41:07 2015 -0700

    Move more certificate verification logic into the PAL

[33mcommit 0c2c555bf485835c2ccd675e19d030c6a90683ed[m
Merge: 5d210c6 aa42148
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 24 12:32:05 2015 -0400

    Merge pull request #3426 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 5d210c6bbf8350ff2bd54d84dce1a2569976f1c1[m
Merge: 2dd6afc 1a89641
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Sep 24 09:24:22 2015 -0700

    Merge pull request #3428 from mmitche/move-utils
    
    Moves utilities into the dotnet-ci repo

[33mcommit 1a8964154225efa4396a1e7c5ffd9bda114ce62d[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Sep 24 09:18:51 2015 -0700

    Change trigger string to @dotnet-bot test code coverage please

[33mcommit 5a697460c2d2042b62ae32cb63cb9c71795a4e57[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Sep 24 08:55:33 2015 -0700

    Moves utilities into the dotnet-ci repo

[33mcommit e8c0bfa4f2420200aca1ec554536ab96755fa2e0[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Sep 23 22:43:17 2015 -0500

    Ensure X509 directory based store uses correct file permissions.
    
    When creating a .pfx file, we need to ensure the directory and file
    permissions are set as securely as they can be.
    
    This change ensures:
    1. The directory and file are owned by the current user.
    2. The directory is readable, writable and executable by only the owner.
    3. The file is readable and writable by the owner, and not readable or
    writable by anyone else.

[33mcommit 140f52b426f928694e62dbb7bbc678a53bd67776[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Sep 22 21:59:48 2015 -0700

    Bind the SSL certificate, when presented with one.

[33mcommit 2dd6afc7986b26e161e388d42fc1081a555fee4f[m
Merge: 7f6d7a3 412c616
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Sep 24 08:47:46 2015 -0700

    Merge pull request #3427 from mmitche/add-coverage-to-netci
    
    Initial version of the netci.groovy for code coverage

[33mcommit 412c616c00245932aeb616f04f6daf4b2e384e11[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Wed Sep 23 13:10:33 2015 -0700

    Initial version of the netci.groovy for code coverage

[33mcommit aa42148a3ef85bf767a6a14124cfb0492d45bccc[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Thu Sep 24 08:04:08 2015 -0700

    Porting EventCounter from Roxel Branch to ProjectK
    
    [tfs-changeset: 1529077]

[33mcommit 7f6d7a3f3d73598465341331c2ed01d0bebce3b6[m
Merge: 16ac164 3f811f5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 24 08:12:21 2015 -0400

    Merge pull request #3416 from stephentoub/disable_x509_test
    
    Disable sporadically failing TestLoadSignedFile test

[33mcommit 16ac164deabf1e55b7afe8359f2c6f485a17b184[m
Merge: 134d0f2 6539a13
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 24 08:12:10 2015 -0400

    Merge pull request #3420 from stephentoub/linq_cleanup
    
    Delete LINQ tests Legacy folder

[33mcommit ab1743b45213e88295a38e2bf9d80ded09058b18[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Tue Sep 22 12:10:17 2015 +0900

    Remove most instances ofcustom error checking from tests.
    
    Patterns mostly were of the form:
    
    ```
    if (someBooleanCondition)
    {
        Assert.True(false, ....);
        // Or sometimes Assert.False(true, ....);
    }
    ```
    or
    ```
    try
    {
        SomeErrorThrowingOperation
        Assert.True(false, ....);
        // Or sometimes Assert.False(true, ....);
    }
    catch (ExpectedExceptionType e)
    {
    }
    ```
    This replaces most instances with calls to the proper Xunit.Assert#### .
    Some additional minor work was performed as noted with the affected package.
    
    Add common ShouldNotBeInvokedException
    System.Collections
     - Partially unwind edges of internal test framework.
    System.Collections.Concurrent
     - Switch some tests to use InlineData instead of delegated method calls.
    System.Collections.Immutable
     - Use ShouldNotBeInvokedException to state some lambdas should not be called.
    System.Collections.NonGeneric
    System.Composition
     - Partially unwind internal test famework.
     - Switch to using xunit asserts where possible.
    System.Diagnostics.Contracts
     - Use ShouldNotBeInvokedException to state some lambdas should not be called.
     - Update project file to use upper case letter in hash.
    System.Diagnostics.FileVersionInfo
     - Switch to direct equals comparison.
    System.Diagnostics.Process
     - Use ShouldNotBeInvokedException to state a task should exit.
    System.Diagnostics.Tracing.Telemetry
     - Use ShouldNotBeInvokedException to state an overridden method should not be called.
    System.Globalization
     - Switch to direct equals comparisons in some cases.
    System.Globalization.Extensions
     - Switch to direct equals comparison in some cases.
    System.IO.Compression.ZipFile
    System.IO.FileSystem
     - Partially unwind internal test framework.
    System.IO.Packaging
     - Correct test T006 to check that adding absolute Uri part in internal mode is invalid.
    System.ObjectModel
     - Use ShouldNotBeInvokedException to state some observables should execute.
    System.Reflection
     - Update readonly-set test to verify that the field is set (previous test implied it was not).
    System.Reflection.Extensions
    System.Reflection.Metadata
     - Partially remove internal test framework.
     - Switch to xunit asserts where possible.
    System.Reflection.TypeExtensions
    System.Runtime
    System.Runtime.Extensions
     - Switch to xunit bounded equals for doubles.
     - Switch to verifying non-varags Path.Combine override.
    System.Runtime.Numerics
     - Switch to xunit Assert.Throws from internal version.
    System.ServiceProcess.ServiceController
    System.Text.Encoding
    System.Text.Encodings.Web
    System.Threading
    System.Threading.Tasks.Dataflow
    System.Threading.Tasks.Parallel
    System.Xml.ReaderWriter
     - Switch to form verifying exception is thrown.
    System.Xml.XmlDocument
     - Use ShouldNotBeInvokedException to state some handlers should not be called.

[33mcommit e9ca8afcd4e65af30262dd69fc0171a6571fc769[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Wed Sep 23 23:30:05 2015 -0700

    Disable a few failing tests.
    
    These failures are consistent with other existing *nix failures.

[33mcommit 134d0f2caa74b168196e282c0db96808797052e5[m
Merge: a09898f b3454ae
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Sep 23 23:40:26 2015 -0500

    Merge pull request #3412 from eerhardt/Threading
    
    OpenSSL multi-threading support on OSX

[33mcommit a09898fb64c05dc5867c6084e256bd1960f372a4[m
Merge: 2a45e8a 9add86d
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Sep 23 21:29:09 2015 -0700

    Merge pull request #3415 from VSadov/fieldTest
    
    ET Interpreter: More null checks on instance member accesses.

[33mcommit 36c09c4802aebed9abfe4dd86fe9fbfd7b9c72cc[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Tue Sep 22 15:44:01 2015 -0700

    Initial import of System.Net.Sockets.

[33mcommit 2a45e8af122779965131ebbccb782828ca69b382[m
Merge: a432181 08c7b8c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 23 23:41:48 2015 -0400

    Merge pull request #3417 from stephentoub/fix_task_test
    
    Remove faulty assert in TaskWaitAllAnyTest

[33mcommit 67874fd4bce3b1319d1f1679bc5312220d9e299c[m
Merge: 38d9e58 3c46b8a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 23 23:16:28 2015 -0400

    Merge pull request #3396 from vijaykota/SafeFreeCredFix
    
    Fix handle leak in xplat SslStream.SafeFreeCredentials

[33mcommit 6539a13bd38660b4dbba51c982d26db7915d1b04[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Sep 23 23:14:15 2015 -0400

    Delete LINQ tests Legacy folder
    
    Now that @JonHanna has xunit-ized all of the legacy tests initially scripted into the test system by @akoeplinger, this just deletes the now defunct LegacyTests folder and cleans up the .csproj file.

[33mcommit a432181a9a3dd8a35799a611e7f9b50a5e1bda30[m
Merge: 4d87db9 61b3b1c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 23 23:06:52 2015 -0400

    Merge pull request #3414 from JonHanna/import_where_tests
    
    Fully import legacy Where tests

[33mcommit 9add86db7580f677991a72ff7f2370cc83045c66[m
Author: vsadov <vsadov@microsoft.com>
Date:   Wed Sep 23 19:30:40 2015 -0700

    Use Assert.Throws

[33mcommit b3454ae6e90f92636be4deea4b5ebf0e8ab7e32e[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Wed Sep 23 17:07:46 2015 -0500

    OpenSSL multi-threading support on OSX
    
    In order to support multi-threading in OpenSSL on OSX, we need to set the CRYPTO_set_id_callback to a method that will return the current thread id.
    
    This is necessary because OSX uses a version of OpenSSL less than 1.0.  Before 1.0, setting this callback was necessary because the default uses getpid(), which will be the same value for multiple threads in the same process.  Any version 1.0 or greater of OpenSSL will use the address of errno to differentiate between threads.
    
    Fix #2210

[33mcommit 4d87db95e6cdf01aea0028a6b1f2ad75b516b819[m
Merge: 0a1bda2 c2f2198
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 23 21:35:01 2015 -0400

    Merge pull request #3405 from JonHanna/sum_tests
    
    Fully import legacy Sum tests.

[33mcommit 0a1bda2cb756c1bd504acab73c84dcd8a5bc470f[m
Merge: 3994a1f a8c78c5
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Wed Sep 23 18:30:58 2015 -0700

    Merge pull request #3115 from jamesqo/registry-redundancies
    
    Remove redundant checks in RegistryKey

[33mcommit 08c7b8cf2c7981fc569b005fd400dee6b052123d[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Sep 23 21:03:35 2015 -0400

    Remove faulty assert in TaskWaitAllAnyTest
    
    The verification for the TaskWaitAllAnyTest is trying to assert that if the task is in the WaitingToRun state then it won't have set a result into the result structure yet.  This is a race condition, however, as the task can run between the time the status is checked and the result is checked, causing the assertion to fail.  I'm simply removing the bad check.

[33mcommit 3f811f571c666f41720da6a81bb5e550260b9629[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Sep 23 20:45:30 2015 -0400

    Disable sporadically failing TestLoadSignedFile test

[33mcommit 3994a1fec5d92e3520bbb4b1a88806fdbd71517b[m
Merge: 0dc4122 5eb49af
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 23 20:39:59 2015 -0400

    Merge pull request #3104 from JonHanna/select_without_where
    
    Add SelectXXXIterator separate to WhereSelectXXXIterator

[33mcommit 0dc4122baf767f69493b39a36eca24859bebd5d7[m
Merge: 38616cc 0a94af2
Author: Krzysztof Wicher <kwicher@microsoft.com>
Date:   Wed Sep 23 17:19:42 2015 -0700

    Merge pull request #3410 from krwq/fix_3290
    
    Fix #3290: Fix XmlWriter test issue related to non-existing file

[33mcommit 792b168f5d2b23dc1e865f0764864d5c35155311[m
Author: vsadov <vsadov@microsoft.com>
Date:   Wed Sep 23 17:09:56 2015 -0700

    Interpreter: More null checks on instance member accesses.
    
    Accessing an instance member on null should throw NRE.
    We were already handling field accesses and method calls, but properties and indexers were getting around it and could result in InvalidOperationException from reflection, which is unexpected.
    
    Since all instance accesses eventually result in either a field access or a call, performing these checks on the spot seems more robust and also cheaper than to represent them as a special instruction. Therefore NullCheckInstruction is gone.

[33mcommit 0a94af2f813ebf61a0f9f6e95f142453ed798c8d[m
Author: Krzysztof Wicher <kwicher@microsoft.com>
Date:   Wed Sep 23 13:23:04 2015 -0700

    Fix #3290: Fix XmlWriter test issue related to non-existing file

[33mcommit 61b3b1c5918e4700d23b44a2b58caddaa0ea054c[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Sep 24 01:07:09 2015 +0100

    Fully import legacy Where tests
    
    Convert Where tests imported in #2874 into a more directly XUnit-ian style,
    merging them with those already present
    
    Where1a.Test1a removed as covered by Where_EmptyEnumerable_ReturnsNoElements
    Where1b.Test1b removed as covered (incidentally, but still covered) by
    Where_Array_CurrentIsDefaultOfTAfterEnumeration etc.
    1c duplicates 1b. Changed to match what comment suggets it should do.
    2k re-enabled, made faster, and made outerloop as it still takes over a minute.

[33mcommit 38616cc9e58d81b6772b7dd4b49dad49a5d8ec1a[m
Merge: bab741a c253ebc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 23 19:59:13 2015 -0400

    Merge pull request #3411 from ellismg/icu-idna
    
    Implement IDNA2008 on top of ICU

[33mcommit c253ebc597c232e9c1db44b774a44eadf56a1e58[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Sep 22 17:29:38 2015 -0700

    Implement IDNA2008 on top of ICU
    
    This change uses the ToUnicode and ToAscii methods from
    System.Globalization.Native which are implemented on top of ICU's UTS46
    implementation.
    
    There are some test issues that need to be addressed due to differences
    between Windows implementation of the standard and ICUs (which follows
    the standard more closely). These will be addressed at a later date. I
    have confirmed manually that things are working as expected.
    
    Fixes #2779
    Fixes #810

[33mcommit bab741a09b5115ac5d952d22a5f8aa2216ce9da5[m
Merge: 3e20389 16e4e39
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Sep 23 15:16:10 2015 -0700

    Merge pull request #3408 from JonHanna/import_select_many
    
    Fully import legacy SelectMany tests

[33mcommit 3e20389e2c5f8ea582ab6f088c4a21d9325926ea[m
Merge: 03af042 63efcbf
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 23 16:54:28 2015 -0400

    Merge pull request #3407 from stephentoub/fileoptions_tests
    
    improve FileOptions tests for FileStream

[33mcommit 5eb49afffd8edfa76cafd26172bf458873053ba6[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Sep 23 21:37:37 2015 +0100

    Add SelectXXXIterator separate to WhereSelectXXXIterator
    
    WhereSelectXXXIterator classes can no longer have a null predicate.
    
    Remove branches for null predicate in enumerator.
    
    Remove IArrayProvider implementation as unfruitful.
    
    Add readonly and assertions to ensure this assumption is true.
    
    Add IList<T>-based Select specialised class.
    
    Increases cases covered by ToArray().
    
    Reduces number of branches non-ilist sources (likely most common case) go
    through though at cost of one more for array or list.
    
    IArrayProvider<TElement>.ToArray() will now never return null.
    
    So don't test for the case that it may have.
    
    Iterator Select and Where virtual rather than abstract.
    
    They can be given a default implementation that is valid (if sub-optimal)
    for all cases, and those overrides that match that default can hence be
    removed.
    
    Add tests for new Where…Select…Select branches
    
    Changes introduced new branches where a Where is followed by a Select that
    is then followed by a further Select. Add copies of existing tests that hit
    Where followed by a Select, that hit the case of this furter Select.

[33mcommit 03af042a80d9d704a09c7bdfa1c9f23b21eb3a82[m
Merge: 4d56514 fda272b
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Sep 23 13:23:05 2015 -0700

    Merge pull request #3399 from JonHanna/import_min_max
    
    Fully import Min and Max tests

[33mcommit 38d9e584accf308cdbaeb01494ab6dbdd3345ca1[m
Merge: bf85899 2ad4b62
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 23 16:15:24 2015 -0400

    Merge pull request #3395 from shrutigarg/ssl
    
    adding the usage of SSL_CTX_set_quiet_shutdown

[33mcommit 16e4e39f373437d9e1bc8a6f86263cb0daa3788f[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Sep 23 20:32:49 2015 +0100

    Fully import legacy SelectMany tests
    
    Convert SelectMany tests imported in #2874 into a more directly XUnit-ian
    style, merging them with those already present.
    
    Add some more null-check tests and permutations on empty sequences.

[33mcommit 4d56514b6afa5415a3f2fcce2ea063be2e75fbfa[m
Merge: fcb9e1a 7394abe
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Sep 23 12:53:26 2015 -0700

    Merge pull request #3401 from JonHanna/import_select
    
    Fully import legacy Select tests.

[33mcommit bf85899bb229f6237b00dbf998525d24aa95aeb7[m
Merge: 8ba82b8 019d7dc
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Wed Sep 23 12:30:27 2015 -0700

    Merge pull request #3398 from vijaykota/EofFix
    
    Fix handling of 0 returned by SSL_read or SSL_write

[33mcommit 8ba82b822e64de10ccd205c2d6d8896cf1980437[m
Merge: dd0c04e 5f171d6
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Wed Sep 23 12:17:43 2015 -0700

    Merge pull request #3386 from bartonjs/vijayfixes
    
    Various fixes for Unix SslStream

[33mcommit 63efcbf5ae19883cd9bc9aa10703a681be1c73ea[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Sep 23 14:57:24 2015 -0400

    improve FileOptions tests for FileStream
    
    We didn't have any tests for the DeleteOnClose behavior with FileStream.  We also weren't testing combinations of FileOptions, nor validating that we could read/write files created with non-default options.

[33mcommit fcb9e1a6528ba1d0a6c6a5066161a818d316535a[m
Merge: 2ede783 2a16e29
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 23 14:07:03 2015 -0400

    Merge pull request #3404 from stephentoub/filestream_fixes
    
    Fix several issues in UnixFileStream

[33mcommit 2ede78379e7f1446aa73f42feebdee7ebcbb9c3e[m
Merge: be8429c 448b02a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 23 13:54:39 2015 -0400

    Merge pull request #3325 from axelheer/biginteger-log
    
    Improve performance of BigInteger.Log

[33mcommit dd0c04eb8b30dcbb1911d753501e3f6f96afc16c[m
Merge: 098824a 7941baa
Author: Matt Ellis <matell@microsoft.com>
Date:   Wed Sep 23 09:56:44 2015 -0700

    Merge pull request #3403 from bartonjs/update_from_master
    
    Update from master

[33mcommit be8429c8b2649150aca171a8530c73a4d7d348d6[m
Merge: 22e5649 fc783a5
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Sep 23 09:45:21 2015 -0700

    Merge pull request #3338 from ikopylov/linq_to_dictionary_perf
    
    System.Linq ToDictionary performance improvement

[33mcommit 2a16e29d6f5a0ecd235bb6867f35d82e8eeed00b[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Sep 23 11:59:24 2015 -0400

    Add Interop.ErrorInfo.ToString for debugging

[33mcommit 1e0cd691eee8bd65a3fed666ac4ea6a208a78b8c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Sep 23 11:31:57 2015 -0400

    Fix several issues in UnixFileStream
    
    I'm trying to track down the cause of a sporadic failure in CI of the MemoryMappedFilesTests.DataShared test.  In doing so, I've run across a few issues to be fixed (though I'm not sure any of these are the cause):
    
    - Fix the checking/setting of several FileOptions... we weren't correctly treating the options as a [Flags], which meant we'd incorrectly ignore some options if multiple options were specified.
    
    - When opening a FileStream, if the PosixFAdvise or SeekCore failed, we weren't deterministically disposing of the file handle, instead leaving it up to finalization to close.
    
    - If Close on the file descriptor fails (e.g. it's interrupted), we don't attempt a retry, by design.  However, closing of the handle is what releases the advisory lock we placed on the file descriptor when the UnixFileStream was constructed.  Added an explicit call to remove the lock, separate from closing the descriptor. (I thought this one would have been the cause of the sporadic test failure, but if it were the problem, the assert in SafeFileHandle.ReleaseHandle should have fired, and it didn't in the one occurence I saw since that assert got added.)
    
    - Removed several stale TODOs and replaced them with explanatory comments.
    
    - Added several more Debug.Asserts
    
    Separately, I also tweaked TempFile to simplify its ctor to use File.WriteAllBytes.

[33mcommit 22e564908179882d452e955a8bc706824657ecf5[m
Merge: 0037575 f4966a2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 23 12:13:02 2015 -0400

    Merge pull request #3112 from axelheer/biginteger-lehmer
    
    Improve performance of BigInteger.GCD

[33mcommit c2f21988075a31a0c98e72a6ca6ff98affa0aac4[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Sep 23 16:58:58 2015 +0100

    Tighten Sum tests.
    
    Make checks for IsInfinity more specifically IsPositiveInfinity and
    test parameter name of ArgumentNullException.

[33mcommit 7c40d4813fdb832425ffb2af6c1f4ed25e62664e[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Sep 23 16:55:26 2015 +0100

    Fully import legacy Sum tests.
    
    Convert Sum tests imported in #2874 into a more directly XUnit-ian style,
    merging them with those already present.
    
    The following were omited as duplicated by existing methods:
    
    Sum10a.Test10a -> SumOfFloat_SourceIsEmptyCollection_ZeroReturned
    Sum10e.Test10e -> SumOfFloat_SourceSumsToOverflow_InfinityReturned
    Sum10h.Test10h -> SumOfNullableOfFloat_SourceIsNull_ArgumentNullExceptionThrown
    ‎Sum1a.Test1a -> SumOfInt_SourceIsEmptyCollection_ZeroReturned
    Sum1c.Test1c -> SumOfInt_SourceIsNotEmpty_ProperSumReturned
    Sum1d.Test1d -> SumOfInt_SourceSumsToOverflow_OverflowExceptionThrown
    Sum2a.Test2a -> SumOfNullableOfInt_SourceIsEmptyCollection_ZeroReturned
    Sum2c.Test2c -> SumOfNullableOfInt_SourceIsNotEmpty_ProperSumReturned
    Sum2e.Test2e -> SumOfNullableOfInt_SourceSumsToOverflow_OverflowExceptionThrown
    Sum3a.Test3a -> SumOfLong_SourceIsEmptyCollection_ZeroReturned
    Sum3c.Test3c -> SumOfLong_SourceIsNotEmpty_ProperSumReturned
    Sum3d.Test3d -> SumOfLong_SourceSumsToOverflow_OverflowExceptionThrown
    Sum4a.Test4a -> SumOfNullableOfLong_SourceIsEmptyCollection_ZeroReturned
    Sum4c.Test4c -> SumOfNullableOfLong_SourceIsNotEmpty_ProperSumReturned
    Sum4e.Test4e -> SumOfNullableOfLong_SourceSumsToOverflow_OverflowExceptionThrown
    Sum5a.Test5a -> SumOfDouble_SourceIsEmptyCollection_ZeroReturned
    Sum5d.Test5d -> SumOfDouble_SourceSumsToOverflow_InfinityReturned
    Sum6a.Test6a -> SumOfNullableOfDouble_SourceIsEmptyCollection_ZeroReturned
    Sum6c.Test6c -> SumOfNullableOfDouble_SourceIsNotEmpty_ProperSumReturned
    Sum6e.Test6e -> SumOfNullableOfDouble_SourceSumsToOverflow_InfinityReturned
    Sum7a.Test7a -> SumOfDecimal_SourceIsEmptyCollection_ZeroReturned
    Sum7c.Test7c -> SumOfDouble_SourceIsNotEmpty_ProperSumReturned
    Sum7d.Test7d -> SumOfDecimal_SourceSumsToOverflow_OverflowExceptionThrown
    Sum8a.Test8a -> SumOfNullableOfDecimal_SourceIsEmptyCollection_ZeroReturned
    Sum8c.Test8c -> SumOfNullableOfDouble_SourceIsNotEmpty_ProperSumReturned
    Sum8e.Test8e -> SumOfNullableOfDecimal_SourceSumsToOverflow_OverflowExceptionThrown
    Sum9a.Test9a -> SumOfNullableOfFloat_SourceIsEmptyCollection_ZeroReturned
    Sum9c.Test9c -> SumOfFloat_SourceIsNotEmpty_ProperSumReturned
    Sum9d.Test9d -> SumOfFloat_SourceSumsToOverflow_InfinityReturned
    Sum9g.Test9g -> SumOfFloat_SourceIsNull_ArgumentNullExceptionThrown

[33mcommit 00375759d1e58439a471d2fcecfc95764a5b69ed[m
Merge: c8b86f5 d5e2aaf
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 23 11:47:39 2015 -0400

    Merge pull request #3402 from nguerrera/format-code
    
    Tweak and run native code formatting script

[33mcommit c8b86f53746f12d2e9f21d249760a1117908fc04[m
Merge: 907eaa2 f1359f6
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Wed Sep 23 08:42:29 2015 -0700

    Merge pull request #3400 from AtsushiKan/aestest
    
    Aestest

[33mcommit 7941baa3248a9160f4f8f9b319433bd908a9fe01[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Sep 23 08:26:11 2015 -0700

    Fixes from merging master.
    
    EVP_PKEY_get1_EC_KEY was added in a different file in dev-sslstream and master; unifying on the one whose file was named more accurately.

[33mcommit 645cfdc650ce161c4b9dab762fbc73d2047724e3[m
Merge: 098824a 907eaa2
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Sep 23 08:11:26 2015 -0700

    Merge remote-tracking branch 'dotnet/master' into update_from_master
    
    Conflicts:
    	src/System.Security.Cryptography.X509Certificates/src/System.Security.Cryptography.X509Certificates.csproj

[33mcommit d5e2aafc51231e6ff1bd2c08fc619cbd66e56f42[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Wed Sep 23 07:21:09 2015 -0700

    Tweak and run native code formatting script
    
    * Rename script to format-code.sh to match naming convention of
    other shell scripts in the repo.
    
    * Make script work when executed from any working directory.
    
    * Run script to mop up some minor formatting issues that crept in.

[33mcommit 7394abe688474067e4e2ecc73f946e584078597e[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Sep 23 15:20:21 2015 +0100

    Strengthen null-check tests.
    
    Add parameter name check to existing tests. Add tests for overloads not
    covered.

[33mcommit ceb92a6dbcc73415d3f9f354b25cafefe32e3093[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Sep 23 15:15:57 2015 +0100

    Fully import Select tests
    
    Convert Select tests imported in #2874 into a more directly XUnit-ian style,
    merging them with those already present.
    
    Select1a.Test1a() left out as covered by
    Select_SourceIsEmptyEnumerable_ReturnedCollectionHasNoElements()
    
    Select2f.Test2f re-enabled, but made outerloop (takes over a minute to run).

[33mcommit f1359f629cf1884c96c655d70c5270528a54a24e[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Wed Sep 23 07:12:55 2015 -0700

    Step 2. Switch to AesFactory.Create() pattern.

[33mcommit 907eaa2f77e734486c695c1de193785e9e0a20c8[m
Merge: 61adf16 4f3a7fb
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Wed Sep 23 07:01:14 2015 -0700

    Merge pull request #3359 from nguerrera/shim-hmac
    
    Shim HMAC functions

[33mcommit 1a54d28e6bb9b9259cb9e10b87e435a2f79e5520[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Wed Sep 23 07:00:13 2015 -0700

    Step 1. Move Aes test file to common path.

[33mcommit fda272baa0dcc0299153a2755e29241bc6b50458[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Sep 23 13:27:29 2015 +0100

    Fully import legacy Min tests.
    
    Convert Min tests imported in #2874 into a more directly
    XUnit-ian style, merging them with those already present.
    
    Also add extra tests on null checks, and separate out existing tests
    on empty sequences.

[33mcommit 019d7dcfcf19b6f7e6f0d2af28fe7e7f45c0cd07[m
Author: Vijay Kota <vijayko@microsoft.com>
Date:   Wed Sep 23 18:14:50 2015 +0530

    Fix handling of 0 returned by SSL_read or SSL_write
    
    When EOF is received, SSL_read/SSL_write fail with SSL_ERROR_ZERO_RETURN.
    This needs to be gracefully passed to caller which will map it to
    SecurityStatus.ContextExpired.

[33mcommit 61adf16f201120d28affe35ac28696d0c3f85b7f[m
Merge: fe654b7 eeb7af5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 23 08:30:22 2015 -0400

    Merge pull request #3381 from ellismg/icu-merge-staging
    
    Initial ICU Merge

[33mcommit 94e2c57c7fa5b14eccdb3d2a82829d29c0386f83[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Sep 23 11:41:48 2015 +0100

    Add tests for null checks. Separate out tests for empty cases.

[33mcommit d085f9617b8fc49309881a076088e6f87ddb4d78[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Sep 23 11:06:26 2015 +0100

    Fully import legacy Max tests.
    
    Convert Max tests imported in #2874 into a more directly
    XUnit-ian style, merging them with those already present.

[33mcommit 22895875dea09e1778e8fe482475541396f63e06[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Sep 22 16:00:22 2015 +0100

    Separate Min and Max tests.

[33mcommit 3c46b8ab60c2d5ff3ad0caa7398bc1e3aa1c9c20[m
Author: Vijay Kota <vijayko@microsoft.com>
Date:   Wed Sep 23 14:36:17 2015 +0530

    Fix handle leak in xplat SslStream.SafeFreeCredentials
    
    If a cert is used in SSL handshake, the certificate information needs
    to persist for the SSL session. This is achieved by storing the cert
    in a SafeFreeCredentials and bumping up its refcount. But we were
    incorrectly doing this in AcquireCredentials instead of the first
    invocation of InitializeSecurityContext/AcceptSecurityContext

[33mcommit 2ad4b6274da424878900d3882f1051c5289f1e9e[m
Author: Shruti Garg <shgarg@microsoft.com>
Date:   Wed Sep 23 14:07:31 2015 +0530

    adding the usage of SSL_CTX_set_quiet_shutdown

[33mcommit 5f171d6cf3bdf48303f10b43569634b13e1ae466[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Sep 22 18:02:19 2015 -0700

    Move s_syncObject to the Windows CertModule
    
    It was only used by the certificate store opening code; it isn't needed in _SecureChannel.cs anymore.

[33mcommit 96b3d0e09aee48aeb159e012045e60e75ed90e94[m
Author: Vijay Kota <vijaykota@users.noreply.github.com>
Date:   Tue Sep 22 16:38:17 2015 -0700

    Refactor EnsureStoreOpened logic into PAL-specific files

[33mcommit eeb7af54fe25e3d65c534bb794c79a84519f9bdf[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Sep 22 20:10:13 2015 -0700

    Disable failing tests against #3391

[33mcommit fdb1c1ebfc18e2b973773fe5b8f96140ddecffab[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Sep 22 18:22:00 2015 -0700

    Be more permisive in allowed test data on Windows
    
    Windows 10 uses more data sourced from the CLDR, so places where we had
    different data between ICU and Windows now needs to allow both ICU and
    Windows versions of the data.
    
    The correct fix here is more involved, we need to decouple the test data
    from the test themselves, issue #3243 tracks that. For now, we can just
    limp along with these sorts of patches.

[33mcommit 855dac16dd48dbdee67e26dfa9590e07c74619f3[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Sep 22 17:36:12 2015 -0700

    Respond to PR Feedback

[33mcommit 375d235556d9951bf05ce04afb7afb092079d21d[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Sep 22 14:58:20 2015 -0700

    Rename GlobalizationInterop to GlobalizationNative
    
    The previous code was written under the old convetion, but it has
    changes to prefer XxxNative over XxxInterop

[33mcommit 6c91577336590b34457405d6ad4e3f4606927d93[m
Author: Steve Harter <sharter@microsoft.com>
Date:   Mon Sep 21 12:13:35 2015 -0500

    address code review comments

[33mcommit 33a22f4472521d17d6091e07775fe6a3b05d0cba[m
Author: Steve Harter <sharter@microsoft.com>
Date:   Fri Sep 18 14:23:03 2015 -0500

    complete core tests

[33mcommit 64bad27895ba4084280570d7c0e049ba1a646a04[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Mon Sep 14 15:46:39 2015 -0700

    Disable some test cases against #3243
    
    Some tests have hard coded culture data which does not match what ICU
    has on OSX. Disable these tests until we can decouple the data from the
    tests themselves and switch it based on the underlying OS version.

[33mcommit b688fe55d07ee850713a4408b74ada32740c3af1[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Mon Sep 14 15:24:53 2015 -0700

    Remove U+037F from "Unassigned" oracle in test.
    
    The Char casing test has its own copy of some Unicode data which has a
    list of unasigned codepoints.  The goal of the test is to ensure that
    these items case to themselves.  However, U+037F is now assigned as of
    Unicode 7.0 (it is GREEK CAPITAL LETTER YOT) so a system which does
    casing according to the Unicode 7 standard will actually fail this test,
    since it will correctly case this letter to U+03F3.

[33mcommit bb3619cf07359471d2380a8394884845e23589df[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Sun Sep 13 23:18:27 2015 -0700

    Disable S.C.NonGeneric against 2769
    
    One of the System.Collections.NonGeneric tests is getting tripped up
    because of our lack of correct Turkish I collation support.
    
    Disable it against the open issue that is tracking collation support.

[33mcommit 228a4987a07366093d73c07c25863f1bd83f991e[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Sun Sep 13 21:40:20 2015 -0700

    Disable some S.C.Specialized tests against 2769
    
    Since we now have full casing, but only ASCII collation, some of the
    System.Collections.Speicialized tests are failing because they ToUpper
    strings containing non ASCII characters and then attempt to look up
    these strings in a NameValueCollection which ignores the case of the
    keys.
    
    Since NameValueCollection is using a CompareInfo based object (and hence
    only doing ASCII casing when ignoring case) these tests have started to
    fail.
    
    Instead of trying to fix up the product to do ordinal collation + full
    Unicode casing for the case insensitve string comparision case, which we
    would remove very soon as we start to land real collation, we'll just
    disable these tests against the collation active issue.

[33mcommit 287603084f2fda54a0144ec2455098768c37e46c[m
Author: Steve Harter <sharter@microsoft.com>
Date:   Thu Sep 10 18:34:18 2015 -0500

    address code review comments

[33mcommit 6d560059b52d73f49cfca1c5321d1103f78789c6[m
Author: Steve Harter <sharter@microsoft.com>
Date:   Thu Sep 10 16:59:02 2015 -0500

    address code review comments

[33mcommit 04d551801a839c5d8bb0c250732928dba57eb92d[m
Author: Eric Erhardt <eerhardt@microsoft.com>
Date:   Thu Sep 10 16:28:08 2015 -0500

    Pulling all the platform specific data into a centralized class/file.

[33mcommit cd66e1b264cce80b1b75323c408483a5c89cf2ac[m
Author: Eric Erhardt <eerhardt@microsoft.com>
Date:   Wed Sep 9 17:34:41 2015 -0500

    Enable all the disabled tests that are currently passing.
    
    Only one test needed to be "fixed" up - Japanese Abbreviated Era Name is different between Windows and CLDR.

[33mcommit 1838dd4239ea646351a33d854ad01348a3d50b65[m
Author: Eric Erhardt <eerhardt@microsoft.com>
Date:   Thu Sep 10 14:07:16 2015 -0500

    Enable all tests in Globalization.Calendar.Tests.
    
    Only one test needed to be fixed up - Taiwan month names are different in CLDR than they are on Windows.

[33mcommit 640bb126bccc93de25ff6d0271ee4a95ae934604[m
Author: Eric Erhardt <eerhardt@microsoft.com>
Date:   Wed Sep 9 16:42:41 2015 -0500

    Fixing the Era Name test cases on Linux.  ICU returns "AD" instead of "A.D." for the era name and "A" instead of "AD" for the abbreviated era name.

[33mcommit 6b9c457108f6ce95058c801e80a5bfbfc80c36d9[m
Author: Steve Harter <sharter@microsoft.com>
Date:   Wed Sep 9 10:37:26 2015 -0500

    complete core tests for CultureData Unix

[33mcommit 9fcd88b7cc2ecfd3a4183efdd722dce869dd4b27[m
Author: Steve Harter <sharter@microsoft.com>
Date:   Wed Sep 9 09:19:54 2015 -0500

    updated globalization tests

[33mcommit 37cde7adb6dc6928dbbfaee2b6b9ed5947dd4bc5[m
Author: Steve Harter <sharter@microsoft.com>
Date:   Wed Sep 2 12:32:12 2015 -0500

    address code review comments

[33mcommit e99fc665e91760d57d065557d98b1688e64658ff[m
Author: Steve Harter <sharter@microsoft.com>
Date:   Thu Aug 27 13:37:46 2015 -0500

    add tests for number formatting

[33mcommit 9c735fc453bfd6967df1ba8c2470499ae0630c8b[m
Author: Steve Harter <sharter@microsoft.com>
Date:   Mon Aug 3 13:09:16 2015 -0500

    base locale and formatting for linux

[33mcommit cd116f158e646f841018c62da8e394cd4e97705d[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Jun 18 11:56:24 2015 -0700

    Enable casing tests on Unix

[33mcommit 9c30d9bfc2584cbff964497d94793d5cc454ba39[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Jul 16 15:03:25 2015 -0700

    Use System.Globalization.Native for Normalization
    
    Implement Normalization on top of the ICU wrappers

[33mcommit fe654b76205472a44f13a264b0a7d4cc1f65ca82[m
Merge: 32f951a bf77ffa
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 22 22:56:26 2015 -0400

    Merge pull request #2978 from JonHanna/simpler_get_next_prime
    
    Simplify ObjectToIdCache.GetPrime

[33mcommit 32f951a117a34f5970568b00a133a48f78a14d55[m
Merge: ed45618 2471808
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 22 22:37:57 2015 -0400

    Merge pull request #3366 from JonHanna/import_group_by
    
    Fully import GroupBy‎ tests

[33mcommit ed45618b1ef82f1efb661ea0e80c4bd824433079[m
Merge: af451e5 b24780d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 22 22:14:32 2015 -0400

    Merge pull request #3372 from stephentoub/case_sensitivity
    
    Add internal platform-agnostic case sensitivity detection

[33mcommit af451e5fed4ec103b0dce0a0b860a6ff41447241[m
Merge: e45c0ea 6682723
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Sep 22 18:49:06 2015 -0700

    Merge pull request #3387 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit e45c0ea4380bf51a50bbc8089420784894664e8c[m
Merge: 81b9155 d1e7521
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Tue Sep 22 17:23:17 2015 -0700

    Merge pull request #3385 from JeremyKuhne/SlowTests
    
    Switch to use localhost for test server name.

[33mcommit b24780dd017f9a6a86fd55531fd9410cab6eef8e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Sep 22 20:16:17 2015 -0400

    Fix case sensitivity in FSW Path and Filter tests
    
    Changing to use PathInternal.IsCaseSensitive actually fixed a bug in
    FSW.Path/Filter.  The tests were testing for the wrong thing on Linux.
    This just fixes the tests.

[33mcommit 6682723af4cdaba35923209424315e15820e9c77[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Tue Sep 22 16:49:42 2015 -0700

    System.Net.Primitives xplat packaging
    
    [tfs-changeset: 1528194]

[33mcommit c531866bafd1e12b1c55fd7a5c003221b8129ab3[m
Author: Vijay Kota <vijaykota@users.noreply.github.com>
Date:   Tue Sep 22 16:33:22 2015 -0700

    Fix SslStream.Write failure when input buffer is very large (~16K)
    
    In Encrypt code path, the no. of bytes to encrypt is decided based
    on maxsize-hdr-trailer and a buffer of maxsize is allocated. If
    BIO_ctrl_pending indicates that more space is needed, an exception is
    thrown. This is because the trailer size is too small. By setting the
    trailer size to max value (differs for each protocol), the amount of
    unencrypted data can be constrained.

[33mcommit 9c38fd8efec765b60986707d6f15551bcc8e4e8f[m
Author: Vijay Kota <vijaykota@users.noreply.github.com>
Date:   Tue Sep 22 16:32:05 2015 -0700

     Fix encryption logic for xplat SslStream
    
    An in-place buffer is used in the Encrypt code path. The unencrypted
    data is copied at an offset of headerSize but the code in Interop.
    OpenSsl.cs was asssuming that data starts at offset 0. Due to this
    incorrect data was received by the peer.

[33mcommit 4f3a7fb9d45a5eff7605d9fe5a022d1d76809c52[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Sep 21 17:05:26 2015 -0700

    Shim HMAC functions

[33mcommit d1e7521f028e9564308a05b3b7ef4abf47f41509[m
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Tue Sep 22 15:05:25 2015 -0700

    Switch to use localhost for test server name.
    
    On the MS corpnet, there is a server called "Server" which is killing the perf of the tests.
    (Via VPN tests still won't finish after 30+ minutes.) Using LocalHost avoids this.

[33mcommit 098824a5666f5965fdf711f91b52a83cdf9d7ba7[m
Merge: 24c4c8f 8a04097
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 22 17:55:30 2015 -0400

    Merge pull request #3376 from bartonjs/sslstream_unix_build
    
    Fix System.Net.Security.csproj to account for the SafeEvpPKey change

[33mcommit 81b91556d246048bc771ed11b2882498ebb7b980[m
Merge: 299f4f2 76775af
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Sep 22 14:49:37 2015 -0700

    Merge pull request #3370 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 299f4f2302adbd48d542fbdc1ea7a93bd30abf45[m
Merge: c5673b1 4caf7d4
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Tue Sep 22 13:57:36 2015 -0700

    Merge pull request #3380 from eerhardt/SystemTrusted
    
    Unix X509Chains treats root certs in ExtraStore differently than Windows

[33mcommit c5673b12dafb4d803cfb2f7cc11446dd94763c19[m
Merge: b6dafca b199537
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Tue Sep 22 13:35:25 2015 -0700

    Merge pull request #3379 from tarekgh/MoreCulturesDateParsingTest
    
    Add more cultures to test against DateTime parsing

[33mcommit fc783a539c4c545c17ea0be0097b080522c5d004[m
Author: ikopylov <ikopylov@users.noreply.github.com>
Date:   Tue Sep 22 23:25:41 2015 +0300

    ToDictionary: cast to ICollection in first place, special treatment of Array and List.

[33mcommit b6dafca047181bba530df4e6d9e87729d1334aeb[m
Merge: b12be94 f454727
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Sep 22 12:46:14 2015 -0700

    Merge pull request #3375 from davidsh/readme_changes
    
    Add System.Net.Security to README.md

[33mcommit b12be94b2acde8f58ea159613d60a3d59c61235a[m
Merge: 1745a36 a16f4a4
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Tue Sep 22 12:22:36 2015 -0700

    Merge pull request #3377 from AtsushiKan/ecdsaprivatekey
    
    Implement GetECDsaPrivateKey() on Unix.

[33mcommit 1745a36b46f07f4278680e30d84c94b4f407708a[m
Merge: ddf904d 99b47f6
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Tue Sep 22 12:18:21 2015 -0700

    Merge pull request #3373 from AtsushiKan/cleanup
    
    Some prep work for implement Cng symmetric algorithms.

[33mcommit ddf904d014919c3a7abc8181dc50b6189eaafce6[m
Merge: 37e3182 af7551e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 22 14:42:36 2015 -0400

    Merge pull request #3371 from eerhardt/NullPassword
    
    Harden the assert in DirectoryBasedStoreProvider.

[33mcommit b1995378c63df05117c57505c50f46e256c32b3a[m
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Tue Sep 22 11:17:08 2015 -0700

    Add more cultures to test against DateTime parsing

[33mcommit 8a04097124aa8dbf566589f4d75e99253d6504e5[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Sep 22 10:26:35 2015 -0700

    Remove all references to EvpPKey from System.Net.Security

[33mcommit 4caf7d4efe51f633545973cd93b0562da9ec3510[m
Author: Eric Erhardt <eerhardt@microsoft.com>
Date:   Tue Sep 22 09:56:12 2015 -0500

    Unix X509Chains treats root certs in ExtraStore differently than Windows.
    
    When building an X509Chain on Unix, if the root cert isn't in the system store, the building still succeeds with no errors for UntrustedRoot.  This is different than how it works on Windows.
    
    I changed OpenSslX509ChainProcessor.BuildChain to check if the root cert is contained in the LocalMachine root or CurrentUser root store.  If it isn't, add an UntrustedRoot error.
    
    Fix #3226.

[33mcommit a16f4a40a75a0d0a0eabd3ac17724af4b05a1052[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Tue Sep 22 10:27:12 2015 -0700

    Implement GetECDsaPrivateKey() on Unix.

[33mcommit f45472795be24bd78ed33d0de1135ad92439317d[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Sep 22 10:23:07 2015 -0700

    Add System.Net.Security to README.md

[33mcommit af7551e2178b78d01180a95794a313856689ba35[m
Author: Eric Erhardt <eerhardt@microsoft.com>
Date:   Tue Sep 22 11:12:42 2015 -0500

    Harden the assert in DirectoryBasedStoreProvider.
    
    When we are creating a .pfx store for X509 certificates, we want to ensure that
    we create the file with both user read and write permissions.
    
    I changed the DEBUG assert code to ensure this is the case.

[33mcommit 37e3182eaa45ac7501e009ad17205898ccbdfb3b[m
Merge: f92cf14 93276b0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 22 12:47:02 2015 -0400

    Merge pull request #3367 from JonHanna/test_null_checks_on_tolookup
    
    Add tests for the null checks ToLookup should do.

[33mcommit 62ba788d4730be24cff0ff0432f43bcc7b9e4561[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Sep 22 12:00:45 2015 -0400

    Add platform-agnostic case sensitivity detection
    
    After the recent refactoring based on introducing native shims, the only reason there are special builds of System.IO.FileSystem and System.IO.FileSystem.DriveInfo for each of Linux and OS X is because of PathInternal.CaseSensitive/CaseInsensitive.cs, which just provides a hard-coded value as to whether the target platform is case-sensitive or case-insensitive-but-preserving.  Similarly, these files are the only things forcing System.IO.Compression.ZipFile to not be completely platform-agnostic and to have separate Windows/Unix builds.
    
    This commit recombines those assemblies by adding a platform-agnostic helper that simply creates a temporary file with upper-case letters and then checks whether that file can be found via the lower-cased version.  This isn't perfect, in that it's possible to mount multiple file systems each with different case sensitivities, but a) it's better than the hardcoded version we currently have, and b) I don't know of any better portable solution.
    
    (Issue #3156 tracks adding an API to provide information on case sensitivity.  This change can be replaced by using such an API if/when it's available.)

[33mcommit 99b47f632db824e49cde7e711d5cef23ca3321fe[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Tue Sep 22 09:29:31 2015 -0700

    Some prep work for implement Cng symmetric algorithms.
    
    This is just code movement and renaming in anticipation
    of upcoming Cng work for the retro symmetric algorithms.
    
    We split CngAsymmetricAlgorithmCore into two pieces:
    
    - CngKey management (applicable to both both symmetric
      and asymmetric algorithms)
    
    - Static helpers for hashing, signing and verifying
      (asymmetric only and uses no instance data.)

[33mcommit 24c4c8f3864b3e2b685afa1a8208f6882cdc07ae[m
Merge: c370f4a 2423027
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Tue Sep 22 09:11:26 2015 -0700

    Merge pull request #3345 from rajansingh10/Netfeature
    
    Net Secure Xplat Implementation

[33mcommit 76775af1ae17c70b42acb3ee41c1a0f9b5049385[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Tue Sep 22 09:04:00 2015 -0700

    Second half of 46ab889 - add the retro crypto base types to the contracts.
    
    [tfs-changeset: 1527949]

[33mcommit 93276b0ee0da455a73cb6c88e1f6cdcb4a634d66[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Sep 22 15:36:19 2015 +0100

    Delete remaining zero-byte file from previous legacy test import.

[33mcommit 31d6b0346d53460b657fba8dc7b5f432bfee65ea[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Sep 22 15:30:38 2015 +0100

    Add tests for the null checks ToLookup should do.

[33mcommit 2471808c74e4eafde8a63d9ff9da3bc417a16cea[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Sep 22 15:17:17 2015 +0100

    Fully import GroupBy‎ tests
    
    Convert ‎GroupBy tests imported in #2874 into a more directly
    XUnit-ian style, merging them with those already present.
    
    Also add test for index out of range when treating grouping
    as IList, which was a not being checked.

[33mcommit f92cf14f08e1636072b18ac3c46c697c6c390ed4[m
Merge: 5a4eb8a cfc3f75
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 22 09:30:28 2015 -0400

    Merge pull request #3333 from stephentoub/fix_curl_assert
    
    Remove faulty assert from CurlHandler.CurlResponseStream

[33mcommit 5a4eb8afb6393a37043ba82f5dbbbd9c3cc54151[m
Merge: 264ba2b d919002
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Tue Sep 22 18:55:25 2015 +0530

    Merge pull request #3328 from stephentoub/supportsredirectionconfig
    
    Implement CurlHandler.SupportsRedirectConfiguration

[33mcommit 264ba2b6a73da2fc8296f42937a0a8c414bffc4d[m
Merge: 6f6c12c d5f7c91
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 22 08:40:15 2015 -0400

    Merge pull request #3361 from JeremyKuhne/CheckDirectoryMaxPathEarly
    
    Move max path directory check up front.

[33mcommit 6f6c12c3be1cb6e6148bc05ea7e6cafaddd164ff[m
Merge: 55dac36 039da4e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 22 08:30:00 2015 -0400

    Merge pull request #3360 from Clockwork-Muse/System.Net.Http_ProjectFile
    
    Correct broken System.Net.Http solution file.

[33mcommit 55dac3663663f8a734ebcfd094d3bb97a501eaa4[m
Merge: 237b722 164b337
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 22 08:27:42 2015 -0400

    Merge pull request #3363 from weshaggard/UpdateBuildTools94
    
    Update to build tools version 94

[33mcommit 164b337f9ea66243ac815cded205555977a553bb[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Sep 21 23:51:33 2015 -0700

    Update to build tools version 94
    
    This refreshs the tool-runtime so it supports win7-x86 and
    ubuntu-x64. We need the win7-x86 support to get tools working in
    our internal builds and the ubuntu support is just prep work for
    some future changes.

[33mcommit 237b722c2035a5fd51e41b269a62b8df1286f945[m
Merge: 5a8403b 60aa75f
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Tue Sep 22 12:13:09 2015 +0530

    Merge pull request #3307 from kapilash/use_default_creds
    
    Allow UseDefaultCredentials property for HttpClientHandler on unix

[33mcommit d5f7c91ac455244195135c48ab3b94bb24eeb78f[m
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Mon Sep 21 22:52:39 2015 -0700

    Move max path directory check up front.
    
    No need to create a bunch of intermediate directories when we'll fail at the end.
    This was having significant impact on test times with #3192.

[33mcommit 039da4e1f033df584540736a3f9555b9383a3c95[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Tue Sep 22 14:18:27 2015 +0900

    Correct broken System.Net.Http solution file.

[33mcommit 5a8403bd0cd9973c66176c8842a3886fb34c7b24[m
Merge: c86debf a46c689
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Sep 21 22:24:30 2015 -0400

    Merge pull request #3315 from khdang/fix_perf_readbase64_w_linebreaks
    
    Fix performance issue when deserializing base64 content with linebreaks

[33mcommit c370f4af802a2aefa246a7c40d51c87d11e2369f[m
Merge: c86debf ae899fc
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Sep 21 19:23:51 2015 -0700

    Merge branch 'dev-sslstream' of git://github.com/dotnet/corefx into dev-sslstream

[33mcommit ae899fc41dbf975c8f87f2a6e47b25ae916e0a37[m
Merge: 08f475f 98e103d
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Mon Sep 21 19:15:57 2015 -0700

    Merge pull request #3355 from bartonjs/openssl_asymm_duplicatekeyhandle
    
    Expose DuplicateKeyHandle on OpenSSL-specific asymmetric algorithms.

[33mcommit c86debf22aaac1293ee5b6b1590c57d68480054a[m
Merge: a04a368 72f817b
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Sep 21 19:14:30 2015 -0700

    Merge pull request #3358 from pgavlin/master
    
    Add platform selection to build.sh.

[33mcommit a04a368020fcf9b0ea2f3592327fee46ab513a20[m
Merge: 88b1e32 8fecf0f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Sep 21 21:57:20 2015 -0400

    Merge pull request #3350 from eerhardt/Fix134394
    
    Ensure getting random bytes/numbers produces an unpredicatable sequence.

[33mcommit 72f817bf05c1cdc0992c6dc731b814eb968e7279[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Mon Sep 21 16:57:17 2015 -0700

    Add platform selection to build.sh.
    
    Prior to recent changes, it was possible to use build.sh to cross-compile
    CoreFX by passing "/p:OSGroup=<target OS>" at the command line. This
    change restores the ability to cross-compile by allowing the specification
    of the target OS as a command-line option to build.sh: any one of
    "windows", "linux", "osx", or "freebsd" is accepted.

[33mcommit 88b1e32e4a0169f1536d53338d86ca6d3d5e5945[m
Merge: 05b1069 6525d2f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Sep 21 20:32:06 2015 -0400

    Merge pull request #3352 from stephentoub/fix_console_node
    
    Fix opening of stdin/stdout/stderr to work with sockets

[33mcommit 05b106977da11f1ea241f16533a857b009cca6f9[m
Merge: bf1ccd9 86b244b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Sep 21 20:30:55 2015 -0400

    Merge pull request #3356 from bartonjs/finite_sslstream_timeouts
    
    Restrict the SSL handshake test to 3 seconds.

[33mcommit bf1ccd9fd7fde895691367b988f2d3335dcfca48[m
Merge: ef49f38 e5a017c
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Sep 21 17:21:39 2015 -0700

    Merge pull request #3340 from davidsh/http_tests
    
    Port additional System.Net.Http tests to CoreFx

[33mcommit ef49f38fd2ad821f07dcb44813fe0c7ab09d7335[m
Merge: bac4d00 bdb90cb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Sep 21 18:48:28 2015 -0400

    Merge pull request #3354 from stephentoub/close_assert
    
    Add a debug assert to SafeFileHandle.ReleaseHandle

[33mcommit 86b244ba187d6dc34de242414f8e5aa547412b81[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Sep 21 15:36:23 2015 -0700

    Restrict the SSL handshake test to 3 seconds.

[33mcommit 6525d2f1587f803ef288b13c3e3d412a745fbabe[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Sep 21 16:22:09 2015 -0400

    Fix opening of stdin/stdout/stderr to work with sockets
    
    In Console (and a couple of other low-level libs where we write directly to stderr), we currently open stdin/stdout/stderr via the paths "/dev/stdin", "/dev/stdout", and "/dev/stderr".  This generally works fine.  However, if the underlying descriptors have been redirected to a socket, attempting to open these is explicitly coded in Linux to fail.  And some applications that launch child processes use socketpair instead of pipe to communicate with the child process, in which case the child process' Console will fail to open /dev/*, resulting in an ENXIO error ("no such device or address").  One such application is node.js.
    
    This fix changes how we open stdin/stdout/stderr in corefx.  Rather than opening e.g. "/dev/stdin", which effectively ends up dup'ing the corresponding file descriptor, we just dup the corresponding file descriptor directly, e.g. dup(STDIN_FILENO).
    
    (While touching code in SafeFileHandle.Open, I also removed a try { } finally that I'd added months ago to help with thread aborts, before I comprehended we didn't need to worry about them.)

[33mcommit 98e103daa5d6623673c5a3957932ce58f8d793f5[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Sep 21 14:02:09 2015 -0700

    Expose DuplicateKeyHandle on OpenSSL-specific asymmetric algorithms.

[33mcommit 8fecf0f0e7beb2c7d2b4670992318aa221e1bda6[m
Author: Eric Erhardt <eerhardt@microsoft.com>
Date:   Mon Sep 21 10:21:57 2015 -0500

    Ensure getting random bytes/numbers produces an unpredicatable sequence.
    
    To ensure we are getting truly random values, we now call RAND_poll()
    during OpenSSL initialization.  Also, calling RAND_bytes instead of the
    deprecated RAND_psuedo_bytes.
    
    While I was fixing the code, I also added a shim for the native call
    instead of invoking libcrypto directly from managed code.

[33mcommit bac4d00f62f7f08fcae72950e627096341c43096[m
Merge: 270d14d bee94b5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Sep 21 17:14:41 2015 -0400

    Merge pull request #3351 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit bdb90cb4f98c60c33b6a8bfba3c3b0302ba8d76a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Sep 21 17:13:37 2015 -0400

    Add a debug assert to SafeFileHandle.ReleaseHandle
    
    I'm trying to debug a sporadic failure that occurs now and again in the lab and that I believe may be due to a file descriptor getting left open.  Adding an assert to help flag cases where close fails, e.g. due to EINTR.

[33mcommit a8c78c577c3b2f3ac4316206f7cefef79a3a4c0e[m
Author: James Ko <jamesqko@gmail.com>
Date:   Mon Sep 21 16:51:55 2015 -0400

    Use Array.Resize instead of Array.Copy

[33mcommit bee94b5b8d68f7f752334e75ecba627743b42c9f[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Sep 21 13:01:29 2015 -0700

    Exclicitly add System.Text.Encoding 4.0.10 version that System.Security.Principal.Windows depends on and update the lock file.
    
    [tfs-changeset: 1527474]

[33mcommit 270d14d68533d5a9d785fe48c1afd448d9907c6e[m
Merge: d6f458e 2f4fa52
Author: VSadov <vsadov@microsoft.com>
Date:   Mon Sep 21 12:57:39 2015 -0700

    Merge pull request #3341 from VSadov/Ycombinator
    
    Fix incorrect codegen for self-application of recursive expressions.

[33mcommit d6f458e7eb9a17e6c9edd039bdb69f91e727d80f[m
Merge: 46ab889 0cd3b58
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Sep 21 15:33:07 2015 -0400

    Merge pull request #3348 from stephentoub/update_buildtools
    
    Update buildtools to get code coverage fix

[33mcommit e5a017cb6ca01e99b1f1462298bc0cbf60c06ee0[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sun Sep 20 14:38:56 2015 -0700

    Port additional System.Net.Http tests to CoreFx
    
    Added more http tests to open source from the original internal ToF tests. Some of
    the tests should be refactored in the future to avoid Assert'ing multiple
    logical things.
    
    Fixed up test namespaces for System.Net.Http and
    System.Net.Http.WinHttpHandler.

[33mcommit 46ab889090bc0e37815feec38637bf6196da1c5d[m
Merge: a1a2ee2 5bae5b2
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Mon Sep 21 11:35:48 2015 -0700

    Merge pull request #3346 from AtsushiKan/algs
    
    Add base types for legacy crypto algorithms.

[33mcommit 5bae5b2a0c56ed1d9eac5868fb42f4e0d43a9211[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Mon Sep 21 10:34:24 2015 -0700

    Add legacy crypto algorithms.

[33mcommit 0cd3b585f413b0ee26f0dc69d0e552598d9e3357[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Sep 21 13:14:38 2015 -0400

    Update buildtools to get code coverage fix

[33mcommit a1a2ee29671cd7b0a7beb78bed3400c1e4cbb673[m
Merge: bb5cdf2 98449b1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Sep 21 12:56:22 2015 -0400

    Merge pull request #3347 from roncain/update-xplat-testing-instructions
    
    Update instructions for cross-platform testing

[33mcommit 98449b1d7801fba13a44c19d78bae9f5273549b1[m
Author: Ron Cain <roncain@microsoft.com>
Date:   Mon Sep 21 09:38:29 2015 -0700

    Update instructions for cross-platform testing
    
    Modifies the instructions to build the native part of
    CoreFx to reflect commit 5361c0f77facc1f113bee68bd4b184cad0fdd7be
    that merged the src/Native/build.sh into the main build.sh.

[33mcommit 448b02a44d7ccbee5f417e229563fc1b9e9e03d9[m
Author: Axel Heer <axel@heer.eu>
Date:   Sat Sep 19 22:52:17 2015 +0200

    Improve performance of BigInteger.Log
    
    Since only the most significant bits of a big number are relevant for
    computing its logarithm (the current implementation multiplies with 0.5
    after processing a bit, which naturally doesn't have any effect after
    54 iterations), using the build-in LOG function just for the highest
    64-bit block and adjusting the result considering the actual bit length
    should be sufficient.

[33mcommit 242302706a63d694e90fe533f436961ce9bfc5d7[m
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Mon Sep 21 20:00:29 2015 +0530

    Fixed Disconnect

[33mcommit 21485668d284cc9e0a5fcf2f0421b6d73eb8b060[m
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Fri Sep 18 22:36:39 2015 +0530

    Net Secure Xplat Implementation

[33mcommit 7c90b016ff5d8d31d2bb8709382186ad04827975[m
Author: Maksym Rozborskyi <hexelium@gmail.com>
Date:   Mon Sep 21 16:32:00 2015 +0300

     #1305 InsertAfter throws if dub attribute is inserted at the end is fixed.

[33mcommit bb5cdf23e187b968b0e5aebba1cc9c9c3fcbcc62[m
Merge: 0f5ee8b db74dd9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Sep 21 08:39:11 2015 -0400

    Merge pull request #3342 from nguerrera/let-shim-decide-fadvise
    
    Let shim handle platform support of posix_fadvise

[33mcommit 2f4fa52d0d613b2cc8d1904113397b7dce2308f9[m
Author: vsadov <vsadov@microsoft.com>
Date:   Sun Sep 20 18:20:04 2015 -0700

    Fix incorrect codegen for self-application of recursive expressions.
    
    ET binder associates scope information with corresponding lambda nodes, which is valid in most cases since variables that belong to lambda depend only on the lambda contents.
    Except that when lambda is inlined and parameters become locals.
    
    This change makes scopes for inlined lambdas to be associated with invocation nodes, which disambiguates them from scopes for lambdas in their regular non-inlined form.
    
    Fixes: #3224

[33mcommit db74dd930ab6037edfb63a0a45ab614789d1dbb1[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Sun Sep 20 18:04:29 2015 -0700

    Let shim handle platform support of posix_fadvise
    
    Call the shim always and ignore ENOTSUP. This will let new platforms
    with posix_fadvise do the right thing without code changes.
    
    Also, remove unused declarations from */Interop.Libraries.cs.

[33mcommit 0f5ee8bac6353ba5fcd38b09059aaa73860403f7[m
Merge: 6134b5d 16cec0b
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Sun Sep 20 17:42:28 2015 -0700

    Merge pull request #3339 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 16cec0b8903a67f4b100e532961a8a8acc1acb4c[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Sun Sep 20 14:08:52 2015 -0700

    System.Threading XPlat conversion
    
    [tfs-changeset: 1526944]

[33mcommit 6134b5d33e4a6763bc34de29eb2d0949d9f33bfc[m
Merge: 6e0fdb2 b270610
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Sep 20 16:53:58 2015 -0400

    Merge pull request #3335 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 4e0fe25c8d2c94b7eee8a0a38fa40057db8de72c[m
Author: ikopylov <ikopylov@users.noreply.github.com>
Date:   Sun Sep 20 22:49:37 2015 +0300

    LINQ ToDictionary initial capacity estimation and separate implementation for method without 'elementSelector'.

[33mcommit b27061014ebd18d83031039f31721afa35d4612c[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Sun Sep 20 11:57:30 2015 -0700

    XPlat packaging
    
    Converts libraries to use platform specific implementations in packages.
    
    [tfs-changeset: 1526941]

[33mcommit cfc3f755af4302973d7455fdb86182822c467bdb[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Sep 20 10:26:14 2015 -0400

    Remove faulty assert from CurlHandler.CurlResponseStream
    
    CurlResponseStream.VerifyInvariants has an assert that assumes that if the stream has been disposed, it must have also completed.  But since this stream is exposed publically, it's possible for consuming code to Dispose of the stream before the request has finished, violating the assert.  In such a situation, a subsequent attempt to transfer data to the response stream will fail and cause the request to be aborted as desired, cleaning up resources (there are probably some opportunities here for some optimizations to handle this case, but that can be explored later.)
    
    This commit just removes the bad assert.

[33mcommit 6e0fdb2557a91f197ca420517f17f3ef4557950d[m
Merge: 5f66808 446b1ed
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Sep 20 09:13:30 2015 -0400

    Merge pull request #3330 from weshaggard/RestoreToolRuntimeAtRoot
    
    Restore Tool Runtime as part of root src traversal

[33mcommit 5f668089c42255f5bfef34310bd61d6d7df28be4[m
Merge: c64f66e 127b0bf
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Sep 20 09:12:47 2015 -0400

    Merge pull request #3331 from weshaggard/UpdateBuildTools92
    
    Update the build tools to version 92

[33mcommit f4966a2d0c971df3cd919bd5a5c84fd91627bf8e[m
Author: Axel Heer <axel@heer.eu>
Date:   Sun Sep 20 11:55:56 2015 +0200

    Increase GCD test coverage

[33mcommit 127b0bf7dbcddc078dbd8b62aea645b20bcfcc1d[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sun Sep 20 00:55:41 2015 -0700

    Update the build tools to version 92
    
    This includes a change to specify a version instead of using * for the
    package versions in the tool/test runtime project.json files to help
    cases where the lock files get invalidated and regenerated and pick-up
    higher versions that we aren't ready to consume yet.
    
    This also picks up a couple tweaks to the toolruntime targets.

[33mcommit 446b1ed877994597293e0d78083ebd0de96654b5[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Sun Sep 20 00:52:19 2015 -0700

    Restore Tool Runtime as part of root src traversal
    
    There are cases where multiple projects building in parallel try
    to restore the tools runtime at the same time which cause some
    copying over and potential failed writes. This add the restoring
    of the tool runtime as part of the root traversal project so
    the other projects will not have any work to do.

[33mcommit 60aa75f55e9149176a94e5ec5c3773688fcce5be[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Sun Sep 20 12:25:44 2015 +0530

    HttpClientHandler.UseDefaultCredentials to be made a no-op
    
    HttpClientHandler on windows securely uses logged-in user's credentials
    when UseDefaultCredentials is set to True. This is achieved via winHttp.
    Libcurl does not provide such functionality, so making this a no-op.

[33mcommit c64f66eba944cd686b5c2c2b578fb805e6b18d70[m
Merge: e8aeb0d e25c502
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Sep 19 21:13:30 2015 -0400

    Merge pull request #3327 from stephentoub/curlhandler_maxrequestcontentbuffersize
    
    Implement HttpClientHandler.MaxRequestContentBufferSize on Unix

[33mcommit e8aeb0da3dd98034cdbc963287b71c5746c7e7de[m
Merge: f8de53d 7c553bc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Sep 19 21:02:53 2015 -0400

    Merge pull request #3326 from stephentoub/winhttp_delegate
    
    Remove delegate allocation from WinHttpHandler.SendAsync

[33mcommit e25c5020fd9e327dfdb7baffb9d772967b28abc9[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Sep 19 20:29:06 2015 -0400

    Add MaxRequestContentBufferSize tests to lock in behavior

[33mcommit d91900297d6430c6057abed2e513287d978fa8ec[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Sep 19 20:21:32 2015 -0400

    Implement CurlHandler.SupportsRedirectConfiguration
    
    It does. Return true.

[33mcommit dd7463ada578331d9b1ee5e25ee7e9998d6bf42a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Sep 19 20:09:29 2015 -0400

    Implement HttpClientHandler.MaxRequestContentBufferSize on Unix
    
    Changed to match behavior on Windows (get returns 0, set throws PlatformNotSupportedException).

[33mcommit 7c553bc3e68736d1fec2f82d87e7cb4178cbcf14[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Sep 19 20:03:09 2015 -0400

    Remove delegate allocation from WinHttpHandler.SendAsync
    
    Each SendAsync call was allocating a new delegate for StartRequest.

[33mcommit f8de53d67dff057a257b3146a6d69ed9102a8814[m
Merge: dbbc96a b30b397
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sat Sep 19 12:30:34 2015 -0700

    Merge pull request #3323 from davidsh/disable_leak_tests
    
    Disable SafeHandle leak checking in WinHttpHandler Unit Tests

[33mcommit b30b39707bfc9359c46e4749552f879ae37fcf13[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sat Sep 19 08:16:11 2015 -0700

    Disable SafeHandle leak checking in WinHttpHandler Unit Tests
    
    Addresses issue #3312.

[33mcommit dbbc96aeeab59b6e3c314e676f191c095d6517ba[m
Merge: e94b267 cdc693c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Sep 19 09:49:28 2015 -0400

    Merge pull request #3303 from eerhardt/master
    
    Fix two time zone tests on OS X.

[33mcommit a46c6895fd942a4b22ee60145a1da29af30b390e[m
Author: Khoa Dang <Khoa.Dang@microsoft.com>
Date:   Fri Sep 18 14:55:50 2015 -0700

    Fix performance issue when deserializing base64 content with linebreak chars

[33mcommit e94b267317561b2c7b4fda94a29712bd5803d779[m
Merge: ed0bd8b a155cb3
Author: Krzysztof Cwalina <kcwalina@microsoft.com>
Date:   Fri Sep 18 13:48:51 2015 -0700

    Merge pull request #3314 from axelheer/biginteger-divrem
    
    Improve BigInteger.DivRem

[33mcommit a155cb33e9777f5f60eca07658876f67717c5be8[m
Author: Axel Heer <axel@heer.eu>
Date:   Fri Sep 18 21:20:29 2015 +0200

    Improve BigInteger.DivRem
    
    Calculating the remainder of an integer division using the quotient, if
    already known, seems to be a bit faster than using the "naive" modulo.

[33mcommit cdc693ccbcceca43b00e7de686d10bba7df148bb[m
Author: Eric Erhardt <eerhardt@microsoft.com>
Date:   Thu Sep 17 17:11:29 2015 -0500

    Fix two time zone tests on OS X.
    
    Fix #3211.

[33mcommit ed0bd8b06d60910157ade78294006592f2c71d49[m
Merge: ce3147c 045c573
Author: VSadov <vsadov@microsoft.com>
Date:   Fri Sep 18 09:59:08 2015 -0700

    Merge pull request #3227 from bartdesmet/Issue-3196
    
    Expression interpretation support for UnaryPlus, IsTrue, and IsFalse

[33mcommit ce3147cc5d60ca2920d26e5ed44a65f9d57e89ca[m
Merge: f16a5ed f81a1f1
Author: VSadov <vsadov@microsoft.com>
Date:   Fri Sep 18 08:59:21 2015 -0700

    Merge pull request #3288 from bartdesmet/Issue-3266
    
    Use optimized N-ary MethodCallExpression nodes from all Call factories

[33mcommit f16a5ed0227ffe890da5a1a571e20f137b74c798[m
Merge: 4b15f40 6ce5c4f
Author: VSadov <vsadov@microsoft.com>
Date:   Fri Sep 18 08:41:09 2015 -0700

    Merge pull request #3298 from bartdesmet/Issue-3245
    
    Adding optimized N-ary InvocationExpression nodes

[33mcommit 4b15f40c266bb4de4f97365301d34a4d235d0fb7[m
Merge: 80967c0 02e3fef
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Fri Sep 18 08:27:20 2015 -0700

    Merge pull request #3306 from jasonwilliams200OK/test-runner
    
    Test: Fixes for FreeBSD in run-test script

[33mcommit 80967c02e5e4558117c8e8ea494d46cbb17e0f2f[m
Merge: 7162b43 df1367b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Sep 18 09:32:54 2015 -0400

    Merge pull request #3309 from JonHanna/test_for_null_on_cast
    
    Test for exception on cast of null to non-nullable type.

[33mcommit df1367b07c81864220930f68e37fc6726ed6d0e8[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Sep 18 12:12:03 2015 +0100

    Test for exception on cast of null to non-nullable type.
    
    Since it was decided in #2947 that the current behaviour is desired, and should
    be documented as the correct behaviour, there should be a test that checks this
    behaviour continues, to avoid regression changes to it.

[33mcommit 02e3feffb00c9265f6f4fbe993022eacb14cf7d9[m
Author: P. Jass <necmon@yahoo.com>
Date:   Fri Sep 18 06:38:02 2015 +0000

    Test: Fixes for FreeBSD in run-test script.

[33mcommit f81a1f143c9c9d535c2461e88666260491861896[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Thu Sep 17 22:25:20 2015 -0700

    Adding a few minor code improvements.

[33mcommit 7162b43c6ed4587dd2d5df6ed9e6c4f23e15caf0[m
Merge: ff0475e d01a2f4
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Thu Sep 17 16:28:51 2015 -0700

    Merge pull request #3300 from sokket/pal
    
    Changing openssl.c to fix the string-to-bool conversion warnings and to fix the tautological compare warnings without needing an assert.

[33mcommit ff0475e32add91b547352f8f43688a383ccd9d32[m
Merge: f5f846e cba086e
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Sep 17 16:22:24 2015 -0700

    Merge pull request #3296 from nguerrera/fix-generic-confusion
    
    Remove and fix incorrect reflection helpers

[33mcommit f5f846ea06233946710dff7b3553f04fc76f2635[m
Merge: f9b2710 5a5debb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 17 19:04:22 2015 -0400

    Merge pull request #3132 from Clockwork-Muse/PLINQ_Other2
    
    System.Linq.Parallel - more tests

[33mcommit d01a2f4d2fe33e358a83d64a42fb830012037c5a[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Thu Sep 17 15:06:03 2015 -0700

    Fixing openssl.c to not #pragma ignore warnings for asserts

[33mcommit f9b271003cdd7abd82b8d1d2b425baa89c4fe114[m
Merge: ff23eb3 dab7983
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Sep 17 15:06:47 2015 -0700

    Merge pull request #3299 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit dab79832936d74abb4e2e19aa53ed89052ceb9bc[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Thu Sep 17 14:22:18 2015 -0700

    Adding ECDsa, ECDsaCng and ECDsaCertificateExtensions to contracts.
    
    Because our facade baseline isn't built over 4.6.1 yet and we're on a time crunch (we need these apis
    added to the contracts by next week to avoid missing the V1 deadline), we have to jump through some hoops:
    
    - Add a temporary partial facade for X509Certificates to provide a home for the ECDsaCertificateExtensions type.
    
    - Add ApiCompat silencers for the known breaking changes in ECDsa and ECDsaCng.
    
    B#145560 tracks removing these workarounds once we switch over the baseline.
    
    [tfs-changeset: 1526338]

[33mcommit ff23eb39ea97f87af51cdde65d28dfcca5bc6a24[m
Merge: 6615490 cbb8657
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 17 16:50:49 2015 -0400

    Merge pull request #3295 from eerhardt/master
    
    Add test for #2788.

[33mcommit 6615490af35f66d74bb91be60adbbd204c4ca7da[m
Merge: 75fd2b2 f8fd4b7
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Thu Sep 17 13:48:17 2015 -0700

    Merge pull request #3257 from sokket/pal
    
    Finishing up PAL'ing Unix\libc (non-networking and crypto) PInvoke calls

[33mcommit 6ce5c4fccfe51d5b86fed588c38c4e2de9ec5844[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Thu Sep 17 13:41:24 2015 -0700

    Adding tests for N-ary optimizations of InvocationExpression.

[33mcommit dbc621395a016a5ecf3fd0a3ddda6c7792800e3d[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Thu Sep 17 13:23:48 2015 -0700

    Adding N-ary specialized nodes for InvocationExpression and the corresponding factories.

[33mcommit f8fd4b7ff731cd8951e6da0bb70ca206533866bb[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Tue Sep 15 11:46:14 2015 -0700

    Finishing up PAL'ing Unix\libc (non-networking and crypto)
    PInvoke calls

[33mcommit 037d471d7c7cc17d387252a3372d9adc94c6ab68[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Thu Sep 17 12:59:05 2015 -0700

    Refactoring InvocationExpression to support N-ary specialized subclasses.

[33mcommit cba086e8a35fadf3b44a949a7a3fd6cd0c2e003f[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Sep 17 12:57:47 2015 -0700

    Remove and fix incorrect reflection helpers
    
    There were two instances in the code of trying to mimic the old
    Type.GetGenericArguments() with TypeInfo API that were incorrect.
    Both attempts ignored that TypeInfo separates generic type definition
    parameters from generic instantiation arguments.
    
    Case 1: System.Linq.Expressions.Tests
    --------------------------------------
    These already had a reference to System.Reflection.TypeExtensions,
    which provides all of the compatibility API it needed, so the custom
    helpers are simply deleted.
    
    Case 2: System.Linq.Queryable
    -----------------------------
    This library doesn't depend on System.Reflection.TypeExtensions and
    so the trivial helper is left there but corrected to match the expected
    behavior of the classic API.

[33mcommit cbb86578394a98349dd7494860e168102d3dd3f5[m
Author: Eric Erhardt <eerhardt@microsoft.com>
Date:   Thu Sep 17 14:53:48 2015 -0500

    Add test for #2788.

[33mcommit 75fd2b2a19a1840bbb61e4d28e7ebcf521ba61d5[m
Merge: 01aa928 7e25018
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Sep 17 10:24:15 2015 -0700

    Merge pull request #3291 from nguerrera/freebsd-warning-fix
    
    Fix warnings causing FreeBSD build failure

[33mcommit 7e2501828795b7a1f23bda3410d25b722e87307d[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Sep 17 07:52:44 2015 -0700

    Fix warnings causing FreeBSD build failure

[33mcommit 01aa9281598ab545c166a31a45319bd4d7acfbb3[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 17 12:32:02 2015 -0400

    Fix coding guidelines mention of _camelCase style

[33mcommit 5a5debb8fe10216668b31dc5722914d4ace6fa6f[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Thu Sep 17 07:14:30 2015 +0900

    Switch to OuterLoop attribute on class.

[33mcommit 37fe1aa4acafa7e11d951a0dd694ac9b3c983db2[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Tue Sep 1 23:21:58 2015 +0900

    Expand GetEnumerator Tests.

[33mcommit aa26d27367f3283c86b502da640a7f87055b3f7a[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Sun Aug 2 15:01:16 2015 +0900

    Extract/expand failing combinatorial tests.
    
    Add throw-on-enumeration source.

[33mcommit df57e797c4288851b6b288aad63a1fff558dd0fa[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Sun Aug 2 14:44:47 2015 +0900

    Add missing PreCanceled OCE combination tests.

[33mcommit ca3c94dc781c92ae738cd86f0435ac729844e919[m
Author: Clockwork-Muse <clockwork-muse@outlook.com>
Date:   Thu Jul 16 16:04:00 2015 +0900

    Add checks for duplicate settings.

[33mcommit 822501805ab70163b6da1d12cc58dae581a78da9[m
Author: Clockwork-Muse <clockwork-muse@outlook.com>
Date:   Fri Jul 10 19:44:25 2015 +0900

    Fix some longrunning tests to point at the correct short ones.

[33mcommit 9e9d3a24b65426e938cef7851e989018bee0a100[m
Author: Clockwork-Muse <clockwork-muse@outlook.com>
Date:   Thu Jul 9 12:28:10 2015 +0900

    Add tests dealing with floating point infinity, NaN (and null).

[33mcommit 348bd1a2e7d0e41e03509ae408b60014d8c11470[m
Author: Clockwork-Muse <clockwork-muse@outlook.com>
Date:   Tue Jul 7 12:17:48 2015 +0900

    Improve Sum floating point overflow tests, add NaN tests.

[33mcommit d5ec9d25dc831ab48bc7eb3cadf5d375e6857257[m
Author: Clockwork-Muse <clockwork-muse@outlook.com>
Date:   Tue Jul 7 12:00:23 2015 +0900

    Improve OrderBy/ThenBy tests.
    
    Use explicit ranges instead of boolean check, restrict bounds.
    Verify count of items ordered.
    Add tests with non-comparable items.

[33mcommit 958e9122df2408f93b3dd7e42777a333e89c48e2[m
Author: Clockwork-Muse <clockwork-muse@outlook.com>
Date:   Tue Jul 7 11:59:32 2015 +0900

    Clarify "Stable Sort" tests.

[33mcommit c9e780fd0d5f8868ba9975616ca895a6a17db79d[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Fri Aug 21 19:13:45 2015 +0900

    Correct Test namespace.

[33mcommit 06a87631124c1d7fd000f03b140be86a46e35b2b[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Wed Sep 16 21:38:44 2015 -0700

    Adding tests for MethodCallExpression optimization.

[33mcommit a58883f3d934251ed0266503bd01d3abf3f79f9a[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Wed Sep 16 20:52:30 2015 -0700

    Code size reduction for InstanceMethodCallExpression nodes.

[33mcommit e6e2d644abf3681f15167b3d7f79cfd5e943fc6d[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Wed Sep 16 20:25:24 2015 -0700

    Adding optimization for Expression.Call factories for commonly-used low argument counts.

[33mcommit 08f475f140bb983a83d59d6d57ba3fb58243c1da[m
Merge: 5dbf365 0ea100d
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Wed Sep 16 22:03:21 2015 -0700

    Merge pull request #3283 from nguerrera/build-fixes
    
    Fail the build when native dependencies are missing, fix `build.sh native clean`

[33mcommit 5dbf3653913c26aaf35fe87adcf0d94d36b8093b[m
Merge: dbb131d d27d8f7
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Wed Sep 16 21:04:27 2015 -0700

    Merge pull request #3279 from sokket/style
    
    Adding a clang-format file and a script to format every cpp and h file

[33mcommit dbb131dcafe570fd93824820797c88eb35609fc7[m
Merge: e1ef93e b033f44
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Wed Sep 16 19:53:37 2015 -0700

    Merge pull request #3286 from weshaggard/UpdateBuildTools89
    
    Update to build tools version 89

[33mcommit b033f441ebc3820d0df1cfbf26e750f6aacb66fb[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Wed Sep 16 19:05:12 2015 -0700

    Update to build tools version 89
    
    Moves us to xunit 2.1 rc1
    Refreshs the lock files to include latest versions so we are now
    compatible with DNU beta7 format.

[33mcommit d27d8f7cd6dc5a492ddc90594db4d97bd833eb00[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Wed Sep 16 11:23:19 2015 -0700

    Adding a clang-format file and a script to format every cpp and h file. This
    style is based on the LLVM style with some minor tweaks. This commit also
    ran the script against the current code to bring us into compliance. This
    fixes #3051

[33mcommit e1ef93e97279de5778cfdc4461f85b7ebc1e7d74[m
Merge: e65d5d8 a373522
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Sep 16 16:14:03 2015 -0700

    Merge pull request #3231 from bartdesmet/Issue-3223
    
    Fix for ConditionalExpression.Update undesired cloning behavior

[33mcommit 0ea100df53d82426f65c52765a36dff0e9132b8c[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Wed Sep 16 15:31:12 2015 -0700

    Fail the build when native dependencies are missing

[33mcommit 09d900d546634cf4a02f7e096fd56edceaab5233[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Wed Sep 16 15:27:01 2015 -0700

    Fix for `build.sh native clean` not working as expected
    
    We were failing to cd to the bin directory and CMake would spew files
    all over the the working directory and then put things in a bad state
    where builds would fail until a git clean was performed.
    
    This was broken by the recent merge of managed and native builds into
    one script.
    
    There's a lot of room to tighten up this script's error handling, but
    in the meantime this is the minimal fix, which makes clean() recreate
    dirs as the comment above it says that it should.
    
    Also fixed a typo: s/manged/managed/

[33mcommit e65d5d8cbdceebeb833fd23a2e58e21901f494ee[m
Merge: 4734e9f ac4c269
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 16 16:47:26 2015 -0400

    Merge pull request #3280 from stephentoub/enable_datashared_test
    
    Restore disabled MMF inter-process test

[33mcommit a3735229fcccddc70b9dacf46d26265cf4fba60a[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Wed Sep 16 13:45:21 2015 -0700

    Fix for ConditionalExpression.Update undesired cloning behavior.

[33mcommit 4734e9f603793e56d699ecf8aa494ce719af33b9[m
Merge: f4907f4 917bedd
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Sep 16 13:02:13 2015 -0700

    Merge pull request #3230 from bartdesmet/Issue-3217
    
    Throw NullReferenceException for field dereferences in expression interpreter

[33mcommit f4907f4f9bbfb3eb92a0d151577b1d92b955af71[m
Merge: c04d15c c74b6f2
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Wed Sep 16 12:53:33 2015 -0700

    Merge pull request #3113 from CIPop/SNSecurityPR
    
    Porting System.Net.Security.

[33mcommit c04d15c3873bbd979641507ecced72a62f915c10[m
Merge: 8fad64b 7d44227
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Sep 16 12:50:11 2015 -0700

    Merge pull request #3229 from bartdesmet/Issue-3197
    
    Expression interpretation of unary operators with lifted methods

[33mcommit ac4c26926c3faec5af5847a2540c192bbfe039fa[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Sep 16 13:33:52 2015 -0400

    Restore disabled MMF inter-process test
    
    Also removing some stale files that got left behind in a previous refactoring.

[33mcommit 8fad64b9a93c57be79d68965793052fee2758215[m
Merge: 35daa9a b4e11c5
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Sep 16 12:45:02 2015 -0700

    Merge pull request #3228 from bartdesmet/Issue-3147
    
    OverflowException for interpretation of NewArrayBounds

[33mcommit 35daa9aecfc18ee9223ec6db7e6f4a230f96d41e[m
Merge: 23bc93e 50aa6bb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 16 15:35:41 2015 -0400

    Merge pull request #3278 from ianhays/fsbug
    
    Fixed test bug with FileInfo_GetSetTimes

[33mcommit 23bc93e6acc0a4098be1a7213d5e9e1f55eda451[m
Merge: 28615c2 d2895bc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 16 15:02:58 2015 -0400

    Merge pull request #3254 from kouvel/WaitAllCheckForDuplicates
    
    Add WaitAny and WaitAll tests for duplicate handle cases

[33mcommit c74b6f24070a11eb347a43d7ac6de3304a50e789[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Fri Sep 4 16:00:47 2015 -0700

    Porting System.Net.Security

[33mcommit 28615c2c39e9ddb3a8f419f4bc3b90e162ee530e[m
Merge: 34e8271 498bcaa
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Wed Sep 16 11:15:24 2015 -0700

    Merge pull request #3022 from JeremyKuhne/GetFullPathName
    
    Fix GetFullPathName wrap.

[33mcommit 50aa6bbfd3921a9312392f534c5986a193486c35[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Sep 16 11:02:35 2015 -0700

    Fixed test bug with FileInfo_GetSetTimes
    
    resolves #3272

[33mcommit 34e8271eae1e8cbda5389f6b152c1f27994ca6c2[m
Merge: 77b35ab 6df77fd
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Wed Sep 16 10:34:50 2015 -0700

    Merge pull request #3177 from akoeplinger/update-dnx
    
    Update build to use DNX beta7 instead of beta5

[33mcommit 77b35ab922586c69b51f4df66f3d8149f940e1a7[m
Merge: 3092a9e 648c01d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 16 13:15:56 2015 -0400

    Merge pull request #3265 from nguerrera/shim-work
    
    Increase native compilation warnings and fix the fallout

[33mcommit d2895bcadb7d85a23263b63339e5e668f965c11c[m
Author: Koundinya Veluri <kouvel@microsoft.com>
Date:   Mon Sep 14 15:11:50 2015 -0700

    Add WaitAny and WaitAll tests for duplicate handle cases

[33mcommit 3092a9e41ba379f38bcb36cf5a90cb7e6a650408[m
Merge: 66e05de 425d47f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 16 12:55:01 2015 -0400

    Merge pull request #3274 from janhenke/drop-native-buildsh
    
    Drop src/Native/build.sh completely.

[33mcommit 66e05de03c49e8630214fb6fa62a57fe8e527ffa[m
Merge: 4caa36f 7f372da
Author: Shin Mao <shmao@microsoft.com>
Date:   Wed Sep 16 09:42:49 2015 -0700

    Merge pull request #2596 from shmao/issue2502
    
    Added 4 Async Method Impls in XmlBaseWriter Required by WCF.

[33mcommit 4caa36f0d415adef287a9a2aad9e3a421647f4a5[m
Merge: 3f44252 3858363
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 16 12:17:52 2015 -0400

    Merge pull request #3273 from stephentoub/update_badges
    
    Add more badges to README.md

[33mcommit 648c01d69fba8d23750122d9823f53257785c8ca[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Sep 15 20:41:11 2015 -0700

    Increase native compilation warnings and fix the fallout
    
    We were using -Wall but now use -Weverything and opt out of only
    a handful of issues such as C++-98 compat, which we don't need.
    
    The most notable impact is that the compiler now catches
    narrowing implicit conversions, which was also the primary
    motivation for doing this now as there was known debt in our
    unsupervised usage of 64-bit types for sizes.
    
    We now assert on bad buffer sizes *and* retain full checks in
    release builds to be completely defensive against overflow.
    
    We now use int32_t for scratch buffer sizes. int64_t remains for
    file offsets and uint64_t remains for memory mapped files, but
    int32_t for scratch eliminates a bunch of managed casts and
    therefore makes it easier to reason about overflow prevention.
    
    INT32_MAX is also the most portable limit on these buffer sizes
    because the behavior of functions like read is only implementation
    defined when the input size is greater than SSIZE_MAX and ssize_t
    is int32_t on the lowest common denominator of modern platforms.
    
    Enums corresponding to platform values are now enum X : T instead
    of enum class X : T. The PAL_* names are descriptive enough without
    scoping and the implicit conversion to raw integer is actually helpful
    to avoid a bunch of casts, which are otherwise needed to interop with
    the corresponding native API.

[33mcommit 3f442525d456c7c89a0305ae264bfe7278230c14[m
Merge: f749d6d da456e3
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 16 11:47:11 2015 -0400

    Merge pull request #3263 from stephentoub/unix_filestream_read
    
    Update UnixFileStream to read more from OS after using buffer

[33mcommit 425d47f8494b2c2a4414efd799e65fb6b58cc9f7[m
Author: Jan Henke <Jan.Henke@taujhe.de>
Date:   Wed Sep 16 17:44:41 2015 +0200

    Drop src/Native/build.sh completely.
    
    PR #3175 merged the separate build.sh files for managed and native
    builds into one file on the top level of the repository.
    src/Native/build.sh was left until the CI is updated to use the new
    location. After the CI is now updated, drop the old file completely.

[33mcommit 3858363e80150715690aa3202225534d1797ef93[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Sep 16 11:38:49 2015 -0400

    Add more badges to README.md
    
    Adds badges for:
    - Native component builds on Linux and OS X
    - Separate build and test legs on Linux and OS X
    - Outer loop tests in debug and release on Windows
    
    I restructured the layout of the badges a bit as part of this to try to keep it neat.  I also switched to shields.io badges that let us control the label on the badges, so that they all don't just say "build".

[33mcommit f749d6d71442f841501aa3ba2ff78ab91efa09cf[m
Merge: c08ddf0 51281d5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 16 11:36:37 2015 -0400

    Merge pull request #3271 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 51281d50bfb257e7781467da15d30c571a830d8f[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Wed Sep 16 06:53:42 2015 -0700

    Fix API violation.
    
    [tfs-changeset: 1525779]

[33mcommit c08ddf04008a52ce380fa8c735888032b75a6456[m
Merge: 9e76557 5d6c82b
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Wed Sep 16 19:08:26 2015 +0530

    Merge pull request #3178 from kapilash/redirect-uri-fix
    
    Redirect handling for cookies and creds

[33mcommit 9e76557312c074d48f5574da8f6a37391e731f3d[m
Merge: 046b2c0 c02f4a0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 16 08:38:26 2015 -0400

    Merge pull request #3261 from stephentoub/fix_envvar_child_proc
    
    Fix TestEnvironmentOfChildProcess to handle newlines

[33mcommit 046b2c03a0db9ea93e604f2e37455f7eb8dc3e38[m
Merge: 5242748 b10bc76
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Wed Sep 16 05:35:36 2015 -0700

    Merge pull request #3255 from AtsushiKan/x509
    
    Implement GetECDsaPublicKey/GetECDsaPrivateKey.

[33mcommit b10bc763a4641244ce8cfbd9250ed2fcfc5d022b[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Wed Sep 16 05:06:56 2015 -0700

    Implement GetECDsaPublicKey and GetECDsaPrivateKey.

[33mcommit 524274885050ef5116e44a242ef8eb86bcf76a72[m
Merge: d08f240 406540d
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Wed Sep 16 02:47:50 2015 -0700

    Merge pull request #3267 from weshaggard/FixRunTestScript
    
    Add exclusion for ToolRuntime directory in the linux test script

[33mcommit 406540dc0aad835a9492131a2718dc61298e9379[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Wed Sep 16 02:02:09 2015 -0700

    Add exclusion for ToolRuntime directory in the linux test script

[33mcommit 5d6c82b64c317a6e7e724778affb0f571acdcb2e[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Fri Sep 11 18:28:10 2015 +0530

    Redirect handling for cookies and creds
    
    This fix realigns CurlHandler with WinHttpHandler w.r.t Redirect handling.
    When redirect is detected, we clear the credentials if the credentials were originally provided as NetworkCredentials Otherwise we use the
    forwarding URI to get the new set of credentials.
    Like wise, in case of redirects, we get the cookies again from the cookieContainer
    
    In addition, this commit also collects the cookies from the response header

[33mcommit da456e315cf4c52334f9ed6315c0523af534bc37[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Sep 15 22:55:05 2015 -0400

    Update UnixFileStream to read more from OS after using buffer
    
    Stream.Read is not required to hand back as many bytes as the caller requested; a conforming implementation can hand back any number > 0 and <= count when there's still data left in the stream, and many streams do frequently return < count.  UnixFileStream currently frequently does this, returning what's left in the internal buffer when there's any data left in the buffer.
    
    Win32FileStream, however, in this case does a subsequent read from the underlying file handle to try to give back as much data as the user requested.  This request still may not return the requested count, either because we reached the end of the file or because Windows decided not to return as much data as was requested, but it frequently will.  As such, some code has been written to expect this behavior, and while that code is flawed and should be fixed even on Windows, it frequently works.
    
    To maintain the consistency with Windows, this change updates UnixFileStream to do such a subsequent read if we tried to satisfy a Read request purely from the buffer but didn't have as much data as the user requested.  I've not added a test for the behavior, because a) it's not guaranteed by Stream.Read, but more importantly b) the test could fail because the OS may not give us back what we requested.

[33mcommit 6df77fdbb6cf8e0d35a3074bb325f7810085daa3[m
Author: Alexander Köplinger <alex.koeplinger@outlook.com>
Date:   Fri Sep 11 14:52:11 2015 +0200

    Update build to use DNX beta7 instead of beta5
    
    The corefx build used an older beta5 version of DNX which hardcoded the path to bash in dnu, breaking the build on FreeBSD.
    Updating DNX to the latest "stable" beta7 release fixes this.
    
    After updating I noticed a few test projects didn't build anymore as they were missing some dependencies in project.json, added those.
    
    Fixes #3173

[33mcommit d08f2401e090c899fc7939ca4416e25edf3afce4[m
Merge: 4571870 f2d4efc
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Tue Sep 15 16:53:56 2015 -0700

    Merge pull request #3259 from weshaggard/UpdateBuildTools
    
    Update to BuildTools version 87

[33mcommit c02f4a0d3b448e773bdf2c56eaa99e8b8ae554a9[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Sep 15 19:38:55 2015 -0400

    Fix TestEnvironmentOfChildProcess to handle newlines
    
    Something changed recently in the CI environment, such that Jenkins is now putting PR/commit/comment information in environment variables.  This is breaking the TestEnvironmentOfChildProcess test, which assumes (poorly) environment variables won't have newlines in them, as it's using newlines for parsing.  This fix basically just switches to using something other than a newline for parsing.  It also includes a few other simplifications.

[33mcommit 7f372da212737275edcdd6edb513d8ded6df560e[m
Author: Shin Mao <shmao@microsoft.com>
Date:   Tue Aug 4 14:56:44 2015 -0700

    Add 4 async operation implementations in XmlBaseWriter.
    
    Add a AsyncCheck wrapper for XmlDictionaryWriter.
    Some changes based on PR feedbacks.
    
    Move tests for XmlDictionaryWriter to a seperate file.
    Some optimizations on async operations.
    
    Added a Test for CheckAsync()

[33mcommit f2d4efc72a78f4d0a4a35d4129b16d790069e5a5[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Tue Sep 15 15:13:21 2015 -0700

    Update to BuildTools version 87
    
    This update fixes the test-runtime\project.json so that it correctly
    restores System.Console and also switches GenFacades to be running
    on .NET Core isntead of the full framework.

[33mcommit 4571870ff8967f63fe1c81c9fa0a130534812158[m
Merge: 53bc519 b67ebf2
Author: Koundinya Veluri <kouvel@users.noreply.github.com>
Date:   Tue Sep 15 14:12:48 2015 -0700

    Merge pull request #3100 from kouvel/TryGetRawMetadata
    
    Add AssemblyExtensions.TryGetRawMetadata to the System.Reflection.Met…

[33mcommit 53bc519b3641c41f12e027af7b32acb445794d44[m
Merge: 1f4ee7e e1f612a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 15 13:52:08 2015 -0400

    Merge pull request #3252 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 1f4ee7e499d70ae27d007939ba39251cc0fa515c[m
Merge: 5927e57 62e734b
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Tue Sep 15 09:27:21 2015 -0700

    Merge pull request #3251 from AtsushiKan/cryptomsg
    
    Fix issue #3233. Better CryptoException messages.

[33mcommit 62e734b1d659291c6859af80a767195f7ff104ff[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Tue Sep 15 09:22:35 2015 -0700

    Fix issue #3233. Better CryptoException messages.

[33mcommit e1f612a73c2a8977cbdcbd1c76be561cd6225e8f[m
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Tue Sep 15 09:21:36 2015 -0700

    Delete all of the legacy cryptography packages (the ones which got refactored for Beta 7)
    
    [tfs-changeset: 1525259]

[33mcommit 5927e57135027291e00178e2f100cdfd603c1913[m
Merge: ee819c7 5361c0f
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Tue Sep 15 08:29:35 2015 -0700

    Merge pull request #3175 from janhenke/merge-buildsh
    
    Merge src/Native/build.sh into top level build.sh

[33mcommit ee819c778c5d27c4edba9cebf6002ebd87bf7708[m
Merge: eed9e60 2f6f4b5
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Sep 15 08:18:26 2015 -0700

    Merge pull request #3250 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit eed9e605f4a2abf893f63a2aa3975b4b3300a511[m
Merge: a68c41e e59a99c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 15 10:16:26 2015 -0400

    Merge pull request #3239 from ianhays/fsbug
    
    Fixed OSX file creation time format

[33mcommit a68c41ecda5ce444f97adc8796f35d3781d36584[m
Merge: 1b215f7 b0fb029
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 15 10:15:33 2015 -0400

    Merge pull request #3246 from richlander/roadmap
    
    Add link to .NET Core Roadmap

[33mcommit 1b215f7eccb0a01225688839cd7da0c3ab106162[m
Merge: a39ff3c 484931a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 15 10:14:46 2015 -0400

    Merge pull request #3238 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit b0fb029db5ed6b335fb7d2ed18171c737d92a7b6[m
Author: Richard Lander <rlander@microsoft.com>
Date:   Mon Sep 14 22:04:17 2015 -0700

    Add link to .NET Core Roadmap

[33mcommit 7d442276fcbed5d8885226a6fdff6e67412d2abb[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Mon Sep 14 19:25:24 2015 -0700

    Improving tests for unary operators.

[33mcommit 045c5732e0624ca454a633e44dc34f84e9fdb68c[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Mon Sep 14 18:59:12 2015 -0700

    Using coalescing branch for IfTrue and IfFalse.

[33mcommit 958cbab19409a4fc607df3beab9cfbe2e1a7cbcd[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Mon Sep 14 18:15:30 2015 -0700

    Using coalescing branch for lifted unary method call.

[33mcommit 917bedd0b364e69a2cc5d6b46e4cf0928f3aa50a[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Mon Sep 14 17:47:18 2015 -0700

    Adding reference to issue in test code.

[33mcommit b4e11c53154095e2d4a6dec6dce4d01631748eea[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Mon Sep 14 17:08:59 2015 -0700

    Adding tests for OverflowException in NewArrayBounds.

[33mcommit 2f6f4b5a64bb2160603d398047d5da3be18f0492[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Mon Sep 14 16:56:33 2015 -0700

    Fixed PackageTargetRuntime casing to be lower case for System.IO.FileSystem so that the resolution from nuget will work... yes it is case-sensitive for these runtime ids :(
    
    [tfs-changeset: 1525012]

[33mcommit 0bbd634ec8b3bb75f3b9855de70b9c3b9047f6c9[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Mon Sep 14 15:31:21 2015 -0700

    Adding tests for MemberAccess nodes.

[33mcommit b5d749c8bb4c57acfc0b45e380b471ae5548a43e[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Mon Sep 14 14:38:56 2015 -0700

    Adding tests for UnaryPlus, IsTrue, IsFalse.

[33mcommit a39ff3ca6a0d60eaec4b1d995b46e78bcd1ba9c2[m
Merge: 9726e4d fa7a851
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Mon Sep 14 14:10:07 2015 -0700

    Merge pull request #3240 from AtsushiKan/cryptomessage
    
    Issue #3233 - More useful messages for Crypto exceptions.

[33mcommit fa7a851ed13d8f6d287a6d2fc8f4186410e4abc9[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Mon Sep 14 13:38:26 2015 -0700

    Issue #3233 - More useful messages for Crypto exceptions.

[33mcommit 73c515d5ca3de7c6416f338b94fcaa052c8a7cb1[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Mon Sep 14 12:04:10 2015 -0700

    Fixing IsTrue and IsFalse support in the lifted case.

[33mcommit 9726e4d4f8cb8461d498fd231d4a3ca676f8130e[m
Merge: f8ac366 270290e
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Mon Sep 14 11:37:39 2015 -0700

    Merge pull request #3236 from tarekgh/AddDateTimeParseTest
    
    Add date time parse test

[33mcommit 270290ea8f9ec28d42ef3defc3586fdfe4729304[m
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Mon Sep 14 10:30:39 2015 -0700

    Convert the test method to Theory instead of Fact

[33mcommit 5f2becb9abe11a20fabd7db32d3a98edd019d5da[m
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Mon Sep 14 09:49:22 2015 -0700

    Add DateTime parsing test
    
    The added test is to exercise the cultures that has the date and time
    separators are same.

[33mcommit e59a99c6628b817e95a43880fe14cbf602602b9e[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Mon Sep 14 10:51:15 2015 -0700

    Fixed OSX file creation time format
    
    FileInfo.CreationTime on OSX was returning a correctly timed but incorrectly formatted DateTime. This commit fixes this issue and adds coverage to a existing test to fill the test gap that let the issue through.

[33mcommit f8ac366a492b94eaa0b5044cede9eb44b85af852[m
Merge: 976466f a0f070d
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Mon Sep 14 10:44:44 2015 -0700

    Merge pull request #3234 from bartonjs/unix_cryptographicexception_messageandcode
    
    Make OpenSsl-originated CryptographicExceptions set HResult and Message

[33mcommit 484931a343eb48d326cb698c8766a28d0e079aee[m
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Mon Sep 14 10:32:09 2015 -0700

    Enable System.Security.Cryptography packages for .NET Native / UWP.
    
    [tfs-changeset: 1524835]

[33mcommit a0f070d9223cb1855565614a45e0ae9b81db34ab[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Sep 14 07:54:10 2015 -0700

    Make OpenSsl-originated CryptographicExceptions set HResult and Message
    
    Since CryptographicException has no constructor that takes both an HResult and a Message this is being achieved by a private derived type which can set both properties.

[33mcommit baf547a745e6b138153a6ea010d42782f66f6fa0[m
Merge: 0948bcd 976466f
Author: Bart De Smet <bartde@microsoft.com>
Date:   Sun Sep 13 18:37:58 2015 -0700

    Merge branch 'master' of https://github.com/dotnet/corefx into Issue-3196

[33mcommit 4ab0e1a40073251d34ddf7007ddd9a34ae474289[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Sun Sep 13 16:28:22 2015 -0700

    Fix for field operations to throw NullReferenceException in lieu of TargetException.

[33mcommit aa279964cec0e4bae659d539526f5fc87a7ed0bf[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Sun Sep 13 16:27:53 2015 -0700

    Fix for overflow exception generation in multi-dimensional array creation expressions.

[33mcommit 0948bcda709eaedff6a243bfe86cc8dd66ae752a[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Sun Sep 13 16:34:31 2015 -0700

    Fix to add support for interpretation of UnaryPlus, IsTrue, and IsFalse expressions on primitive types.

[33mcommit b3297bcefbb37fbb8963ad2123e3ac54861c5f17[m
Author: Bart De Smet <bartde@microsoft.com>
Date:   Sun Sep 13 17:02:05 2015 -0700

    Fix for unary operator lifted method calls.

[33mcommit 976466f48dc67cb5108e8bf9fc002006d5eef861[m
Merge: bd1be99 6f753c8
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Sun Sep 13 13:22:15 2015 -0700

    Merge pull request #3222 from nguerrera/fix-inverted-return
    
    Fix inverted return value for user entry not found

[33mcommit 6f753c8b49d523649afeed17a386441c8e65cad0[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Sun Sep 13 12:09:27 2015 -0700

    Fix inverted return value for user entry not found
    
    This was an error in a recent refactoring. The comment above
    explains exactly why this should be return true, but the wrong
    value was used in the actual code below.

[33mcommit bd1be995ff1a6831c622912b240d6e8db669ebd8[m
Merge: e75ed35 44b0765
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Sep 13 12:01:38 2015 -0400

    Merge pull request #3219 from stephentoub/disable_hostname_test_osx
    
    Disable GetHostByName_HostName test failing on OSX

[33mcommit 44b076537ffd3e36f2cd79a4a606e31b1241ab4a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Sep 13 08:52:43 2015 -0400

    Disable GetHostByName_HostName test failing on OSX
    
    #3218

[33mcommit e75ed35034bab6c5f2eec69e686912358ece48ab[m
Merge: 7479393 09c3144
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Sat Sep 12 20:30:37 2015 -0700

    Merge pull request #3216 from stephentoub/disable_fsw_tests_osx
    
    Disable two FileSystemWatcher tests failing on OS X

[33mcommit 74793937627af0b8836ef1e45993f6f864d892cf[m
Merge: 216bb8a 802147c
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Sat Sep 12 20:29:25 2015 -0700

    Merge pull request #3214 from stephentoub/disable_ipv6_test_osx
    
    Disable failing IPV6 parsing test on OS X

[33mcommit 216bb8ab907f891c0946525194aa82b12a150261[m
Merge: 32e05de 1f0ca6f
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Sat Sep 12 20:28:04 2015 -0700

    Merge pull request #3212 from stephentoub/disable_tzinfo_tests_osx
    
    Disable two TimeZoneInfo tests failing on OS X

[33mcommit 09c31449e82f89bcbe85bd21662692ba43ed6900[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Sep 12 21:41:30 2015 -0400

    Disable two FileSystemWatcher tests failing on OS X

[33mcommit 802147cff624781beea019a57875f6a9970286e3[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Sep 12 21:31:27 2015 -0400

    Disable failing IPV6 parsing test on OS X

[33mcommit 1f0ca6f15f3255a9d3b9d1a41e22aaadeef764fa[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Sep 12 20:57:21 2015 -0400

    Disable two TimeZoneInfo tests failing on OS X

[33mcommit 32e05de8c69c65629d5ed08f43307fd0cff44aee[m
Merge: c8fe5f5 0320529
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Sep 12 20:48:32 2015 -0400

    Merge pull request #3210 from stephentoub/reduce_fstest_time
    
    Reduce FileSystem inner loop test time from 90 to 5 seconds

[33mcommit c8fe5f51f97c9173825c99dca0186df6f5bc4a92[m
Merge: 1cacd34 6b344e8
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Sat Sep 12 17:11:38 2015 -0700

    Merge pull request #3209 from bartonjs/PfxOrderedTests
    
    Make PFX import tests be order-independent for now

[33mcommit 03205295cc6834b1fdcd8b7ba364515f4ec7164a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Sep 12 19:46:49 2015 -0400

    Reduce FileSystem inner loop test time from 90 to 5 seconds
    
    Three tests were consuming the vast majority of the time:
    - DirectoryLongerThanMaxLongPathWithExtendedSyntax_ThrowsPathTooLongException. It was taking 70 seconds on my machine.  I moved it to outer loop.
    - ManyConcurrentWriteAsyncs.  It uses a MemberData that results in it executing ~40 times, for a combined time of around 7 seconds on my machine.  I made one combination run in inner loop and moved the rest to outer.
    - CopyToAsyncBetweenFileStreams.  Same MemberData, same solution.

[33mcommit 1cacd34393deabb4d7b93a80ea0093195431d325[m
Merge: c171a83 b753cdb
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Sat Sep 12 16:35:17 2015 -0700

    Merge pull request #3208 from nguerrera/fix-getpwuidr-error-handling
    
    Fix incorrect error handling when calling getpwuid_r shim

[33mcommit 6b344e87e6de78a7ffd19a0689600c52abba64b5[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Sat Sep 12 16:11:31 2015 -0700

    Make PFX import tests be order-independent for now

[33mcommit c171a83dfe9775b06a83d542b2ce73e7d295ffe0[m
Merge: 4faa159 df0c238
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Sep 12 19:05:22 2015 -0400

    Merge pull request #3201 from stephentoub/fix_envvar_test_osx
    
    Fix Path.GetTempPath() test on OS X

[33mcommit b753cdb8fb82d6e85d8cd300d0730ef511f9b1b7[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Sat Sep 12 14:33:44 2015 -0700

    Fix incorrect error handling when calling getpwuid_r shim
    
    getpwuid_r as well as its shim return errors rather than set them via
    errno. Fix the single managed caller to interpret the value correctly.
    
    Also, converge on the pattern established by readdir_r shim to map the
    extra out **param (which can only be null or equal to input *param) to
    a negative return value instead.
    
    Finally, adopt a coding pattern in both of these shims that should
    make it easier to see the 3 cases (success, not-found/end-of-stream,
    and failure) and more obvious that the return value is an error code
    and not the typical syscall 0/-1 + errno.

[33mcommit 4faa159519141808ef27b7929b127b24bbbc1ed3[m
Merge: 028b024 7b341a2
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Sat Sep 12 12:22:57 2015 -0700

    Merge pull request #3203 from stephentoub/disable_failing_tests_1
    
    Disable some tests failing on OS X

[33mcommit 028b024d8e9e43364fc610aa8283ce4838b3e28d[m
Merge: 41bcfe7 2d02865
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Sat Sep 12 12:21:19 2015 -0700

    Merge pull request #3204 from stephentoub/fix_bool_marshaling
    
    Fix several Process shim function to return int32_t instead of bool

[33mcommit 41bcfe7b7ede205acba437611c685c2fea999e51[m
Merge: b3afa8b 30df638
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Sep 12 15:02:22 2015 -0400

    Merge pull request #3200 from stephentoub/ecdsa_invalid_check
    
    Add missing IsInvalid check to ECDsaOpenSsl's GenerateKey

[33mcommit 2d028656971a4a2d456af0dd89fce260b6fe64b4[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Sep 12 13:53:28 2015 -0400

    Fix several shim function to return int32_t instead of bool
    
    Several of the process shim functions are returning the C++ bool type instead of int32_t.  This is causing values to be marshaled incorrectly to the consuming managed code and causing some tests to fail on OS X.

[33mcommit 7b341a298f350cfefe7a84c8b1d1fe722040e819[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Sep 12 13:40:53 2015 -0400

    Disable some tests failing on OS X
    
    All marked against active issues.

[33mcommit df0c238ae2b9c94924e9864a3177acf3b9b91400[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Sep 12 09:21:24 2015 -0700

    Fix Path.GetTempPath() test on OS X
    
    A Path test is assuming that the original temp path will match the temp path created by removing the TMPDIR environment variable.  That's typically the case on Linux, where TMPDIR is usually "/tmp", but on OS X TMPDIR is often initialized to something like "/var/folders/51/kchrq4qs1cd5...", such that after setting TMPDIR to null, the resulting "/tmp/" path no longer matches.
    
    This commit just fixes the test to reset the TMPDIR environment variable back to what it was at the beginning of the test, rather than to null, and then adds a specific test case to validate that deleting TMPDIR results in "/tmp" as the new temp path.

[33mcommit 30df6381873549c35bf44ea7c8620a026edaa091[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Sep 12 08:42:40 2015 -0700

    Add missing IsInvalid check to ECDsaOpenSsl's GenerateKey
    
    After calling EC_KEY_new_by_curve_name, we're currently checking whether the returned SafeHandle is null, but not whether it's Invalid, and if EC_KEY_new_by_curve_name fails, it'll return a null pointer, which will be stored into a non-null SafeHandle instance.  This means that if EC_KEY_new_by_curve_name fails, we then subsequently get a "passed a null parameter" error from the subsequent call to EC_KEY_generate_key, rather than an exception for the original error from EC_KEY_new_by_curve_name.
    
    This commit just adds the appropriate check.

[33mcommit b3afa8bcba9ee904666f1ab7c7c89137c5f944f2[m
Merge: 3ecde81 281d947
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Sep 12 07:15:22 2015 -0500

    Merge pull request #3198 from stephentoub/readasync_osx_hang
    
    Fix cancelable ReadAsync hang on OS X

[33mcommit 3ecde81bc789fb165d4eb8233ab08bc40dd88692[m
Merge: 73de6e6 a26a685
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Sep 11 20:13:49 2015 -0700

    Merge pull request #3161 from DmitryKakurin/master
    
    Avoid calling Array.Clear on the entire _array when Queue is already empty.

[33mcommit 73de6e6bd28dcad0f2cb4f01989744cad67f3bc8[m
Merge: 81263d7 bfa2c23
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Sep 11 20:12:40 2015 -0700

    Merge pull request #3194 from akoeplinger/patch-1
    
    System.Console: fix casing of file on disk

[33mcommit 281d947d6d5864126ef12f9e01bbc84a68533c09[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Sep 11 20:10:52 2015 -0700

    Fix cancelable ReadAsync hang on OS X
    
    One of our System.IO.Pipes tests is frequently hanging on OS X. It appears that OS X has a race condition bug in its poll implementation when a FIFO is involved and there's a write to the FIFO of larger than the internal buffer size.  In such cases, even though there's an outstanding write on the FIFO, a poll for data available on the FIFO doesn't notice.
    
    To address this, instead of passing an infinite timeout to poll, I've added a retry loop with a backoff timeout, to ensure we'll at least eventually see the write while not adding too much overhead for platforms that handle this correctly.

[33mcommit 81263d7b155f225c4dac61e91bb1d0bdddba9de1[m
Merge: d9022ec 12c0d73
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Sep 11 17:45:28 2015 -0700

    Merge pull request #3193 from stephentoub/fix_fs_osx_time_tests
    
    Fix failing FileSystem tests on OS X

[33mcommit a26a68565257c78924bc5392e5bc3d10b3b59178[m
Author: Dmitry Kakurin <dmitryk@microsoft.com>
Date:   Fri Sep 11 15:38:58 2015 -0700

    Added Unit Test for Queue.Clear method for empty Queue.

[33mcommit bfa2c238b80ea3fddfcff5c7eaa6397f684e76fc[m
Author: Alexander Köplinger <alex.koeplinger@outlook.com>
Date:   Sat Sep 12 00:11:28 2015 +0200

    System.Console: fix casing of file on disk
    
    It had a different casing in the csproj than on disk which caused a build break on Linux.
    The version in the csproj matches the naming convention so renaming the file.

[33mcommit e7844b5b53e50b9eb46f62cc96322cc92d51eda7[m
Author: Dmitry Kakurin <dmitryk@microsoft.com>
Date:   Thu Sep 10 13:03:28 2015 -0700

    Avoid calling Array.Clear on the entire _array when Queue is already empty.
    Now for non-generic Queue.

[33mcommit d9022ec0f703005725e2ae40e7b9f3a788300880[m
Merge: 15547a1 aed4a23
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Fri Sep 11 15:04:56 2015 -0700

    Merge pull request #3142 from sokket/pal
    
    Moving more Unix\libc function calls over to the PAL layer

[33mcommit 12c0d738a0c234b707b0c99e40b3cb760df8096e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Sep 11 13:41:11 2015 -0700

    Fix failing FileSystem tests on OS X
    
    Several FileSystem tests are failing on OS X because the tests are expecting that file/directory creation time can be changed on Unix.  Fixing the tests.

[33mcommit 15547a111f79529d83079741ad0e3e370aebc515[m
Merge: 60a3854 a4184e4
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Sep 11 14:46:49 2015 -0700

    Merge pull request #3191 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit aed4a23f36ace07e7f5f33bf5a28808fd215fea6[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Wed Sep 9 11:22:23 2015 -0700

    Moving more Unix\libc function calls over to the PAL layer
    along with fixing up the Interop calls for the switched
    functions.

[33mcommit a4184e4b70369f8cb0fee145fc5af66e89032728[m
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Sep 11 11:35:06 2015 -0700

    A parallel development change added another parameter to HMACCommon, which broke the IncrementalHash change.
    
    Add support for passing in -1 for the new blockSize parameter to disable truncated key computation, have IncrementalHash pass -1.  (It doesn't need the truncated key computation because it won't output the key value).
    
    [tfs-changeset: 1524388]

[33mcommit 5361c0f77facc1f113bee68bd4b184cad0fdd7be[m
Author: Jan Henke <Jan.Henke@taujhe.de>
Date:   Fri Sep 11 11:01:59 2015 +0200

    Merge src/Native/build.sh into top level build.sh
    
    If no argument is passed, defaults to build both the managed and the
    native code. The src/Native/build.sh is kept to not break CI, it simply
    calls the top level build.sh to call the native part. Closes #3155

[33mcommit 60a3854c74318c86cf46c6c8b2b0308776411a8c[m
Merge: b137aed 889d024
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Fri Sep 11 09:08:27 2015 -0700

    Merge pull request #3176 from Maxwe11/fix-#3154
    
    Fix System.IO.FileSystem.Tests

[33mcommit b137aed87536b7c2bb677f29ea996f534ab35a95[m
Merge: 077d05e e2a5caa
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Fri Sep 11 08:59:14 2015 -0700

    Merge pull request #3170 from Sridhar-MS/coreclr-code-coverage
    
    Add options to run-test.sh to generate code coverage reports for coreclr

[33mcommit 077d05e7290fa15e91a3f30e13dc0b5633b12192[m
Merge: 69591c8 372b7d3
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Sep 11 08:32:07 2015 -0700

    Merge pull request #3174 from Maxwe11/process-tests-cleanup
    
    Fix System.Diagnostics.Process.Tests

[33mcommit 889d024aca35e0c98500f5b34e6db1dc9071edf7[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Fri Sep 11 12:26:42 2015 +0300

    Fix System.IO.FileSystem.Tests
    System.IO.FileSystem.Tests leaves behind temp directories in %TMP%.
    This commit fixes this issue.

[33mcommit 69591c8117664b2c41ce09a1942406437fea14fc[m
Merge: ba3b138 5f32b69
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Fri Sep 11 07:51:04 2015 -0700

    Merge pull request #3181 from jkotas/developer-guide-link
    
    Fix link to developer guide

[33mcommit 49cdb6f1e82d867d98f1d888bb369a1f2711497d[m
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Sep 11 07:34:35 2015 -0700

    Add support for computing an incremental hash.
    
    The IncrementalHash objects are multiple-use, stateful objects.  This is broken out from the HashAlgorithm class because the mix of stateful and stateless-looking methods on the full HashAlgorithm type can lead to some unexpected behaviors.  Now the idempotent and stateful are on separate objects with separate intentions and don't intermix.
    
    [tfs-changeset: 1524349]

[33mcommit 5f32b6907082f7423f74892e1850aec7a58cf70b[m
Author: Jan Kotas <jkotas@microsoft.com>
Date:   Fri Sep 11 06:49:24 2015 -0700

    Fix link to developer guide

[33mcommit 372b7d324fa5541a0f2166668d6f53f92b7baec2[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Fri Sep 11 11:07:48 2015 +0300

    Fix System.Diagnostics.Process.Tests leaves behind temp directories

[33mcommit b67ebf2897c7a23c4ae51f6ac7a5894493b6697f[m
Author: Koundinya Veluri <kouvel@microsoft.com>
Date:   Thu Sep 3 22:47:11 2015 -0700

    Add AssemblyExtensions.TryGetRawMetadata to the System.Reflection.Metadata namespace.
    
    This patch adds the new API to the System.Runtime.Loader reference assembly. Tests will be added separately, once the new API is
    published and can be consumed.
    
    Part of dotnet/corefx#2768

[33mcommit ba3b138bf1a15f308f63848345094917cf9d6245[m
Merge: 79fb27a 2fb88ce
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 10 21:24:54 2015 -0700

    Merge pull request #3169 from stephentoub/pipes_osx
    
    Fix two failing System.IO.Pipes.Tests on OS X

[33mcommit 79fb27a70c39a6e1403d036bf35f1c324702129c[m
Merge: 1c35165 7c36331
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Sep 10 19:32:36 2015 -0700

    Merge pull request #3171 from stephentoub/fix_emu_test
    
    Fix System.Console test failing on OS X

[33mcommit 1c35165c3e9cae216eb221b907f3c19df6c07791[m
Merge: ca62fa2 e001833
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Sep 10 19:10:36 2015 -0700

    Merge pull request #3143 from nguerrera/shim-work
    
    Shim memory map functions

[33mcommit 7c36331d4c57ac213f20c30e17deb49616e397bb[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Sep 10 18:33:10 2015 -0700

    Fix System.Console test failing on OS X
    
    The strings used in the EmuTermInfoDoesntBreakParser test are missing semicolons at the end, so they fail when compared against the strings in the emu file, which has semicolons at the end.

[33mcommit e001833c95b622bcdcd66f3e4a56cd83e648f849[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Sep 10 18:02:03 2015 -0700

    Shim memory map functions

[33mcommit aef3316fdf7e8bb12487f0f417075b5a154cc9be[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Fri Sep 4 14:33:59 2015 -0700

    Replace stdint.h usage with new pal_types.h indirection

[33mcommit 3b500faff0e1a67478f4b8ae263dfd83b157760c[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Fri Sep 4 13:52:16 2015 -0700

    Move PAL config and utilities to common folder

[33mcommit 2fb88ce7cc5de7b87af00f25ebbe770819d3f5d2[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Sep 10 17:30:50 2015 -0700

    Fix two failing System.IO.Pipes.Tests on OS X
    
    The tests were using PipeStream's BufferSize, which throws PlatformNotSupported on OS X.

[33mcommit ca62fa2c41cadd39a68dc56d1edf8dff335b39b4[m
Merge: 543a6ff bc67228
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 10 17:25:06 2015 -0700

    Merge pull request #3167 from stephentoub/fix_outerloop_linq
    
    Disable three very intensive LINQ outerloop tests

[33mcommit 543a6ffb8d60d43c70d3e60e90d1bbfeea36bf33[m
Merge: 0e9b1ca 0de7dff
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Sep 10 16:41:27 2015 -0700

    Merge pull request #3148 from VSadov/OvfBug
    
    Adding tests for Checked binary expressions and fixing support in int…

[33mcommit bc67228a2f62b350e32dbeacb92ac614eff1a9d7[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Sep 10 16:04:50 2015 -0700

    Disable three very intensive LINQ outerloop tests
    
    Three OuterLoop tests are taking so long and consuming so much memory that they're causing our OuterLoop CI runs to abort.  Disabling them.

[33mcommit e2a5caa646b7acb8d2ce447cf8c41a65b4c626e6[m
Author: Sridhar Periyasamy <sridhper@microsoft.com>
Date:   Thu Sep 10 15:30:34 2015 -0700

    Add options to run-test.sh to generate code coverage reports for coreclr
    
    Changes in run-test.sh to download the unix code-coverage report generator tools from myget package 'unix-code-coverage-tools.1.0.0.nupkg' and use them to generate html style graphic code-coverage reports for coreclr.

[33mcommit 0de7dffe67ae34ed83eb8aa595e5837e07484e37[m
Author: vsadov <vsadov@microsoft.com>
Date:   Wed Sep 9 20:11:33 2015 -0700

    Adding tests for Checked binary expressions and fixing support in interpreter
    
    Fixes #3141

[33mcommit 0e9b1ca71fdc5024410ece974c0eab8caf18b23a[m
Merge: d545f5f 167f5f9
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Sep 10 14:28:23 2015 -0700

    Merge pull request #3157 from mmitche/find-for
    
    Change to find syntax instead of globstar

[33mcommit dce61dec8f9a1fa72630b0b986176a5d98f83435[m
Author: Axel Heer <axel@heer.eu>
Date:   Thu Sep 10 23:25:06 2015 +0200

    Improve 64-bit GCD

[33mcommit d545f5f8671ac2007bf0311edf689be930994145[m
Merge: 282423c 1641b0b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 10 14:24:38 2015 -0700

    Merge pull request #3158 from stephentoub/queue_empty_clear_test
    
    Add Queue.Clear test for when Queue is empty

[33mcommit 282423c36f30359a36c6c4fb5461a7c405569e61[m
Merge: fbc85bb 2f17d1f
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Sep 10 13:30:09 2015 -0700

    Merge pull request #3160 from VSadov/outBug
    
    ScriptingRuntimeHelpers.True and False should not be private.

[33mcommit 2f17d1f2c3ad0a4df502d561ee6ea411f5af6c7e[m
Author: vsadov <vsadov@microsoft.com>
Date:   Thu Sep 10 12:26:03 2015 -0700

    ScriptingRuntimeHelpers.True and False should not be private.
    
    There are many places where they are used internally and that breaks the build

[33mcommit 1641b0b95dad9b9764c0342d9ea804a484985b64[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Sep 10 11:27:23 2015 -0700

    Add Queue.Clear test for when Queue is empty
    
    A recent change added a check to Queue.Clear that special-cases when the queue is already empty.  Turns out we didn't have any dedicated tests for that case.  Adding one.

[33mcommit fbc85bb552fdd98bc75232bd40659e18ce5e6543[m
Merge: fdd7cfd a16aa60
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 10 11:18:16 2015 -0700

    Merge pull request #3111 from Maxwe11/#3029
    
    Remove commented out tests in S.Composition.Convention.Tests

[33mcommit fdd7cfdf13ec91e91483f436f35357e0bbbdfdd1[m
Merge: 63d880b 77b4ff3
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Sep 10 11:17:38 2015 -0700

    Merge pull request #3152 from janhenke/freebsd-include
    
    Add /usr/local/include to include path for native shims.

[33mcommit 63d880b39d7d2596291afb2e894eb16ae9a18e19[m
Merge: e73a054 1a29992
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 10 11:16:06 2015 -0700

    Merge pull request #3130 from DmitryKakurin/master
    
    Avoid calling Array.Clear on the entire _array when Queue is already empty

[33mcommit 167f5f9e9fbe845fb904dfe64932a1388a2da250[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Sep 10 11:15:52 2015 -0700

    Change to find syntax instead of globstar
    
    OSX doesn't have bash version 4, so globstar doesn't work.  Use find -regex instead.

[33mcommit e73a0548b754b3a7566689718dcc1a70f7e845d9[m
Merge: 6248cc6 9f628cf
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 10 10:24:09 2015 -0700

    Merge pull request #3138 from stephentoub/avoid_blocking_libcurl_read
    
    Avoid blocking CurlHandler read callback

[33mcommit 77b4ff370212c0848cf91402b24571250a1001f0[m
Author: Jan Henke <Jan.Henke@taujhe.de>
Date:   Thu Sep 10 11:08:52 2015 +0200

    Add /usr/local/include to include path for native shims.
    
    CMake does not add the /usr/local/include to the compiler include search
    paths by default. This breaks the build on FreeBSD, where all libraries
    are installed in /usr/local instead of /usr. So add /usr/local/include
    as include path for all shims.

[33mcommit 6248cc648d4df29e1cc99e0728245f4e9e0043ed[m
Merge: b67a147 4f553a8
Author: VSadov <vsadov@microsoft.com>
Date:   Thu Sep 10 09:54:07 2015 -0700

    Merge pull request #3146 from VSadov/outBug
    
    Fix passing byref of enum variables initialized to default values.

[33mcommit 9f628cfa67e6c481b76c03aa8c9c50472df1863d[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Sep 10 08:40:32 2015 -0700

    Address PR feedback

[33mcommit 4f553a8595d5bf07afb823b8b033b787760b6d57[m
Author: vsadov <vsadov@microsoft.com>
Date:   Thu Sep 10 07:00:33 2015 -0700

    CR feedback

[33mcommit 541ba31b4db0b64920477857f3197a6a61241625[m
Author: vsadov <vsadov@microsoft.com>
Date:   Wed Sep 9 11:03:11 2015 -0700

    Fix passing byref of enum variables initialized to default values.
    
    It came to the type of the default value which was based on the result of GetTypeCode and as such would be underlying value for enums.
    Underlying values would be ok when passing byval so the problem was not noticed.
    
    Fixes #3007

[33mcommit b67a147178828eac249d1816c4d8c72baeb6023c[m
Merge: 7c5f74f 8344870
Author: Matt Ellis <matell@microsoft.com>
Date:   Wed Sep 9 16:30:32 2015 -0700

    Merge pull request #3145 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 7c5f74f41463c06f56bf6311f71e9d4afe1c8c62[m
Merge: 407ea6b 59ce351
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Wed Sep 9 15:19:08 2015 -0700

    Merge pull request #3139 from AtsushiKan/hmackey
    
    Hmackey

[33mcommit 8344870fa62ed996e91b342cad3cda1bb9e9cff4[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Wed Sep 9 15:13:19 2015 -0700

        Convert System.Console, and Microsoft.Win32.Primitives, also, small tweaks to System.IO.Compression which has already been converted.
    
        Add property to specify preventing implementation references for packages rather than adding the code to each nuproj file.
    
        There may be an issue with case sensitivity with respect to the PackageTargetRuntime so make all values lower case so that it is easier to "guess" casing and be consistent.
    
    [tfs-changeset: 1523568]

[33mcommit 407ea6bac4200608d86c91b6e32b925d6a3580e0[m
Merge: c011da1 a75ec02
Author: David Shulman <david.shulman@microsoft.com>
Date:   Wed Sep 9 11:52:42 2015 -0700

    Merge pull request #3096 from davidsh/winhttphandler_leaks
    
    Improve WinHttpHandler and SafeWinHttpHandle reference counting logic

[33mcommit f9d1b3c47d4ff46afaa44fdb0eede63712e92164[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Sep 9 09:55:29 2015 -0700

    Add tests for different request streams

[33mcommit cc1f2fe2f5743918960e72ec5e13c77fa7bca61b[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Sep 9 10:00:01 2015 -0700

    Ensure TransferEncodingChunked is set to true for non-seekable request streams

[33mcommit fbb6664ab924d82b536389822be1fe4c974f9f3c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Sep 9 09:54:42 2015 -0700

    Avoid blocking CurlHandler in read callback
    
    PR #3105 addressed the issue we were facing with libcurl and the write callback used when libcurl has response body data available.  We were blocking libcurl's callback until a reader was available to consume the data, resulting in both significant scalability issues as well as the potential for easy deadlock.  This was fixed by making the whole operation async via libcurl's ability to pause connections.
    
    The same issue exists for libcurl's read callback, used by libcurl to read data from the request stream to send as part of the request.  The issue here isn't as impactful as on the write side, because a) a common case has no request stream or has a MemoryStream that serves up its data immediately, and b) other streams (e.g. FileStream) typically serve their data quickly even if blocking is involved and don't interact with the HttpClient in a way that could lead to deadlock.  However, it's still an issue, and it's still possible to construct cases where deadlock is possible, e.g. if the output stream of one request is used as the input stream of another request associated with the same libcurl multi handle.
    
    This commit addresses the read callback case by relying on the same pause mechanism used for the write callback.  When libcurl requests data, if the source is a memory stream, we just do the read and hand back the data. Otherwise, we issue a ReadAsync on the stream.  If the operation completes immediately, we synchronously hand the data back to libcurl, storing any extra beyond what libcurl asked for.  If the operation didn't complete immediately, we store it for later, and pause the connection, requesting an unpause when the read operation completes.  Subsequent read requests from libcurl first try to be satisfied from any previous ReadAsync with
    data remaining.
    
    As part of this, I also removed the pause state tracking I'd previously added.  In my previous PR as part of adding support for pausing, I added a field to EasyRequest to attempt to mirror the current paused state as known by libcurl.  This was done to try to avoid requesting unpausing in cases where we'd like to be unpaused but have already requested it. However, this appears to have been premature optimization, as the case is relatively rare, the overheads relatively low for processing the extra request, and it causes additional headaches once we're able to pause sending/receiving individually.

[33mcommit 59ce351e554fc4e0ceca4ff5b29f84db695b4cb8[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Wed Sep 9 09:53:31 2015 -0700

    Fix Issue #1774
    
    HMAC::get_Key returns the original key passed in, not the
    actual key used (which will differ if the original key
    exceeded a certain length. See Rfc2104 section 2).

[33mcommit 36f6ba3db36cbab481920f63bed3b695d183f766[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Wed Sep 9 09:52:06 2015 -0700

    Rename _hashProvider to _hMacProvider.

[33mcommit c011da1273aeefcdf8c3b8119347f91859f20744[m
Merge: 7f51556 594ee48
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Wed Sep 9 13:15:21 2015 +0530

    Merge pull request #3131 from kapilash/post-content-type-fix
    
    Fix for #3124. CurlHandler sets invalid content-type for POST requests

[33mcommit 594ee48d91fbe827fb3e3cca05ef1cba8466e152[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Wed Sep 9 10:24:24 2015 +0530

    Fix for #3124. CurlHandler sets invalid content-type for POST requests
    
    libcurl defaults to a Content-Type:application/x-www-form-urlencoded for
    Post operations. This default behavior is inconsistent with dotnet API.
    Current PR fixes this issue by overriding the default value.
    Also included is the test that was mentioned in #3124

[33mcommit 7f51556d324b5bfdca886be38f8b3a0db70c571a[m
Merge: 8693637 1b8334f
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Sep 8 17:48:09 2015 -0700

    Merge pull request #3129 from ellismg/fix-unix-build
    
    Fix build.sh build

[33mcommit 1a299925ee21ef171fa0d598fa099e136325e581[m
Author: Dmitry Kakurin <dmitryk@microsoft.com>
Date:   Tue Sep 8 17:20:02 2015 -0700

    Avoid calling Array.Clear on the entire _array when Queue is already empty.

[33mcommit 86936378650b3b7e78cc822aecaa6bf7ec01cf43[m
Merge: b17b974 3152fb6
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Sep 8 16:31:17 2015 -0700

    Merge pull request #3110 from stephentoub/console_ctrlc_test
    
    Remove problematic ctrl-C System.Console test

[33mcommit b17b974634c55cbeff6290c5ca7ec10ddb4f4d13[m
Merge: 99adbe1 d000c7c
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Sep 8 16:27:04 2015 -0700

    Merge pull request #3120 from stephentoub/fix_contract_asserts
    
    Replace several Contract.Asserts with Debug.Asserts

[33mcommit 99adbe13a2f0d159edb01e523b3ce7d18d10536a[m
Merge: bea5c49 8bda671
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Sep 8 16:26:49 2015 -0700

    Merge pull request #3123 from eerhardt/master
    
    Enabling tests that were disabled for issue #2821.

[33mcommit 1b8334fc397eef0ab0d811caff22f2eb731bfdbd[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Tue Sep 8 14:56:53 2015 -0700

    Fix build.sh build
    
    A while back an update to build tools broke building via build.sh on
    Linux and OSX. Move to a newer version of build tools which addresses
    this issue and fix up a couple of build breaks that have made their way
    in since then.

[33mcommit bea5c4940b4bef7c085ba60073308e3fcc5938d1[m
Merge: 36c189d cefb66f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 8 13:27:38 2015 -0700

    Merge pull request #3122 from stephentoub/threading_tests_namespace
    
    Rename Threading tests "Tests" namespace to "System.Threading.Tests"

[33mcommit 36c189d4ce8624ad317d7fa935ca177a44831593[m
Merge: 7448a9d da10cbe
Author: Vance Morrison <vancem@microsoft.com>
Date:   Tue Sep 8 13:04:34 2015 -0700

    Merge pull request #3127 from vancem/master
    
    We are having issues with the stress test failing, so make it less stressful for now

[33mcommit 7448a9d8cb17e806c4e54aa4173250b35ae1d11d[m
Merge: 3a6997a 32296af
Author: Vance Morrison <vancem@microsoft.com>
Date:   Tue Sep 8 12:54:53 2015 -0700

    Merge pull request #3108 from vancem/master
    
    Added volatile, made tests more stressful in detecting races.

[33mcommit da10cbe47c9a4b065c4c1752d637887105715af7[m
Author: Vance Morrison <vancem@microsoft.com>
Date:   Tue Sep 8 12:45:25 2015 -0700

    Make tests less stressful for now again.

[33mcommit 32296af0e3ec26cce60e676bab23d360940dbb72[m
Author: Vance Morrison <vancem@microsoft.com>
Date:   Tue Sep 8 08:28:07 2015 -0700

    Added Assert

[33mcommit cffaa28fddf2df019f023b7c3449ef967d22f169[m
Author: Vance Morrison <vancem@microsoft.com>
Date:   Mon Sep 7 08:12:12 2015 -0700

    Add back in volatile delcarations.    Make tests more stressfull for races.

[33mcommit 3a6997a5faf84137270b5c91a3087f31638af222[m
Merge: 49701f5 60648d8
Author: VSadov <vsadov@microsoft.com>
Date:   Tue Sep 8 10:35:14 2015 -0700

    Merge pull request #3119 from stephentoub/linq_cc
    
    Increase System.Linq line code coverage to 99.5%

[33mcommit 49701f5f87e732709eccd1352d30fd510563c224[m
Merge: f39539d a73f471
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 8 10:05:19 2015 -0700

    Merge pull request #3118 from stephentoub/fs_enum_unix_tweaks
    
    Two perf tweaks to UnixFileSystem's enumeration iterator

[33mcommit f39539d9e61375e429bfef3974164a580a69f8dc[m
Merge: f41c09d 1616cc5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 8 09:28:30 2015 -0700

    Merge pull request #3121 from stephentoub/delete_enumerable_utils
    
    Delete EnumerableUtils from System.IO.FileSystem.Tests

[33mcommit bbdcca6edd98c0bc30714bf25d64f2b08ff6286e[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Tue Sep 8 16:48:05 2015 +0300

    Convert System.Xml.XDocument.Streaming.Tests to use Xunit

[33mcommit d000c7c9933d1c91d86d861163919f99a5f912b7[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Sep 7 19:41:15 2015 -0400

    Replace several Contract.Asserts with Debug.Asserts
    
    Following corefx guidelines to standardize on Debug.Assert for debug asserts.

[33mcommit a75ec027daa53114c788464878e2947ae7d5a65e[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Wed Sep 2 16:07:40 2015 -0700

    Improve WinHttpHandler and SafeWinHttpHandle reference counting logic
    
    This PR mainly addresses "handle leaks" #2963, #2762, #2793. In investigating the leaks, I discovered that our use of the SafeHandle pattern was not quite right. Native Windows WinHTTP handles wrapped by SafeHandle need additional lifetime management protection to preserve parent-child relationships. Closing the parent handle too early will invalidate the child handle. So, added a SetParentHandle() method to SafeWinHttpHandle to protect against this. This also simplified the passing of handles to the WinHttpResponseStream class.
    
    After adding leak detection, I discovered a race condition caused by an CancellationToken.Register that should not exist in WinHttpHandler.
    This inadvertently provided a way for the awaited SendAsync() task to return back to the caller even though the StartRequest() method is still
    running.
    
    Added unit tests to validate the behavior assumptions and to track leaks in the WinHttpHandler logic.
    
    This change does not affect the SafeWinHttpHandleWithCallback class that is used by System.Net.WebSocket.Client. But that class is incorrectly using the SafeHandle pattern w.r.t. Dispose() and I will be fixing that in a later PR.

[33mcommit 8bda671a8f2c0c49fd5872da8f7e52c40d133d1a[m
Author: Eric Erhardt <eerhardt@microsoft.com>
Date:   Tue Sep 8 09:21:13 2015 -0500

    Enabling tests that were disabled for issue #2821.

[33mcommit a73f471abdb054b9dad1dd3a998dd0fd16dd32d0[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Sep 7 22:46:28 2015 -0400

    Two perf tweaks to UnixFileSystem's enumeration iterator
    
    1. When enumerating directories recursively, we were computing the Path.Combine for the user path twice for each directory: once as part of pushing the string onto the exploration stack, and once as part of yielding it.  This fixes it to only ever compute it once per directory.
    
    2. Due to https://github.com/dotnet/roslyn/issues/5062, a field was being added to the iterator object for isDir.  I changed the switch to an if/elseif/else to shrink the size of the object.  I also rearranged the order in which we push the directory onto the evaluation stack and yield the string in order to allow userPath not to be lifted, either.

[33mcommit cefb66f093f2e4429ba323ef4098ce9dd790c382[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Sep 7 18:59:50 2015 -0400

    Rename Threading tests "Tests" namespace to "System.Threading.Tests"
    
    A bunch of the tests in System.Threading.Tests were in a "Tests" namespace rather than "System.Threading.Tests".  Fixed all those. There are still several test classes that don't have a namespace.

[33mcommit aeb988c6da579eefab9b2f4f784f98fe124e9562[m
Author: James Ko <kojames8111@gmail.com>
Date:   Mon Sep 7 18:56:10 2015 -0400

    Remove redundant checks in RegistryKey

[33mcommit 1616cc5e5328eec964874f0afe683e9292789cf7[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Sep 7 18:47:52 2015 -0400

    Delete EnumerableUtils from System.IO.FileSystem.Tests
    
    Dead code.
    
    It also contained the only types in the test assembly that were in a namespace other than System.IO.FileSystem.Tests (there are still types that have no namespace).

[33mcommit 60648d854144d40a77d18f82ea2ebbd74a798572[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Sep 7 17:25:42 2015 -0400

    Increase System.Linq line code coverage to 99.5%
    
    This commit increases LINQ line code coverage as much as is possible given the current code.
    
    New tests:
    - There's an existing legacy test that exercises the non-generic IEnumerable.GetEnumerator for IGrouping`3.  I've added the same test but for IGrouping`4.
    - IGrouping inherits IList/ICollection, and a bunch of those interface members weren't being exercised.  Added tests for all of them.
    - Last and LastOrDefault with predicates weren't being tested with non-IList sources.  Added tests now that do.
    - ThenByDescending didn't have a test for a custom comparer.  Added one.
    - System.Linq.dll contains some debug view types used by Visual Studio when showing enumerables in the watch window.  I've added tests for those types.
    
    The only lines remaining uncovered are:
    - A function from EnumerableHelpers that's not used by this assembly
    - An if branch in EnumerableHelpers.ToArray for when trying to allocate an array larger than the maximum array size
    - Code in ```Set<T>``` that depends on Add being used after Remove, which never happens in LINQ's code currently

[33mcommit ab2e0c3ca02c44205da2ee26298c8fde9222ec73[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Sep 7 17:17:53 2015 -0400

    Remove dead code in System.Linq

[33mcommit f41c09dbb93723d62787e5b3973cd3fc8666fec8[m
Merge: e04b007 7411902
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Sep 7 13:56:52 2015 -0400

    Merge pull request #3105 from stephentoub/non_blocking_libcurl_callback
    
    Avoid blocking CurlHandler write callback

[33mcommit a16aa605de93321238e14f2ad5d19774e73b98f8[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Mon Sep 7 20:28:25 2015 +0300

    Remove commented out tests in S.Composition.Convention.Tests
    Since they are depend on types which not present in .NET Core:
    - CompositionContainer
    - RegistrationBuilder
    - TypeCatalog

[33mcommit 3152fb6fc69ef2d9e3b0ae4c996fba7e8a664da8[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Sep 7 13:02:32 2015 -0400

    Comment out ctrl-C System.Console test
    
    Our test for ctrl-C handling on Unix generally works fine, but it causes problems when run in xunit, which has its own ctrl-C handler that stops running tests. Since the test doesn't make sense for now but we might want something like it later, I'm commenting it out (added a comment to the code as to why it's commented out) rather than marking it as [ActiveIssue] or deleting it.

[33mcommit e04b007e0a487a7c16c7ae6433533d2e99c706c7[m
Merge: 5c8e7cf c13f910
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Sep 7 12:33:01 2015 -0400

    Merge pull request #3109 from bartonjs/DisableFailingTests
    
    Disable intermittent ExportWithPrivateKey test

[33mcommit 7411902301fa9ee6528629c9a669bca9eea2026d[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Sep 7 12:10:06 2015 -0400

    Added EasyRequest ID and MultiAgent worker ID to verbose tracing
    
    When multiple HttpClients are being used, and/or when multiple requests are being issued, this makes it possible to correlate the traced messages.

[33mcommit 7ee7c7100ab70776546e78b2c84ef14519c4ffc5[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Sep 7 08:34:31 2015 -0400

    Address PR feedback
    
    - Changed properties on EasyRequest to be fields
    - Changed CurlResponseStream to wrap an EasyRequest rather than a CurlResponseMessage
    - Removed _position field that was only used for verbose tracing
    - Added a few more VerboseTrace calls
    - Changed _pendingReadRequest = null to ClearPendingReadRequest (not necessary, but good for consistency)
    - Added another couple Debug.Asserts

[33mcommit 308efaba2833e5e146319f74a2281e12ef3e5519[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Sep 3 22:55:58 2015 -0400

    Avoid blocking CurlHandler write callback
    
    When receiving the body of an HTTP response, libcurl provides the data
    received via a callback that's invoked synchronously from the thread
    pumping libcurl's processing.  This callback can't return until it's
    handed off all of the available data, and thus the current implementation
    of CurlHandler blocks that thread until a reader has consumed the data.
    This is both expensive and dangerous.  It's expensive because we end up
    blocking a thread until some reader comes along, and it's dangerous
    because this can easily lead to deadlock.  A libcurl multi handle may be
    used by only one thread at a time, which means that if the handle is being
    used by a thread while blocked on the write callback, no other thread can
    access the multi handle, which means no other callbacks for other
    concurrent requests can be invoked.  If multiple operations were queued,
    and then the data for them arrived in an order that didn't exactly match
    the order of readers consuming the data, deadlock would ensue.
    
    This change makes it so that we no longer block the callback, taking
    advantage of a pausing mechanism libcurl provides that allows one to pause
    a connection until it's needed.
    
    I rewrote the CurlResponseStream to manage this.  Now when the callback
    has data to write, it attempts to transfer it to the stream.  If there's a
    reader already waiting for the data (represented by a task stored on the
    stream), the callback simply transfers its data to the reader.  If the
    callback has too much data than would fit in the reader, the remaining
    data is buffered on the stream.  If instead the callback finds that either
    there isn't a waiting task or that there's already some remaining data
    buffered from a previous callback, it instead pauses the connection, such
    that no more callbacks will be invoked until we unpause.  From the reader
    side, a reader who tries to read data from the stream can pull data from
    the remaining buffer if there is any, or can register a task with the
    stream that will be filled with data at some point when callback has data
    available.
    
    As part of debugging some issues with this change, I added a verbose
    tracing mechanism that's enabled by compiling the library with the
    CURLHANDLER_VERBOSE constant (the same that we use for enabling libcurl's
    verbose diagnostic output).  I left the tracing in as I found it valuable
    in diagnosing issues with the library, but we can remove it later if
    desired.
    
    I also added a test that deadlocks before the change and that completes
    successfully after.

[33mcommit c13f9100e1659cc9c8b48025f97605e01878b33a[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Sep 7 08:31:16 2015 -0700

    Disable intermittent ExportWithPrivateKey test

[33mcommit 5c8e7cfbc27cf4bed19b2dd4fe025cea12d47492[m
Merge: 637e1b6 853100e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Sep 7 09:33:17 2015 -0400

    Merge pull request #3091 from shrutigarg/shgarg3
    
    Enabling Testcases for POST/PUT methods

[33mcommit 853100ed6f051b3af9eeee8b55e16a60a4703d1e[m
Author: Shruti Garg <shgarg@microsoft.com>
Date:   Mon Sep 7 12:40:27 2015 +0530

    Fixing Review comments Post/Put Testcases

[33mcommit de0102e04da0f93572644f9c2ae01d760d61bd32[m
Author: Axel Heer <axel@heer.eu>
Date:   Sat Sep 5 23:50:58 2015 +0200

    Move GCD to BigIntegerCalculator
    
    - In order to consolidate the big integer calculation code, Lehmer's
      algorithm gets some refactoring and a new home within the recently
      added BigIntegerCalculator.
    - The remaining code of BigIntegerBuilder to convert a big integer value
      to a double value moves to BigInteger, where the other conversion code
      lives too.
    - BigIntegerBuilder is finally dead now, it gets dropped.
    - NumericsHelpers contains dead code now, it gets some cleanup.

[33mcommit 637e1b607fc16b95f35b71157274b914046efc7c[m
Merge: cea65f8 dad1283
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Sep 6 10:41:00 2015 -0400

    Merge pull request #3095 from JonHanna/import_join_tests
    
    Fully import legacy Join and GroupJoin tests

[33mcommit dad1283e7b0cb36c0df03a68dae489eac0ff6d76[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Sep 4 16:24:57 2015 +0100

    Fully import legacy Join and GroupJoin tests
    
    Convert Join GroupJoin tests imported in #2874 into a more directly XUnit-ian
    style.
    
    JoinTests.Join9.Test9 was a duplicate of Join8.Test8 and the case its comment
    suggests it was meant to cover was covered by Join6.Test6, so removed.

[33mcommit 0c8525acd02db092de53c2fde7a78dd45f2c27be[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Sat Aug 29 21:47:48 2015 +0300

    Convert System.Xml.XDocument.SDMSample.Tests to use Xunit

[33mcommit cea65f89fd1b9f67855b9339bba059e33c402458[m
Merge: c6f256b 4e0542c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Sep 5 09:52:34 2015 -0400

    Merge pull request #3088 from akoeplinger/fix-compression-test-namespace
    
    System.IO.Compression: use consistent namespace name for tests

[33mcommit c6f256b076c16e07c956f5af2556fad323bdf7d1[m
Merge: bfb3bc6 959ce5b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Sep 5 08:13:58 2015 -0400

    Merge pull request #3102 from stephentoub/start_info_env_test
    
    Fix TestEnvironmentOfChildProcess to set output encoding

[33mcommit bfb3bc685a52e080a9ead2847ed8b7bc50afa092[m
Merge: 661eb19 557c58d
Author: VSadov <vsadov@microsoft.com>
Date:   Fri Sep 4 18:16:32 2015 -0700

    Merge pull request #3097 from JonHanna/short-circuit-on-sequence-equals
    
    Short-circuit on SequenceEqual

[33mcommit 959ce5b89b5b2f31f1d15c9e16eef37827a968bd[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Sep 4 19:42:33 2015 -0400

    Fix TestEnvironmentOfChildProcess to set output encoding
    
    Three issues all conspiring together:
    - On many machines, none of the environment variables would have non-ASCII characters.
    - Some of the Process tests mutate the ambient console encoding on Windows
    - The default standard output encoding on Windows results in Unicode characters getting lost in translation
    
    The net effect of this is that the test would fail randomly.
    
    The fix:
    - Adds an environment variable that includes non-ASCII characters to force the issue
    - Adds an xunit attribute to prevent parallelization of the Process tests
    - Forces the test to use UTF8 for the standard output encoding

[33mcommit 557c58d13e77bf551ab0c98a469dcba284ca00cb[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Sep 4 21:19:16 2015 +0100

    Make SequenceEqual tests do all permutations of ICollection or not.

[33mcommit 4fac2e86560fe63fa1518ca0863a705f0bf470a9[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Sep 4 17:47:33 2015 +0100

    Short-circuit on SequenceEqual
    
    Short-circuit to false on both sequences are ICollection<T> and different Count

[33mcommit 661eb1908cf3a4316e78621cc239270b1a777e78[m
Merge: 5502580 d2aabc5
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Fri Sep 4 07:53:16 2015 -0700

    Merge pull request #3082 from AtsushiKan/asynccrypto
    
    Better CryptoStream async.

[33mcommit d2aabc5dad590792928ffb39546d44aecfc56844[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Fri Sep 4 07:15:46 2015 -0700

    Better CryptoStream async.
    Streams that wrap other streams should make sure their
    own async methods use the underlying stream's async methods.

[33mcommit 55025805d398895c47845d3080182d6bdd82e9fc[m
Merge: 6cd6155 9fe7780
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Sep 4 09:32:05 2015 -0400

    Merge pull request #3094 from JonHanna/typo_fix_enumberable_enumerable
    
    Fix misspellings of enumerable and enumerator.

[33mcommit 6cd615536dfdb31f6443d16125ea6c860f69314a[m
Merge: b2665d1 949684e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Sep 4 08:29:36 2015 -0400

    Merge pull request #3092 from benjamin-hodgson/patch-1
    
    Fix typos in tests for Enumerable.Repeat

[33mcommit 9fe778096f52c58fd82c86c83a6a6cb7c96a4e9c[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Sep 4 13:03:11 2015 +0100

    Fix misspellings of enumerable and enumerator.
    
    Those not fixed by 949684e.

[33mcommit 949684ebcae3e9054519f1e4d655cb60c6995d91[m
Author: Benjamin Hodgson <benjamin.hodgson@huddle.com>
Date:   Fri Sep 4 12:17:19 2015 +0100

    Fix typos in tests for Enumerable.Repeat
    
    It's `enumerable`, not `enumberable` :wink:

[33mcommit 20b14c9e9948310a6f0eb507066411d5e7eab5ce[m
Author: Shruti Garg <shgarg@microsoft.com>
Date:   Fri Sep 4 15:15:57 2015 +0530

    Enabling Testcases for POST/PUT methods

[33mcommit b2665d17e800c828a2050df29d4f4f6dd05e2bfd[m
Merge: c80e416 9c323be
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 3 19:31:21 2015 -0400

    Merge pull request #3073 from stephentoub/fix_etwtest_listener
    
    Fix race condition in TestEventListener

[33mcommit c80e416da03fa14066fa2d978198ed3f3ac06ed9[m
Merge: 5065bfa 1600221
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 3 19:24:00 2015 -0400

    Merge pull request #3087 from mellinoe/buildtools83
    
    Update to buildtools 83

[33mcommit 5065bfa67d96012cf758765a9fc5f5e3be268dc3[m
Merge: 515a67d d2bb418
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 3 19:15:26 2015 -0400

    Merge pull request #3086 from akoeplinger/fix-sr-format
    
    Use SR.Format instead of string.Format

[33mcommit 4e0542c5554a1072495f6785738428c4a1ef7ed7[m
Author: Alexander Köplinger <alex.koeplinger@outlook.com>
Date:   Fri Sep 4 01:05:49 2015 +0200

    System.IO.Compression: use consistent namespace name for tests
    
    As per https://github.com/dotnet/corefx/issues/2898 the convention is $(Namespace of Type under Test).Tests
    Some tests were in .Test, this change renames them to .Tests

[33mcommit 515a67d45e6fa649e28fe83122fff5c45988229e[m
Merge: ae71038 2c0de88
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Sep 3 15:17:02 2015 -0700

    Merge pull request #3084 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 16002211dad4dc88459cd1ff23eca25631287f28[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Sep 3 15:07:17 2015 -0700

    Update to buildtools 83

[33mcommit ae71038788945f43014df5b6fb476e21e667faef[m
Merge: 60aecb5 6479bfc
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Sep 3 15:11:22 2015 -0700

    Merge pull request #3081 from Maxwe11/improve-assert
    
    Add more info for Assert message in ProcessStartInfoTests

[33mcommit d2bb418da30f27f4ef4203f46f7bd3b57a9433a0[m
Author: Alexander Köplinger <alex.koeplinger@outlook.com>
Date:   Fri Sep 4 00:02:30 2015 +0200

    Use SR.Format instead of string.Format
    
    See https://github.com/dotnet/corefx/pull/3078.
    This applies the same fix to all other places in the codebase.

[33mcommit 60aecb51efd419a2a3a91dc3ca835f684161ceb8[m
Merge: b41f940 a73eb46
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Sep 3 14:36:03 2015 -0700

    Merge pull request #3083 from dotnet/stephentoub-cc-badge-readme
    
    Add code coverage badge to README.md

[33mcommit b41f940ad2d3d837a0d7e327988f88d98308ee09[m
Merge: 3befc32 021bae4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 3 17:16:53 2015 -0400

    Merge pull request #3078 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit a73eb466e7c1fc8ff48f9c99b1fb52a75a8b448b[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 3 17:15:40 2015 -0400

    Add code coverage badge to README.md

[33mcommit 2c0de8825f064afc183c63b5647adb45d0359e7a[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Sep 3 14:12:40 2015 -0700

    Add x-plat support to FileSystem package
    
    This also refactored the Win32 implementation to be used as the 'dotnet' implementation
    on any windows platform.  This well do the right thing for future OOB target frameworks.
    
    [tfs-changeset: 1521958]

[33mcommit 6479bfcfb69c6f53a1b232917c29298fd6de3f70[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Thu Sep 3 23:25:46 2015 +0300

    Add more info for Assert message in ProcessStartInfoTests

[33mcommit 3befc32d7d5bca90815fa30bbb606fb39be6a14d[m
Merge: e75baac fc09b0b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 3 16:20:24 2015 -0400

    Merge pull request #3079 from stephentoub/fix_build_warnings
    
    Fix multiple MSB3277 build warnings

[33mcommit e75baacaed84c5d0bd9b73c46569254d4a0cc50f[m
Merge: 3c43c6b 2f0c67a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 3 16:16:45 2015 -0400

    Merge pull request #3076 from stephentoub/update_buildtools
    
    Update buildtools to v82

[33mcommit 3c43c6b16a89184395af14713caedc286ce33168[m
Merge: 29610f7 0eb2ae7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 3 15:58:00 2015 -0400

    Merge pull request #3068 from stephentoub/http_read_async
    
    Implement ReadAsync on CurlHandler response stream

[33mcommit 29610f7c9729877713d8138668e85039166d7214[m
Merge: ffcd270 63b9d13
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 3 15:56:06 2015 -0400

    Merge pull request #3042 from JonHanna/replace_try_catch_with_assert_throws
    
    Replace try…catch with Assert.Throws in many Linq.Expressions tests

[33mcommit ffcd27062bf2c32e9225f6ea2d8e96e65072b14b[m
Merge: 116d1a6 02a932e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 3 15:02:37 2015 -0400

    Merge pull request #2977 from epsitec/improve-order-by
    
    Short-circuit key comparison on equal indexes in EnumerableSorter

[33mcommit 116d1a6884153a97e8a87077238ab5325bad847b[m
Merge: 8b49ed2 1df6813
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 3 14:48:11 2015 -0400

    Merge pull request #3071 from kapilash/webrequest-status
    
    Fix for #3045. Fixing  WebException.Status on Unix

[33mcommit 0eb2ae72b959ba2d23e2f3edc8c25b7e7ec10d23[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Sep 3 09:45:05 2015 -0400

    Address PR feedback
    
    - Removed UnmanagedMemoryStream from project.json
    - Added a few more Debug.Asserts

[33mcommit fc09b0b21a2c5dd6c5e4ee5df203b2f8def30e76[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Sep 3 14:40:38 2015 -0400

    Fix multiple MSB3277 build warnings
    
    Fix several warnings of the form:
    ```
    warning MSB3277: Found conflicts between different versions of the s
    ame dependent assembly that could not be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed.
    ```
    Brings the number of warnings during a full build back down to 0.

[33mcommit 021bae42121ba011bb652e476974b87bcb944514[m
Author: SGuy Ge <sguyge@microsoft.com>
Date:   Thu Sep 3 11:26:55 2015 -0700

    Purpose: Fixing Bug 1213190 : Argument values are not showing up in runtime exception messages
    
    Cause: string.Format() is being used when formatting exception message, the original string gets replaced by resource key name which doesn't include the arguments.
    
    Solution: Use SR.Format() instead.
    
    [tfs-changeset: 1521889]

[33mcommit 2f0c67afe78c6edd1a186b6acb744f1209e9a779[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Sep 3 14:19:12 2015 -0400

    Update buildtools to v82

[33mcommit 1df6813990327ed57bb39e5ace92864379cc7b42[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Thu Sep 3 22:38:35 2015 +0530

    Incorporating PR feedback
    
    Using named argument for isMulti

[33mcommit 7938b0df7624d35c0cff566e8c5a5f2475cefbe8[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Thu Sep 3 15:49:26 2015 +0530

    Fix for #3045. Fixing  WebException.Status on Unix
    
    This commit fixes #3045.
    WebExecption class currently looks at the value of underlying HResult to
    set the value of the Status.
    We need to set the value of HttpRequestMessage.HResult to appropriate
    CURLcode in case of errors. WebException maps this to the relevant
    WebExceptionStatus

[33mcommit 8b49ed275d9b90813e9443b12d162f73bcd612be[m
Merge: 15ef5cf fc1eb73
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Thu Sep 3 08:48:39 2015 -0700

    Merge pull request #3074 from AtsushiKan/fixvsbuild
    
    Fix typo in VSBuild package restore checker.

[33mcommit fc1eb739e2b005ab3dadbb7712bf4bf7dee02c99[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Thu Sep 3 08:03:16 2015 -0700

    Fix typo in VSBuild package restore checker.

[33mcommit 15ef5cfe4031a01291a9a1b78bfafd95b5ab3266[m
Merge: fde1463 03377b7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Sep 3 10:40:30 2015 -0400

    Merge pull request #3069 from stephentoub/fix_httpunix_file
    
    Delete stale HttpClientHandler.Unix.cs file from repo

[33mcommit 63b9d134e2b8250f07af61d7dbffcc5ea2ec6bbd[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Sep 1 12:32:25 2015 +0100

    Replace try…catch with Assert.Throws in many Linq.Expressions tests
    
    More idiomatic, test tighter to the throw, and in a few cases narrower
    exception type test or parameter name test added.

[33mcommit 9c323beabda59ba07fd0ed74623d17cf1efec043[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Sep 3 08:43:42 2015 -0400

    Fix race condition in TestEventListener
    
    One of our ETW tests randomly failed due to a collection being modified while it was concurrently being enumerated.  The problem arose because our TestEventListener we use in the ETW tests has a collection that's populated by calls to OnEventSourceCreated, and it was only expecting the creation of itself to trigger the invocation of this method by its base, but if another thread in the system is creating another EventSource at the same time, that EventSource will also get added to the collection, which could happen as we're enumerating it.  I've added some synchronization to prevent the race condition.

[33mcommit 03377b795c99af0f0d4152382f34c5f471eeb7ab[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Sep 3 00:04:02 2015 -0400

    Move good HttpClientHandler.Unix.cs file up one level
    
    Now that the stale HttpClientHandler.Unix.cs file has been deleted, move the good one up to its location so that it sits next to its .Windows.cs counterpart.

[33mcommit 94ea117c8c558dfeae3327f089f820c0c0d4a487[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Sep 3 00:02:24 2015 -0400

    Delete stale HttpClientHandler.Unix.cs file
    
    There are two HttpClientHandler.Unix.cs files checked in:
    - One in System.Net.Http\src\System\Net\Http
    - One in System.Net.Http\src\System\Net\Http\Unix
    
    The former is the original stubbed out version, throws from every
    property, and isn't referenced by the .csproj, whereas the latter is where
    all of the recent development related to CurlHandler has happened.
    
    This commit simply deletes the former from the repo.

[33mcommit 80d2b157525211b655c3f81dde0ace6be9617720[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Sep 2 23:44:56 2015 -0400

    Respect CancellationToken provided to ReadAsync
    
    In the previous commit, we only polled the user-provided CancellationToken prior to waiting on the synchronization primitive, but the sync primitive wait was only cancelable by shutting down the stream.  This commit updates that logic to support also canceling the asynchronous wait via the user-provided CancellationToken.

[33mcommit c2af3efe7356efa34887c144940c2c1e6f60271a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Sep 2 23:33:47 2015 -0400

    Implement ReadAsync on CurlHandler response stream
    
    Today, CurlHandler provides a response content stream that doesn't override ReadAsync.  As such, any consumers reading data using ReadAsync will actually end up blocking a thread pool thread doing a synchronous Read.
    
    This commit fixes that by implementing ReadAsync to be truly asynchronous.  If data is already available, a task is returned immediately.  Otherwise, the reader asynchronously waits for the writer to publish data and then consumes that data.
    
    The overall design of the response stream remains the same as it was.  However, there are some notable changes:
    - A SemaphoreSlim is now used instead of a ManualResetEventSlim for the _writerPublishedDataEvent.  This was done because SemaphoreSlim supports both synchronous and asynchronous waiting.
    - The _readerRequestingDataEvent was removed, as it was no longer necessary.
    - We no longer allocate an UnmanagedMemoryStream per write operation, instead simply storing the IntPtr buffer and long length on the response stream.
    - Additional reorganization was done, primarily to share logic between Read and ReadAsync.

[33mcommit fde14635af4038231e28f6caa908404f8ff039ec[m
Merge: 4ba5245 eea3bfa
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 2 20:02:20 2015 -0400

    Merge pull request #3064 from JonHanna/hide_iarrayprovider_implementation
    
    Stop interface ToArray method from being public on public class.

[33mcommit 4ba5245cc225723b476efd1c2afb27f0f5da847d[m
Merge: 7d6a360 345a5c4
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Wed Sep 2 16:10:18 2015 -0700

    Merge pull request #3047 from bartonjs/x509_revocation
    
    Add support for X509 revocation checks on Unix

[33mcommit 7d6a360dc8b85fc18fc01ebaecab9cab40b9134a[m
Merge: e52df3c 062c008
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Wed Sep 2 15:39:02 2015 -0700

    Merge pull request #3059 from sokket/pal
    
    Converting simple almost-one-line functions in I/O and Process over to the PAL layer

[33mcommit e52df3cfd9de236b29ac5d6fd1c29daa0fbe1a60[m
Merge: 0c48590 57cf111
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 2 18:19:05 2015 -0400

    Merge pull request #3060 from stephentoub/inotify_error_messages
    
    Address various issues in FileSystemWatcher

[33mcommit 345a5c4ec2eeda3dc5ac86dd2d6d029c91e116d4[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Sep 1 11:15:35 2015 -0700

    Add a test for the CRL cache on Unix
    
    This necessitates building the X509 test library differently for Windows and Unix, because it needs to be capable of independently calculating the directory for the test (and we've learned not to trust $HOME!)
    
    This test does not test Online mode, because eventually the CRL it downloads will be not-yet-valid as of our validation time; at which point the test will be incapable of ever passing again.

[33mcommit a000cdcabd306081f728756daf36a1e8310fb4f5[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Sep 1 11:10:44 2015 -0700

    Add a stable test for X509Chain.
    
    This test has the full certificate chain data available via the ExtraStore collection, and does not check for revocation.
    
    Since the chain can build up to a self-signed cert, it's all happy.

[33mcommit 792b479ed58690cb85d7e7e64f7ce821315d5cc1[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Sep 1 11:06:36 2015 -0700

    Add support for CRL checking in X509Chain on Unix.
    
    * Look up the CRL address via the CRL Distribution Point extension.
        * Only "http" protocol addresses will be attempted (mostly this skips ldap addresses)
    * Download the CRL using libcurl
    * Save the result to ~/.dotnet/corefx/cryptography/crls/
        * The filename is the hash value from libcrypto, plus ".crl"
    * Later chains will use this same CRL for the remainder of its validity period (crl.NextUpdate)
        * This matches the Windows CAPI behavior of caching it for the full lifetime.  It's definitely the easiest to write.
    
    OCSP is not supported with this change.

[33mcommit 062c0088b90826510e9b3a8871ac50e837703cb4[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Tue Sep 1 19:15:08 2015 -0700

    Converting simple almost-one-line functions in I/O and Process over
    from platform-specific P/Invoke to the PAL layer

[33mcommit 0c48590092a43c37530f752c350c806ee58db38d[m
Merge: b8de30d eacc33c
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Wed Sep 2 14:33:29 2015 -0700

    Merge pull request #3057 from AtsushiKan/windowsidentityctor
    
    Add back WindowsIdentity::.ctor(string)

[33mcommit d687be7da953c5bf5a59f317392778ee7ec3db42[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Sep 1 10:49:51 2015 -0700

    ScanContentLength needs to consider offset when reading multi-byte length values.

[33mcommit eea3bfac3a845c81d7ea723b2fe4188971dbae66[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Sep 2 22:13:10 2015 +0100

    Stop interface ToArray method from being public on public class.
    
    Also change en-IE spellings in comments to en-US spelling, remove trailing
    whitespace, and cruft path in iterator movenext.

[33mcommit eacc33cdcbe333217a0d8adcd29c757d8980e2d2[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Wed Sep 2 14:03:14 2015 -0700

    Added WindowsIdentity..ctor(string) to contract.

[33mcommit b8de30d1fd281131ae213a4ded4d745c9bc93aa7[m
Merge: df59f29 f11f3db
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 2 16:56:39 2015 -0400

    Merge pull request #3058 from Maxwe11/process-environment
    
    Verify the environment of the child process itself

[33mcommit 57cf111281a22feafb83854789680680da3cab50[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Sep 2 14:37:42 2015 -0400

    Address various issues in FileSystemWatcher
    
    - On Linux, FileSystemWatcher is built on top of inotify, which has various limits configured in the system for how many instances and watches can be created.  When these limits are hit, exceptions are generated, but the Linux-provided error messages are cryptic about what the problem is.  This change adds better error messages for those cases.  It also ensures that errors regarding watch limits always come out of OnError rather than sometimes being thrown synchronously from EnableRaisingEvents and other times coming out asynchronously.
    - As part of fixing that, I noticed that we had some reliability issues around marking the instance as enabled.  I fixed this up to ensure that we only mark the instance as enabled when we've created everything we need to successfully launch it.
    - While doing that, I noticed that on OS X, if we restart an FSW, we were unnecessarily re-creating a delegate.  I changed it to avoid the unnecessary allocation.
    - And while doing that, I also noticed that we we had a bad exception message when constructing an FSW with something other than a directory.  I fixed the error message.
    - I added tests for all these things.

[33mcommit f11f3db9f199889dff0884203a4a8244ae548e9f[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Wed Sep 2 21:03:51 2015 +0300

    Verify the environment of the child process itself

[33mcommit df59f29dece1d3a4fdba01f497f3b7bd1469e421[m
Merge: 926414a 1180bfb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Sep 2 15:31:57 2015 -0400

    Merge pull request #3050 from stephentoub/fix_httpclient
    
    Refactor CurlHandler for threading and resource cleanup

[33mcommit 926414af6dd392db7cc02da64860d5f51910a4ee[m
Merge: 8310b20 780ef34
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Sep 2 10:53:40 2015 -0700

    Merge pull request #3053 from JonHanna/separate_to_array_from_iterator
    
    Separate ToArray specialisation from Enumerable.Iterator

[33mcommit 1b2dbafd758fde751d588cb80740a332f418bea0[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Wed Sep 2 08:32:43 2015 -0700

    Add back WindowsIdentity::.ctor(string)

[33mcommit 780ef34b7a42124f1f3ca89c63d2be0eaf4de747[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Sep 2 15:40:14 2015 +0100

    Implement IArrayProvider in OrderedEnumerable, Lookup, GroupedEnumerable,
    RangeIterator & RepeatIterator.
    
    Bypass buffer entirely on ToArray when possible.
    
    Fastpath ToArray even if there's a predicate, in the case the source is empty.

[33mcommit 1180bfb82845bf10b9131785d02352513f59733e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Sep 2 09:37:47 2015 -0400

    Address PR feedback

[33mcommit 8310b20677be0ccde61e99af3ba79e328378b0a9[m
Merge: d73d8de 07f9ffa
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 1 21:47:16 2015 -0400

    Merge pull request #3052 from justinvp/xdoc_remove
    
    XLinq: Snapshot to an array instead of List<T>

[33mcommit b7e7847677236ca0afd0b400bd1fcc138d960902[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Sep 1 17:05:33 2015 -0400

    Refactor CurlHandler for threading and resource cleanup
    
    This change overhauls how CurlHandler manages its threading and resources.
    
    CurlHandler is now split into three types:
    - CurlHandler, which represents the shell of the handler, contains some helper functions, and contains a "MultiAgent".  It submits "EasyRequest"s to the "MultiAgent".
    - CurlHandler.EasyRequest, which represents all of the state associated with a SendAsync request on the HttpClient.
    - CurlHandler.MultiAgent, which represents the owner of a libcurl multi handle and all of the processing associated with it.  The MultiAgent is responsible for actually processing EasyRequests, which CurlHandler queues to it.
    
    MultiAgent is designed to not require any cleanup.  When the first EasyRequest arrives, it spins up a worker that creates a multi handle to process the request.  Any additional requests to arrive while that worker is active will be processed by that worker and multi handle.  When no work remains, the multi handle and the worker goes away.  If/when another request arrives, a new multi handle / worker are spun up.  Etc.
    
    Almost all of the locking previously there was removed, as the worker thread is now solely responsible for doing all work on the multi handle.  The only locking now is when the CurlHandler hands off an EasyRequest to the MultiAgent, it needs to lock to store the request into the agent's queue, and the MultiAgent needs to lock to access it.
    
    This design avoids threading issues we faced with regards to accessing state managed by the multi handle without holding the lock (e.g. polling file descriptors) and avoids having multiple threads blocked waiting on the lock to do processing associated with the multi handle.  It also makes resource cleanup easy: all state associated with the easy handle is cleaned up when that thread is done processing the easy handle, and all state associated with the multi handle is cleaned up when the worker thread shuts down.
    
    The change also ensures that we always complete the response message, and that any exceptions that occur are propagated as needed to Read on the response stream.
    
    And the design will make it trivial in the future to change the relationship between a CurlHandler and a MultiAgent:
    - If we want one MultiAgent shared across all CurlHandlers, we just change the _agent field to be static instead of instance.
    - If we want a pool of MultiAgents, we can simply create a collection of them and round-robin between them from one or more CurlHandlers.
    - Etc.
    
    All of the configuration code remains, e.g. what options are set on the easy and multi handles, but the code has been refactored.  I also include CURLOPT_NOSIGNAL to avoid multithreading problems per the docs.
    
    Along the way, I cleaned up some stale interop that's gotten left behind through various iterations, and I fixed a few small issues related to behavioral differences from Windows, e.g. CookieContainer never returning null, UseCookies defaulting to true, etc.

[33mcommit d73d8de3552b5869866e1be73c271bb0bb688fd6[m
Merge: 713e110 f88dcec
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Tue Sep 1 17:13:06 2015 -0700

    Merge pull request #3038 from sokket/pal
    
    Moving the Unix calls to getrlimit and setrlimit over to the PAL layer

[33mcommit 07f9ffad6ac74b8b9949846eeaa3c27aecc9e32c[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Tue Sep 1 17:08:19 2015 -0700

    Snapshot to an array instead of List<T>
    
    Now that EnumerableHelpers is used in this class, make use of it in
    the Remove methods to snapshot to an array instead of a List<T>. This
    avoids the extra List<T> instance allocation with slightly faster
    enumeration as we can loop over the array directly (vs. indirectly
    through List<T>'s enumerator).

[33mcommit f88dcec939cf2a9fb2ff0f5b9da20314c5cd4b73[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Mon Aug 31 13:49:46 2015 -0700

    Moving the Unix calls to getrlimit and setrlimit over to
    the PAL layer. Also fixing a UT failure in the OSX Process
    tests where OS X throw Win32Exception and other platforms
    threw InvalidOperationException.

[33mcommit b9b05b73da7ec35b6216eb634f0834b235c6df1d[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Sep 1 23:41:40 2015 +0100

    Separate ToArray specialisation from Enumerable.Iterator
    
    Enumerable.Iterator has a virtual ToArray that is overridden to provide
    optimised array-creation & buffer-filling when possible.
    
    Most Enumerable.Iterator subclasses don't override the default, which
    results in it passing through Buffer's constructor a second time. This can
    also happen if those that do override it have a predicate.
    
    Separate out this part of Iterator's interface into a separate interface, for
    only those classes that override it, and signal a failure to create an array
    by returning null.

[33mcommit 713e11025cea8611a9d27c1600420f22de52e43d[m
Merge: 4f8311b bf7b3de
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 1 17:36:06 2015 -0400

    Merge pull request #3017 from JonHanna/simplify_xdoc_ordering
    
    Simpler InDocumentOrder implementation.

[33mcommit 5040201f90c169d6033532170547f111a28bfb81[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Fri Aug 21 15:51:29 2015 +0530

    Introducing tests for HttpClientHandler
    
    This checkin tests the client handler in following scenarios:
    * Http and Https calls
    * Authentication
    * Redirection
    * Redirection + Authentication
    * custom headers
    * cookies

[33mcommit 857f2b4e8317d41dc9eb8754634d9150cc0788cf[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Sep 1 12:33:01 2015 -0400

    Enable System.Net.Requests tests on Unix
    
    - Removed the UnsupportedPlatforms from the csproj
    - Fixed the tests project file to use a P2P reference to the source project, as do the rest of the corefx test projects (except for partial facades, which this isn't)
    - Fixed one of the WebRequestTests that was changing the global DefaultWebProxy.Credentials to reset it.  The tests were expecting to be run in a specific order, which is not yet consistent across platforms.
    - Disabled one test that's failing on Unix due to an error condition not being represented correctly in an exception (I also fixed the test to be a Fact instead of a Theory, as the argument was being ignored and the test was unnecessarily running multiple times)

[33mcommit 4f8311b433f44e5c7bb117453ad2deee52784ff3[m
Merge: 78b4ffc ae832fc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Sep 1 14:30:44 2015 -0400

    Merge pull request #3021 from JonHanna/tighten_enumerablehelper
    
    Tighten loops on EnumerableHelpers.ToArray()

[33mcommit 78b4ffc35d7e56fc68831553e622a4e8b01dee64[m
Merge: 64f6923 11d048b
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Sep 1 07:11:00 2015 -0700

    Merge pull request #3033 from davidsh/error_handling
    
    Fix error handling in WinHttpHandler StartRequest

[33mcommit ae832fce23e95a7aa3a2e65447b77c25d69978e4[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Sep 1 10:21:06 2015 +0100

    Use EnumerableHelper.ToArray in Buffer constructor.
    
    Greater code re-use, and gains from EnumerableHelper's better support for
    near-upper-limit arrays.

[33mcommit f0d3761d8e875f6fa17e43ab715b746bbcb68716[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Sep 1 10:20:38 2015 +0100

    Tighten loops on EnumerableHelpers.ToArray()
    
    One change is analogous to that in 6cf2b4c in that it removes a check for the
    initial state.
    
    Also removes assignment in case where it is just overwritten.
    
    Also moves check for new size being smaller than current size to within branch
    that can lead to it.

[33mcommit 498bcaab24a010d2816a5e781a2357714526a1af[m
Author: Jeremy Kuhne <jkuhne@microsoft.com>
Date:   Sun Aug 30 09:57:57 2015 -0700

    Fix GetFullPathName wrap.
    
    GetFullPathName supports arbitrarily long paths, but doesn't
    support extended syntax correctly. Change the wrap to handle
    paths correctly and add a number of tests. Fix the common
    test solution to honor build system configs.
    
    Note that the incorrect wrapping wasn't exposed anywhere yet.

[33mcommit 64f6923889f97bf2d95ffce0a0ff9f456a5bb439[m
Merge: 7667bcc b63e11d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 31 22:25:00 2015 -0400

    Merge pull request #3031 from JonHanna/import_single_tests
    
    Fully import legacy Single and SingleOrDefault tests

[33mcommit 7667bccb320db5de92636ff79ee8f08b8c15d665[m
Merge: 372ff55 88e5ef3
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 31 22:13:25 2015 -0400

    Merge pull request #3026 from bbowyersmyth/AdditionalStringJoinTests
    
    Tests for coreclr/pull/1460

[33mcommit 372ff557cf89959a4b41d50e177450d8eb2590a2[m
Merge: 55ba24e 99b1f0e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 31 22:13:08 2015 -0400

    Merge pull request #3036 from justinvp/x509_lowlevellist
    
    Remove use of LowLevelList<T> from X509Certificates

[33mcommit 11d048b399788c26268819eef962b130ecf472c8[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Aug 31 11:26:55 2015 -0700

    Fix error handling in WinHttpHandler StartRequest
    
    Addresses dnu restore exception 2547
    https://github.com/aspnet/dnx/issues/2547
    
    - Fix a code path where `requestHandle` could be `null`.
    - Add unit test to simulate this error code path.
    - Simply use of Assert.ThrowsAsync<T>

[33mcommit 55ba24e08a79873dd397ccc2484fe9abb81c8ef9[m
Merge: b5447ec 266a3b0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 31 19:31:05 2015 -0400

    Merge pull request #3030 from JonHanna/import_take_tests
    
    Fully import legacy Take and TakeWhile tests.

[33mcommit b5447ecc0053dfa12bdf538306667370bf2209f2[m
Merge: c1a59ed 537a2ab
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 31 18:59:59 2015 -0400

    Merge pull request #3023 from justinvp/xdoc_nodes
    
    XLinq: Throw ArgumentNullException from Extensions.Nodes immediately instead of lazily

[33mcommit 99b1f0ee881aa61637c2122bf6925fca2730a519[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Mon Aug 31 14:43:36 2015 -0700

    Remove use of LowLevelList<T> from X509Certificates
    
    System.Security.Cryptography.X509Certificates already has a
    dependency on System.Collections and is already making use of
    List<T>. This commit removes all uses of LowLevelList<T>. In some
    cases, switching to an array was sufficient.

[33mcommit c1a59ed7382a3411d039e35b670edbf4999a30e3[m
Merge: 1f7fd7a c468766
Author: VSadov <vsadov@microsoft.com>
Date:   Mon Aug 31 14:30:30 2015 -0700

    Merge pull request #2941 from stephentoub/fix_binderhelper_tp
    
    Fix IsTransparentProxy check in Microsoft.CSharp

[33mcommit 1f7fd7a28f8612eca25172b6c64b6b49c80a04c4[m
Merge: e212728 10ccaa0
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Mon Aug 31 10:33:22 2015 -0700

    Merge pull request #3027 from bartonjs/fix_MakeTimeT
    
    Fix tm_mon assignment in MakeTimeT

[33mcommit b63e11d5c332a395de0dba555dd2cc4385693bcf[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Mon Aug 31 17:54:09 2015 +0100

    Fully import legacy Single and SingleOrDefault tests
    
    Convert Single and SingleOrDefault tests imported in #2874 into a more directly
    XUnit-ian style
    
    All the previous Single tests added in f8faadf are duplicated by these bar
    FindSingleMatch, so they were removed.
    
    Added SingleOrDefault version of FindSingleMatch.
    
    Added tests on ArgumentNullException being thrown where appropriate.

[33mcommit 266a3b024fb2fd5579802e0b27f19b132d097ca8[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Mon Aug 31 16:09:59 2015 +0100

    Fix accidential omission of assertion from f27e77d.

[33mcommit 76b531df3579a74975aee24142366b038445c97d[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Mon Aug 31 16:08:36 2015 +0100

    Convert Take and TakeWhile tests imported in #2874 into a more directly
    XUnit-ian style
    
    TakeWhile6.Test6() was crippled in the original, probably because it causes an
    OutOfMemoryException. Fixed this, but it is very slow, so have marked as
    OuterLoop
    
    Added tests on ArgumentNullException being thrown where appropriate.

[33mcommit 10ccaa06250257b0f6f538911281c176bca2eb1d[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Sun Aug 30 22:43:11 2015 -0700

    Fix tm_mon assignment in MakeTimeT
    
    tm_mon is the zero-indexed month of the year, but the callers use the
    one-indexed month of the year.  This makes things like expirations come
    up a month sooner than they should.

[33mcommit 88e5ef3e0106c2249d523b9fcbc510c4a4a33d74[m
Author: Bruce Bowyer-Smyth <bbowyersmyth@live.com.au>
Date:   Mon Aug 31 12:46:38 2015 +1000

    Tests for coreclr/pull/1460

[33mcommit 537a2abfb0c3e379769834157c36f1720d21cb86[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Sun Aug 30 15:41:15 2015 -0700

    Throw ArgumentNullException immediately
    
    ArgumentNullException should be thrown when the Nodes method is
    called, not from the enumerator the first time MoveNext is called.

[33mcommit bf7b3de49a236d0b8b22d05ba6f3a9e448aff8af[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Sun Aug 30 00:43:51 2015 +0100

    Simpler InDocumentOrder implementation.
    
    System.Xml.Linq.Extensions.InDocumentOrder() uses a copy of the implementation
    of System.Linq.Enumerable.OrderBy(), to copy that working implementation
    without having a dependency on System.Linq.
    
    This includes unused complications; supporting key-selection but only ever
    using identity, part of the support for CreateOrderedEnumerable (but
    incomplete, and if it was it would have no real effect as the ordering is
    total), other comparers though only one is ever used, and a generalised
    buffering approach that isn't shared with any other code and so gains nothing
    in being generalised.
    
    This commit replaces that with a more narrowly focused implementation,
    providing just what is used by InDocumentOrder, resulting in simpler and
    tighter code.
    
    Obsoletes issue #3008 in that the case it is concerned with now results in an
    immediate return from early in the call to CompareDocumentOrder(), so the
    suggestion in #3008 would not improve performance further.

[33mcommit e21272815eaf4ca8cbb6af120507f1018e25ae38[m
Merge: 4ac67b6 103d840
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Aug 29 07:04:22 2015 -0400

    Merge pull request #3006 from Maxwe11/fix-compression
    
    Fix WrappedStream.ThrowIfCantRead

[33mcommit 4ac67b6fd90152ef468594776883bfd3e0309a52[m
Merge: f0fce53 ed2d1a8
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Fri Aug 28 19:59:07 2015 -0700

    Merge pull request #3010 from JeremyKuhne/NameCleanup
    
    Clean naming and disable stack pathhelper

[33mcommit ed2d1a890dd79a0871531c8d45b48506781afe25[m
Author: Jeremy Kuhne <jkuhne@microsoft.com>
Date:   Fri Aug 28 16:40:38 2015 -0700

    Clean naming and disable stack pathhelper
    
    PathHelper doesn't handle growing past MAX_PATH when using
    the stackalloc version. #3009 tracks this.

[33mcommit f0fce5393e81186a0af661520708b05c85a8c22f[m
Merge: 565dbb0 496c66e
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Fri Aug 28 16:42:30 2015 -0700

    Merge pull request #3001 from JeremyKuhne/RemoveMaxPathChecks
    
    Unblock paths > MAX_PATH without extended syntax.

[33mcommit 565dbb062eddea5bd4eaee780aa813e3a674e746[m
Merge: 0104abf 4ae6617
Author: VSadov <vsadov@microsoft.com>
Date:   Fri Aug 28 17:18:39 2015 -0600

    Merge pull request #2959 from JonHanna/throw_not_supported_from_reset
    
    Consistently Throw NotSupportedException on Enumerator Reset

[33mcommit 0104abfef771c107216047ed23015b96249f3b59[m
Merge: 3d83ce8 ae6c0ad
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Aug 28 16:09:00 2015 -0700

    Merge pull request #2956 from bartonjs/aia_chain
    
    Enable AuthorityInformationAccess downloads for X509Chain on Unix.

[33mcommit 3d83ce8ded08e2ed1b9c24269bc7b0f2a7abc4de[m
Merge: d9c1bc5 ef507af
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Fri Aug 28 15:51:34 2015 -0700

    Merge pull request #2999 from sokket/pal
    
    Moving statfs calls and DriveInfo PInvokes over to use the PAL layer.

[33mcommit 496c66e0b498077d5d349d324713a51be6b91c68[m
Author: Jeremy Kuhne <jkuhne@microsoft.com>
Date:   Thu Aug 27 16:10:47 2015 -0700

    Unblock paths > MAX_PATH without extended syntax.
    
    Also allow directories up to max component length (255) as opening does not
    require extended syntax.

[33mcommit ef507af9c0c7c882e4b46a912d759e3811886f80[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Wed Aug 26 14:08:53 2015 -0700

    Moving statfs calls and DriveInfo PInvokes over to use the PAL layer.
    The PAL layer will abstract away the knowledge of if the OS has
    /proc/mounts or a C API to gather the mount point information. This
    change also means we only need one DriveInfo.Unix file for all
    non-Windows platforms.

[33mcommit 103d8404493206a765c8b4bba0553795c80701de[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Fri Aug 28 22:38:19 2015 +0300

    Fix WrappedStream.ThrowIfCantRead
    Currently ThrowIfCantRead checks CanWrite property which looks incorrect.
    Actually throw line not covered by tests and seems to me it's a potential dead code
    because ZipArchive.Init ensures that stream is readable.

[33mcommit d9c1bc5ecbbc9143901c846a8982b974bbe55d64[m
Merge: 0bd1fed 77d6c4f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 28 15:33:08 2015 -0400

    Merge pull request #3005 from nguerrera/remove-stale-pipe
    
    Remove stale, unused Interop.libc.pipe

[33mcommit 77d6c4f9e1cf1bab3bd282eec502b08db72c11cf[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Fri Aug 28 11:02:43 2015 -0700

    Remove stale, unused Interop.libc.pipe

[33mcommit 0bd1fed61d832d3b4f1870fe09d95b4182ae310d[m
Merge: dd53251 80bf6df
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 28 13:20:58 2015 -0400

    Merge pull request #3004 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 80bf6df92d88af9bd7b92e8841191dd6c5f5ac13[m
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Aug 28 09:05:02 2015 -0700

    Make all X509 collection types explicitly implement IList's IsSynchronized and SyncRoot
    
    X509ChainElementCollection and X509ExtensionCollection implicitly implement IList.IsSynchronized and IList.SyncRoot, but X509CertificateCollection and X509Certificate2Collection don't.
    
    The properties aren't declared virtual, and IsSynchronized returns false, so making the implementation be explicit doesn't hurt a consumer with a lack of knowledge.
    
    Fixes #2009.
    
    [tfs-changeset: 1520071]

[33mcommit dd53251144f116367e0aa56319450526262a2bf3[m
Merge: 993218d 14f04ad
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 28 09:02:01 2015 -0400

    Merge pull request #2997 from JonHanna/import_skip_tests
    
    Fully import ‎Skip and SkipWhile tests

[33mcommit 14f04ad22a2c1a685139e224fe2b7feb51d6e8d8[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Aug 28 09:45:32 2015 +0100

    Use OuterLoopAttribute on the long-running test.

[33mcommit ae6c0adb19ae877d82a3859e1a90b5edd0a116fc[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Aug 24 15:27:43 2015 -0700

    Use AuthorityInformationAccess to download intermediate CA certificates on Unix.
    
    When the issuer certificate cannot be found in the locally understood stores, use the AIA record to extract the URL for the issuer certificate.  Then use libcurl to download it, and apply it into the chain candidates set.  If the chain then is considered successful save those certificates that had to be downloaded to the "CA" (intermediate) store for the current user.
    
    The timeout value can be exceeded, but once it has been exceeded no further downloads will take place.  The same timeout will be used in the future for CRL/OCSP checks.
    
    No unit tests were added for this feature because they would require both the network (downloading the files) and the filesystem (deleting a file to force it to download, then the product code causing it to be written).

[33mcommit 97c488939ef8f9b114b9b263e8cb84e5f7a6d54a[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Sat Aug 22 18:30:26 2015 -0700

    Split libcurl Interop files into smaller pieces

[33mcommit 993218d84f1d9052fa6304ddd49cf5ea60afc49a[m
Merge: b4f7547 1448599
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Thu Aug 27 23:58:01 2015 -0700

    Merge pull request #3002 from nguerrera/shim-curl-init
    
    Add System.Net.Http.Native shim and seed it with curl initialization

[33mcommit 1448599198ed0f14bc87c6e96c44c5e9622e4b06[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Aug 27 16:24:29 2015 -0700

    Add System.Net.Http.Native shim and seed it with curl initialization

[33mcommit 1fcc5d78de809971852f966c436a7cd04c18e9d3[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Aug 28 00:20:41 2015 +0100

    Test skipping on empty source.

[33mcommit b4f7547beccaf2399552fe8323d66a91849e8bcf[m
Merge: 08889f8 fabe699
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Thu Aug 27 16:23:48 2015 -0700

    Merge pull request #2987 from JeremyKuhne/ImplicitLongPath
    
    Change file system APIs to implicitly add extended syntax when needed

[33mcommit fabe699d38702d401fbb237a2608f3054942a8b5[m
Author: Jeremy Kuhne <jkuhne@microsoft.com>
Date:   Wed Aug 26 20:14:29 2015 -0700

    Change file system APIs. to implicitly add extended syntax when needed for long path support.

[33mcommit 08889f82399d99e7adcac8add4a5e07d34adf8b6[m
Merge: 9c4a347 9d65dc9
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Aug 27 13:37:52 2015 -0700

    Merge pull request #2998 from nguerrera/fix-readdir-casing
    
    Fix casing of Interop.ReadDir.cs to match function name

[33mcommit 9c4a347f1cba97e0e06c57001bd35f97bc144de9[m
Merge: 296c1d0 057c394
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Aug 27 12:25:01 2015 -0700

    Merge pull request #2993 from nguerrera/shim-permissions
    
    Shim chmod, mkdir, mkfifo to make permission handling consistent

[33mcommit 9d65dc9349a83ec17b8aef464e7770caafa4dc0e[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Aug 27 11:35:22 2015 -0700

    Fix casing of Interop.ReadDir.cs to match function name

[33mcommit 057c39493b29d2f5f25543b4d569b27ddf170674[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Aug 27 09:50:09 2015 -0700

    Shim chmod, mkdir, mkfifo to make permission handling consistent
    
    We were mixing Interop.libc.Permissions with Interop.Sys.Stat. This
    is not incorrect because the numeric values are fixed by POSIX, but
    it was inconsistent and confusing.
    
    We now have shims for all functions taking mode_t.

[33mcommit f27e77de38af315f774e43f2296a43c9a5fd6de7[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Aug 27 19:12:56 2015 +0100

    Fully import ‎Skip and SkipWhile tests
    
    Convert ‎Skip and SkipWhile  tests imported in #2874 into a more directly
    XUnit-ian style
    
    Split existing tests between Skip and SkipWhile.
    
    Of Skip tests, the following were omitted as duplicating
    an existing test:
    
    Skip1.Test1() → SkipExcessive()
    Skip2.Test2() → SkipNone()
    Skip3.Test3() → SkipNegative()
    Skip5.Test5() → SkipAllExactly()
    
    Of the SkipWhile tests SkipWhile1a.Test1a() and SkipWhile1b.Test1b() were
    omitted as duplicating SkipWhileAllTrue()
    
    SkipWhile6.Test6() was crippled in the original, probably because it causes an
    OutOfMemoryException. Fixed this, but it was very slow. Improved the
    running time, but it's still very slow so marked it as Skipped.

[33mcommit 296c1d0698c0519a074972ee27cb8da68df5bbc2[m
Merge: 83e785e 67bb041
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Aug 27 11:11:33 2015 -0700

    Merge pull request #2994 from nguerrera/remove-sql-from-gitignore
    
    Remove sql/ from gitignore

[33mcommit 83e785e2ccbde57116d6176731f3d2320f3f477b[m
Merge: 317803d e8819f1
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Aug 27 10:20:34 2015 -0700

    Merge pull request #2992 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 67bb04143c3d2e0744d714991687517d86542958[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Aug 27 09:59:58 2015 -0700

    Remove sql/ from gitignore
    
    There is no clear indication of why this folder is excluded (it's
    int the "others" section) and it is causing problems for SqlClient.

[33mcommit 317803d4d3ac082ec1dd9676008defd64c61b89a[m
Merge: bbcaaaf ff96ce8
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 27 12:15:11 2015 -0400

    Merge pull request #2990 from nguerrera/remove-gnu-get-libc-version
    
    Remove unused gnu_get_libc_version P/Invoke declaration

[33mcommit e8819f1d689035b3d536511af045b88ea0bd3f9e[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Aug 27 09:05:52 2015 -0700

    Remove obsolete, early prototype contracts.
    
    [tfs-changeset: 1519576]

[33mcommit bbcaaafc98a678a742bebe9975239a17a7e27f42[m
Merge: 0c91d60 6e0e365
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 27 11:21:54 2015 -0400

    Merge pull request #2944 from vijaykota/feature
    
    Fix an assert in CurlHandler multi handle release path

[33mcommit 0c91d60b2297a2cc8f4c34a679a7d5544f9fb29b[m
Merge: 3a313e9 5553a5a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 27 11:17:23 2015 -0400

    Merge pull request #2989 from JonHanna/import_order_then_descending
    
    Add tests for stability of ThenBy and ThenByDescending

[33mcommit ff96ce829df16f8a0b58f568e9b696fa19e698a8[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Aug 27 08:07:54 2015 -0700

    Remove unused gnu_get_libc_version P/Invoke declaration
    
    This was previously needed for the logic to switch between GNU
    strerror_r and POSIX strerror_r, but that is now addressed by the shims.

[33mcommit 5553a5ae753a8b4c34b2a201169846e4a535f2da[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Aug 27 14:25:22 2015 +0100

    Add tests for stability of ThenBy and ThenByDescending
    
    ThenBy and ThenByDescending are both specified as having a stable sort order
    with linq-to-objects. Add tests verifying this.

[33mcommit 3a313e95bec51cbd892e0de967fe2100fd03ceaa[m
Merge: 86d077f 6352cc5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 27 09:09:38 2015 -0400

    Merge pull request #2980 from JonHanna/import_order_then_descending
    
    Fully import OrderBy/Descending & ThenBy/Descending tests

[33mcommit 6e0e365a2437a00046c223244305d8156d47c9d4[m
Author: Vijay Kota <vijayko@microsoft.com>
Date:   Thu Aug 27 18:11:35 2015 +0530

    Incorporate PR feedback

[33mcommit 88b69e5d9a3e233b47ea74e3418c77714a9f7b29[m
Author: Vijay Kota <vijayko@microsoft.com>
Date:   Thu Aug 27 10:16:41 2015 +0530

    Take ref on multi handle to prevent race with Finalize
    
    - Also fix leaks and task completion order for BeginRequest errors/cancellations

[33mcommit 86d077fb5f283d719c6502a78df88e3c7b63f72a[m
Merge: a41674d 73502c9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 26 22:38:07 2015 -0400

    Merge pull request #2974 from nguerrera/shim-pipe
    
    Shim pipe and fcntl

[33mcommit a41674d770233261f5afb748aa91fea83ef6c57d[m
Merge: 6cffbc2 929c0ee
Author: Matt Ellis <matell@microsoft.com>
Date:   Wed Aug 26 17:53:15 2015 -0700

    Merge pull request #2983 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 6352cc5725b6f2e8add56fa5875b723a5a3485a7[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Thu Aug 27 00:45:16 2015 +0100

    Add tests for exception on null sources.

[33mcommit 73502c91a21fbf4f4732cb89a386d8bd7f863c41[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Wed Aug 26 11:48:52 2015 -0700

    Shim pipe and fcntl

[33mcommit 929c0ee741da1b4e744908ec498274cae04c7938[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Wed Aug 26 13:13:46 2015 -0700

    Add x-plat nuget packages for runtime and hosts
    
    This adds x-plat implementation packages for runtime and hosts.
    Implementation packages have naming convention of
    runtime.(<rid>.)(<target>.)<packageId. They are refernced by
    a primary package via runtime.json constrained by the
    appropriate runtime identifier for their platform.
    
    I've ported the existing runtime and host packages to use this
    convention and ported existing packages that already had runtime
    specific implementation (System.IO.Compression and
    System.Data.SqlClient). For System.IO.Compression I have also
    added the unix runtime library.
    
    For x-plat runtime I needed to produce some packages that are only
    amd64. We didn't have support for this, in the past we just special
    cased the package IDs. Rather than continuing to special case
    I added support for a project to define which architectures it should
    build for. Projects can control their architecture by specifying the
    PackagePlatforms property as a semi-colon delimited list.
    If this is not done then the package will build if the target runtime
    contains the current architecture or if we're building for x86.
    I have removed the special cases after implementing this fix.
    
    In implementing this I uncovered a constraint in how nuget handles
    runtime.json. It will only import runtime dependencies once.
    It does a pass of the compile graph and imports any runtime specific
    dependencies and their direct closure for the active target framework.
    If any of the newly imported runtime specific packages have a runtime.json
    it is ignored. I've added validation to catch this case if we do it and
    added a feature to make it easier to define runtime dependencies
    that are associated with some package other than project in which
    they are contained: PackageAlias and TargetPackageAlias.
    
    [tfs-changeset: 1519157]

[33mcommit 6243fc0851cf072e09b4824d04d4231b9e6aedc0[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Aug 26 21:11:25 2015 +0100

    Replace string-based tests that differ according to machine with int-based
    
    Tests the same principle the original was documented as testing but neither
    differs according to machine's default sort (as previous) nor ignore ordering
    in checking the ordering (as in the original).

[33mcommit 6cffbc2fcd0c9e3d6b91828a874daf6c77e528af[m
Merge: e6bc6a3 bb34d5a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 26 16:01:11 2015 -0400

    Merge pull request #2929 from stephentoub/filestream_async_buffering
    
    Improve FileStream WriteAsync buffering and performance

[33mcommit e6bc6a3b90f7bb3a46664e9b669985440f6ee4fe[m
Merge: b56ea19 86e89f7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 26 16:00:13 2015 -0400

    Merge pull request #2973 from davidsh/http_timeouts
    
    Fix HttpClientHandler timeouts

[33mcommit b56ea19b2b3ea342cd4d97fcf25c22b07bcd1af0[m
Merge: d6efe45 93ac107
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 26 15:38:14 2015 -0400

    Merge pull request #2979 from JonHanna/import_elementat_tests
    
    Fully import ElementAt & ElementAtOrDefault tests

[33mcommit d6efe4500f277c0116b91bfb914eb32823a37490[m
Merge: a54624a a176c91
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 26 15:28:57 2015 -0400

    Merge pull request #2958 from ianhays/driveinfo
    
    Add coverage to DriveInfo tests

[33mcommit 590bcde7d2cc42ce16aef806090a5d1f7911f5ac[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Wed Aug 26 10:51:40 2015 -0700

    Cleanup whitespace and make parameter names consistent

[33mcommit a54624a473b8da22df39a1feb5d42bee4673f92a[m
Merge: 80cc81b e95d8dd
Author: Vance Morrison <vancem@microsoft.com>
Date:   Wed Aug 26 10:37:13 2015 -0700

    Merge pull request #2981 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit e95d8dda7d4b933205a1a39130d075fdbdb72b13[m
Author: Vance Morrison <vancem@microsoft.com>
Date:   Wed Aug 26 10:32:13 2015 -0700

    Fix version number to be 4.0.0.0
    
    [tfs-changeset: 1519084]

[33mcommit a176c9132773cc566aa68c8fb45a768990e2c3fe[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Aug 26 10:24:51 2015 -0700

    Responding to PR feedback

[33mcommit 86e89f73a1e7bf5b4fd40878f4fec4741a8651ca[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Aug 25 14:30:32 2015 -0700

    Fix HttpClientHandler timeouts
    
    Since HttpClientHandler doesn't expose all the timeout used by the
    underlying WinHttpHandler, we need to disable those timeouts in favor of
    the HttpClient.Timeout property.
    
    Addresses issue #2857.

[33mcommit 89109ee36bce569dc73b4e5f674948c154914251[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Aug 26 17:57:29 2015 +0100

    Fully import OrderBy/Descending & ThenBy/Descending tests
    
    Convert OrderBy, ThenBy, OrderByDescending & ThenByDescending tests imported
    in #2874 into a more directly XUnit-ian style
    
    OrderBy8 and OrderByDescending8 seemed to have been adapted from tests that
    checked stability of sort, to tests that imposed stability of sort external
    to OrderBy and then tested it. This is apparently for use with PLINQ where
    OrderBy etc. are not specified as providing stable sorts. Since in Linq to
    objects they ARE specified as providing stable sorts, these have been returned
    to relying just on OrderBy/OrderByDescending for that stability.

[33mcommit 80cc81b7293fb2ff2f8d17c44ad8d34d0446c16a[m
Merge: d8339c7 3101b12
Author: Vance Morrison <vancem@microsoft.com>
Date:   Wed Aug 26 09:12:18 2015 -0700

    Merge pull request #2976 from stephentoub/telemetry_tests
    
    Fix several System.Diagnostics.Tracing.Telemetry issues

[33mcommit 93ac10737a6037e3153fc889189319fde76378ed[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Aug 26 16:55:23 2015 +0100

    Fully import ElementAt & ElementAtOrDefault tests
    
    Convert ElementAt & ElementAtOrDefault tests imported in #2874 into
    a more directly XUnit-ian style.

[33mcommit d8339c7fd932207df3da3af6b4b5a833b6c7432d[m
Merge: c70dc89 6c117ea
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 26 09:51:17 2015 -0400

    Merge pull request #2972 from Maxwe11/webheadercollection-tests
    
    Add more tests for WebHeaderCollection

[33mcommit bf77ffa25dbf932d42b32c929d7d4d2844ba80ec[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Aug 26 13:26:57 2015 +0100

    Simplfiy ObjectToIdCache.GetPrime
    
    Because ObjectToIdCache always attempts a starting size of 1, resulting
    in a starting size of 3 (first prime in list) all further possible
    values can be pre-computed directly.
    
    This simplifies the GetPrime() code.
    
    This also allows the possibility of the cache working at a capacity greater than
    1535867969, which is the point at which it would currently overflow (after trying
    to double 1535867962 which overflows on 32-bit signed integers). This is neither
    likely to happen, nor likely to be allowed by memory size, but that case now tries
    the largest prime that is an allowed array size (viz 2146435069) then the largest
    array size (ignoring primality), at which point it is at the theoretical limit
    of the approach ObjectToIdCache takes, if not already long past the practical
    limits of memory.

[33mcommit 6c117eac92a59920dad99459df7a6148d38a1708[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Wed Aug 26 00:46:03 2015 +0300

    Add more tests for WebHeaderCollection

[33mcommit 02a932e74421ac27604c289d1fb97b23aa243a2e[m
Author: Pierre Arnaud <arnaud@epsitec.ch>
Date:   Wed Aug 26 07:05:41 2015 +0200

    Short-circuit key comparison on equal indexes
    
    Useless calls to comparer.Compare should be avoided:
    when both index1 and index2 refer to the same key, there is
    no need to execute the recursive CompareAnyKeys method.
    
    See discussion in issue dotnet/corefx#2962

[33mcommit c70dc8920a52e1b926a8736aa3bda4f5df97fb46[m
Merge: 5826a86 d8ad999
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Aug 25 21:21:32 2015 -0700

    Merge pull request #2380 from Maxwe11/fix-2368
    
    Address PR feedback for System.Net.WebHeaderCollection

[33mcommit 3101b12d30dfbe7eb17f774ff52d263ca8b4b8a7[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Aug 25 23:14:46 2015 -0400

    Bring line coverage of TelemetryListener to 100%

[33mcommit a04a9a69a42d66bd567aeea7314cf8c2b3e1e158[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Aug 25 23:13:21 2015 -0400

    Fix several bugs in TelemetryListener
    
    - Disposal of a subscription to AllListeners would fail if the subscription wasn't the most recent.  The search was looking for the wrong object.
    - Double disposal of a subscription to AllListeners would result in OnCompleted for that observer being called multiple times, and in some cases could result in a NullReferenceException.
    - Double disposal of a subscription to a TelemetryListener or to AllListeners would trigger a Debug.Assert
    - Several fields that could have been readonly weren't.

[33mcommit 96acd5718df9b19b562501eb978c967247fce931[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Aug 25 22:23:01 2015 -0400

    Fix build warning and project.lock.json locked status
    
    The project.json file for System.Diagnostics.Tracing.Telemetry was missing
    a reference for System.Globalization v4.0.10, which was causing a build
    warning.  The project.lock.json file also had locked set to false rather
    than true, causing it to get edited during builds on dev machines.

[33mcommit 5826a865d91e84cb63ae4bfced00ca5aa04a5153[m
Merge: 6ce0b87 ad57408
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 25 21:26:29 2015 -0400

    Merge pull request #2975 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 6ce0b870e4335de93bd60c856d47652f1f4b39c2[m
Merge: 349f602 cc3d42b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 25 21:17:13 2015 -0400

    Merge pull request #2952 from stephentoub/cancelable_pipes_readwrite
    
    Make PipeStream.ReadAsync on an async stream cancelable on Unix

[33mcommit ad5740849487437b4a7298a2eb8cdc5a78cab174[m
Author: Vance Morrison <vancem@microsoft.com>
Date:   Tue Aug 25 17:23:23 2015 -0700

    Change version number to 4.0.0
    
    [tfs-changeset: 1518740]

[33mcommit 349f60255f0c97f4dda0088a1a8591e973d10fee[m
Merge: fbabfef f2b4243
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 25 19:51:38 2015 -0400

    Merge pull request #2971 from mellinoe/harden-vector-count
    
    Harden implementation of Vector<T>.Count

[33mcommit fbabfef652919fbeeb7d5d7bce627205af49448a[m
Merge: 5fb105b e74c56a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 25 19:46:04 2015 -0400

    Merge pull request #2966 from JonHanna/import_contains_defaultifempty
    
    Fully import Contains, DefaultIfEmpty, Distinct and SequenceEquals tests

[33mcommit 5fb105b96212a7f0dcffa74ec5d5b6b91aa232c5[m
Merge: dcf6118 9a2642d
Author: Vance Morrison <vancem@microsoft.com>
Date:   Tue Aug 25 15:42:11 2015 -0700

    Merge pull request #2969 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit d8ad999be9a204154b3cfc52759641a4323deb19[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Wed Aug 26 00:51:06 2015 +0300

    Address PR feedback for System.Net.WebHeaderCollection
    - HeaderParser delegate replaced with Func<string, string[]>;
    - Initialization in static constructor replaced with field initialization;
    - Improved parsing of multi values (eliminated array allocation and possible
    allocations when string trimmed);
    - CaseInsensitiveAscii comparer replaced with StringComparer.OrdinalIgnoreCase;
    - HeaderInfoTable class has been made static;
    - Nongeneric collection replaced with generic.

[33mcommit f2b42437702d8468dfdad2b95111d49fb02913e9[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Aug 25 12:48:57 2015 -0700

    Harden implementation of Vector<T>.Count
    
    Currently, the method as implemented does not work if a debug build of a
    user program calls Vector<T>.Count when run against the Release version of
    System.Numerics.Vectors.dll. Because the user code is unoptimized, the IL
    verison of Vector<T>.Count is run, but, since System.Numerics.Vectors.dll
    is optimized, the internal call to Vector.IsHardwareAccelerated returns
    true, throwing the NotSupportedException, which was intended to only be
    thrown when called via reflection. This essentially makes it impossible to
    call the method in Debug-mode user code, when running with RyuJit.
    
    This change hardens the implementation, fixing the above issue. In
    addition, it also lets users call the method via reflection (if they
    wanted to), and also has the nice effect of allowing its use in the
    Debugger.
    
    We use a simple helper struct which has two fields, the Vector<T> whose
    size we want to measure, followed a byte field. We just grab the address of the
    byte field, and compute its difference from the address of the vector's
    first byte element. We then divide that total vector size by the size of
    T. This should be robust to future changes, and should accomodate
    differing Vector sizes across SIMD instruction sets. Since we are just relying
    on the layout of the struct, the result should remain correct, as new SIMD
    register sizes will dictate a new size for Vector<T>, and therefore a new
    layout for our helper structure.
    
    I've added a test case that simply verifies the value returned from
    calling Vector<T>.Count matches the value returned from a regular property
    access.

[33mcommit dcf6118a4ae69b146d585b01432ef8cba580ee96[m
Merge: 3abe56e da4ed3c
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Tue Aug 25 14:34:19 2015 -0700

    Merge pull request #2896 from sokket/readdir
    
    Switching readdir calls over from directly pinvoking the OS calls per-platform to pinvoking the PAL

[33mcommit 3abe56ede137f1044fb98f3ceb6030ab707cb24a[m
Merge: 3e308aa 2d2a170
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 25 17:25:32 2015 -0400

    Merge pull request #2970 from Sridhar-MS/disable-gc-test
    
    Disable GC tests failing in CI. Tracked by issue #2938.

[33mcommit da4ed3caa56aa0bd5080f2bc5c2126b3debf2c6d[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Mon Aug 17 15:53:57 2015 -0700

    Switching readdir calls over from directly pinvoking the OS calls
    per-platform to pinvoking the PAL. This will make it easier for
    us to manage the slight differences in readdir and dirent.

[33mcommit 2d2a170618c2f55f4edce705143f2d1b5de42e71[m
Author: Sridhar Periyasamy <sridhper@microsoft.com>
Date:   Tue Aug 25 13:08:05 2015 -0700

    Diable GC tests failing in CI. Tracked by issue 2938.

[33mcommit 3e308aa0583e57a7b4e0376990c138956770071c[m
Merge: 1bb58ab f0f97ff
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 25 16:04:14 2015 -0400

    Merge pull request #2960 from Sridhar-MS/module-tests
    
    Add unit tests for System.Reflection.Module class.

[33mcommit cc3d42b4ce1ab884d47db685a97e097f5295fd4a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Aug 24 15:25:02 2015 -0400

    Enable and add more pipes tests

[33mcommit 4101815cca0a4138433c22e995199ee3dce931f0[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Aug 24 15:24:18 2015 -0400

    Implement cancelable ReadAsync operations
    
    With the infrastructure changes out of the way, we can now add more robust cancellation to ReadAsync operations.
    
    Today when a CancellationToken is passed to ReadAsync, we do an initial check for whether cancellation has been requested, and then we call read, which will block until data is available, in a non-cancelable fashion.
    
    This change makes that read cancelable.  If a cancelable token is provided, we create an anonymous pipe for the operation.  One end of the pipe is written to when cancellation is requested, and rather than doing a blocking read operation, we instead do a blocking poll operation that includes both the underlying file descriptor as well as the read end of this special one-time pipe.  If the poll wakes up because there's data available to read, we read.  If it wakes up because the cancellation pipe was signaled, we throw an OperationCanceledException.
    
    We unfortunately can't enable WriteAsync cancellation in the same way, but luckily WriteAsync is less likely to block.

[33mcommit 2efb8f8ed0544d55b160bb17adc464054b5e93e9[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Aug 24 12:43:39 2015 -0400

    Refactor PipeStream on Unix for isAsync
    
    Right now the PipeStream implementation on Unix implements isAsync by delegating to the base Stream class, the same as it does for !isAsync.  This limits our ability to do anything "special" in the async implementation, such as supporting cancellation more fully.  This commit refactors things to avoid depending on the base Stream when isAsync is true (we still depend on it when isAsync is false, as we do on Windows).
    
    In doing so, we clean up the Windows implementation as well, moving more shared logic into PipeStream.cs and out of .Windows.cs/.Unix.cs.  This helps make the *Core methods very focused on their specific task.  It also fixes an issue that existed in the Unix implementation but was solved in the Windows implementation.  On Windows, we ensure that if you create the stream as synchronous, you always go through the sync methods: if you call the Read/Write methods, they do the writing synchronously, and if you call the ReadAsync/WriteAsync methods, they use the base Stream class to queue work items that use Read/Write.  If you create the stream as asynchronous, you always go through the async methods: if you call ReadAsync/WriteAsync, you get the specialized async functionality, and if you call Read/Write, they delegate to the ReadAsync/WriteAsync functions and block waiting for them to complete.  On Unix, we weren't doing this, which leads to a problem if you mix/match Read/Write with ReadAsync/WriteAsync methods: on Windows on an async stream, that works fine, but on Unix you'd end up with potentially concurrent calls to Read/Write, which is not safe and can end up corrupting the instance.  This change modifies the Unix implementation to use the same scheme as on Windows, such that you can't end up in this situation on an async stream.

[33mcommit 67df41b0e710d0275b019321be2a62ae2675420c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Aug 24 11:21:17 2015 -0400

    Consolidate Read/Write argument checks
    
    Add a few helpers and use them rather than repeating these checks everywhere

[33mcommit 9d213007ebee9b319461e2b9ae8b236f26096003[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Aug 24 11:04:05 2015 -0400

    Allow additional argument to SysCall
    
    Will be needed to pass in a cancellation file descriptor to enable cancelable async calls.
    
    This also changes the ```result < 0``` check to be the stricter ```result == -1```, because we'll need to be able to pass out another negative sentinel value to indicate when cancellation occurred.

[33mcommit 048693c74a02db81ea995eb9498d9b3b038ec3b8[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Aug 24 10:52:34 2015 -0400

    Avoid array allocation in AnonymousPipeServerStream.Create on Unix
    
    Use a two-int array on the stack rather than on the heap.
    
    Also take advantage of the now-internal ctor on SafePipeHandle to make this a bit more reliable in the face of OOMs

[33mcommit 1bb58ab1e9c21f4017f794ad305442a168de161c[m
Merge: c8d942b 6103236
Author: Vance Morrison <vancem@microsoft.com>
Date:   Tue Aug 25 12:55:21 2015 -0700

    Merge pull request #2932 from vancem/master
    
    Implement TelemetrySource/TelemetryListener for Rich Diagnostics in ASP.NET 5

[33mcommit 9a2642d41559396fdee2b9d5ca1c7fce8205e451[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Tue Aug 25 12:32:15 2015 -0700

    Expose TypeInfo.IsCOMObject on ProjectN. I have also added some additional tests and put gates in place to ensure that the tests do not run on Win7 (WinRT types can't be loaded on win7).
    
    [tfs-changeset: 1518607]

[33mcommit c8d942b17a3d3c50e357440eb08d5b53bcbc8aff[m
Merge: 366af5b 84cbe9a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 25 15:08:40 2015 -0400

    Merge pull request #2967 from davidsh/nameresolution
    
    Add System.Net.NameResolution to README.md

[33mcommit 6103236606b384358aac34b731d7c5f4037d672f[m
Author: Vance Morrison <vancem@microsoft.com>
Date:   Tue Aug 25 11:46:48 2015 -0700

    Make stress test less stressful while we investigate non-deterministic failures.

[33mcommit f0f97ffbf5b3bbb23f8213f6dae0c0370fa10ef2[m
Author: Sridhar Periyasamy <sridhper@microsoft.com>
Date:   Tue Aug 25 11:23:18 2015 -0700

    Address pull request feedback
    
    - Use linq instead of iterations.
    - Spelling fixes etc.

[33mcommit 6af6f882123d9e554e6d732e7beba2d845c14dad[m
Author: Vance Morrison <vancem@microsoft.com>
Date:   Mon Aug 24 18:21:52 2015 -0700

    Changed All Listeners from an event to a IObservable
    
    Review feedback indicated that the AllListeners should not be an event
    because it does not follow the event pattern.   Instead we make it an
    IObservable,

[33mcommit a218b708d590ed6b3823a13b8113aad6e81e44c8[m
Author: Vance Morrison <vancem@microsoft.com>
Date:   Mon Aug 24 14:01:26 2015 -0700

    'added' volatile, actually that causes a build break (on Mac) because of a warning.   For now leaving it out with a TODO

[33mcommit 83f54f6a6771baacaee8e14fffbff4d294189498[m
Author: Vance Morrison <vancem@microsoft.com>
Date:   Mon Aug 24 10:47:39 2015 -0700

    Took a real dependency on System.Diagnostics to get Debug.Assert
    Move Name and adds space before it

[33mcommit 848470c8f7723a586bfde57d919a342988b5d716[m
Author: Vance Morrison <vancem@microsoft.com>
Date:   Mon Aug 24 09:59:23 2015 -0700

    Feedback from pull request.  Mostly comment changes also
    Made dispose itempotent
    Fix 'assert'.  in TelemetryListener.Dispose()
    Fixed bug in assertion checking (which caused it not to do any real checking).

[33mcommit e1b56216754d7a55f804190cb0cdffb5d23f420f[m
Author: Vance Morrison <vancem@microsoft.com>
Date:   Fri Aug 21 16:16:47 2015 -0700

    Applied code formatter/scruber

[33mcommit 605870f9ffdfe675c4e64feaecfd1f4bb48b2739[m
Author: Vance Morrison <vancem@microsoft.com>
Date:   Fri Aug 21 08:56:26 2015 -0700

    Initial implementation.
    This should be done except for bugs, and framework feedback

[33mcommit 84cbe9a027ab08e0b7be173783b54b2a90cff97d[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Aug 25 10:50:35 2015 -0700

    Add System.Net.NameResolution to README.md

[33mcommit e74c56af25d28c72c7e964e711cde42568481259[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Aug 25 18:43:35 2015 +0100

    Fully import Contains, DefaultIfEmpty, Distinct and SequenceEquals tests
    
    Convert Contains, DefaultIfEmpty, Distinct and SequenceEquals tests imported
    in #2874 into a more directly XUnit-ian style.
    
    Renamed tests (and file) for SequnceEqual from EqualAllTests to
    SequenceEqualTests
    
    Comment on Contains2e() suggests it intended to use a range repeat than a range
    as it did, so altered accordingly in PresentMultipleTimesNotICollectionT(). The
    case it had been covering is already covered by
    FirstElementMatchesNotICollectionT()
    
    Added throw-on-null tests for DefaultIfEmpty, Contains and SequenceEqual

[33mcommit 366af5bad1e182c2d193fb7ef8cf90abe8fb4a17[m
Merge: 687a55e a9a1b5e
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Aug 25 10:19:43 2015 -0700

    Merge pull request #2524 from bbowyersmyth/NetRequests
    
    Reduce HttpWebResponse header allocations

[33mcommit 687a55e58ab232e6c0846b569503f3179cef149e[m
Merge: 6532e8e 35f2712
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Tue Aug 25 09:27:20 2015 -0700

    Merge pull request #2964 from AtsushiKan/cngovercsp
    
    Issue#2930: Make GetRSAPrivateKey prefer CNG

[33mcommit 6532e8e080ef9322995c8aab168e0c0b6847302c[m
Merge: 16abb16 9fbce89
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 25 11:43:33 2015 -0400

    Merge pull request #2957 from stephentoub/hide_libs_cc
    
    Hide several test libs from code coverage

[33mcommit 16abb16b78d5374fec7e9fb01973fcb5d5feb99c[m
Merge: ae38ede de05c86
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Aug 25 08:40:54 2015 -0700

    Merge pull request #2493 from justinvp/http_preamble
    
    Avoid unnecessary byte[] allocations in HttpContent

[33mcommit 35f27120bfc451458cb90f64dbc1c73de8c42f8c[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Tue Aug 25 08:21:16 2015 -0700

    Issue#2930: Make GetRSAPrivateKey prefer CNG
    
    This brings these two extension methods into the age
    of CNG:
    
    - GetRSAPublicKey() - now returns an RSACng object
      rather than an RSACryptoServiceProvider object.
    
    - GetRSAPrivateKey() - returns an RSACng object
      if a stored CNG key is available for the certificate's
      public key. Prior behavior was that it blindly
      asked CAPI to open a CNG KSP name and key name, and
      dumped the resulting CryptoException into the caller's
      lap.

[33mcommit ae38ede7227a61f7415edbdd1cfe1c956b928366[m
Merge: b833ef3 3476a52
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 25 08:31:14 2015 -0400

    Merge pull request #2943 from JonHanna/import_aggregate_tests
    
    Fully import Average and Aggregate Tests

[33mcommit 99c911b0ad702b9c433768d5d2b35ee0186ec0ca[m
Author: Vijay Kota <vijayko@microsoft.com>
Date:   Tue Aug 25 17:12:50 2015 +0530

    Cleanup curl handles before marking task completion

[33mcommit de05c8642746842f61cb063c3d43976f7ee00540[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Fri Jul 24 10:58:33 2015 -0700

    Avoid unnecessary byte[] allocations in HttpContent
    
    HttpContent.ReadAsStringAsync() has a bunch of calls to
    Encoding.GetPreamble() as part of its encoding detection.
    GetPreamble() creates a new byte[] each time it is called.
    These byte[] allocations can be avoided. Also, as part of this,
    cleaned up and improved the performance of the encoding detection.

[33mcommit 9fbce8983e1e48e8da953ede6772844a38fb2542[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Aug 24 18:52:30 2015 -0400

    Hide several test libs from code coverage

[33mcommit 3476a521b0a66e973c55d1bb39965b9bc0094457[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Aug 25 01:18:35 2015 +0100

    Fully import Average and Aggregate Tests
    Convert Average, Aggregate tests imported in #2874 into a more directly
    XUnit-ian style.

[33mcommit fdbabdf31303a9c0b317cdcbacfde9d7fc03b874[m
Author: Sridhar Periyasamy <sridhper@microsoft.com>
Date:   Mon Aug 24 17:14:35 2015 -0700

    Add unit tests for System.Reflection.Module class.

[33mcommit 4ae66173c49d5d83cfa6a7abf466c73ea9fddf09[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Aug 25 00:55:29 2015 +0100

    Consistently Throw NotSupportedException on Enumerator Reset
    
    Fixes #2879
    
    Have Enumerable.Iterator<TSource>'s implementation of IEnumerator.Reset throw
    NotSupportedException instead of NotImplementedException as both more
    appropriate in itself, and more consistent with other IEnumerator.Reset
    implementations.

[33mcommit 6a0beb6b176ad555abe6ba7d9992245400d8f442[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Mon Aug 24 16:31:16 2015 -0700

    Add coverage to DriveInfo tests
    
    FileSystem.DriveInfo.dll coverage raised to at or near testable maximum. Added several scenarios that weren't present before and also split up Volume Label setting/getting to several tests so that errors can be better diagnosed.

[33mcommit b833ef3edd89a50657de0abaa4f671f2e1b06d5c[m
Merge: 06f4101 a284ccd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 24 18:24:27 2015 -0400

    Merge pull request #2955 from bartonjs/disable_intermittent_tests
    
    Disable intermittently failing Windows X509 tests

[33mcommit 06f41011b6d5c3c234a0526aa7a89fb47d901686[m
Merge: 7b2ed73 7fe841d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 24 18:20:23 2015 -0400

    Merge pull request #2954 from AtsushiKan/dangerousaddref
    
    Add DangerousAddRef/Release guard.

[33mcommit bb34d5a458613faa39d3808a8a352e62e3bcf52f[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Aug 21 17:06:40 2015 -0400

    Add more tests for FileStream
    
    - Mainly, I added several tests (with lots of theory-based parameterized inputs) to stress WriteAsync: many concurrent writes, long chains of writes, etc., for various size inputs and buffers, async vs not, etc.
    - There were multiple variations on Flush tests based on whether to use Flush(), Flush(false), or False(true).  I combined these all into single theories.
    - I then added some more Flush tests for some missing cases highlighted by code coverage, e.g. flushing reads.
    - I then duplicated these tests for FlushAsync, and added some additional tests specific to FlushAsync, e.g. cancellation.
    - I added a few tests for pipes.

[33mcommit f646fa6836b13154c3f52254cce5dcb5ab640d74[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Aug 21 17:02:03 2015 -0400

    Fix buffering changes to FileStream WriteAsync
    
    - We now properly handle the case where multiple overlapped writes are issued while a flush is in progress (offsets were being handled incorrectly).
    - We now correctly optimize buffering for the common case where a write completely fills the buffer, such that we now do a single write for that buffer instead of doing a write for the almost full buffer and one for the additional data.
    - We now have some additional optimizations to avoid creating WhenAll tasks if it's not necessary.
    - The flush and write tasks are not appropriately coordinated in all cases.

[33mcommit b69caa929d3cb3b87574ee31a651d799f61e3a75[m
Author: tymlipari <tym@tymlipari.com>
Date:   Thu Aug 13 22:07:08 2015 -0700

    Handle internal overflow of the write buffer in WriteAsync by introducing new cases:
    
    1) Internal buffer overflows, but write can fit in next buffer - Fill the existing buffer, copy the remaining data into a new buffer, and flush the original to disk
    
    2) Internal buffer is non-empty, overflows, and the remaining data won't fit in a second buffer - Chain the flush operation to a second write operation which writes the entire incoming block directly to disk.
    
    Additionally, adds a new unit test to ensure the different buffering cases are being covered.

[33mcommit 7b2ed730d8326866a5649b94332c7edd8886cc61[m
Merge: d3e87cb 4981e64
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Aug 24 13:41:17 2015 -0700

    Merge pull request #2467 from justinvp/http_objectcollection
    
    Avoid internal enumerator allocations in HttpClient

[33mcommit d3e87cb4393aada1cce1ff097fcbaf84a960d7dd[m
Merge: 5fe79c9 84c56f4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 24 16:40:33 2015 -0400

    Merge pull request #2950 from JonHanna/import_repeat_range
    
    Fully import Range, Repeat & Reverse tests

[33mcommit a284ccde90965af198586e757082a990914e883f[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Aug 24 13:37:05 2015 -0700

    Disable intermittently failing Windows X509 tests

[33mcommit 5fe79c9b93fc6284d848b0a2d17cef3a7d67b39f[m
Merge: f241c2a e9f569b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 24 16:31:02 2015 -0400

    Merge pull request #2946 from JonHanna/import_cast_oftype
    
    Fully import Cast and OfType Tests

[33mcommit 7fe841dd76f4f406b3020e8760e6c7aab3f52664[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Mon Aug 24 13:24:21 2015 -0700

    Add DangerousAddRef/Release guard.

[33mcommit f241c2a3677957f47eda0b1958b488e3597862a2[m
Merge: 6941118 5aa482e
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Mon Aug 24 13:02:48 2015 -0700

    Merge pull request #2951 from AtsushiKan/ecdsaopenssl
    
    Implement ECDsaOpenSsl

[33mcommit 5aa482e602f93d3f72d69b91b46efb9aca3fd1bc[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Mon Aug 24 12:01:30 2015 -0700

    Implement ECDsaOpenSSL.

[33mcommit 694111812623091d2ea5801f22cf2cfe9a320cc1[m
Merge: e296c69 94ba7b8
Author: Ian Hays <ianha@microsoft.com>
Date:   Mon Aug 24 11:27:55 2015 -0700

    Merge pull request #2906 from ianhays/compression
    
    Added ZLib decompression support to DeflateStream

[33mcommit e296c69314d06af2bc6f8e8fea711a374cb1deab[m
Merge: 28aaab7 a75896b
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Aug 24 10:19:37 2015 -0700

    Merge pull request #2561 from justinvp/httpmethod
    
    Optimize HttpMethod.GetHashCode()

[33mcommit 94ba7b83fcf5753437cc50289d95a9e6ff8148d5[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Aug 20 16:50:53 2015 -0700

    Added ZLib decompression support to DeflateStream
    
    The DeflateStream class currently uses ZLib for compression (if available) but doesn't use ZLib for decompression. This commit adds support to use either ZLib or the Managed implementation for decompression (inflation).
    
    - Roughly a 3X speedup for decompression when using the ZLib library instead of the Managed implementation!
    - Resolves #2024; Added ZLib support in InflaterZLib.cs
    - Inflater.cs (the old managed implementation) is renamed to InflaterManaged.cs
    - Extracted interface of necessary Inflater methods into the IInflater interface from which InflaterManaged and InflaterZLib inherit.
    - Removed the SetFileFormatReader functions and changed the code to instead set the formatreader at initialization time, avoiding the need to create->destroy->create.
    - Changed inputBuffer in SetInput for DeflateZLib and InflateZLib to use the fixed keyword instead of an extra GCHandle allocation.
    - Added a test for reading sequentially from a DeflateStream created with an underlying MemoryStream.

[33mcommit 84c56f43ef853bae18fb63bff799dca40506c45e[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Mon Aug 24 15:44:11 2015 +0100

    Fully import Range, Repeat & Reverse tests
    
    Convert Range, Repeat & Reverse tests imported in #2874
    into a more directly XUnit-ian style and merge with existing tests.
    
    A few dropped as duplicates of those already there.

[33mcommit e9f569b4d6b79ce5d7be3486b62293eab01caaa1[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Mon Aug 24 14:00:27 2015 +0100

    Fully import Cast and OfType Tests
    
    Convert Cast and OfType tests imported in #2874 into a more directly
    XUnit-ian style.

[33mcommit 28aaab70cfc4a2d1fb60c75ac977be117e3f7c0c[m
Merge: ccc6f41 6dfb3c9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 24 08:56:48 2015 -0400

    Merge pull request #2945 from hackcraft/import_count_tests
    
    Fully import ‎Count and LongCount Tests

[33mcommit 6dfb3c9cbca20b75caf03f3f13b904746bc0766f[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Mon Aug 24 12:59:53 2015 +0100

    Fully import ‎Count and LongCount Tests
    
    Convert ‎Count and LongCount tests imported in #2874 into a more directly
    XUnit-ian style.

[33mcommit bf40c3f442a59616f03871057633344d9230d4b6[m
Author: Vijay Kota <vijayko@microsoft.com>
Date:   Mon Aug 24 14:40:40 2015 +0530

    Fix an assert in CurlHandler multi handle release path
    
    - If a timeout happens, the socket fd is not removed from _fdSet. When
      SafeCurlMultiHandle is finalized, it checks if _fdSet is empty and
      this assertion was failing. So ensuring that all codepaths of
      EndRequest result in cleanup from _fdSet

[33mcommit ccc6f41c68b800a3641005611cdf29afe49063b7[m
Merge: cf0516e cee8e6d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Aug 23 22:37:40 2015 -0400

    Merge pull request #2939 from hackcraft/toxxx_tests
    
    Fully import ToDictionaryTests, ToLookupTests & ToSequenceTests

[33mcommit cee8e6d04bc5fde2dc7ca5824ba773b991224437[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Sun Aug 23 13:31:54 2015 +0100

    Fully import ToDictionaryTests, ToLookupTests & ToSequenceTests
    
    Convert ToDictionary, ToLookup and AsEnumerable tests imported in #2874 into a
    more directly XUnit-ian style.
    
    Merge ToDictionary with those already present.
    
    Changed AsEnumerable tests to explicitly check for equality with the source, as
    AsEnumerable() should result in that by definition.

[33mcommit cf0516ebb8437b05751774c25e08ef8a4bef8db3[m
Merge: d82bf2b 7922626
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Aug 23 15:37:50 2015 -0400

    Merge pull request #2940 from stephentoub/disable_gc_test
    
    Disable failing GC test

[33mcommit c4687666a7e65c6e4b28bc9cff53a5531f139f46[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Aug 23 14:36:32 2015 -0400

    Fix IsTransparentProxy check in Microsoft.CSharp
    
    Fixes https://github.com/dotnet/coreclr/issues/1425

[33mcommit 79226265fdf28540552740fe4bc005d5df03d1eb[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Aug 23 14:11:49 2015 -0400

    Disable failing GC test

[33mcommit d82bf2bd95bd888950ae531fbaef78f4d9b45c44[m
Merge: 36969f1 f40f0d0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Aug 22 22:29:36 2015 -0400

    Merge pull request #2933 from hackcraft/concat_union_etc_tests
    
    Fully import Concat, Except, Intersect & Union Tests

[33mcommit 36969f10c1aa1787d0c19fd488c1c552ad074f62[m
Merge: db6a242 a2cef28
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Sat Aug 22 15:22:35 2015 -0700

    Merge pull request #2912 from bartonjs/unix_pkcs7
    
    Add support for importing PKCS7 files as X509Certificate2Collections.

[33mcommit a2cef285f05061860ad2863aad45ef3a1edf2d93[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Aug 20 21:39:11 2015 -0700

    Add support for importing PKCS7 files as X509Certificate2Collections.
    
    Several tests were added for X509Certificate2Collection Import, particularly regarding PKCS#7 content, and the new and existing tests were extracted to CollectionImportTests.
    
    A few tests were added which have no file contents yet, issue 2635 tracks getting an updated testdata package to test reading the files by name.  The tests were verified manually, and in general have their file contents included in the TestData class anyways.
    
    Reading a PKCS#7 blob from X509Certificate2 will throw a CryptographicException whether or not the file is signed, issue 2910 tracks making it follow the Windows/MSDN behavior on the success path as well (there is no test asset available currently to see the success path on Windows).
    
    All PKCS file structure interpretation was moved to PkcsFormatReader, and the functions were consolidated across the matrix of [File vs Blob] x [Collection vs Single].  This should prevent the behaviors from getting out of sync.
    
    X509Certificate2Collection.Import now also works for X509-DER and X509-PEM inputs, matching the Windows behavior.

[33mcommit f40f0d0cc6b6c03239e26a91d63bcc91f5b17693[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Sat Aug 22 21:58:09 2015 +0100

    Fully import Concat, Except, Intersect & Union Tests
    
    Convert Concat, Except, Intersect & Union tests imported in #2874 into a more
    directly XUnit-ian style.

[33mcommit db6a2426a69fd88edb4241b32973c4099bd830eb[m
Merge: bcc2011 261e524
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Aug 22 14:35:49 2015 -0400

    Merge pull request #2927 from hackcraft/first_last_tests
    
    Fully import First/Last First/LastOrDefault tests from scripted import

[33mcommit bcc2011be10c448a0ca43c8b65d93bf99d8b2d30[m
Merge: f4adea7 86528ec
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 21 22:01:16 2015 -0400

    Merge pull request #2908 from mellinoe/resourcemanager-tests
    
    Add basic System.Resources.ResourceManager tests

[33mcommit f4adea75351e977986e4df362b427f499e74b4e7[m
Merge: 0c6cbd0 e496e40
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 21 22:00:22 2015 -0400

    Merge pull request #2918 from hackcraft/to_list_tests
    
    Fully import ToArray and ToList tests from scripted legacy import.

[33mcommit 0c6cbd08fea8b4c1d33e303fbf0254f3513dbd32[m
Merge: 0edb543 77dc3a6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 21 21:58:44 2015 -0400

    Merge pull request #2921 from hackcraft/all_and_any_tests
    
    Fully import Any and All tests from scripted legacy import.

[33mcommit 0edb5430c899f369897dcf322d7e2e3a0194800a[m
Merge: 57c5ccb 3f9f1f7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 21 21:58:22 2015 -0400

    Merge pull request #2917 from hackcraft/import_zip_legacy_tests
    
    Fully import Zip Linq tests from scripted legacy import

[33mcommit 57c5ccbb3be6860811a03074cfb85716d4c54341[m
Merge: 1ec6e8f 275f109
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Fri Aug 21 16:55:23 2015 -0700

    Merge pull request #2931 from Priya91/refemitcoverage
    
    Increase System.Reflection.Emit.ILGeneration test coverage.

[33mcommit 1ec6e8fedd8dee278f3c51a0c8cfd69d4dedc234[m
Merge: bacf92e edda03a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 21 17:52:36 2015 -0400

    Merge pull request #2924 from stephentoub/fix_tasks_outerloop
    
    Fix deadlocks in outer loop task tests

[33mcommit bacf92e65b7f60e6784a81c1a7f5f2033d4bbd2d[m
Merge: 28ace50 5bb3c35
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 21 16:39:30 2015 -0400

    Merge pull request #2922 from Maxwe11/process-improvements
    
    Improve NtProcessManager.GetModuleInfos

[33mcommit 261e52449d284bc7febe2d7621858c7af9f6d3c0[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Aug 21 20:13:52 2015 +0100

    Fully import First/Last First/LastOrDefault tests from scripted import
    
    Convert First, Last, FirstOrDefault & LastOrDefault tests imported in #2874
    into a more directly XUnit-ian style.
    
    Added a few more cases (some more types on some tests, and the opposite
    predicate on tests on empty sequences.

[33mcommit 28ace508a1a36ecbc03251010a6bec393aae6815[m
Merge: 70eaf99 34648f5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 21 15:07:10 2015 -0400

    Merge pull request #2919 from Maxwe11/toarray
    
    Use List<T>.ToArray instead of CopyTo

[33mcommit 70eaf996fcb96406e13ae91988b8fc4a52c10cf8[m
Merge: bb750e9 34fe339
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 21 14:02:18 2015 -0400

    Merge pull request #2900 from stephentoub/fix_process_exited_test
    
    Fix Process TestEnableRaiseEvent race condition

[33mcommit 5bb3c35c4881f355c3be59ef921466aba5a57285[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Fri Aug 21 20:22:18 2015 +0300

    Fix erroneous Capacity of StringBuilder passed to interop

[33mcommit 86528ec6e7bdd2adcd338632c413f3da888b7578[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Aug 20 17:04:44 2015 -0700

    Add basic System.Resources.ResourceManager tests

[33mcommit bb750e93c44bede29e77cfa42914dc30d6911eb6[m
Merge: 7645db0 68e06f1
Author: Eric Mellino <erme@microsoft.com>
Date:   Fri Aug 21 10:00:17 2015 -0700

    Merge pull request #2923 from stephentoub/fix_taskcancelwait_test
    
    Fix TaskCancelWaitTest to not randomly fail

[33mcommit 7645db05b80fd8decb079aa21a28a9cc0211d96e[m
Merge: 5a25cf9 e40d701
Author: Daniel Plaisted <dsplaisted@gmail.com>
Date:   Fri Aug 21 09:30:06 2015 -0700

    Merge pull request #1851 from dsplaisted/AddSystemComposition
    
    Add System.Composition

[33mcommit 204da2bc9aa1a7238d346a3afada878d7d245b09[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Fri Aug 21 15:17:46 2015 +0300

    Improve NtProcessManager.GetModuleInfos
    - StringBuilder allocation moved out of loop;
    - Win32Exception will be allocated and thrown only if it should be propagated to the end user.

[33mcommit edda03a3027c3aaee674156fdbbe70f1b4ce27c0[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Aug 21 12:10:45 2015 -0400

    Fix deadlocks in outer loop task tests
    
    The TaskRunSyncTests tests are creating a custom TaskScheduler that spins up a bunch of threads, and then when the scheduler is disposed, it prevents additional tasks from being queued, empties the queue of remaining tasks, and waits for its threads to complete (meaning waiting for any currently running tasks to exit).
    
    A few of the TaskRunSyncTests tests are creating tasks that, when executed, create their own scheduler to run a child task on.  This scheduler needs to be disposed (because it's another of these custom TaskSchedulers that needs to be shut down), so a continuation off of the child task is created to dispose of the child scheduler.
    
    There are a two problems here.
    - By the time this continuation is queued, the parent scheduler may have already had shutdown requested, in which case the continuation can't be queued to it, and the scheduler can't be shutdown.  Fix: Schedule the continuation to the thread pool rather than to the parent scheduler.
    - The child scheduler is being created to target the parent scheduler.  I don't know if that was by design or if it was an accident, but it's a recipe for deadlock if any users of these tests were to run concurrently, as then multiple child schedulers expecting a specific number of workers might get fewer than that.  More importantly, this contributes to the previous issue: because the child scheduler was created on top of the parent, the parent couldn't shut down its threads until the child shut down its threads, but the child didn't know to shut down its threads because the continuation scheduled to the parent couldn't run.  Fix: Have the schedulers always target the thread pool rather than targeting the parent.

[33mcommit 68e06f138a0df98b2bb245ee375f6f10a643a774[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Aug 21 11:02:46 2015 -0400

    Fix TaskCancelWaitTest to not randomly fail
    
    This whole set of TaskCancelWait tests is a bit of a mess, and it's not clear exactly what behavior(s) it's trying to test.  That said, this commit is a small tactical fix to address the sporadic failures we've seen in CI.  I was able to repro it only once out of every 4K-5K runs, and only when there was heavy load on the machine.
    
    The test is using a CountdownEvent to signal when it's done creating all of the tasks in the "task tree" (where tasks create other tasks).  The main test thread waits for all of the tasks to be created by waiting on that event.  However, it also tries to enable concurrent cancellation of that tree creation, and as part of that it tries to force the CountdownEvent down to 0.  This is inherently racy, as other tasks could concurrently be trying to Signal the event as well.  In an apparent attempt to "solve" this race condition, the test is guarding calls to Signal with calls to IsSet, but that only reduces the window of opportunity for an error.  As such, sporadically one of the tasks will try to Signal the event when it's already 0, causing the task to fault with an exception.  The test results verification is then checking whether the task completed, and is confirming that it either has the expected computed result or was canceled, but isn't factoring in the possibility that the task failed.
    
    The tactical fix is to just add that check for failure as well (the longer term fix is probably to figure out the intended purpose of this test and either rewrite it or delete it).

[33mcommit 77dc3a6e313e20205a4422734037a1f36ac0537a[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Aug 21 15:35:06 2015 +0100

    Fully import Any and All tests from scripted legacy import.
    
    Convert Any and All tests imported in #2874 into a more directly
    XUnit-ian style.

[33mcommit e40d701d012d911419fe0037f0ec3b76a15b489a[m
Author: Daniel Plaisted <daplaist@microsoft.com>
Date:   Fri Aug 21 07:49:36 2015 -0700

    Apply code review feedback for System.Composition
    
    * Use ReaderWriterLockSlim
    * Move duplicated code into common folder
    * Use EmptyArray<T> instead of new T[0]
    * Fix CLS Compliance error in System.Composition test library
      (See dotnet/roslyn#4293: CLS Compliance warning CS3016 is reported on
      non-public members)
    * Rename SilverlightTraceWriter.cs to DebuggerTraceWriter.cs
    * Use CommonPath build property to include common files
    * Remove unnecessary AssemblyInfo.cs files
    * Remove unused private constant in System.Composition.AttributedModel

[33mcommit c0c4af040eaf483a1f994c2a1d0d455b6bae7cdd[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Fri Jan 16 16:01:41 2015 -0800

    Add System.Composition source code, update projects to build in corefx

[33mcommit e496e4076b1a309b5759a40a88a87cf319b12137[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Aug 21 13:07:08 2015 +0100

    Fully import ToArray, ToList and Empty tests from scripted legacy import.
    
    Converts the ToArray, ToList and Empty tests imported in 2874 into a more directly
    XUnit-ian style, and merges them with the existing tests.
    
    ‎Of the Empty tests, one was already covered, and the others could be expanded upon.

[33mcommit 3f9f1f7df8cf4840bffa9a55e80f80bb81cee539[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Aug 21 12:15:39 2015 +0100

    Fully import Zip Linq tests from scripted legacy import
    
    Converts the Zip tests imported in 2874 into a more directly XUnit-ian style.

[33mcommit 34648f57f9d32d0ddeac96edb28a581acd80105c[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Fri Aug 21 16:00:41 2015 +0300

    Use `List<T>.ToArray()` instead of `CopyTo()`

[33mcommit 5a25cf9ba7a6a9bddd9831f38e4425af7e2bd186[m
Merge: 563f5de 58178ce
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 21 08:09:00 2015 -0400

    Merge pull request #2915 from vijaykota/feature
    
    HttpClient xplat: Fix bugs in polling and callback logic

[33mcommit 58178ce07fdf0e478467a77698c58fb6d1b4e866[m
Author: Vijay Kota <vijayko@microsoft.com>
Date:   Fri Aug 21 13:53:27 2015 +0530

    HttpClient xplat: Fix bugs in polling and callback logic
    
    - On OSX, the read end of the pipe sometimes wakes up the poll
      with a POLLOUT. Since we are interested in only reading on it,
      scoping down to POLLIN prevents this from happening. Else we
      attempt a read on it which fails
    
    - CheckForCompletedTransfers was being unnecessarily called from the
      socket callback. We are only interested in MSG_DONE after the socket
      callback indicates removal. This will anyway wake up PollFunction which
      calls CheckForCompletedTransfers. This race is also causing a seg fault
      sometimes because curl_multi_socket_action has been called on an fd
      that was getting cleaned up via curl_easy_cleanup (call sequence is
      CurlSocketCallback --> CheckForCompletedTransfers --> EndRequest)
    
    - Also removed some unnecessary CharSet attributes
    
    cc: @stephentoub @davidsh @CIPop @SidharthNabar @pgavlin

[33mcommit 563f5de85491d9319b72839338457ee451e215cb[m
Merge: e2e6dcc a9fa1e9
Author: Shin Mao <shmao@microsoft.com>
Date:   Thu Aug 20 23:58:33 2015 -0700

    Merge pull request #2909 from shmao/ncl
    
    Fixed a loss of streamed bytes issue.

[33mcommit e2e6dcc236c0c01463a1a43349be14761eabf442[m
Merge: 8def273 3c57665
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Fri Aug 21 12:03:44 2015 +0530

    Merge pull request #2810 from rajansingh10/myfeature
    
    Moving shared default between winHttp & Unix Handler to a seperate common file

[33mcommit 8def273e4b313094dc4420d109aa942723495932[m
Merge: ada2a4c ac9e5d9
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Aug 20 22:03:15 2015 -0700

    Merge pull request #2907 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit ada2a4c45c473cd18e5e6971c67c288efb274498[m
Merge: b6dda6a f0b6c14
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Aug 20 20:57:15 2015 -0700

    Merge pull request #2911 from nguerrera/fix-build-after-merge-race
    
    Fix build failure due to conflict between concurrent PRs

[33mcommit f0b6c14964b508c734dec8add50284b94b85e4c8[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Aug 20 20:09:18 2015 -0700

    Fix build failure due to conflict between concurrent PRs
    
    New usage of Interop.libc.close was added while it was
    simultaneously being removed in another PR, which defeated
    catching it via CI PR validation.

[33mcommit 275f109aa2cd4114f9f33940d37b9d2003425d73[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Thu Aug 20 18:32:31 2015 -0700

    Increase System.Reflection.Emit.ILGeneration test coverage.

[33mcommit b6dda6a964dbdd35ef40b8a285222ec4c7838464[m
Merge: 995e5d4 709afe1
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Aug 20 17:38:56 2015 -0700

    Merge pull request #2901 from nguerrera/shim-open
    
     Use shims for open, close, unlink, shm_open, shm_unlink

[33mcommit 995e5d47892241bdbc5e515305e8d43cf4f11bc6[m
Merge: 89fe66d de07926
Author: Cristian Pop <CIPop@users.noreply.github.com>
Date:   Thu Aug 20 17:11:52 2015 -0700

    Merge pull request #2890 from CIPop/NameResolutionPR
    
    Porting System.Net.NameResolution.

[33mcommit a9fa1e9d4942ae1b541014ed5d602bc07d62504d[m
Author: Shin Mao <shmao@microsoft.com>
Date:   Thu Aug 20 17:09:51 2015 -0700

    Fixed a loss of streamed bytes issue.

[33mcommit ac9e5d9426ce28216a9d49d0753c8790e7aac0d2[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Aug 20 16:53:43 2015 -0700

    [HIGH PRIORITY - Proposed fix to be included for ASP.NET Beta7]
    
    This fixes a bug found with chunked uploads using custom content that repeatedly calls Flush() on the stream passed into SerializeToStreamAsync.
    
    This bug was discovered by WCF tests and reported via GitHub: https://github.com/dotnet/corefx/issues/2897
    
    It was a mistake to use the Flush() method on the stream to send the final terminating chunk for the upload since that method can be called by custom content via the SerializeToStreamAsync method. The typical use pattern is that depending on the actual streams involved, upper layer software typically can call Flush() one or more times when writing to a stream. The fix here is to simply leave Flush() as a no-op (which it basically is for the WinHttpRequestStream) and have an internal method to handle the writing of the final terminating chunk.
    
    This fix is being checked into TFS instead of using a GitHub PR. The reason is that the tests for this need to use our current internal server that correctly echoes the request headers in order to verify 'Transfer-Encoding: chunked' was sent by the client. I tried to put this test into the current GitHub tests using the current "http://httpbin.org" test server, but I discovered that httpbin.org doesn't properly echo the request headers when 'Transfer-Encoding' is sent. Instead, it ends up replacing that header and sending back 'Content-Length' (even though we didn't send that in the request headers). We have a backlog work item to port our remaining ToF tests to GitHub over the next several weeks.
    
    [tfs-changeset: 1516976]

[33mcommit de079261cfaa3cc8e8025f91f95bac20fbc3c136[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Tue Aug 18 16:56:29 2015 -0700

    Porting System.Net.NameResolution.
    
    Porting System.Net.NameResolution and tests. Adding a PAL layer for this contract together with x-plat implementations.
    Pending work is marked either as "Shims" or with TODO comments and tracked by #2891 and #2894 (2 PAL tests disabled).
    
    Features #893 #2484

[33mcommit 709afe1d4f6b2d5ca75a0565e4c24e16a5254ee7[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Aug 20 00:27:06 2015 -0700

    Use shims for open, close, unlink, shm_open, shm_unlink

[33mcommit 89fe66dedfcbf5a349da6a16979ae5c9b8784356[m
Merge: 29d76d3 7526473
Author: Pallavi Taneja <pallavit@users.noreply.github.com>
Date:   Thu Aug 20 15:15:14 2015 -0700

    Merge pull request #2855 from pallavit/issue#2808
    
    Support writing colored messages to console in a multi-threaded environment

[33mcommit 75264731ba0ddbb1b0835fde0ec8e1c27cac8d8b[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Mon Aug 17 13:57:13 2015 -0700

    Fix Issue#2808 : Support writing colored messages to console in a multi-threaded environment
    
    In the System.Console portable library SyncTextReader/SyncTextWriter (the reader and writer used by the Console) locked on a private lock object
    which prevented users from writing colored console messages in sync with non-colored writers. Note this behavior was a regression from the Desktop
    where this could be achieved by locking against Console.Out which resulted in locking the writer APIs since the SyncTextWriter internally locked on itself.
    
    Although this approach is formed via an implementation detail, however this sceanrio is useful and there exists no work-around for it in the portable library.
    Hence, moving back to the earlier implementation, where the readers and writers locked against themselves instead of a private object.

[33mcommit 29d76d3619397f8a458d2281f92b752ab0daac77[m
Merge: 48c835b 3b43fdf
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 20 16:55:33 2015 -0400

    Merge pull request #2903 from rajansingh10/bugfix
    
    Removed DumpHeaders dependency & coded to avoid unnecessary splitting

[33mcommit 48c835b4602da7dbab90d5f17a2a4f1c9d1fae04[m
Merge: 8df3f49 5922058
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 20 16:55:21 2015 -0400

    Merge pull request #2905 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 59220586485d8e11ed3f0db23cdc0231e7f338ba[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Aug 20 12:55:58 2015 -0700

    Use OSS System.Net.Http for TFS Builds.
    
    Update the internal System.Net.Http for CoreCLR project to point at the open source version.
    
    [tfs-changeset: 1516875]

[33mcommit 8df3f49ced3f11f011da092f17922a6dfe03a9cb[m
Merge: 69ac65b 5b26270
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 20 15:43:01 2015 -0400

    Merge pull request #2902 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 3b43fdf172980df015d26c5712c5e825a7466d86[m
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Fri Aug 21 00:10:19 2015 +0530

    Removed DumpHeaders dependency & coded to avoid unnecessary splitting
    	modified:   System/Net/Http/Unix/CurlHandler.cs

[33mcommit 5b26270243a40849d7362bf862322bff3d6f2586[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Thu Aug 20 11:32:08 2015 -0700

     Add ProcessStartInfo.PasswordInClearText to System.Diagnostics.Process portable library
    
    System.Diagnostics.Process took dependency on System.Security.SecureString for credentials support. In the recent API Review (https://github.com/dotnet/apireviews/pull/11) we decided to remove the dependency by adding a new property to ProcessStartInfo.PasswordInClearText that has a return type of string.
    
    This is achieved in two phases.
         1. Remove credentials from System.Diagnostics.Process v4.0.0.0 contract to ensure that the contract can be supported on Net4.6
         2. Add ProcessStartInfo.PasswordInClearText property and not expose any static Process.Start APIs for this scenario (these are advances sceanarios anyway).
    
    [tfs-changeset: 1516848]

[33mcommit 34fe3394f31fe65911878df62400704b3f0551e2[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Aug 20 12:37:54 2015 -0400

    Fix Process TestEnableRaiseEvent race condition
    
    Process.WaitForExit and the callback invoked when a Process exits both call the RaiseOnExited method, which is implemented like this:
    ```C#
    private void RaiseOnExited()
    {
        if (!_raisedOnExited)
        {
            lock (this)
            {
                if (!_raisedOnExited)
                {
                    _raisedOnExited = true;
                    OnExited();
                }
            }
        }
    }
    ```C#
    Because _raisedOnExited is set prior to invoking OnExited, if Process.WaitForExit races with the exited callback to invoke RaiseOnExited, WaitForExit may see _raisedOnExited as true even if OnExited hasn't yet been executed or completed execution.  That means there's that when WaitForExit returns, there's no guarantee that the Exited delegate has been invoked, yet the TestEnableRaiseEvents method was relying on that.
    
    This commit fixes the test to not rely on that, by spinning a bit waiting for the flag to be set.  I also took the opportunity to rewrite the test as a theory to avoid some duplication.
    
    I contemplated changing the RaiseOnExited implementation itself to do:
    ```C#
    try
    {
        OnExited();
    }
    finally
    {
        _raisedOnExited = true;
    }
    ```
    instead of:
    ```C#
    _raisedOnExited = true;
    OnExited();
    ```
    but that would potentially make certain deadlock conditions more likely, so I left it as is and changed the test instead.

[33mcommit 69ac65b50f05bad47c6aade0450d1ade3f46c228[m
Merge: c89033b 69facdb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 20 12:22:25 2015 -0400

    Merge pull request #2899 from stephentoub/add_readasync_broken_test
    
    Extend existing ReadFromPipeWithClosedPartner test for ReadAsync

[33mcommit 69facdbc7e18988348a7512a6eeafc7396c34a47[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Aug 20 11:16:01 2015 -0400

    Extend existing ReadFromPipeWithClosedPartner test for ReadAsync
    
    An existing pipes test is validating the case where a read on a broken pipe successfully returns that 0 bytes were read.  It's currently only testing Read and ReadByte; this adds ReadAsync.

[33mcommit 2cd3926da9d34adad37b8951a047ea9d991f3354[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Aug 18 16:34:12 2015 -0700

    Rename pal_stat.h/cpp to pal_io.h/cpp
    
    Rationale: grouping related functions that need to share constants

[33mcommit c89033b7586e608bb62b9a9515691a654b305463[m
Merge: cfc3f8b 22e4ab4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 20 00:21:35 2015 -0400

    Merge pull request #2880 from mellinoe/improve-tasks-tests
    
    Improve tasks tests

[33mcommit cfc3f8b1ee2f84c38d82a0a055d8fbe07ff59db6[m
Merge: 02a00bd e7ecf35
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 20 00:21:13 2015 -0400

    Merge pull request #2658 from khdang/fix_dcs_constructor_2435
    
    Fix one of DCS constructors that cause NRE in wcf

[33mcommit 02a00bd16a95beaeedf760026077e95808991a5f[m
Merge: d95a76c dd524b0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 20 00:19:56 2015 -0400

    Merge pull request #2824 from justinvp/x509_collections
    
    Cleanup and harden X509Certificate collections

[33mcommit d95a76c90d067a05dd11e41e7f560942b4e576e3[m
Merge: 83a5b06 392378c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 19 22:43:56 2015 -0400

    Merge pull request #2872 from Sridhar-MS/system-runtime-tests
    
    Add tests for System.Runtime based on mscorlib code coverage data

[33mcommit 392378c3b273816b4fc1ec37f0d7209c28953ee9[m
Author: Sridhar Periyasamy <sridhper@microsoft.com>
Date:   Wed Aug 19 15:08:27 2015 -0700

    Fixed DateTime.GetDateTimeFormats tests to not hardcode the expected return values.
    
    We cannot assume the date/time formats are not going to change in the underlying OS culture data. But instead the test now tries to Parse the returned string into DateTime and make sure that works.

[33mcommit 22e4ab49b0a7e5fa0120cc7cd319157ea30f4635[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Aug 19 14:43:54 2015 -0700

    Use Assert.Same in TaskFactory_FromAsyncTests
    
    When comparing the async state object, use Assert.Same to make sure we are
    verifying reference equality. This is functionally the same as before,
    but clearer semantically

[33mcommit e7b239cf15d719c1d078d462259915d0e96f913a[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Aug 19 14:41:58 2015 -0700

    Improvements to the AsyncTaskMethodBuilder tests
    
    * Be sure to safely restore the synchronization context in a finally block
      when it is modified
    * Fix hanging test
    * Add additional coverage for completion cache, with Stephen's suggested
      test cases

[33mcommit a941521686b3c21485f76bcafb6f155f36a76d19[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Aug 19 14:41:28 2015 -0700

    Further cleanup of TaskAPMTest.cs
    
    Lowered the spin duration of the tasks significantly

[33mcommit 83a5b0697e0271567e8723c3cb6d75cd5f9ab287[m
Merge: 2d90bb2 6cf2b4c
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Aug 19 14:41:19 2015 -0700

    Merge pull request #2871 from hackcraft/change_buffer_fill_loop
    
    Don't do null check on every loop when filling buffer.

[33mcommit 2d90bb256f1c28af8e84022193c7d4dfaaa17ef4[m
Merge: b3451ec 2c77700
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Aug 19 14:11:42 2015 -0700

    Merge pull request #2892 from mellinoe/fix-typeextensions-test
    
    Fix order-dependent TypeExtensions tests

[33mcommit b3451ec0a8ba15de95e937c9d358667c17375c03[m
Merge: ce294a3 5b8f55c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 19 16:18:42 2015 -0400

    Merge pull request #2889 from stephentoub/home_directory_unix
    
    Fix access to user's home directory on Unix

[33mcommit ce294a340ad4494db9f82346cefe127e23205cae[m
Merge: db6af39 6e448d6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 19 15:51:05 2015 -0400

    Merge pull request #2878 from Maxwe11/pipes-completion-source
    
    Consolidate *CompletionSources logic in System.IO.Pipes

[33mcommit 5b8f55c8d43a880147478cb7d2191fa607000594[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Aug 19 13:40:03 2015 -0400

    Fix access to user's home directory on Unix
    
    Today in several places we get a user's home directory by accessing the HOME environment variable.  This is the right place to check first, but in certain cases it may not be set, such as in initialization scripts.
    
    This commit implements a fallback, such that if HOME doesn't have a path, we consult the pw_dir path from a call to getpwuid_r for the current user.
    
    As long as I was adding getpwuid_r to the native shim, I also moved our existing geteuid and getegid imports to the shims.

[33mcommit db6af39ab835310d1ad03c6d8bd946201ba08093[m
Merge: 5846440 b50520e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 19 14:41:35 2015 -0400

    Merge pull request #2884 from stephentoub/fixwaitallanytasktest
    
    Fix failing TaskWaitAllAny* tests

[33mcommit 2c77700c9dff8eba194e55ec63ef35e6ba0a1aaa[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Aug 19 11:36:49 2015 -0700

    Fix order-dependent TypeExtensions tests
    
    These tests were expected to be run in sequential order, as they all
    modified a shared static variable on some class. Instead, they now each
    modify a separate variable and should therefore be order-independent.
    There was no need for them to be sharing that state; it wasn't important
    to the test.

[33mcommit 5846440914e72e8fb453bda5e4074b7e42e1d560[m
Merge: ac7a7e8 7930a22
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 19 14:22:50 2015 -0400

    Merge pull request #2887 from stephentoub/fix_generics_linq
    
    Restore virtual generic usage in LINQ

[33mcommit ac7a7e8801f685f4115379411b4cf95ff0f071b5[m
Merge: 18ccd53 c17f670
Author: Tarek Mahmoud Sayed <tarekms@microsoft.com>
Date:   Wed Aug 19 09:32:38 2015 -0700

    Merge pull request #2718 from Clockwork-Muse/EncodingTable_Task
    
    Generate EncodingTable.Data as a task

[33mcommit 7930a22a94f6c2a851e24771d9a1d9896b967e8a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Aug 19 11:27:00 2015 -0400

    Restore virtual generic usage in LINQ
    
    During the bring-up of .NET Native, there was a period of time during which virtual generic methods were not supported.  As a result, LINQ's implementation was changed to avoid the usage of virtual generics, which occur in some optimizations around Select usage.  That limitation no longer exists.  This commit restores the original code.

[33mcommit 6e448d64dcd02d9923e8952cfa6875214c056128[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Wed Aug 19 17:55:34 2015 +0300

    Address PR feedback

[33mcommit b50520eccc7b80faa858ab918c384aa1dd092ce1[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Aug 19 10:02:30 2015 -0400

    Fix failing TaskWaitAllAny* tests
    
    Some of these tests have been failing in CI.  While unwieldy in general, the specific issue is that when the tests are shutting down, they cancel any tasks that haven't yet completed, but then simply wait on the tasks to complete.  If the task hadn't yet started, the cancellation request would cause the task to end as Canceled, which would cause the Wait to throw.  The fix is simply to catch and ignore the resulting OperationCanceledException.

[33mcommit c17f670a7e8bb2a56b77a5e7e7da6377838cf5b9[m
Author: Stephen A. Imhoff <clockwork-muse@outlook.com>
Date:   Mon Aug 10 18:00:28 2015 +0900

    Update System.Text.Encoding.CodePages to use new build-tools task.
    
    Add data files.
    
    Add property/target for encoding table gen.
    
    Add explanatory task setting comments.
    
    Regenerate file with new header.

[33mcommit 18ccd5333e9fa19a8227b6dac54f2955a4962b52[m
Merge: 5059d97 bb5e32a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 19 08:03:04 2015 -0400

    Merge pull request #2840 from shrutigarg/latest
    
    Enabling POST method options

[33mcommit 5059d97f782f0f947c3a143538b71db099979d57[m
Merge: 87edf3b ded3bd5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 19 07:35:51 2015 -0400

    Merge pull request #2854 from hackcraft/fix_range_optimisation
    
    Bring back range optimisation, fixed for boundary case.

[33mcommit 87edf3b7dc3acc9e395262692fda1bb4c572b63a[m
Merge: c87771a d52dcd3
Author: Vijay Kota <vijaykota@users.noreply.github.com>
Date:   Wed Aug 19 11:35:35 2015 +0530

    Merge pull request #2720 from vijaykota/feature
    
    HttpClient xplat: Optimize number of socket callbacks

[33mcommit d52dcd394fc174db629acd771d8529714e4dc4f4[m
Author: Vijay Kota <vijayko@microsoft.com>
Date:   Tue Aug 11 09:55:07 2015 +0530

    HttpClient xplat: Fix multiple issues with socket/timer callbacks
    
    In earlier version, a curl_multi_socket_action was performed everytime
    the callback was invoked irrespective of whether there was activity on
    the socket. This in turn causes more callbacks when libcurl tries to read
    the socket but finds no data. This can be made more efficient by waiting
    for activity on the socket and informing libcurl accordingly
    - Fixed implementation of timer callback using an actual timer and handling
      all possible values of timeout
    - Fixed a bug in CheckForCompletedTransfers where a mismatch could occur
      between the easy handle specified in the DONE msg
    - Fixed the SEGV which was happening in earlier code due to recursive calls
      to curl_multi_socket_action in the socket callback which was being invoked
      synchronously in curl_multi_socket_action. This was causing a stack overflow
      leading to a segfault

[33mcommit fd5d0d9a9d989e1fea4e14b493f50c7bb65cabb1[m
Author: Sridhar Periyasamy <sridhper@microsoft.com>
Date:   Tue Aug 18 18:48:18 2015 -0700

    Address Pull Request feedback for System.Runtime tests
    
    And also fix CI failure related to System.Private.Uri.
    Similar issue is tracked by #2817.

[33mcommit c87771a5f092961e717766cee7e9143961f35b53[m
Merge: 1f17b78 4156c66
Author: Nate Amundson <naamunds@microsoft.com>
Date:   Tue Aug 18 19:59:19 2015 -0500

    Merge pull request #2713 from naamunds/Loc
    
    Localize Microsoft.CSharp with machine translations

[33mcommit 4156c66eb9a01c20d8135730ab6f339474129ae1[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Tue Aug 18 19:47:11 2015 -0500

    Localize Microsoft.CSharp with machine translations
    
    This change adds localization to the Microsoft.CSharp project by using
    the Multilingual App Toolkit (MAT) to generate machine translations.
    This produces localized satellite assemblies when building.
    
    The files being added are included in the project by
    localization.targets in buildtools, because that code is common to all
    C# projects in CoreFx.

[33mcommit b39425e527f35c0f75b18503d2361ee4bed57648[m
Author: naamunds <naamunds@microsoft.com>
Date:   Tue Aug 18 19:33:09 2015 -0500

    Update Build Tools version to uptake loc changes

[33mcommit d8a6392229d60632c16928c602cf7b73a14c8d36[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Aug 18 17:09:09 2015 -0700

    Clean up AsyncMethodBuilderTests
    
    * Standardized Assertion usages
    * Split all tests into individual methods

[33mcommit 1f17b7822fa2de21e16b60f088b3fc2c84f36d39[m
Merge: 7cbc755 e72bbba
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 18 19:49:13 2015 -0400

    Merge pull request #2874 from akoeplinger/linq-tests
    
    System.Linq: Initial port of legacy tests

[33mcommit 2c309c8b82d13688f45eb3b4618ed19409378ddd[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Wed Aug 19 02:01:34 2015 +0300

    Consolidate *CompletionSources logic in System.IO.Pipes
    Common cancellation and completion logic moved into base class.

[33mcommit 8243d68905cd65b7342d356f2770909025deeaf3[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Aug 18 15:52:25 2015 -0700

    Clean up TaskFactory tests
    
    * Clean up assertion usages, replace old, convoluted test style with
          simple, straightforward assertions
    * Clean up extraneous comments and debug printing
    * Clean up old, commented out areas and code fragments

[33mcommit 7cbc755051d8fde7b40f807e00065df2d4181f77[m
Merge: 69b9b44 7d1906c
Author: Ian Hays <ianha@microsoft.com>
Date:   Tue Aug 18 15:51:42 2015 -0700

    Merge pull request #2875 from ianhays/pipes_serverinstances
    
    Removed the Unix restriction on MaxNumberOfServerInstances

[33mcommit e72bbba385edb8d294416d8692271d0f61ce63e5[m
Author: Alexander Köplinger <alex.koeplinger@outlook.com>
Date:   Wed Aug 19 00:26:30 2015 +0200

    System.Linq: Avoid outputting to console in cast tests
    
    Move to Assert.Throws() instead of catching the InvalidCastException so we
    don't output to the console in Helper for some of the tests.

[33mcommit 69b9b4408f1a7f85200997afbba5ad8bfddd717b[m
Merge: 3439441 fdc9d83
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 18 18:01:38 2015 -0400

    Merge pull request #2863 from Maxwe11/cleanup-BeginRead-BeginWrite
    
    Cleanup Begin/End usage for IO in PipeStream for Windows

[33mcommit 3439441fe27757407f2d2e7bb6e6ad13cd1c80da[m
Merge: 709930a bee878a
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Tue Aug 18 14:26:26 2015 -0700

    Merge pull request #2870 from AtsushiKan/ecdsa
    
    Implement ECDsa and ECDsaCng

[33mcommit bee878ade2d7a9e50679a7674f3d40816bd709a2[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Tue Aug 18 14:24:41 2015 -0700

    Implement ECDsa and ECDsaCng

[33mcommit b7e3ee96082c222c13ca59fe4cd266a7a067f7ba[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Aug 18 13:41:27 2015 -0700

    Improve and Clean Up TaskAPMTest
    
    Separate out the test cases into four distinct methods,
    which were already isolated from each other in the
    original test case. Lower some of the spinning time
    in the tasks to reduce the run-time significantly (wait
    duration did not seem significant to the test).
    Although they now take around 8 seconds total on my
    machine, they are still too slow to be inner-loop tests.
    I've also added some additional assertions into the tests
    to make failures more diagnosable.

[33mcommit 7d1906c0f4f8213b7e768f6e867b98797ad0d16d[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Tue Aug 18 13:23:02 2015 -0700

    Removed the Unix restriction on MaxNumberOfServerInstances
    
    There were previously checks to ensure that MaxNumberOfServerInstances was within the same boundaries as it was on Windows despite never actually being used in the Unix implementation. This commit removes those checks and adds platform specific tests for the new behavior.
    
    - Resolves #2764

[33mcommit a723067473283cd9242b50066109fe91e3793e95[m
Author: dotnet bot <dotnet-bot@microsoft.com>
Date:   Tue Aug 18 21:23:58 2015 +0200

    System.Linq: Initial port of legacy tests
    
    From https://github.com/VSadov/corefx/tree/UnportedLegacyTests/src/System.Linq/LegacyTestsToPort/LINQ
    
    The tests were grouped into classes based on the tested area. The Main() method was wrapped
    with an Assert that verifies it returns 0 (which means a successful test).
    
    Further cleanup and embracing of Xunit can be done in follow-up commits.
    
     #2851

[33mcommit 709930acfcfb2d525fa0fdfbc79d6e0a7d24bbda[m
Merge: 4f8a814 4f88d4b
Author: Ian Hays <ianha@microsoft.com>
Date:   Tue Aug 18 12:51:20 2015 -0700

    Merge pull request #2873 from ianhays/pipes
    
    Unix NamedServerPipeStream disposal no longer deletes the FIFO

[33mcommit 4f8a814b8a38ece0ed5cf618a2c4b64bbcb578b9[m
Merge: 8e156b9 6d9ffc8
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Aug 18 12:06:28 2015 -0700

    Merge pull request #2864 from janhenke/Native-FreeBSD-fix1
    
    Fix System.Native shim on FreeBSD

[33mcommit 4f88d4b7e58285ba86b627e2a98d60d7177b1ece[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Tue Aug 18 11:18:31 2015 -0700

    Unix NamedServerPipeStream disposal no longer deletes the FIFO
    
    Per the discussion in #2764, the clean up of a Unix FIFO named pipe upon disposal of the NamedPIpeServerStream that created it has been removed.
    
    - Resolves #2764

[33mcommit 8e156b9f467e73922598a884f3e0946cf65e3ce0[m
Merge: aa8cc2a 61a60ad
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 18 14:16:35 2015 -0400

    Merge pull request #2707 from James-Ko/bld
    
    Use Array.Copy in ImmutableArray.Builder

[33mcommit aa8cc2a6ffe484be3a30226759a747f39ec74e0f[m
Merge: 139df71 bff19bb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 18 14:12:58 2015 -0400

    Merge pull request #2868 from bartonjs/Win7_Hashing
    
    Fix hashing on Windows 7.

[33mcommit aed07657af05545062f7d8af60f8b707e92a8750[m
Author: Sridhar Periyasamy <sridhper@microsoft.com>
Date:   Tue Aug 18 10:55:35 2015 -0700

    Add tests for System.Runtime based on mscorlib code coverage data
    
    System.Array - add 'BinarySearch' overload tests
    System.DateTime - add 'GetDateTimeFormats' tests
    System.Decimal - add 'GetBits' tests
    System.GC - add 'ReRegisterForFinalize', 'GetTotalMemory' and 'GetGeneration' tests
    System.Runtime.CompilerServices.ConditionalWeakTable - add new tests
    System.TimeSpan - add 'ParseExact' tests
    System.Type - add 'GetType' by name tests
    System.Uri - fix the C# project to include Uri tests.

[33mcommit 6cf2b4cd08faa6079d833d1aa207fcbdb7ddd79f[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Aug 18 18:22:22 2015 +0100

    Don't do null check on every loop when filling buffer.
    
    Buffer has an optimisation of using a null array to represent an empty state, that
    also plays well with it being a value type.
    
    When the buffer is filled from an enumerable, this possible null state is checked
    for on every loop.
    
    Restructure to avoid this redundancy.

[33mcommit 6d9ffc81d074262f65dd667e6d951ccd78e19984[m
Author: Jan Henke <Jan.Henke@taujhe.de>
Date:   Tue Aug 18 11:04:49 2015 +0200

    Drop obsolete error codes: ENODATA, ENOSR, ENOSTR and ETIME
    
    These error codes are marked as obsolete and optional in POSIX.1-2008.
    FreeBSD does not define these codes, which breaks the build on that
    platform. Thus remove these codes, they should not occur on the native
    side.

[33mcommit 139df716a3be2cc06477a311ed54abac920009cc[m
Merge: 4306b6d 6026ec5
Author: VSadov <vsadov@microsoft.com>
Date:   Tue Aug 18 09:48:48 2015 -0700

    Merge pull request #2861 from hackcraft/remove_double_casts
    
    Combine is-operator-then-cast sequences.

[33mcommit 61a60ade24ce4cf890198aa49916feb83da0c006[m
Author: James Ko <kojames8111@gmail.com>
Date:   Tue Aug 18 12:13:01 2015 -0400

    Use Array.Copy in ImmutableArray.Builder

[33mcommit 4306b6d3cbf25c38db2c7cd96d645d09cf886535[m
Merge: 08e9df8 7d23f39
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 18 12:10:15 2015 -0400

    Merge pull request #2867 from stephentoub/pipes_readwritechaintest
    
    Add Pipes test for chain of writers/readers

[33mcommit bff19bb4ac761948122bda63f9edc16b2748f1df[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Aug 18 08:16:14 2015 -0700

    Fix hashing on Windows 7.
    
    GetHashSizeInBytes got inlined into HashProviderCng..ctor, but it did so using the local variable hHash, not the field _hHash.  The Windows 7 execution path results in the field being set, but not the local, resulting in STATUS_INVALID_HANDLE on that call, and results in a CryptographicException.

[33mcommit fdc9d838d0052c1be067c380df21ba85d3c9e0fa[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Tue Aug 18 18:57:29 2015 +0300

    Address PR feedback

[33mcommit 7d23f391602595b4dafe058a52d372b0ecbda74c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Aug 18 10:11:09 2015 -0400

    Add Pipes test for chain of writers/readers
    
    Adds a test that does lots of async writes/reads with various size buffers and verifies that the right data comes through.

[33mcommit 08e9df82026dfd9fcaef500c8af0177e37b43173[m
Merge: 860c9a8 30eeac1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 18 09:07:49 2015 -0400

    Merge pull request #2846 from stephentoub/fix_registry_tests
    
    Make registry tests more robust

[33mcommit 30eeac1c80ac4c945ed8c7b9c5c330dafd88fc72[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Aug 18 08:12:19 2015 -0400

    Address PR feedback
    
    - Change protected fields on the registry test base class to instead be properties

[33mcommit ddc7fdf0c00f19b3dc86913154f328a120993f71[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Tue Aug 18 10:25:36 2015 +0300

    Fix tests to pass with recent cleanup Begin/End for IO in PipeStream
    The reason for this change is that previous cancellation implementation of
    async IO was based on throwing OCE
    (directly or via CancellationToken.ThrowIfCancellationRequested).
    Since switching to TaskCompletionSource we use its SetCanceled method which
    propagate on task TaskCanceledException instead of OCE.

[33mcommit 2732ffa58073e287fc68f5a1623cbf4c0700f44c[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Tue Aug 18 10:20:17 2015 +0300

    Cleanup Begin/End usage for IO in PipeStream for Windows

[33mcommit 860c9a850ffcafb3c6a77be46d290dc37e46a38c[m
Merge: 61e0211 7b55568
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Aug 17 22:09:00 2015 -0700

    Merge pull request #2859 from nguerrera/shim-exec
    
    Move ForkAndExecProcess shim from coreclr to corefx

[33mcommit 61e0211899b72a22c0aeb40e1b13610159be1366[m
Merge: 3876ac0 6fea59e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 18 00:48:39 2015 -0400

    Merge pull request #2856 from nguerrera/shim-crypto-init
    
     Move EnsureOpenSslInitialized shim from coreclr to corefx

[33mcommit 7b55568884924e6cb80aaf44ce40d7388e187f4e[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Aug 17 21:16:26 2015 -0700

    Move ForkAndExecProcess shim from coreclr to corefx

[33mcommit 6fea59e0a00abbb1f36f1cfebb330cff278e49d3[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Aug 17 20:39:16 2015 -0700

    Move EnsureOpenSslInitialized shim from coreclr to corefx
    
    The implementation was simplified in the process by removing the
    dynamic loading. Whereas libcoreclr could not statically depend
    on libcrypto, System.Security.Cryptography.Native can and already
    does.

[33mcommit 327b90acd79390ad6d2b6d357456c67d3961e30f[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Aug 17 20:33:42 2015 -0700

    Use static modifier instead of underscore prefix

[33mcommit 6026ec5993a98c5a03c04a48a68f1d6ed346f8bc[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Tue Aug 18 03:34:21 2015 +0100

    Combine is-operator-then-cast sequences.
    
    Convert some cases of the form:
    
        if (value is T) ((T)value).DoSomething();
    
    Etc. Into:
    
        T tValue = value as T;
        if (tValue != null) tValue.DoSomething();
    
    Slightly smaller IL output, and removes double-cast in the case that uses it.

[33mcommit 3876ac0321232941915701df46c02459a4f2ff2f[m
Merge: 3e11f82 c7ea66e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 17 22:14:07 2015 -0400

    Merge pull request #2841 from Maxwe11/pipe-tests
    
    Add more pipe tests

[33mcommit 3e11f82fbf9ba51db236c3b1bfe8b0d759540d74[m
Merge: 1144415 397c9fb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 17 21:57:06 2015 -0400

    Merge pull request #2839 from bbowyersmyth/StringJoinTests
    
    Additional String.Join tests

[33mcommit dd524b026f09a84928d31e2bcaadbe331c2dd329[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Sun Aug 16 08:36:58 2015 -0700

    Add more X509Certificate collection tests
    
    Coverage now 100% for X509CertificateCollection and enumerators, and
    99.3% for X509Certificate2Collection.

[33mcommit b35850aca14276107be61c0bbcf235c615e21e31[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Fri Aug 14 22:02:02 2015 -0700

    X509Certificate2Collection.Contains: Allow null certificates
    
    X509Certificate2Collection.Contains throws ArgumentNullException when
    a null value is passed in, but the IList.Contains implementation and
    X509CertificateCollection.Contains do not. This commit changes
    X509Certificate2Collection.Contains to not throw for a null value to
    be consistent with the IList.Contains implementation and
    X509CertificateCollection.Contains.

[33mcommit 1acb8f44664f723632fdce841c4d71f2e4b8c956[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Fri Aug 14 20:55:37 2015 -0700

    Harden X509Certificate collections
    
    This commit introduces minor behavior changes in order to harden
    the X509Certificate collections in .NET Core:
    
    1. Using X509CertificateCollection or X509Certificate2Collection as
    an IList allows adding/inserting non-X509Certificate objects into the
    collection. Subsequent calls to enumerate or access these items
    results in InvalidCastException being thrown. This matches the full
    .NET Framework (desktop) behavior. Clearly this is not the intended
    behavior of these collections, which are meant to hold
    X509Certificate and X509Certificate2 objects. This commit changes
    X509CertificateCollection and X509Certificate2Collection to throw
    ArgumentException when non-X509Certificate objects are attempted to
    be added/inserted, via List<X509Certificate>. As part of this,
    cleanup calling the non-generic IList implementations and null
    checking.
    
    2. X509CertificateEnumerator has a public constructor with a
    collection parameter that it uses without first verifying the
    parameter is non-null, which could result in NullReferenceExceptions.
    This commit adds a null check, throwing ArgumentNullException if the
    parameter is null.

[33mcommit ded3bd5e97db2b049c7d5c47b45c71ddf034dfd0[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Mon Aug 17 23:36:24 2015 +0100

    Bring back range optimisation, fixed for boundary case.
    
    31599c5 introduced a boundary error, and was hence reverted in b75ffa4.
    
    This reintroduces the idea of 31599c5, but fixed for the boundary case.

[33mcommit c7ea66e22b41b0151890759194b367a904871d4e[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Mon Aug 17 16:30:21 2015 +0300

    Add more pipe tests

[33mcommit 114441540f9f40110109a644a999539a558ebe8e[m
Merge: a28c280 ace2b3d
Author: Saurabh Singh <saurabh500@users.noreply.github.com>
Date:   Mon Aug 17 15:12:48 2015 -0700

    Merge pull request #2447 from stephentoub/taskcleanup_commondb
    
    Cleanup CancellationToken and Task usage in System.Data.Common

[33mcommit abaeaa896fb09e5ebba683f2614fc22f04fb6806[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Aug 17 14:18:52 2015 -0700

    Rename crypto shim API following discussion in #2606
    
    Interop.Libraries.CryptoInterop -> Interop.Libraries.CryptoNative
    Interop.NativeCrypto -> Interop.Crypto

[33mcommit a28c280bc995d3349560482ebf8f90a5c9703c80[m
Merge: 626649a 1dca9c4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 17 17:02:24 2015 -0400

    Merge pull request #2850 from stephentoub/temp_feature_files
    
    Consolidate temp files in Unix implementations

[33mcommit 626649a5686d734ed67cc327ec5e25e132348132[m
Merge: c2aadf2 1445591
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 17 17:02:12 2015 -0400

    Merge pull request #2853 from mellinoe/revert-range-optimization
    
    Revert range optimization

[33mcommit 144559101f89589a3fd5d26b941d3ca092bdaa98[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Aug 17 13:07:56 2015 -0700

    Add coverage for Enumerable.Range
    
    Covers the case where we enumerate up to Int32.MaxValue

[33mcommit c2aadf275aaa436c8aa3ce45450931981e7028a2[m
Merge: d6cf0da 8bb3b73
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 17 15:58:34 2015 -0400

    Merge pull request #2847 from gregg-miskelly/master
    
    Add a gitattribute rule for .sh files

[33mcommit b75ffa4274638f541156b3b6e7fffea3947870f5[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Aug 17 12:57:03 2015 -0700

    Revert optimization in Enumerable.Range
    
    The new implementation does not handle the edge case where
    Enumerable.Range enumerates up to Int32.MaxValue. If values are given such
    that the end value will be Int32.MaxValue, no values are enumerated. This
    change simply reverts that change.

[33mcommit d6cf0da3bfbf0cc9241efb4411623dc4f46dba28[m
Merge: 89d9448 edcc6ff
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 17 15:35:23 2015 -0400

    Merge pull request #2827 from stephentoub/bgw_finalizer
    
    Add missing finalizer back to BackgroundWorker

[33mcommit 1dca9c4ab300da0160b0b11f32c5a0794029c138[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Aug 17 15:16:21 2015 -0400

    Address PR feedback
    
    - Added PersistedFiles.GetTempFeatureDirectory and used it from MemoryMappedFiles (can't be used well from Pipes due to assembly layering)
    - Added directory existence check in Pipes before creating the directory structure
    - Recreate the pipes path when needed if it's deleted during the execution of the app (maps is already doing this)

[33mcommit 397c9fbb01c7b923041afbbcf8975144dd635f86[m
Author: Bruce Bowyer-Smyth <bbowyersmyth@live.com.au>
Date:   Tue Aug 18 04:51:48 2015 +1000

    Additional String.Join tests for null separators and empty arrays

[33mcommit dc801a562a25e05131821ae2a7bbe5583ef51043[m
Author: Bruce Bowyer-Smyth <bbowyersmyth@live.com.au>
Date:   Tue Aug 18 04:14:12 2015 +1000

    Updated Assert.Equal calls so that "expected" is the first param

[33mcommit 8abcb39bc2d56eb0d89d2728c27b8ea6ecb797df[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Aug 17 13:34:43 2015 -0400

    Consolidate temp files in Unix implementations
    
    System.IO.Pipes and System.IO.MemoryMappedFiles both create temporary files, and end up doing so in inconsistent locations.  This commit changes them to use a consistently named location under the temporary path, e.g. /tmp/.dotnet/corefx/pipes/* and /tmp/.dotnet/corefx/maps/*

[33mcommit 8bb3b73f5a445e324516b719f159f1851392435b[m
Author: Gregg Miskelly <greggm@microsoft.com>
Date:   Mon Aug 17 09:28:25 2015 -0700

    Add a gitattribute/editorconfig rule for .sh files
    
    This forces bash scripts to always use lf line endings so that if a
    repro is accessed in Unix via a file share from Windows, the scripts
    will work.

[33mcommit cb59309edff96f8ffd2a25e1043fb92232d3c98a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Aug 17 12:23:18 2015 -0400

    Make registry tests more robust
    
    Currently if the registry tests are interrupted during their execution, they leave behind state in the registry that causes all subsequent runs of the tests to fail. This commit cleans up the registry tests to avoid this.  The logic for creating a name for the test class is moved into the base, which also deletes any existing key of that name prior to running a test.

[33mcommit 89d9448a446209693843033a3c3fc9ffbbf6412a[m
Merge: 80ebd17 2c32a92
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Mon Aug 17 20:15:04 2015 +0530

    Merge pull request #2833 from kapilash/httpcreds
    
    Credential Support in Unix HTTP Handler

[33mcommit 2c32a92fa672f84c9b4d2b8cf42a4543b498de80[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Sun Aug 16 19:00:02 2015 +0530

    Credential Support in Unix HTTP Handler
    
    This checkin integrates CurlHandler to the credential support of libcurl

[33mcommit 3c576656325611b3a36c8fec777453be438133e7[m
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Mon Aug 17 17:47:53 2015 +0530

    Fixed build break

[33mcommit f6dfd2fc75adc523e15141fafc23824c74382d00[m
Author: Bruce Bowyer-Smyth <bbowyersmyth@live.com.au>
Date:   Mon Aug 17 21:56:32 2015 +1000

    Changed Assert.True to Assert.Equals where appropriate

[33mcommit bb5e32a99dfd1ee7bf3c471a2b6f4c74528b61a5[m
Author: Shruti Garg <shgarg@microsoft.com>
Date:   Mon Aug 17 16:48:01 2015 +0530

    Enabling POST method options

[33mcommit 80ebd1759e3d31a3be8259d55d060ae0dc2b6900[m
Merge: d22fe16 2de1073
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 17 07:23:42 2015 -0400

    Merge pull request #2834 from nguerrera/use-new-stat
    
    Use Stat from System.Native shim throughout

[33mcommit dc45820103258f957a33eda5fd5d68ed2412c2b2[m
Author: Bruce Bowyer-Smyth <bbowyersmyth@live.com.au>
Date:   Mon Aug 17 20:31:40 2015 +1000

    Additional String.Join tests

[33mcommit 756ed1131ced4649c6a23940b9707012ec1d2ff2[m
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Mon Aug 17 13:03:42 2015 +0530

    Moving shared default between winHttp & Unix Handler to a seperate common file

[33mcommit d22fe16ece6f86c1133f0a660183f2f973f806cf[m
Merge: 51f757c 9182571
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Sun Aug 16 22:55:24 2015 -0700

    Merge pull request #2835 from bartonjs/x509store_add_readonly
    
    Fix behavior and test for X509Store.Add when store is readonly.

[33mcommit 91825719728dc98bd31679c1bf5735d52564c4b1[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Sun Aug 16 21:58:23 2015 -0700

    Fix behavior and test for X509Store.Add when store is readonly.
    
    Despite what was concluded from the earlier testing, Windows does actually report an access denied error when calling X509Store.Add on a store instance that was opened as read-only.  This fixes the test, and the Unix implementation.

[33mcommit 2de10733ebca8a9612f72ea9df490a14edfb315f[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Sun Aug 16 21:42:02 2015 -0700

    Use Stat from System.Native shim throughout
    
    Replace all usage of GetFileInformation from libcoreclr with newer
    Stat from System.Native shim.

[33mcommit 51f757cc4a62b4d899384e402f0808f8b75076ad[m
Merge: bea1b9d 6ec9384
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Aug 16 14:48:10 2015 -0400

    Merge pull request #2515 from omariom/2257_faster_queues
    
    Fix to issue #2257 - Trivial change to make Queue<T>'s Enqueue / Dequeue twice faster

[33mcommit 6ec9384e1b2d4da3b877bd154d75ac7198656e3d[m
Author: OmariO <omario@outlook.com>
Date:   Sun Aug 16 18:49:40 2015 +0300

    Replace slow remainder operator with comparison to the array's length.

[33mcommit bea1b9d6f5cadaad555c64869e6815f10d302afa[m
Merge: 1f79ba7 a54fb49
Author: VSadov <vsadov@microsoft.com>
Date:   Sun Aug 16 06:37:14 2015 -0700

    Merge pull request #2831 from hackcraft/remove_redundant_check
    
    Remove redundant check.

[33mcommit 1f79ba743cf84dc88cdc0dc9a64b02907d4f21b0[m
Merge: 2985bcb 3583434
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Aug 16 08:01:38 2015 -0400

    Merge pull request #2828 from stephentoub/fix_process_enumeration_linux
    
    Fix process enumeration bug on Linux

[33mcommit 2985bcb9c2dde627bf058adc816aaab5060e08a6[m
Merge: 501d998 0522e19
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Aug 15 23:12:27 2015 -0400

    Merge pull request #2806 from bartonjs/X509Store_Unix_CurrentUser
    
    Enable CurrentUser X509Stores on Unix.

[33mcommit 0522e19dc6c06bd80c1f80232fd9600862cdb70c[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Fri Aug 14 06:32:06 2015 -0700

    Enable CurrentUser X509Stores on Unix.
    
    The store is implemented as PFX files in ~/.dotnet/corefx/cryptography/x509stores/{storename}, and utilizes a FileSystemWatcher after first read to synchronize changes across other instances (and processes).

[33mcommit 502856c6cd872dc63f95ac9e54df4ff419d9ebec[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Fri Aug 14 15:47:59 2015 -0700

    Declare Sequential layout on FileStatus to remove the uninitialized field warnings
    
    * Sequential is correct, because it's an interop type
    * When no attributes are specified csc emits sequential, not auto, to the IL; so this doesn't change the output at all.

[33mcommit 982d9d13b2626c7420feaaf1777eb9d7a97b5b69[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Fri Aug 14 07:24:43 2015 -0700

    Cleanup X509Certificate collections
    
    - Avoid enumerator allocations when enumerating the collections.
    - Reduce the allocations associated with creating an enumerator (use
    List<T>'s struct enumerator instead of a boxed IEnumerator).
    - Throw ArgumentNullException from Insert and Remove to match the
    full .NET Framework (desktop) behavior. Add tests to verify.
    - Remove some ArgumentOutOfRangeException checks as the underlying
    List<T> already throws that exception. Add tests to verify.
    - Use List<T>'s ICollection.SyncObject, allowing the field to be
    removed.
    - Remove unused usings.
    - Move fields to the top of class definitions.
    - Object -> object; String -> string.
    - Minor whitespace cleanup.

[33mcommit 501d998512eaeeb98791b9f33de49ef84e8d9906[m
Merge: 5faaffe 04bb308
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Aug 15 19:52:06 2015 -0400

    Merge pull request #2815 from stephentoub/enable_threading_pnse_tests
    
    Re-enable several System.Threading tests

[33mcommit 5faaffec9e0355d3cfac3400dc396d77f797c537[m
Merge: 4d45934 2925df7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Aug 15 19:51:53 2015 -0400

    Merge pull request #2826 from stephentoub/fix_jsons
    
    Fix test project build warnings about dependency conflicts

[33mcommit 4d45934de10b08cf3038449c48ededae3dcefdfa[m
Merge: 54f98dd c2b2639
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Aug 15 17:35:28 2015 -0400

    Merge pull request #2829 from stephentoub/fix_pipe_impersonation_test
    
    Fix System.IO.Pipes test on 64-bit

[33mcommit 54f98dd719acf9fa1e1f5d57b0dafbb460b1025a[m
Merge: 08512d6 9f48bd2
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Aug 15 17:34:55 2015 -0400

    Merge pull request #2830 from stephentoub/threading_deadlock_tests
    
    Avoid test deadlocks in threading WaitHandle tests

[33mcommit 9f48bd2de882bdbcdea615b81269fa040a8e342b[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Aug 15 14:46:02 2015 -0400

    Fix bug in Semaphore.NamedProducerConsumer test
    
    The test schedules two tasks, each of which creates a Semaphore with the same name.  One of the tasks releases count into the semaphore, and the other consumes it via WaitOne.  If the first task ends up creating the semaphore first, there's no problem: the first task will end up blocking, and the second task will end up creating the same semaphore and releasing count into it.  But if the second task ends up executing first, it could create the semaphore, release count into it, and destroy the semaphore, all before the first task constructs the semaphore.  If that happens, the first task will construct an entirely different semaphore, and end up blocking until timeout, at which point the test will fail.
    
    This fix introduces a barrier that ensures neither task waits or releases until both tasks have constructed the shared semaphore.

[33mcommit 080d07df03fad97fa5bbb4a7cfeb116f878889d3[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Aug 15 11:38:07 2015 -0400

    Avoid test deadlocks in threading WaitHandle tests
    
    A bunch of the Mutex/EventWaitHandle/Semaphore tests are waiting indefinitely for a signal.  If that signal never arrives due to the test failing, CI will end up waiting for several hours and then aborting the whole run.  This change adds timeouts to those waits.  It also changes a name used in one of the semaphore tests to be randomly generated; this should hopefully fix a pervasive failure we're seeing in CI right now.

[33mcommit 08512d6b496393f660e8f076cf10a54aa65767da[m
Merge: 72059f6 035e77e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Aug 15 14:36:57 2015 -0400

    Merge pull request #2832 from hackcraft/typo_retrive_retrieve
    
    Typo fix “retrive” → “retrieve”.

[33mcommit 035e77e16fb3020a4dfe2aacd7637fb3687b71bd[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Sat Aug 15 17:22:42 2015 +0100

    Typo fix “retrive” → “retrieve”.

[33mcommit a54fb495b8c32212e051d95c28467eae136580bb[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Sat Aug 15 16:10:29 2015 +0100

    Remove redundant check.
    
    Simple removal of a check-and-branch that has the same nett result in either
    case.
    
    Also added a comment to warn off anyone tempted to do the same dangerous
    optimisation I attempted in #2809

[33mcommit c2b2639de7e8cc2643fed7160b7b09872b698e6e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Aug 15 10:45:43 2015 -0400

    Fix System.IO.Pipes test on 64-bit
    
    A test is trying to use NamedPipeServerStream.GetImpersonationUserName and is failing when run in a 64-bit process.  The client stream is being created with TokenImpersonalLevel.Identification, but MSDN states that the underlying GetNamedPipeHandleState being used to get the name will only allow retrieval of the name if SECURITY_IMPERSONATION is used, e.g. TokenImpersonationLevel.Impersonation.  Changing the TokenImpersonationLevel allows the test to pass, on both 32-bit and 64-bit.  This commit does that.
    
    What's strange is that the test passes as-is on 32-bit with Identification rather than Impersonation.  This is true on desktop as well, e.g. this program runs fine in a 32-bit process but fails with an exception in a 64-bit process:
    ```C#
    using System;
    using System.IO.Pipes;
    using System.Security.Principal;
    using System.Threading.Tasks;
    
    class Program
    {
        static void Main()
        {
            string pipeName = Guid.NewGuid().ToString("N");
            using (var server = new NamedPipeServerStream(pipeName, PipeDirection.InOut))
            using (var client = new NamedPipeClientStream(".", pipeName, PipeDirection.InOut, PipeOptions.None, TokenImpersonationLevel.Identification))
            {
                Task t = server.WaitForConnectionAsync();
                client.Connect();
                t.Wait();
    
                Console.WriteLine(server.GetImpersonationUserName()); // succeeds 32-bit, fails 64-bit
            }
        }
    }
    ```
    Something to follow-up on separately.

[33mcommit 72059f64242556eac614103e0fcf183268cfc995[m
Merge: 57c2b44 8d2cd16
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Aug 15 09:47:50 2015 -0400

    Merge pull request #2823 from stephentoub/fix_unobserved_exception_task_test
    
    Fix Task test causing CI failures

[33mcommit 57c2b441a1d966262b6a0c58f2b36ca5f34c6d1d[m
Merge: ae73c4f 303c14d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Aug 15 09:46:42 2015 -0400

    Merge pull request #2822 from Priya91/processbugfix
    
    BugFix: Fix flaky Process.StartTime test on Linux.

[33mcommit 3583434f666c390ba051af2d76efa898db36c264[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Aug 15 09:45:39 2015 -0400

    Fix process enumeration bug on Linux
    
    To find all of the processes on the system, we enumerate procfs looking for all of the pids, and then try to parse the data for each pid.  Between the time that we find a pid and try to open the relevant file for it, the process might go away, resulting in an exception.  We're currently catching FileNotFoundException, but other IOExceptions are possible for the same condition.  Same goes for subsequently enumerating the threads associated with a process. The fix is simply to be a bit more lenient in what we catch..

[33mcommit edcc6ff26677d19d94c8528365aac5e387d0c309[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Aug 15 09:28:05 2015 -0400

    Add back compat test for BackgroundWorker finalization

[33mcommit 5579d0e99d6c5014ea8c775665b822b402ab826c[m
Author: jbe2277 <jbe2277@users.noreply.github.com>
Date:   Thu Feb 12 14:31:28 2015 +0100

    Add missing finalizer back to BackgroundWorker
    
    The type isn't sealed, it exists in .NET Core purely for backwards
    compatibility with existing code, and in the desktop implementation it has
    a finalizer.  If an existing component had derived from BackgroundWorker
    and overridden Dispose to enable finalization of unmanaged resources, in
    .NET Core they would not be cleaned up.  Putting back the missing
    finalizer.

[33mcommit ae73c4fab1a608601371c22039def54449fbc2e1[m
Merge: 0987afc e203af3
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Aug 15 08:34:18 2015 -0400

    Merge pull request #2825 from stephentoub/fix_platformnotsupported_sync
    
    Deleting System.Runtime test failing after sync primitives change

[33mcommit 2925df7b4f798691131359f5a5204ba025a87704[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Aug 15 08:32:41 2015 -0400

    Fix test project build warnings about dependency conflicts
    
    Several project.json files were still referencing the old xunit assemblies, causing such warnings during build.  Another had inconsistent versions of dependent libraries.

[33mcommit 04bb3087899834aa4863fd1c5682b2d3e0d6b028[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Aug 14 15:33:46 2015 -0400

    Re-enable several System.Threading tests
    
    With https://github.com/dotnet/coreclr/pull/1387 merged, these can now be enabled.

[33mcommit e203af3b03367515e6dbb0eaf1983214f88a51de[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Aug 15 07:33:19 2015 -0400

    Deleting System.Runtime test failing after sync primitives change
    
    One System.Runtime test is testing the disposal of a Mutex.  Besides that already being covered by multiple System.Threading tests, the test is creating the Mutex with a name, which after recent mscorlib changes fails on Unix, and is preventing successful CI runs.  I'm simply deleting the test.

[33mcommit 0987afcd536743bf3a5cf868b3598e898f4aea53[m
Merge: fd08a1e c99aa51
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 14 23:37:09 2015 -0400

    Merge pull request #2798 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 8d2cd1695bd510ea428aa054bdb1248528143402[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Aug 14 23:29:31 2015 -0400

    Fix Task test causing CI failures
    
    A Task test is setting a handler for the static UnobservedTaskException event, failing an assert if it's raised. This is problematic if the test runs concurrently with another test that has an unobserved exception. This commit fixes the handler to be more robust and assert only if state related to the one test is incorrect.

[33mcommit c99aa51bff90dda680eb24a16998e5c99e29ba94[m
Merge: d8781a0 fd08a1e
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Aug 14 22:31:39 2015 -0400

    Merge remote-tracking branch 'upstream/master' into from-tfs
    
    Conflicts:
    	src/System.IO.Pipes/tests/System.IO.Pipes.Tests.csproj
    	src/System.Threading.Tasks/tests/project.lock.json

[33mcommit 303c14d139b39385c7810ec6d8e1b578d6fb6f9d[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Fri Aug 14 17:19:56 2015 -0700

    BugFix: Fix flaky Process.StartTime test on Linux.

[33mcommit d8781a0bd6aef82d75a40df9a6b7c01bf4fce1bc[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Aug 14 16:29:41 2015 -0700

    Update build tools to 1.0.25-prerelease-00079

[33mcommit c66cde3f093fc5b7031778eb15f72e6c9f910432[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Aug 14 16:20:29 2015 -0700

    Disable failing TimeZoneInfo tests
    
    See issue https://github.com/dotnet/corefx/issues/2821

[33mcommit 23f0b695bd162e0f665427c95180dc21931e5c70[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Aug 14 15:43:23 2015 -0700

    Update corefx packages to latest

[33mcommit aa77a564a2b14bdb8b7c57e5aec1605e5da53ab9[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Aug 14 15:10:39 2015 -0700

    Update buildtools to 1.0.25-prerelease-00078

[33mcommit b54ead1b2d3a615832bfaef57395078ea26d048d[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Aug 14 15:05:38 2015 -0700

    Fix pipe tests by running as x86
    
    These tests are failing with the latest build tools update which
    switches tests to run as x64.  I've moved the tests back to x86
    temporarily until they are fixed.
    https://github.com/dotnet/corefx/issues/2818

[33mcommit fd08a1efab1072c80ec16af4a86307991940e212[m
Merge: affc049 c755267
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 14 17:51:00 2015 -0400

    Merge pull request #2814 from stephentoub/task_tests_time
    
    Reduce running time of Tasks tests

[33mcommit 0cc8949ef5474c8da77cf873ed5e01ea1cd91d21[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Aug 14 14:50:00 2015 -0700

    Fix ref-def mismatch in FileSystem tests
    
    Since FileSystem tests are using a project reference to
    System.Runtime.Extensions, and S.R.E uses a project reference
    to System.Diagnostics.Debug (due to
    https://github.com/dotnet/corefx/issues/2817) these tests  must
    also use a P2P reference to S.D.D.

[33mcommit 4e02b7738a54c1ac17f2fbdd34ced7a8bfaff048[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Aug 14 14:28:01 2015 -0700

    Fix Vectors tests to not fail
    
    These tests were failing due to a JIT bug on x64.  Temporarily switch back
    to x86 until we get a new coreclr with the fix.  I tried a newer CoreCLR and hit
    a null ref instead of AV, so keeping this disabled.

[33mcommit 85bb52a7fa94a953286eb4ca3423e74eef2ff322[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Aug 14 14:23:04 2015 -0700

    Fix System.Xml.XPath.XmlDocument tests conflict
    
    These were failing to build because the referenced an older version of
    Xml.XPath then the library.  This was due to the library using a project
    reference instead of a package reference.

[33mcommit e55001549d5a3971733e60f8b8e367fd293bec41[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Aug 14 14:18:43 2015 -0700

    Fix missing SecureString dependency in System.Net.Requests tests
    
    Similar to previous update, we need to bring in the latest System.Net.* contracts,
    including this one which was indirect.

[33mcommit affc04910527d5df33918ef10fe56ced6cea53a4[m
Merge: 3d919b8 df0c068
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 14 17:18:39 2015 -0400

    Merge pull request #2811 from stephentoub/reenable_cesp_test
    
    Fix and enable a disabled Task test

[33mcommit 8209fbd6d372214eb2cb731e7e4cd77236251e12[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Aug 14 14:17:21 2015 -0700

    Fix Ref:Def mismatch in partial facade test projects
    
    Partial facades build against the live implementation assemblies for their dependencies,
    via project references.  As a result they reference the latest version of the dependency.
    
    This is causing a problem because we haven't yet built and published that version as a
    package.  For now, we'll let the tests bring in the implementation assembly via a project
    reference.  In the future we'll need to investigate if we can get these building on package
    references so that they don't require this workaround.  https://github.com/dotnet/corefx/issues/2817

[33mcommit 45f4ffb0b836ed9b136ce63a25c25650402dcf2f[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Aug 14 13:08:10 2015 -0700

    Fix compression tests to bring in correct clrcompression.dll
    
    We need to define a runtime to resolve for so that nuget emits the win7-x64 target to be used
    by the tests.  This will resolve the clrcompression dependency from the System.IO.Compression
    package.

[33mcommit 3d919b82452423c484eda0bce98db9e9d300d808[m
Merge: cda0ae1 8f52c16
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 14 14:56:22 2015 -0400

    Merge pull request #2805 from kapilash/CurlInformation
    
    Introducing checks for libcurl features

[33mcommit c755267628c2e1fd04e807c1a196b24041550ccb[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Aug 14 14:44:11 2015 -0400

    Reduce running time of Tasks tests
    
    @mellinoe, I know you're planning to spend some time fixing up the task tests.  In the meantime, they're taking between 40-80 seconds to run on my machine, and they appear to be taking an equivalent amount of time on the CI servers.  This change makes a few tweaks to bring that time down:
    - Marks the worst offending tests as [OuterLoop]
    - Changes a few places that used to be Environment.ProcessorCount and were apparently at some point changed to be a hardcoded number back to being Environment.ProcessorCount
    
    The tests now take ~10 seconds on my machine, though still with quite a bit of variability.

[33mcommit 3583b69cf892d828095e9dcb66ec89d3d7459c88[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Aug 14 11:08:08 2015 -0700

    Update to BuildTools 1.0.25-prerelease-00077
    
    This is needed to bring in changes that the test-runtime in buildtools to stable package versions.

[33mcommit ea02ad63d8e2ea11d98528e1176f1bca5f0acc6b[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Aug 14 10:27:47 2015 -0700

    Update projects to use stable packages where available
    
    This updates projects/changes that were introduced after
    https://github.com/dotnet/corefx/commit/ee1ec2891c7c65b46fa9dfb078636be503bb2a60
    without using the latest stable dependencies.
    In the case of Crypto.Alogs there was a typo in the project.json
    that caused my update script to miss it.

[33mcommit ccdf7bb4a2a87de13f8dba69ac7a0df3818c69b1[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Aug 14 10:18:06 2015 -0700

    Move System.Net tests up to latest pre-release version
    
    This change undoes the workaround from https://github.com/dotnet/corefx/commit/5d9f9d4c6ea450366c7b70af6e6006a401284d14#diff-53766f09e26c8b4b422d2946d05c83a6

[33mcommit df0c068d1eded257e638269c9f483f37690f878f[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Aug 14 12:52:20 2015 -0400

    Fix and enable a disabled Task test
    
    The test was assuming that if all tasks queued to a scheduler have completed that the scheduler won't be making further use of whatever underlying scheduler it's targeting.  That assumption is false, however, as the scheduler may still queue additional housekeeping tasks, and it requires that the underlying scheduler remain alive until the overlaying scheduler declares completion via its Completion task.

[33mcommit 8f52c16490967b7906800a46bdea546cbfb526e8[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Fri Aug 14 21:40:42 2015 +0530

    PR Comments
    
    Following PR comments were addressed:
    *. curl_version_info_data is defined till the required field
    *. the fields were made readonly.

[33mcommit 20eea4848cac8d8075eacef6dec12b750ca790d2[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Fri Aug 14 16:52:09 2015 +0530

    Introducing checks for libcurl features
    
    Runtime and load-time checks to ensure that the features user is relying
    on are available in the libcurl library loaded

[33mcommit cda0ae17da76af6bd726c5cbd9c3c55fa4b881de[m
Merge: cdc5b73 44e84d3
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Thu Aug 13 20:33:54 2015 -0700

    Merge pull request #2744 from sokket/console
    
    Adding terminfo tests to the System.Console test area

[33mcommit cdc5b731a20b806ec79b7fedad730be19125c164[m
Merge: d4782cf de58244
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 13 22:53:50 2015 -0400

    Merge pull request #2568 from Maxwe11/cleanup-BeginWaitForConnection
    
    Cleanup Begin/End usage for connection in NamedPipeServerStream

[33mcommit d4782cf13d1a0378ee7e157c2ea780d5c1a590c4[m
Merge: 5a8d8a0 62b4a45
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 13 22:29:36 2015 -0400

    Merge pull request #2775 from mellinoe/tasks-tests
    
    Add additional System.Threading.Tasks tests

[33mcommit 5a8d8a02bc51a0ba6395cbae721dc586ecd0dc25[m
Merge: 14ca655 56c7554
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 13 22:27:24 2015 -0400

    Merge pull request #2789 from justinvp/x509_storepal
    
    Avoid intermediate collection/enumerator allocations in X509 IStorePal

[33mcommit 14ca65540cfaae1a6dca8eb0636d5ac40c0c1b4d[m
Merge: 600c6a3 e5c17e5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 13 22:23:38 2015 -0400

    Merge pull request #2796 from stephentoub/threading_names
    
    Throw PlatformNotSupportedException for named Semaphore on Unix

[33mcommit 44e84d35e3d8e49d0044e5e0175871869532879b[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Tue Aug 11 13:54:14 2015 -0700

    Adding terminfo tests to the System.Console test area

[33mcommit 62b4a45faef4ab05f442b6f004e567fe3019cf73[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Aug 13 16:59:51 2015 -0700

    Enable Task.FromException tests

[33mcommit 40723b795917f2e98b64d45c17effb2546dd0cae[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Aug 13 17:07:57 2015 -0700

    Update the version of all assemblies
    
    This change updates the assembly versions of all of the corefx assemblies
    as needed after we shipped stable versions.  Assemblies with API differences
    get a minor version bump.  Assemblies with only bugfixes get a build version
    bump.
    
    In order to facilitate this I had to update the reference assemblies, so I took
    the opportunity to port them all to the open.
    
    [tfs-changeset: 1514419]

[33mcommit 21f7dc3915d30897910fab044e6ac33ee335d698[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Aug 13 16:45:25 2015 -0700

    Disable TestSchedulerNesting test case
    
    There seems to be a potential product issue that needs investigating here.

[33mcommit 0b78e223b6b7ceecdc4ab7254c088d94beac5b0f[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Thu Aug 13 16:43:50 2015 -0700

    Clean up a few places in Tasks tests
    
    Responding mostly to PR feedback and doing a bit of extra cleanup

[33mcommit 56c7554a666e8cfcc8ba26afdffb40e3fe4da149[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Wed Aug 12 17:52:07 2015 -0700

    Avoid intermediate collection allocations in X509 IStorePal

[33mcommit d1d5c1d2e4fe635399196f7650ba2815f4056f6f[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Thu Aug 13 16:36:04 2015 -0700

    Fix X509CertificateCollection.CopyTo
    
    Switch from using LowLevelListWithIList<Object> to List<Object> and
    use List<T>'s ICollection.CopyTo implementation. As part of this,
    update project.json, adding an explicit dependency on
    System.Collections (other dependencies, e.g. System.IO.FileSystem,
    already depend on System.Collections). Also added some CopyTo tests.

[33mcommit e5c17e563423905c59e028b927027ae99e818b5e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Aug 13 19:24:27 2015 -0400

    Throw PlatformNotSupportedException for named Semaphore on Unix
    
    libcoreclr's synchronization primitives implementation currently supports names, but those names have process-wide rather than system-wide scope.  This is very dangerous for most code that would want names, as they're typically used for cross-process synchronization, and as such the current behavior could lead to bad race conditions difficult to diagnose.  Until a better solution is available, we will throw PlatformNotSupportedException when trying to create such named primitives.
    
    Semaphore's code is in the corefx repo, so this commit both updates the semaphore implementation and updates the tests for all of the named primitives.  A separate commit in coreclr will address the primitives implemented there.  A few of the modified tests that are expected PlatformNotSupportedException are currently marked as [ActiveIssue], as they will fail until the coreclr changes are merged.

[33mcommit 600c6a323c1c7cf08d499b61684b7c7492821b65[m
Merge: 0268cb8 1fc747d
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Thu Aug 13 16:07:11 2015 -0700

    Merge pull request #2792 from pgavlin/FixSocketAddressPalTest
    
    Fix a SocketAddressPal test.

[33mcommit 0268cb85fe9e0feebdccb18189f79d93c2d4b6de[m
Merge: 9c55364 0d0c501
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 13 19:00:09 2015 -0400

    Merge pull request #2795 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit de5824470a8995437b77a1fa5dfcbeff60404ed2[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Thu Aug 13 21:56:28 2015 +0300

    Fix unit test and test outer cancellation for WaitForConnectionAsync
    1. For existing test we replace ThrowsAsync with ThrowsAnyAsync.
    The reason for this change is that previous cancellation implementation of WaitForConnectionAsync
    was based on throwing OCE (directly or via CancellationToken.ThrowIfCancellationRequested).
    Since switching to TaskCompletionSource we use its SetCanceled method which propagate on task TaskCanceledException
    instead of OCE.
    2. Added regression test case with outer cancellation for WaitForConnectionAsync

[33mcommit 31ac03bf27b7c02826b53e6567fb4377a8e320ff[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Thu Aug 13 21:50:16 2015 +0300

    Cleanup Begin/End usage for connection in NamedPipeServerStream

[33mcommit 9c55364fe7a15efe3e3a8a8c1c887ef2cf3dee9b[m
Merge: 2ef7a72 bd2d87d
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Aug 13 15:49:19 2015 -0700

    Merge pull request #2794 from ianhays/FSTempdir
    
    Fixed test that was leaving temp directories in root folder

[33mcommit 0d0c501379b6091b4613cac512a1c22dd9db16d6[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Thu Aug 13 14:46:34 2015 -0700

    Fix regression caused by https://github.com/dotnet/corefx/commit/b00fed79842d13d9931cf963749aa00006fdacc0
    
    [tfs-changeset: 1514359]

[33mcommit bd2d87d7abcf092840e0929c6df1116665f90460[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Aug 13 14:28:37 2015 -0700

    Fixed test that was leaving temp directories in root folder
    
    One of the Extended Path FileSystem tests was leaving temporary test directories in the root folder of the running directory. This small change modified the tests to instead treat the user's temp directory as the root.

[33mcommit 2ef7a72bfa51e0f2fa210cd0023e7d6d5e8be176[m
Merge: 2da5e8b b00fed7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 13 15:57:24 2015 -0400

    Merge pull request #2343 from justinvp/filesysteminfo
    
    Eliminate extra IFileSystemObject allocation for FileSystemInfo/FileInfo/DirectoryInfo on Win32 and Unix

[33mcommit 2da5e8b1395bdcdd9184014860408cb6d84a1ae7[m
Merge: 999c624 505c2bb
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Thu Aug 13 12:29:09 2015 -0700

    Merge pull request #2790 from AtsushiKan/rsahash
    
    Implement full CNG hash support for RSACng.SignData

[33mcommit 999c62481323eef176ac949b7cdc10cda2dcd69a[m
Merge: a3b4cf2 4d6d556
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 13 14:46:57 2015 -0400

    Merge pull request #2730 from ianhays/pipes
    
    Reworked the tests for System.IO.Pipes

[33mcommit 1fc747dc744974d4d03a1dd750306beab4ba2b99[m
Author: Pat Gavlin <pagavlin@microsoft.com>
Date:   Thu Aug 13 11:46:40 2015 -0700

    Fix a SocketAddressPal test.
    
    The Get_Set_Port_Throws test was tripping an assert because it had not
    set an address family for the socket address. The test has been split
    into a test per supported address family.

[33mcommit 505c2bb80d17ae2a91dc9d9c28e41379b10ca22c[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Thu Aug 13 11:32:05 2015 -0700

    Implement full CNG hash support for RSACng.SignData

[33mcommit a3b4cf23f1a6867862b65993f2593107e843453f[m
Merge: e5e6261 a7d1d26
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 13 14:26:38 2015 -0400

    Merge pull request #2781 from stephentoub/timer_fixes
    
    Fix a few more issues in Timer tests

[33mcommit e5e626138ed5f4553eb5e4e612e24c02ce0c8895[m
Merge: 6270b91 6568da5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 13 14:26:21 2015 -0400

    Merge pull request #2786 from stephentoub/fix_fsw_regression
    
    Fix regression in FileSystemWatcher

[33mcommit b00fed79842d13d9931cf963749aa00006fdacc0[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Sat Aug 8 15:43:16 2015 -0700

    Eliminate extra IFileSystemObject allocation on Win32 and Unix
    
    FileSystemInfo/FileInfo/DirectoryInfo all carry a IFileSystemObject
    which is used internally for the actual implementation. While this
    enables FileSystemInfo/FileInfo/DirectoryInfo to be used with WinRT,
    it comes with the cost of an extra unnecessary allocation for plain
    Win32 and Unix. This change eliminates the allocation on Win32 and
    Unix. After this change, the extra object allocation only happens
    when the WinRT APIs need to be used.

[33mcommit 24820ce8305c87d520d776ebcb300e37dddc48c4[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Sat Aug 8 15:19:32 2015 -0700

    Rename [Unix|Win32]FileSystemObject.cs files
    
    Rename the following files in preparation for a refactor:
    - UnixFileSystemObject.cs -> FileSystemInfo.Unix.cs
    - Win32FileSystemObject.cs -> FileSystemInfo.Windows.cs
    
    The renames are being done in their own commit first to help git
    maintain source history for the renamed files.

[33mcommit 4d6d556362a7777205e706c9393e4eab6f3a5896[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Thu Aug 6 09:32:47 2015 -0700

    Reworked the tests for System.IO.Pipes
    
    I made a number of changes to our current Pipes tests and added several hundred new tests for edge cases that were previously ignored, particularly with Named Pipes defined with an InOut PipeDirection
    
    - Refactored the great Throws tests currently in place to allow testing pipes with all in/out direction combinations for both Named pipes as well as Anonymous pipes
    - Replaced all relevant hardcoded pipe names with unique values
    - Reorganized the tests to use more inheritance and share more code for easy extensibility
    - All test classes are now in the same namespace: System.IO.Pipes.Tests
    - Expanded tests for InOut NamedPipes and made all existing In/Out tests also test all valid InOut combinations.
    - Split the Named and Anonymous tests into two separate folders: NamedPipeTest and AnonymousPipeTest
    - Increased code coverage across all test classes

[33mcommit 6270b9196a1a4c0b262e10b06a6f85a904ec9c76[m
Merge: f6e99e3 868da12
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Thu Aug 13 22:43:35 2015 +0530

    Merge pull request #2784 from rajansingh10/mfeature
    
    Enabled max redirection in HTTP xplat

[33mcommit 868da12eee3983ad1fdf2031a99e68652b81addb[m
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Thu Aug 13 11:24:02 2015 +0530

    Enabled max redirection in HTTP xplat
    	modified:   ../../Common/src/Interop/Unix/libcurl/Interop.libcurl_types.cs
    	modified:   System/Net/Http/Unix/CurlHandler.cs
    	modified:   System/Net/Http/Unix/HttpClientHandler.Unix.cs

[33mcommit 6568da5ad7b4e5d516613f6a80865d5e88d72b31[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Aug 13 10:09:40 2015 -0400

    Fix regression in FileSystemWatcher
    
    As part of the bug fix in https://github.com/dotnet/corefx/commit/f2720abb758b50a9debb5ec146939ef6f5cef82d , a regression was introduced, one that we didn't catch until recently due to not having a test that stressed stopping and quickly restarting an FSW doing monitoring.
    
    At the time of that fix, the active asynchronous monitoring operation didn't have its own copy of the directory handle; instead, it just used the single field on the FSW instance.  As such, in a race condition between the asynchronous monitoring operation trying to use that instance and the main thread stopping the FSW and nulling out the field, the asynchronous monitoring operation could experience a NullReferenceException.  The fix was to stop nulling out the field and just rely on closing the handle being enough to signal that monitoring should stop.
    
    However, this causes a problem in a particular race condition.  While a SafeHandle is in use by a P/Invoke operation, its reference count is temporarily incremented so as to prevent it from being closed while in use.  This means that if the directory handle is disposed of while it's being used by ReadDirectoryChangesW, the handle's IsClosed won't return true until after ReadDirectoryChangesW returns.  When the FSW is stopped, Dispose is called on the handle, and then when it's restarted, the handle's IsClosed is checked to see if there's currently an active monitoring operation, and if there is, the FSW assumes it doesn't need to restart anything.  But if the stop and the start both occur during the call to ReadDirectoryChangesW, then the start won't actually start anything.
    
    My reliability/performance fixes in https://github.com/dotnet/corefx/commit/b6c478ccc9729e22ac7b9bf2248b644b51883db2 eliminated the reliance on the shared directory handle field: the asynchronous monitoring operation has its own copy.  Thus, there's no longer a problem in nulling out the directory handle field.  The fix for the regression is simply to do so.
    
    (Long explanation for a fix that's simply to null out a field :-)

[33mcommit f6e99e3df6893d67ba4f53ba9305331123a1f44a[m
Merge: 2ab98bf b2de381
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 13 08:35:33 2015 -0400

    Merge pull request #2758 from rajansingh10/myfeature
    
    Enabling cookie container in HTTP xplat

[33mcommit 2ab98bffa71060d8b312afa0a45fae0ded88ca32[m
Merge: 416019f 75b2ca3
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Wed Aug 12 23:27:32 2015 -0700

    Merge pull request #2780 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit b2de38156bdd23e6cc3c3e5e40a30cac674475ca[m
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Thu Aug 13 09:43:54 2015 +0530

    Incorporated comments
    	modified:   System/Net/Http/Unix/CurlHandler.cs
    	modified:   System/Net/Http/Unix/HttpClientHandler.Unix.cs

[33mcommit a7d1d269ddff168ff4efc6afb21031fbda14c7e9[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Aug 12 22:39:12 2015 -0400

    Fix a few more issues in Timer tests
    
    - Several tests were disposing the Timer before the callback with Asserts could be invoked, such that the tests were nops rather than validating what they were trying to validate.
    - Several tests were modifying shared state without synchronization; very unlikely to have caused a problem, but better safe than sorry.
    - One test had a race condition that could have resulted in a NullReferenceException, with a callback that attempted to access a captured local before it was initialized.
    - Several tests were susceptible to the Timer being tested getting finalized in release builds, which would cause the test to fail

[33mcommit 75b2ca302a6b3bc2d9d616e112764dfd72f534d4[m
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Wed Aug 12 18:00:55 2015 -0700

    Add HMACMD5 to CoreFX.
    
    Fixes #2724.
    
    [tfs-changeset: 1513908]

[33mcommit 416019f1fa6ac4dcc782566d26eea1e23d97ac7b[m
Merge: 8bd1496 552754e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 12 20:28:31 2015 -0400

    Merge pull request #2771 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 8bd1496f05976d5c067a4e2114dc22747a464dac[m
Merge: a98cef3 7625645
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Wed Aug 12 17:27:27 2015 -0700

    Merge pull request #2776 from bartonjs/rsatest_verifyparameters
    
    Make RSA tests' AssertKeyEquals tolerate D changing.

[33mcommit a98cef3965bd2e6de2337d5fb0ddd8f7f7e40c2a[m
Merge: 0cbcae7 af1b23b
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Wed Aug 12 17:10:47 2015 -0700

    Merge pull request #2747 from bartonjs/unix_export_pfx
    
    Add support for exporting as certificates on Unix.

[33mcommit af1b23b60c6771a17c0ae0619cb91168ae5b6112[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Aug 11 19:13:19 2015 -0700

    Add support for exporting as certificates on Unix.
    
    Adds support for exporting an X509Certificate2 or an X509Certificate2Collection as a PFX.
    
    PFX export is limited to a single private key (issue 2743), and fails on an empty collection (issue 2746).

[33mcommit 7625645cbde31b776269fc84e2082ee7e904b4e1[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Aug 12 16:19:48 2015 -0700

    Make RSA tests' AssertKeyEquals tolerate D changing.
    
    Windows CNG always exports the D value they would have generated (using the lambda modulus), rather than the value that was given to them.  This is particularly relevant for OpenSSL-generated keys, because they produce a D value using the totient modulus.
    
    Now the test accepts equal valued arrays (like it did), or if they're not SequenceEqual the new D value will be tested for legality; and a legal value will be accepted even if it's different.

[33mcommit 0cbcae7986fe4539b701668c8968d5fa966d5341[m
Merge: e7a43ba e537fb7
Author: Guillermo Rangel <josra@microsoft.com>
Date:   Wed Aug 12 16:04:55 2015 -0700

    Merge pull request #2763 from josguil/WinHttpRequestStream.Write-FixingPotentialOverflow
    
    Fixing potential integer overflow in arithmetic operation (+).

[33mcommit 3efd19931a28e0d978fb273d20d857f597fca93c[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Wed Aug 12 15:59:54 2015 -0700

    Add additional System.Threading.Tasks tests
    
    I've ported the remainder of our Tasks tests from our internal sources. A
    lot of these are moved over unchanged (except for porting to xUnit). Some
    of the tests were not really designed to be run one after another, and
    left a lot of "orphaned" tasks doing a whole bunch of work even when the
    test case finished running. This was causing unpredictable performance, as
    some test would take a really long time in a "full run", but very little
    time if run individually. I've attempted to clean those cases up, so
    that each test case cleans up after the tasks it starts. I have also marked
    a decent chunk of these tests as OuterLoop because they tend to run for a
    very long time (some just by their nature, some probably can be optimized
    if we want to make them inner loop tests).

[33mcommit e7a43bac3b2c91442626a4ac2f9f0523a2e7af05[m
Merge: a414400 c449509
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Wed Aug 12 15:54:28 2015 -0700

    Merge pull request #2754 from AtsushiKan/rsaencrypt
    
    More robust RsaCng.Encrypt/Decrypt/SignHash.

[33mcommit a414400fa791b4a316e618331b69552b38995ac4[m
Merge: 501dc41 5008da1
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Aug 12 15:19:21 2015 -0700

    Merge pull request #2767 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 501dc41ccb8a2406a9ce95fc56b0204e80639024[m
Merge: 4903f60 7859c07
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Wed Aug 12 15:18:39 2015 -0700

    Merge pull request #2766 from Priya91/processbugfix
    
    BugFix: Test modules from CurrentProcess to avoid cross bit access on 64bit machines

[33mcommit 552754e3ed57f6a23116560b59562901bc427cc6[m
Author: Shin Mao <shmao@microsoft.com>
Date:   Wed Aug 12 14:57:00 2015 -0700

    Rollback changeset 1498872
    
    [tfs-changeset: 1513845]

[33mcommit e537fb7c9e24d608ab5c85e52e39ddfcbbf5f41b[m
Author: Guillermo Rangel <josra@microsoft.com>
Date:   Wed Aug 12 11:27:44 2015 -0700

    Fixing potential integer overflow in arithmetic operation (+).
    
    Using a - operation instead of + so we don't need casting to long.

[33mcommit 5008da17ec9438e3f1bae5b30b5e3bac591e8d63[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Wed Aug 12 14:14:13 2015 -0700

    Allow System.Numerics.Vectors to target old PCL profile
    
    This change allows the System.Numerics.Vectors NuGet package to be installed into the PCL profile that we were supporting in all of the older versions of the package. After some more verification, I will mark this as stable and publish a new stable version. I've also changed the dependencies of the project to be the minimum versions that they actually need. When I moved this project over from PCL contract refs -> NuGet package contract refs, I just used the highest-versions of the contracts.
    
    [tfs-changeset: 1513832]

[33mcommit 4903f601037c92a2b9d7b877ea3736a4c324c7cc[m
Merge: 7451788 2ed6f39
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 12 16:50:53 2015 -0400

    Merge pull request #2734 from sokket/ci-fix
    
    Increasing timeouts on System.Threading.Timer tests to prevent flakiness

[33mcommit 745178865e22e75a6090d4359abc936ad615b148[m
Merge: d341bdd 75924c0
Author: VSadov <vsadov@microsoft.com>
Date:   Wed Aug 12 13:44:18 2015 -0700

    Merge pull request #2753 from VSadov/fix1201618
    
    Fixed interpreter support for properties on Nullable<T>

[33mcommit 7859c07510eb19c12a7d87e8bfc9e0f725305291[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Wed Aug 12 13:38:29 2015 -0700

    BugFix: Test modules from CurrentProcess to avoid cross bit access on 64bit machines.

[33mcommit 2ed6f39b2313b7fe3a8b92005119d37370eb911d[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Tue Aug 11 14:06:33 2015 -0700

    Increasing timeouts on System.Threading.Timer tests to prevent flakiness

[33mcommit 75924c09ff06db68f271b16e518dde2ed6b2ef12[m
Author: vsadov <vsadov@microsoft.com>
Date:   Wed Aug 12 12:41:11 2015 -0700

    tweaked TestNullableMethods to be compatible with other versions of xunit.

[33mcommit d341bdd8d2496e381ffcd77dfb9424c3e2acf4ab[m
Merge: 304b884 1b21435
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 12 14:57:20 2015 -0400

    Merge pull request #2759 from stephentoub/disable_failing_fsw_test
    
    Disable sporadically failing FSW test

[33mcommit 1b2143576e06662f65bc5d870bd5a2845afce198[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Aug 12 13:53:55 2015 -0400

    Disable sporadically failing FSW test
    
    Issue #2740

[33mcommit f79c1cd2a4c646b0434782c64f6de3a686b0bf38[m
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Wed Aug 12 23:16:08 2015 +0530

    Enabling cookie container in HTTP xplat
    	modified:   ../../Common/src/Interop/Unix/libcurl/Interop.libcurl_types.cs
    	modified:   System/Net/Http/Unix/CurlHandler.cs
    	modified:   System/Net/Http/Unix/HttpClientHandler.Unix.cs

[33mcommit 9b109e96675d69b293e8b6a2374e27d955c3e3c4[m
Author: vsadov <vsadov@microsoft.com>
Date:   Wed Aug 12 09:55:06 2015 -0700

    CR feedback

[33mcommit 304b88465e48141f9e58914acc464d5a3d19aba0[m
Merge: 0038741 88531c6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 12 12:28:52 2015 -0400

    Merge pull request #2749 from axelheer/biginteger-benchmark
    
    Add performance tests for BigInteger

[33mcommit c449509256e035de40051c4f90ebfa0a9ceb065c[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Wed Aug 12 09:10:47 2015 -0700

    More consistency.

[33mcommit 88531c6d67f97c4fbf4354ab03ebc01d31ff3ac1[m
Author: Axel Heer <axel@heer.eu>
Date:   Tue Aug 11 23:21:03 2015 +0200

    Add performance tests for BigInteger
    
    These unit tests should help measuring performance, until we have some
    kind of real performance-measurement system in place.

[33mcommit 0038741158babdd4b9f3d5a15ac274c507576969[m
Merge: 4abf509 81e84b7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 12 11:29:27 2015 -0400

    Merge pull request #2742 from stephentoub/change_fsw_timeouts
    
    Change timeouts on FSW tests

[33mcommit 9cc1656e9f3d7235c298ac531148a3f22034bcbc[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Wed Aug 12 07:55:55 2015 -0700

    More robust RsaCng.Encrypt/Decrypt/SignHash.
    
    This addresses two pieces of feedback from WinCrypto:
    
    - NCryptDecrypt() can potentially ask for more buffer space than
      he ends up needing (saves him from having to do a extra decrypt
      just to calculate the size.) We need to guard against that
      and shrink the array to fit, in case the api overbudgeted.
    
      I've added the resize to other places where we do this
      "okay, here's 0 bytes of space. What, you want more? Okay,
      here it is" API pattern. It's cheap insurance.
    
    - Try to avoid the double-call in some cases by estimating
      a buffer size upfront (Encrypt/Decrypt/SignHash).

[33mcommit 77ae62a74d82aa5c6488148da978f277a190acce[m
Author: vsadov <vsadov@microsoft.com>
Date:   Wed Aug 12 07:22:36 2015 -0700

    Fixed interpreter support for properties on Nullable<T>
    such as HasValue / Value
    
    Also fixed a problem with invoking of GetValueOrDefault on null receiver discovered while testing.
    We should return a default  value in such case, not the boxed receiver which is null and would cause NRE.

[33mcommit 4abf509d5cef22f82c30f006f2faeb917bc519c1[m
Merge: 0c677d5 e7e8e54
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 12 08:23:03 2015 -0400

    Merge pull request #2350 from hackcraft/short_circuit_linq
    
    Short-circuiting versions of Enumerable methods.

[33mcommit e7e8e5414290dbcf41c45d2f83521b6bd33a1249[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Wed Aug 12 11:48:58 2015 +0100

    Short-circuiting versions of Enumerable methods.
    
    Fixes #2349
    
    Last<TSource>(this IEnumerable<TSource>, Func<TSource, bool>)
    LastOrDefault<TSource>(this IEnumerable<TSource>, Func<TSource, bool>)
    Single<TSource>(this IEnumerable<TSource>, Func<TSource, bool>)
    SingleOrDefault<TSource>(this IEnumerable<TSource>, Func<TSource, bool>)
    Min(this IEnumerable<float>)
    Min(this IEnumerable<float?>)
    Min(this IEnumerable<double>)
    Min(this IEnumerable<double?>)
    
    Last and LastOrDefault only short-circuit if the source is an IList<T>.
    
    Last and LastOrDefault add a check for if the source is an IList<T> comparable
    to that take by the form that don't take a predicate.
    
    Apart from that no tests are added: While we could check for e.g. int.MaxValue
    being seen by Max(this IEnumerable<int>), and so on, that would add a test for
    every element, and so penalise sequences that did not contain it.
    
    Min/MinOrDefault on double and float already had a similar improvement made in
    5eb063ac, but with a backwards-compatibility loop added. Here that loop is
    simply removed.
    
    Included are tests for both the state before and after the changes.

[33mcommit 0c677d5b22514f41119ec7de4ac403a42f04e914[m
Merge: fe9f9c5 a227ab4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 11 22:01:45 2015 -0400

    Merge pull request #2737 from ianhays/overlap
    
    Removed USE_OVERLAPPED from FileSystem

[33mcommit fe9f9c52608c435de284832c9921d479332b7b9f[m
Merge: f3c4f89 381c91e
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Aug 11 20:53:01 2015 -0500

    Merge pull request #2728 from eerhardt/master
    
    Adding a test case for TimeZoneInfo.GetSystemTimeZones.

[33mcommit 81e84b7910244f2f72ba760c100b16c01a38877c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Aug 11 19:36:20 2015 -0400

    Change timeouts on FSW tests
    
    When we're waiting for an event that we know will arrive, we can wait for a fairly long time, because if it doesn't arrive we're going to fail the tests anyway.  This changes makes all of the ExpectEvent calls use a long timeout, much longer than most were previously using.  In the process I removed all of the custom values being passed, as they were all the same or shorter than the new default.  This should help to minimize avoid false positive flakiness.

[33mcommit f3c4f89556c7be898a60f38e4092bb27094dacbc[m
Merge: 2df1b03 b374a7a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 11 18:52:36 2015 -0400

    Merge pull request #2725 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 2df1b0348c0d69d13d40ac29ce814ae05b52eb72[m
Merge: 3df3655 3eb22a0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 11 18:52:27 2015 -0400

    Merge pull request #2733 from ianhays/FSDesign
    
    Cleaned up tests for closed issues

[33mcommit a227ab403b7da8edae7ce2758536452fb14a0549[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Tue Aug 11 15:16:56 2015 -0700

    Removed USE_OVERLAPPED from FileSystem
    
    All ifdefs around USE_OVERLAPPED have been removed such that the new behavior mimics the old behavior when USE_OVERLAPPED = true. Resolves #2722

[33mcommit 3eb22a0ef2eb007b8fc8410d1a0fefc23311dc08[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Tue Aug 11 13:45:37 2015 -0700

    Cleaned up tests for closed issues
    
    Design review feedback brought about the closed issues #2537, #2403, #2402, #2369, #1728. This Commit cleaned up the tests around those decisions and removed OuterLoop from the GetSetTimes tests.

[33mcommit 3df365531591bc6b9e6743dac3d18b7387a3894c[m
Merge: 29faa78 e76774d
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Aug 11 14:52:11 2015 -0700

    Merge pull request #2608 from josguil/PropagateCancelationToken-Issue2149
    
    From Feedback in issue 2149, Propagate CancellationToken in calls to TrySetCanceled:

[33mcommit 29faa7890376920a4d3ee9e8ec52962874ab6842[m
Merge: 210c190 e307b60
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Tue Aug 11 14:51:13 2015 -0700

    Merge pull request #2735 from dotnet/stephentoub-patch-1
    
    Point Linux debug CI badge in README to test job rather than to build job

[33mcommit e307b60fdf046ee0493ac2383bccc494416cd1a8[m
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 11 17:47:18 2015 -0400

    Point Linux debug CI badge in README to test run
    
    It currently points to the latest build, but it'd be better to have it point to the latest test run (eventually these will be one-in-the-same, but for now they're separate).

[33mcommit e76774df88b497107e8289fce314ea149abc7811[m
Author: Guillermo Rangel <josra@microsoft.com>
Date:   Fri Aug 7 16:30:41 2015 -0700

    Fixing CancellationToken not propagating properly and adding some Tests to verify it.
    
    Addressing Feedback in GitHub
    
    Renaming TestHandler to SendAsyncWinHttpMockHandler and adding missing spaces.
    
    Added missing line in json file to use System.Runtime.InteropServices.RuntimeInformation.

[33mcommit 381c91eff2d7bc8d3ccc72462015d227be33a9a8[m
Author: Eric Erhardt <eerhardt@microsoft.com>
Date:   Fri Aug 7 17:43:44 2015 -0500

    Adding a test case for TimeZoneInfo.GetSystemTimeZones.

[33mcommit 210c1908f90aef06fe80f91734a1879f65673e1c[m
Merge: b387153 9f791e7
Author: Josh Free <joshfree@users.noreply.github.com>
Date:   Tue Aug 11 13:11:46 2015 -0700

    Merge pull request #2729 from stephentoub/complex_fix
    
    Fix very sporadically failing Complex test

[33mcommit b3871538d5a0397fc22ece274f28cd8e623a5d9f[m
Merge: 3280355 39812d4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 11 15:25:32 2015 -0400

    Merge pull request #2726 from stephentoub/xml_test_paths
    
    Fix some dir path separators in XML tests

[33mcommit 328035557beac29cf51b1d00d0a634dd8a969aaa[m
Merge: d2f3a64 fe22fb0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 11 15:08:46 2015 -0400

    Merge pull request #2698 from justinvp/filestream_verifyhandleissync
    
    Avoid the byte[] alloc in Win32FileStream.VerifyHandleIsSync

[33mcommit 39812d40e1f6a0af7c3489a7c2306f20772a8f53[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Aug 11 13:46:20 2015 -0400

    Fix some dir path separators in XML tests
    
    They're causing some testing failures on Unix.

[33mcommit d2f3a649e6a543bb6f680c98427d025141b4b229[m
Merge: 39fb86f 6ed2164
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Tue Aug 11 12:58:48 2015 -0500

    Merge pull request #2641 from eerhardt/master
    
     Fix all TimeZoneInfo tests on Linux.

[33mcommit b374a7a1cc99e41b99dafb84e21c01f2f8c51372[m
Author: SGuy Ge <sguyge@microsoft.com>
Date:   Tue Aug 11 10:23:43 2015 -0700

    Fix KeyName/ValueName attrs in CollectionDataContract having no effect
    
    [tfs-changeset: 1513104]

[33mcommit 6ed2164b07ac7e70bff294f38b4771035c3d111f[m
Author: Eric Erhardt <eerhardt@microsoft.com>
Date:   Tue Aug 11 10:41:03 2015 -0500

    Merge TimeZoneInfo tests with latest changes.

[33mcommit fe22fb00349400a198417f48979bd6bae7645b6e[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Mon Aug 10 14:17:57 2015 -0700

    Avoid the byte[] alloc in Win32FileStream.VerifyHandleIsSync
    
    Call the native ReadFile and WriteFile interop functions directly,
    passing a stack allocated byte, instead of allocating a byte[]
    of length 1 on the heap. Added common error handling for
    ERROR_INVALID_HANDLE.

[33mcommit dbbe11d9263f4b863bf419c307ff42ad887acefc[m
Author: Eric Erhardt <eerhardt@microsoft.com>
Date:   Fri Aug 7 14:14:59 2015 -0500

    Adding a TimeZoneInfo test for Newfoundland.
    
    Newfoundland has an offset of UTC-3:30 and UTC-2:30, ensuring
    the TimeZoneInfo class handles this correctly.

[33mcommit 9406f90f2f0686846806b87fa89da97a331c83eb[m
Author: Eric Erhardt <eerhardt@microsoft.com>
Date:   Thu Aug 6 22:39:52 2015 -0500

    Adding an additional test for Europe/Lisbon in 1996.
    
    Portugal made a transition from standard to DST without
    changing the UTC offset in 1996.  Adding a test to verify this
    is correctly represented.

[33mcommit 153ec68fc1ed53259e2cdfd286976e236966752e[m
Author: Eric Erhardt <eerhardt@microsoft.com>
Date:   Wed Aug 5 16:03:07 2015 -0500

    Add a test for multi year daylight savings.

[33mcommit 021dfe781855e064a758e87b48f6452a14b982b5[m
Author: Eric Erhardt <eerhardt@microsoft.com>
Date:   Mon Aug 3 15:19:40 2015 -0500

    Fix TimeZoneInfo tests on Linux.
    
    Now that TimeZoneInfo is correctly parsing and creating adjustment rules on Linux, remove all [ActiveIssue] attributes in the TimeZoneInfo tests and make them pass on Linux.
    
    There are a few cases where Windows and Linux rules differ.  For instance, Linux will use local mean time for DateTimes before standard time came into affect.  Also, there are some Australia time zones that changed rules that Windows couldn't/didn't support.

[33mcommit 39fb86f50272761180084a8198ed7a08b58e565c[m
Merge: f5b65d2 f5e59d3
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Tue Aug 11 06:42:40 2015 -0700

    Merge pull request #2712 from AtsushiKan/rsacngfixes
    
    Add the common RSA tests to RSACng.Test.

[33mcommit f5e59d313525ce8e5c9e641075cf929344c20d4c[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Tue Aug 11 06:36:55 2015 -0700

    Unify the RSACng tests with the other RSA classes.
    
    This required some fixes to RSACng that will need to
    be ported to 4.6.
    
    Set the export policies so that ImportParameters(true)
     works.
    
    Throw the right (or wrong, depending on your pov)
     exception if ImportParameters() is given an
     RSAParameters with null fields.
    
    VerifyHash(). Don't throw CryptographicException
     if the hash doesn't verify. Just return false like
     the nice docs say.

[33mcommit f5b65d2f82e1857b77d328de95eff307d05d624a[m
Merge: 3370679 9c21d46
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 11 09:10:58 2015 -0400

    Merge pull request #2719 from Maxwe11/ArgumentNullException-msg
    
    Pass message to ArgumentNullException in ReadAsync/WriteAsync

[33mcommit 9c21d464eb8d2f5da8c0e99bc00cd6f4a6e4812e[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Tue Aug 11 12:39:16 2015 +0300

    Pass message to ArgumentNullException in ReadAsync/WriteAsync
    For consistency with synchronous Read/Write.

[33mcommit 33706794de38bd902745a9d775aee6562a48b6e7[m
Merge: 9719572 d3a3da6
Author: Vijay Kota <vijaykota@users.noreply.github.com>
Date:   Tue Aug 11 11:44:08 2015 +0530

    Merge pull request #2706 from vijaykota/_feature
    
    HttpClient xplat: Add chunked mode support

[33mcommit d3a3da65c8caf151adfd6db242676b0d6f275f35[m
Author: Vijay Kota <vijayko@microsoft.com>
Date:   Mon Aug 10 17:39:28 2015 +0530

    HttpClient xplat: Add chunked mode support

[33mcommit 9719572d221e230bef53e7ae75c87a1181ba68c3[m
Merge: 2013007 adfcc89
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Tue Aug 11 10:19:38 2015 +0530

    Merge pull request #2705 from rajansingh10/myfeature
    
    Fixing multi response header issue along with putting checks in http message parser.

[33mcommit 9f791e75401df60e311b891b63a82dac40d008fc[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Aug 11 00:20:15 2015 -0400

    Fix very sporadically failing Complex test
    
    I'd previously "fixed" this by incorporating infinity support, but I needed to do the comparisons based on IsNegative/PositiveInfinity rather than by comparing the values directly.

[33mcommit 2013007193c2991f3b5ae3964b5ca08374ae52db[m
Merge: 88beb44 83decea
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 11 00:00:48 2015 -0400

    Merge pull request #2716 from stephentoub/disable_fsw_parallel
    
    Disable parallelization of FSW tests

[33mcommit adfcc89dc3e4b59b0a615cfee3672ad5631751e3[m
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Tue Aug 11 09:23:05 2015 +0530

    Incorporated comments
    	modified:   System/Net/Http/Unix/CurlCallbacks.cs

[33mcommit 83decea6937e1296be20202ff2f8ace51339e958[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Aug 10 23:11:09 2015 -0400

    Disable parallelization of FSW tests
    
    My previous change to rename FSW test classes led to FSW tests getting parallelized.  It turns out that some of the tests are not robust against this due to using file names that can end up conflicting with other tests.  Additionally, it appears that the waiting / timeouts used by the tests is very susceptible to failure when run in parallel due to reliance on the shared thread pool, causing more failures in CI.

[33mcommit 88beb446879bf9097c340c3a625f82c70d992ea6[m
Merge: b0d0470 bac232c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 10 19:18:47 2015 -0400

    Merge pull request #2696 from stephentoub/systemio_tests
    
    Port additional System.IO tests from ToF

[33mcommit bac232c457ff0053909bc2c3a45f6711f9df5121[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Aug 9 12:06:31 2015 -0400

    Address PR feedback
    
    - Fixed test failures on Linux
    - Fixes test failures when run with different cultures
    - Fixed ordering of arguments to Assert.Equal
    - Changed several Assert.Equal to be Assert.Same
    - Added some missing Assert.True calls
    - Changed several [Facts] to be [Theory]s
    - Removed some stale comments
    - Added copyright header to all new .cs files
    - A few other miscellaneous things...

[33mcommit 381785c196c573fe4ee7b36eaf4c53f4f5526ca0[m
Author: Matt Cohn <macohn@microsoft.com>
Date:   Tue Jul 7 18:31:10 2015 -0700

    Port additional System.IO tests from ToF
    
    Port additional System.IO tests from ToF for
    System.IO.BinaryWriter
    System.IO.MemoryStream
    System.IO.Stream
    System.IO.StreamReader
    System.IO.StreamWriter
    System.IO.StringReader
    System.IO.StringWriter

[33mcommit b0d0470b9a6387a08bf05d22c6d1e713865ce0b6[m
Merge: 0c9e9f4 a0baa09
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 10 16:05:41 2015 -0400

    Merge pull request #2693 from stephentoub/runtimeinformation_cc
    
    Boost RuntimeInformation code coverage to 100%

[33mcommit 0c9e9f47c5deef7afd0b243bf8dd5c83ce190c0a[m
Merge: d520642 2fbabe4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 10 16:02:11 2015 -0400

    Merge pull request #2682 from stephentoub/fsw_fix_bugs
    
    Improve FileSystemWatcher implementation on Windows, and fix tests

[33mcommit d5206428aca5df90199a69245188975bc0e355b2[m
Merge: 576de50 6621eac
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Mon Aug 10 12:59:23 2015 -0700

    Merge pull request #2681 from sokket/timers
    
    Adding new Unit Tests for the System.Threading.Timer implementation

[33mcommit 576de50356d4e32140071ccd2a2301ab3c518665[m
Merge: 7758f90 1bc2c20
Author: Pallavi Taneja <pallavit@users.noreply.github.com>
Date:   Mon Aug 10 12:35:12 2015 -0700

    Merge pull request #2710 from pallavit/SC_StartType
    
    Add tests for ServiceController.StartType property

[33mcommit 7758f9047c2eff455dede4c89516498c5e7c09b2[m
Merge: c6b0d8f 5d4d462
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 10 15:11:35 2015 -0400

    Merge pull request #2709 from mmitche/remove-llvm-ranlib-dep
    
    Remove unneeded llvm-ranlib dependency

[33mcommit 6621eac3e0ce2a71c990c9a3e21c6349009b364f[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Thu Aug 6 17:28:17 2015 -0700

    Adding new Unit Tests for the System.Threading.Timer implementation

[33mcommit 1bc2c2063790003fa8f6f8a9ccdaf0b80c007829[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Mon Aug 10 11:06:59 2015 -0700

    Add tests for ServiceController.StartType property

[33mcommit 5d4d4626444f2f9e4451e870b65ed938fcf0c068[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Mon Aug 10 10:45:02 2015 -0700

    Remove unneeded llvm-ranlib dependency
    
    Unavailable on openSuSE 13.2

[33mcommit c6b0d8fa614a6e3dbc88474db74047cf5753256f[m
Merge: b7eb52f 6f363e6
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Mon Aug 10 10:42:45 2015 -0700

    Merge pull request #2700 from JeremyKuhne/AllowLongExtended
    
    Allow extended long path directories

[33mcommit 71bf1693fad49b2094a62d3afd69303977d4b977[m
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Mon Aug 10 22:56:32 2015 +0530

    Incorporated Comments
    	modified:   System/Net/Http/Unix/CurlCallbacks.cs

[33mcommit b7eb52f0565c5088d1854324e454b314d4c70b37[m
Merge: d231001 294e7ad
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 10 11:15:30 2015 -0400

    Merge pull request #2701 from stephentoub/packaging_initial
    
    Initial commit of System.IO.Packaging

[33mcommit d231001d795045f44d67847ecb18516a6a1a479d[m
Merge: 195e53c c0b95bb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 10 08:25:28 2015 -0400

    Merge pull request #2702 from jakepetroules/patch-1
    
    Change Mac OSX to "OS X"

[33mcommit 1c126349c7614823131e09bc0cf78d7e5031865a[m
Author: Rajan Singh <rajansin@microsoft.com>
Date:   Mon Aug 10 17:12:07 2015 +0530

    Fixing multi response header issue along with putting checks in http message parser
    	modified:   System/Net/Http/Unix/CurlCallbacks.cs

[33mcommit c0b95bb066d489d04df8843b89443ea065dd4f1d[m
Author: Jake Petroules <jake.petroules@petroules.com>
Date:   Mon Aug 10 02:47:02 2015 -0700

    Change Mac OSX to "OS X"
    
    OS X is the official, canonical name of Apple's desktop operating system.

[33mcommit 195e53c0022a471f713b1beeec8ebf6dbc552dcd[m
Merge: 21bf9a8 3c24f2c
Author: Vijay Kota <vijaykota@users.noreply.github.com>
Date:   Mon Aug 10 11:59:01 2015 +0530

    Merge pull request #2597 from vijaykota/_feature
    
    HttpClient xplat: Basic request and response processing

[33mcommit 3c24f2ce60a425e10ee903b7d252654dc399a175[m
Author: Vijay Kota <vijayko@microsoft.com>
Date:   Thu Jul 30 15:31:09 2015 +0530

    HttpClient xplat: Basic request and response processing
    - Also addressed some of the comments in https://github.com/dotnet/corefx/issues/2555

[33mcommit 6f363e65bfd09bebdf09ba236f63da952948ba8e[m
Author: Jeremy Kuhne <jkuhne@microsoft.com>
Date:   Sun Aug 9 17:23:25 2015 -0700

    Allow extended long path directories
    
    Add methods for checking max length as it varies on path format.
    
    Most code paths hit PathTooLong with GetFullPath- directories are a special
    case as Win32 apis have a special limit (248) for directory creation.

[33mcommit 294e7ad4871a15db67c45d1eab5a9e2ff345cfa4[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Aug 9 20:22:06 2015 -0400

    Fix project.json files to include correct version references

[33mcommit ff3c7e85c8210afa71ceae32643bda4e67e9076a[m
Author: Eric White <eric@ericwhite.com>
Date:   Tue Jun 23 20:06:34 2015 +0530

    Update tests, pulling test assets from the corefx-testdata

[33mcommit 7c675bad5db3380dee588468ad3c603896cae001[m
Author: Eric White <eric@ericwhite.com>
Date:   Wed Jun 17 19:14:43 2015 +0530

    Address lots of PR feedback

[33mcommit c22894be815a3b6419c05849828cad47f6c19e8b[m
Author: Eric White <v-ericwh@microsoft.com>
Date:   Thu May 21 12:50:34 2015 -0700

    Port System.IO.Packaging product sources to .NET Core surface area

[33mcommit f77d4bb33670c504a8ed5e5e0dfc4d7663e279c1[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Sat Apr 18 15:51:48 2015 +0530

    Initial commit of System.IO.Packaging

[33mcommit 21bf9a82ab6622080a174a5bbeb9e077a2700630[m
Merge: 870b58c 0619ab6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Aug 9 14:55:13 2015 -0400

    Merge pull request #2694 from James-Ko/comp
    
    Avoid char buffer allocations in System.IO.Compression

[33mcommit 870b58c918a0e3b69f315d4d76b63185709aa328[m
Merge: 36d10db d7fbbc6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Aug 9 14:54:47 2015 -0400

    Merge pull request #2695 from stephentoub/capihelper_todo
    
    Fix TODO in CapiHelper around Encoding.ASCII

[33mcommit 0619ab69ff64c58639302d8e52efeb3e42058521[m
Author: James Ko <kojames8111@gmail.com>
Date:   Sun Aug 9 11:57:03 2015 -0400

    Less char buffer allocations in ZipArchiveEntry

[33mcommit d7fbbc634515bd4dbccf28f610b67d6f511c787c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sun Aug 9 09:39:42 2015 -0400

    Fix TODO in CapiHelper around Encoding.ASCII
    
    The new System.Security.Cryptography.Csp assembly was depending on the older System.Text.Encoding 4.0.0 contract, which lacks Encoding.ASCII.  Updated it to use 4.0.10, which does contain Encoding.ASCII, and fixed an associated TODO.

[33mcommit 36d10db00a0bdec32e21048e79a4cf7bb751b50c[m
Merge: bc20f4a 0ce1e5d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Aug 9 09:12:52 2015 -0400

    Merge pull request #2692 from stephentoub/processthread_starttime_disabletest
    
    Disable ProcessThreadTests.TestStartTimeProperty test on Linux

[33mcommit bc20f4a8dbc770669dd6357147aa61ba4948373c[m
Merge: b039676 e232585
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Aug 9 09:02:13 2015 -0400

    Merge pull request #2691 from James-Ko/cbuf
    
    Eliminate char buffer allocations in ConsolePal.Unix

[33mcommit e232585abfa129f843b440db867e3a7c0f49f661[m
Author: James Ko <kojames8111@gmail.com>
Date:   Sun Aug 9 00:22:27 2015 -0400

    Eliminate char buffer allocations in ConsolePal.Unix

[33mcommit b0396764e6de2506aea3ee2bb4e84c65e8a1cc73[m
Merge: 55e6f2d 6ee252b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Aug 9 00:03:14 2015 -0400

    Merge pull request #2689 from James-Ko/csole
    
    Use rectangular arrays in System.Console

[33mcommit a0baa09588f13dc364059bd2cdadb54e816ebe6d[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Aug 8 23:50:33 2015 -0400

    Boost RuntimeInformation code coverage to 100%
    
    Scratching an itch; very small addition to get RuntimeInformation's line and
    branch code coverage up to 100%.

[33mcommit 0ce1e5d4e8079be0ca9133fed276af7db60f901b[m
Author: stephentoub <stoub@microsoft.com>
Date:   Sat Aug 8 23:25:31 2015 -0400

    Disable ProcessThreadTests.TestStartTimeProperty test on Linux

[33mcommit 55e6f2df1a16e0271843fcadee18860d3c48de50[m
Merge: 1f94e2c 97d7431
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Aug 8 23:14:53 2015 -0400

    Merge pull request #2677 from James-Ko/tgval
    
    Replace ContainsKey with TryGetValue in Regex

[33mcommit 97d743159b866477182b17e987079a2347c70267[m
Author: James Ko <kojames8111@gmail.com>
Date:   Sat Aug 8 21:22:06 2015 -0400

    Replace ContainsKey with TryGetValue

[33mcommit 6ee252b27973ba14c3b9b56bc20afe86afb84c22[m
Author: James Ko <kojames8111@gmail.com>
Date:   Sat Aug 8 19:48:30 2015 -0400

    Use rectangular arrays in ConsolePal.Unix

[33mcommit 1f94e2cfafc7c2743724e7476b74caf9d336bf41[m
Merge: 1820ee2 0c6ae1b
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Aug 8 16:15:32 2015 -0400

    Merge pull request #2690 from Maxwe11/win32fs-cached-task
    
    Win32FileStream: Return cached task at synchronous completion

[33mcommit 0c6ae1b2730bf1d9ecc31e481fa1b3296d91d0c2[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Sat Aug 8 22:09:43 2015 +0300

    Return cached task at synchronous completion

[33mcommit 1820ee25d7356417a9c34f37e62cf25abeec8231[m
Merge: 3351e61 3101743
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Aug 8 12:13:59 2015 -0400

    Merge pull request #2675 from justinvp/zipfile_entryname
    
    ZipFile: Reduce string allocations

[33mcommit 3351e61c6e5989045363dba7f31953d11af8508c[m
Merge: f53a71d 40779a5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 7 21:44:25 2015 -0400

    Merge pull request #2612 from stephentoub/plinq_modes_tests
    
    Fix PLINQ modes tests to not timeout

[33mcommit f53a71d443ca5f68b5c4755fd32d26d3cc98abd4[m
Merge: bd264e6 970893a
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 7 20:53:40 2015 -0400

    Merge pull request #2687 from naamunds/Loc
    
    Update BuildTools version to uptake _AssemblyInfo.cs changes

[33mcommit 3101743cb656503074a74fbcb50b9b0b5f1f705c[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Thu Aug 6 14:03:24 2015 -0700

    ZipFile: Reduce string allocations
    
    When creating entry names, reuse a single char[] buffer across all
    entries to avoid intermediary char[] array allocations for each
    entry. Append the PathSeparator (if necessary) as part of this
    operation to avoid additional string concatenation allocations.

[33mcommit 970893afc994a67fdc52208de34f6a9d48e42f09[m
Author: naamunds <naamunds@microsoft.com>
Date:   Fri Aug 7 17:46:41 2015 -0500

    Update BuildTools version to uptake _AssemblyInfo.cs changes
    
    Update the BuildTools version in CoreFx to pick up the changes to the
    generation of _AssemblyInfo.cs which, are necessary for the localization
    work.

[33mcommit bd264e62e8b4439a2c826718804cd2be4bee7c01[m
Merge: 0a6a0d1 3e4d914
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 7 17:18:39 2015 -0400

    Merge pull request #2685 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 40779a51f39e07392813cd0dbd72c285e47c0429[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Aug 3 22:54:27 2015 -0400

    Fix PLINQ modes tests to not timeout or deadlock
    
    The tests for PLINQ's WithExecutionMode were employing a technique to try to verify that multiple workers were indeed participating in the query: the processing of one element would block until another element was processed.  This technique was then applied to queries expected to employ parallelism in their processing.  However, even readily parallelizable queries may in some circumstances end up being processed sequentially.
    
    This fix changes the parallel verification to instead simply track the IDs of tasks involved in the processing.  With PLINQ's current implementation, there will be one task spun up to process each partition, and so counting the number of unique task IDs involved yields the number of tasks that actually did processing; by removing the blocking, we also remove the need for this to be outer loop.  This in and of itself is insufficient, though, as depending on the data source, all of the data could still end up in a single partition; to fix that, the test is changed to only operate over data sources that do fixed partitioning, namely those involving non-load balanced ranges.  With these changes, we can then significantly reduce the number of elements involved in the tests, as they become entirely deterministic with regards to what data is in which partition.  And we can easily add a test that was previously missing: verifying that certain queries are not parallelized and end up running sequentially.

[33mcommit 0a6a0d1b1179947a5057e991a15bfa366dc064ff[m
Merge: 9ee87b2 fa6e6a1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 7 16:35:58 2015 -0400

    Merge pull request #2662 from James-Ko/patch-1
    
    Remove casts to IDisposable where unneeded

[33mcommit 9ee87b25ee5b4ae00c6e93de19d703380321338b[m
Merge: 369b407 f36a1ce
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 7 16:24:05 2015 -0400

    Merge pull request #2683 from stephentoub/plinq_outer_loop
    
    Fix outer loop PLINQ tests faiing to find member data

[33mcommit 3e4d914a524383cbf0ddfba2a4da43a215f6a59a[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Fri Aug 7 13:01:38 2015 -0700

    Expose a StartType property on System.ServiceProcess.ServiceController that gives the startType of a service.
    
    This check-in only updated the PK implementation and the Desktop implementation is still pending review.
    
    [tfs-changeset: 1512095]

[33mcommit 369b407629f7d98108efdfa1d3dbca3dc81ada20[m
Merge: 8b7a0fa 26cc472
Author: Matt Ellis <matell@microsoft.com>
Date:   Fri Aug 7 12:49:06 2015 -0700

    Merge pull request #2661 from ellismg/run-test-improvements
    
    Make it easier to use run-test.sh outside CI.

[33mcommit 8b7a0fa61b2a3bb35e65b03679a6e77eeba1cb6a[m
Merge: 4ff02e9 e8282f0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 7 15:40:48 2015 -0400

    Merge pull request #2642 from stephentoub/remoteexecutor
    
    Improve process launching support in Process tests

[33mcommit f36a1ce384d59493ba69f94af2a951ce819f5f9c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Aug 7 15:08:34 2015 -0400

    Fix outer loop PLINQ tests faiing to find member data
    
    Fallout from the xunit upgrade.  Some member data functions couldn't be found because their array types didn't match.

[33mcommit 4ff02e95c4bc17d8106fef8a309af7e289d9d11c[m
Merge: 652d9eb df06e56
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Aug 7 11:54:36 2015 -0700

    Merge pull request #2611 from ianhays/FSTime
    
    Fixed AccessTime, WriteTime, and CreationTime to return a DateTime object with properly set DateTimeKind

[33mcommit e8282f0a2c7a2991a38f012e52238daac61b1f1c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Aug 6 16:32:51 2015 -0400

    Address PR feedback

[33mcommit 6ace68d2942409f313b9fb0c1ed927dd896ddf30[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Aug 5 22:09:44 2015 -0400

    Add several additional Process wait tests
    
    More complicated waiting scenarios.

[33mcommit 592d2c4c7391698acd389cb0bbb476c3b6ceb1f1[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Aug 5 22:09:12 2015 -0400

    Update Process tests to use RemoteExecutor
    
    System.Diagnostics.Process has its own separate test console app that the tests assembly spawns with various arguments.  This design requires having a separate assembly, and splitting logic across files, across assemblies, etc., making it error prone.  It also make it difficult to enable more complicated scenarios, such as launching child processes from the child process.
    
    This commit moves System.Diagnostics.Process.Tests to use the centralize remote process launcher that lets all of the logic be defined together in the one tests assembly, including using lambdas.

[33mcommit 967286d4d01beab2b3620140bff03a96d469e223[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Aug 5 22:07:28 2015 -0400

    Centralize RemoteExecutor test support into Common
    
    For the interprocess communication tests, I'd written a small console app and launcher that makes it easier for a process to remote some logic to another process.  This commit generalizes that logic and moves it into Common, with the goal of making it available for other test suites to use.  In the process of doing so, I added some functionality, like the ability to use lambdas (without closures).

[33mcommit 652d9eb874317950cf303adbf7ae61da0b4c85de[m
Merge: 28132be 744e863
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 7 14:36:28 2015 -0400

    Merge pull request #2680 from Priya91/process
    
    Skip TestStartTime test on Linux - pending investigation.

[33mcommit 2fbabe417accb662a6ed63a40506dea0268cf8e2[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Aug 7 14:17:04 2015 -0400

    Allow FSW tests to be parallelized
    
    The FSW tests still take ~10 seconds on my machine, most of which is spent waiting for events to not fire.  This change just separates the tests out so that they're not all on the same class, letting xunit parallelize them.  They now take ~3.5 seconds on my machine.

[33mcommit d4d0d561a3978f43ccb2271e8dc417d6d3ffefc2[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Aug 7 14:14:58 2015 -0400

    Remove unnecessarily long wait in FSW tests
    
    One of the FSW tests is passing a 30 second timeout to an ExpectNoEvent, which means the test when correctly functioning will take at least 30 seconds.  I've removed the custom timeout to give the test the normal timeout period of half a second.

[33mcommit 784403a8cb1afa56136cdc4abd79a5425653c7d8[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Aug 7 14:11:52 2015 -0400

    Fix faulty FileSytemWatcher test
    
    At least on Windows 10, writing to a file can cause directories in its parent directory structure to also be noted as modified, such that events will be raised for those directories.  This is causing the FileSystemWatcher_Changed_PreSeededNestedStructure test to consistently fail.  I've updated the test to instead look for and modify file attributes, instead.

[33mcommit b6c478ccc9729e22ac7b9bf2248b644b51883db2[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Aug 7 13:42:01 2015 -0400

    Fix FileSystemWatcher perf/maintainability issues on Windows
    
    - Every iteration of calling ReadDirectoryChangesW was allocating a bunch of state (an FSWAsyncResult, a delegate, a new overlapped, etc).  Fixed to allocate that state once and store it for the duration of the watching operation.
    - Every iteration of calling ReadDirectoryChangesW was pinning/unpinning the buffer.  Fixed to use a PreAllocatedOverlapped so that this happens just once for the whole operation.
    - Centralized all of the cleanup code of the thread pool binding, and removed the thread pool binding field from the watcher as it's no longer necessary and it risks regressing to the code where we accidentally used the wrong one
    - Removed confusing and duplicative flags around whether the implementation is currently running
    - Removed duplicate interop code and moved the rest to the Common\src\Interop folder to follow the convention for the rest of the repo
    - Made more robust the case where a failure occurs after creating the directory handle and before starting monitoring
    - Removed unnecessary locking
    - Reorganized some code to make the implementation easier to read, and added comments

[33mcommit 744e8638601bcb4e2bf54d1f562fbbca25a20401[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Fri Aug 7 10:37:35 2015 -0700

    Skip TestStartTime test on Linux - pending investigation.

[33mcommit df06e562a49b739655efff4b6b9f0faa23d09b78[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Mon Aug 3 16:31:38 2015 -0700

    Fixed AccessTime, WriteTime, and CreationTime getters
    
    Previously, AccessTime, WriteTime, and CreationTime would return DateTime objects with an unspecified DateTimeKind. This commit modified that behavior to have them instead return Local DateTime objects. Extra tests were also added to catch more potential error cases.
    
    - Resolves #2603
    - Resolves #2610

[33mcommit fa6e6a1e6300cdbffa31998a8c70d3bb9b7d06c3[m
Author: James Ko <kojames8111@gmail.com>
Date:   Fri Aug 7 13:05:11 2015 -0400

    Remove unneeded casts to IDisposable and ConcurrentDictionary

[33mcommit 28132be7ebac0166e012e229b77377e669d52462[m
Merge: 82f8331 0f67204
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 7 08:27:27 2015 -0400

    Merge pull request #2674 from stephentoub/fix_fsw_threadpoolbinding
    
    Fix FSW freeing of NativeOverlapped on wrong ThreadPoolBoundHandle

[33mcommit 82f83313fcc45c042cd1a91951208aa006f03a57[m
Merge: adc46ae 31599c5
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 7 08:00:26 2015 -0400

    Merge pull request #2665 from James-Ko/range
    
    Small optimization for Range

[33mcommit adc46ae8f89190e7f9fd8c9232cc5311f0d154b2[m
Merge: bd93302 6c3ffe1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 7 07:59:26 2015 -0400

    Merge pull request #2673 from bartonjs/AES_Win7
    
    Make AES work on Windows 7

[33mcommit bd93302de81126297995adcd8b9cc16f82046ce9[m
Merge: 4ef8cc9 e298b31
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 7 07:38:11 2015 -0400

    Merge pull request #2676 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 4ef8cc9bc560144e27e70a5085200c43c3d451a9[m
Merge: 3d8d4c7 9238655
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Aug 7 07:31:39 2015 -0400

    Merge pull request #2678 from nguerrera/fix-mac
    
    Fix typo blocking Mac build

[33mcommit 92386557ea77985d450a9c56eb23f15f636b5ef9[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Fri Aug 7 00:37:51 2015 -0700

    Fix typo blocking Mac build

[33mcommit 3d8d4c768b3076cb5a33e05cb200a98ed5d99cb0[m
Merge: b9fc9e6 18aec34
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Fri Aug 7 09:52:14 2015 +0530

    Merge pull request #2651 from kapilash/AutoDecompression
    
    Merged. Thanks all.

[33mcommit e298b31e1da3dea3c3fd78f5f713b4659136484e[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Thu Aug 6 20:53:35 2015 -0700

    Bug 1188675:Project N Bug: .NET HttpClient can't do Authenticated POSTs due to limitations of System.IO.NetFxToWinRtStreamAdapter
    
    This bug revolves around a design limitations of the System.Runtime.WindowsRuntime System.IO.NetFxToWinRtStreamAdapter. Due to the way that the adapter works, the Windows.Web.Http layer is unable to "rewind" data in order to re-send it to the server for POST requests. Resending request entity-body data to the server is frequently needed due to authentication challenges.
    
    The nature of this bug has resulted in a few common scenarios being broken for UWP (Windows 10 Store) apps that use System.Net.HttpClient or System.Net.HttpWebRequest. Even for simple content like StringContent (which is already buffered and not a stream, per se), we are unable to POST the data since the code paths were always using the limited NetFxToWinRtStreamAdapter.
    
    The fix for this bug is multi-layered. In general, we try to avoid using the NetFxToWinRtStreamAdapter for the POST scenarios. For content that is ByteArrayContent (or derived classes), the data is already "buffered". So, we don't need to send it as a stream. We also check if the data has been buffered via the developer calling LoadIntoBufferAsync() explicitly and send it as a buffer. Then, if the data is not buffered, we check the stream itself. If it already supports the WinRT Stream interfaces, then we don't need to use the adapter. So, third-party devs can create compatible, multi-interface (.NET and WinRT) stream content to be POSTed.
    
    [tfs-changeset: 1511754]

[33mcommit b9fc9e6d00fef3e83f2d80951e210b868627c328[m
Merge: 09d712f e7be304
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Aug 6 20:41:35 2015 -0700

    Merge pull request #2606 from nguerrera/add-errno-shim
    
    Add errno shim (+ existing shim cleanup precursor)

[33mcommit 09d712fd79f5c607e3cc71efb09a6b45a1872377[m
Merge: 1ddfc6d 919d7af
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 6 23:40:54 2015 -0400

    Merge pull request #2671 from stephentoub/fsw_timeout_poll
    
    Add small timeout to FSW MOVED_FROM polling on Linux

[33mcommit 18aec3452bb7b6dea2190151f4f9a26fb7876401[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Thu Aug 6 20:24:48 2015 +0530

    Automatic Content Decompression
    
     Modified CurlHandler to set the curl options for automatic content
    decompression.

[33mcommit 0f672042510d1902f7071189860c1960bd99ef43[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Aug 6 23:17:06 2015 -0400

    Fix FSW freeing of NativeOverlapped on wrong ThreadPoolBoundHandle
    
    If a FileSystemWatcher is stopped and restarted while processing events, it can end up trying to free an allocated NativeOverlapped on the ThreadPoolBoundHandle associated with the new session even if it was created with the old one.  This commit changes the code to store the appropriate binding and directory handle in locals and in the async state object so that the same binding can be used to free as was used to allocate.

[33mcommit 6c3ffe172571f95ddb2dea79400371054f5b2bbf[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Aug 6 19:31:24 2015 -0700

    Make AES work on Windows 7
    
    Creating a key from an AES algorithm then changing the cipher mode on the key is a Windows 8 feature; Windows 7 require that the algorithm be set correctly then the key built from the correct one.

[33mcommit 919d7af3f1277691c482bc0b7e35a510fe5fa370[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Aug 6 21:40:24 2015 -0400

    Add small timeout to FSW MOVED_FROM polling on Linux
    
    inotify handles renames via a pair of MOVED_FROM and MOVED_TO events that are potentially delivered separately and that for some moves may not have a MOVED_TO at all (such as if moving a file out of the watched path). This means that if we get a MOVED_FROM and we haven't yet received any further events, we have a choice:
    - Do we wait until we get another event to make a decision about how to process the MOVED_FROM, seeing if the next event is a MOVED_TO (in which case the MOVED_FROM is treated as part of the rename) or if it's something else (in which case the MOVED_FROM is treated as a deletion).
    - Do we assume we won't get an associated MOVED_TO, and immediately treat the MOVED_FROM as a deletion.
    
    We originally implemented the former, as it doesn't suffer from the race condition the latter suffers from, which might treat some MOVED_FROM/MOVED_TO pairs as a rename and others as a creation/deletion, based on timing. But it suffers from another problem, that if you just get a MOVED_FROM and no other event arrives (or arrives for a while) the event associated with the MOVED_FROM could be delayed (indefinitely if another event never arrives). #2587 switched from the former to the latter, under the assumption that it's the least bad of the two options.
    
    As discussed at https://github.com/dotnet/corefx/pull/2655#issuecomment-128484923, a compromise can be to wait a few milliseconds for the MOVED_TO to arrive, as that's been shown to handle a vast majority of the cases where a MOVED_TO is on its way.  This commit simply adds that timeout to our call to poll.  As long as this code was being modified, the commit also adds a try/finally around the handle manipulation, just in case an exception happens to emerge.

[33mcommit 1ddfc6d8383ffc893cee52e2d1d841e5c75db6ba[m
Merge: 6b2d600 7a083a6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 6 21:33:49 2015 -0400

    Merge pull request #2655 from nguerrera/fix-fsw-linux-test
    
    Fix FileSystemWatcher test race and allow process exit time == start time

[33mcommit 26cc472abf54c4a2bb211ea82fccb9792da8d9b1[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Aug 6 15:42:18 2015 -0700

    Add information on using run-test.sh outside CI

[33mcommit 6b2d60061c87a2a3b0d11adafa1311ae18206259[m
Merge: 50901c6 3bfd74c
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Thu Aug 6 16:55:12 2015 -0700

    Merge pull request #2654 from AtsushiKan/rsa
    
    Implement System.Security.Cryptography.RSACng

[33mcommit 3bfd74c45e2b978cd70ed23b23ed45fd7cb27974[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Thu Aug 6 16:51:53 2015 -0700

    Implement System.Security.Cryptography.RSACng

[33mcommit 31599c59cb601459982be0aa78f7f8381b53566c[m
Author: James Ko <kojames8111@gmail.com>
Date:   Thu Aug 6 19:24:40 2015 -0400

    Small optimization for Range

[33mcommit 50901c647ec3189c4ac68c8d24d4cd28c9cc6411[m
Merge: 6b5a8ae d58c770
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Aug 6 16:19:29 2015 -0700

    Merge pull request #2656 from justinvp/zipfile_isdirempty
    
    ZipFile: Reduce allocations in IsDirEmpty

[33mcommit 7a083a617b0e933a0ea4a36e1a2018543c41f32a[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Aug 6 15:53:50 2015 -0700

    Attempt to fix intermittent TestExitTime failure

[33mcommit cc19cacdb730cbe9bcdb0c75467942153b9a314a[m
Author: Matt Ellis <matell@microsoft.com>
Date:   Thu Aug 6 14:16:50 2015 -0700

    Remove mscorlib.ni.dll before running tests
    
    The test layout folder that is created when we run tests includes an
    mscorlib native image. This native image is specific to windows (since
    we use the windows version of the runtime when building a test layout,
    even when building a test layout for Linux or OSX) and the runtime
    will not boot if it is present.
    
    When we run tests from CI, we instruct Jenkins to not copy native
    images, but if you are running tests by hand you need to either make
    sure you don't copy native images over or remove them before running
    tests.
    
    With more folks wanting to use run-test.sh by hand, we should just
    make run-test.sh responsible for cleaning up these native images.
    
    Fixes #2605

[33mcommit d58c7702905122ff053b6f2b61e88d92e0c4dad3[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Thu Aug 6 11:38:27 2015 -0700

    ZipFile: Reduce allocations in IsDirEmpty
    
    - Use Directory.EnumerateFileSystemEntries to avoid the extra
    allocations associated with the FileInfo/DirectoryInfo instance
    created by DirectoryInfo.EnumerateFileSystemInfos.
    - Use the default overload of EnumerateFileSystemEntries, which uses
    SearchOption.TopDirectoryOnly, as SearchOption.AllDirectories is not
    necessary here and AllDirectories currently has more allocations than
    TopDirectoryOnly on Windows.
    - Use the enumerator directly to avoid the unnecessary call to
    Current.

[33mcommit 6b5a8aed6b8cc87f074024d7947236ca2a769c2d[m
Merge: bd0c788 67c0962
Author: Pallavi Taneja <pallavit@users.noreply.github.com>
Date:   Thu Aug 6 13:49:59 2015 -0700

    Merge pull request #2657 from pallavit/Issue#1840
    
    Enable System.IO.Pipes test disabled against Issue#1840

[33mcommit bd0c78849e157895746405fc4a5ffdb2955a0cc9[m
Merge: 4c423dc 0c9f431
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Thu Aug 6 13:42:29 2015 -0700

    Merge pull request #2595 from pgavlin/SNPrimitivesXP
    
    Implement System.Net.Primitives for *nix.

[33mcommit 56c279db8707bf9246109b1ff232925e0312b7f8[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Aug 6 11:22:37 2015 -0700

    Fix FileSystemWatcher test race + wrong event name
    
    On Linux, depending on the timing of events, we can sometimes generate
    delete+create instead of rename. As such, we can't perform renames and
    test that no create or delete is raised when we're running on Linux.
    
    The issue had so far only arisen on the negative create test and not the
    negative delete test, which turned out to be because the negative delete
    test was using the wrong event name.

[33mcommit e7ecf356a7041758efbac0ede81d562ac61376ac[m
Author: Khoa Dang <khdang@microsoft.com>
Date:   Thu Aug 6 12:29:37 2015 -0700

    Fix one of DCS constructors that cause NRE in wcf

[33mcommit 67c096271e7e99a4c6eeb7ee4d702a6cd9fd6685[m
Author: Pallavi Taneja <pallavit@microsoft.com>
Date:   Thu Aug 6 11:55:16 2015 -0700

    Enable System.IO.Pipes test disabled against Issue#1840
    
    System.IO.Pipes dependended on some new APISets introduced in WIndows10.
    Since the OS was still under development, it was not available on all the images, making the tests flaky.
    Now that the things are stable, enabling the tests again.

[33mcommit 4c423dc3300809d87051e088c5461e0bd8de833e[m
Merge: 2ebecd4 6861b62
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 6 13:18:10 2015 -0400

    Merge pull request #2649 from stephentoub/use_runtimeinformation
    
    Use RuntimeInformation across corefx for platform detection

[33mcommit 2ebecd4278b4642230c9f74a6bf2ae00ebec8a78[m
Merge: c47d44a a7250b8
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Aug 6 10:50:49 2015 -0400

    Merge pull request #2646 from James-Ko/patch-5
    
    Don't wrap with ImmutableArray

[33mcommit e7be304c17fc9fe06f91fa8c13b241a807fc181c[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Thu Aug 6 07:10:12 2015 -0700

    Remove lazy initialization in raw errno -> Error conversion
    
    It turns out that every place we get an ErrorInfo from a raw
    errno, we access the PAL Error almost immediately. The lazy
    initialization carried a risk that copies of an ErrorInfo
    with the conversion deferred would get passed around and cause
    the conversion to happen more than once. Also, there was an
    unnecessary branch when accessing the Error.
    
    The lazy initialization in the reverse Error -> raw errno case
    is left intact because it is common to create an ErrorInfo from
    an Error to pass to a caller that needs an ErrorInfo, but doesn't
    always need the raw errno.

[33mcommit 6861b625b391566544be9a60356c8c03b15e5fb5[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Aug 6 10:25:17 2015 -0400

    Use RuntimeInformation across corefx for platform detection
    
    This commit deletes our temporary Interop.PlatformDetection.cs mechanism and replaces usage of it with usage of System.Runtime.InteropServices.RuntimeInformation.dll.

[33mcommit 767f8b27d160603af1f3dbc7e8b280325c7f3f15[m
Author: martincostello <martin@martincostello.com>
Date:   Thu Aug 6 14:52:47 2015 +0100

    Support collections with length validators.
    This change adds support for the use of the [MaxLength] and [MaxLength]
    attributes on properties whose type implements ICollection so that they
    can be used on more properties than just strings and arrays, such as List<T> and ICollection<T>.

[33mcommit e82401bd3feea682832215d1e97dbb4bb73e211a[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Wed Aug 5 17:08:21 2015 -0700

    Respond to PR feeback
    
    * Defer conversions until necessary
    * Rename Errno -> RawErrno
    * Return null for ERANGE for strerror
    * Add conversion helper for Error -> ErrorInfo
    * Fix typos
    * Remove unnecessary _POSIX_C_SOURCE define
    * Fix names and sizes of managed FileStatus members
    * Don't double-initialize ErrorInfo out param
    * Zero out BirthTime when not available
    * Put back newline at EOL
    * Restore size of UnixFileSystemObject
    * Use ignored local name for ignored error info
    * Rename Interop.System to Interop.Sys to avoid
      collision with System namespace

[33mcommit 2b01345b2a925400569269b1149afd645c77b790[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Sun Aug 2 18:20:58 2015 -0700

    Use new errno shim from managed code

[33mcommit 20b101d49b1366917da005f361ba448821a45327[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Fri Jul 31 22:31:44 2015 -0700

    Add errno shim

[33mcommit 899f247d04df01d7bc0a80c5d5642c8fcee217db[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Fri Jul 31 21:03:10 2015 -0700

    Use more newlines in cmake files

[33mcommit bf0290c0a45f9ea1edafaf1aa12f4ff576107303[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Wed Jul 29 07:58:33 2015 -0700

    Cleanup stat shims
    
    * Provide explicit constants for interpreting file mode
    * Use extern "C" one function at a time
    * Rename FileStats to FileStatus to match POSIX language
    * Rename FileStatus to be more 1:1 with struct stat
    * Put parameters on their own lines in header

[33mcommit f09c8282407b8cc332db0593827524c49bdae4a2[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Jul 28 17:08:38 2015 -0700

    Rename System.IO.Native to System.Native
    
    Rationale: Moving forward, we'll use System.Native for anything that
    is specified as part of POSIX.

[33mcommit a7250b8d454c48317107d63553f582ece7a2cff4[m
Author: James Ko <kojames8111@gmail.com>
Date:   Thu Aug 6 02:03:23 2015 -0400

    Don't wrap with ImmutableArray

[33mcommit c47d44a6f176a6323d095fff1bb9599b818bee33[m
Merge: dba869e c41c161
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 5 23:12:55 2015 -0400

    Merge pull request #2587 from sokket/fsw
    
    Adding new Unit Tests to validate the more complex FileSystemWatcher scenarios

[33mcommit dba869e4a9baa5a83dd5956cac805cc7454bfc2d[m
Merge: b5aa230 ec93439
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 5 22:21:01 2015 -0400

    Merge pull request #2638 from Priya91/process
    
    Fix for Process.TestStartTime flakiness.

[33mcommit ec93439633ca6cc56ea4f91970887d4858597167[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Wed Aug 5 13:25:14 2015 -0700

    Fix for Process.TestStartTime flakiness.

[33mcommit b5aa23011243ae561fc0a737a3b758e5fbb3e88c[m
Merge: aa15229 525cb9c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 5 20:54:02 2015 -0400

    Merge pull request #2633 from stephentoub/process_wait_tests
    
    Add tests for Process.WaitForExit

[33mcommit 0c9f431c63a79ac2f623bf9acb4dbb519879c33b[m
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Wed Aug 5 15:53:17 2015 -0700

    Address remaining PR feedback.

[33mcommit c41c161d721f16bc0c83fe7c1d77378c06f005c3[m
Author: Jonathan Miller <jonmill@microsoft.com>
Date:   Thu Jul 30 17:09:49 2015 -0700

    Adding new Unit Tests to validate the more complex FileSystemWatcher
    scenarios: symlinks, deep directory structures, and preseeded directories.

[33mcommit aa152293f56664e24c53b392ce1cba39a98f4ec9[m
Merge: 35a9843 a432fda
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 5 16:38:34 2015 -0400

    Merge pull request #2637 from bartonjs/Unix_PEM
    
    Add back support for reading PEM files as an X509Certificate2.

[33mcommit 35a984360bf9f0cc54cc698a3568f630945f37c3[m
Merge: 26a5702 0ad2026
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 5 15:36:33 2015 -0400

    Merge pull request #2623 from mellinoe/rename-assertion-helper
    
    Delete 'Assert.None' helper methods

[33mcommit a432fdaead8dbd1a6bc638bb94ecd0fdc2605d22[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Wed Aug 5 12:27:48 2015 -0700

    Add back support for reading PEM files as an X509Certificate2.
    
    The code did all of the work for reading the PEM-formatted certificate, but then didn't return the object.
    
    Added TestByteArrayConstructor_PEM, and broke the existing TestByteArrayConstructor into TestByteArrayConstructor_DER and UseAfterDispose; because it was really doing two separate things.

[33mcommit 26a570233344008b1fad6cbda5385dbb7b9e4cd4[m
Merge: 37b0abb fff0947
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 5 14:08:45 2015 -0400

    Merge pull request #2631 from stephentoub/net_add_user_error
    
    Fix TestUserCredentialsPropertiesOnWindows without admin privileges

[33mcommit 0ad20264f05607609bca74b60f073bf144010ba0[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Aug 4 14:44:38 2015 -0700

    Remove 'Assert.None' helper methods
    
    These are equivalent to the 'Assert.DoesNotcontain' helpers.

[33mcommit 1e0d978afd21db1d43c995200bdf828fa1d1428c[m
Author: Pat Gavlin <pagavlin@microsoft.com>
Date:   Thu Jul 30 12:40:52 2015 -0700

    Implement System.Net.Primitives for *nix.
    
    Platform abstractions have been added for IP address parsing and host information.
    The closest APIs that most POSIX systems have to the NTDLL IP address parsing APIs
    are getaddrinfo/getnameinfo. In the case of IPv6 in particular, inet_ntop/inet_pton
    are not sufficient, as these APIs do not support scope IDs.

[33mcommit 525cb9c2873e044bf88521146dcb68990dbb29dc[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Aug 5 13:18:56 2015 -0400

    Add tests for Process.WaitForExit
    
    Our Unix implementation of Process.WaitForExit is relatively complicated, as we need to support functionality implicitly supported by Windows that's not built-in on Unix.  This commit adds some tests to more heavily exercise Process waiting; I plan to add some more subsequently, but I wanted to get these in now.

[33mcommit 37b0abb008ef543e57cbe02e0b4435bc1908a303[m
Merge: 1f20371 d7a19e9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Aug 5 12:20:05 2015 -0400

    Merge pull request #2630 from stephentoub/consolidate_tempfiles
    
    Change System.IO.FileSystem.Tests to use FileCleanupTestBase

[33mcommit fff0947d3847098a218589d029b1d73c9678e85e[m
Author: stephentoub <stoub@microsoft.com>
Date:   Wed Aug 5 11:57:59 2015 -0400

    Fix TestUserCredentialsPropertiesOnWindows without admin privileges
    
    The System.Diagnostics.Process test TestUserCredentialsPropertiesOnWindows has two problems:
    1) It requires admin privileges, and it looks like the intention was to silently bail from the test if such privileges weren't available, but instead it's causing the test to fail, which means outer loop tests fail when run without admin privileges.
    2) When the exception is thrown, it's getting the error code from the wrong location: NetUserAdd returns the error code rather than having it available from GetLastWin32Error.
    
    This commit addresses (2) simply by passing the result to Win32Exception, and it addresses (1) by catching the exception and returning instead of allowing it to propagate.
    
    Eventually we'll need a better solution for such tests, but for now this should suffice.

[33mcommit 1f2037143026c50f1bf28620514979a9c8642c2b[m
Merge: b6db52e 93e8bbf
Author: Atsushi Kanamori <AtsushiKan@users.noreply.github.com>
Date:   Wed Aug 5 06:34:34 2015 -0700

    Merge pull request #2615 from AtsushiKan/cngkey
    
    Implement System.Security.Cryptography.CngKey

[33mcommit 93e8bbf58438628daddd95bc89c7e4c2d7412f28[m
Author: Atsushi Kanamori <atsushik@microsoft.com>
Date:   Wed Aug 5 06:31:08 2015 -0700

    Implement System.Security.Cryptography.CngKey

[33mcommit b6db52ec3dbdc3d9aa82ffc25b3c1190055b716d[m
Merge: 417ca73 6a05a61
Author: Vijay Kota <vijaykota@users.noreply.github.com>
Date:   Wed Aug 5 11:17:42 2015 +0530

    Merge pull request #2598 from vijaykota/feature
    
    Fix HTTPS checks in xplat HttpClient

[33mcommit 6a05a612275e9a2fef2aaba5e153c3604077b573[m
Author: Vijay Kota <vijayko@microsoft.com>
Date:   Sat Aug 1 19:24:45 2015 +0530

    Fix HTTPS checks in xplat HttpClient

[33mcommit 417ca731bdcb63b50f0e51f77632a4d51e40d076[m
Merge: 2f50375 4b4c1ae
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 4 23:43:59 2015 -0400

    Merge pull request #2629 from bartonjs/remove_redundant_test_attributes
    
    Remove [PlatformSpecific] from the Windows-only CSP library

[33mcommit d7a19e92824e8a038553de20abf2497db0424ddb[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Aug 4 23:17:57 2015 -0400

    Change System.IO.FileSystem.Tests to use FileCleanupTestBase
    
    When I rewrote the MemoryMappedFiles tests, I cribbed from the
    System.IO.FileSystem test's base class and created a Common base class
    that could be used by test projects that had temporary files to be cleaned up.
    At the time, however, FileSystem's tests were undergoing heavy changes and
    so I didn't update FileSystem's tests to use the common base.  Now that
    things have quieted down, I've made that change.
    
    In doing so, I made a few tweaks to the FileSystem tests, where tests were
    assuming that the test directory was always in the current directory, and
    the consolidated base class puts temporary files in the user's temporary
    directory instead.

[33mcommit 2f50375d7b84501179d87d3958a5a57fb458a73a[m
Merge: f88a586 cae7c51
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 4 23:15:39 2015 -0400

    Merge pull request #2588 from ianhays/linkunlink
    
    Modified the Unix implementation of FileMove and fixed the corresponding broken FileSystemWatcher tests

[33mcommit f88a586b0d2d0617d9dc54fe818316cca404b43e[m
Merge: 27f77aa 5de40bf
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 4 23:07:23 2015 -0400

    Merge pull request #2628 from stephentoub/maxdirectoryname
    
    Fix UnixFileSystem.MaxDirectoryName to be MaxPath

[33mcommit 4b4c1ae9d089e04b32398533c3ba6feb34300fcf[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Aug 4 19:54:51 2015 -0700

    Remove [PlatformSpecific] from the Windows-only CSP library
    
    The library is marked as being unsupported for platforms other than Windows, the [PlatformSpecific] attributes were holdovers from when this was in the former unified RSA library.

[33mcommit 5de40bfa898dc2a03fd5efb3f21ea2f69d16a94a[m
Author: stephentoub <stoub@microsoft.com>
Date:   Tue Aug 4 21:12:06 2015 -0400

    Fix UnixFileSystem.MaxDirectoryName to be MaxPath
    
    UnixFileSystem's override of MaxDirectoryName was assuming the property meant the maximum size of the file name of a directory, i.e. the component length, not the full path length of everything from the beginning of the root.  As a result, checks against MaxDirectoryName, such as in CreateDirectory, were failing incorrectly with longer path lengths.
    
    The fix is just to return MaxPath from MaxDirectoryName; there's no difference on Unix.  I also added a test to cover this case, included a previously excluded test, and deleted a faulty test.

[33mcommit 27f77aad5d44647940ada9a5ffcb47706d063fcc[m
Merge: d1423ab bb58ec8
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 4 21:20:22 2015 -0400

    Merge pull request #2620 from JeremyKuhne/UnixPath
    
    When building other platforms, skip tests

[33mcommit d1423abaf73e14ceea95a276a5e032eed905b81c[m
Merge: d6d8a09 1ab3614
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 4 21:19:45 2015 -0400

    Merge pull request #2621 from chcosta/CookieCollection_FixCasing
    
    Fix casing to unblock Linux native builds

[33mcommit d6d8a09fe6b3eaeae985d2dbf14209eabf9b349d[m
Merge: 4cda5aa 115a4a3
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Tue Aug 4 16:23:53 2015 -0700

    Merge pull request #2614 from bartonjs/fix_build_warnings
    
    Remove build warnings in cryptography libraries

[33mcommit cae7c5116d46c0d98e6f0fb3526fa2a15945501a[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Fri Jul 31 15:25:27 2015 -0700

    Modified Unix File.Move to use link/unlink instead of rename
    
    Changed the way the UnixFileSystem does File moving; it was previously implemented using the rename syscall but now uses a combination of link and unlink. The side effect of this change is that the FileSystemWatcher will now treat File.Move as a deletion.
    
    - Resolves #2460
    - Removed all tests from FileSystemWatcher that made calls to File.Move and consolidated them into a new file: FileSystemWatcher.MoveFile.cs. This new file separates tests into Windows and Unix categories and uses Theories to supply the input WatcherChangeType and whether a move should trigger an event for the given type. If we later decide to change the Unix behavior of MoveFile, changing the FileSystemWatcher tests will be a simple matter of flipping the boolean values for the affected tests.
    - Fixed some comments in UnixFileSystem to be more specific to FileSystemWatcher
    - Changed variable names for FSW Move tests to be more descriptive
    - Modified FSW MoveFile and Utitlity helper classes to use guids so that they may be run concurrently.

[33mcommit 1ab3614d7fd0b52d5545d7b8514911e27a2f58d7[m
Author: Christopher Costa <chcosta@microsoft.com>
Date:   Tue Aug 4 14:56:34 2015 -0700

    Fix casing to unblock Linux native builds

[33mcommit 4cda5aa5425a2d67e7ee498faf4cc7af480800e0[m
Merge: b2efe9e e10a301
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Aug 4 14:41:44 2015 -0700

    Merge pull request #2609 from mellinoe/latest-xunit
    
    Latest xUnit beta for all test projects

[33mcommit bb58ec837fa1437afaf2e95a3d1303f11cf4bea1[m
Author: Jeremy Kuhne <jkuhne@microsoft.com>
Date:   Tue Aug 4 13:34:03 2015 -0700

    When building other platforms, skip tests
    
    When building other platforms on Windows, skip tests.

[33mcommit b2efe9e69580f4c596cbe6d9874df69f6bfa961c[m
Merge: 6d8a7b5 9203354
Author: VSadov <vsadov@microsoft.com>
Date:   Tue Aug 4 13:04:10 2015 -0700

    Merge pull request #2361 from VSadov/Update
    
    Restoring the return type of the Expression<TDelegate>.Update

[33mcommit e10a3015edea70be4f065fc03b753a2df58bfb6e[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Tue Aug 4 12:47:36 2015 -0700

    Disable three failing TypeExtensions tests on Linux

[33mcommit 6d8a7b517c632fdd14ba611075868ac04f74f05e[m
Merge: 8613407 23e2f6f
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Tue Aug 4 11:13:34 2015 -0700

    Merge pull request #2617 from mmitche/use-built-live-bits
    
    Remove run-test native binaries workaround

[33mcommit 861340740f98c5275a688c91663d5de785235552[m
Merge: 4b6ce97 514f4c7
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 4 14:11:53 2015 -0400

    Merge pull request #2594 from Sridhar-MS/load-context
    
    Add unit test cases for System.Runtime.Loader.AssemblyLoadContext

[33mcommit 23e2f6f0e4f825fff4ae892ed236209fcb6658a5[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Tue Aug 4 09:28:29 2015 -0700

    Remove run-test native binaries workaround
    
    Becuase of a lack of a native binaries build leg, we were building the native corefx binaries during run-test. Now that we have those legs in CI, we can remove the workaround.

[33mcommit 4b6ce9752d5344d0652a2a48aa2e83006bf4dd53[m
Merge: fe4f468 b453906
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 4 12:00:35 2015 -0400

    Merge pull request #2616 from fffej/patch-1
    
    Update a link due to a 404.

[33mcommit b45390619492b5b58ca0f6261c4274dc1f665bd7[m
Author: Jeff Foster <jeff.foster@acm.org>
Date:   Tue Aug 4 16:58:31 2015 +0100

    Update a link due to a 404.

[33mcommit 115a4a3101e60773f1b5fed77b5f2cb4f2a164bd[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Aug 4 07:36:11 2015 -0700

    Remove build warnings in cryptography libraries
    
    System.Security.Cryptography.Primitives uses System.IO-4.0.10.  The rest of the cryptography libraries seems to get an implicit reference to System.IO, but 4.0.0.  A post-build analysis is not pleased by this state of affairs.
    
    So, for all libraries that currently package-to-package reference System.Security.Cryptography.Primitives; add a System.IO-4.0.10 reference.

[33mcommit fe4f468789621b3646c5280ab514b4426beca313[m
Merge: 03c5b0b 71efecc
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 4 09:53:05 2015 -0400

    Merge pull request #2557 from kapilash/proxy
    
    HttpClient via libcurl : proxy support

[33mcommit 03c5b0b21df203d31a2ebf4c44d9d10dcdf30f1c[m
Merge: b047ab4 8b7ccd0
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 4 09:10:44 2015 -0400

    Merge pull request #2592 from Priya91/process
    
    Add more process tests.

[33mcommit b047ab4b0046e559a37b7020a24166d3dadd24b8[m
Merge: a73b4d7 373acc9
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Aug 4 09:04:50 2015 -0400

    Merge pull request #2577 from Maxwe11/win32-registry-improvements
    
    Win32.Registry improvements

[33mcommit 373acc940af8f4923f8666550c07037a356485d1[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Sat Aug 1 14:47:27 2015 +0300

    Extend test cases for Win32.Registry
    - test against key names which only starts with one of
      the valid base key name (e.g. HKEY_LOCAL_MACHINE_FOOBAR);
    - test against base keys followed by separator;
    - test that key names are case insensitive.

[33mcommit 46c9e83caaa9f231c1719ece171d39087aadb46b[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Thu Jul 30 09:07:03 2015 +0300

    Some improvements for RegistryKey
    - avoid empty array allocation
    - replace manual array copying with `Array.Copy`
    - replace CopyTo with ToArray

[33mcommit 71efecc937c9d44c7ea2fa79f21f416575ba6168[m
Author: Hemanth Kapila <saihemanth@gmail.com>
Date:   Wed Jul 29 22:11:22 2015 +0530

    HttpClient via libcurl : proxy support
    
    This commit introduces integrates CURL handler with the proxy
    functionality offered by libcurl

[33mcommit 514f4c73a94b0cbffff516698e8c00987240a766[m
Author: Sridhar Periyasamy <sridhper@microsoft.com>
Date:   Mon Aug 3 17:43:45 2015 -0700

    Address pull request feedback and fix linux test run script to prevent copying test assemblies to the 'Overlay' directory.

[33mcommit 8b7ccd09db9b2ace6b1bc87cc56d39bead973f0d[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Fri Jul 31 16:04:07 2015 -0700

    Add more process tests.

[33mcommit 795cbc75f8e167047a7c19cd7e21e99b9b9f4308[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Aug 3 14:17:05 2015 -0700

    Re-lock dependencies with latest xunit

[33mcommit caec7eb08096579e7d5506e19e53c7a4bf43a6da[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Aug 3 14:05:47 2015 -0700

    Add reference to System.Runtime.Extensions project in Debug tests
    
    Needed to avoid problematic reference to the Runtime.Extensions Nuget package pulled in by the xunit beta

[33mcommit 80cc5d18656bac74ea77e8d5d0123ac155540aec[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Aug 3 14:02:00 2015 -0700

    Update MemoryMappedFiles tests to latest xunit
    
    Usage of MemberData with unmatched parameters types is no longer supported

[33mcommit b84f53f744ba0418255cbe471b783dde2a700a8e[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Aug 3 13:36:01 2015 -0700

    Update test dependencies
    
    Fixes all test warnings about 'different versions of the same dependent
    assembly'

[33mcommit 9203354bcb54641b33b2f8f8889c5989ab80ff2d[m
Author: vsadov <vsadov@microsoft.com>
Date:   Mon Aug 3 13:23:05 2015 -0700

    Fixed signatures of UpdateLambda in Interpreter

[33mcommit 79424bb81189b1ee2dfbc2653f1e5a6fa18404a8[m
Author: vsadov <vsadov@microsoft.com>
Date:   Mon Aug 3 12:25:33 2015 -0700

    Added a test

[33mcommit 4f5db270924929d9b51a5426db6218d91f454fc0[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Aug 3 11:49:19 2015 -0700

    Update Linq.Parallel tests for latest xUnit.
    
    The latest xunit requires that MemberData attributes and their methods
    have the same exact signature. I've changed some object[] parameters to
    their exact int[] type to account for this behavior change.

[33mcommit a3924179992d647d48b906bd71774b811b80a4ca[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Aug 3 11:34:44 2015 -0700

    Update System.Diagnostics.Process Xunit helpers
    
    Assert.None no longer exists, so use Assert.DoesNotContain instead, which
    is equivalent.

[33mcommit 7c12b0120834f92d5c591124f692ea1b64c6a877[m
Author: Eric Mellino <erme@microsoft.com>
Date:   Mon Aug 3 11:27:48 2015 -0700

    Move all tests to latest xunit beta

[33mcommit a73b4d73d17e71058dacf5248ed033cfbdc193df[m
Merge: 8e8d076 94a9886
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 3 11:24:42 2015 -0400

    Merge pull request #2377 from bpschoch/pipes-organize
    
    Refactor and add tests for System.IO.Pipes library

[33mcommit 8e8d076a0908649c02e44e5211bb248b4f544e16[m
Merge: aead23a 917a4e6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Aug 3 10:16:31 2015 -0400

    Merge pull request #2574 from bartonjs/unix_pfx
    
    Add support for PFX files on Unix

[33mcommit aead23af7f873cc4cad39adc6b214e3492b9af99[m
Merge: 80f9caf 5d9f9d4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Aug 2 20:18:03 2015 -0400

    Merge pull request #2590 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 5d9f9d4c6ea450366c7b70af6e6006a401284d14[m
Author: ericstj <ericstj@microsoft.com>
Date:   Sun Aug 2 09:49:36 2015 -0700

    Move System.Net tests back to pre-release versions temporarily to fix missing SecureString
    
    The stable versioned packages use an older codebase currently than the latest pre-release.
    That codebase is still using SecureString in System.Private.Networking, but the dependency
    was omitted since crypto is still pre-release but networking had to be marked stable for UWP.
    This missing dependency was causing tests to fail.
    
    Rather than just list the dependency I am moving these tests back to pre-release packages
    for the System.Net contracts, since System.Net packages are under active development
    it is better to have the tests running against latest than the stable bits.
    
    Once we have newer versions published we'll update these tests to use those.

[33mcommit 80f9caf6de552efd2fa8aee636dc5fab1197787b[m
Merge: 63ff03f c3c049e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jul 31 22:04:21 2015 -0400

    Merge pull request #2589 from davidsh/update_readme
    
    Update README.md for System.Net.Primitives

[33mcommit 917a4e6c3589ede9f6a747c6ff4565004a38f29a[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Jul 30 18:25:14 2015 -0700

    Add support for reading files from disk to X509Certificate2 and X509Certificate2Collection on Unix
    
    With the file support it was easy to add a test that verifies that the Windows and Unix implementations of X509Certificate2Collection.Import on a PFX result in enumerating the files in the same order.
    
    The change uses OpenSSL's BIO structure to read the files, avoiding a File.ReadAllBytes approach to avoid cases wherein someone reads a very large file as a certificate.

[33mcommit 870e5a21b4cf98aba75d40ab153a2d5e5241e33e[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Jul 30 17:49:54 2015 -0700

    Add support for private keys in X509Certificate2 objects on Unix.

[33mcommit 8b05acb486b5e01b6d652d8e6adcbeffe62d1a73[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Jul 30 17:44:23 2015 -0700

    Convert ICertificatePal to use GetRSAPrivateKey instead of the PrivateKey property

[33mcommit a8f70ba3814aaf6f324af278306a4ad4222bc376[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Jul 30 16:55:28 2015 -0700

    Add support for reading PFX in X509Certificate2 and X509Certificate2Collection on Unix.
    
    At this stage HasPrivateKey properties on Unix still returns false, that is still coming.

[33mcommit af32a21cc4b5dbc8307a65cfb17ea868fc10e0b2[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Jul 30 13:41:51 2015 -0700

    Fix casing on the file to load in LoadCertificateFromFile
    
    It is "MS.cer" in the testdata package.  This passed on Windows non-POSIX filesystems, but caused a failure for the wrong reason when trying to use the tests for TDD on Unix.

[33mcommit 3ffbbbbb01c4d62d3130109992d69a6f34562628[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Thu Jul 30 11:41:34 2015 -0700

    Add an IntPtr constructor to RSAOpenSsl.
    
    OpenSSL doesn't have the same notion of key addressing as Windows (via structures such as CspParameters), so the ability to use a hardware key is currently non-existent. With this change it improves to "if you do the P/Invokes to get the correct RSA*, pass us the pointer and the rest of the managed cryptography stack can use it".
    
    This also empowers X509Certificates Unix implementation to use the existing key handle to instantiate the RSAOpenSsl object, rather than having to run through ExportParameters/ImportParameters.

[33mcommit 059612ded8655c9cfbd3b1b38512ee4eab4deecf[m
Author: Sridhar Periyasamy <sridhper@microsoft.com>
Date:   Fri Jul 31 17:54:28 2015 -0700

    Add unit test cases for System.Runtime.Loader.AssemblyLoadContext
    
    Usage of TPA and AssemblyLoadContext is mutually exclusive, you cannot use both. Since the premise is that you either want to use the default binding mechanism (via coreclr TPA binder) or supply your own (via AssemblyLoadContext) for your own assemblies.
    
    Corerun blindly adds all the assemblies (including test assemblies) in the current directory to the TPA list (and hence cannot be loaded via custom load contexts). To workaround this issue the test assembly which is loaded by a custom load context is embedded as a resource to the unit test assembly. This resource is extracted at runtime and prevents corerun from adding it to the TPA list.

[33mcommit ee1ec2891c7c65b46fa9dfb078636be503bb2a60[m
Author: Eric St. John <ericstj@microsoft.com>
Date:   Fri Jul 31 15:47:51 2015 -0700

    Use stable package dependencies and move our packages to post-stable versions
    
    This change modifies the build to consume the stable version where available.
    
    This disables building the dowlevel packages since we shipped them once as stable and we're done.
    From here on out, we'll only build the latest version (except for a servicing event, which would
    be handled by syncing to a hash).
    
    I can't rev the package versions in the normal way yet (by modifying the assembly version of the contents)
    because that turned out to be too big of a problem to tackle in this change. Instead I added a
    parameter to the task that calculates package versions to do the rev for anything that was
    stable, but only when building the package itself, not when calculating the dependencies.
    This has the downside of not permitting a dependency on a incremented pre-release version if we've
    shipped a stable version, but that is a small point in time problem until I can rev the assembly
    versions.
    
    [tfs-changeset: 1508664]

[33mcommit c3c049ea564c36961bffe5f20558c347b42d310c[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Fri Jul 31 15:34:15 2015 -0700

    Update README.md for System.Net.Primitives

[33mcommit 63ff03fce5ab7c7ac6920d99af148a447d04c822[m
Merge: 8ca44f6 e970eec
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Fri Jul 31 13:29:40 2015 -0700

    Merge pull request #2559 from pgavlin/SNPrimitivesPR
    
    Initial commit of System.Net.Primitives.

[33mcommit e970eec1ea687f1d182119d2c95823914aaa6874[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Fri Jul 24 15:50:43 2015 -0700

    Initial commit of System.Net.Primitives.

[33mcommit a75896bd169b6481543d1a99d9d110a1c0339987[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Wed Jul 29 14:39:03 2015 -0700

    Optimize HttpMethod.GetHashCode()
    
    - Avoid unnecessary allocations associated with the use of
    ToUpperInvariant().
    - Update tests to be more explicit about the ToUpperInvariant()
    behavior.
    - Minor cleanup (readonly field, remove unused usings & trailing
    whitespace).

[33mcommit 8ca44f62f874e3757a7741ae25916793e6342f86[m
Merge: 4966ab7 167d06c
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Thu Jul 30 15:37:18 2015 -0700

    Merge pull request #2566 from Priya91/diagnostictools
    
    Add tests for SuppressMessageAttribute in System.Diagnostics.Tools contract.

[33mcommit 167d06c4b5434ec4322a11d13e5d995d4abcd454[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Wed Jul 29 16:39:09 2015 -0700

    Add tests for SuppressMessageAttribute in System.Diagnostics.Tools contract.

[33mcommit 4966ab7cd5896c1540964a07214848264c1a22d9[m
Merge: 65dd83a 789b818
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jul 30 15:37:05 2015 -0400

    Merge pull request #2572 from mmitche/update-build-tools
    
    Update build tools to version 66

[33mcommit 94a9886154e8d9faab608de634f397f9a8774f0b[m
Author: Bernie Schoch <bpschoch@gmail.com>
Date:   Wed Jun 10 12:23:59 2015 -0400

    Refactor and add tests for System.IO.Pipes library
    
    1) Refactor to base class, common test cases so they can be shared between the
        Anonymous/Named Client/Server combinations.
    
    2) Modify the Anonymous/Named throws test classes to use new base class
    
    3) Complete the various permutations of throws tests e.g. before write parameter checking was only done on Anonymous classes, now both Anonymous/Named and Client/Server
    
    4) Add parameter name checking on various throws tests
    
    5) Add tests for incompatible modes between client/server named pipes
    
    6) Replace NotReachable() calls with Action {} on tests
    
    7) Permute out the various directions (in, out) on throws tests

[33mcommit 789b818222fe4528afb9146b6d00263cb560b4ff[m
Author: Matt Mitchell <mmitche@microsoft.com>
Date:   Thu Jul 30 11:01:41 2015 -0700

    Update build tools to version 66
    
    Fixes #2570

[33mcommit 65dd83a5ba4af65a28c59eca1a7e065168257d50[m
Merge: 7713698 a5d4384
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jul 30 10:52:42 2015 -0400

    Merge pull request #2541 from mj1856/serialization-timezone-fixes
    
    Serialization time zone fixes

[33mcommit 7713698594d5f647742abc6c0e27d28b089f3a2c[m
Merge: b6b18dd 1dbfabb
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jul 30 10:47:44 2015 -0400

    Merge pull request #2558 from ianhays/filestream
    
    Modified calls to GetTestFilePath within loops to not use the same filename

[33mcommit b6b18ddfcf0faf9ab50c7d3242bfc86fcce8809a[m
Merge: b128e58 b845f29
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jul 30 07:20:06 2015 -0400

    Merge pull request #2567 from Maxwe11/fix-registry-tests
    
    Fix Win32.Registry tests

[33mcommit b845f29fcaf5d5f183fe2ad0f65715720b11a859[m
Author: Dmitry Turin <turin.dmytro@gmail.com>
Date:   Thu Jul 30 04:00:36 2015 +0300

    Fix Win32.Registry tests

[33mcommit b128e585280b624d208cea2fefb52f5885bdc076[m
Merge: ba678d3 9ab7326
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jul 29 20:34:15 2015 -0400

    Merge pull request #2564 from JeremyKuhne/LockJson
    
    Lock the project.lock file.

[33mcommit 9ab73263b318986baeebd1905508e68462f5615d[m
Author: Jeremy Kuhne <jkuhne@microsoft.com>
Date:   Wed Jul 29 15:24:38 2015 -0700

    Lock the project.lock file.
    
    Avoids the file getting updated on every build. (And showing up
    in changed files as a result.)

[33mcommit 1dbfabb32d61a8c2db25c82bb22743bcc15c2ccb[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Jul 29 09:00:16 2015 -0700

    - Added an overload to GetTestFilePath that takes an integer index parameter to add to the generated filename so that calls to the function within loops will be able to differentiate themselves
    - Resolves #1434

[33mcommit ba678d3afff517a7719fd22968ee5f8759bc2f65[m
Merge: 50ba714 df1f445
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Wed Jul 29 14:51:24 2015 -0700

    Merge pull request #2513 from Priya91/pbugfix
    
    BugFix: Attempt fix for process tests failing in CI environment.

[33mcommit 50ba7141c650bdd52ce33e8b497519e6129466bb[m
Merge: 141b312 2dcf647
Author: David Shulman <david.shulman@microsoft.com>
Date:   Wed Jul 29 13:32:15 2015 -0700

    Merge pull request #2553 from davidsh/httpmethod_regression
    
    Fix regression in HttpMethod.GetHashCode()

[33mcommit 141b3123715391685bf7ae1d362faa3d4e0cdcf8[m
Merge: 5b60b47 cb0694e
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Wed Jul 29 11:44:34 2015 -0700

    Merge pull request #2472 from JeremyKuhne/CommonTest
    
    Add test project for common shared code.

[33mcommit 5b60b47cf3baaf30f0a2886ae3d0dc9916f99129[m
Merge: 2678fc7 374274d
Author: Lakshmi Priya <Priya91@users.noreply.github.com>
Date:   Wed Jul 29 11:25:35 2015 -0700

    Merge pull request #2540 from Priya91/fileversioninfo
    
    Reorganize System.Diagnostics.FileVersionInfo tests folder structure.

[33mcommit 2678fc72dd27b347bb08a17fee4c6642b258cc10[m
Merge: f3fa757 481d5c6
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Jul 29 09:49:19 2015 -0700

    Merge pull request #2512 from ianhays/master
    
    Final major update to the tests for System.IO.FileSystem

[33mcommit 2dcf6471f00954b86663f26f5ce45d8c3485017b[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Jul 28 15:36:23 2015 -0700

    Fix regression in HttpMethod.GetHashCode()
    
    A PR from last month changed how GetHashCode() works.  This ended up
    breaking tests against the .NET Native build of System.Net.Http which
    shares the same source code as CoreFx.   So, reverting the change in
    GetHashCode() and porting additional ToF tests to GitHub.

[33mcommit 481d5c645763da79145af50d123db3f4041aa05e[m
Author: Ian Hays <ianha@microsoft.com>
Date:   Wed Jul 29 08:04:18 2015 -0700

    - Resolves #2458. FileInfo.Open(FileMode.Append) didn't allow appending per so I modified FileInfo to allow it
    - References #2460. File.Move and FileInfo.MoveTo no longer always overwrite the destination file; added a non-concurrent validity check to MoveFile in the Unix implementation to serve as a temporary solution.
    - Resolves #2459. Reenabled Directory_CreateDirectory.DriveLetter_Unix as it's previous failures were not the fault of the method but of the system.
    - Added test checks to work around the issue in #2537 until a final decision is reached for the desktop.
    - Added Interop.Link to the Interop files for the (possible) implementation of File.Move
    - Consolidated all of the related files that did nothing but inherit from other classes (e.g. File_GetFiles_str and File_GetFiles_str_str were consolidated into File_GetFiles)
    - Removed the "partial" keyword from some test classes
    - Finished overhauling all test cases that don't directly require solutions to Build System issues before being re-added (e.g. those that require networked drives or altering the current directory)
    - Added some tests to increase code coverage slightly in some cases.
    - All classes and files have been renamed to match the standard set by FileStream: only include parameters in the test/class name if there are overloads
    - Modified the Unix behavior for distinguishing between a FileNotFoundException and a DirectoryNotFoundException to match that of Windows.
    - Removed some redundant error checks that never catch
    - DirectoryInfo.MoveTo(destPath) did not have checks for destinations with paths that are over MAXPATH. I added them to better match the behavior and error timing of Directory.Move(source, dest).

[33mcommit f3fa757fc9bbe140a549590c4b476115e30fd572[m
Merge: 012f128 b5a268d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Wed Jul 29 09:48:10 2015 -0400

    Merge pull request #2319 from justinvp/fs_enumerate
    
    Avoid unnecessary allocations in Win32 file system enumeration

[33mcommit 012f12833cd796ee86265e227d626bc1eff4afe0[m
Merge: 9d83f0a ac4bf3e
Author: Vijay Kota <vijaykota@users.noreply.github.com>
Date:   Wed Jul 29 09:09:04 2015 +0530

    Merge pull request #2473 from vijaykota/feature
    
    Initial xplat work for HttpClient

[33mcommit 9d83f0a621eed4b39fe8e00b79ca27af4c0c9fca[m
Merge: d324e86 2c71618
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jul 28 23:10:06 2015 -0400

    Merge pull request #2452 from eerhardt/master
    
    Fixing the TimeZoneInfo tests on Linux

[33mcommit d324e86d5f46e921eb5171a2372ec7bc5906d1cf[m
Merge: adb69be 0f6a197
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Jul 28 19:07:02 2015 -0700

    Merge pull request #2554 from davidsh/update_readme
    
    Update README.md for System.Net.WebSockets.Client

[33mcommit 0f6a197a486db2fa8b906f00cf2acc9fdacd9705[m
Author: David Shulman <david.shulman@microsoft.com>
Date:   Tue Jul 28 16:16:49 2015 -0700

    Update README.md for System.Net.WebSockets.Client

[33mcommit adb69be5ef9b7706f8b0dba2e6ee8348205a899b[m
Merge: 00a304f 78e9f0f
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Jul 28 18:34:29 2015 -0700

    Merge pull request #2547 from nguerrera/fix-mac-os-x-build
    
    Fix Mac OS X build break due to deprecation warnings as errors

[33mcommit 00a304fa80d9342cc747453076d002ff80aaf542[m
Merge: 6ef2364 dc473a1
Author: Stephen Toub <stoub@microsoft.com>
Date:   Tue Jul 28 17:49:47 2015 -0400

    Merge pull request #2550 from bartonjs/restore_crypto_tests
    
    Restore testing of RSAOpenSsl

[33mcommit 78e9f0ff83101200f53a1077a3502c3ccba18c8f[m
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Jul 27 18:32:05 2015 -0700

    Fix Mac OS X build break due to deprecation warnings as errors

[33mcommit 6ef23648cafbf8bc208f6d2c73832228a6ae8534[m
Merge: 63da6ec 9df77b0
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Jul 28 12:20:47 2015 -0700

    Merge pull request #2548 from stephentoub/datashared_activeissue
    
    Disable MMF IPC test

[33mcommit 63da6ec73f90f2e9432bffd049bff78ab8291eb1[m
Merge: c664c18 2f2fae2
Author: Pat Gavlin <pgavlin@gmail.com>
Date:   Tue Jul 28 10:40:23 2015 -0700

    Merge pull request #2511 from pgavlin/SNWebSocketsClient
    
    Initial commit of System.Net.WebSockets.Client.

[33mcommit dc473a18dcc13b845c08ceda2c98b9ac4854e064[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Jul 28 09:15:01 2015 -0700

    Create test library for Cryptography.OpenSsl.
    
    The RSAOpenSsl type currently has no unique API surface area, so it just includes the RSA test suite and defines the provider that suite requires.

[33mcommit bd6672eab4280e00c1de8782155474c9b9ae4a8e[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Jul 28 09:06:17 2015 -0700

    Add an RSAFactory to the RSA test suite.
    
    Implementors will need to define an IRSAProvider and assign it via a field initializer (s_provider) for the RSAFactory class.  This was chosen over RSA.Create() for two reasons:
    1) RSA.Create() isn't part of the contract yet.
    2) There will be 3 RSA implementations, but only two of them capable of being returned by RSA.Create(), so an alternate factory is required for long-term support of CAPI testing.

[33mcommit 4cc2a21a7365aacd62467155632714e7d206688a[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Jul 28 09:00:53 2015 -0700

    Move the AlgorithmLookups test into the CSP-specific test suite.

[33mcommit c664c1868c449a8219df798ecd5528a791c1352a[m
Merge: 196c836 ebd9c62
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Tue Jul 28 08:47:38 2015 -0700

    Merge pull request #2543 from justinvp/tzi_testnames
    
    Fix invalid test: TimeZoneInfo.Local can be UTC

[33mcommit 00de558631279af686173234e9852084c6820274[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Tue Jul 28 08:46:02 2015 -0700

    Consolidate all of the cryptography tests onto one copy of ByteUtils.

[33mcommit ac4bf3eb90bf9255e64031c3d623b3443f349f7f[m
Author: Vijay Kota <vijayko@microsoft.com>
Date:   Tue Jul 28 10:45:08 2015 +0530

    Initial xplat work for HttpClient

[33mcommit a9a1b5ea1ca7b5e1970861df9386b5f97d30646e[m
Author: Bruce Bowyer-Smyth <contact@wmf2wpf.com>
Date:   Tue Jul 28 13:25:51 2015 +1000

    Use StringBuilder(string) constructor

[33mcommit 9df77b0f4636b2cdecb2ab791c320713a3d3bad6[m
Author: stephentoub <stoub@microsoft.com>
Date:   Mon Jul 27 21:37:20 2015 -0400

    Disable MMF IPC test
    
    It's causing some CI runs to fail.  Disabling until I have time to
    investigate why.

[33mcommit ebd9c62b9c382754356eb84221fbcfcb5f3b3fc9[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Mon Jul 27 14:44:30 2015 -0700

    Fix invalid test: TimeZoneInfo.Local can be UTC
    
    It's common to have the local time zone set to UTC in server/cloud/CI
    environments.
    
    Also changed Assert.NotEqual(x, null) -> Assert.NotNull(x);

[33mcommit 2f2fae24846c40bc588625b47ec12f43ac323612[m
Author: dotnet-bot <dotnet-bot@microsoft.com>
Date:   Fri Jul 17 14:12:27 2015 -0700

    Initial commit of System.Net.WebSockets.Client.

[33mcommit a5d438442a1778f0c927b1d05cea4843c88161b1[m
Author: Matt Johnson <matt.johnson@microsoft.com>
Date:   Mon Jul 27 14:07:25 2015 -0700

    Use the correct time zone offsets

[33mcommit 9d7e2d302765a4e382cd386f9bf5988c18fcd829[m
Author: Matt Johnson <matt.johnson@microsoft.com>
Date:   Mon Jul 27 14:06:22 2015 -0700

    Check offset separately for DateTimeOffset types

[33mcommit 374274dd013d8779bd0438f427632e6d387b709f[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Mon Jul 27 13:30:04 2015 -0700

    Reorganize System.Diagnostics.FileVersionInfo folder structure.

[33mcommit df1f445a469d2f95aaa4ba1f7dd8a843de6655ba[m
Author: Lakshmi Priya Sekar <lasekar@microsoft.com>
Date:   Fri Jul 24 15:37:01 2015 -0700

    BugFix: Attempt fix for process tests failing in CI environment.

[33mcommit 87fe10e4415728089834f46aed891b514bf83788[m
Author: bartonjs <jbarton@microsoft.com>
Date:   Mon Jul 27 11:26:15 2015 -0700

    Unify crypto tests on Common\tests\Streams\PositionValueStream.
    
    Moved the namespace to Test.IO.Streams, so that it bespeaks of the ability to be shared.

[33mcommit b5a268d22cbe2f10d7f347cd19fc89f5e16fa287[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Fri Jul 10 19:33:57 2015 -0700

    Reduce allocations in Win32 file system enumeration
    
    - Lazily create and cache SearchResultHandler<TSource> instances
    - Only allocate _searchStack when needed
    - Remove the unnecessary SearchOption field on SearchData
    - Replace SearchData class with unified PathPair struct with Unix.
    - Remove the SearchResult class
    - Pass WIN32_FIND_DATA by ref instead of copying (large struct)
    - Various minor cleanup

[33mcommit 196c8368b08b813bd768785a91e030ecc0be3f4f[m
Merge: 6d01de0 1bb48a7
Author: David Shulman <david.shulman@microsoft.com>
Date:   Mon Jul 27 09:59:45 2015 -0700

    Merge pull request #2534 from justinvp/http_streamtostreamcopy
    
    Make StreamToStreamCopy static

[33mcommit 6d01de0620fe421f89a5606d9f292a1c92a43d6a[m
Merge: d744803 e16fbb7
Author: Nick Guerrera <nicholg@microsoft.com>
Date:   Mon Jul 27 07:35:01 2015 -0700

    Merge pull request #2529 from benpye/native-linux-arm-target
    
    Add Linux ARM target for Native libraries.

[33mcommit d744803e6bf12e3083ccf54dec339c82f9a0c7aa[m
Merge: 0e8ed6e 35a7346
Author: Stephen Toub <stoub@microsoft.com>
Date:   Mon Jul 27 08:14:45 2015 -0400

    Merge pull request #2496 from khdang/fix_serialization_test_2287
    
    Fix serialization test failure in Minsk timezone

[33mcommit 0e8ed6e11b9d84855f4d243ad66067ce28a16e97[m
Merge: 59efb56 33f03a4
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sun Jul 26 06:57:46 2015 -0400

    Merge pull request #2536 from janhenke/System.IO.Native-fix1
    
    Fix System.IO.Native shim

[33mcommit 33f03a431d9ef761f3c5c89819c2785b72ae077e[m
Author: Jan Henke <Jan.Henke@taujhe.de>
Date:   Sun Jul 26 18:24:16 2015 +1000

    Fix System.IO.Native shim
    
    The type of src is a const reference, not a const pointer. So use direct
    member access instead of pointer access. This changes allows to build
    the shim on FreeBSD.

[33mcommit 59efb564a6a3f9a247ae00360f8fac96c1445f52[m
Merge: 52c7af6 4874e78
Author: David Shulman <david.shulman@microsoft.com>
Date:   Sat Jul 25 18:46:38 2015 -0700

    Merge pull request #2532 from justinvp/http_bytearraycontent
    
    Cleanup ByteArrayContent

[33mcommit 52c7af6ae941bb2e1ccc0e053623e2efe039a787[m
Merge: 17a9de2 0c42646
Author: Stephen Toub <stoub@microsoft.com>
Date:   Sat Jul 25 19:53:44 2015 -0400

    Merge pull request #2530 from jasonwilliams200OK/patch-1
    
    Documentation: Purges two outdated known issues

[33mcommit 1bb48a7b5f89c6f3da297c3e91441b18da11a184[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Sat Jul 25 13:33:12 2015 -0700

    Make StreamToStreamCopy static
    
    Avoids the unnecessary allocation in StreamContent's
    SerializeToStreamAsync.

[33mcommit 4874e78513d247478c08c85d791c3154eaa0d896[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Sat Jul 25 11:47:40 2015 -0700

    Cleanup ByteArrayContent
    
    - Use Task.FromResult instead of TaskCompletionSource
    - Make readonly fields readonly
    - Remove unused usings

[33mcommit 0c42646a32b7efc3d67eb49dbcf984888b29dd6a[m
Author: Peter Jas <necmon@yahoo.com>
Date:   Sat Jul 25 20:02:53 2015 +0300

    Documentation: Purges two outdated known issues.
    
    Unix build instruction has two outdated notes under Known Issues.
    
    The first one is fixed by:
    https://bugzilla.xamarin.com/show_bug.cgi?id=29679. (/cc @akoeplinger)
    
    The last one was fixed by a series of organization-wide updates to
    bash files by @dougbu via https://github.com/aspnet/Home/issues/695.

[33mcommit e16fbb72299c82ae3149a547b89e86f42bad716d[m
Author: Ben Pye <ben@curlybracket.co.uk>
Date:   Sat Jul 25 14:46:02 2015 +0100

    Add Linux ARM target for Native libraries.

[33mcommit 82dbecf9e081eaa3532d66055386b28ee970a608[m
Author: Bruce Bowyer-Smyth <bbowyersmyth@live.com.au>
Date:   Sat Jul 25 16:45:26 2015 +1000

    Avoid StringBuilder creation for every response header, remove ToUpperInvariant allocation

[33mcommit 17a9de2961b658ee46b55dae1059c646383fd6b6[m
Merge: 13e7635 018763c
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jul 24 21:35:46 2015 -0400

    Merge pull request #2518 from weshaggard/FixFileSystemTestsDependency
    
    Add P2P reference for new IO tests to System.Runtime.Extensions

[33mcommit 018763c4dad4c0c1c1cc63befdcba249b7c11b05[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Fri Jul 24 16:48:04 2015 -0700

    Add P2P reference for new IO tests to System.Runtime.Extensions
    
    Until we can publish a new packages with the new System.Runtime.Extensions
    implementation reference the locally built version. We need to change to a
    P2P reference to avoid the race condition that is inherit in using
    TestWithLocalLibraries. That can only be used if we know all the
    dependencies are built first.

[33mcommit 13e7635d104901b6330f130c9a1b33f17f442b32[m
Merge: 588aea3 079ecc6
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jul 24 18:54:01 2015 -0400

    Merge pull request #2495 from weshaggard/NativeServiceCPPWarningFix
    
    Fix new c++ compiler warning after moving to C++ 14

[33mcommit 588aea39e878f696f3e93af6a167855c5397c5f6[m
Merge: 38f462d a5524dd
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jul 24 18:52:33 2015 -0400

    Merge pull request #2510 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 38f462da5eb7b55cc600aa6a147883cd80a4d63b[m
Merge: 5f612ec b7db354
Author: Wes Haggard <weshaggard@users.noreply.github.com>
Date:   Fri Jul 24 15:20:02 2015 -0700

    Merge pull request #2494 from weshaggard/UpdateVS2015Instructions
    
    Update instructions to point to VS 2015 RTM

[33mcommit a5524ddefa47f479d98881e036dbf91a851fcd8e[m
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Jul 24 14:33:25 2015 -0700

    Mark the System.Security.Cryptography.Csp tests as not supported on Linux and OSX, since it's a Windows-only concept.
    
    [tfs-changeset: 1505768]

[33mcommit 079ecc635879b8aabe1d258025896d2c6bc1a960[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Fri Jul 24 11:10:06 2015 -0700

    Fix new c++ compiler warning after moving to C++ 14
    
    nativetestservice.cpp(140): warning C4477: 'wprintf' : format string '%s' requires an argument of type 'wchar_t *'
    , but variadic argument 1 has type 'std::wstring *'

[33mcommit 5f612ecd6ae7fa5b36976f3d2c1cd533422fd47a[m
Merge: 5b273ac b3ea441
Author: Sridhar Periyasamy <sridhper@microsoft.com>
Date:   Fri Jul 24 13:59:15 2015 -0700

    Merge pull request #2451 from Sridhar-MS/env-tests2
    
    Add missing unit tests for System.Environment class

[33mcommit 35a7346b6357d08d63e00af0c30b6084881dd873[m
Author: Khoa Dang <khdang@microsoft.com>
Date:   Fri Jul 24 11:32:42 2015 -0700

    Fix serialization test failure in Minsk timezone

[33mcommit 5b273ac7465b69e774a4c0e835bfad4a720ace2b[m
Merge: 9ed1b0e 5eb063a
Author: VSadov <vsadov@microsoft.com>
Date:   Fri Jul 24 11:07:06 2015 -0700

    Merge pull request #2426 from hackcraft/faster_linq_aggregates
    
    Tighter loops on Enumerable.Min, .Max & .Average.

[33mcommit b7db354506788239f489123b2011a85267284004[m
Author: Wes Haggard <Wes.Haggard@microsoft.com>
Date:   Fri Jul 24 10:58:55 2015 -0700

    Update instructions to point to VS 2015 RTM
    
    Also mention the need to include the Common C++ tools.

[33mcommit 2c716182f427a28c0825be96f0dc42c6bf922ca8[m
Author: Eric Erhardt <eric.erhardt@microsoft.com>
Date:   Fri Jul 24 13:01:36 2015 -0500

    Marking failing TimeZoneInfo tests with correct issue #.

[33mcommit 4bacc2b2dcc04366150010c4e057c98f6e9dc8d2[m
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Jul 24 10:18:28 2015 -0700

    The contract refresh change looks to have left some files behind that it didn't mean to. Wiping them out now that "tf delete /recursive" on the directory is an option.
    
    The CNG implementation got created under a capitalized CNG directory, there's also a tf rename on that directory here to change casing. I have no idea if that'll work, or if the tooling will see it as a no-op due to case-insensitive matching
    
    [tfs-changeset: 1505681]

[33mcommit 9ed1b0e7aea471f3f00af06dc1dcf0aa0ad8e179[m
Merge: 544e9e8 d50c7ac
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jul 24 12:50:36 2015 -0400

    Merge pull request #2469 from stephentoub/hide_cc_ipc
    
    Hide IPC test program from code coverage

[33mcommit 544e9e87b1243c0a19ce0ef14f008a0bbf822c26[m
Merge: ed0f12d 6896000
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jul 24 12:50:19 2015 -0400

    Merge pull request #2478 from stephentoub/fix_projecttypeguids
    
    Remove extraneous ProjectTypeGuids causing load failures

[33mcommit ed0f12ddc1e1116c1d44955b05dbdae741a1b200[m
Merge: 45f41c8 bd71685
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jul 24 11:38:11 2015 -0400

    Merge pull request #2476 from akoeplinger/patch-1
    
    Fix typo in build.sh warning message

[33mcommit 45f41c895450ff04d856bd5e88d8617a49463ab5[m
Merge: 00b166d 08bbc7e
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jul 24 11:36:51 2015 -0400

    Merge pull request #2468 from stephentoub/update_readme
    
    Update README.md with additional library

[33mcommit 00b166d2c0317e3f3fc21d5c664ccfb71f89a36d[m
Merge: 6db745c a26d49f
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jul 24 11:32:17 2015 -0400

    Merge pull request #2475 from stephentoub/disable_failing_process_tests
    
    Disabling several failing Process tests

[33mcommit 6896000d173190ad945fac32834c2d30815d8a29[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jul 24 11:15:28 2015 -0400

    Remove extraneous ProjectTypeGuids causing load failures
    
    Several projects are no longer loading correctly in VS for me.  It's happening for projects and only for projects that contain a <ProjectTypeGuids/> node in the .csproj, related to portable libraries.  These entries are unnecessary, and I'm simply deleting them, after which the projects load in VS successfully.

[33mcommit ce0506baea623efdb74707aee0e4aa169d6f468c[m
Author: Jeremy Barton <jbarton@microsoft.com>
Date:   Fri Jul 24 08:13:47 2015 -0700

    Repartiton crypto contracts, and refresh the API set.
    
    Some of the contracts were moved in their entirety:
    
    System.Security.Cryptography.Encryption            => System.Security.Cryptography.Primitives
    System.Security.Cryptography.Hashing               => System.Security.Cryptography.Primitives
    
    System.Security.Cryptography.RandomNumberGenerator => System.Security.Cryptography.Algorithms
    System.Security.Cryptography.Encryption.Aes        => System.Security.Cryptography.Algorithms
    System.Security.Cryptography.Hashing.Algorithms    => System.Security.Cryptography.Algorithms
    System.Security.Cryptography.DeriveBytes           => System.Security.Cryptography.Algorithms
    
    The only partitioned library was System.Security.Cryptography.RSA:
      The RSA base class and supporting types                            => System.Security.Cryptography.Algorithms
      The RSACryptoServiceProvider class and additional supporting types => System.Security.Cryptography.Csp
      The internal RSAOpenSsl type was made public                       => System.Security.Cryptography.OpenSsl
      RSACng was copied from desktop                                     => System.Security.Cryptography.Cng
    
    This change also pulls in the RSA contract refresh from 4.6.
    It does not yet add RSA.Create() to do the right reflection-forward lookups (the change was already big enough)
    It also has the sad side effect of turning off the RSA tests for Linux, but fixing that problem is high on my list after getting the packages published. (I wanted to keep as many files as possible intact so they show as moves both in TFS and on github... rename+edit in TFS will likely not show up as cleanly in git).
    Git builds will continue to have test coverage, but with the old contracts disabled ToF tests will shut down.  ToF tests will be re-enabled in a followup change.
    
    [tfs-changeset: 1505642]

[33mcommit bd7168515a5301c3b4fbcd7d373ccfc84e82d551[m
Author: Alexander Köplinger <alex.koeplinger@outlook.com>
Date:   Fri Jul 24 16:36:52 2015 +0200

    Fix typo in build.sh warning message

[33mcommit 6db745c520402e2b25780afcea8d0a5840426f60[m
Merge: 800e7b7 2bddf6d
Author: Stephen Toub <stoub@microsoft.com>
Date:   Fri Jul 24 10:21:05 2015 -0400

    Merge pull request #2470 from stephentoub/ctregister_closure_http
    
    Avoid a closure/delegate allocation in WinHttpHandler

[33mcommit a26d49f666cd37199a6242418392b8fb65a934ea[m
Author: stephentoub <stoub@microsoft.com>
Date:   Fri Jul 24 10:19:53 2015 -0400

    Disabling several failing Process tests
    
    These have been failing consistently since #2421.

[33mcommit 5eb063acd790568699d3e2c27ce9eb409e39e3f9[m
Author: Jon Hanna <jon@hackcraft.net>
Date:   Fri Jul 24 14:08:09 2015 +0100

    Tighter loops on Enumerable.Min, .Max & .Average.
    
    Fixes #2238.
    
    Changes the flow of these aggregate operations to use tighter loops.
    
    A test of the performance changes can be see at
    https://github.com/hackcraft/Enumerable-Tester/blob/master/Enumerable%20Aggregate%20Performance.ods?raw=true
    
    Notably:
    
    1. Most tested uses showed an increase in performance, sometimes dramatically.
    2. The only cases with a decrease in performance greater than 5% were in short
    paths (e.g. single-element sequences) and so the total performance impact is
    slight.
    3. For other cases that showed a decrease in performance there were similar
    cases (same operation on same datatype) with an increase in performance either
    comparable or overwhelming the decrease.
    
    Merge branch 'master' into faster_linq_aggregates
    
    Remove extraneous while.
    
    Simplify while loops on nullable types.
    
    Merge branch 'master' into faster_linq_aggregates

[33mcommit cb0694e5c5fbf551a6003a6873382285fdc6f27b[m
Author: Jeremy Kuhne <jkuhne@microsoft.com>
Date:   Thu Jul 23 22:35:46 2015 -0700

    Add test project for common shared code.
    
    Includes the shared code in the test assembly allowing writing of
    unit tests against internals in shared code.

[33mcommit 4981e64073dadeebe1b9a637ba69cb1effb94ec0[m
Author: Justin Van Patten <jvp@justinvp.com>
Date:   Thu Jul 23 18:41:56 2015 -0700

    Avoid enumerator allocations
    
    There are many places where ObjectCollection<T> is enumerated
    internally. This change avoids the enumerator allocation by using
    a struct enumerator (internal-only).

[33mcommit 800e7b74a0001b78837eb7f826afa104ebf4a50d[m
Merge: 5bdeb5b 0721434
Author: Jeremy Kuhne <jeremy.kuhne@microsoft.com>
Date:   Thu Jul 23 21:00:08 2015 -0700

    Merge pull request #2453 from JeremyKuhne/MoreExtendedPath
    
    Allow extended syntax for paths

[33mcommit 5bdeb5be427966b5299f781d6b6a0c2fffcd8051[m
Merge: 6ea3d21 95e0926
Author: Stephen Toub <stoub@microsoft.com>
Date:   Thu Jul 23 23:22:47 2015 -0400

    Merge pull request #2466 from dotnet-bot/from-tfs
    
    Merge changes from TFS

[33mcommit 2bddf6d0ce8576256845f0774b546fb9d819c3f6[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Jul 23 23:20:02 2015 -0400

    Avoid a closure/delegate allocation in WinHttpHandler
    
    One-line change to avoid a closure and delegate allocation on each call.

[33mcommit d50c7ac4d2adc8a5cf6e0bd21e18e9837a3d694c[m
Author: stephentoub <stoub@microsoft.com>
Date:   Thu Jul 23 22:44:15 2015 -0400

    Hide IPC test program from code coverage
    
    The InterProcessCommunication console test app is showing up in our code
    coverage report.  It's part of the test harness and can be excluded.
