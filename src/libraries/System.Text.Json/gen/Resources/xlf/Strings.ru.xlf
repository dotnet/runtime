<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="ru" original="../Strings.resx">
    <body>
      <trans-unit id="ContextClassesMustBePartialMessageFormat">
        <source>Derived 'JsonSerializerContext' type '{0}' specifies JSON-serializable types. The type and all containing types must be made partial to kick off source generation.</source>
        <target state="translated">Производный тип "JsonSerializerContext"{0}' указывает сериализуемые типы в формате JSON. Тип и все содержащие типы необходимо сделать частичными для начала генерации источника.</target>
        <note />
      </trans-unit>
      <trans-unit id="ContextClassesMustBePartialTitle">
        <source>Derived 'JsonSerializerContext' types and all containing types must be partial.</source>
        <target state="translated">Производные типы "JsonSerializerContext" и все содержащие типы должны быть частичными.</target>
        <note />
      </trans-unit>
      <trans-unit id="DataExtensionPropertyInvalidFormat">
        <source>The data extension property '{0}.{1}' is invalid. It must implement 'IDictionary&lt;string, JsonElement&gt;' or 'IDictionary&lt;string, object&gt;', or be 'JsonObject'.</source>
        <target state="translated">Свойство расширения данных "{0}.{1}" недопустимо. Оно должен реализовывать строку "IDictionary&lt;string, JsonElement&gt;" или "IDictionary&lt;string, Object&gt;" либо являться "JsonObject".</target>
        <note />
      </trans-unit>
      <trans-unit id="DataExtensionPropertyInvalidTitle">
        <source>Data extension property type invalid.</source>
        <target state="translated">Недопустимый тип свойства расширения данных.</target>
        <note />
      </trans-unit>
      <trans-unit id="DerivedJsonConverterAttributesNotSupportedMessageFormat">
        <source>The custom attribute '{0}' deriving from JsonConverterAttribute is not supported by the source generator.</source>
        <target state="translated">Пользовательский атрибут "{0}", производный от JsonConverterAttribute, не поддерживается генератором исходного кода.</target>
        <note />
      </trans-unit>
      <trans-unit id="DerivedJsonConverterAttributesNotSupportedTitle">
        <source>Attributes deriving from JsonConverterAttribute are not supported by the source generator.</source>
        <target state="translated">Атрибуты, производные от JsonConverterAttribute, не поддерживаются генератором исходного кода.</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateTypeNameMessageFormat">
        <source>There are multiple types named '{0}'. Source was generated for the first one detected. Use 'JsonSerializableAttribute.TypeInfoPropertyName' to resolve this collision.</source>
        <target state="translated">Существует несколько типов с именем "{0}". Исходный код сформирован для первого обнаруженного типа. Используйте JsonSerializableAttribute.TypeInfoPropertyName для устранения этого конфликта.</target>
        <note />
      </trans-unit>
      <trans-unit id="DuplicateTypeNameTitle">
        <source>Duplicate type name.</source>
        <target state="translated">Дублирующееся имя типа.</target>
        <note />
      </trans-unit>
      <trans-unit id="FastPathPolymorphismNotSupportedMessageFormat">
        <source>Type '{0}' is annotated with 'JsonDerivedTypeAttribute' which is not supported in 'JsonSourceGenerationMode.Serialization'.</source>
        <target state="translated">Тип '{0}' аннотирован атрибутом \"JsonDerivedTypeAttribute\", который не поддерживается в \"JsonSourceGenerationMode.Serialization\".</target>
        <note />
      </trans-unit>
      <trans-unit id="FastPathPolymorphismNotSupportedTitle">
        <source>'JsonDerivedTypeAttribute' is not supported in 'JsonSourceGenerationMode.Serialization'.</source>
        <target state="translated">Атрибут JsonDerivedTypeAttribute не поддерживается в \"JsonSourceGenerationMode.Serialization\".</target>
        <note />
      </trans-unit>
      <trans-unit id="InaccessibleJsonIncludePropertiesNotSupportedFormat">
        <source>The member '{0}.{1}' has been annotated with the JsonIncludeAttribute but is not visible to the source generator.</source>
        <target state="translated">Элемент "{0}.{1}" аннотирован с использованием класса JsonIncludeAttribute, но генератор исходного кода не обнаруживает этот элемент.</target>
        <note />
      </trans-unit>
      <trans-unit id="InaccessibleJsonIncludePropertiesNotSupportedTitle">
        <source>Inaccessible properties annotated with the JsonIncludeAttribute are not supported in source generation mode.</source>
        <target state="translated">Недоступные свойства, аннотированные с использованием класса JsonIncludeAttribute, не поддерживаются в режиме создания исходного кода.</target>
        <note />
      </trans-unit>
      <trans-unit id="InitOnlyPropertyDeserializationNotSupportedFormat">
        <source>The type '{0}' defines init-only properties, deserialization of which is currently not supported in source generation mode.</source>
        <target state="translated">Тип "{0}" определяет свойства, предназначенные только для инициализации. Их десериализация сейчас не поддерживается в режиме создания исходного кода.</target>
        <note />
      </trans-unit>
      <trans-unit id="InitOnlyPropertyDeserializationNotSupportedTitle">
        <source>Deserialization of init-only properties is currently not supported in source generation mode.</source>
        <target state="translated">Десериализация свойств, предназначенных только для инициализации, сейчас не поддерживается в режиме создания исходного кода.</target>
        <note />
      </trans-unit>
      <trans-unit id="JsonConstructorInaccessibleMessageFormat">
        <source>The constructor on type '{0}' has been annotated with JsonConstructorAttribute but is not accessible by the source generator.</source>
        <target state="translated">Конструктор для типа "{0}" аннотирован с использованием JsonConstructorAttribute, но недоступен для генератора источника.</target>
        <note />
      </trans-unit>
      <trans-unit id="JsonConstructorInaccessibleTitle">
        <source>Constructor annotated with JsonConstructorAttribute is inaccessible.</source>
        <target state="translated">Конструктор, аннотированный с использованием JsonConstructorAttribute, недоступен.</target>
        <note />
      </trans-unit>
      <trans-unit id="JsonConverterAttributeInvalidTypeMessageFormat">
        <source>The 'JsonConverterAttribute' type '{0}' specified on member '{1}' is not a converter type or does not contain an accessible parameterless constructor.</source>
        <target state="translated">Тип "JsonConverterAttribute" "{0}", указанный в элементе "{1}", не является типом преобразователя или не содержит доступного конструктора без параметров.</target>
        <note />
      </trans-unit>
      <trans-unit id="JsonConverterAttributeInvalidTypeTitle">
        <source>The 'JsonConverterAttribute.Type' contains an invalid or inaccessible argument.</source>
        <target state="translated">Аргумент "JsonConverterAttribute.Type" содержит недопустимый или недоступный аргумент.</target>
        <note />
      </trans-unit>
      <trans-unit id="JsonSerializableAttributeOnNonContextTypeMessageFormat">
        <source>The type '{0}' has been annotated with JsonSerializableAttribute but does not derive from JsonSerializerContext. No source code will be generated.</source>
        <target state="translated">Тип "{0}" помечен атрибутом JsonSerializableAttribute, но не является производным от JsonSerializerContext. Исходный код не будет создан.</target>
        <note />
      </trans-unit>
      <trans-unit id="JsonSerializableAttributeOnNonContextTypeTitle">
        <source>Types annotated with JsonSerializableAttribute must be classes deriving from JsonSerializerContext.</source>
        <target state="translated">Типы, аннотированные атрибутом JsonSerializableAttribute, должны быть классами, производными от JsonSerializerContext.</target>
        <note />
      </trans-unit>
      <trans-unit id="JsonStringEnumConverterNotSupportedMessageFormat">
        <source>The member '{0}' has been annotated with 'JsonStringEnumConverter' which is not supported in native AOT. Consider using the generic 'JsonStringEnumConverter&lt;TEnum&gt;' instead.</source>
        <target state="translated">Элемент "{0}" содержит примечание JsonStringEnumConverter, что не поддерживается в собственном AOT. Вместо этого рассмотрите возможность использовать универсальный параметр JsonStringEnumConverter&lt;TEnum&gt;.</target>
        <note />
      </trans-unit>
      <trans-unit id="JsonStringEnumConverterNotSupportedTitle">
        <source>The non-generic 'JsonStringEnumConverter' requires dynamic code.</source>
        <target state="translated">Для неуниверсального параметра JsonStringEnumConverter требуется динамический код.</target>
        <note />
      </trans-unit>
      <trans-unit id="JsonUnsupportedLanguageVersionMessageFormat">
        <source>The System.Text.Json source generator is not available in C# {0}. Please use language version {1} or greater.</source>
        <target state="translated">Генератор исходного кода System.Text.Json не доступен в C# {0}. Используйте языковую версию {1} или выше.</target>
        <note />
      </trans-unit>
      <trans-unit id="JsonUnsupportedLanguageVersionTitle">
        <source>C# language version not supported by the source generator.</source>
        <target state="translated">Версия языка C# не поддерживается генератором исходного кода.</target>
        <note />
      </trans-unit>
      <trans-unit id="MultipleJsonConstructorAttributeFormat">
        <source>Type '{0}' has multiple constructors annotated with 'JsonConstructorAttribute'.</source>
        <target state="translated">Тип "{0}" имеет несколько конструкторов, аннотированных с использованием JsonConstructorAttribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="MultipleJsonConstructorAttributeTitle">
        <source>Type has multiple constructors annotated with JsonConstructorAttribute.</source>
        <target state="translated">Тип имеет несколько конструкторов, аннотированных с использованием JsonConstructorAttribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="MultipleJsonExtensionDataAttributeFormat">
        <source>Type '{0}' has multiple members annotated with 'JsonExtensionDataAttribute'.</source>
        <target state="translated">Тип "{0}" содержит несколько элементов, помеченных с помощью "JsonExtensionDataAttribute".</target>
        <note />
      </trans-unit>
      <trans-unit id="MultipleJsonExtensionDataAttributeTitle">
        <source>Type has multiple members annotated with JsonExtensionDataAttribute.</source>
        <target state="translated">Тип содержит несколько элементов, помеченных с помощью JsonExtensionDataAttribute.</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeNotSupportedMessageFormat">
        <source>Did not generate serialization metadata for type '{0}'.</source>
        <target state="translated">Метаданные сериализации для типа "{0}" не сформированы.</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeNotSupportedTitle">
        <source>Did not generate serialization metadata for type.</source>
        <target state="translated">Метаданные сериализации для типа не сформированы.</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>