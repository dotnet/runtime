<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="zh-Hant" original="../Strings.resx">
    <body>
      <trans-unit id="AddMissingCustomTypeMarshallerMembers">
        <source>Add missing custom type marshaller members</source>
        <target state="translated">新增遺漏的自訂類型排列器成員</target>
        <note />
      </trans-unit>
      <trans-unit id="AddMissingFeaturesToCustomTypeMarshaller">
        <source>Add missing features to the 'CustomTypeMarshallerAttribute' attribute</source>
        <target state="translated">將遺失的功能新增至 'CustomTypeMarshallerAttribute' 屬性</target>
        <note />
      </trans-unit>
      <trans-unit id="CallerAllocConstructorMustHaveBufferSizeDescription">
        <source>When a constructor taking a 'Span&lt;byte&gt;' is specified on the native type, the type must set the BufferSize field on the 'System.Runtime.InteropServices.CustomTypeMarshallerAttribute' to provide the size of the caller-allocated buffer.</source>
        <target state="translated">在原生類型上指定接受 'Span&lt;byte&gt;' 的建構函式時，類型必須在 'System.Runtime.InteropServices.CustomTypeMarshallerAttribute' 上設定 BufferSize 字段，以提供通話者設定的緩衝區大小。</target>
        <note />
      </trans-unit>
      <trans-unit id="CallerAllocConstructorMustHaveBufferSizeMessage">
        <source>The native type '{0}' must set the 'BufferSize' field on the applied 'System.Runtime.InteropServices.CustomTypeMarshallerAttribute' to specify the size of the caller-allocated buffer because it has a constructor that takes a caller-allocated 'Span&lt;byte&gt;'</source>
        <target state="translated">原生類型'{0}'必須在套用的 'System.Runtime.InteropServices.CustomTypeMarshallerAttribute' 上設定 'BufferSize' 字段，以指定通話者設定的緩衝區大小，因为它的建構函式採用通話者設定的 'Span&lt;byte&gt;'</target>
        <note />
      </trans-unit>
      <trans-unit id="CallerAllocConstructorMustHaveBufferSizeTitle">
        <source>'BufferSize' should be set on 'CustomTypeMarshallerAttribute'</source>
        <target state="translated">應在 'CustomTypeMarshallerAttribute' 上設定 'BufferSize'</target>
        <note />
      </trans-unit>
      <trans-unit id="CallerAllocMarshallingShouldSupportAllocatingMarshallingFallbackDescription">
        <source>A type that supports marshalling from managed to native using a caller-allocated buffer should also support marshalling from managed to native where using a caller-allocated buffer is impossible.</source>
        <target state="translated">支援使用通話者設定緩衝區從 Managed 到 native 的類型，也應支援從售管理到原生排列，因為無法使用通話者設定的緩衝區。</target>
        <note />
      </trans-unit>
      <trans-unit id="CallerAllocMarshallingShouldSupportAllocatingMarshallingFallbackMessage">
        <source>Native type '{0}' has a constructor taking a caller-allocated buffer, but does not support marshalling in scenarios where using a caller-allocated buffer is impossible</source>
        <target state="translated">原生類型 '{0}'具有使用通話者設定緩衝區的建構函示，但在無法使用通話者設定的緩衝區的情況下，不支援封送處理。</target>
        <note />
      </trans-unit>
      <trans-unit id="CallerAllocatedBufferConstructorProvidedShouldSpecifyFeatureDescription">
        <source>A marshaller type that provides a constructor taking a caller-allocated 'Span&lt;byte&gt;' should specify that it supports the 'CallerAllocatedBuffer' feature.</source>
        <target state="translated">提供使用通話者設定之 'Span&lt;byte&gt;' 的建構函式的封送處理器類型，應指定並支援 'CallerAllocatedBuffer' 功能。</target>
        <note />
      </trans-unit>
      <trans-unit id="CallerAllocatedBufferConstructorProvidedShouldSpecifyFeatureMessage">
        <source>The type '{0}' provides a constructor taking a caller-allocated 'Span&lt;byte&gt;' but does not specify that it supports the 'CallerAllocatedBuffer' feature. The constructor will not be used unless the feature is specified.</source>
        <target state="translated">類型 '{0}' 提供使用通話者設定之 'Span&lt;byte&gt;' 的建構函式，但未指定其支援 'CallerAllocatedBuffer' 功能。除非指定功能，否則不會使用建構函式。</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotForwardToDllImportDescription">
        <source>The generated 'DllImportAttribute' will not have a value corresponding to '{0}'.</source>
        <target state="translated">產生的 'DllImportAttribute' 將不會有對應至 '{0}' 的值。</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotForwardToDllImportMessage">
        <source>'{0}' has no equivalent in 'DllImportAtttribute' and will not be forwarded</source>
        <target state="translated">'{0}'在 'DllImportAtttribute' 中没有相等項目，將不會轉寄</target>
        <note />
      </trans-unit>
      <trans-unit id="CannotForwardToDllImportTitle">
        <source>Specified 'LibraryImportAttribute' arguments cannot be forwarded to 'DllImportAttribute'</source>
        <target state="translated">指定的 'LibraryImportAttribute' 自變量無法轉送到 'DllImportAttribute'</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationNotSupportedDescription">
        <source>Source-generated P/Invokes will ignore any configuration that is not supported.</source>
        <target state="translated">来源產生的 P/Invokes 將會忽略任何不支援的設定。</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationNotSupportedMessage">
        <source>The '{0}' configuration is not supported by source-generated P/Invokes. If the specified configuration is required, use a regular `DllImport` instead.</source>
        <target state="translated">来源產生的 P/Invokes 不支援為'{0}'設定。如果需要指定的設定，請改用一般 'DllImport'。</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationNotSupportedMessageMarshallingInfo">
        <source>The specified marshalling configuration is not supported by source-generated P/Invokes. {0}.</source>
        <target state="translated">来源產生的 P/Invokes 不支援指定的排列設定。{0}。</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationNotSupportedMessageParameter">
        <source>The specified '{0}' configuration for parameter '{1}' is not supported by source-generated P/Invokes. If the specified configuration is required, use a regular `DllImport` instead.</source>
        <target state="translated">来源產生的 P/Invokes 不支援为参數 '{0}' 指定的'{1}'設定。如果需要指定的設定，請改用一般 'DllImport'。</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationNotSupportedMessageReturn">
        <source>The specified '{0}' configuration for the return value of method '{1}' is not supported by source-generated P/Invokes. If the specified configuration is required, use a regular `DllImport` instead.</source>
        <target state="translated">来源產生的 P/Invokes 不支援為方法 '{0}' 的傳回值指定的 '{1}' 設定。如果需要指定的設定，請改用一般 'DllImport'。</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationNotSupportedMessageValue">
        <source>The specified value '{0}' for '{1}' is not supported by source-generated P/Invokes. If the specified value is required, use a regular `DllImport` instead.</source>
        <target state="translated">來源產生的 P/Invokes 不支援為 '{1}' 指定的值 '{0}'。如果需要指定值，請改用一般 'DllImport'。</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationNotSupportedTitle">
        <source>Specified configuration is not supported by source-generated P/Invokes.</source>
        <target state="translated">来源產生的 P/Invokes 不支援指定的設定。</target>
        <note />
      </trans-unit>
      <trans-unit id="ConstantAndElementCountInfoDisallowed">
        <source>Only one of 'ConstantElementCount' or 'ElementCountInfo' may be used in a 'MarshalUsingAttribute' for a given 'ElementIndirectionDepth'</source>
        <target state="translated">在指定的 'ElementIndirectionDepth' 的 'MarshalUsingAttribute' 中只能使用 'ConstantElementCount' 或 'ElementCountInfo' 其中之一</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertNoPreserveSigDllImportToGeneratedMayProduceInvalidCode">
        <source>Automatically converting a P/Invoke with 'PreserveSig' set to 'false' to a source-generated P/Invoke may produce invalid code</source>
        <target state="translated">將 'PreserveSig' 設為 'false' 的 P/Invoke 自動轉換來源產生的 P/Invoke 可能會產生無效的程式碼</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToLibraryImport">
        <source>Convert to 'LibraryImport'</source>
        <target state="translated">轉換為 'LibraryImport'</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToLibraryImportDescription">
        <source>Use 'LibraryImportAttribute' instead of 'DllImportAttribute' to generate P/Invoke marshalling code at compile time</source>
        <target state="translated">使用 'LibraryImportAttribute' 而非 'DllImportAttribute' 在編譯時間產生 P/Invoke 封送處理程式碼</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToLibraryImportMessage">
        <source>Mark the method '{0}' with 'LibraryImportAttribute' instead of 'DllImportAttribute' to generate P/Invoke marshalling code at compile time</source>
        <target state="translated">以 'LibraryImportAttribute' 代替 'DllImportAttribute' 標示方法'{0}'，以在編譯時間產生 P/Invoke 封送處理程式碼</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToLibraryImportTitle">
        <source>Use 'LibraryImportAttribute' instead of 'DllImportAttribute' to generate P/Invoke marshalling code at compile time</source>
        <target state="translated">使用 'LibraryImportAttribute' 而非 'DllImportAttribute' 在編譯時間產生 P/Invoke 封送處理程式碼</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToLibraryImportWarning">
        <source>Conversion to 'LibraryImport' may change behavior and compatibility. See {0} for more information.</source>
        <target state="translated">轉換為 'LibraryImport' 可能會變更行為和兼容性。如需詳細資訊，請參閱 {0}。</target>
        <note>{0} is a documentation link</note>
      </trans-unit>
      <trans-unit id="ConvertToLibraryImportWithSuffix">
        <source>Convert to 'LibraryImport' with '{0}' suffix</source>
        <target state="translated">轉換為具有 '{0}'後綴的 'LibraryImport'</target>
        <note />
      </trans-unit>
      <trans-unit id="CustomMarshallerTypeMustHaveRequiredShapeTitle">
        <source>Marshaller type does not have the required shape</source>
        <target state="translated">封送處理器類型沒有必要的圖形</target>
        <note />
      </trans-unit>
      <trans-unit id="CustomMarshallerTypeMustSupportDirectionDescription">
        <source>A native must set the 'Direction' property on the 'CustomTypeMarshallerAttribute' to a value that sets at least one known flag value on the 'CustomTypeMarshallerDirection' enum</source>
        <target state="translated">原生必須將 'CustomTypeMarshallerAttribute' 上的 'Direction' 屬性設定為在 'CustomTypeMarshallerDirection' 列舉上設定至少一個已知旗標值的值</target>
        <note />
      </trans-unit>
      <trans-unit id="CustomMarshallerTypeMustSupportDirectionMessage">
        <source>The native type '{0}' must set the 'Direction' property on the 'CustomTypeMarshallerAttribute' to a value that sets at least one known flag value on the 'CustomTypeMarshallerDirection' enum</source>
        <target state="translated">原生類型 '{0}'必須將 'CustomTypeMarshallerAttribute' 上的 'Direction' 屬性設定為在 'CustomTypeMarshallerDirection' 列舉上設定至少一個已知旗標值的值</target>
        <note />
      </trans-unit>
      <trans-unit id="CustomTypeMarshallerAttributeMustBeValidDescription">
        <source>The 'CustomTypeMarshallerAttribute' attribute must be semantically valid</source>
        <target state="translated">'CustomTypeMarshallerAttribute' 屬性在語意上必須有效</target>
        <note />
      </trans-unit>
      <trans-unit id="CustomTypeMarshallerAttributeMustBeValidMessage">
        <source>The 'CustomTypeMarshallerAttribute' on '{0}' is semantically invalid</source>
        <target state="translated">'{0}'上的 'CustomTypeMarshallerAttribute' 在語意上無效。</target>
        <note />
      </trans-unit>
      <trans-unit id="CustomTypeMarshallingManagedToNativeUnsupported">
        <source>The specified parameter needs to be marshalled from managed to native, but the native type '{0}' does not support it.</source>
        <target state="translated">指定的參數必須從 Managed 整理為原生，但原生類型 '{0}'不支援。</target>
        <note />
      </trans-unit>
      <trans-unit id="CustomTypeMarshallingNativeToManagedUnsupported">
        <source>The specified parameter needs to be marshalled from native to managed, but the native type '{0}' does not support it.</source>
        <target state="translated">指定的參數必須從原生排列成受管理，但原生類型 '{0}' 不支援。</target>
        <note />
      </trans-unit>
      <trans-unit id="FreeNativeMethodProvidedShouldSpecifyUnmanagedResourcesFeatureDescription">
        <source>A marshaller type that provides a 'FreeNative' method should specify that it supports the 'UnmanagedResources' feature.</source>
        <target state="translated">提供 'FreeNative' 方法的封送處理器類型應該指定它支援 'UnmanagedResources' 功能。</target>
        <note />
      </trans-unit>
      <trans-unit id="FreeNativeMethodProvidedShouldSpecifyUnmanagedResourcesFeatureMessage">
        <source>The type '{0}' provides a 'FreeNative' method but does not specify that it supports the 'UnmanagedResources' feature. The method will not be used unless the feature is specified.</source>
        <target state="translated">類型 '{0}' 提供 'FreeNative' 方法，但未指定其支援 'UnmanagedResources' 功能。除非指定功能，否則不會使用此方法。</target>
        <note />
      </trans-unit>
      <trans-unit id="FromNativeValueMethodProvidedShouldSpecifyTwoStageMarshallingFeatureDescription">
        <source>A marshaller type that provides a 'FromNativeValue' method should specify that it supports the 'TwoStageMarshalling' feature.</source>
        <target state="translated">提供 'FromNativeValue' 方法的封送處理器類型應該指定它支援 'TwoStageMarshalling' 功能。</target>
        <note />
      </trans-unit>
      <trans-unit id="FromNativeValueMethodProvidedShouldSpecifyTwoStageMarshallingFeatureMessage">
        <source>The type '{0}' provides a 'FromNativeValue' method but does not specify that it supports the 'TwoStageMarshalling' feature. The method will not be used unless the feature is specified.</source>
        <target state="translated">類型 '{0}' 提供 'FromNativeValue' 方法，但不指定其支援 'TwoStageMarshalling' 功能。除非指定功能，否則不會使用此方法。</target>
        <note />
      </trans-unit>
      <trans-unit id="GetPinnableReferenceReturnTypeBlittableDescription">
        <source>The return type of 'GetPinnableReference' (after accounting for 'ref') must be blittable.</source>
        <target state="translated">('ref' 帳戶處理後的) 'GetPinnableReference' 傳回類型必須是 blittable。</target>
        <note />
      </trans-unit>
      <trans-unit id="GetPinnableReferenceReturnTypeBlittableMessage">
        <source>The dereferenced type of the return type of the 'GetPinnableReference' method must be blittable</source>
        <target state="translated">'GetPinnableReference' 方法傳回類型的解除参照類型必須是 blittable</target>
        <note />
      </trans-unit>
      <trans-unit id="GetPinnableReferenceShouldSupportAllocatingMarshallingFallbackDescription">
        <source>A type that supports marshalling from managed to native by pinning should also support marshalling from managed to native where pinning is impossible.</source>
        <target state="translated">支援透過釘選從 Managed 到 native 排列的類型，也應支援從 Managed 整理到原生，其中不可能進行釘選。</target>
        <note />
      </trans-unit>
      <trans-unit id="GetPinnableReferenceShouldSupportAllocatingMarshallingFallbackMessage">
        <source>Type '{0}' has a 'GetPinnableReference' method but its native type does not support marshalling in scenarios where pinning is impossible</source>
        <target state="translated">類型 '{0}' 具有 'GetPinnableReference' 方法，但其原生類型在無法釘選的情況下不支援封送處理</target>
        <note />
      </trans-unit>
      <trans-unit id="InTwoStageMarshallingRequiresToNativeValueDescription">
        <source>The 'TwoStageMarshalling' feature requires a 'TNativeType ToNativeValue()' method for the 'In' direction.</source>
        <target state="translated">'TwoStageMarshalling' 功能需要 'In' 方向的 'TNativeType ToNativeValue()' 方法。</target>
        <note />
      </trans-unit>
      <trans-unit id="InTwoStageMarshallingRequiresToNativeValueMessage">
        <source>A marshaller type '{0}' that supports marshalling in the 'In' direction with the 'TwoStageMarshalling' feature must provide a 'ToNativeValue' instance method that returns the native value</source>
        <target state="translated">封送處理器類型 '{0}' 支援以 'In' 方向進行封送處理，且 'TwoStageMarshalling' 功能必須提供傳回原生值的 'ToNativeValue' 執行個體方法</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidAttributedMethodContainingTypeMissingModifiersMessage">
        <source>Method '{0}' is contained in a type '{1}' that is not marked 'partial'. P/Invoke source generation will ignore method '{0}'.</source>
        <target state="translated">方法 '{0}' 包含在未標示為 'partial' 的類型'{1}'中。產生 P/Invoke 来源會忽略方法'{0}'。</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidAttributedMethodDescription">
        <source>Methods marked with 'LibraryImportAttribute' should be 'static', 'partial', and non-generic. P/Invoke source generation will ignore methods that are non-'static', non-'partial', or generic.</source>
        <target state="translated">以 'LibraryImportAttribute' 標示的方法應該是 'static'、'partial' 和非泛型。產生 P/Invoke 来源會忽略非'static'、non-'partial' 或一般的方法。</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidAttributedMethodSignatureMessage">
        <source>Method '{0}' should be 'static', 'partial', and non-generic when marked with 'LibraryImportAttribute'. P/Invoke source generation will ignore method '{0}'.</source>
        <target state="translated">以 'LibraryImportAttribute' 標示時，方法'{0}'應為 'static'、'partial' 和非泛型。產生 P/Invoke 来源會忽略方法'{0}'。</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidCustomTypeMarshallerAttributeUsageTitle">
        <source>Invalid `CustomTypeMarshallerAttribute` usage</source>
        <target state="translated">'CustomTypeMarshallerAttribute' 使用方式無效</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidLibraryImportAttributeUsageTitle">
        <source>Invalid 'LibraryImportAttribute' usage</source>
        <target state="translated">'LibraryImportAttribute' 使用方式無效</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidNativeTypeTitle">
        <source>Specified native type is invalid</source>
        <target state="translated">指定的原生類型無效</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidSignaturesInMarshallerShapeTitle">
        <source>Marshaller type has incompatible method signatures</source>
        <target state="translated">封送處理器類型有不相容的方法簽章</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidStringMarshallingConfigurationDescription">
        <source>The configuration of 'StringMarshalling' and 'StringMarshallingCustomType' is invalid.</source>
        <target state="translated">'StringMarshalling' 和 'StringMarshallingCustomType' 的設定無效。</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidStringMarshallingConfigurationMessage">
        <source>The configuration of 'StringMarshalling' and 'StringMarshallingCustomType' on method '{0}' is invalid. {1}</source>
        <target state="translated">方法 '{0}' 上的 'StringMarshalling' 和 'StringMarshallingCustomType' 設定無效。{1}</target>
        <note>{1} is a message containing additional details about what is not valid</note>
      </trans-unit>
      <trans-unit id="InvalidStringMarshallingConfigurationMissingCustomType">
        <source>'StringMarshallingCustomType' must be specified when 'StringMarshalling' is set to 'StringMarshalling.Custom'.</source>
        <target state="translated">當 'StringMarshalling' 設定為 'StringMarshalling.Custom' 時，必須指定 'StringMarshallingCustomType'。</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidStringMarshallingConfigurationNotCustom">
        <source>'StringMarshalling' should be set to 'StringMarshalling.Custom' when 'StringMarshallingCustomType' is specified.</source>
        <target state="translated">指定 'StringMarshallingCustomType' 時，'StringMarshalling' 應設定為 'StringMarshalling.Custom'。</target>
        <note />
      </trans-unit>
      <trans-unit id="LinearCollectionElementTypesMustMatchDescription">
        <source>The element type of the 'ReadOnlySpan' returned by 'GetManagedValuesSource' must be the same as the element type returned by 'GetManagedValuesDestination'.</source>
        <target state="translated">'GetManagedValuesSource' 傳回的 'ReadOnlySpan' 元素類型必須與 'GetManagedValuesDestination' 傳回的元素類型相同。</target>
        <note />
      </trans-unit>
      <trans-unit id="LinearCollectionElementTypesMustMatchMessage">
        <source>The element type of the 'ReadOnlySpan' returned by 'GetManagedValuesSource' must be the same as the element type returned by 'GetManagedValuesDestination'</source>
        <target state="translated">'GetManagedValuesSource' 傳回的 'ReadOnlySpan' 元素類型必須與 'GetManagedValuesDestination' 傳回的元素類型相同</target>
        <note />
      </trans-unit>
      <trans-unit id="LinearCollectionInCallerAllocatedBufferRequiresSpanConstructorDescription">
        <source>A 'LinearCollection'-kind native type that supports the 'CallerAllocatedBuffer' feature must provide a three-parameter constructor taking the managed type as the first parameter, a 'Span&lt;byte&gt;' as the second parameter, and the native size of the element as the third parameter</source>
        <target state="translated">支援 'CallerAllocatedBuffer' 功能的 'LinearCollection'-kind 原生類型必須提供以 Managed 類型作為第一個參數的三個參數建構函式、將 'Span&lt;byte&gt;' 作為第二個參數，以及元素的原生大小作為第三個參數</target>
        <note />
      </trans-unit>
      <trans-unit id="LinearCollectionInCallerAllocatedBufferRequiresSpanConstructorMessage">
        <source>The type '{0}' specifies that it supports 'In' marshalling with the 'CallerAllocatedBuffer' feature for '{1}' but does not provide a three-parameter constructor that takes a '{1}' , a 'Span&lt;byte&gt;', and an 'int'</source>
        <target state="translated">類型 '{0}' 指定其支援 'In' 封送處理，且'{1}'的 'CallerAllocatedBuffer' 功能，但不提供接受'{1}'、'Span&lt;byte&gt;' 和 'int' 的三個參數建構函示</target>
        <note />
      </trans-unit>
      <trans-unit id="LinearCollectionInRequiresCollectionMethodsDescription">
        <source>A 'LinearCollection'-kind native type that supports marshalling in the 'In' direction must provide a 'GetManagedValuesSource' that returns a 'ReadOnlySpan&lt;&gt;' and a 'GetNativeValuesDestination' method that returns a 'Span&lt;byte&gt;'.</source>
        <target state="translated">支援以 'In' 方向排列的 'LinearCollection'-kind 原生類型，必須提供傳回 'ReadOnlySpan&lt;&gt;' 的 'GetManagedValuesSource' 和傳回 'Span&lt;byte&gt;' 的 'GetNativeValuesDestination' 方法。</target>
        <note />
      </trans-unit>
      <trans-unit id="LinearCollectionInRequiresCollectionMethodsMessage">
        <source>The type '{0}' specifies that is supports marshalling in the 'In' direction, but it does not provide a 'GetManagedValuesSource' that returns a 'ReadOnlySpan&lt;&gt;' and a 'GetNativeValuesDestination' method that returns a 'Span&lt;byte&gt;'</source>
        <target state="translated">類型 '{0}'指定支援以 'In' 方向排列，但未提供傳回 'ReadOnlySpan&lt;&gt;' 的 'GetManagedValuesSource' 和傳回 'Span&lt;byte&gt;' 的 'GetNativeValuesDestination' 方法</target>
        <note />
      </trans-unit>
      <trans-unit id="LinearCollectionInRequiresTwoParameterConstructorDescription">
        <source>A 'LinearCollection'-kind native type must provide a two-parameter constructor taking the managed type as the first parameter and the native size of the element as the second parameter</source>
        <target state="translated">'LinearCollection'-kind 原生類型必須提供以 Managed 類型作為第一個參數的雙參數建構函式，以及元素的原生大小做為第二個參數</target>
        <note />
      </trans-unit>
      <trans-unit id="LinearCollectionInRequiresTwoParameterConstructorMessage">
        <source>The type '{0}' specifies that it supports 'In' marshalling of '{1}' but does not provide a two-parameter constructor that takes a '{1}' as the first parameter and an 'int' as the second parameter</source>
        <target state="translated">類型 '{0}' 指定它支援 '{1}' 的 'In' 排列，但不提供接受'{1}'做为第一個參數的雙參數建構函式，以及提供作為第二個參數的 'int' 作為第二個參數</target>
        <note />
      </trans-unit>
      <trans-unit id="LinearCollectionOutRequiresCollectionMethodsDescription">
        <source>A 'LinearCollection'-kind native type that supports marshalling in the 'Out' direction must provide a 'GetManagedValuesDestination' that takes an 'int' and returns a 'Span&lt;&gt;' and a 'GetNativeValuesSource' method that takes an 'int' and rreturns a 'ReadOnlySpan&lt;byte&gt;'.</source>
        <target state="translated">支援以 'Out' 方向排列的 'LinearCollection'-kind 原生類型必須提供接受 'int' 的 'GetManagedValuesDestination'，並傳回 'Span&lt;&gt;' 和採用 'int' 和 rreturns 'ReadOnlySpan&lt;byte&gt;' 的 'GetNativeValuesSource' 方法。</target>
        <note />
      </trans-unit>
      <trans-unit id="LinearCollectionOutRequiresCollectionMethodsMessage">
        <source>The type '{0}' specifies that it supports marshalling in the 'Out' direction, but it does not provide a 'GetManagedValuesDestination' that takes an 'int' and returns a 'Span&lt;&gt;' and a 'GetNativeValuesSource' method that takes an 'int' and rreturns a 'ReadOnlySpan&lt;byte&gt;'</source>
        <target state="translated">類型 '{0}'指定它支援以 'Out' 方向排列，但未提供接受 'int' 的 'GetManagedValuesDestination'，並傳回 'Span&lt;&gt;' 和採用 'int' 和 rreturns 'ReadOnlySpan&lt;byte&gt;' 的 'GetNativeValuesSource' 方法</target>
        <note />
      </trans-unit>
      <trans-unit id="LinearCollectionOutRequiresIntConstructorDescription">
        <source>A 'LinearCollection'-kind native type that supports marshalling in the 'Out' direction must provide a constructor that takes the size of the native element as an 'int'.</source>
        <target state="translated">支援以 'Out' 方向排列的 'LinearCollection'-kind 原生類型必須提供將原生元素大小視為 'int' 的建構函式。</target>
        <note />
      </trans-unit>
      <trans-unit id="LinearCollectionOutRequiresIntConstructorMessage">
        <source>The type '{0}' specifies that it supports marshalling in the 'Out' direction, but it does not provide a constructor that takes the size of the native element as an 'int'.</source>
        <target state="translated">類型 '{0}'指定它支援以 'Out' 方向排列，但未提供將原生元素大小視為 'int' 的建構函式。</target>
        <note />
      </trans-unit>
      <trans-unit id="MarshallerDirectionMustBeValidDescription">
        <source>The specified marshaller direction must be a valid value of the 'System.Runtime.InteropServices.CustomMarshallerDirection' enum.</source>
        <target state="translated">指定的封送處理器方向必須是 'System.Runtime.InteropServices.CustomMarshallerKind' 列舉的有效值。</target>
        <note />
      </trans-unit>
      <trans-unit id="MarshallerDirectionMustBeValidMessage">
        <source>The specified custom marshaller direction for '{0}' is invalid</source>
        <target state="translated">為'{0}'指定的自訂排列器方向無效</target>
        <note />
      </trans-unit>
      <trans-unit id="MarshallerGetPinnableReferenceRequiresTwoStageMarshallingDescription">
        <source>The use cases for 'GetPinnableReference' are not applicable in any scenarios where 'TwoStageMarshalling' is not also required.</source>
        <target state="translated">'GetPinnableReference' 的使用案例不適用于不需要 'TwoStageMarshalling' 的任何案例。</target>
        <note />
      </trans-unit>
      <trans-unit id="MarshallerGetPinnableReferenceRequiresTwoStageMarshallingMessage">
        <source>The 'GetPinnableReference' method cannot be provided on the native type '{0}' unless the 'TwoStageMarshalling' feature is also supported</source>
        <target state="translated">除非同时支援 'TwoStageMarshalling' 功能，否則無法在原生類型 '{0}' 上提供 'GetPinnableReference' 方法</target>
        <note />
      </trans-unit>
      <trans-unit id="MarshallerKindMustBeValidDescription">
        <source>The specified marshaller kind must be a valid value of the 'System.Runtime.InteropServices.CustomMarshallerKind' enum.</source>
        <target state="translated">指定的封送處理器種類必須是 'System.Runtime.InteropServices.CustomMarshallerKind' 列舉的有效值。</target>
        <note />
      </trans-unit>
      <trans-unit id="MarshallerKindMustBeValidMessage">
        <source>The specified custom marshaller kind for '{0}' is invalid</source>
        <target state="translated">為'{0}'指定的自訂排列器種類無效</target>
        <note />
      </trans-unit>
      <trans-unit id="MarshallerTypeMustSpecifyManagedTypeDescription">
        <source>A type with a 'System.Runtime.InteropServices.CustomTypeMarshallerAttribute' must specify a managed type</source>
        <target state="translated">具有 'System.Runtime.InteropServices.CustomTypeMarshallerAttribute' 的類型必須指定受控類型</target>
        <note />
      </trans-unit>
      <trans-unit id="MarshallerTypeMustSpecifyManagedTypeMessage">
        <source>The type '{0}' does not specify a managed type in the 'System.Runtime.InteropServices.CustomTypeMarshallerAttribute' applied to the type</source>
        <target state="translated">類型 '{0}' 未在套用至類型的 'System.Runtime.InteropServices.CustomTypeMarshallerAttribute' 中指定受管理類型</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingAllocatingMarshallingFallbackTitle">
        <source>Marshaller type does not support allocating constructor</source>
        <target state="translated">封送處理器類型不支援配置建構函式</target>
        <note />
      </trans-unit>
      <trans-unit id="NativeGenericTypeMustBeClosedOrMatchArityDescription">
        <source>The native type '{0}' must be a closed generic or have the same number of generic parameters as the managed type so the emitted code can use a specific instantiation.</source>
        <target state="translated">原生類型 '{0}' 必須是封閉式泛型或具有與受管理類型相同的泛型參數數目，因此發出的程式碼可以使用特定的具現化。</target>
        <note />
      </trans-unit>
      <trans-unit id="NativeGenericTypeMustBeClosedOrMatchArityMessage">
        <source>The native type '{0}' for managed type '{1}' must be a closed generic type or have the same arity as the managed type.</source>
        <target state="translated">受管理類型 '{0}' 的原生類型 '{1}'必須是封閉式泛型類別，或具有與受管理類型相同的 arity。</target>
        <note />
      </trans-unit>
      <trans-unit id="NativeTypeMustBeBlittableDescription">
        <source>A native type must be blittable.</source>
        <target state="translated">原生類型必須是 Blittable。</target>
        <note />
      </trans-unit>
      <trans-unit id="NativeTypeMustBeBlittableMessage">
        <source>The native type '{0}' for type '{1}' must be blittable</source>
        <target state="translated">類型 '{0}' 的原生類型'{1}'必須是 blittable</target>
        <note />
      </trans-unit>
      <trans-unit id="NativeTypeMustBePointerSizedDescription">
        <source>The native type must be pointer sized so the pinned result of 'GetPinnableReference' can be cast to the native type.</source>
        <target state="translated">原生類型必須是指針大小，才能將 'GetPinnableReference' 的釘選結果轉換為原生類型。</target>
        <note />
      </trans-unit>
      <trans-unit id="NativeTypeMustBePointerSizedMessage">
        <source>The native type '{0}' must be pointer sized because the managed type '{1}' has a 'GetPinnableReference' method</source>
        <target state="translated">原生類型'{0}'必須是指針大小，因為受管理的類型'{1}'具有 'GetPinnableReference' 方法</target>
        <note />
      </trans-unit>
      <trans-unit id="NativeTypeMustHaveCustomTypeMarshallerAttributeDescription">
        <source>A native type for a given type must have the 'System.Runtime.InteropServices.CustomTypeMarshallerAttribute' that specifies this type as the managed type.</source>
        <target state="translated">指定類型的原生類型必須有 'System.Runtime.InteropServices.CustomTypeMarshallerAttribute' 指定此類行為受管理類型。</target>
        <note />
      </trans-unit>
      <trans-unit id="NativeTypeMustHaveCustomTypeMarshallerAttributeMessage">
        <source>The native type for the type '{0}' must be a type with the 'System.Runtime.InteropServices.CustomTypeMarshallerAttribute' that specifies this type as the managed type</source>
        <target state="translated">類型 '{0}' 的原生類型必須是具有 'System.Runtime.InteropServices.CustomTypeMarshallerAttribute' 的類型，指定此類行為受管理類型</target>
        <note />
      </trans-unit>
      <trans-unit id="OutRequiresToManagedDescription">
        <source>A 'Value' or 'LinearCollection'-kind native type that supports marshalling in the 'Out' direction must provide a 'ToManaged' method that returns the managed type.</source>
        <target state="translated">支援在 'Out' 方向排列的 'Value' 或 'LinearCollection'-kind 原生類型必須提供傳回 Managed 類型的 'ToManaged' 方法。</target>
        <note />
      </trans-unit>
      <trans-unit id="OutRequiresToManagedMessage">
        <source>The type '{0}' specifies it supports marshalling in the 'Out' direction, but it does not provide a 'ToManaged' method that returns the managed type</source>
        <target state="translated">類型 '{0}' 指定它支援以 'Out' 方向排列，但未提供傳回受管理類型的 'ToManaged' 方法</target>
        <note />
      </trans-unit>
      <trans-unit id="OutTwoStageMarshallingRequiresFromNativeValueDescription">
        <source>The 'TwoStageMarshalling' feature requires a 'void FromNativeValue(TNativeType value)' method for the 'Out' direction.</source>
        <target state="translated">'TwoStageMarshalling' 功能需要 'Out' 方向的 'void FromNativeValue(TNativeType 值)' 方法。</target>
        <note />
      </trans-unit>
      <trans-unit id="OutTwoStageMarshallingRequiresFromNativeValueMessage">
        <source>The marshaller type '{0}' supports marshalling in the 'Out' direction with the 'TwoStageMarshalling' feature, but it does not provide a 'FromNativeValue' instance method that returns 'void' and takes one parameter.</source>
        <target state="translated">封送處理器類型 '{0}'支援以 'Out' 方向使用 'TwoStageMarshalling' 功能進行排列，但未提供傳回 'void' 並接受一個參數的 'FromNativeValue' 實例方法。</target>
        <note />
      </trans-unit>
      <trans-unit id="ProvidedMethodsNotSpecifiedInFeaturesTitle">
        <source>Marshaller type defines a well-known method without specifying support for the corresponding feature</source>
        <target state="translated">封送處理器類型定義了已知的方法，但未指定對應功能的支援</target>
        <note />
      </trans-unit>
      <trans-unit id="RefNativeValueUnsupportedDescription">
        <source>The 'Value' property must not be a 'ref' or 'readonly ref' property.</source>
        <target state="translated">'Value' 屬性不得為 'ref' 或 'readonly ref' 屬性。</target>
        <note />
      </trans-unit>
      <trans-unit id="RefNativeValueUnsupportedMessage">
        <source>The 'Value' property on the native type '{0}' must not be a 'ref' or 'readonly ref' property.</source>
        <target state="translated">原生類型 '{0}' 上的 'Value' 屬性不得為 'ref' 或 'readonly ref' 屬性。</target>
        <note />
      </trans-unit>
      <trans-unit id="SafeHandleByRefMustBeConcrete">
        <source>An abstract type derived from 'SafeHandle' cannot be marshalled by reference. The provided type must be concrete.</source>
        <target state="translated">衍生自 'SafeHandle' 的抽象類型無法依參考排列。提供的類型必須是實體。</target>
        <note />
      </trans-unit>
      <trans-unit id="ToNativeValueMethodProvidedShouldSpecifyTwoStageMarshallingFeatureDescription">
        <source>A marshaller type that provides a 'ToNativeValue' method should specify that it supports the 'TwoStageMarshalling' feature.</source>
        <target state="translated">提供 'ToNativeValue' 方法的封送處理器類型應該指定它支援 'TwoStageMarshalling' 功能。</target>
        <note />
      </trans-unit>
      <trans-unit id="ToNativeValueMethodProvidedShouldSpecifyTwoStageMarshallingFeatureMessage">
        <source>The type '{0}' provides a 'ToNativeValue' method but does not specify that it supports the 'TwoStageMarshalling' feature. The method will not be used unless the feature is specified.</source>
        <target state="translated">類型 '{0}' 提供 'ToNativeValue' 方法，但不指定其支援 'TwoStageMarshalling' 功能。除非指定功能，否則不會使用此方法。</target>
        <note />
      </trans-unit>
      <trans-unit id="TwoStageMarshallingNativeTypesMustMatchDescription">
        <source>The return type of 'ToNativeValue' and the parameter type of 'FromNativeValue' must be the same.</source>
        <target state="translated">'ToNativeValue' 的傳回類型與 'FromNativeValue' 的参数類型必須相同。</target>
        <note />
      </trans-unit>
      <trans-unit id="TwoStageMarshallingNativeTypesMustMatchMessage">
        <source>The return type of 'ToNativeValue' and the parameter type of 'FromNativeValue' must be the same</source>
        <target state="translated">'ToNativeValue' 的傳回類型與 'FromNativeValue' 的参数類型必須相同</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeNotSupportedDescription">
        <source>For types that are not supported by source-generated P/Invokes, the resulting P/Invoke will rely on the underlying runtime to marshal the specified type.</source>
        <target state="translated">對於來源產生的 P/Invokes 不支援的類型，產生的 P/Invoke 將依賴基礎運行時間來封送指定的類型。</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeNotSupportedMessageParameter">
        <source>The type '{0}' is not supported by source-generated P/Invokes. The generated source will not handle marshalling of parameter '{1}'.</source>
        <target state="translated">来源產生的 P/Invokes 不支援類型 '{0}'。產生的来源將不會處理參數 '{1}' 的排列。</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeNotSupportedMessageParameterWithDetails">
        <source>{0} The generated source will not handle marshalling of parameter '{1}'.</source>
        <target state="translated">{0} 產生的来源将不會處理參數 '{1}' 的排列。</target>
        <note>{0} is a message containing additional details about what is not supported
{1} is the name of the parameter</note>
      </trans-unit>
      <trans-unit id="TypeNotSupportedMessageReturn">
        <source>The type '{0}' is not supported by source-generated P/Invokes. The generated source will not handle marshalling of the return value of method '{1}'.</source>
        <target state="translated">来源產生的 P/Invokes 不支援類型 '{0}'。產生的來源將不會處理方法 '{1}' 的傳回值排列。</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeNotSupportedMessageReturnWithDetails">
        <source>{0} The generated source will not handle marshalling of the return value of method '{1}'.</source>
        <target state="translated">{0} 產生的來源將不會處理方法 '{1}' 之傳回值的排列。</target>
        <note>{0} is a message containing additional details about what is not supported
{1} is the name of the method</note>
      </trans-unit>
      <trans-unit id="TypeNotSupportedTitle">
        <source>Specified type is not supported by source-generated P/Invokes</source>
        <target state="translated">来源產生的 P/Invokes 不支援指定的類型。</target>
        <note />
      </trans-unit>
      <trans-unit id="UnmanagedResourcesRequiresFreeNativeDescription">
        <source>The 'UnmanagedResources' feature requires a 'void FreeNative()' method.</source>
        <target state="translated">'UnmanagedResources' 功能需要 'void FreeNative()' 方法。</target>
        <note />
      </trans-unit>
      <trans-unit id="UnmanagedResourcesRequiresFreeNativeMessage">
        <source>The marshaller type '{0}' supports marshalling with the 'UnmanagedResources' feature, but it does not provide a parameterless 'FreeNative' instance method that returns 'void'</source>
        <target state="translated">封送處理器類型 '{0}' 支援使用 'UnmanagedResources' 功能進行排列，但未提供傳回 'void' 的無參數 'FreeNative' 實例方法</target>
        <note />
      </trans-unit>
      <trans-unit id="ValueInCallerAllocatedBufferRequiresSpanConstructorDescription">
        <source>A 'Value'-kind native type that supports the 'CallerAllocatedBuffer' feature must provide a two-parameter constructor taking the managed type and a 'Span' of an 'unmanaged' type as parameters</source>
        <target state="translated">支援 'CallerAllocatedBuffer' 功能的 'Value'-kind 原生類型必須提供接受受管理類型的雙參數建構函示，以及以 'unmanaged' 類型的 'Span' 作為參數</target>
        <note />
      </trans-unit>
      <trans-unit id="ValueInCallerAllocatedBufferRequiresSpanConstructorMessage">
        <source>The type '{0}' specifies that it supports 'In' marshalling with the 'CallerAllocatedBuffer' feature for '{1}' but does not provide a two-parameter constructor that takes a '{1}' and 'Span' of an 'unmanaged' type as parameters</source>
        <target state="translated">類型 '{0}' 指定其支援使用 'CallerAllocatedBuffer' 功能為 '{1}' 的 'In' 封送處理，但不提供接受 '{1}' 的二參數構建函式，以及以 'unmanaged' 類型的 'Span' 作為參數</target>
        <note />
      </trans-unit>
      <trans-unit id="ValueInRequiresOneParameterConstructorDescription">
        <source>A 'Value'-kind native type must provide a one-parameter constructor taking the managed type as a parameter</source>
        <target state="translated">'Value'-kind 原生類型必須提供以 Managed 類型作為參數的單一參數構建函式</target>
        <note />
      </trans-unit>
      <trans-unit id="ValueInRequiresOneParameterConstructorMessage">
        <source>The type '{0}' specifies that it supports 'In' marshalling of '{1}' but does not provide a one-parameter constructor that takes a '{1}' as a parameter</source>
        <target state="translated">類型 '{0}'指定它支援 'In' 封送'{1}'，但不提供以'{1}'作為參數的單一參數建構函式</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>