<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="pt-BR" original="../Strings.resx">
    <body>
      <trans-unit id="AddGeneratedComClassAddUnsafe">
        <source>Add 'GeneratedComClassAttribute' to enable passing objects of this type to COM and allow unsafe code</source>
        <target state="new">Add 'GeneratedComClassAttribute' to enable passing objects of this type to COM and allow unsafe code</target>
        <note />
      </trans-unit>
      <trans-unit id="AddGeneratedComClassAttributeDescription">
        <source>This type implements at least one type with the 'GeneratedComInterfaceAttribute' attribute. Add the 'GeneratedComClassAttribute' to enable passing this type to COM and exposing the COM interfaces for the types with the 'GeneratedComInterfaceAttribute' from objects of this type.</source>
        <target state="new">This type implements at least one type with the 'GeneratedComInterfaceAttribute' attribute. Add the 'GeneratedComClassAttribute' to enable passing this type to COM and exposing the COM interfaces for the types with the 'GeneratedComInterfaceAttribute' from objects of this type.</target>
        <note />
      </trans-unit>
      <trans-unit id="AddGeneratedComClassAttributeMessage">
        <source>Add the 'GeneratedComClassAttribute' to '{0}' to enable passing objects of type '{0}' to COM</source>
        <target state="new">Add the 'GeneratedComClassAttribute' to '{0}' to enable passing objects of type '{0}' to COM</target>
        <note />
      </trans-unit>
      <trans-unit id="AddGeneratedComClassAttributeTitle">
        <source>Add 'GeneratedComClassAttribute' to enable passing objects of this type to COM</source>
        <target state="new">Add 'GeneratedComClassAttribute' to enable passing objects of this type to COM</target>
        <note />
      </trans-unit>
      <trans-unit id="AnalysisFailedDescription">
        <source>The analysis required to generate code for this interface or method has failed due to an unexpected code pattern. If you are using new or unconventional syntax, consider using other syntax.</source>
        <target state="translated">A análise necessária para gerar código para essa interface ou método falhou devido a um padrão de código inesperado. Se você estiver usando sintaxe nova ou não convencional, considere usar outra sintaxe.</target>
        <note />
      </trans-unit>
      <trans-unit id="AnalysisFailedInterfaceMessage">
        <source>Analysis of interface '{0}' has failed. ComInterfaceGenerator will not generate code for this interface.</source>
        <target state="translated">Falha na análise da interface '{0}'. ComInterfaceGenerator não gerará código para esta interface.</target>
        <note />
      </trans-unit>
      <trans-unit id="AnalysisFailedMethodMessage">
        <source>Analysis of method '{0}' has failed. ComInterfaceGenerator will not generate code for this method.</source>
        <target state="translated">Falha na análise do método '{0}'. ComInterfaceGenerator não gerará código para este método.</target>
        <note />
      </trans-unit>
      <trans-unit id="AnalysisFailedTitle">
        <source>Analysis for COM interface generation has failed.</source>
        <target state="needs-review-translation">Falha na análise de geração.</target>
        <note />
      </trans-unit>
      <trans-unit id="BaseInterfaceCannotBeGeneratedDescription">
        <source>COM interface source generation requires all base COM interfaces to be valid interfaces. Fix any issues on the base interface to resolve this diagnostic.</source>
        <target state="translated">A geração de fonte de interface COM requer que todas as interfaces COM base sejam interfaces válidas. Corrija quaisquer problemas na interface base para resolver este diagnóstico.</target>
        <note />
      </trans-unit>
      <trans-unit id="BaseInterfaceCannotBeGeneratedMessage">
        <source>COM interface {0} inherits from {1}, which has errors. ComInterfaceGenerator will not generate source for {0}.</source>
        <target state="translated">A interface COM {0} herda de {1}, que contém erros. ComInterfaceGenerator não irá gerar fonte para{0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="BaseInterfaceCannotBeGeneratedTitle">
        <source>The base COM interface failed to generate source. Code will not be generated for this interface.</source>
        <target state="needs-review-translation">A interface COM base falhou ao gerar a fonte. ComInterfaceGenerator não irá gerar fonte para esta interface.</target>
        <note />
      </trans-unit>
      <trans-unit id="CastsBetweenRuntimeComAndSourceGeneratedComNotSupportedDescription">
        <source>Casting between a 'ComImport' type and a source-generated COM type is not supported and will fail at runtime</source>
        <target state="new">Casting between a 'ComImport' type and a source-generated COM type is not supported and will fail at runtime</target>
        <note />
      </trans-unit>
      <trans-unit id="CastsBetweenRuntimeComAndSourceGeneratedComNotSupportedMessage">
        <source>Casting between a 'ComImport' type and a source-generated COM type is not supported</source>
        <target state="new">Casting between a 'ComImport' type and a source-generated COM type is not supported</target>
        <note />
      </trans-unit>
      <trans-unit id="CastsBetweenRuntimeComAndSourceGeneratedComNotSupportedTitle">
        <source>Casting between a 'ComImport' type and a source-generated COM type is not supported</source>
        <target state="new">Casting between a 'ComImport' type and a source-generated COM type is not supported</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassDoesNotImplementAnyGeneratedComInterfacesDescription">
        <source>A class with 'GeneratedComClassAttribute' must implement at least one interface with 'GeneratedComInterfaceAttribute' or else the generated code with not have an effect.</source>
        <target state="new">A class with 'GeneratedComClassAttribute' must implement at least one interface with 'GeneratedComInterfaceAttribute' or else the generated code with not have an effect.</target>
        <note />
      </trans-unit>
      <trans-unit id="ClassDoesNotImplementAnyGeneratedComInterfacesMessage">
        <source>Class '{0}' with 'GeneratedComClassAttribute' does not implement any interfaces with 'GeneratedComInterfaceAttribute'. Source will not be generated for '{0}'.</source>
        <target state="new">Class '{0}' with 'GeneratedComClassAttribute' does not implement any interfaces with 'GeneratedComInterfaceAttribute'. Source will not be generated for '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComHostingDoesNotSupportGeneratedComInterfaceDescription">
        <source>.NET COM hosting with 'EnableComHosting' only supports built-in COM interop. It does not support source-generated COM interop with 'GeneratedComInterfaceAttribute'.</source>
        <target state="new">.NET COM hosting with 'EnableComHosting' only supports built-in COM interop. It does not support source-generated COM interop with 'GeneratedComInterfaceAttribute'.</target>
        <note />
      </trans-unit>
      <trans-unit id="ComHostingDoesNotSupportGeneratedComInterfaceMessage">
        <source>.NET COM hosting with 'EnableComHosting' does not support interfaces with the 'GeneratedComInterfaceAttribute'. Change any COM exposed interfaces implemented by '{0}' to use the 'System.Runtime.InteropServices.ComVisibleAttribute' instead</source>
        <target state="new">.NET COM hosting with 'EnableComHosting' does not support interfaces with the 'GeneratedComInterfaceAttribute'. Change any COM exposed interfaces implemented by '{0}' to use the 'System.Runtime.InteropServices.ComVisibleAttribute' instead</target>
        <note />
      </trans-unit>
      <trans-unit id="ComHostingDoesNotSupportGeneratedComInterfaceTitle">
        <source>.NET COM hosting with 'EnableComHosting' does not support interfaces with the 'GeneratedComInterfaceAttribute'</source>
        <target state="new">.NET COM hosting with 'EnableComHosting' does not support interfaces with the 'GeneratedComInterfaceAttribute'</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationNotSupportedDescription">
        <source>Source-generated COM will ignore any configuration that is not supported.</source>
        <target state="translated">Um COM gerado pela origem ignorará qualquer configuração sem suporte.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationNotSupportedMessage">
        <source>The '{0}' configuration is not supported by source-generated COM. If the specified configuration is required, use `ComImport` instead.</source>
        <target state="translated">Um COM gerado pela origem não dá suporte à configuração '{0}'. Se a configuração especificada for necessária, use um 'ComImport' em vez disso.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationNotSupportedMessageMarshallingInfo">
        <source>The specified marshalling configuration is not supported by source-generated COM. {0}.</source>
        <target state="translated">Um COM gerado pela origem não dá suporte à configuração de realização de marshaling especificada. {0}.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationNotSupportedMessageParameter">
        <source>The specified '{0}' configuration for parameter '{1}' is not supported by source-generated COM. If the specified configuration is required, use `ComImport` instead.</source>
        <target state="translated">Um COM gerado pela origem não dá suporte à configuração '{0}' especificada para o parâmetro '{1}'. Se a configuração especificada for necessária, use 'ComImport' em vez disso.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationNotSupportedMessageReturn">
        <source>The specified '{0}' configuration for the return value of method '{1}' is not supported by source-generated COM. If the specified configuration is required, use `ComImport` instead.</source>
        <target state="translated">Um Com gerado pela origem não dá suporte à configuração “{0}” especificada para o valor retornado do método “{1}”. Se a configuração especificada for necessária, use `ComImport` em vez disso.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationNotSupportedMessageValue">
        <source>The specified value '{0}' for '{1}' is not supported by source-generated COM. If the specified configuration is required, use `ComImport` instead.</source>
        <target state="translated">Um COM gerado pela origem não dá suporte ao valor '{0}' especificado para '{1}'. Se a configuração especificada for necessária, use `ComImport' em vez disso.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConfigurationNotSupportedTitle">
        <source>Specified configuration is not supported by source-generated COM.</source>
        <target state="translated">Um COM gerado pela origem não dá suporte a uma configuração especificada.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertComInterfaceMayProduceInvalidCode">
        <source>Converting this interface to use 'GeneratedComInterfaceAttribute' may produce invalid code and may require additional work</source>
        <target state="new">Converting this interface to use 'GeneratedComInterfaceAttribute' may produce invalid code and may require additional work</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToGeneratedComInterfaceAddUnsafe">
        <source>Convert to 'GeneratedComInterface' and allow unsafe code</source>
        <target state="new">Convert to 'GeneratedComInterface' and allow unsafe code</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToGeneratedComInterfaceDescription">
        <source>Use 'GeneratedComInterfaceAttribute' instead of 'ComImportAttribute' to generate COM marshalling code at compile time</source>
        <target state="new">Use 'GeneratedComInterfaceAttribute' instead of 'ComImportAttribute' to generate COM marshalling code at compile time</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToGeneratedComInterfaceMayRequireCustomMarshalling">
        <source>Converting this API to 'GeneratedComInterfaceAttribute' will require additional code to provide custom marshallers for some parameters.</source>
        <target state="new">Converting this API to 'GeneratedComInterfaceAttribute' will require additional code to provide custom marshallers for some parameters.</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToGeneratedComInterfaceMessage">
        <source>Mark the type '{0}' with 'GeneratedComInterfaceAttribute' instead of 'ComImportAttribute' to generate COM marshalling code at compile time</source>
        <target state="new">Mark the type '{0}' with 'GeneratedComInterfaceAttribute' instead of 'ComImportAttribute' to generate COM marshalling code at compile time</target>
        <note />
      </trans-unit>
      <trans-unit id="ConvertToGeneratedComInterfaceTitle">
        <source>Convert to 'GeneratedComInterface'</source>
        <target state="new">Convert to 'GeneratedComInterface'</target>
        <note />
      </trans-unit>
      <trans-unit id="GeneratedComInterfaceStringMarshallingMustMatchBase">
        <source>The configuration of 'StringMarshalling' and 'StringMarshallingCustomType' must match the base COM interface.</source>
        <target state="translated">A configuração de 'StringMarshalling' e 'StringMarshallingCustomType' deve corresponder à interface COM base.</target>
        <note />
      </trans-unit>
      <trans-unit id="InterfaceTypeNotSupportedMessage">
        <source>Using 'GeneratedComInterfaceAttribute' and 'InterfaceTypeAttribute' is not supported with 'ComInterfaceType' value '{0}'.</source>
        <target state="translated">Não há suporte para o uso de 'GeneratedComInterfaceAttribute' e 'InterfaceTypeAttribute' com o valor 'ComInterfaceType' '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="InterfaceTypeNotSupportedTitle">
        <source>'GeneratedComInterfaceType' does not support the 'ComInterfaceType' value supplied to 'InterfaceTypeAttribute' on the same type.</source>
        <target state="translated">'GeneratedComInterfaceType' não dá suporte ao valor 'ComInterfaceType' fornecido a 'InterfaceTypeAttribute' no mesmo tipo.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidAttributedMethodContainingTypeMissingModifiersMessage">
        <source>Method '{0}' is contained in a type '{1}' that is not marked 'partial'. COM source generation will ignore method '{0}'.</source>
        <target state="translated">O método '{0}' está contido em um tipo '{1}' que não está marcado como 'partial'. A geração de origem do COM ignorará o método '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidAttributedMethodContainingTypeMissingUnmanagedObjectUnwrapperAttributeMessage">
        <source>Containing type of method with VirtualMethodIndexAttribute does not have a UnmanagedObjectUnwrapperAttribute. </source>
        <target state="translated">O tipo de método que contém VirtualMethodIndexAttribute não tem um UnmanagedObjectUnwrapperAttribute. </target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidAttributedMethodDescription">
        <source>Methods on interfaces marked with 'GeneratedComInterfaceAttribute' should be non-generic. COM source generation will ignore methods that are generic.</source>
        <target state="translated">Métodos em interfaces marcados com 'GeneratedComInterfaceAttribute' não devem ser genéricos. A geração de origem do COM ignorará os métodos genéricos.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidAttributedMethodSignatureMessage">
        <source>Method '{0}' should be non-generic when on interfaces marked with the 'GeneratedComInterfaceAttribute'. COM source generation will ignore method '{0}'.</source>
        <target state="translated">O método '{0}' não deve ser genérico em interfaces marcadas com 'GeneratedComInterfaceAttribute'. A geração de origem do COM ignorará o método '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidExceptionMarshallingConfigurationDescription">
        <source>The configuration of 'ExceptionMarshalling' and 'ExceptionMarshallingCustomType' is invalid.</source>
        <target state="translated">A configuração de 'ExceptionMarshalling' e 'ExceptionMarshallingCustomType' é inválida.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidExceptionMarshallingConfigurationMessage">
        <source>The configuration of 'ExceptionMarshalling' and 'ExceptionMarshallingCustomType' on method '{0}' is invalid. {1}</source>
        <target state="translated">A configuração de 'ExceptionMarshalling' e 'ExceptionMarshallingCustomType' no método '{0}' é inválida. {1}</target>
        <note>{1} is a message containing additional details about what is not valid</note>
      </trans-unit>
      <trans-unit id="InvalidExceptionMarshallingConfigurationMissingCustomType">
        <source>'ExceptionMarshallingCustomType' must be specified when 'ExceptionMarshalling' is set to 'ExceptionMarshalling.Custom'.</source>
        <target state="translated">'ExceptionMarshallingCustomType' deve ser especificado quando 'ExceptionMarshalling' está definido como 'ExceptionMarshalling.Custom'.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidExceptionMarshallingConfigurationNotCustom">
        <source>'ExceptionMarshalling' should be set to 'ExceptionMarshalling.Custom' when 'ExceptionMarshallingCustomType' is specified.</source>
        <target state="translated">'ExceptionMarshalling' deve ser definido como 'ExceptionMarshalling.Custom' quando 'ExceptionMarshallingCustomType' é especificado.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidExceptionMarshallingValue">
        <source>The provided value is not a known flag of the 'ExceptionMarshalling' enum.</source>
        <target state="translated">O valor fornecido não é um sinalizador conhecido da enumeração 'ExceptionMarshalling'.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidGeneratedComClassAttributeUsageDescription">
        <source>Classes with 'GeneratedComClassAttribute' must implement one or more interfaces with 'GeneratedComInterfaceAttribute', be marked partial, and be non-generic.</source>
        <target state="new">Classes with 'GeneratedComClassAttribute' must implement one or more interfaces with 'GeneratedComInterfaceAttribute', be marked partial, and be non-generic.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidGeneratedComClassAttributeUsageMissingPartialModifier">
        <source>Class '{0}' with 'GeneratedComClassAttribute' or one of its containing types is not marked 'partial'.</source>
        <target state="new">Class '{0}' with 'GeneratedComClassAttribute' or one of its containing types is not marked 'partial'.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidGeneratedComClassAttributeUsageTitle">
        <source>Invalid 'GeneratedComClassAttribute' usage</source>
        <target state="new">Invalid 'GeneratedComClassAttribute' usage</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidGeneratedComInterfaceAttributeUsageDescription">
        <source>Interfaces attributed with 'GeneratedComInterfaceAttribute' must have 'public' or 'internal' accessibility and be partial, non-generic, and must specify a GUID with 'System.Runtime.InteropServices.GuidAttribute'.</source>
        <target state="needs-review-translation">As interfaces atribuídas com "GeneratedComInterfaceAttribute" devem ser parciais, não-genéricas e especificar um GUID com "System.Runtime.InteropServices.GuidAttribute".</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidGeneratedComInterfaceAttributeUsageInterfaceIsGeneric">
        <source>Interface '{0}' is attributed with 'GeneratedComInterfaceAttribute' but is generic.</source>
        <target state="translated">A interface "{0}" é atribuída com "GeneratedComInterfaceAttribute", mas é genérica.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidGeneratedComInterfaceAttributeUsageInterfaceNotAccessible">
        <source>Interface '{0}' is attributed with 'GeneratedComInterfaceAttribute' but is not accessible by generated code. The interface and all containing types must have accessibility 'internal' or 'public' for generated code to access it. {1}</source>
        <target state="new">Interface '{0}' is attributed with 'GeneratedComInterfaceAttribute' but is not accessible by generated code. The interface and all containing types must have accessibility 'internal' or 'public' for generated code to access it. {1}</target>
        <note>{1} is details about which type/containing type is not accessible</note>
      </trans-unit>
      <trans-unit id="InvalidGeneratedComInterfaceAttributeUsageMissingGuidAttribute">
        <source>Interface '{0}' is attributed with 'GeneratedComInterfaceAttribute' but is missing 'System.Runtime.InteropServices.GuidAttribute'.</source>
        <target state="translated">A interface "{0}" é atribuída com "GeneratedComInterfaceAttribute", mas "System.Runtime.InteropServices.GuidAttribute" está ausente.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidGeneratedComInterfaceAttributeUsageTitle">
        <source>Invalid 'GeneratedComInterfaceAttribute' usage.</source>
        <target state="translated">Uso de "GeneratedComInterfaceAttribute" inválido.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidGeneratedComInterfaceUsageMissingPartialModifier">
        <source>The interface '{0}' or one of its containing types is missing the 'partial' keyword. Code will not be generated for '{0}'.</source>
        <target state="new">The interface '{0}' or one of its containing types is missing the 'partial' keyword. Code will not be generated for '{0}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidStringMarshallingConfigurationDescription">
        <source>The configuration of 'StringMarshalling' and 'StringMarshallingCustomType' is invalid.</source>
        <target state="translated">A configuração de 'StringMarshalling' e 'StringMarshallingCustomType' é inválida.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidStringMarshallingConfigurationMissingCustomType">
        <source>'StringMarshallingCustomType' must be specified when 'StringMarshalling' is set to 'StringMarshalling.Custom'.</source>
        <target state="translated">'StringMarshallingCustomType' deve ser especificado quando 'StringMarshalling' está definido como 'StringMarshalling.Custom'.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidStringMarshallingConfigurationNotCustom">
        <source>'StringMarshalling' should be set to 'StringMarshalling.Custom' when 'StringMarshallingCustomType' is specified.</source>
        <target state="translated">'StringMarshalling' deve ser definido como 'StringMarshalling.Custom' quando 'StringMarshallingCustomType' for especificado.</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidStringMarshallingConfigurationOnInterfaceMessage">
        <source>The configuration of 'StringMarshalling' and 'StringMarshallingCustomType' on interface '{0}' is invalid. {1}</source>
        <target state="translated">A configuração de 'StringMarshalling' e 'StringMarshallingCustomType' na interface '{0}' é inválida. {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidStringMarshallingConfigurationOnMethodMessage">
        <source>The configuration of 'StringMarshalling' and 'StringMarshallingCustomType' on method '{0}' is invalid. {1}</source>
        <target state="translated">A configuração de 'StringMarshalling' e 'StringMarshallingCustomType' no método '{0}' é inválida. {1}</target>
        <note>{1} is a message containing additional details about what is not valid</note>
      </trans-unit>
      <trans-unit id="InvalidVirtualMethodIndexAttributeUsage">
        <source>Invalid 'VirtualMethodIndexAttribute' usage</source>
        <target state="translated">Uso inválido de 'VirtualMethodIndexAttribute'</target>
        <note />
      </trans-unit>
      <trans-unit id="MethodNotDeclaredInAttributedInterfaceDescription">
        <source>All methods must be declared in the same partial definition of a 'GeneratedComInterface'-attributed interface type to ensure reliable calculation for virtual method table offsets.</source>
        <target state="translated">Todos os métodos devem ser declarados na mesma definição parcial de um tipo de interface atribuído a "GeneratedComInterface" para garantir um cálculo confiável para deslocamentos de tabela de métodos virtuais.</target>
        <note />
      </trans-unit>
      <trans-unit id="MethodNotDeclaredInAttributedInterfaceMessage">
        <source>The method '{0}' is declared on a different partial definition of the interface '{1}' than the definition that has the 'GeneratedComInterface' attribute</source>
        <target state="translated">O método "{0}" é declarado em uma definição parcial diferente da interface "{1}" que a definição que tem o atributo "GeneratedComInterface"</target>
        <note />
      </trans-unit>
      <trans-unit id="MethodNotDeclaredInAttributedInterfaceTitle">
        <source>Method is declared in different partial declaration than the 'GeneratedComInterface' attribute.</source>
        <target state="translated">O método é declarado em uma declaração parcial diferente do atributo "GeneratedComInterface".</target>
        <note />
      </trans-unit>
      <trans-unit id="MultipleComInterfaceBaseTypesDescription">
        <source>A 'GeneratedComInterfaceAttribute'-attributed interface can only derive from at most one other 'GeneratedComInterfaceAttribute'-attributed interface.</source>
        <target state="translated">Uma interface atribuída a 'GeneratedComInterfaceAttribute' só pode derivar de no máximo uma outra interface atribuída a 'GeneratedComInterfaceAttribute'.</target>
        <note />
      </trans-unit>
      <trans-unit id="MultipleComInterfaceBaseTypesMessage">
        <source>Interface '{0}' is derived from two or more interfaces attributed with 'GeneratedComInterfaceAttribute'.</source>
        <target state="translated">A interface '{0}' é derivada de duas ou mais interfaces atribuídas com 'GeneratedComInterfaceAttribute'.</target>
        <note />
      </trans-unit>
      <trans-unit id="MultipleComInterfaceBaseTypesTitle">
        <source>Specified interface derives from two or more 'GeneratedComInterfaceAttribute'-attributed interfaces.</source>
        <target state="translated">A interface especificada deriva de duas ou mais interfaces atribuídas a 'GeneratedComInterfaceAttribute'.</target>
        <note />
      </trans-unit>
      <trans-unit id="RequiresAllowUnsafeBlocksDescription">
        <source>'GeneratedComInterfaceAttribute' and 'GeneratedComClassAttribute' require unsafe code. Project must be updated with '&lt;AllowUnsafeBlocks&gt;true&lt;/AllowUnsafeBlocks&gt;'.</source>
        <target state="new">'GeneratedComInterfaceAttribute' and 'GeneratedComClassAttribute' require unsafe code. Project must be updated with '&lt;AllowUnsafeBlocks&gt;true&lt;/AllowUnsafeBlocks&gt;'.</target>
        <note />
      </trans-unit>
      <trans-unit id="RequiresAllowUnsafeBlocksMessage">
        <source>'GeneratedComInterfaceAttribute' and 'GeneratedComClassAttribute' require unsafe code. Project must be updated with '&lt;AllowUnsafeBlocks&gt;true&lt;/AllowUnsafeBlocks&gt;'.</source>
        <target state="new">'GeneratedComInterfaceAttribute' and 'GeneratedComClassAttribute' require unsafe code. Project must be updated with '&lt;AllowUnsafeBlocks&gt;true&lt;/AllowUnsafeBlocks&gt;'.</target>
        <note />
      </trans-unit>
      <trans-unit id="RequiresAllowUnsafeBlocksTitle">
        <source>'GeneratedComInterfaceAttribute' and 'GeneratedComClassAttribute' require unsafe code.</source>
        <target state="new">'GeneratedComInterfaceAttribute' and 'GeneratedComClassAttribute' require unsafe code.</target>
        <note />
      </trans-unit>
      <trans-unit id="RuntimeComApisDoNotSupportSourceGeneratedComDescription">
        <source>COM Interop APIs on 'System.Runtime.InteropServices.Marshal' do not support source-generated COM and will fail at runtime</source>
        <target state="new">COM Interop APIs on 'System.Runtime.InteropServices.Marshal' do not support source-generated COM and will fail at runtime</target>
        <note />
      </trans-unit>
      <trans-unit id="RuntimeComApisDoNotSupportSourceGeneratedComMessage">
        <source>The method '{0}' only supports runtime-based COM interop and will not work with type '{1}'</source>
        <target state="new">The method '{0}' only supports runtime-based COM interop and will not work with type '{1}'</target>
        <note />
      </trans-unit>
      <trans-unit id="RuntimeComApisDoNotSupportSourceGeneratedComTitle">
        <source>COM Interop APIs on 'System.Runtime.InteropServices.Marshal' do not support source-generated COM</source>
        <target state="new">COM Interop APIs on 'System.Runtime.InteropServices.Marshal' do not support source-generated COM</target>
        <note />
      </trans-unit>
      <trans-unit id="StringMarshallingCustomTypeNotAccessibleByGeneratedCode">
        <source>The type '{0}' specified as 'GeneratedComInterfaceAttribute.StringMarshallingCustomType' is not accessible by generated code. The type must have at least 'internal' accessibility. {1}</source>
        <target state="new">The type '{0}' specified as 'GeneratedComInterfaceAttribute.StringMarshallingCustomType' is not accessible by generated code. The type must have at least 'internal' accessibility. {1}</target>
        <note>{1} is details about which type/containing type is not accessible</note>
      </trans-unit>
      <trans-unit id="TypeNotSupportedDescription">
        <source>For types that are not supported by source-generated COM, the resulting function pointer will rely on the underlying runtime to marshal the specified type.</source>
        <target state="translated">Para tipos sem suporte para um COM gerado pela origem, o ponteiro de função resultante dependerá do tempo de execução subjacente para realizar marshaling no tipo especificado.</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeNotSupportedMessageParameter">
        <source>The type '{0}' is not supported by source-generated COM. The generated source will not handle marshalling of parameter '{1}'.</source>
        <target state="translated">Um COM gerado pela origem não dá suporte ao tipo '{0}'. A origem gerada não realizará marshalling do parâmetro '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeNotSupportedMessageParameterWithDetails">
        <source>{0} The generated source will not handle marshalling of parameter '{1}'.</source>
        <target state="translated">{0} A origem gerada não manipulará o marshalling do parâmetro '{1}'.</target>
        <note>{0} is a message containing additional details about what is not supported
{1} is the name of the parameter</note>
      </trans-unit>
      <trans-unit id="TypeNotSupportedMessageReturn">
        <source>The type '{0}' is not supported by source-generated COM. The generated source will not handle marshalling of the return value of method '{1}'.</source>
        <target state="translated">Um COM gerado pela origem não dá suporte ao tipo '{0}'. A origem gerada não realizará marshaling do valor de retorno do método '{1}'.</target>
        <note />
      </trans-unit>
      <trans-unit id="TypeNotSupportedMessageReturnWithDetails">
        <source>{0} The generated source will not handle marshalling of the return value of method '{1}'.</source>
        <target state="translated">{0} A origem gerada não manipulará o marshalling do valor retornado do método '{1}'.</target>
        <note>{0} is a message containing additional details about what is not supported
{1} is the name of the method</note>
      </trans-unit>
      <trans-unit id="TypeNotSupportedTitle">
        <source>Specified type is not supported by source-generated COM</source>
        <target state="translated">Um COM gerado pela origem não dá suporte ao tipo especificado.</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>