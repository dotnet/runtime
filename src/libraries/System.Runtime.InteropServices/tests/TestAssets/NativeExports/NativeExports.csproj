<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <AssemblyName>Microsoft.Interop.Tests.NativeExports</AssemblyName>
    <TargetFramework>$(NetCoreAppCurrent)</TargetFramework>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <EnableDynamicLoading>true</EnableDynamicLoading>
    <DnneAddGeneratedBinaryToProject>true</DnneAddGeneratedBinaryToProject>
    <DnneGenRollForward>Major</DnneGenRollForward>
    <!-- To integrate with DNNE's architecture calculation, we need to set the RID for this project. -->
    <RuntimeIdentifier>$(OutputRid)</RuntimeIdentifier>
    <AppHostRuntimeIdentifier>$(OutputRid)</AppHostRuntimeIdentifier>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="DNNE" Version="$(DNNEVersion)" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\SharedTypes\SharedTypes.csproj" />
  </ItemGroup>

  <Target Name="GetCrossBuildArgumentsForDNNE"
          BeforeTargets="DnneBuildNativeExports"
          Condition="'$(CrossBuild)' == 'true'">
    <Exec Command="cmake -P &quot;$(RepositoryEngineeringDir)/native/output-toolchain-info.cmake&quot;"
          EchoOff="true"
          ConsoleToMsBuild="true"
          StandardOutputImportance="Low"
          EnvironmentVariables="TARGET_BUILD_ARCH=$(TargetArchitecture)">
      <Output TaskParameter="ConsoleOutput" PropertyName="CrossTargetXml" />
    </Exec>

    <PropertyGroup>
      <NativeCompiler>$(Compiler)</NativeCompiler>
      <NativeCompiler Condition="'$(NativeCompiler)' == ''">clang</NativeCompiler>
    </PropertyGroup>

    <Exec Command="bash -c 'source &quot;$(RepositoryEngineeringDir)/common/native/init-compiler.sh&quot; &quot;$(RepositoryEngineeringDir)/common/native&quot; $(TargetArchitecture) $(NativeCompiler) &amp;&amp; echo $CC '"
          EchoOff="true"
          ConsoleToMsBuild="true"
          StandardOutputImportance="Low">
      <Output TaskParameter="ConsoleOutput" PropertyName="DnneCompilerCommand" />
    </Exec>

    <XmlPeek XmlContent="$(CrossTargetXml)" Query="toolchain-info/target-triple/text()">
      <Output TaskParameter="Result" PropertyName="TargetTriple" />
    </XmlPeek>
    <XmlPeek XmlContent="$(CrossTargetXml)" Query="toolchain-info/linker-args/text()">
      <Output TaskParameter="Result" PropertyName="DnneLinkerUserFlags" />
    </XmlPeek>
    <XmlPeek XmlContent="$(CrossTargetXml)" Query="toolchain-info/compiler-args/text()">
      <Output TaskParameter="Result" PropertyName="DnneCompilerUserFlags" />
    </XmlPeek>

    <PropertyGroup>
      <CommonToolchainArgs>--target=$(TargetTriple) --gcc-toolchain=$(ROOTFS_DIR)/usr --sysroot=$(ROOTFS_DIR)</CommonToolchainArgs>
      <DnneLinkerUserFlags>$(CommonToolchainArgs) $(DnneLinkerUserFlags.Replace(';',' '))</DnneLinkerUserFlags>
      <DnneCompilerUserFlags>$(CommonToolchainArgs) $(DnneCompilerUserFlags.Replace(';',' '))</DnneCompilerUserFlags>
      <DnneNetHostDir>$([System.IO.Path]::GetDirectoryName('$(AppHostSourcePath)'))</DnneNetHostDir>
    </PropertyGroup>
  </Target>
</Project>
