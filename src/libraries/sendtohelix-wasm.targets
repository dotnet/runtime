<Project>
  <Import Project="$(RepositoryEngineeringDir)testing\workloads-testing.targets" />

  <PropertyGroup>
    <_workItemTimeout Condition="'$(Scenario)' == 'BuildWasmApps' and '$(_workItemTimeout)' == ''">00:40:00</_workItemTimeout>
    <_workItemTimeout Condition="'$(NeedsToBuildWasmAppsOnHelix)' == 'true'">01:00:00</_workItemTimeout>

    <BrowserBuildTargetsDir>$([MSBuild]::NormalizeDirectory($(BrowserProjectRoot), 'build'))</BrowserBuildTargetsDir>
    <WasmBuildTargetsDir>$([MSBuild]::NormalizeDirectory($(WasmProjectRoot), 'build'))</WasmBuildTargetsDir>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Scenario)' == 'BuildWasmApps'">
    <XUnitExtraArgsValue>$(XUnitExtraArgsValue) -nocolor</XUnitExtraArgsValue>
    <XUnitExtraArgsValue Condition="'$(WindowsShell)' == 'true'">$(XUnitExtraArgsValue) -parallel none</XUnitExtraArgsValue>

    <XUnitExtraArgsValue Condition="'$(WindowsShell)' == 'true'">$(XUnitExtraArgsValue) %HELIX_XUNIT_ARGS%</XUnitExtraArgsValue>
    <XUnitExtraArgsValue Condition="'$(WindowsShell)' != 'true'">$(XUnitExtraArgsValue) %24HELIX_XUNIT_ARGS</XUnitExtraArgsValue>
  </PropertyGroup>

  <ItemGroup Condition="'$(Scenario)' == 'BuildWasmApps'">
    <HelixPreCommand Condition="'$(WindowsShell)' == 'true'" Include="set &quot;XUnitTraitArg=$(_XUnitTraitArg)&quot;" />
    <HelixPreCommand Condition="'$(WindowsShell)' != 'true'" Include="export &quot;XUnitTraitArg=$(_XUnitTraitArg)&quot;" />

    <HelixPreCommand Condition="'$(WindowsShell)' == 'true'" Include="set &quot;XUnitExtraArgs=$(XUnitExtraArgsValue)&quot;" />
    <HelixPreCommand Condition="'$(WindowsShell)' != 'true'" Include="export &quot;XUnitExtraArgs=$(XUnitExtraArgsValue)&quot;" />

    <HelixPreCommand Condition="'$(WindowsShell)' == 'true'" Include="set &quot;BUILT_NUGETS_PATH=%HELIX_CORRELATION_PAYLOAD%/built-nugets&quot;" />
    <HelixPreCommand Condition="'$(WindowsShell)' != 'true'" Include="export &quot;BUILT_NUGETS_PATH=$HELIX_CORRELATION_PAYLOAD/built-nugets&quot;" />

    <HelixPreCommand Condition="'$(WindowsShell)' == 'true'" Include="set &quot;SDK_DIR_NAME=$(SdkForWorkloadTestingDirName)&quot;" />
    <HelixPreCommand Condition="'$(WindowsShell)' != 'true'" Include="export &quot;SDK_DIR_NAME=$(SdkForWorkloadTestingDirName)&quot;" />

    <HelixPreCommand Condition="'$(WindowsShell)' == 'true'" Include="set &quot;DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1&quot;" />
    <HelixPreCommand Condition="'$(WindowsShell)' != 'true'" Include="export &quot;DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1&quot;" />

    <HelixPreCommand Condition="'$(WindowsShell)' == 'true'" Include="set &quot;DOTNET_SKIP_WORKLOAD_INTEGRITY_CHECK=1&quot;" />
    <HelixPreCommand Condition="'$(WindowsShell)' != 'true'" Include="export &quot;DOTNET_SKIP_WORKLOAD_INTEGRITY_CHECK=1&quot;" />

    <HelixPreCommand Condition="'$(WindowsShell)' == 'true'" Include="set BASE_DIR=%HELIX_CORRELATION_PAYLOAD%" />
    <HelixPreCommand Condition="'$(WindowsShell)' != 'true'" Include="export BASE_DIR=%24{HELIX_CORRELATION_PAYLOAD}" />

    <HelixPreCommand Condition="'$(WindowsShell)' == 'true'" Include="set BROWSER_PATH_FOR_TESTS=%HELIX_CORRELATION_PAYLOAD%\$(ChromeDirName)\$(ChromeBinaryName)" />
    <HelixPreCommand Condition="'$(WindowsShell)' != 'true'" Include="export BROWSER_PATH_FOR_TESTS=$HELIX_CORRELATION_PAYLOAD/$(ChromeDirName)/$(ChromeBinaryName)" />

    <!--<HelixPreCommand Condition="'$(WindowsShell)' != 'true'" Include="export IS_RUNNING_ON_CI=true" />-->
    <!--<HelixPreCommand Condition="'$(WindowsShell)' == 'true'" Include="set IS_RUNNING_ON_CI=true" />-->

    <HelixPreCommand Condition="'$(WindowsShell)' == 'true'" Include="set SHOW_BUILD_OUTPUT=1" />
    <HelixPreCommand Condition="'$(WindowsShell)' != 'true'" Include="export SHOW_BUILD_OUTPUT=1" />

    <HelixPreCommand Condition="'$(WindowsShell)' != 'true'" Include="chmod +x $HELIX_WORKITEM_ROOT/.playwright/node/linux/playwright.sh" />
    <HelixPreCommand Condition="'$(WindowsShell)' != 'true'" Include="chmod +x $HELIX_WORKITEM_ROOT/.playwright/node/linux/node" />
  </ItemGroup>

  <Target Name="_AddWorkItemsForBuildWasmApps" Condition="'$(Scenario)' == 'BuildWasmApps'">
    <PropertyGroup>
      <WorkItemPrefix Condition="'$(TestUsingWorkloads)' == 'true'">Workloads-</WorkItemPrefix>
      <WorkItemPrefix Condition="'$(TestUsingWorkloads)' != 'true'">NoWorkload-</WorkItemPrefix>
      <WorkItemPrefix Condition="'$(TestUsingWebcil)' == 'false'">$(WorkItemPrefix)NoWebcil-</WorkItemPrefix>
    </PropertyGroup>

    <ItemGroup>
      <!-- for buildwasmapps, the archive path is set in src/libraries/Directory.Build.props, so use that -->
      <_WasmWorkItem Include="$(WorkItemArchiveWildCard)" Exclude="$(HelixCorrelationPayload)" />
    </ItemGroup>
    <PropertyGroup>
      <_BuildWasmAppsPayloadArchive>@(_WasmWorkItem)</_BuildWasmAppsPayloadArchive>
    </PropertyGroup>

    <ReadLinesFromFile File="$(BuildWasmAppsJobsList)" Condition="Exists($(BuildWasmAppsJobsList)) and '$(TestUsingWorkloads)' == 'true'">
      <Output TaskParameter="Lines" ItemName="BuildWasmApps_PerJobList" />
    </ReadLinesFromFile>
    <ItemGroup>
      <!--<BuildWasmApps_PerJobList Include="Wasm.Build.Tests.WasmTemplateTests" />-->
      <!--<BuildWasmApps_PerJobList Include="Wasm.Build.Templates.Tests.InterpPgoTests" />-->
      <!--<BuildWasmApps_PerJobList Include="Wasm.Build.Tests.Blazor.SimpleRunTests" />-->
    </ItemGroup>

    <!-- for testing with workloads, we use separate items -->
    <ItemGroup>
      <HelixWorkItem Include="@(BuildWasmApps_PerJobList->'$(WorkItemPrefix)%(Identity)')" Condition="'$(TestUsingWorkloads)' == 'true'">
        <PayloadArchive>$(_BuildWasmAppsPayloadArchive)</PayloadArchive>
        <PreCommands Condition="'$(OS)' == 'Windows_NT'">set &quot;HELIX_XUNIT_ARGS=-class %(Identity)&quot;</PreCommands>
        <PreCommands Condition="'$(OS)' != 'Windows_NT'">export &quot;HELIX_XUNIT_ARGS=-class %(Identity)&quot;</PreCommands>
        <Command>$(HelixCommand)</Command>
        <Timeout>$(_workItemTimeout)</Timeout>
      </HelixWorkItem>

      <!--<HelixWorkItem Include="$(WorkItemPrefix)Wasm.Build.Tests" Condition="'$(TestUsingWorkloads)' != 'true'">-->
        <!--<PayloadArchive>$(_BuildWasmAppsPayloadArchive)</PayloadArchive>-->
        <!--<Command>$(HelixCommand)</Command>-->
        <!--<Timeout>$(_workItemTimeout)</Timeout>-->
      <!--</HelixWorkItem>-->
    </ItemGroup>
  </Target>
</Project>
