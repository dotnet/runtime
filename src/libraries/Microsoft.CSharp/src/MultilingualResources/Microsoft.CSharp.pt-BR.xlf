<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="pt-BR" original="MICROSOFT.CSHARP/RESOURCES/STRINGS.RESX" tool-id="MultilingualAppToolkit" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="MultilingualAppToolkit" tool-name="Multilingual App Toolkit" tool-version="4.0.1387.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="MICROSOFT.CSHARP/RESOURCES/STRINGS.RESX" datatype="resx">
        <trans-unit id="InternalCompilerError" translate="yes" xml:space="preserve">
          <source>An unexpected exception occurred while binding a dynamic operation</source>
          <target state="translated" state-qualifier="tm-suggestion">Ocorreu uma exceção inesperada ao associar uma operação dinâmica</target>
        </trans-unit>
        <trans-unit id="BindRequireArguments" translate="yes" xml:space="preserve">
          <source>Cannot bind call with no calling object</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível associar chamada sem objeto de chamada</target>
        </trans-unit>
        <trans-unit id="BindCallFailedOverloadResolution" translate="yes" xml:space="preserve">
          <source>Overload resolution failed</source>
          <target state="translated" state-qualifier="tm-suggestion">Falha na resolução da sobrecarga</target>
        </trans-unit>
        <trans-unit id="BindBinaryOperatorRequireTwoArguments" translate="yes" xml:space="preserve">
          <source>Binary operators must be invoked with two arguments</source>
          <target state="translated" state-qualifier="tm-suggestion">Os operadores binários devem ser chamados com dois argumentos</target>
        </trans-unit>
        <trans-unit id="BindUnaryOperatorRequireOneArgument" translate="yes" xml:space="preserve">
          <source>Unary operators must be invoked with one argument</source>
          <target state="translated" state-qualifier="tm-suggestion">Os operadores unários devem ser chamados com um argumento</target>
        </trans-unit>
        <trans-unit id="BindPropertyFailedMethodGroup" translate="yes" xml:space="preserve">
          <source>The name '{0}' is bound to a method and cannot be used like a property</source>
          <target state="translated" state-qualifier="tm-suggestion">O nome '{0}' é associado a um método e não pode ser usado como uma propriedade</target>
        </trans-unit>
        <trans-unit id="BindPropertyFailedEvent" translate="yes" xml:space="preserve">
          <source>The event '{0}' can only appear on the left hand side of +</source>
          <target state="translated" state-qualifier="mt-suggestion">O evento '{0}' somente pode aparecer no lado esquerdo de +</target>
        </trans-unit>
        <trans-unit id="BindInvokeFailedNonDelegate" translate="yes" xml:space="preserve">
          <source>Cannot invoke a non-delegate type</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível chamar um tipo não delegado</target>
        </trans-unit>
        <trans-unit id="BindBinaryAssignmentRequireTwoArguments" translate="yes" xml:space="preserve">
          <source>Binary operators cannot be invoked with one argument</source>
          <target state="translated" state-qualifier="tm-suggestion">Os operadores binários não podem ser chamados com um argumento</target>
        </trans-unit>
        <trans-unit id="BindBinaryAssignmentFailedNullReference" translate="yes" xml:space="preserve">
          <source>Cannot perform member assignment on a null reference</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível executar atribuição de membro em uma referência nula</target>
        </trans-unit>
        <trans-unit id="NullReferenceOnMemberException" translate="yes" xml:space="preserve">
          <source>Cannot perform runtime binding on a null reference</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível fazer associação em tempo de execução em uma referência nula</target>
        </trans-unit>
        <trans-unit id="BindCallToConditionalMethod" translate="yes" xml:space="preserve">
          <source>Cannot dynamically invoke method '{0}' because it has a Conditional attribute</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível chamar o método '{0}' dinamicamente porque ele tem um atributo Conditional</target>
        </trans-unit>
        <trans-unit id="BindToVoidMethodButExpectResult" translate="yes" xml:space="preserve">
          <source>Cannot implicitly convert type 'void' to 'object'</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível converter implicitamente o tipo 'void' em 'object'</target>
        </trans-unit>
        <trans-unit id="BadBinaryOps" translate="yes" xml:space="preserve">
          <source>Operator '{0}' cannot be applied to operands of type '{1}' and '{2}'</source>
          <target state="translated" state-qualifier="tm-suggestion">O operador '{0}' não pode ser aplicado a operandos dos tipos '{1}' e '{2}'</target>
        </trans-unit>
        <trans-unit id="BadIndexLHS" translate="yes" xml:space="preserve">
          <source>Cannot apply indexing with [] to an expression of type '{0}'</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível aplicar a indexação com [] a uma expressão do tipo '{0}'</target>
        </trans-unit>
        <trans-unit id="BadIndexCount" translate="yes" xml:space="preserve">
          <source>Wrong number of indices inside []; expected '{0}'</source>
          <target state="translated" state-qualifier="tm-suggestion">Número incorreto de índices dentro de []; esperava-se '{0}'</target>
        </trans-unit>
        <trans-unit id="BadUnaryOp" translate="yes" xml:space="preserve">
          <source>Operator '{0}' cannot be applied to operand of type '{1}'</source>
          <target state="translated" state-qualifier="tm-suggestion">O operador '{0}' não pode ser aplicado ao operando do tipo '{1}'</target>
        </trans-unit>
        <trans-unit id="NoImplicitConv" translate="yes" xml:space="preserve">
          <source>Cannot implicitly convert type '{0}' to '{1}'</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível converter implicitamente tipo '{0}' em '{1}'</target>
        </trans-unit>
        <trans-unit id="NoExplicitConv" translate="yes" xml:space="preserve">
          <source>Cannot convert type '{0}' to '{1}'</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível converter tipo '{0}' em '{1}'</target>
        </trans-unit>
        <trans-unit id="ConstOutOfRange" translate="yes" xml:space="preserve">
          <source>Constant value '{0}' cannot be converted to a '{1}'</source>
          <target state="translated" state-qualifier="tm-suggestion">O valor de constante '{0}' não pode ser convertido em '{1}'</target>
        </trans-unit>
        <trans-unit id="AmbigBinaryOps" translate="yes" xml:space="preserve">
          <source>Operator '{0}' is ambiguous on operands of type '{1}' and '{2}'</source>
          <target state="translated" state-qualifier="tm-suggestion">O operador '{0}' é ambíguo em operandos dos tipos '{1}' e '{2}'</target>
        </trans-unit>
        <trans-unit id="AmbigUnaryOp" translate="yes" xml:space="preserve">
          <source>Operator '{0}' is ambiguous on an operand of type '{1}'</source>
          <target state="translated" state-qualifier="tm-suggestion">O operador '{0}' é ambíguo em um operando do tipo '{1}'</target>
        </trans-unit>
        <trans-unit id="ValueCantBeNull" translate="yes" xml:space="preserve">
          <source>Cannot convert null to '{0}' because it is a non-nullable value type</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível converter o valor nulo em '{0}' porque ele não é um tipo de valor não nulo</target>
        </trans-unit>
        <trans-unit id="WrongNestedThis" translate="yes" xml:space="preserve">
          <source>Cannot access a non-static member of outer type '{0}' via nested type '{1}'</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível acessar um membro não estático do tipo externo '{0}' através do tipo aninhado '{1}'</target>
        </trans-unit>
        <trans-unit id="NoSuchMember" translate="yes" xml:space="preserve">
          <source>'{0}' does not contain a definition for '{1}'</source>
          <target state="translated" state-qualifier="tm-suggestion">"{0}" não contém uma definição para "{1}"</target>
        </trans-unit>
        <trans-unit id="ObjectRequired" translate="yes" xml:space="preserve">
          <source>An object reference is required for the non-static field, method, or property '{0}'</source>
          <target state="translated" state-qualifier="tm-suggestion">Uma referência de objeto é necessária para o campo, o método ou a propriedade '{0}' não estática</target>
        </trans-unit>
        <trans-unit id="AmbigCall" translate="yes" xml:space="preserve">
          <source>The call is ambiguous between the following methods or properties: '{0}' and '{1}'</source>
          <target state="translated" state-qualifier="tm-suggestion">A chamada é ambígua entre os seguintes métodos ou propriedades: '{0}' e '{1}'</target>
        </trans-unit>
        <trans-unit id="BadAccess" translate="yes" xml:space="preserve">
          <source>'{0}' is inaccessible due to its protection level</source>
          <target state="translated" state-qualifier="tm-suggestion">"{0}" é inacessível devido ao seu nível de proteção</target>
        </trans-unit>
        <trans-unit id="MethDelegateMismatch" translate="yes" xml:space="preserve">
          <source>No overload for '{0}' matches delegate '{1}'</source>
          <target state="translated" state-qualifier="tm-suggestion">Nenhuma sobrecarga de '{0}' corresponde ao representante '{1}'</target>
        </trans-unit>
        <trans-unit id="AssgLvalueExpected" translate="yes" xml:space="preserve">
          <source>The left-hand side of an assignment must be a variable, property or indexer</source>
          <target state="translated" state-qualifier="tm-suggestion">O lado esquerdo de uma atribuição deve ser uma variável, uma propriedade ou um indexador</target>
        </trans-unit>
        <trans-unit id="NoConstructors" translate="yes" xml:space="preserve">
          <source>The type '{0}' has no constructors defined</source>
          <target state="translated" state-qualifier="tm-suggestion">O tipo '{0}' não tem construtores definidos</target>
        </trans-unit>
        <trans-unit id="PropertyLacksGet" translate="yes" xml:space="preserve">
          <source>The property or indexer '{0}' cannot be used in this context because it lacks the get accessor</source>
          <target state="translated" state-qualifier="tm-suggestion">A propriedade ou o indexador '{0}' não pode ser usado neste contexto porque não possui o acessador get</target>
        </trans-unit>
        <trans-unit id="ObjectProhibited" translate="yes" xml:space="preserve">
          <source>Member '{0}' cannot be accessed with an instance reference; qualify it with a type name instead</source>
          <target state="translated" state-qualifier="tm-suggestion">O membro '{0}' não pode ser acessado com uma referência de instância; qualifique-o com um nome de tipo</target>
        </trans-unit>
        <trans-unit id="AssgReadonly" translate="yes" xml:space="preserve">
          <source>A readonly field cannot be assigned to (except in a constructor or a variable initializer)</source>
          <target state="translated" state-qualifier="tm-suggestion">Um campo somente leitura não pode ser atribuído (exceto em um construtor ou inicializador de variável)</target>
        </trans-unit>
        <trans-unit id="RefReadonly" translate="yes" xml:space="preserve">
          <source>A readonly field cannot be passed ref or out (except in a constructor)</source>
          <target state="translated" state-qualifier="tm-suggestion">Um campo somente leitura não pode ser passado como ref ou out (exceto em um construtor)</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyStatic" translate="yes" xml:space="preserve">
          <source>A static readonly field cannot be assigned to (except in a static constructor or a variable initializer)</source>
          <target state="translated" state-qualifier="tm-suggestion">Um campo somente leitura estático não pode ser atribuído (exceto em um construtor estático ou inicializador de variável)</target>
        </trans-unit>
        <trans-unit id="RefReadonlyStatic" translate="yes" xml:space="preserve">
          <source>A static readonly field cannot be passed ref or out (except in a static constructor)</source>
          <target state="translated" state-qualifier="tm-suggestion">Um campo somente leitura estático não pode ser passado como ref ou out (exceto em um construtor estático)</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyProp" translate="yes" xml:space="preserve">
          <source>Property or indexer '{0}' cannot be assigned to -- it is read only</source>
          <target state="translated" state-qualifier="tm-suggestion">A propriedade ou o indexador '{0}' não pode ser atribuído -- ele(a) é somente leitura</target>
        </trans-unit>
        <trans-unit id="RefProperty" translate="yes" xml:space="preserve">
          <source>A property or indexer may not be passed as an out or ref parameter</source>
          <target state="translated" state-qualifier="tm-suggestion">Talvez uma propriedade ou um indexador não possa ser passado como um parâmetro out ou ref</target>
        </trans-unit>
        <trans-unit id="UnsafeNeeded" translate="yes" xml:space="preserve">
          <source>Dynamic calls cannot be used in conjunction with pointers</source>
          <target state="translated" state-qualifier="tm-suggestion">As chamadas dinâmicas não podem ser usadas junto com ponteiros</target>
        </trans-unit>
        <trans-unit id="BadBoolOp" translate="yes" xml:space="preserve">
          <source>In order to be applicable as a short circuit operator a user-defined logical operator ('{0}') must have the same return type as the type of its 2 parameters</source>
          <target state="translated" state-qualifier="tm-suggestion">Para ser aplicado como um operador de curto-circuito, um operador lógico definido por usuário ('{0}') deve ter o mesmo tipo de retorno que o tipo dos seus dois parâmetros</target>
        </trans-unit>
        <trans-unit id="MustHaveOpTF" translate="yes" xml:space="preserve">
          <source>The type ('{0}') must contain declarations of operator true and operator false</source>
          <target state="translated" state-qualifier="tm-suggestion">O tipo ('{0}') deve conter declarações do operador true e do operador false</target>
        </trans-unit>
        <trans-unit id="ConstOutOfRangeChecked" translate="yes" xml:space="preserve">
          <source>Constant value '{0}' cannot be converted to a '{1}' (use 'unchecked' syntax to override)</source>
          <target state="translated" state-qualifier="tm-suggestion">O valor de constante '{0}' não pode ser convertido em '{1}' (use a sintaxe 'unchecked' para substituir)</target>
        </trans-unit>
        <trans-unit id="AmbigMember" translate="yes" xml:space="preserve">
          <source>Ambiguity between '{0}' and '{1}'</source>
          <target state="translated" state-qualifier="tm-suggestion">Ambiguidade entre '{0}' e '{1}'</target>
        </trans-unit>
        <trans-unit id="NoImplicitConvCast" translate="yes" xml:space="preserve">
          <source>Cannot implicitly convert type '{0}' to '{1}'. An explicit conversion exists (are you missing a cast?)</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível converter implicitamente tipo '{0}' em '{1}'. Existe uma conversão explícita (há uma conversão ausente?)</target>
        </trans-unit>
        <trans-unit id="InaccessibleGetter" translate="yes" xml:space="preserve">
          <source>The property or indexer '{0}' cannot be used in this context because the get accessor is inaccessible</source>
          <target state="translated" state-qualifier="tm-suggestion">A propriedade ou o indexador '{0}' não pode ser usado neste contexto porque o acessador get é inacessível</target>
        </trans-unit>
        <trans-unit id="InaccessibleSetter" translate="yes" xml:space="preserve">
          <source>The property or indexer '{0}' cannot be used in this context because the set accessor is inaccessible</source>
          <target state="translated" state-qualifier="tm-suggestion">A propriedade ou o indexador '{0}' não pode ser usado neste contexto porque o acessador set é inacessível</target>
        </trans-unit>
        <trans-unit id="BadArity" translate="yes" xml:space="preserve">
          <source>Using the generic {1} '{0}' requires '{2}' type arguments</source>
          <target state="translated" state-qualifier="tm-suggestion">O uso do {1} genérico '{0}' requer argumentos de tipo '{2}'</target>
        </trans-unit>
        <trans-unit id="TypeArgsNotAllowed" translate="yes" xml:space="preserve">
          <source>The {1} '{0}' cannot be used with type arguments</source>
          <target state="translated" state-qualifier="tm-suggestion">O {1} '{0}' não pode ser usado com argumentos de tipo</target>
        </trans-unit>
        <trans-unit id="HasNoTypeVars" translate="yes" xml:space="preserve">
          <source>The non-generic {1} '{0}' cannot be used with type arguments</source>
          <target state="translated" state-qualifier="tm-suggestion">O {1} não genérico '{0}' não pode ser usado como argumentos de tipo</target>
        </trans-unit>
        <trans-unit id="NewConstraintNotSatisfied" translate="yes" xml:space="preserve">
          <source>'{2}' must be a non-abstract type with a public parameterless constructor in order to use it as parameter '{1}' in the generic type or method '{0}'</source>
          <target state="translated" state-qualifier="tm-suggestion">"{2}" deve ser um tipo non-abstract com um construtor público sem-parâmetros para que possa ser usado como parâmetro "{1}" no tipo ou método genérico "{0}"</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedRefType" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. There is no implicit reference conversion from '{3}' to '{1}'.</source>
          <target state="translated" state-qualifier="tm-suggestion">O tipo '{3}' não pode ser usado como parâmetro de tipo '{2}' no tipo ou método genérico '{0}'. Não há conversão de referência implícita de '{3}' em '{1}'.</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedNullableEnum" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. The nullable type '{3}' does not satisfy the constraint of '{1}'.</source>
          <target state="translated" state-qualifier="tm-suggestion">O tipo '{3}' não pode ser usado como parâmetro de tipo '{2}' no tipo ou método genérico '{0}'. O tipo '{3}' que permite valores nulos não satisfaz a restrição de '{1}'.</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedNullableInterface" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. The nullable type '{3}' does not satisfy the constraint of '{1}'. Nullable types can not satisfy any interface constraints.</source>
          <target state="translated" state-qualifier="tm-suggestion">O tipo '{3}' não pode ser usado como parâmetro de tipo '{2}' no tipo ou método genérico '{0}'. O tipo '{3}' que permite valores nulos não satisfaz a restrição de '{1}'. Os tipos que permitem valores nulos não satisfazem as restrições de interface.</target>
        </trans-unit>
        <trans-unit id="GenericConstraintNotSatisfiedValType" translate="yes" xml:space="preserve">
          <source>The type '{3}' cannot be used as type parameter '{2}' in the generic type or method '{0}'. There is no boxing conversion from '{3}' to '{1}'.</source>
          <target state="translated" state-qualifier="tm-suggestion">O tipo '{3}' não pode ser usado como parâmetro de tipo '{2}' no tipo ou método genérico '{0}'. Não há conversão boxing de '{3}' em '{1}'.</target>
        </trans-unit>
        <trans-unit id="CantInferMethTypeArgs" translate="yes" xml:space="preserve">
          <source>The type arguments for method '{0}' cannot be inferred from the usage. Try specifying the type arguments explicitly.</source>
          <target state="translated" state-qualifier="tm-suggestion">Os argumentos de tipo do método '{0}' não podem ser inferidos a partir do uso. Tente especificar explicitamente os argumentos de tipo.</target>
        </trans-unit>
        <trans-unit id="RefConstraintNotSatisfied" translate="yes" xml:space="preserve">
          <source>The type '{2}' must be a reference type in order to use it as parameter '{1}' in the generic type or method '{0}'</source>
          <target state="translated" state-qualifier="tm-suggestion">O tipo '{2}' deve ser um tipo de referência para que seja usado como parâmetro '{1}' no tipo ou método genérico '{0}'</target>
        </trans-unit>
        <trans-unit id="ValConstraintNotSatisfied" translate="yes" xml:space="preserve">
          <source>The type '{2}' must be a non-nullable value type in order to use it as parameter '{1}' in the generic type or method '{0}'</source>
          <target state="translated" state-qualifier="tm-suggestion">O tipo '{2}' deve ser um tipo de valor não nulo para que seja usado como parâmetro '{1}' no tipo ou método genérico '{0}'</target>
        </trans-unit>
        <trans-unit id="AmbigUDConv" translate="yes" xml:space="preserve">
          <source>Ambiguous user defined conversions '{0}' and '{1}' when converting from '{2}' to '{3}'</source>
          <target state="translated" state-qualifier="tm-suggestion">Conversões ambíguas definidas por usuário '{0}' e '{1}' ao realizar a conversão de '{2}' em '{3}'</target>
        </trans-unit>
        <trans-unit id="BindToBogus" translate="yes" xml:space="preserve">
          <source>'{0}' is not supported by the language</source>
          <target state="translated" state-qualifier="tm-suggestion">O idioma não oferece suporte a '{0}'</target>
        </trans-unit>
        <trans-unit id="CantCallSpecialMethod" translate="yes" xml:space="preserve">
          <source>'{0}': cannot explicitly call operator or accessor</source>
          <target state="translated" state-qualifier="tm-suggestion">"{0}": não é possível chamar explicitamente o operador ou acessador</target>
        </trans-unit>
        <trans-unit id="ConvertToStaticClass" translate="yes" xml:space="preserve">
          <source>Cannot convert to static type '{0}'</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível converter em tipo estático '{0}'</target>
        </trans-unit>
        <trans-unit id="IncrementLvalueExpected" translate="yes" xml:space="preserve">
          <source>The operand of an increment or decrement operator must be a variable, property or indexer</source>
          <target state="translated" state-qualifier="tm-suggestion">O operando de incremento ou decremento deve ser uma variável, uma propriedade ou um indexador</target>
        </trans-unit>
        <trans-unit id="BadArgCount" translate="yes" xml:space="preserve">
          <source>No overload for method '{0}' takes '{1}' arguments</source>
          <target state="translated" state-qualifier="tm-suggestion">Nenhuma sobrecarga do método '{0}' obtém argumentos '{1}'</target>
        </trans-unit>
        <trans-unit id="BadArgTypes" translate="yes" xml:space="preserve">
          <source>The best overloaded method match for '{0}' has some invalid arguments</source>
          <target state="translated" state-qualifier="tm-suggestion">A melhor correspondência de método sobrecarregado '{0}' tem alguns argumentos inválidos</target>
        </trans-unit>
        <trans-unit id="RefLvalueExpected" translate="yes" xml:space="preserve">
          <source>A ref or out argument must be an assignable variable</source>
          <target state="translated" state-qualifier="tm-suggestion">Um argumento ref ou out deve ser uma variável que possa ser atribuída</target>
        </trans-unit>
        <trans-unit id="BadProtectedAccess" translate="yes" xml:space="preserve">
          <source>Cannot access protected member '{0}' via a qualifier of type '{1}'; the qualifier must be of type '{2}' (or derived from it)</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível acessar membro protegido '{0}' através de um qualificador do tipo '{1}'; o qualificador deve ser do tipo '{2}' (ou derivado dele)</target>
        </trans-unit>
        <trans-unit id="BindToBogusProp2" translate="yes" xml:space="preserve">
          <source>Property, indexer, or event '{0}' is not supported by the language; try directly calling accessor methods '{1}' or '{2}'</source>
          <target state="translated" state-qualifier="tm-suggestion">O idioma não oferece suporte à propriedade, ao indexador ou ao evento '{0}'; tente chamar diretamente o método de acessador '{1}' ou '{2}'</target>
        </trans-unit>
        <trans-unit id="BindToBogusProp1" translate="yes" xml:space="preserve">
          <source>Property, indexer, or event '{0}' is not supported by the language; try directly calling accessor method '{1}'</source>
          <target state="translated" state-qualifier="tm-suggestion">O idioma não oferece suporte à propriedade, ao indexador ou ao evento '{0}'; tente chamar diretamente o método de acessador '{1}'</target>
        </trans-unit>
        <trans-unit id="BadDelArgCount" translate="yes" xml:space="preserve">
          <source>Delegate '{0}' does not take '{1}' arguments</source>
          <target state="translated" state-qualifier="tm-suggestion">O representante '{0}' não obtém argumentos '{1}'</target>
        </trans-unit>
        <trans-unit id="BadDelArgTypes" translate="yes" xml:space="preserve">
          <source>Delegate '{0}' has some invalid arguments</source>
          <target state="translated" state-qualifier="tm-suggestion">O representante '{0}' tem alguns argumentos inválidos</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyLocal" translate="yes" xml:space="preserve">
          <source>Cannot assign to '{0}' because it is read-only</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível atribuir a '{0}' porque ele é somente leitura</target>
        </trans-unit>
        <trans-unit id="RefReadonlyLocal" translate="yes" xml:space="preserve">
          <source>Cannot pass '{0}' as a ref or out argument because it is read-only</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível passar '{0}' como um argumento ref ou out porque ele é somente leitura</target>
        </trans-unit>
        <trans-unit id="ReturnNotLValue" translate="yes" xml:space="preserve">
          <source>Cannot modify the return value of '{0}' because it is not a variable</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível modificar o valor de retorno '{0}' porque ele não é uma variável</target>
        </trans-unit>
        <trans-unit id="AssgReadonly2" translate="yes" xml:space="preserve">
          <source>Members of readonly field '{0}' cannot be modified (except in a constructor or a variable initializer)</source>
          <target state="translated" state-qualifier="tm-suggestion">Os membros do campo somente leitura '{0}' não podem ser modificados (exceto em um construtor ou inicializador de variável)</target>
        </trans-unit>
        <trans-unit id="RefReadonly2" translate="yes" xml:space="preserve">
          <source>Members of readonly field '{0}' cannot be passed ref or out (except in a constructor)</source>
          <target state="translated" state-qualifier="tm-suggestion">Os membros do campo somente leitura '{0}' não podem ser passados como ref ou out (a não ser em um construtor)</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyStatic2" translate="yes" xml:space="preserve">
          <source>Fields of static readonly field '{0}' cannot be assigned to (except in a static constructor or a variable initializer)</source>
          <target state="translated" state-qualifier="tm-suggestion">Campos do campo estático somente leitura '{0}' não podem ser atribuídos (exceto em um construtor estático ou inicializador de variável)</target>
        </trans-unit>
        <trans-unit id="RefReadonlyStatic2" translate="yes" xml:space="preserve">
          <source>Fields of static readonly field '{0}' cannot be passed ref or out (except in a static constructor)</source>
          <target state="translated" state-qualifier="tm-suggestion">Os campos do campo somente leitura estático '{0}' não podem ser passados como ref ou out (exceto em um construtor estático)</target>
        </trans-unit>
        <trans-unit id="AssgReadonlyLocalCause" translate="yes" xml:space="preserve">
          <source>Cannot assign to '{0}' because it is a '{1}'</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível atribuir a '{0}' porque ele é um '{1}'</target>
        </trans-unit>
        <trans-unit id="RefReadonlyLocalCause" translate="yes" xml:space="preserve">
          <source>Cannot pass '{0}' as a ref or out argument because it is a '{1}'</source>
          <target state="translated" state-qualifier="tm-suggestion">Não é possível passar '{0}' como um argumento ref ou out porque ele é '{1}'</target>
        </trans-unit>
        <trans-unit id="BadCtorArgCount" translate="yes" xml:space="preserve">
          <source>'{0}' does not contain a constructor that takes '{1}' arguments</source>
          <target state="translated" state-qualifier="tm-suggestion">'{0}' não contém um construtor que obtém argumentos '{1}'</target>
        </trans-unit>
        <trans-unit id="NonInvocableMemberCalled" translate="yes" xml:space="preserve">
          <source>Non-invocable member '{0}' cannot be used like a method.</source>
          <target state="translated" state-qualifier="tm-suggestion">O membro não invocável '{0}' não pode ser usado como um método.</target>
        </trans-unit>
        <trans-unit id="NamedArgumentSpecificationBeforeFixedArgument" translate="yes" xml:space="preserve">
          <source>Named argument specifications must appear after all fixed arguments have been specified</source>
          <target state="translated" state-qualifier="tm-suggestion">As especificações de argumento nomeado devem aparecer depois que todos os argumentos fixos forem especificados</target>
        </trans-unit>
        <trans-unit id="BadNamedArgument" translate="yes" xml:space="preserve">
          <source>The best overload for '{0}' does not have a parameter named '{1}'</source>
          <target state="translated" state-qualifier="tm-suggestion">A melhor sobrecarga de '{0}' não tem um parâmetro chamado '{1}'</target>
        </trans-unit>
        <trans-unit id="BadNamedArgumentForDelegateInvoke" translate="yes" xml:space="preserve">
          <source>The delegate '{0}' does not have a parameter named '{1}'</source>
          <target state="translated" state-qualifier="tm-suggestion">O representante '{0}' não tem um parâmetro chamado '{1}'</target>
        </trans-unit>
        <trans-unit id="DuplicateNamedArgument" translate="yes" xml:space="preserve">
          <source>Named argument '{0}' cannot be specified multiple times</source>
          <target state="translated" state-qualifier="tm-suggestion">O argumento nomeado '{0}' não pode ser especificado várias vezes</target>
        </trans-unit>
        <trans-unit id="NamedArgumentUsedInPositional" translate="yes" xml:space="preserve">
          <source>Named argument '{0}' specifies a parameter for which a positional argument has already been given</source>
          <target state="translated" state-qualifier="tm-suggestion">O argumento nomeado '{0}' especifica um parâmetro para o qual já foi atribuído um argumento posicional</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>