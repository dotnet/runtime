<?xml version="1.0" encoding="utf-8"?>
<linker>
  <assembly fullname="Microsoft.CSharp, PublicKeyToken=b03f5f7f11d50a3a">
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2026</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.DynamicMetaObjectProviderDebugView.#cctor</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2055</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.ComInterop.VariantArray.GetStructType(System.Int32)</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2055</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType.CalculateAssociatedSystemType</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2060</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprMethodInfo.get_MethodInfo</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2070</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderExtensions.GetTypeIndexerName(System.Type)</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2070</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AddAggregateToSymbolTable(Microsoft.CSharp.RuntimeBinder.Semantics.NamespaceOrAggregateSymbol,System.Type)</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2070</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AddConversionsForOneType(System.Type)</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2072</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.ComInterop.ComTypeClassDesc.CreateInstance</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2072</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateZeroInit(Microsoft.CSharp.RuntimeBinder.Semantics.CType)</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2072</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprZeroInit.get_Object</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2075</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.ComInterop.ComBinderHelpers.ProcessArgumentsForCom(System.Dynamic.DynamicMetaObject[]@)</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2075</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.ComInterop.ExcepInfo.GetException</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2075</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.ComInterop.IDispatchComObject.GetMembers(System.Collections.Generic.IEnumerable{System.String})</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2075</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.ComInterop.TypeUtils.GetUserDefinedCoercionMethod(System.Type,System.Type,System.Boolean)</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2075</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.DynamicMetaObjectProviderDebugView.CreateDelegateAndInvoke(System.Type[],System.Runtime.CompilerServices.CallSiteBinder,System.Object[])</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2075</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GenerateField(Microsoft.CSharp.RuntimeBinder.Semantics.ExprCall)</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2075</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprMethodInfo.get_ConstructorInfo</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2075</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprMethodInfo.get_MethodInfo</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2075</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprPropertyInfo.get_PropertyInfo</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2075</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AddPredefinedMethodToSymbolTable(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,Microsoft.CSharp.RuntimeBinder.Syntax.Name)</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2075</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AddPredefinedPropertyToSymbolTable(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,Microsoft.CSharp.RuntimeBinder.Syntax.Name)</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2075</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.SymbolTable.BuildDeclarationChain(System.Type)</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2080</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AddNamesInInheritanceHierarchy(System.String,System.Collections.Generic.List{System.Type})</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2026</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.ComInterop.CurrencyArgBuilder.Marshal(System.Linq.Expressions.Expression)</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2026</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.ComInterop.ErrorArgBuilder.Marshal(System.Linq.Expressions.Expression)</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2026</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.ComInterop.VariantArray.GetStructField(System.Linq.Expressions.ParameterExpression,System.Int32)</property>
    </attribute>
    <attribute fullname="System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
      <argument>ILLink</argument>
      <argument>IL2026</argument>
      <property name="Scope">member</property>
      <property name="Target">M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GenerateConvert(Microsoft.CSharp.RuntimeBinder.Semantics.ExprCall)</property>
    </attribute>
  </assembly>
</linker>
