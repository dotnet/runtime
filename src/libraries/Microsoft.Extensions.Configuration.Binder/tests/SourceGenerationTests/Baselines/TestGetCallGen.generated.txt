// <auto-generated/>
#nullable enable

using System.Linq;

internal static class GeneratedConfigurationBinder
{
    public static T? Get<T>(this global::Microsoft.Extensions.Configuration.IConfiguration configuration)
    {
        if (configuration is null)
        {
            throw new global::System.ArgumentNullException(nameof(configuration));
        }

        if (typeof(T) == typeof(Program.MyClass))
        {
            Microsoft.Extensions.Configuration.IConfigurationSection? section = configuration as Microsoft.Extensions.Configuration.IConfigurationSection;
            if (section?.Value is null && !configuration.GetChildren().Any())
            {
                return default;
            }

            Program.MyClass obj = new Program.MyClass();
            BindCore(configuration, ref obj);
            return (T)(object)obj;
        }

        throw new global::System.NotSupportedException($"Unable to bind to type '{typeof(T)}': 'Generator parser did not detect the type as input'");
    }

    private static void BindCore(global::Microsoft.Extensions.Configuration.IConfiguration configuration, ref Program.MyClass obj)
    {
        if (obj is null)
        {
            throw new global::System.ArgumentNullException(nameof(obj));
        }

        if (configuration["MyString"] is string stringValue1)
        {
            obj.MyString = stringValue1;
        }

        if (configuration["MyInt"] is string stringValue2)
        {
            obj.MyInt = int.Parse(stringValue2);
        }

        global::Microsoft.Extensions.Configuration.IConfigurationSection section3 = configuration.GetSection("MyList");
        if (HasChildren(section3))
        {
            System.Collections.Generic.List<int> temp4 = obj.MyList;
            temp4 ??= new System.Collections.Generic.List<int>();
            BindCore(section3, ref temp4);
            obj.MyList = temp4;
        }

        global::Microsoft.Extensions.Configuration.IConfigurationSection section5 = configuration.GetSection("MyDictionary");
        if (HasChildren(section5))
        {
            System.Collections.Generic.Dictionary<string, string> temp6 = obj.MyDictionary;
            temp6 ??= new System.Collections.Generic.Dictionary<string, string>();
            BindCore(section5, ref temp6);
            obj.MyDictionary = temp6;
        }

    }

    private static void BindCore(global::Microsoft.Extensions.Configuration.IConfiguration configuration, ref System.Collections.Generic.List<int> obj)
    {
        if (obj is null)
        {
            throw new global::System.ArgumentNullException(nameof(obj));
        }

        int element;
        foreach (Microsoft.Extensions.Configuration.IConfigurationSection section in configuration.GetChildren())
        {
            if (section.Value is string stringValue7)
            {
                element = int.Parse(stringValue7);
                obj.Add(element);
            }
        }
    }

    private static void BindCore(global::Microsoft.Extensions.Configuration.IConfiguration configuration, ref System.Collections.Generic.Dictionary<string, string> obj)
    {
        if (obj is null)
        {
            throw new global::System.ArgumentNullException(nameof(obj));
        }

        string key;
        foreach (Microsoft.Extensions.Configuration.IConfigurationSection section in configuration.GetChildren())
        {
            if (section.Key is string stringValue8)
            {
                key = stringValue8;
                string element;
                if (section.Value is string stringValue9)
                {
                    element = stringValue9;
                    obj[key] = element;
                }
            }
        }
    }

    public static bool HasChildren(global::Microsoft.Extensions.Configuration.IConfiguration configuration)
    {
        foreach (global::Microsoft.Extensions.Configuration.IConfigurationSection section in configuration.GetChildren())
        {
            return true;
        }
        return false;
    }
}
