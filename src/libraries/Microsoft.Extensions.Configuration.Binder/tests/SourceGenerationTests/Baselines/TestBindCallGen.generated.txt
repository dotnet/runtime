// <auto-generated/>
#nullable enable

internal static class GeneratedConfigurationBinder
{
    public static void Bind(this global::Microsoft.Extensions.Configuration.IConfiguration configuration, global::Program.MyClass obj) => global::Microsoft.Extensions.Configuration.Binder.SourceGeneration.Helpers.BindCore(configuration, ref obj);
}

namespace Microsoft.Extensions.Configuration.Binder.SourceGeneration
{
    using System;
    using System.Linq;
    using Microsoft.Extensions.Configuration;
    using System.Collections.Generic;

    internal static class Helpers
    {
        public static void BindCore(IConfiguration configuration, ref List<int> obj)
        {
            if (obj is null)
            {
                throw new ArgumentNullException(nameof(obj));
            }

            int element;
            foreach (IConfigurationSection section in configuration.GetChildren())
            {
                if (section.Value is string stringValue0)
                {
                    element = int.Parse(stringValue0);
                    obj.Add(element);
                }
            }
        }

        public static void BindCore(IConfiguration configuration, ref Dictionary<string, string> obj)
        {
            if (obj is null)
            {
                throw new ArgumentNullException(nameof(obj));
            }

            string key;
            foreach (IConfigurationSection section in configuration.GetChildren())
            {
                if (section.Key is string stringValue1)
                {
                    key = stringValue1;
                    string element;
                    if (section.Value is string stringValue2)
                    {
                        element = stringValue2;
                        obj[key] = element;
                    }
                }
            }
        }

        public static void BindCore(IConfiguration configuration, ref Program.MyClass2 obj)
        {
        }

        public static void BindCore(IConfiguration configuration, ref Dictionary<string, Program.MyClass2> obj)
        {
            if (obj is null)
            {
                throw new ArgumentNullException(nameof(obj));
            }

            string key;
            foreach (IConfigurationSection section in configuration.GetChildren())
            {
                if (section.Key is string stringValue3)
                {
                    key = stringValue3;
                    if (obj.TryGetValue(key, out Program.MyClass2? element) && element is not null)
                    {
                        BindCore(section, ref element);
                        obj[key] = element;
                    }
                    else
                    {
                        element = new Program.MyClass2();
                        BindCore(section, ref element);
                        obj[key] = element;
                    }
                }
            }
        }

        public static void BindCore(IConfiguration configuration, ref Program.MyClass obj)
        {
            if (obj is null)
            {
                throw new ArgumentNullException(nameof(obj));
            }

            if (configuration["MyString"] is string stringValue6)
            {
                obj.MyString = stringValue6;
            }

            if (configuration["MyInt"] is string stringValue7)
            {
                obj.MyInt = int.Parse(stringValue7);
            }

            IConfigurationSection section8 = configuration.GetSection("MyList");
            if (HasChildren(section8))
            {
                List<int> temp9 = obj.MyList;
                temp9 ??= new List<int>();
                BindCore(section8, ref temp9);
                obj.MyList = temp9;
            }

            IConfigurationSection section10 = configuration.GetSection("MyDictionary");
            if (HasChildren(section10))
            {
                Dictionary<string, string> temp11 = obj.MyDictionary;
                temp11 ??= new Dictionary<string, string>();
                BindCore(section10, ref temp11);
                obj.MyDictionary = temp11;
            }

            IConfigurationSection section12 = configuration.GetSection("MyComplexDictionary");
            if (HasChildren(section12))
            {
                Dictionary<string, Program.MyClass2> temp13 = obj.MyComplexDictionary;
                temp13 ??= new Dictionary<string, Program.MyClass2>();
                BindCore(section12, ref temp13);
                obj.MyComplexDictionary = temp13;
            }
        }

        public static bool HasChildren(IConfiguration configuration)
        {
            foreach (IConfigurationSection section in configuration.GetChildren())
            {
                return true;
            }
            return false;
        }
    }
}
