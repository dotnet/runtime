// <auto-generated/>
#nullable enable

using System.Linq;

internal static class GeneratedConfigurationBinder
{
    public static void Bind(this global::Microsoft.Extensions.Configuration.IConfiguration configuration, Program.MyClass obj) => BindCore(configuration, ref obj);

    private static void BindCore(global::Microsoft.Extensions.Configuration.IConfiguration configuration, ref Program.MyClass obj)
    {
        if (obj is null)
        {
            throw new global::System.ArgumentNullException(nameof(obj));
        }

        if (configuration["MyString"] is string stringValue0)
        {
            obj.MyString = stringValue0;
        }

        if (configuration["MyInt"] is string stringValue1)
        {
            obj.MyInt = int.Parse(stringValue1);
        }

        global::Microsoft.Extensions.Configuration.IConfigurationSection section2 = configuration.GetSection("MyList");
        if (HasChildren(section2))
        {
            System.Collections.Generic.List<int> temp3 = obj.MyList;
            temp3 ??= new System.Collections.Generic.List<int>();
            BindCore(section2, ref temp3);
            obj.MyList = temp3;
        }

        global::Microsoft.Extensions.Configuration.IConfigurationSection section4 = configuration.GetSection("MyDictionary");
        if (HasChildren(section4))
        {
            System.Collections.Generic.Dictionary<string, string> temp5 = obj.MyDictionary;
            temp5 ??= new System.Collections.Generic.Dictionary<string, string>();
            BindCore(section4, ref temp5);
            obj.MyDictionary = temp5;
        }

        global::Microsoft.Extensions.Configuration.IConfigurationSection section6 = configuration.GetSection("MyComplexDictionary");
        if (HasChildren(section6))
        {
            System.Collections.Generic.Dictionary<string, Program.MyClass2> temp7 = obj.MyComplexDictionary;
            temp7 ??= new System.Collections.Generic.Dictionary<string, Program.MyClass2>();
            BindCore(section6, ref temp7);
            obj.MyComplexDictionary = temp7;
        }

    }

    private static void BindCore(global::Microsoft.Extensions.Configuration.IConfiguration configuration, ref System.Collections.Generic.List<int> obj)
    {
        if (obj is null)
        {
            throw new global::System.ArgumentNullException(nameof(obj));
        }

        int element;
        foreach (Microsoft.Extensions.Configuration.IConfigurationSection section in configuration.GetChildren())
        {
            if (section.Value is string stringValue8)
            {
                element = int.Parse(stringValue8);
                obj.Add(element);
            }
        }
    }

    private static void BindCore(global::Microsoft.Extensions.Configuration.IConfiguration configuration, ref System.Collections.Generic.Dictionary<string, string> obj)
    {
        if (obj is null)
        {
            throw new global::System.ArgumentNullException(nameof(obj));
        }

        string key;
        foreach (Microsoft.Extensions.Configuration.IConfigurationSection section in configuration.GetChildren())
        {
            if (section.Key is string stringValue9)
            {
                key = stringValue9;
                string element;
                if (section.Value is string stringValue10)
                {
                    element = stringValue10;
                    obj[key] = element;
                }
            }
        }
    }

    private static void BindCore(global::Microsoft.Extensions.Configuration.IConfiguration configuration, ref System.Collections.Generic.Dictionary<string, Program.MyClass2> obj)
    {
        if (obj is null)
        {
            throw new global::System.ArgumentNullException(nameof(obj));
        }

        string key;
        foreach (Microsoft.Extensions.Configuration.IConfigurationSection section in configuration.GetChildren())
        {
            if (section.Key is string stringValue11)
            {
                key = stringValue11;
                if (obj.TryGetValue(key, out Program.MyClass2? element) && element is not null)
                {
                    BindCore(section, ref element);
                    obj[key] = element;
                }
                else
                {
                    element = new Program.MyClass2();
                    BindCore(section, ref element);
                    obj[key] = element;
                }
            }
        }
    }

    private static void BindCore(global::Microsoft.Extensions.Configuration.IConfiguration configuration, ref Program.MyClass2 obj)
    {
        if (obj is null)
        {
            throw new global::System.ArgumentNullException(nameof(obj));
        }

    }

    public static bool HasChildren(global::Microsoft.Extensions.Configuration.IConfiguration configuration)
    {
        foreach (global::Microsoft.Extensions.Configuration.IConfigurationSection section in configuration.GetChildren())
        {
            return true;
        }
        return false;
    }
}
