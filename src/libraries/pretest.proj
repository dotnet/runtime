<Project Sdk="Microsoft.Build.Traversal">

  <PropertyGroup>
    <TraversalGlobalProperties>BuildAllProjects=true</TraversalGlobalProperties>
  </PropertyGroup>

  <ItemGroup Condition="'$(SkipBuildProjects)' != 'true'">
    <!-- This is necessary as inside VS project references that aren't part of the sln aren't built. -->
    <ProjectReference Include="$(CommonTestPath)CoreFx.Private.TestUtilities\CoreFx.Private.TestUtilities.csproj" />
  </ItemGroup>

  <!-- Microsoft.XmlSerializer.Generator should not be marked as a platform item and be copy-local instead. -->
  <Target Name="CollectSharedFrameworkRuntimeFiles"
          Condition="'$(PlatformManifestFile)' != ''"
          BeforeTargets="GenerateFileVersionProps">
    <ItemGroup Condition="'$(BuildingNETCoreAppVertical)' == 'true'">
      <_manualSharedFrameworkRuntimeFiles Include="System.Security.Cryptography.Native.OpenSsl.so" />
      <_manualSharedFrameworkRuntimeFiles Include="System.Security.Cryptography.Native.Apple.dylib" />
      <_manualSharedFrameworkRuntimeFiles Include="System.Security.Cryptography.Native.OpenSsl.dylib" />
    </ItemGroup>
    <ItemGroup>
      <SharedFrameworkRuntimeFiles Include="$(TestHostRuntimePath)*;@(_manualSharedFrameworkRuntimeFiles->'$(TestHostRuntimePath)%(Identity)')"
                                   Exclude="$(TestHostRuntimePath)dotnet-Microsoft.XmlSerializer.Generator.*"
                                   TargetPath="runtimes/" />
    </ItemGroup>
  </Target>

  <UsingTask TaskName="GenerateFileVersionProps" AssemblyFile="$(InstallerTasksAssemblyPath)"/>
  <Target Name="GenerateFileVersionProps"
          Condition="'$(PlatformManifestFile)' != '' and '$(BuildTargetFramework)' == '$(NetCoreAppCurrent)'"
          BeforeTargets="Build">
    <GenerateFileVersionProps Files="@(SharedFrameworkRuntimeFiles)"
                              PackageId="Microsoft.NETCore.App"
                              PackageVersion="$(ProductVersion)"
                              PlatformManifestFile="$(PlatformManifestFile)"
                              PreferredPackages="Microsoft.NetCore.App"
                              PermitDllAndExeFilesLackingFileVersion="true" />
  </Target>

  <!--
    Shared framework deps file generation.
    Produces a test shared-framework deps file.
    To use invoke target directly specifying NETCoreAppTestSharedFrameworkPath property.
  -->
  <UsingTask TaskName="GenerateTestSharedFrameworkDepsFile" AssemblyFile="$(InstallerTasksAssemblyPath)"/>
  <Target Name="GenerateTestSharedFrameworkDepsFile"
          Condition="'$(BinplaceTestSharedFramework)' == 'true' and '$(BuildTargetFramework)' == '$(NetCoreAppCurrent)'"
          BeforeTargets="Build">
    <GenerateTestSharedFrameworkDepsFile SharedFrameworkDirectory="$(NETCoreAppTestSharedFrameworkPath)"
                                         RuntimeGraphFiles="$(RuntimeIdGraphDefinitionFile)"
                                         TargetRuntimeIdentifier="$(PackageRID)" />
  </Target>

  <!-- Generate launch settings support files to enable VS debugging. -->
  <Target Name="GenerateLaunchSettingsFiles"
          Condition="'$(EnableLaunchSettings)' == 'true'"
          AfterTargets="Before">
    <ItemGroup>
      <!-- Keep in sync with pattern for test projects in tests.proj -->
      <TestProject Include="$(LibrariesProjectRoot)*\tests\**\*.Tests.csproj" />
    </ItemGroup>

    <MSBuild Targets="GenerateLaunchSettingsFile"
             Projects="@(TestProject)"
             BuildInParallel="true" />
  </Target>
</Project>
