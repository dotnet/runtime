<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en" target-language="fr" original="../Strings.resx">
    <body>
      <trans-unit id="ArgumentHasNoCorrespondingTemplateMessage">
        <source>Argument '{0}' is not referenced from the logging message</source>
        <target state="new">Argument '{0}' is not referenced from the logging message</target>
        <note />
      </trans-unit>
      <trans-unit id="ArgumentHasNoCorrespondingTemplateTitle">
        <source>Argument is not referenced from the logging message</source>
        <target state="new">Argument is not referenced from the logging message</target>
        <note />
      </trans-unit>
      <trans-unit id="GeneratingForMax6ArgumentsMessage">
        <source>Generating more than 6 arguments is not supported</source>
        <target state="new">Generating more than 6 arguments is not supported</target>
        <note />
      </trans-unit>
      <trans-unit id="InconsistentTemplateCasingMessage">
        <source>Can't have the same template with different casing</source>
        <target state="new">Can't have the same template with different casing</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidLoggingMethodNameMessage">
        <source>Logging method names cannot start with _</source>
        <target state="new">Logging method names cannot start with _</target>
        <note />
      </trans-unit>
      <trans-unit id="InvalidLoggingMethodParameterNameMessage">
        <source>Logging method parameter names cannot start with _</source>
        <target state="new">Logging method parameter names cannot start with _</target>
        <note />
      </trans-unit>
      <trans-unit id="LoggingMethodHasBodyMessage">
        <source>Logging methods cannot have a body</source>
        <target state="new">Logging methods cannot have a body</target>
        <note />
      </trans-unit>
      <trans-unit id="LoggingMethodInNestedTypeMessage">
        <source>Logging class cannot be in nested types</source>
        <target state="new">Logging class cannot be in nested types</target>
        <note />
      </trans-unit>
      <trans-unit id="LoggingMethodIsGenericMessage">
        <source>Logging methods cannot be generic</source>
        <target state="new">Logging methods cannot be generic</target>
        <note />
      </trans-unit>
      <trans-unit id="LoggingMethodMustBePartialMessage">
        <source>Logging methods must be partial</source>
        <target state="new">Logging methods must be partial</target>
        <note />
      </trans-unit>
      <trans-unit id="LoggingMethodMustReturnVoidMessage">
        <source>Logging methods must return void</source>
        <target state="new">Logging methods must return void</target>
        <note />
      </trans-unit>
      <trans-unit id="LoggingMethodShouldBeStaticMessage">
        <source>Logging methods must be static</source>
        <target state="new">Logging methods must be static</target>
        <note />
      </trans-unit>
      <trans-unit id="MalformedFormatStringsMessage">
        <source>Can't have malformed format strings (like dangling {, etc)</source>
        <target state="new">Can't have malformed format strings (like dangling {, etc)</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingLogLevelMessage">
        <source>A LogLevel value must be supplied in the LoggerMessage attribute or as a parameter to the logging method</source>
        <target state="new">A LogLevel value must be supplied in the LoggerMessage attribute or as a parameter to the logging method</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingLoggerArgumentMessage">
        <source>One of the arguments to the static logging method '{0}' must implement the Microsoft.Extensions.Logging.ILogger interface</source>
        <target state="new">One of the arguments to the static logging method '{0}' must implement the Microsoft.Extensions.Logging.ILogger interface</target>
        <note>{Locked="Microsoft.Extensions.Logging.ILogger"}</note>
      </trans-unit>
      <trans-unit id="MissingLoggerArgumentTitle">
        <source>One of the arguments to a static logging method must implement the Microsoft.Extensions.Logging.ILogger interface</source>
        <target state="new">One of the arguments to a static logging method must implement the Microsoft.Extensions.Logging.ILogger interface</target>
        <note>{Locked="Microsoft.Extensions.Logging.ILogger"}</note>
      </trans-unit>
      <trans-unit id="MissingLoggerFieldMessage">
        <source>Couldn't find a field of type Microsoft.Extensions.Logging.ILogger in class {0}</source>
        <target state="new">Couldn't find a field of type Microsoft.Extensions.Logging.ILogger in class {0}</target>
        <note>{Locked="Microsoft.Extensions.Logging.ILogger"}</note>
      </trans-unit>
      <trans-unit id="MissingLoggerFieldTitle">
        <source>Couldn't find a field of type Microsoft.Extensions.Logging.ILogger</source>
        <target state="new">Couldn't find a field of type Microsoft.Extensions.Logging.ILogger</target>
        <note>{Locked="Microsoft.Extensions.Logging.ILogger"}</note>
      </trans-unit>
      <trans-unit id="MissingRequiredTypeMessage">
        <source>Could not find definition for type {0}</source>
        <target state="new">Could not find definition for type {0}</target>
        <note />
      </trans-unit>
      <trans-unit id="MissingRequiredTypeTitle">
        <source>Could not find a required type definition</source>
        <target state="new">Could not find a required type definition</target>
        <note />
      </trans-unit>
      <trans-unit id="MultipleLoggerFieldsMessage">
        <source>Found multiple fields of type Microsoft.Extensions.Logging.ILogger in class {0}</source>
        <target state="new">Found multiple fields of type Microsoft.Extensions.Logging.ILogger in class {0}</target>
        <note>{Locked="Microsoft.Extensions.Logging.ILogger"}</note>
      </trans-unit>
      <trans-unit id="MultipleLoggerFieldsTitle">
        <source>Found multiple fields of type Microsoft.Extensions.Logging.ILogger</source>
        <target state="new">Found multiple fields of type Microsoft.Extensions.Logging.ILogger</target>
        <note>{Locked="Microsoft.Extensions.Logging.ILogger"}</note>
      </trans-unit>
      <trans-unit id="RedundantQualifierInMessageMessage">
        <source>Remove redundant qualifier (Info:, Warning:, Error:, etc) from the logging message since it is implicit in the specified log level.</source>
        <target state="new">Remove redundant qualifier (Info:, Warning:, Error:, etc) from the logging message since it is implicit in the specified log level.</target>
        <note />
      </trans-unit>
      <trans-unit id="RedundantQualifierInMessageTitle">
        <source>Redundant qualifier in logging message</source>
        <target state="new">Redundant qualifier in logging message</target>
        <note />
      </trans-unit>
      <trans-unit id="ShouldntMentionExceptionInMessageTitle">
        <source>Don't include exception parameters as templates in the logging message</source>
        <target state="new">Don't include exception parameters as templates in the logging message</target>
        <note />
      </trans-unit>
      <trans-unit id="ShouldntMentionInTemplateMessage">
        <source>Don't include a template for {0} in the logging message since it is implicitly taken care of</source>
        <target state="new">Don't include a template for {0} in the logging message since it is implicitly taken care of</target>
        <note />
      </trans-unit>
      <trans-unit id="ShouldntMentionLogLevelInMessageTitle">
        <source>Don't include log level parameters as templates in the logging message</source>
        <target state="new">Don't include log level parameters as templates in the logging message</target>
        <note />
      </trans-unit>
      <trans-unit id="ShouldntMentionLoggerInMessageTitle">
        <source>Don't include logger parameters as templates in the logging message</source>
        <target state="new">Don't include logger parameters as templates in the logging message</target>
        <note />
      </trans-unit>
      <trans-unit id="ShouldntReuseEventIdsMessage">
        <source>Multiple logging methods are using event id {0} in class {1}</source>
        <target state="new">Multiple logging methods are using event id {0} in class {1}</target>
        <note />
      </trans-unit>
      <trans-unit id="ShouldntReuseEventIdsTitle">
        <source>Multiple logging methods cannot use the same event id within a class</source>
        <target state="new">Multiple logging methods cannot use the same event id within a class</target>
        <note />
      </trans-unit>
      <trans-unit id="TemplateHasNoCorrespondingArgumentMessage">
        <source>Template '{0}' is not provided as argument to the logging method</source>
        <target state="new">Template '{0}' is not provided as argument to the logging method</target>
        <note />
      </trans-unit>
      <trans-unit id="TemplateHasNoCorrespondingArgumentTitle">
        <source>Logging template has no corresponding method argument</source>
        <target state="new">Logging template has no corresponding method argument</target>
        <note />
      </trans-unit>
    </body>
  </file>
</xliff>