// Do not edit this file manually it is auto-generated during the build based on the .resx file for this project.
namespace System
{
    internal static partial class SR
    {
#pragma warning disable 0414
        private const string s_resourcesName = "System.Linq.Queryable.resources"; // assembly Name + .resources
#pragma warning restore 0414

#if !DEBUGRESOURCES
        internal static string ArgumentNotIEnumerableGeneric {
              get { return SR.GetResourceString("ArgumentNotIEnumerableGeneric", null); }
        }
        internal static string UnhandledExpressionType {
              get { return SR.GetResourceString("UnhandledExpressionType", null); }
        }
        internal static string UnhandledBindingType {
              get { return SR.GetResourceString("UnhandledBindingType", null); }
        }
        internal static string ArgumentNotValid {
              get { return SR.GetResourceString("ArgumentNotValid", null); }
        }
        internal static string NoMethodOnType {
              get { return SR.GetResourceString("NoMethodOnType", null); }
        }
        internal static string NoMethodOnTypeMatchingArguments {
              get { return SR.GetResourceString("NoMethodOnTypeMatchingArguments", null); }
        }
#else
        internal static string ArgumentNotIEnumerableGeneric {
              get { return SR.GetResourceString("ArgumentNotIEnumerableGeneric", @"{0} is not IEnumerable<>"); }
        }
        internal static string UnhandledExpressionType {
              get { return SR.GetResourceString("UnhandledExpressionType", @"Unhandled Expression Type: {0}"); }
        }
        internal static string UnhandledBindingType {
              get { return SR.GetResourceString("UnhandledBindingType", @"Unhandled Binding Type: {0}"); }
        }
        internal static string ArgumentNotValid {
              get { return SR.GetResourceString("ArgumentNotValid", @"Argument {0} is not valid"); }
        }
        internal static string NoMethodOnType {
              get { return SR.GetResourceString("NoMethodOnType", @"There is no method '{0}' on type '{1}'"); }
        }
        internal static string NoMethodOnTypeMatchingArguments {
              get { return SR.GetResourceString("NoMethodOnTypeMatchingArguments", @"There is no method '{0}' on type '{1}' that matches the specified arguments"); }
        }

#endif
    }
}
