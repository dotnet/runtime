//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.CodeDom.Compiler {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Res_CodeDom {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal Res_CodeDom() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("XmlWithCli.Workarounds.CodeDom.Compiler.Res_CodeDom", typeof(Res_CodeDom).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Alternation conditions do not capture and cannot be named..
        /// </summary>
        internal static string AlternationCantCapture {
            get {
                return ResourceManager.GetString("AlternationCantCapture", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Alternation conditions cannot be comments..
        /// </summary>
        internal static string AlternationCantHaveComment {
            get {
                return ResourceManager.GetString("AlternationCantHaveComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The value &apos;{0}&apos; was found in the appSettings configuration section for key &apos;{1}&apos;, and this value is not a valid {2}..
        /// </summary>
        internal static string AppSettingsReaderCantParse {
            get {
                return ResourceManager.GetString("AppSettingsReaderCantParse", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to (empty string).
        /// </summary>
        internal static string AppSettingsReaderEmptyString {
            get {
                return ResourceManager.GetString("AppSettingsReaderEmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The key &apos;{0}&apos; does not exist in the appSettings configuration section..
        /// </summary>
        internal static string AppSettingsReaderNoKey {
            get {
                return ResourceManager.GetString("AppSettingsReaderNoKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Type &apos;{0}&apos; does not have a Parse method..
        /// </summary>
        internal static string AppSettingsReaderNoParser {
            get {
                return ResourceManager.GetString("AppSettingsReaderNoParser", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Destination array is not long enough to copy all the items in the collection. Check array index and length..
        /// </summary>
        internal static string Arg_ArrayPlusOffTooSmall {
            get {
                return ResourceManager.GetString("Arg_ArrayPlusOffTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Array cannot be empty or null..
        /// </summary>
        internal static string Arg_EmptyOrNullArray {
            get {
                return ResourceManager.GetString("Arg_EmptyOrNullArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to String cannot be empty or null..
        /// </summary>
        internal static string Arg_EmptyOrNullString {
            get {
                return ResourceManager.GetString("Arg_EmptyOrNullString", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Illegal enum value: {0}..
        /// </summary>
        internal static string Arg_EnumIllegalVal {
            get {
                return ResourceManager.GetString("Arg_EnumIllegalVal", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Insufficient space in the target location to copy the information..
        /// </summary>
        internal static string Arg_InsufficientSpace {
            get {
                return ResourceManager.GetString("Arg_InsufficientSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Target array type is not compatible with the type of items in the collection..
        /// </summary>
        internal static string Arg_InvalidArrayType {
            get {
                return ResourceManager.GetString("Arg_InvalidArrayType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The given port name does not start with COM/com or does not resolve to a valid serial port..
        /// </summary>
        internal static string Arg_InvalidSerialPort {
            get {
                return ResourceManager.GetString("Arg_InvalidSerialPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The given port name is invalid.  It may be a valid port, but not a serial port..
        /// </summary>
        internal static string Arg_InvalidSerialPortExtended {
            get {
                return ResourceManager.GetString("Arg_InvalidSerialPortExtended", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Multi dimension array is not supported on this operation..
        /// </summary>
        internal static string Arg_MultiRank {
            get {
                return ResourceManager.GetString("Arg_MultiRank", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The lower bound of target array must be zero..
        /// </summary>
        internal static string Arg_NonZeroLowerBound {
            get {
                return ResourceManager.GetString("Arg_NonZeroLowerBound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Non-negative number required..
        /// </summary>
        internal static string Arg_OutOfRange_NeedNonNegNum {
            get {
                return ResourceManager.GetString("Arg_OutOfRange_NeedNonNegNum", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Only single dimensional arrays are supported for the requested action..
        /// </summary>
        internal static string Arg_RankMultiDimNotSupported {
            get {
                return ResourceManager.GetString("Arg_RankMultiDimNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The port name cannot start with &apos;\&apos;..
        /// </summary>
        internal static string Arg_SecurityException {
            get {
                return ResourceManager.GetString("Arg_SecurityException", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to IAsyncResult object did not come from the corresponding async method on this type..
        /// </summary>
        internal static string Arg_WrongAsyncResult {
            get {
                return ResourceManager.GetString("Arg_WrongAsyncResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The value &quot;{0}&quot; isn&apos;t of type &quot;{1}&quot; and can&apos;t be used in this generic collection..
        /// </summary>
        internal static string Arg_WrongType {
            get {
                return ResourceManager.GetString("Arg_WrongType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An entry with the same key already exists..
        /// </summary>
        internal static string Argument_AddingDuplicate {
            get {
                return ResourceManager.GetString("Argument_AddingDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Byte[] length must be a multiple of 4..
        /// </summary>
        internal static string Argument_ByteArrayLengthMustBeAMultipleOf4 {
            get {
                return ResourceManager.GetString("Argument_ByteArrayLengthMustBeAMultipleOf4", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to FrameworkName is invalid..
        /// </summary>
        internal static string Argument_FrameworkNameInvalid {
            get {
                return ResourceManager.GetString("Argument_FrameworkNameInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to FrameworkName version component is invalid..
        /// </summary>
        internal static string Argument_FrameworkNameInvalidVersion {
            get {
                return ResourceManager.GetString("Argument_FrameworkNameInvalidVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to FrameworkName version component is missing..
        /// </summary>
        internal static string Argument_FrameworkNameMissingVersion {
            get {
                return ResourceManager.GetString("Argument_FrameworkNameMissingVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to FrameworkName cannot have less than two components or more than three components..
        /// </summary>
        internal static string Argument_FrameworkNameTooShort {
            get {
                return ResourceManager.GetString("Argument_FrameworkNameTooShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to At least one object must implement IComparable..
        /// </summary>
        internal static string Argument_ImplementIComparable {
            get {
                return ResourceManager.GetString("Argument_ImplementIComparable", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The string contained an invalid character..
        /// </summary>
        internal static string Argument_InvalidCharactersInString {
            get {
                return ResourceManager.GetString("Argument_InvalidCharactersInString", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The value of &quot;class&quot; attribute is invalid..
        /// </summary>
        internal static string Argument_InvalidClassAttribute {
            get {
                return ResourceManager.GetString("Argument_InvalidClassAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to With the AllowHexSpecifier bit set in the enum bit field, the only other valid bits that can be combined into the enum value must be a subset of those in HexNumber..
        /// </summary>
        internal static string Argument_InvalidHexStyle {
            get {
                return ResourceManager.GetString("Argument_InvalidHexStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The value of &quot;nameType&quot; is invalid..
        /// </summary>
        internal static string Argument_InvalidNameType {
            get {
                return ResourceManager.GetString("Argument_InvalidNameType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An undefined NumberStyles value is being used..
        /// </summary>
        internal static string Argument_InvalidNumberStyles {
            get {
                return ResourceManager.GetString("Argument_InvalidNumberStyles", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection..
        /// </summary>
        internal static string Argument_InvalidOffLen {
            get {
                return ResourceManager.GetString("Argument_InvalidOffLen", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The OID value was invalid..
        /// </summary>
        internal static string Argument_InvalidOidValue {
            get {
                return ResourceManager.GetString("Argument_InvalidOidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid permission state..
        /// </summary>
        internal static string Argument_InvalidPermissionState {
            get {
                return ResourceManager.GetString("Argument_InvalidPermissionState", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to maximumThreshold cannot be less than initialThreshold..
        /// </summary>
        internal static string Argument_InvalidThreshold {
            get {
                return ResourceManager.GetString("Argument_InvalidThreshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Argument {0} should be larger than {1}..
        /// </summary>
        internal static string Argument_InvalidValue {
            get {
                return ResourceManager.GetString("Argument_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid Xml - can only parse elements of version one..
        /// </summary>
        internal static string Argument_InvalidXMLBadVersion {
            get {
                return ResourceManager.GetString("Argument_InvalidXMLBadVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified item does not exist in this KeyedCollection..
        /// </summary>
        internal static string Argument_ItemNotExist {
            get {
                return ResourceManager.GetString("Argument_ItemNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The parameter must be a BigInteger..
        /// </summary>
        internal static string Argument_MustBeBigInt {
            get {
                return ResourceManager.GetString("Argument_MustBeBigInt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &apos;securityElement&apos; was not a permission element..
        /// </summary>
        internal static string Argument_NotAPermissionElement {
            get {
                return ResourceManager.GetString("Argument_NotAPermissionElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;Comment&apos; property of the CodeCommentStatement &apos;{0}&apos; cannot be null..
        /// </summary>
        internal static string Argument_NullComment {
            get {
                return ResourceManager.GetString("Argument_NullComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The parsed string was invalid..
        /// </summary>
        internal static string Argument_ParsedStringWasInvalid {
            get {
                return ResourceManager.GetString("Argument_ParsedStringWasInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The initial count for the semaphore must be greater than or equal to zero and less than the maximum count..
        /// </summary>
        internal static string Argument_SemaphoreInitialMaximum {
            get {
                return ResourceManager.GetString("Argument_SemaphoreInitialMaximum", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The name can be no more than 260 characters in length..
        /// </summary>
        internal static string Argument_WaitHandleNameTooLong {
            get {
                return ResourceManager.GetString("Argument_WaitHandleNameTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Operation on type &apos;{0}&apos; attempted with target of incorrect type..
        /// </summary>
        internal static string Argument_WrongType {
            get {
                return ResourceManager.GetString("Argument_WrongType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Argument was not a permission Element..
        /// </summary>
        internal static string ArgumentNotAPermissionElement {
            get {
                return ResourceManager.GetString("ArgumentNotAPermissionElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Array cannot be null..
        /// </summary>
        internal static string ArgumentNull_Array {
            get {
                return ResourceManager.GetString("ArgumentNull_Array", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The array cannot contain null elements..
        /// </summary>
        internal static string ArgumentNull_ArrayWithNullElements {
            get {
                return ResourceManager.GetString("ArgumentNull_ArrayWithNullElements", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Buffer cannot be null..
        /// </summary>
        internal static string ArgumentNull_Buffer {
            get {
                return ResourceManager.GetString("ArgumentNull_Buffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Key cannot be null..
        /// </summary>
        internal static string ArgumentNull_Key {
            get {
                return ResourceManager.GetString("ArgumentNull_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Argument must be between {0} and {1}..
        /// </summary>
        internal static string ArgumentOutOfRange_Bounds_Lower_Upper {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Bounds_Lower_Upper", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Enum value was out of legal range..
        /// </summary>
        internal static string ArgumentOutOfRange_Enum {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Enum", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Index was out of range. Must be non-negative and less than the size of the collection..
        /// </summary>
        internal static string ArgumentOutOfRange_Index {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Index", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified threshold for creating dictionary is out of range..
        /// </summary>
        internal static string ArgumentOutOfRange_InvalidThreshold {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_InvalidThreshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The value must be less than UInt32.MaxValue (2^32)..
        /// </summary>
        internal static string ArgumentOutOfRange_MustBeLessThanUInt32MaxValue {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_MustBeLessThanUInt32MaxValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The number must be greater than or equal to zero..
        /// </summary>
        internal static string ArgumentOutOfRange_MustBeNonNeg {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_MustBeNonNeg", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Index is less than zero..
        /// </summary>
        internal static string ArgumentOutOfRange_NeedNonNegNum {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_NeedNonNegNum", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Non-negative number required..
        /// </summary>
        internal static string ArgumentOutOfRange_NeedNonNegNumRequired {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_NeedNonNegNumRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Positive number required..
        /// </summary>
        internal static string ArgumentOutOfRange_NeedPosNum {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_NeedPosNum", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Either offset did not refer to a position in the string, or there is an insufficient length of destination character array..
        /// </summary>
        internal static string ArgumentOutOfRange_OffsetOut {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_OffsetOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to capacity was less than the current size..
        /// </summary>
        internal static string ArgumentOutOfRange_SmallCapacity {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_SmallCapacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The timeout must be greater than or equal to -1..
        /// </summary>
        internal static string ArgumentOutOfRange_Timeout {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The timeout must be either a positive number or -1..
        /// </summary>
        internal static string ArgumentOutOfRange_WriteTimeout {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_WriteTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Argument should be of type {0}..
        /// </summary>
        internal static string ArgumentWrongType {
            get {
                return ResourceManager.GetString("ArgumentWrongType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The total arity specified in &apos;{0}&apos; does not match the number of TypeArguments supplied.  There were &apos;{1}&apos; TypeArguments supplied..
        /// </summary>
        internal static string ArityDoesntMatch {
            get {
                return ResourceManager.GetString("ArityDoesntMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} Array.
        /// </summary>
        internal static string ArrayConverterText {
            get {
                return ResourceManager.GetString("ArrayConverterText", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Bad Xml {0}.
        /// </summary>
        internal static string AspNetHostingPermissionBadXml {
            get {
                return ResourceManager.GetString("AspNetHostingPermissionBadXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to True if operation was cancelled..
        /// </summary>
        internal static string Async_AsyncEventArgs_Cancelled {
            get {
                return ResourceManager.GetString("Async_AsyncEventArgs_Cancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Exception that occurred during operation.  Null if no error..
        /// </summary>
        internal static string Async_AsyncEventArgs_Error {
            get {
                return ResourceManager.GetString("Async_AsyncEventArgs_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to User-supplied state to identify operation..
        /// </summary>
        internal static string Async_AsyncEventArgs_UserState {
            get {
                return ResourceManager.GetString("Async_AsyncEventArgs_UserState", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An exception occurred during the operation, making the result invalid.  Check InnerException for exception details..
        /// </summary>
        internal static string Async_ExceptionOccurred {
            get {
                return ResourceManager.GetString("Async_ExceptionOccurred", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A non-null SendOrPostCallback must be supplied..
        /// </summary>
        internal static string Async_NullDelegate {
            get {
                return ResourceManager.GetString("Async_NullDelegate", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This operation has already had OperationCompleted called on it and further calls are illegal..
        /// </summary>
        internal static string Async_OperationAlreadyCompleted {
            get {
                return ResourceManager.GetString("Async_OperationAlreadyCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Operation has been cancelled..
        /// </summary>
        internal static string Async_OperationCancelled {
            get {
                return ResourceManager.GetString("Async_OperationCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Percentage progress made in operation..
        /// </summary>
        internal static string Async_ProgressChangedEventArgs_ProgressPercentage {
            get {
                return ResourceManager.GetString("Async_ProgressChangedEventArgs_ProgressPercentage", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to User-supplied state to identify operation..
        /// </summary>
        internal static string Async_ProgressChangedEventArgs_UserState {
            get {
                return ResourceManager.GetString("Async_ProgressChangedEventArgs_UserState", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Queuing WaitCallback failed..
        /// </summary>
        internal static string Async_QueueingFailed {
            get {
                return ResourceManager.GetString("Async_QueueingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &apos;{0}&apos; is not a valid configuration attribute for type &apos;{1}&apos;..
        /// </summary>
        internal static string AttributeNotSupported {
            get {
                return ResourceManager.GetString("AttributeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to auto-generated&gt;.
        /// </summary>
        internal static string AutoGen_Comment_Line1 {
            get {
                return ResourceManager.GetString("AutoGen_Comment_Line1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This code was generated by a tool..
        /// </summary>
        internal static string AutoGen_Comment_Line2 {
            get {
                return ResourceManager.GetString("AutoGen_Comment_Line2", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Runtime Version:.
        /// </summary>
        internal static string AutoGen_Comment_Line3 {
            get {
                return ResourceManager.GetString("AutoGen_Comment_Line3", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Changes to this file may cause incorrect behavior and will be lost if.
        /// </summary>
        internal static string AutoGen_Comment_Line4 {
            get {
                return ResourceManager.GetString("AutoGen_Comment_Line4", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to the code is regenerated..
        /// </summary>
        internal static string AutoGen_Comment_Line5 {
            get {
                return ResourceManager.GetString("AutoGen_Comment_Line5", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to BackgroundWorker is already running..
        /// </summary>
        internal static string BackgroundWorker_AlreadyRunning {
            get {
                return ResourceManager.GetString("BackgroundWorker_AlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to BackgroundWorker does not support cancellation..
        /// </summary>
        internal static string BackgroundWorker_CancellationNotSupported {
            get {
                return ResourceManager.GetString("BackgroundWorker_CancellationNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Has the user attempted to cancel the operation? To be accessed from DoWork event handler..
        /// </summary>
        internal static string BackgroundWorker_CancellationPending {
            get {
                return ResourceManager.GetString("BackgroundWorker_CancellationPending", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Executes an operation on a separate thread..
        /// </summary>
        internal static string BackgroundWorker_Desc {
            get {
                return ResourceManager.GetString("BackgroundWorker_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Event handler to be run on a different thread when the operation begins..
        /// </summary>
        internal static string BackgroundWorker_DoWork {
            get {
                return ResourceManager.GetString("BackgroundWorker_DoWork", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Argument passed into the worker handler from BackgroundWorker.RunWorkerAsync..
        /// </summary>
        internal static string BackgroundWorker_DoWorkEventArgs_Argument {
            get {
                return ResourceManager.GetString("BackgroundWorker_DoWorkEventArgs_Argument", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Result from the worker function..
        /// </summary>
        internal static string BackgroundWorker_DoWorkEventArgs_Result {
            get {
                return ResourceManager.GetString("BackgroundWorker_DoWorkEventArgs_Result", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Is the worker still currently working on a background operation?.
        /// </summary>
        internal static string BackgroundWorker_IsBusy {
            get {
                return ResourceManager.GetString("BackgroundWorker_IsBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Operation has already been completed..
        /// </summary>
        internal static string BackgroundWorker_OperationCompleted {
            get {
                return ResourceManager.GetString("BackgroundWorker_OperationCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Raised when the worker thread indicates that some progress has been made..
        /// </summary>
        internal static string BackgroundWorker_ProgressChanged {
            get {
                return ResourceManager.GetString("BackgroundWorker_ProgressChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to BackgroundWorker does not support progress..
        /// </summary>
        internal static string BackgroundWorker_ProgressNotSupported {
            get {
                return ResourceManager.GetString("BackgroundWorker_ProgressNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Raised when the worker has completed (either through success, failure, or cancellation)..
        /// </summary>
        internal static string BackgroundWorker_RunWorkerCompleted {
            get {
                return ResourceManager.GetString("BackgroundWorker_RunWorkerCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This BackgroundWorker is currently busy and cannot run multiple tasks concurrently..
        /// </summary>
        internal static string BackgroundWorker_WorkerAlreadyRunning {
            get {
                return ResourceManager.GetString("BackgroundWorker_WorkerAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This BackgroundWorker states that it doesn&apos;t report progress. Modify WorkerReportsProgress to state that it does report progress..
        /// </summary>
        internal static string BackgroundWorker_WorkerDoesntReportProgress {
            get {
                return ResourceManager.GetString("BackgroundWorker_WorkerDoesntReportProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This BackgroundWorker states that it doesn&apos;t support cancellation. Modify WorkerSupportsCancellation to state that it does support cancellation..
        /// </summary>
        internal static string BackgroundWorker_WorkerDoesntSupportCancellation {
            get {
                return ResourceManager.GetString("BackgroundWorker_WorkerDoesntSupportCancellation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Whether the worker will report progress..
        /// </summary>
        internal static string BackgroundWorker_WorkerReportsProgress {
            get {
                return ResourceManager.GetString("BackgroundWorker_WorkerReportsProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Whether the worker supports cancellation..
        /// </summary>
        internal static string BackgroundWorker_WorkerSupportsCancellation {
            get {
                return ResourceManager.GetString("BackgroundWorker_WorkerSupportsCancellation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unexpected Character: &apos;{0}&apos;..
        /// </summary>
        internal static string BadChar {
            get {
                return ResourceManager.GetString("BadChar", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot include class \{0} in character range..
        /// </summary>
        internal static string BadClassInCharRange {
            get {
                return ResourceManager.GetString("BadClassInCharRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The config value for Switch &apos;{0}&apos; was invalid..
        /// </summary>
        internal static string BadConfigSwitchValue {
            get {
                return ResourceManager.GetString("BadConfigSwitchValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Event log names must consist of printable characters and cannot contain \, *, ?, or spaces.
        /// </summary>
        internal static string BadLogName {
            get {
                return ResourceManager.GetString("BadLogName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Maximum working set size is invalid. It must be greater than or equal to the minimum working set size..
        /// </summary>
        internal static string BadMaxWorkset {
            get {
                return ResourceManager.GetString("BadMaxWorkset", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Minimum working set size is invalid. It must be less than or equal to the maximum working set size..
        /// </summary>
        internal static string BadMinWorkset {
            get {
                return ResourceManager.GetString("BadMinWorkset", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Xml version was wrong..
        /// </summary>
        internal static string BadXmlVersion {
            get {
                return ResourceManager.GetString("BadXmlVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The participantCount argument must be a positive value..
        /// </summary>
        internal static string Barrier_AddParticipants_NonPositive_ArgumentOutOfRange {
            get {
                return ResourceManager.GetString("Barrier_AddParticipants_NonPositive_ArgumentOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Adding participantCount participants would result in the number of participants exceeding the maximum number allowed..
        /// </summary>
        internal static string Barrier_AddParticipants_Overflow_ArgumentOutOfRange {
            get {
                return ResourceManager.GetString("Barrier_AddParticipants_Overflow_ArgumentOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The participantCount argument must be non-negative and less than or equal to 32767..
        /// </summary>
        internal static string Barrier_ctor_ArgumentOutOfRange {
            get {
                return ResourceManager.GetString("Barrier_ctor_ArgumentOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The barrier has been disposed..
        /// </summary>
        internal static string Barrier_Dispose {
            get {
                return ResourceManager.GetString("Barrier_Dispose", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This method may not be called from within the postPhaseAction..
        /// </summary>
        internal static string Barrier_InvalidOperation_CalledFromPHA {
            get {
                return ResourceManager.GetString("Barrier_InvalidOperation_CalledFromPHA", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The participantCount argument must be less than or equal the number of participants..
        /// </summary>
        internal static string Barrier_RemoveParticipants_ArgumentOutOfRange {
            get {
                return ResourceManager.GetString("Barrier_RemoveParticipants_ArgumentOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The participantCount argument is greater than the number of participants that haven&apos;t yet arrived at the barrier in this phase..
        /// </summary>
        internal static string Barrier_RemoveParticipants_InvalidOperation {
            get {
                return ResourceManager.GetString("Barrier_RemoveParticipants_InvalidOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The participantCount argument must be a positive value..
        /// </summary>
        internal static string Barrier_RemoveParticipants_NonPositive_ArgumentOutOfRange {
            get {
                return ResourceManager.GetString("Barrier_RemoveParticipants_NonPositive_ArgumentOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified timeout must represent a value between -1 and Int32.MaxValue, inclusive..
        /// </summary>
        internal static string Barrier_SignalAndWait_ArgumentOutOfRange {
            get {
                return ResourceManager.GetString("Barrier_SignalAndWait_ArgumentOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The number of threads using the barrier exceeded the total number of registered participants..
        /// </summary>
        internal static string Barrier_SignalAndWait_InvalidOperation_ThreadsExceeded {
            get {
                return ResourceManager.GetString("Barrier_SignalAndWait_InvalidOperation_ThreadsExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The barrier has no registered participants..
        /// </summary>
        internal static string Barrier_SignalAndWait_InvalidOperation_ZeroTotal {
            get {
                return ResourceManager.GetString("Barrier_SignalAndWait_InvalidOperation_ZeroTotal", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The postPhaseAction failed with an exception..
        /// </summary>
        internal static string BarrierPostPhaseException {
            get {
                return ResourceManager.GetString("BarrierPostPhaseException", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The BaseStream is only available when the port is open..
        /// </summary>
        internal static string BaseStream_Invalid_Not_Open {
            get {
                return ResourceManager.GetString("BaseStream_Invalid_Not_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The baud rate to use on this serial port..
        /// </summary>
        internal static string BaudRate {
            get {
                return ResourceManager.GetString("BaudRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Start index cannot be less than 0 or greater than input length..
        /// </summary>
        internal static string BeginIndexNotNegative {
            get {
                return ResourceManager.GetString("BeginIndexNotNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Binary serialization is current not supported by the LocalFileSettingsProvider..
        /// </summary>
        internal static string BinarySerializationNotSupported {
            get {
                return ResourceManager.GetString("BinarySerializationNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Bit vector is full..
        /// </summary>
        internal static string BitVectorFull {
            get {
                return ResourceManager.GetString("BitVectorFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to CompleteAdding may not be used concurrently with additions to the collection..
        /// </summary>
        internal static string BlockingCollection_Add_ConcurrentCompleteAdd {
            get {
                return ResourceManager.GetString("BlockingCollection_Add_ConcurrentCompleteAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The underlying collection didn&apos;t accept the item..
        /// </summary>
        internal static string BlockingCollection_Add_Failed {
            get {
                return ResourceManager.GetString("BlockingCollection_Add_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to At least one of the specified collections is marked as complete with regards to additions..
        /// </summary>
        internal static string BlockingCollection_CantAddAnyWhenCompleted {
            get {
                return ResourceManager.GetString("BlockingCollection_CantAddAnyWhenCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to All collections are marked as complete with regards to additions..
        /// </summary>
        internal static string BlockingCollection_CantTakeAnyWhenAllDone {
            get {
                return ResourceManager.GetString("BlockingCollection_CantTakeAnyWhenAllDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The collection argument is empty and has been marked as complete with regards to additions..
        /// </summary>
        internal static string BlockingCollection_CantTakeWhenDone {
            get {
                return ResourceManager.GetString("BlockingCollection_CantTakeWhenDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The collection argument has already been marked as complete with regards to additions..
        /// </summary>
        internal static string BlockingCollection_CompleteAdding_AlreadyDone {
            get {
                return ResourceManager.GetString("BlockingCollection_CompleteAdding_AlreadyDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The collection has been marked as complete with regards to additions..
        /// </summary>
        internal static string BlockingCollection_Completed {
            get {
                return ResourceManager.GetString("BlockingCollection_Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The array argument is of the incorrect type..
        /// </summary>
        internal static string BlockingCollection_CopyTo_IncorrectType {
            get {
                return ResourceManager.GetString("BlockingCollection_CopyTo_IncorrectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The array argument is multidimensional..
        /// </summary>
        internal static string BlockingCollection_CopyTo_MultiDim {
            get {
                return ResourceManager.GetString("BlockingCollection_CopyTo_MultiDim", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The index argument must be greater than or equal zero..
        /// </summary>
        internal static string BlockingCollection_CopyTo_NonNegative {
            get {
                return ResourceManager.GetString("BlockingCollection_CopyTo_NonNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The number of elements in the collection is greater than the available space from index to the end of the destination array..
        /// </summary>
        internal static string BlockingCollection_CopyTo_TooManyElems {
            get {
                return ResourceManager.GetString("BlockingCollection_CopyTo_TooManyElems", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The boundedCapacity argument must be positive..
        /// </summary>
        internal static string BlockingCollection_ctor_BoundedCapacityRange {
            get {
                return ResourceManager.GetString("BlockingCollection_ctor_BoundedCapacityRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The collection argument contains more items than are allowed by the boundedCapacity..
        /// </summary>
        internal static string BlockingCollection_ctor_CountMoreThanCapacity {
            get {
                return ResourceManager.GetString("BlockingCollection_ctor_CountMoreThanCapacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The collection has been disposed..
        /// </summary>
        internal static string BlockingCollection_Disposed {
            get {
                return ResourceManager.GetString("BlockingCollection_Disposed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The underlying collection was modified from outside of the BlockingCollection&lt;T&gt;..
        /// </summary>
        internal static string BlockingCollection_Take_CollectionModified {
            get {
                return ResourceManager.GetString("BlockingCollection_Take_CollectionModified", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified timeout must represent a value between -1 and {0}, inclusive..
        /// </summary>
        internal static string BlockingCollection_TimeoutInvalid {
            get {
                return ResourceManager.GetString("BlockingCollection_TimeoutInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The collections argument contains at least one disposed element..
        /// </summary>
        internal static string BlockingCollection_ValidateCollectionsArray_DispElems {
            get {
                return ResourceManager.GetString("BlockingCollection_ValidateCollectionsArray_DispElems", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The collections length is greater than the supported range for 32 bit machine..
        /// </summary>
        internal static string BlockingCollection_ValidateCollectionsArray_LargeSize {
            get {
                return ResourceManager.GetString("BlockingCollection_ValidateCollectionsArray_LargeSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The collections argument contains at least one null element..
        /// </summary>
        internal static string BlockingCollection_ValidateCollectionsArray_NullElems {
            get {
                return ResourceManager.GetString("BlockingCollection_ValidateCollectionsArray_NullElems", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The collections argument is a zero-length array..
        /// </summary>
        internal static string BlockingCollection_ValidateCollectionsArray_ZeroSize {
            get {
                return ResourceManager.GetString("BlockingCollection_ValidateCollectionsArray_ZeroSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The setting {0} has both an ApplicationScopedSettingAttribute and a UserScopedSettingAttribute..
        /// </summary>
        internal static string BothScopeAttributes {
            get {
                return ResourceManager.GetString("BothScopeAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified buffer size is too large. FileSystemWatcher cannot allocate {0} bytes for the internal buffer..
        /// </summary>
        internal static string BufferSizeTooLarge {
            get {
                return ResourceManager.GetString("BufferSizeTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Server cannot clear configuration sections from within section groups.  &lt;clear/&gt; must be a child of &lt;configSections&gt;..
        /// </summary>
        internal static string Cannot_clear_sections_within_group {
            get {
                return ResourceManager.GetString("Cannot_clear_sections_within_group", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot use a leading .. to exit above the top directory..
        /// </summary>
        internal static string Cannot_exit_up_top_directory {
            get {
                return ResourceManager.GetString("Cannot_exit_up_top_directory", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot remove with null name..
        /// </summary>
        internal static string Cannot_remove_with_null {
            get {
                return ResourceManager.GetString("Cannot_remove_with_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot specify both the &apos;{0}&apos; and &apos;{1}&apos; CodeDom provider options to choose a compiler. Please remove one of them..
        /// </summary>
        internal static string Cannot_Specify_Both_Compiler_Path_And_Version {
            get {
                return ResourceManager.GetString("Cannot_Specify_Both_Compiler_Path_And_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The event log source &apos;{0}&apos; cannot be deleted, because it&apos;s equal to the log name..
        /// </summary>
        internal static string CannotDeleteEqualSource {
            get {
                return ResourceManager.GetString("CannotDeleteEqualSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot get the effective time of the SSPI context..
        /// </summary>
        internal static string CannotGetEffectiveTimeOfSSPIContext {
            get {
                return ResourceManager.GetString("CannotGetEffectiveTimeOfSSPIContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot get the expiry time of the SSPI context..
        /// </summary>
        internal static string CannotGetExpiryTimeOfSSPIContext {
            get {
                return ResourceManager.GetString("CannotGetExpiryTimeOfSSPIContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Reading from the compression stream is not supported..
        /// </summary>
        internal static string CannotReadFromDeflateStream {
            get {
                return ResourceManager.GetString("CannotReadFromDeflateStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Writing to the compression stream is not supported..
        /// </summary>
        internal static string CannotWriteToDeflateStream {
            get {
                return ResourceManager.GetString("CannotWriteToDeflateStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &apos;{0}&apos; cannot be set while the port is open..
        /// </summary>
        internal static string Cant_be_set_when_open {
            get {
                return ResourceManager.GetString("Cant_be_set_when_open", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot create or delete the Performance Category &apos;{0}&apos; because access is denied..
        /// </summary>
        internal static string CantChangeCategoryRegistration {
            get {
                return ResourceManager.GetString("CantChangeCategoryRegistration", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Array &apos;{0}&apos; cannot contain null entries..
        /// </summary>
        internal static string CantContainNullEntries {
            get {
                return ResourceManager.GetString("CantContainNullEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An instance with a lifetime of Global can only be accessed from a PerformanceCounter with the InstanceLifetime set to PerformanceCounterInstanceLifetime.Global..
        /// </summary>
        internal static string CantConvertGlobalToProcess {
            get {
                return ResourceManager.GetString("CantConvertGlobalToProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An instance with a lifetime of Process can only be accessed from a PerformanceCounter with the InstanceLifetime set to PerformanceCounterInstanceLifetime.Process..
        /// </summary>
        internal static string CantConvertProcessToGlobal {
            get {
                return ResourceManager.GetString("CantConvertProcessToGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot create file mapping..
        /// </summary>
        internal static string CantCreateFileMapping {
            get {
                return ResourceManager.GetString("CantCreateFileMapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot delete Performance Category because this category is not registered or is a system category..
        /// </summary>
        internal static string CantDeleteCategory {
            get {
                return ResourceManager.GetString("CantDeleteCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot calculate the size of the file view..
        /// </summary>
        internal static string CantGetMappingSize {
            get {
                return ResourceManager.GetString("CantGetMappingSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot retrieve process identifier from the process handle..
        /// </summary>
        internal static string CantGetProcessId {
            get {
                return ResourceManager.GetString("CantGetProcessId", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to StandardError has not been redirected..
        /// </summary>
        internal static string CantGetStandardError {
            get {
                return ResourceManager.GetString("CantGetStandardError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to StandardIn has not been redirected..
        /// </summary>
        internal static string CantGetStandardIn {
            get {
                return ResourceManager.GetString("CantGetStandardIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to StandardOut has not been redirected or the process hasn&apos;t started yet..
        /// </summary>
        internal static string CantGetStandardOut {
            get {
                return ResourceManager.GetString("CantGetStandardOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot map view of file..
        /// </summary>
        internal static string CantMapFileView {
            get {
                return ResourceManager.GetString("CantMapFileView", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot mix synchronous and asynchronous operation on process stream..
        /// </summary>
        internal static string CantMixSyncAsyncOperation {
            get {
                return ResourceManager.GetString("CantMixSyncAsyncOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Once a ListSortDescriptionCollection has been created it can&apos;t be modified..
        /// </summary>
        internal static string CantModifyListSortDescriptionCollection {
            get {
                return ResourceManager.GetString("CantModifyListSortDescriptionCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot monitor EntryWritten events for this EventLog. This might be because the EventLog is on a remote machine which is not a supported scenario..
        /// </summary>
        internal static string CantMonitorEventLog {
            get {
                return ResourceManager.GetString("CantMonitorEventLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot open log {0} on machine {1}. Windows has not provided an error code..
        /// </summary>
        internal static string CantOpenLog {
            get {
                return ResourceManager.GetString("CantOpenLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot open log for source &apos;{0}&apos;. You may not have write access..
        /// </summary>
        internal static string CantOpenLogAccess {
            get {
                return ResourceManager.GetString("CantOpenLogAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot read Category {0}..
        /// </summary>
        internal static string CantReadCategory {
            get {
                return ResourceManager.GetString("CantReadCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Could not Read Category Index: {0}..
        /// </summary>
        internal static string CantReadCategoryIndex {
            get {
                return ResourceManager.GetString("CantReadCategoryIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Counter &apos;{0}&apos; does not exist in the specified Category..
        /// </summary>
        internal static string CantReadCounter {
            get {
                return ResourceManager.GetString("CantReadCounter", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Instance &apos;{0}&apos; does not exist in the specified Category..
        /// </summary>
        internal static string CantReadInstance {
            get {
                return ResourceManager.GetString("CantReadInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot read log entry number {0}.  The event log may be corrupt..
        /// </summary>
        internal static string CantReadLogEntryAt {
            get {
                return ResourceManager.GetString("CantReadLogEntryAt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Process object must have the UseShellExecute property set to false in order to redirect IO streams..
        /// </summary>
        internal static string CantRedirectStreams {
            get {
                return ResourceManager.GetString("CantRedirectStreams", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot retrieve all entries..
        /// </summary>
        internal static string CantRetrieveEntries {
            get {
                return ResourceManager.GetString("CantRetrieveEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The InstanceLifetime cannot be set after the instance has been initialized.  You must use the default constructor and set the CategoryName, InstanceName, CounterName, InstanceLifetime and ReadOnly properties manually before setting the RawValue..
        /// </summary>
        internal static string CantSetLifetimeAfterInitialized {
            get {
                return ResourceManager.GetString("CantSetLifetimeAfterInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to RtsEnable cannot be accessed if Handshake is set to RequestToSend or RequestToSendXOnXOff..
        /// </summary>
        internal static string CantSetRtsWithHandshaking {
            get {
                return ResourceManager.GetString("CantSetRtsWithHandshaking", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Process object must have the UseShellExecute property set to false in order to start a process as a user..
        /// </summary>
        internal static string CantStartAsUser {
            get {
                return ResourceManager.GetString("CantStartAsUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Process object must have the UseShellExecute property set to false in order to use environment variables..
        /// </summary>
        internal static string CantUseEnvVars {
            get {
                return ResourceManager.GetString("CantUseEnvVars", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Capture number cannot be zero..
        /// </summary>
        internal static string CapnumNotZero {
            get {
                return ResourceManager.GetString("CapnumNotZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Capture group numbers must be less than or equal to Int32.MaxValue..
        /// </summary>
        internal static string CaptureGroupOutOfRange {
            get {
                return ResourceManager.GetString("CaptureGroupOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot load Category Help data because an invalid index &apos;{0}&apos; was read from the registry..
        /// </summary>
        internal static string CategoryHelpCorrupt {
            get {
                return ResourceManager.GetString("CategoryHelpCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to initialize because CategoryName is missing..
        /// </summary>
        internal static string CategoryNameMissing {
            get {
                return ResourceManager.GetString("CategoryNameMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Category name property has not been set..
        /// </summary>
        internal static string CategoryNameNotSet {
            get {
                return ResourceManager.GetString("CategoryNameNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Category names must be 1024 characters or less..
        /// </summary>
        internal static string CategoryNameTooLong {
            get {
                return ResourceManager.GetString("CategoryNameTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The checkout was canceled by the user..
        /// </summary>
        internal static string CHECKOUTCanceled {
            get {
                return ResourceManager.GetString("CHECKOUTCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to There is no CodeDom provider defined for the language..
        /// </summary>
        internal static string CodeDomProvider_NotDefined {
            get {
                return ResourceManager.GetString("CodeDomProvider_NotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The output writer for code generation and the writer supplied don&apos;t match and cannot be used. This is generally caused by a bad implementation of a CodeGenerator derived class..
        /// </summary>
        internal static string CodeGenOutputWriter {
            get {
                return ResourceManager.GetString("CodeGenOutputWriter", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This code generation API cannot be called while the generator is being used to generate something else..
        /// </summary>
        internal static string CodeGenReentrance {
            get {
                return ResourceManager.GetString("CodeGenReentrance", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to (Collection).
        /// </summary>
        internal static string CollectionConverterText {
            get {
                return ResourceManager.GetString("CollectionConverterText", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Collection is read-only..
        /// </summary>
        internal static string CollectionReadOnly {
            get {
                return ResourceManager.GetString("CollectionReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The operation was canceled..
        /// </summary>
        internal static string Common_OperationCanceled {
            get {
                return ResourceManager.GetString("Common_OperationCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Compiler executable file {0} cannot be found..
        /// </summary>
        internal static string CompilerNotFound {
            get {
                return ResourceManager.GetString("CompilerNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The index argument must be less than the array length..
        /// </summary>
        internal static string ConcurrentBag_CopyTo_ArgumentException_IndexGreaterThanLength {
            get {
                return ResourceManager.GetString("ConcurrentBag_CopyTo_ArgumentException_IndexGreaterThanLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The array argument is multidimensional or of an incorrect type..
        /// </summary>
        internal static string ConcurrentBag_CopyTo_ArgumentException_InvalidArrayType {
            get {
                return ResourceManager.GetString("ConcurrentBag_CopyTo_ArgumentException_InvalidArrayType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The number of elements in the bag is greater than the available space from index to the end of the destination array..
        /// </summary>
        internal static string ConcurrentBag_CopyTo_ArgumentException_NoEnoughSpace {
            get {
                return ResourceManager.GetString("ConcurrentBag_CopyTo_ArgumentException_NoEnoughSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The array argument is null..
        /// </summary>
        internal static string ConcurrentBag_CopyTo_ArgumentNullException {
            get {
                return ResourceManager.GetString("ConcurrentBag_CopyTo_ArgumentNullException", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The index argument must be greater than or equal zero..
        /// </summary>
        internal static string ConcurrentBag_CopyTo_ArgumentOutOfRangeException {
            get {
                return ResourceManager.GetString("ConcurrentBag_CopyTo_ArgumentOutOfRangeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The collection argument is null..
        /// </summary>
        internal static string ConcurrentBag_Ctor_ArgumentNullException {
            get {
                return ResourceManager.GetString("ConcurrentBag_Ctor_ArgumentNullException", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The SyncRoot property may not be used for the synchronization of concurrent collections..
        /// </summary>
        internal static string ConcurrentCollection_SyncRoot_NotSupported {
            get {
                return ResourceManager.GetString("ConcurrentCollection_SyncRoot_NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Only elements allowed..
        /// </summary>
        internal static string Config_base_elements_only {
            get {
                return ResourceManager.GetString("Config_base_elements_only", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Child nodes not allowed..
        /// </summary>
        internal static string Config_base_no_child_nodes {
            get {
                return ResourceManager.GetString("Config_base_no_child_nodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Required attribute &apos;{0}&apos; cannot be empty..
        /// </summary>
        internal static string Config_base_required_attribute_empty {
            get {
                return ResourceManager.GetString("Config_base_required_attribute_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Required attribute &apos;{0}&apos; not found..
        /// </summary>
        internal static string Config_base_required_attribute_missing {
            get {
                return ResourceManager.GetString("Config_base_required_attribute_missing", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The time span for the property &apos;{0}&apos; exceeds the maximum that can be stored in the configuration..
        /// </summary>
        internal static string Config_base_time_overflow {
            get {
                return ResourceManager.GetString("Config_base_time_overflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The ConfigurationValidation attribute must be derived from ConfigurationValidation..
        /// </summary>
        internal static string Config_base_type_must_be_configurationvalidation {
            get {
                return ResourceManager.GetString("Config_base_type_must_be_configurationvalidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The ConfigurationPropertyConverter attribute must be derived from TypeConverter..
        /// </summary>
        internal static string Config_base_type_must_be_typeconverter {
            get {
                return ResourceManager.GetString("Config_base_type_must_be_typeconverter", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unknown.
        /// </summary>
        internal static string Config_base_unknown_format {
            get {
                return ResourceManager.GetString("Config_base_unknown_format", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unrecognized attribute &apos;{0}&apos;. Note that attribute names are case-sensitive..
        /// </summary>
        internal static string Config_base_unrecognized_attribute {
            get {
                return ResourceManager.GetString("Config_base_unrecognized_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unrecognized element..
        /// </summary>
        internal static string Config_base_unrecognized_element {
            get {
                return ResourceManager.GetString("Config_base_unrecognized_element", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The property &apos;{0}&apos; must have value &apos;true&apos; or &apos;false&apos;..
        /// </summary>
        internal static string Config_invalid_boolean_attribute {
            get {
                return ResourceManager.GetString("Config_invalid_boolean_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;{0}&apos; attribute must be set to an integer value..
        /// </summary>
        internal static string Config_invalid_integer_attribute {
            get {
                return ResourceManager.GetString("Config_invalid_integer_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;{0}&apos; attribute must be set to a positive integer value..
        /// </summary>
        internal static string Config_invalid_positive_integer_attribute {
            get {
                return ResourceManager.GetString("Config_invalid_positive_integer_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;{0}&apos; attribute must be set to a valid Type name..
        /// </summary>
        internal static string Config_invalid_type_attribute {
            get {
                return ResourceManager.GetString("Config_invalid_type_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;{0}&apos; attribute must be specified on the &apos;{1}&apos; tag..
        /// </summary>
        internal static string Config_missing_required_attribute {
            get {
                return ResourceManager.GetString("Config_missing_required_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The root element must match the name of the section referencing the file, &apos;{0}&apos;.
        /// </summary>
        internal static string Config_name_value_file_section_file_invalid_root {
            get {
                return ResourceManager.GetString("Config_name_value_file_section_file_invalid_root", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Property &apos;{0}&apos; cannot be empty or null..
        /// </summary>
        internal static string Config_property_name_cannot_be_empty {
            get {
                return ResourceManager.GetString("Config_property_name_cannot_be_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Provider must implement the class &apos;{0}&apos;..
        /// </summary>
        internal static string Config_provider_must_implement_type {
            get {
                return ResourceManager.GetString("Config_provider_must_implement_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Provider name cannot be null or empty..
        /// </summary>
        internal static string Config_provider_name_null_or_empty {
            get {
                return ResourceManager.GetString("Config_provider_name_null_or_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The provider was not found in the collection..
        /// </summary>
        internal static string Config_provider_not_found {
            get {
                return ResourceManager.GetString("Config_provider_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot clear section handlers.  Section &apos;{0}&apos; is locked..
        /// </summary>
        internal static string Config_section_cannot_clear_locked_section {
            get {
                return ResourceManager.GetString("Config_section_cannot_clear_locked_section", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SectionRecord not found..
        /// </summary>
        internal static string Config_section_record_not_found {
            get {
                return ResourceManager.GetString("Config_section_record_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;File&apos; property cannot be used with the ConfigSource property..
        /// </summary>
        internal static string Config_source_cannot_contain_file {
            get {
                return ResourceManager.GetString("Config_source_cannot_contain_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The configuration system can only be set once.  Configuration system is already set.
        /// </summary>
        internal static string Config_system_already_set {
            get {
                return ResourceManager.GetString("Config_system_already_set", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unable to read security policy..
        /// </summary>
        internal static string Config_unable_to_read_security_policy {
            get {
                return ResourceManager.GetString("Config_unable_to_read_security_policy", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to WriteXml returned null..
        /// </summary>
        internal static string Config_write_xml_returned_null {
            get {
                return ResourceManager.GetString("Config_write_xml_returned_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;{0}&apos; section can only appear once per config file..
        /// </summary>
        internal static string ConfigSectionsUnique {
            get {
                return ResourceManager.GetString("ConfigSectionsUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;{0}&apos; tag can only appear once per section..
        /// </summary>
        internal static string ConfigSectionsUniquePerSection {
            get {
                return ResourceManager.GetString("ConfigSectionsUniquePerSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified content disposition is invalid..
        /// </summary>
        internal static string ContentDispositionInvalid {
            get {
                return ResourceManager.GetString("ContentDispositionInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified content type is invalid..
        /// </summary>
        internal static string ContentTypeInvalid {
            get {
                return ResourceManager.GetString("ContentTypeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Continue.
        /// </summary>
        internal static string ContinueButtonText {
            get {
                return ResourceManager.GetString("ContinueButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} cannot convert from {1}..
        /// </summary>
        internal static string ConvertFromException {
            get {
                return ResourceManager.GetString("ConvertFromException", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} is not a valid value for {1}..
        /// </summary>
        internal static string ConvertInvalidPrimitive {
            get {
                return ResourceManager.GetString("ConvertInvalidPrimitive", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &apos;{0}&apos; is unable to convert &apos;{1}&apos; to &apos;{2}&apos;..
        /// </summary>
        internal static string ConvertToException {
            get {
                return ResourceManager.GetString("ConvertToException", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The magic number in GZip header is not correct. Make sure you are passing in a GZip stream..
        /// </summary>
        internal static string CorruptedGZipHeader {
            get {
                return ResourceManager.GetString("CorruptedGZipHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The property &apos;{0}&apos; could not be created from it&apos;s default value. Error message: {1}.
        /// </summary>
        internal static string Could_not_create_from_default_value {
            get {
                return ResourceManager.GetString("Could_not_create_from_default_value", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The property &apos;{0}&apos; could not be created from it&apos;s default value because the default value is of a different type..
        /// </summary>
        internal static string Could_not_create_from_default_value_2 {
            get {
                return ResourceManager.GetString("Could_not_create_from_default_value_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Couldn&apos;t create listener &apos;{0}&apos;..
        /// </summary>
        internal static string Could_not_create_listener {
            get {
                return ResourceManager.GetString("Could_not_create_listener", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Could not create {0}..
        /// </summary>
        internal static string Could_not_create_type_instance {
            get {
                return ResourceManager.GetString("Could_not_create_type_instance", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Couldn&apos;t find type for class {0}..
        /// </summary>
        internal static string Could_not_find_type {
            get {
                return ResourceManager.GetString("Could_not_find_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Couldn&apos;t find constructor for class {0}..
        /// </summary>
        internal static string Could_not_get_constructor {
            get {
                return ResourceManager.GetString("Could_not_get_constructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Couldn&apos;t connect to remote machine..
        /// </summary>
        internal static string CouldntConnectToRemoteMachine {
            get {
                return ResourceManager.GetString("CouldntConnectToRemoteMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Couldn&apos;t get process information from performance counter..
        /// </summary>
        internal static string CouldntGetProcessInfos {
            get {
                return ResourceManager.GetString("CouldntGetProcessInfos", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot load Performance Counter data because an unexpected registry key value type was read from &apos;{0}&apos;..
        /// </summary>
        internal static string CounterDataCorrupt {
            get {
                return ResourceManager.GetString("CounterDataCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Could not locate Performance Counter with specified category name &apos;{0}&apos;, counter name &apos;{1}&apos;..
        /// </summary>
        internal static string CounterExists {
            get {
                return ResourceManager.GetString("CounterExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Help information for this counter..
        /// </summary>
        internal static string CounterHelp {
            get {
                return ResourceManager.GetString("CounterHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Counter layout for the Category specified is invalid, a counter of the type:  AverageCount64, AverageTimer32, CounterMultiTimer, CounterMultiTimerInverse, CounterMultiTimer100Ns, CounterMultiTimer100NsInverse, RawFraction, or SampleFraction has to be immediately followed by any of the base counter types: AverageBase, CounterMultiBase, RawBase or SampleBase..
        /// </summary>
        internal static string CounterLayout {
            get {
                return ResourceManager.GetString("CounterLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The name of this counter..
        /// </summary>
        internal static string CounterName {
            get {
                return ResourceManager.GetString("CounterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot load Counter Name data because an invalid index &apos;{0}&apos; was read from the registry..
        /// </summary>
        internal static string CounterNameCorrupt {
            get {
                return ResourceManager.GetString("CounterNameCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to initialize because CounterName is missing..
        /// </summary>
        internal static string CounterNameMissing {
            get {
                return ResourceManager.GetString("CounterNameMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Custom counters file view is out of memory..
        /// </summary>
        internal static string CountersOOM {
            get {
                return ResourceManager.GetString("CountersOOM", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The type of this counter..
        /// </summary>
        internal static string CounterType {
            get {
                return ResourceManager.GetString("CounterType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Count cannot be less than -1..
        /// </summary>
        internal static string CountTooSmall {
            get {
                return ResourceManager.GetString("CountTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The AsnEncodedData object does not have the same OID for the collection..
        /// </summary>
        internal static string Cryptography_Asn_MismatchedOidInCollection {
            get {
                return ResourceManager.GetString("Cryptography_Asn_MismatchedOidInCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot create CMS enveloped for empty content..
        /// </summary>
        internal static string Cryptography_Cms_Envelope_Empty_Content {
            get {
                return ResourceManager.GetString("Cryptography_Cms_Envelope_Empty_Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The recipient info type {0} is not valid..
        /// </summary>
        internal static string Cryptography_Cms_Invalid_Recipient_Info_Type {
            get {
                return ResourceManager.GetString("Cryptography_Cms_Invalid_Recipient_Info_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The subject identifier type {0} is not valid..
        /// </summary>
        internal static string Cryptography_Cms_Invalid_Subject_Identifier_Type {
            get {
                return ResourceManager.GetString("Cryptography_Cms_Invalid_Subject_Identifier_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The subject identifier type {0} does not match the value data type {1}..
        /// </summary>
        internal static string Cryptography_Cms_Invalid_Subject_Identifier_Type_Value_Mismatch {
            get {
                return ResourceManager.GetString("Cryptography_Cms_Invalid_Subject_Identifier_Type_Value_Mismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Date property is not available for none KID key agree recipient..
        /// </summary>
        internal static string Cryptography_Cms_Key_Agree_Date_Not_Available {
            get {
                return ResourceManager.GetString("Cryptography_Cms_Key_Agree_Date_Not_Available", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The OtherKeyAttribute property is not available for none KID key agree recipient..
        /// </summary>
        internal static string Cryptography_Cms_Key_Agree_Other_Key_Attribute_Not_Available {
            get {
                return ResourceManager.GetString("Cryptography_Cms_Key_Agree_Other_Key_Attribute_Not_Available", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The CMS message is not encrypted..
        /// </summary>
        internal static string Cryptography_Cms_MessageNotEncrypted {
            get {
                return ResourceManager.GetString("Cryptography_Cms_MessageNotEncrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The CMS message is not signed..
        /// </summary>
        internal static string Cryptography_Cms_MessageNotSigned {
            get {
                return ResourceManager.GetString("Cryptography_Cms_MessageNotSigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The CMS message is not signed by NoSignature..
        /// </summary>
        internal static string Cryptography_Cms_MessageNotSignedByNoSignature {
            get {
                return ResourceManager.GetString("Cryptography_Cms_MessageNotSignedByNoSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Cryptographic Message Standard (CMS) is not supported on this platform..
        /// </summary>
        internal static string Cryptography_Cms_Not_Supported {
            get {
                return ResourceManager.GetString("Cryptography_Cms_Not_Supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The recipient certificate is not specified..
        /// </summary>
        internal static string Cryptography_Cms_RecipientCertificateNotFound {
            get {
                return ResourceManager.GetString("Cryptography_Cms_RecipientCertificateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot create CMS signature for empty content..
        /// </summary>
        internal static string Cryptography_Cms_Sign_Empty_Content {
            get {
                return ResourceManager.GetString("Cryptography_Cms_Sign_Empty_Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to CmsSigner has to be the first signer with NoSignature..
        /// </summary>
        internal static string Cryptography_Cms_Sign_No_Signature_First_Signer {
            get {
                return ResourceManager.GetString("Cryptography_Cms_Sign_No_Signature_First_Signer", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The length of the data should be a multiple of 16 bytes..
        /// </summary>
        internal static string Cryptography_DpApi_InvalidMemoryLength {
            get {
                return ResourceManager.GetString("Cryptography_DpApi_InvalidMemoryLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The chain context handle is invalid..
        /// </summary>
        internal static string Cryptography_InvalidContextHandle {
            get {
                return ResourceManager.GetString("Cryptography_InvalidContextHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} is an invalid handle..
        /// </summary>
        internal static string Cryptography_InvalidHandle {
            get {
                return ResourceManager.GetString("Cryptography_InvalidHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The store handle is invalid..
        /// </summary>
        internal static string Cryptography_InvalidStoreHandle {
            get {
                return ResourceManager.GetString("Cryptography_InvalidStoreHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The OID value is invalid..
        /// </summary>
        internal static string Cryptography_Oid_InvalidValue {
            get {
                return ResourceManager.GetString("Cryptography_Oid_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The parameter should be a PKCS 9 attribute..
        /// </summary>
        internal static string Cryptography_Pkcs9_AttributeMismatch {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs9_AttributeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The PKCS 9 attribute cannot be explicitly added to the collection..
        /// </summary>
        internal static string Cryptography_Pkcs9_ExplicitAddNotAllowed {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs9_ExplicitAddNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The OID does not represent a valid PKCS 9 attribute..
        /// </summary>
        internal static string Cryptography_Pkcs9_InvalidOid {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs9_InvalidOid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot add multiple PKCS 9 signing time attributes..
        /// </summary>
        internal static string Cryptography_Pkcs9_MultipleSigningTimeNotAllowed {
            get {
                return ResourceManager.GetString("Cryptography_Pkcs9_MultipleSigningTimeNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Adding certificate with index &apos;{0}&apos; failed..
        /// </summary>
        internal static string Cryptography_X509_AddFailed {
            get {
                return ResourceManager.GetString("Cryptography_X509_AddFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Input data cannot be coded as a valid certificate..
        /// </summary>
        internal static string Cryptography_X509_BadEncoding {
            get {
                return ResourceManager.GetString("Cryptography_X509_BadEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The certificate export operation failed..
        /// </summary>
        internal static string Cryptography_X509_ExportFailed {
            get {
                return ResourceManager.GetString("Cryptography_X509_ExportFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The parameter should be an X509Extension..
        /// </summary>
        internal static string Cryptography_X509_ExtensionMismatch {
            get {
                return ResourceManager.GetString("Cryptography_X509_ExtensionMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid content type..
        /// </summary>
        internal static string Cryptography_X509_InvalidContentType {
            get {
                return ResourceManager.GetString("Cryptography_X509_InvalidContentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid encoding format..
        /// </summary>
        internal static string Cryptography_X509_InvalidEncodingFormat {
            get {
                return ResourceManager.GetString("Cryptography_X509_InvalidEncodingFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid find type..
        /// </summary>
        internal static string Cryptography_X509_InvalidFindType {
            get {
                return ResourceManager.GetString("Cryptography_X509_InvalidFindType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid find value..
        /// </summary>
        internal static string Cryptography_X509_InvalidFindValue {
            get {
                return ResourceManager.GetString("Cryptography_X509_InvalidFindValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The public key of the certificate does not match the value specified..
        /// </summary>
        internal static string Cryptography_X509_KeyMismatch {
            get {
                return ResourceManager.GetString("Cryptography_X509_KeyMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Removing certificate with index &apos;{0}&apos; failed..
        /// </summary>
        internal static string Cryptography_X509_RemoveFailed {
            get {
                return ResourceManager.GetString("Cryptography_X509_RemoveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The X509 certificate store has not been opened..
        /// </summary>
        internal static string Cryptography_X509_StoreNotOpen {
            get {
                return ResourceManager.GetString("Cryptography_X509_StoreNotOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to (Default).
        /// </summary>
        internal static string CultureInfoConverterDefaultCultureString {
            get {
                return ResourceManager.GetString("CultureInfoConverterDefaultCultureString", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The {0} culture cannot be converted to a CultureInfo object on this computer..
        /// </summary>
        internal static string CultureInfoConverterInvalidCulture {
            get {
                return ResourceManager.GetString("CultureInfoConverterInvalidCulture", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The number of data bits per transmitted/received byte..
        /// </summary>
        internal static string DataBits {
            get {
                return ResourceManager.GetString("DataBits", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to ---- DEBUG ASSERTION FAILED ----.
        /// </summary>
        internal static string DebugAssertBanner {
            get {
                return ResourceManager.GetString("DebugAssertBanner", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to ---- Assert Long Message ----.
        /// </summary>
        internal static string DebugAssertLongMessage {
            get {
                return ResourceManager.GetString("DebugAssertLongMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to ---- Assert Short Message ----.
        /// </summary>
        internal static string DebugAssertShortMessage {
            get {
                return ResourceManager.GetString("DebugAssertShortMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Assertion Failed: Abort=Quit, Retry=Debug, Ignore=Continue.
        /// </summary>
        internal static string DebugAssertTitle {
            get {
                return ResourceManager.GetString("DebugAssertTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Assertion Failed.
        /// </summary>
        internal static string DebugAssertTitleShort {
            get {
                return ResourceManager.GetString("DebugAssertTitleShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot launch the debugger.  Make sure that a Microsoft (R) .NET Framework debugger is properly installed..
        /// </summary>
        internal static string DebugLaunchFailed {
            get {
                return ResourceManager.GetString("DebugLaunchFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Microsoft .NET Framework Debug Launch Failure.
        /// </summary>
        internal static string DebugLaunchFailedTitle {
            get {
                return ResourceManager.GetString("DebugLaunchFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}...
        ///&lt;truncated&gt;.
        /// </summary>
        internal static string DebugMessageTruncated {
            get {
                return ResourceManager.GetString("DebugMessageTruncated", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to You must specify a directory name, not a relative or absolute path..
        /// </summary>
        internal static string DirectoryObject_MustBeDirName {
            get {
                return ResourceManager.GetString("DirectoryObject_MustBeDirName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The fully qualified, or relative path to the directory you wish to read from. E.g., &quot;c:\temp&quot;..
        /// </summary>
        internal static string DirectoryObjectPathDescr {
            get {
                return ResourceManager.GetString("DirectoryObjectPathDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Whether to discard null bytes received on the port before adding to serial buffer..
        /// </summary>
        internal static string DiscardNull {
            get {
                return ResourceManager.GetString("DiscardNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An invalid IP address was specified..
        /// </summary>
        internal static string dns_bad_ip_address {
            get {
                return ResourceManager.GetString("dns_bad_ip_address", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Whether to enable the Data Terminal Ready (DTR) line during communications..
        /// </summary>
        internal static string DtrEnable {
            get {
                return ResourceManager.GetString("DtrEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Duplicate component name &apos;{0}&apos;.  Component names must be unique and case-insensitive..
        /// </summary>
        internal static string DuplicateComponentName {
            get {
                return ResourceManager.GetString("DuplicateComponentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot create Performance Category with counter name {0} because the name is a duplicate..
        /// </summary>
        internal static string DuplicateCounterName {
            get {
                return ResourceManager.GetString("DuplicateCounterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The file name &apos;{0}&apos; was already in the collection..
        /// </summary>
        internal static string DuplicateFileName {
            get {
                return ResourceManager.GetString("DuplicateFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Only the first eight characters of a custom log name are significant, and there is already another log on the system using the first eight characters of the name given. Name given: &apos;{0}&apos;, name of existing log: &apos;{1}&apos;..
        /// </summary>
        internal static string DuplicateLogName {
            get {
                return ResourceManager.GetString("DuplicateLogName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;{0}&apos; attribute cannot be an empty string..
        /// </summary>
        internal static string Empty_attribute {
            get {
                return ResourceManager.GetString("Empty_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Stack has no items in it..
        /// </summary>
        internal static string EmptyStack {
            get {
                return ResourceManager.GetString("EmptyStack", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to switchType needs to be a valid class name. It can&apos;t be empty..
        /// </summary>
        internal static string EmptyTypeName_NotAllowed {
            get {
                return ResourceManager.GetString("EmptyTypeName_NotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The encoding to use when reading and writing strings..
        /// </summary>
        internal static string Encoding {
            get {
                return ResourceManager.GetString("Encoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The value &apos;{0}&apos; is not a valid value for the enum &apos;{1}&apos;..
        /// </summary>
        internal static string EnumConverterInvalidValue {
            get {
                return ResourceManager.GetString("EnumConverterInvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Enumeration has either not started or has already finished..
        /// </summary>
        internal static string EnumNotStarted {
            get {
                return ResourceManager.GetString("EnumNotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unable to enumerate the process modules..
        /// </summary>
        internal static string EnumProcessModuleFailed {
            get {
                return ResourceManager.GetString("EnumProcessModuleFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A 32 bit processes cannot access modules of a 64 bit process..
        /// </summary>
        internal static string EnumProcessModuleFailedDueToWow {
            get {
                return ResourceManager.GetString("EnumProcessModuleFailedDueToWow", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The current session is not interactive..
        /// </summary>
        internal static string Environment_NotInteractive {
            get {
                return ResourceManager.GetString("Environment_NotInteractive", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The environment block provided doesn&apos;t have the correct format..
        /// </summary>
        internal static string EnvironmentBlock {
            get {
                return ResourceManager.GetString("EnvironmentBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The environment block used to start a process cannot be longer than 65535 bytes.  Your environment block is {0} bytes long.  Remove some environment variables and try again..
        /// </summary>
        internal static string EnvironmentBlockTooLong {
            get {
                return ResourceManager.GetString("EnvironmentBlockTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to End of data stream encountered..
        /// </summary>
        internal static string EOF {
            get {
                return ResourceManager.GetString("EOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The {0} extender provider is not compatible with the {1} type..
        /// </summary>
        internal static string ErrorBadExtenderType {
            get {
                return ResourceManager.GetString("ErrorBadExtenderType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to create system events window thread..
        /// </summary>
        internal static string ErrorCreateSystemEvents {
            get {
                return ResourceManager.GetString("ErrorCreateSystemEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot create timer..
        /// </summary>
        internal static string ErrorCreateTimer {
            get {
                return ResourceManager.GetString("ErrorCreateTimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to User event handler to call for async IO with StandardError stream..
        /// </summary>
        internal static string ErrorDataReceived {
            get {
                return ResourceManager.GetString("ErrorDataReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot get temporary file name.
        /// </summary>
        internal static string ErrorGetTempPath {
            get {
                return ResourceManager.GetString("ErrorGetTempPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid event handler for the {0} event..
        /// </summary>
        internal static string ErrorInvalidEventHandler {
            get {
                return ResourceManager.GetString("ErrorInvalidEventHandler", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid type for the {0} event..
        /// </summary>
        internal static string ErrorInvalidEventType {
            get {
                return ResourceManager.GetString("ErrorInvalidEventType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid type for the {0} property..
        /// </summary>
        internal static string ErrorInvalidPropertyType {
            get {
                return ResourceManager.GetString("ErrorInvalidPropertyType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The service instance must derive from or implement {0}..
        /// </summary>
        internal static string ErrorInvalidServiceInstance {
            get {
                return ResourceManager.GetString("ErrorInvalidServiceInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot end timer..
        /// </summary>
        internal static string ErrorKillTimer {
            get {
                return ResourceManager.GetString("ErrorKillTimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Accessor methods for the {0} event are missing..
        /// </summary>
        internal static string ErrorMissingEventAccessors {
            get {
                return ResourceManager.GetString("ErrorMissingEventAccessors", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Accessor methods for the {0} property are missing..
        /// </summary>
        internal static string ErrorMissingPropertyAccessors {
            get {
                return ResourceManager.GetString("ErrorMissingPropertyAccessors", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Property accessor &apos;{0}&apos; on object &apos;{1}&apos; threw the following exception:&apos;{2}&apos;.
        /// </summary>
        internal static string ErrorPropertyAccessorException {
            get {
                return ResourceManager.GetString("ErrorPropertyAccessorException", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The service {0} already exists in the service container..
        /// </summary>
        internal static string ErrorServiceExists {
            get {
                return ResourceManager.GetString("ErrorServiceExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to System event notifications are not supported under the current context. Server processes, for example, may not support global system event notifications..
        /// </summary>
        internal static string ErrorSystemEventsNotSupported {
            get {
                return ResourceManager.GetString("ErrorSystemEventsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid eventID value &apos;{0}&apos;. It must be in the range between &apos;{1}&apos; and &apos;{2}&apos;..
        /// </summary>
        internal static string EventID {
            get {
                return ResourceManager.GetString("EventID", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Provides interaction with Windows event logs..
        /// </summary>
        internal static string EventLogDesc {
            get {
                return ResourceManager.GetString("EventLogDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An exception occurred writing trace output to log file &apos;{0}&apos;. {1}.
        /// </summary>
        internal static string ExceptionOccurred {
            get {
                return ResourceManager.GetString("ExceptionOccurred", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An invalid return code was encountered waiting for a program to execute. The command being executed was {0}..
        /// </summary>
        internal static string ExecBadreturn {
            get {
                return ResourceManager.GetString("ExecBadreturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot execute a program. The command being executed was {0}..
        /// </summary>
        internal static string ExecCantExec {
            get {
                return ResourceManager.GetString("ExecCantExec", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unable to get the return code for a program being executed. The command that was being executed was &apos;{0}&apos;..
        /// </summary>
        internal static string ExecCantGetRetCode {
            get {
                return ResourceManager.GetString("ExecCantGetRetCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot execute a program. Impersonation failed..
        /// </summary>
        internal static string ExecCantRevert {
            get {
                return ResourceManager.GetString("ExecCantRevert", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to create file {0}..
        /// </summary>
        internal static string ExecFailedToCreate {
            get {
                return ResourceManager.GetString("ExecFailedToCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Timed out waiting for a program to execute. The command being executed was {0}..
        /// </summary>
        internal static string ExecTimeout {
            get {
                return ResourceManager.GetString("ExecTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An extension name in the CodeDom configuration section must be a non-empty string which starts with a period..
        /// </summary>
        internal static string Extension_Names_Cannot_Be_Empty_Or_Non_Period_Based {
            get {
                return ResourceManager.GetString("Extension_Names_Cannot_Be_Empty_Or_Non_Period_Based", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The LinkedList node does not belong to current LinkedList..
        /// </summary>
        internal static string ExternalLinkedListNode {
            get {
                return ResourceManager.GetString("ExternalLinkedListNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot start process because a file name has not been provided..
        /// </summary>
        internal static string FileNameMissing {
            get {
                return ResourceManager.GetString("FileNameMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The file is already open.  Call Close before trying to open the FileObject again..
        /// </summary>
        internal static string FileObject_AlreadyOpen {
            get {
                return ResourceManager.GetString("FileObject_AlreadyOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The FileObject is currently closed.  Try opening it..
        /// </summary>
        internal static string FileObject_Closed {
            get {
                return ResourceManager.GetString("FileObject_Closed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to File information cannot be queried if the file does not exist..
        /// </summary>
        internal static string FileObject_FileDoesNotExist {
            get {
                return ResourceManager.GetString("FileObject_FileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Enumerator is positioned before the first line or after the last line of the file..
        /// </summary>
        internal static string FileObject_InvalidEnumeration {
            get {
                return ResourceManager.GetString("FileObject_InvalidEnumeration", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to FileObject&apos;s open mode wasn&apos;t set to a valid value.  This FileObject is corrupt..
        /// </summary>
        internal static string FileObject_InvalidInternalState {
            get {
                return ResourceManager.GetString("FileObject_InvalidInternalState", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This operation can only be done when the FileObject is closed..
        /// </summary>
        internal static string FileObject_MustBeClosed {
            get {
                return ResourceManager.GetString("FileObject_MustBeClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to You must specify a file name, not a relative or absolute path..
        /// </summary>
        internal static string FileObject_MustBeFileName {
            get {
                return ResourceManager.GetString("FileObject_MustBeFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Reset is not supported on a FileLineEnumerator..
        /// </summary>
        internal static string FileObject_NoReset {
            get {
                return ResourceManager.GetString("FileObject_NoReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to File information cannot be queried while open for writing..
        /// </summary>
        internal static string FileObject_NotWhileWriting {
            get {
                return ResourceManager.GetString("FileObject_NotWhileWriting", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The path has not been set, or is an empty string.  Please ensure you specify some path..
        /// </summary>
        internal static string FileObject_PathNotSet {
            get {
                return ResourceManager.GetString("FileObject_PathNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The file is currently open for reading.  Close the file and reopen it before attempting this..
        /// </summary>
        internal static string FileObject_Reading {
            get {
                return ResourceManager.GetString("FileObject_Reading", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The file is currently open for writing.  Close the file and reopen it before attempting this..
        /// </summary>
        internal static string FileObject_Writing {
            get {
                return ResourceManager.GetString("FileObject_Writing", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Determines whether the file will be parsed to see if it has a byte order mark indicating its encoding.  If it does, this will be used rather than the current specified encoding..
        /// </summary>
        internal static string FileObjectDetectEncodingDescr {
            get {
                return ResourceManager.GetString("FileObjectDetectEncodingDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The encoding to use when reading the file. UTF-8 is the default..
        /// </summary>
        internal static string FileObjectEncodingDescr {
            get {
                return ResourceManager.GetString("FileObjectEncodingDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The fully qualified, or relative path to the file you wish to read from. E.g., &quot;myfile.txt&quot;..
        /// </summary>
        internal static string FileObjectPathDescr {
            get {
                return ResourceManager.GetString("FileObjectPathDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Monitors file system change notifications and raises events when a directory or file changes..
        /// </summary>
        internal static string FileSystemWatcherDesc {
            get {
                return ResourceManager.GetString("FileSystemWatcherDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Format specifier was invalid..
        /// </summary>
        internal static string Format_InvalidFormatSpecifier {
            get {
                return ResourceManager.GetString("Format_InvalidFormatSpecifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The value is too large to be represented by this format specifier..
        /// </summary>
        internal static string Format_TooLarge {
            get {
                return ResourceManager.GetString("Format_TooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Too many changes at once in directory:{0}..
        /// </summary>
        internal static string FSW_BufferOverflow {
            get {
                return ResourceManager.GetString("FSW_BufferOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Occurs when a file and/or directory change matches the filter..
        /// </summary>
        internal static string FSW_Changed {
            get {
                return ResourceManager.GetString("FSW_Changed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Flag to indicate which change event to monitor..
        /// </summary>
        internal static string FSW_ChangedFilter {
            get {
                return ResourceManager.GetString("FSW_ChangedFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Occurs when a file and/or directory creation matches the filter..
        /// </summary>
        internal static string FSW_Created {
            get {
                return ResourceManager.GetString("FSW_Created", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Occurs when a file and/or directory deletion matches the filter..
        /// </summary>
        internal static string FSW_Deleted {
            get {
                return ResourceManager.GetString("FSW_Deleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Flag to indicate whether this component is active or not..
        /// </summary>
        internal static string FSW_Enabled {
            get {
                return ResourceManager.GetString("FSW_Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The file pattern filter..
        /// </summary>
        internal static string FSW_Filter {
            get {
                return ResourceManager.GetString("FSW_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Flag to watch subdirectories..
        /// </summary>
        internal static string FSW_IncludeSubdirectories {
            get {
                return ResourceManager.GetString("FSW_IncludeSubdirectories", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error reading the {0} directory..
        /// </summary>
        internal static string FSW_IOError {
            get {
                return ResourceManager.GetString("FSW_IOError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The path to the directory to monitor..
        /// </summary>
        internal static string FSW_Path {
            get {
                return ResourceManager.GetString("FSW_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Occurs when a file and/or directory rename matches the filter..
        /// </summary>
        internal static string FSW_Renamed {
            get {
                return ResourceManager.GetString("FSW_Renamed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The object used to marshal the event handler calls issued as a result of a Directory change..
        /// </summary>
        internal static string FSW_SynchronizingObject {
            get {
                return ResourceManager.GetString("FSW_SynchronizingObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &apos;{0}&apos; can not be empty string..
        /// </summary>
        internal static string Generic_ArgCantBeEmptyString {
            get {
                return ResourceManager.GetString("Generic_ArgCantBeEmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Found invalid data while decoding..
        /// </summary>
        internal static string GenericInvalidData {
            get {
                return ResourceManager.GetString("GenericInvalidData", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The handshaking protocol for flow control in data exchange, which can be None..
        /// </summary>
        internal static string Handshake {
            get {
                return ResourceManager.GetString("Handshake", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Help not available..
        /// </summary>
        internal static string HelpNotAvailable {
            get {
                return ResourceManager.GetString("HelpNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Assembly references cannot begin with &apos;-&apos;, or contain a &apos;/&apos; or &apos;\&apos;..
        /// </summary>
        internal static string IllegalAssemblyReference {
            get {
                return ResourceManager.GetString("IllegalAssemblyReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Illegal conditional (?(...)) expression..
        /// </summary>
        internal static string IllegalCondition {
            get {
                return ResourceManager.GetString("IllegalCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to AppDomain data &apos;{0}&apos; contains an invalid value or object for specifying a default matching timeout for System.Text.RegularExpressions.Regex..
        /// </summary>
        internal static string IllegalDefaultRegexMatchTimeoutInAppDomain {
            get {
                return ResourceManager.GetString("IllegalDefaultRegexMatchTimeoutInAppDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Illegal \ at end of pattern..
        /// </summary>
        internal static string IllegalEndEscape {
            get {
                return ResourceManager.GetString("IllegalEndEscape", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Illegal {x,y} with x &gt; y..
        /// </summary>
        internal static string IllegalRange {
            get {
                return ResourceManager.GetString("IllegalRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The port is in the break state and cannot be written to..
        /// </summary>
        internal static string In_Break_State {
            get {
                return ResourceManager.GetString("In_Break_State", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Incomplete \p{X} character escape..
        /// </summary>
        internal static string IncompleteSlashP {
            get {
                return ResourceManager.GetString("IncompleteSlashP", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified type, &apos;{0}&apos; is not derived from the appropriate base type, &apos;{1}&apos;..
        /// </summary>
        internal static string Incorrect_base_type {
            get {
                return ResourceManager.GetString("Incorrect_base_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Index cannot be negative..
        /// </summary>
        internal static string IndexCannotBeNegative {
            get {
                return ResourceManager.GetString("IndexCannotBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Index {0} is out of bounds..
        /// </summary>
        internal static string IndexOutOfBounds {
            get {
                return ResourceManager.GetString("IndexOutOfBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Index {0} is out of range..
        /// </summary>
        internal static string IndexOutOfRange {
            get {
                return ResourceManager.GetString("IndexOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Probable I/O race condition detected while copying memory.  The I/O package is not thread safe by default.  In multithreaded applications, a stream must be accessed in a thread-safe way, such as a thread-safe wrapper returned by TextReader&apos;s or TextWriter&apos;s Synchronized methods.  This also applies to classes like StreamWriter and StreamReader..
        /// </summary>
        internal static string IndexOutOfRange_IORaceCondition {
            get {
                return ResourceManager.GetString("IndexOutOfRange_IORaceCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot initialize the same object twice..
        /// </summary>
        internal static string InitTwice {
            get {
                return ResourceManager.GetString("InitTwice", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to WaitForInputIdle failed.  This could be because the process does not have a graphical interface..
        /// </summary>
        internal static string InputIdleUnkownError {
            get {
                return ResourceManager.GetString("InputIdleUnkownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Instance &apos;{0}&apos; already exists with a lifetime of Process.  It cannot be recreated or reused until it has been removed or until the process using it has exited..
        /// </summary>
        internal static string InstanceAlreadyExists {
            get {
                return ResourceManager.GetString("InstanceAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to (New...).
        /// </summary>
        internal static string InstanceCreationEditorDefaultText {
            get {
                return ResourceManager.GetString("InstanceCreationEditorDefaultText", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Parameter cannot be static..
        /// </summary>
        internal static string InstanceDescriptorCannotBeStatic {
            get {
                return ResourceManager.GetString("InstanceDescriptorCannotBeStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Length mismatch..
        /// </summary>
        internal static string InstanceDescriptorLengthMismatch {
            get {
                return ResourceManager.GetString("InstanceDescriptorLengthMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Parameter must be readable..
        /// </summary>
        internal static string InstanceDescriptorMustBeReadable {
            get {
                return ResourceManager.GetString("InstanceDescriptorMustBeReadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Parameter must be static..
        /// </summary>
        internal static string InstanceDescriptorMustBeStatic {
            get {
                return ResourceManager.GetString("InstanceDescriptorMustBeStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Single instance categories are only valid with the Global lifetime..
        /// </summary>
        internal static string InstanceLifetimeProcessforSingleInstance {
            get {
                return ResourceManager.GetString("InstanceLifetimeProcessforSingleInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to InstanceLifetime is unused by ReadOnly counters..
        /// </summary>
        internal static string InstanceLifetimeProcessonReadOnly {
            get {
                return ResourceManager.GetString("InstanceLifetimeProcessonReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Counter is single instance, instance name &apos;{0}&apos; is not valid for this counter category..
        /// </summary>
        internal static string InstanceNameProhibited {
            get {
                return ResourceManager.GetString("InstanceNameProhibited", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Counter is not single instance, an instance name needs to be specified..
        /// </summary>
        internal static string InstanceNameRequired {
            get {
                return ResourceManager.GetString("InstanceNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Instance names used for writing to custom counters must be 127 characters or less..
        /// </summary>
        internal static string InstanceNameTooLong {
            get {
                return ResourceManager.GetString("InstanceNameTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Internal error in ScanRegex..
        /// </summary>
        internal static string InternalError {
            get {
                return ResourceManager.GetString("InternalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Target array type is not compatible with the type of items in the collection..
        /// </summary>
        internal static string Invalid_Array_Type {
            get {
                return ResourceManager.GetString("Invalid_Array_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;{0}&apos; attribute must be a non-negative integer..
        /// </summary>
        internal static string Invalid_nonnegative_integer_attribute {
            get {
                return ResourceManager.GetString("Invalid_nonnegative_integer_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified executable is not a valid application for this OS platform..
        /// </summary>
        internal static string InvalidApplication {
            get {
                return ResourceManager.GetString("InvalidApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &apos;{1}&apos; is not a valid value for &apos;{0}&apos;..
        /// </summary>
        internal static string InvalidArgument {
            get {
                return ResourceManager.GetString("InvalidArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Offset plus count is larger than the length of target array..
        /// </summary>
        internal static string InvalidArgumentOffsetCount {
            get {
                return ResourceManager.GetString("InvalidArgumentOffsetCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The AsyncResult is not valid..
        /// </summary>
        internal static string InvalidAsyncResult {
            get {
                return ResourceManager.GetString("InvalidAsyncResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The value of attribute &apos;{0}&apos; could not be converted to the proper type..
        /// </summary>
        internal static string InvalidAttributeType {
            get {
                return ResourceManager.GetString("InvalidAttributeType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Only one asynchronous reader is allowed time at one time..
        /// </summary>
        internal static string InvalidBeginCall {
            get {
                return ResourceManager.GetString("InvalidBeginCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Block length does not match with its complement..
        /// </summary>
        internal static string InvalidBlockLength {
            get {
                return ResourceManager.GetString("InvalidBlockLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid empty or null string for counter name..
        /// </summary>
        internal static string InvalidCounterName {
            get {
                return ResourceManager.GetString("InvalidCounterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The CRC in GZip footer does not match the CRC calculated from the decompressed data..
        /// </summary>
        internal static string InvalidCRC {
            get {
                return ResourceManager.GetString("InvalidCRC", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The log name: &apos;{0}&apos; is invalid for customer log creation..
        /// </summary>
        internal static string InvalidCustomerLogName {
            get {
                return ResourceManager.GetString("InvalidCustomerLogName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The directory name {0} is invalid..
        /// </summary>
        internal static string InvalidDirName {
            get {
                return ResourceManager.GetString("InvalidDirName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Element type {0} is not supported..
        /// </summary>
        internal static string InvalidElementType {
            get {
                return ResourceManager.GetString("InvalidElementType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to EndRead is only callable when there is one pending asynchronous reader..
        /// </summary>
        internal static string InvalidEndCall {
            get {
                return ResourceManager.GetString("InvalidEndCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} is not a valid {1} value..
        /// </summary>
        internal static string InvalidEnum {
            get {
                return ResourceManager.GetString("InvalidEnum", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The value of argument &apos;{0}&apos; ({1}) is invalid for Enum type &apos;{2}&apos;..
        /// </summary>
        internal static string InvalidEnumArgument {
            get {
                return ResourceManager.GetString("InvalidEnumArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid group name: Group names must begin with a word character..
        /// </summary>
        internal static string InvalidGroupName {
            get {
                return ResourceManager.GetString("InvalidGroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An invalid character was found in header name..
        /// </summary>
        internal static string InvalidHeaderName {
            get {
                return ResourceManager.GetString("InvalidHeaderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An invalid character was found in header value..
        /// </summary>
        internal static string InvalidHeaderValue {
            get {
                return ResourceManager.GetString("InvalidHeaderValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid hex digit &apos;{0}&apos;..
        /// </summary>
        internal static string InvalidHexDigit {
            get {
                return ResourceManager.GetString("InvalidHexDigit", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to construct a huffman tree using the length array. The stream might be corrupted..
        /// </summary>
        internal static string InvalidHuffmanData {
            get {
                return ResourceManager.GetString("InvalidHuffmanData", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Identifier &apos;{0}&apos; is not valid..
        /// </summary>
        internal static string InvalidIdentifier {
            get {
                return ResourceManager.GetString("InvalidIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The identifier:&quot;{0}&quot; on the property:&quot;{1}&quot; of type:&quot;{2}&quot; is not a valid language-independent identifier name. Check to see if CodeGenerator.IsValidLanguageIndependentIdentifier allows the identifier name..
        /// </summary>
        internal static string InvalidLanguageIdentifier {
            get {
                return ResourceManager.GetString("InvalidLanguageIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &apos;{1}&apos; is not a valid value for &apos;{0}&apos;. &apos;{0}&apos; must be greater than {2}..
        /// </summary>
        internal static string InvalidLowBoundArgument {
            get {
                return ResourceManager.GetString("InvalidLowBoundArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid member name..
        /// </summary>
        internal static string InvalidMemberName {
            get {
                return ResourceManager.GetString("InvalidMemberName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Null is not a valid value for {0}..
        /// </summary>
        internal static string InvalidNullArgument {
            get {
                return ResourceManager.GetString("InvalidNullArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Argument {0} cannot be null or zero-length..
        /// </summary>
        internal static string InvalidNullEmptyArgument {
            get {
                return ResourceManager.GetString("InvalidNullEmptyArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid operation..
        /// </summary>
        internal static string InvalidOperation {
            get {
                return ResourceManager.GetString("InvalidOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Removal is an invalid operation for Stack or Queue..
        /// </summary>
        internal static string InvalidOperation_CannotRemoveFromStackOrQueue {
            get {
                return ResourceManager.GetString("InvalidOperation_CannotRemoveFromStackOrQueue", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Duplicate items are not allowed in the collection..
        /// </summary>
        internal static string InvalidOperation_DuplicateItemNotAllowed {
            get {
                return ResourceManager.GetString("InvalidOperation_DuplicateItemNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This operation is not valid on an empty collection..
        /// </summary>
        internal static string InvalidOperation_EmptyCollection {
            get {
                return ResourceManager.GetString("InvalidOperation_EmptyCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Queue empty..
        /// </summary>
        internal static string InvalidOperation_EmptyQueue {
            get {
                return ResourceManager.GetString("InvalidOperation_EmptyQueue", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Stack empty..
        /// </summary>
        internal static string InvalidOperation_EmptyStack {
            get {
                return ResourceManager.GetString("InvalidOperation_EmptyStack", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to EndRead can only be called once for each asynchronous operation..
        /// </summary>
        internal static string InvalidOperation_EndReadCalledMultiple {
            get {
                return ResourceManager.GetString("InvalidOperation_EndReadCalledMultiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to EndWrite can only be called once for each asynchronous operation..
        /// </summary>
        internal static string InvalidOperation_EndWriteCalledMultiple {
            get {
                return ResourceManager.GetString("InvalidOperation_EndWriteCalledMultiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The enumeration has already completed..
        /// </summary>
        internal static string InvalidOperation_EnumEnded {
            get {
                return ResourceManager.GetString("InvalidOperation_EnumEnded", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Collection was modified after the enumerator was instantiated..
        /// </summary>
        internal static string InvalidOperation_EnumFailedVersion {
            get {
                return ResourceManager.GetString("InvalidOperation_EnumFailedVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Enumeration has not started.  Call MoveNext..
        /// </summary>
        internal static string InvalidOperation_EnumNotStarted {
            get {
                return ResourceManager.GetString("InvalidOperation_EnumNotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Enumerator is positioned before the first element or after the last element of the collection..
        /// </summary>
        internal static string InvalidOperation_EnumOpCantHappen {
            get {
                return ResourceManager.GetString("InvalidOperation_EnumOpCantHappen", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Handle collector count overflows or underflows..
        /// </summary>
        internal static string InvalidOperation_HCCountOverflow {
            get {
                return ResourceManager.GetString("InvalidOperation_HCCountOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid value &apos;{1}&apos; for parameter &apos;{0}&apos;..
        /// </summary>
        internal static string InvalidParameter {
            get {
                return ResourceManager.GetString("InvalidParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid format for argument {0}..
        /// </summary>
        internal static string InvalidParameterFormat {
            get {
                return ResourceManager.GetString("InvalidParameterFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The CodeChecksumPragma file name &apos;{0}&apos; contains invalid path characters..
        /// </summary>
        internal static string InvalidPathCharsInChecksum {
            get {
                return ResourceManager.GetString("InvalidPathCharsInChecksum", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid permission level..
        /// </summary>
        internal static string InvalidPermissionLevel {
            get {
                return ResourceManager.GetString("InvalidPermissionLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid permission state..
        /// </summary>
        internal static string InvalidPermissionState {
            get {
                return ResourceManager.GetString("InvalidPermissionState", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified port is invalid. The port must be greater than 0..
        /// </summary>
        internal static string InvalidPort {
            get {
                return ResourceManager.GetString("InvalidPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The text {0} is not a valid {1}..
        /// </summary>
        internal static string InvalidPrimitive {
            get {
                return ResourceManager.GetString("InvalidPrimitive", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid Primitive Type: {0}. Consider using CodeObjectCreateExpression..
        /// </summary>
        internal static string InvalidPrimitiveType {
            get {
                return ResourceManager.GetString("InvalidPrimitiveType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid value {1} for property {0}..
        /// </summary>
        internal static string InvalidProperty {
            get {
                return ResourceManager.GetString("InvalidProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The region directive &apos;{0}&apos; contains invalid characters.  RegionText cannot contain any new line characters..
        /// </summary>
        internal static string InvalidRegion {
            get {
                return ResourceManager.GetString("InvalidRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The SSPI context is not valid..
        /// </summary>
        internal static string InvalidSSPIContext {
            get {
                return ResourceManager.GetString("InvalidSSPIContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A null session key was obtained from SSPI..
        /// </summary>
        internal static string InvalidSSPIContextKey {
            get {
                return ResourceManager.GetString("InvalidSSPIContextKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid SSPI BinaryNegotiationElement..
        /// </summary>
        internal static string InvalidSSPINegotiationElement {
            get {
                return ResourceManager.GetString("InvalidSSPINegotiationElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The stream size in GZip footer does not match the real stream size..
        /// </summary>
        internal static string InvalidStreamSize {
            get {
                return ResourceManager.GetString("InvalidStreamSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The type name:&quot;{0}&quot; on the property:&quot;{1}&quot; of type:&quot;{2}&quot; is not a valid language-independent type name..
        /// </summary>
        internal static string InvalidTypeName {
            get {
                return ResourceManager.GetString("InvalidTypeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to BindHandle for ThreadPool failed on this handle..
        /// </summary>
        internal static string IO_BindHandleFailed {
            get {
                return ResourceManager.GetString("IO_BindHandleFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unable to read beyond the end of the stream..
        /// </summary>
        internal static string IO_EOF_ReadBeyondEOF {
            get {
                return ResourceManager.GetString("IO_EOF_ReadBeyondEOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The I/O operation has been aborted because of either a thread exit or an application request..
        /// </summary>
        internal static string IO_OperationAborted {
            get {
                return ResourceManager.GetString("IO_OperationAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified port name is too long.  The port name must be less than 260 characters..
        /// </summary>
        internal static string IO_PathTooLong {
            get {
                return ResourceManager.GetString("IO_PathTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified port does not exist..
        /// </summary>
        internal static string IO_PortNotFound {
            get {
                return ResourceManager.GetString("IO_PortNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The port &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string IO_PortNotFoundFileName {
            get {
                return ResourceManager.GetString("IO_PortNotFoundFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The process cannot access the port &apos;{0}&apos; because it is being used by another process..
        /// </summary>
        internal static string IO_SharingViolation_File {
            get {
                return ResourceManager.GetString("IO_SharingViolation_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The process cannot access the port because it is being used by another process..
        /// </summary>
        internal static string IO_SharingViolation_NoFileName {
            get {
                return ResourceManager.GetString("IO_SharingViolation_NoFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unknown Error &apos;{0}&apos;..
        /// </summary>
        internal static string IO_UnknownError {
            get {
                return ResourceManager.GetString("IO_UnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unknown input/output failure..
        /// </summary>
        internal static string IOError {
            get {
                return ResourceManager.GetString("IOError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Specifies support for transacted initialization..
        /// </summary>
        internal static string ISupportInitializeDescr {
            get {
                return ResourceManager.GetString("ISupportInitializeDescr", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Capacity overflowed and went negative.  Check capacity of the collection..
        /// </summary>
        internal static string KeyedCollCapacityOverflow {
            get {
                return ResourceManager.GetString("KeyedCollCapacityOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot add item since the item with the key already exists in the collection..
        /// </summary>
        internal static string KeyedCollDuplicateKey {
            get {
                return ResourceManager.GetString("KeyedCollDuplicateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Keys must be non-null non-empty Strings..
        /// </summary>
        internal static string KeyedCollInvalidKey {
            get {
                return ResourceManager.GetString("KeyedCollInvalidKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot find the key {0} in the collection..
        /// </summary>
        internal static string KeyedCollKeyNotFound {
            get {
                return ResourceManager.GetString("KeyedCollKeyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Need a non negative number for capacity..
        /// </summary>
        internal static string KeyedCollNeedNonNegativeNum {
            get {
                return ResourceManager.GetString("KeyedCollNeedNonNegativeNum", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The key reference with respect to which the insertion operation was to be performed was not found..
        /// </summary>
        internal static string KeyedCollReferenceKeyNotFound {
            get {
                return ResourceManager.GetString("KeyedCollReferenceKeyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to You need to specify a non-empty String for a language name in the CodeDom configuration section..
        /// </summary>
        internal static string Language_Names_Cannot_Be_Empty {
            get {
                return ResourceManager.GetString("Language_Names_Cannot_Be_Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Length cannot be less than 0 or exceed input length..
        /// </summary>
        internal static string LengthNotNegative {
            get {
                return ResourceManager.GetString("LengthNotNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An instance of type &apos;{1}&apos; was being created, and a valid license could not be granted for the type &apos;{0}&apos;. Please,  contact the manufacturer of the component for more information..
        /// </summary>
        internal static string LicExceptionTypeAndInstance {
            get {
                return ResourceManager.GetString("LicExceptionTypeAndInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A valid license cannot be granted for the type {0}. Contact the manufacturer of the component for more information..
        /// </summary>
        internal static string LicExceptionTypeOnly {
            get {
                return ResourceManager.GetString("LicExceptionTypeOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The CurrentContext property of the LicenseManager is already locked by another user..
        /// </summary>
        internal static string LicMgrAlreadyLocked {
            get {
                return ResourceManager.GetString("LicMgrAlreadyLocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The CurrentContext property of the LicenseManager is currently locked and cannot be changed..
        /// </summary>
        internal static string LicMgrContextCannotBeChanged {
            get {
                return ResourceManager.GetString("LicMgrContextCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The CurrentContext property of the LicenseManager can only be unlocked with the same contextUser..
        /// </summary>
        internal static string LicMgrDifferentUser {
            get {
                return ResourceManager.GetString("LicMgrDifferentUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The LinkedList is empty..
        /// </summary>
        internal static string LinkedListEmpty {
            get {
                return ResourceManager.GetString("LinkedListEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The LinkedList node already belongs to a LinkedList..
        /// </summary>
        internal static string LinkedListNodeIsAttached {
            get {
                return ResourceManager.GetString("LinkedListNodeIsAttached", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Log {0} has already been registered as a source on the local computer..
        /// </summary>
        internal static string LocalLogAlreadyExistsAsSource {
            get {
                return ResourceManager.GetString("LocalLogAlreadyExistsAsSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot open registry key {0}\{1}\{2}..
        /// </summary>
        internal static string LocalRegKeyMissing {
            get {
                return ResourceManager.GetString("LocalRegKeyMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Source {0} already exists on the local computer..
        /// </summary>
        internal static string LocalSourceAlreadyExists {
            get {
                return ResourceManager.GetString("LocalSourceAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Source {0} is not registered on the local computer..
        /// </summary>
        internal static string LocalSourceNotRegistered {
            get {
                return ResourceManager.GetString("LocalSourceNotRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Log {0} has already been registered as a source on the computer &apos;{1}&apos;..
        /// </summary>
        internal static string LogAlreadyExistsAsSource {
            get {
                return ResourceManager.GetString("LogAlreadyExistsAsSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The event log &apos;{0}&apos; on computer &apos;{1}&apos; does not exist..
        /// </summary>
        internal static string LogDoesNotExists {
            get {
                return ResourceManager.GetString("LogDoesNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The contents of the log..
        /// </summary>
        internal static string LogEntries {
            get {
                return ResourceManager.GetString("LogEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The category for this message..
        /// </summary>
        internal static string LogEntryCategory {
            get {
                return ResourceManager.GetString("LogEntryCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An application-specific category number assigned to this entry..
        /// </summary>
        internal static string LogEntryCategoryNumber {
            get {
                return ResourceManager.GetString("LogEntryCategoryNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The binary data associated with this entry in the event log..
        /// </summary>
        internal static string LogEntryData {
            get {
                return ResourceManager.GetString("LogEntryData", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The type of entry - Information, Warning, etc..
        /// </summary>
        internal static string LogEntryEntryType {
            get {
                return ResourceManager.GetString("LogEntryEntryType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The number identifying the message for this source..
        /// </summary>
        internal static string LogEntryEventID {
            get {
                return ResourceManager.GetString("LogEntryEventID", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The sequence of this entry in the event log..
        /// </summary>
        internal static string LogEntryIndex {
            get {
                return ResourceManager.GetString("LogEntryIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The machine on which this event log resides..
        /// </summary>
        internal static string LogEntryMachineName {
            get {
                return ResourceManager.GetString("LogEntryMachineName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The text of the message for this entry.
        /// </summary>
        internal static string LogEntryMessage {
            get {
                return ResourceManager.GetString("LogEntryMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The application-supplied strings used in the message..
        /// </summary>
        internal static string LogEntryReplacementStrings {
            get {
                return ResourceManager.GetString("LogEntryReplacementStrings", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The full number identifying the message in the event message dll..
        /// </summary>
        internal static string LogEntryResourceId {
            get {
                return ResourceManager.GetString("LogEntryResourceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The name of the application that wrote this entry..
        /// </summary>
        internal static string LogEntrySource {
            get {
                return ResourceManager.GetString("LogEntrySource", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The time at which the application logged this entry..
        /// </summary>
        internal static string LogEntryTimeGenerated {
            get {
                return ResourceManager.GetString("LogEntryTimeGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The time at which the system logged this entry to the event log..
        /// </summary>
        internal static string LogEntryTimeWritten {
            get {
                return ResourceManager.GetString("LogEntryTimeWritten", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Log entry string is too long. A string written to the event log cannot exceed 32766 characters..
        /// </summary>
        internal static string LogEntryTooLong {
            get {
                return ResourceManager.GetString("LogEntryTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The username of the account associated with this entry by the writing application..
        /// </summary>
        internal static string LogEntryUserName {
            get {
                return ResourceManager.GetString("LogEntryUserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Raised each time any application writes an entry to the event log..
        /// </summary>
        internal static string LogEntryWritten {
            get {
                return ResourceManager.GetString("LogEntryWritten", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Gets or sets the name of the log to read from and write to..
        /// </summary>
        internal static string LogLog {
            get {
                return ResourceManager.GetString("LogLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The name of the machine on which to read or write events..
        /// </summary>
        internal static string LogMachineName {
            get {
                return ResourceManager.GetString("LogMachineName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Indicates if the component monitors the event log for changes..
        /// </summary>
        internal static string LogMonitoring {
            get {
                return ResourceManager.GetString("LogMonitoring", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The application name (source name) to use when writing to the event log..
        /// </summary>
        internal static string LogSource {
            get {
                return ResourceManager.GetString("LogSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The source &apos;{0}&apos; is not registered in log &apos;{1}&apos;. (It is registered in log &apos;{2}&apos;.) &quot; The Source and Log properties must be matched, or you may set Log to the empty string, and it will automatically be matched to the Source property..
        /// </summary>
        internal static string LogSourceMismatch {
            get {
                return ResourceManager.GetString("LogSourceMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The object used to marshal the event handler calls issued as a result of an EventLog change..
        /// </summary>
        internal static string LogSynchronizingObject {
            get {
                return ResourceManager.GetString("LogSynchronizingObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified string is not in the form required for an e-mail address..
        /// </summary>
        internal static string MailAddressInvalidFormat {
            get {
                return ResourceManager.GetString("MailAddressInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An invalid character was found in the Base-64 stream..
        /// </summary>
        internal static string MailBase64InvalidCharacter {
            get {
                return ResourceManager.GetString("MailBase64InvalidCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The collection is read-only..
        /// </summary>
        internal static string MailCollectionIsReadOnly {
            get {
                return ResourceManager.GetString("MailCollectionIsReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The date is in an invalid format..
        /// </summary>
        internal static string MailDateInvalidFormat {
            get {
                return ResourceManager.GetString("MailDateInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified singleton field already exists in the collection and cannot be added..
        /// </summary>
        internal static string MailHeaderFieldAlreadyExists {
            get {
                return ResourceManager.GetString("MailHeaderFieldAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An invalid character was found in the mail header: &apos;{0}&apos;..
        /// </summary>
        internal static string MailHeaderFieldInvalidCharacter {
            get {
                return ResourceManager.GetString("MailHeaderFieldInvalidCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The mail header is malformed..
        /// </summary>
        internal static string MailHeaderFieldMalformedHeader {
            get {
                return ResourceManager.GetString("MailHeaderFieldMalformedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The header name does not match this property..
        /// </summary>
        internal static string MailHeaderFieldMismatchedName {
            get {
                return ResourceManager.GetString("MailHeaderFieldMismatchedName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The index value is outside the bounds of the array..
        /// </summary>
        internal static string MailHeaderIndexOutOfBounds {
            get {
                return ResourceManager.GetString("MailHeaderIndexOutOfBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The ContentID cannot contain a &apos;&lt;&apos; or &apos;&gt;&apos; character..
        /// </summary>
        internal static string MailHeaderInvalidCID {
            get {
                return ResourceManager.GetString("MailHeaderInvalidCID", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Item property can only be used with singleton fields..
        /// </summary>
        internal static string MailHeaderItemAccessorOnlySingleton {
            get {
                return ResourceManager.GetString("MailHeaderItemAccessorOnlySingleton", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The underlying list has been changed and the enumeration is out of date..
        /// </summary>
        internal static string MailHeaderListHasChanged {
            get {
                return ResourceManager.GetString("MailHeaderListHasChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The stream should have been consumed before resetting..
        /// </summary>
        internal static string MailHeaderResetCalledBeforeEOF {
            get {
                return ResourceManager.GetString("MailHeaderResetCalledBeforeEOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The target array is too small to contain all the headers..
        /// </summary>
        internal static string MailHeaderTargetArrayTooSmall {
            get {
                return ResourceManager.GetString("MailHeaderTargetArrayTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The SMTP host was not found..
        /// </summary>
        internal static string MailHostNotFound {
            get {
                return ResourceManager.GetString("MailHostNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to GetContentStream() can only be called once..
        /// </summary>
        internal static string MailReaderGetContentStreamAlreadyCalled {
            get {
                return ResourceManager.GetString("MailReaderGetContentStreamAlreadyCalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Premature end of stream..
        /// </summary>
        internal static string MailReaderTruncated {
            get {
                return ResourceManager.GetString("MailReaderTruncated", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Server does not support secure connections..
        /// </summary>
        internal static string MailServerDoesNotSupportStartTls {
            get {
                return ResourceManager.GetString("MailServerDoesNotSupportStartTls", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The server response was: {0}.
        /// </summary>
        internal static string MailServerResponse {
            get {
                return ResourceManager.GetString("MailServerResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified string is not in the form required for a subject..
        /// </summary>
        internal static string MailSubjectInvalidFormat {
            get {
                return ResourceManager.GetString("MailSubjectInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This operation cannot be performed while in content..
        /// </summary>
        internal static string MailWriterIsInContent {
            get {
                return ResourceManager.GetString("MailWriterIsInContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to parsing &quot;{0}&quot; - {1}.
        /// </summary>
        internal static string MakeException {
            get {
                return ResourceManager.GetString("MakeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Malformed \k&lt;...&gt; named back reference..
        /// </summary>
        internal static string MalformedNameRef {
            get {
                return ResourceManager.GetString("MalformedNameRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to (?({0}) ) malformed..
        /// </summary>
        internal static string MalformedReference {
            get {
                return ResourceManager.GetString("MalformedReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Malformed \p{X} character escape..
        /// </summary>
        internal static string MalformedSlashP {
            get {
                return ResourceManager.GetString("MalformedSlashP", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot continue the current operation, the performance counters memory mapping has been corrupted..
        /// </summary>
        internal static string MappingCorrupted {
            get {
                return ResourceManager.GetString("MappingCorrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified character value is not allowed for this property..
        /// </summary>
        internal static string MaskedTextProviderInvalidCharError {
            get {
                return ResourceManager.GetString("MaskedTextProviderInvalidCharError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified mask contains invalid characters..
        /// </summary>
        internal static string MaskedTextProviderMaskInvalidChar {
            get {
                return ResourceManager.GetString("MaskedTextProviderMaskInvalidChar", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Mask value cannot be null or empty..
        /// </summary>
        internal static string MaskedTextProviderMaskNullOrEmpty {
            get {
                return ResourceManager.GetString("MaskedTextProviderMaskNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The PasswordChar and PromptChar values cannot be the same..
        /// </summary>
        internal static string MaskedTextProviderPasswordAndPromptCharError {
            get {
                return ResourceManager.GetString("MaskedTextProviderPasswordAndPromptCharError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The maximum baud rate for the device is {0}..
        /// </summary>
        internal static string Max_Baud {
            get {
                return ResourceManager.GetString("Max_Baud", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to MaximumKilobytes must be between 64 KB and 4 GB, and must be in 64K increments..
        /// </summary>
        internal static string MaximumKilobytesOutOfRange {
            get {
                return ResourceManager.GetString("MaximumKilobytesOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified media type is invalid..
        /// </summary>
        internal static string MediaTypeInvalid {
            get {
                return ResourceManager.GetString("MediaTypeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Relationships between {0}.{1} and {2}.{3} are not supported..
        /// </summary>
        internal static string MemberRelationshipService_RelationshipNotSupported {
            get {
                return ResourceManager.GetString("MemberRelationshipService_RelationshipNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The description for Event ID &apos;{0}&apos; in Source &apos;{1}&apos; cannot be found.  The local computer may not have the necessary registry information or message DLL files to display the message, or you may not have permission to access them.  The following information is part of the event:.
        /// </summary>
        internal static string MessageNotFormatted {
            get {
                return ResourceManager.GetString("MessageNotFormatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} on {1}.
        /// </summary>
        internal static string MetaExtenderName {
            get {
                return ResourceManager.GetString("MetaExtenderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to One of the streams has already been used and can&apos;t be reset to the origin..
        /// </summary>
        internal static string MimePartCantResetStream {
            get {
                return ResourceManager.GetString("MimePartCantResetStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The MIME transfer encoding &apos;{0}&apos; is not supported..
        /// </summary>
        internal static string MimeTransferEncodingNotSupported {
            get {
                return ResourceManager.GetString("MimeTransferEncodingNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Mismatched counter types..
        /// </summary>
        internal static string MismatchedCounterTypes {
            get {
                return ResourceManager.GetString("MismatchedCounterTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Category does not exist..
        /// </summary>
        internal static string MissingCategory {
            get {
                return ResourceManager.GetString("MissingCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Category {0} does not exist..
        /// </summary>
        internal static string MissingCategoryDetail {
            get {
                return ResourceManager.GetString("MissingCategoryDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Missing control character..
        /// </summary>
        internal static string MissingControl {
            get {
                return ResourceManager.GetString("MissingControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Counter {0} does not exist..
        /// </summary>
        internal static string MissingCounter {
            get {
                return ResourceManager.GetString("MissingCounter", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Instance {0} does not exist in category {1}..
        /// </summary>
        internal static string MissingInstance {
            get {
                return ResourceManager.GetString("MissingInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot find Log {0} on computer &apos;{1}&apos;..
        /// </summary>
        internal static string MissingLog {
            get {
                return ResourceManager.GetString("MissingLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Log property value has not been specified..
        /// </summary>
        internal static string MissingLogProperty {
            get {
                return ResourceManager.GetString("MissingLogProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Must specify value for {0}..
        /// </summary>
        internal static string MissingParameter {
            get {
                return ResourceManager.GetString("MissingParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Process with an Id of {0} is not running..
        /// </summary>
        internal static string MissingProccess {
            get {
                return ResourceManager.GetString("MissingProccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Category &apos;{0}&apos; is marked as multi-instance.  Performance counters in this category can only be created with instance names..
        /// </summary>
        internal static string MultiInstanceOnly {
            get {
                return ResourceManager.GetString("MultiInstanceOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to (Text).
        /// </summary>
        internal static string MultilineStringConverterText {
            get {
                return ResourceManager.GetString("MultilineStringConverterText", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Only objects of type CounterCreationData can be added to a CounterCreationDataCollection..
        /// </summary>
        internal static string MustAddCounterCreationData {
            get {
                return ResourceManager.GetString("MustAddCounterCreationData", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Only TraceListeners can be added to a TraceListenerCollection..
        /// </summary>
        internal static string MustAddListener {
            get {
                return ResourceManager.GetString("MustAddListener", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Constructor only supports either a Reset, Add, or Remove action..
        /// </summary>
        internal static string MustBeResetAddOrRemoveActionForCtor {
            get {
                return ResourceManager.GetString("MustBeResetAddOrRemoveActionForCtor", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Source property was not set before opening the event log in write mode..
        /// </summary>
        internal static string NeedSourceToOpen {
            get {
                return ResourceManager.GetString("NeedSourceToOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Source property was not set before writing to the event log..
        /// </summary>
        internal static string NeedSourceToWrite {
            get {
                return ResourceManager.GetString("NeedSourceToWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Nested quantifier {0}..
        /// </summary>
        internal static string NestedQuantify {
            get {
                return ResourceManager.GetString("NestedQuantify", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &quot;Buffer and BufferList properties cannot both be non-null.&quot;;.
        /// </summary>
        internal static string net_ambiguousbuffers {
            get {
                return ResourceManager.GetString("net_ambiguousbuffers", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The target array is too small..
        /// </summary>
        internal static string net_array_too_small {
            get {
                return ResourceManager.GetString("net_array_too_small", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Authentication failed on the remote side (the stream might still be available for additional authentication attempts)..
        /// </summary>
        internal static string net_auth_alert {
            get {
                return ResourceManager.GetString("net_auth_alert", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The server has rejected the client credentials..
        /// </summary>
        internal static string net_auth_bad_client_creds {
            get {
                return ResourceManager.GetString("net_auth_bad_client_creds", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Either the target name is incorrect or the server has rejected the client credentials..
        /// </summary>
        internal static string net_auth_bad_client_creds_or_target_mismatch {
            get {
                return ResourceManager.GetString("net_auth_bad_client_creds_or_target_mismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Once authentication is attempted as the client or server, additional authentication attempts must use the same client or server role..
        /// </summary>
        internal static string net_auth_client_server {
            get {
                return ResourceManager.GetString("net_auth_client_server", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A security requirement was not fulfilled during authentication. Required: {0}, negotiated: {1}..
        /// </summary>
        internal static string net_auth_context_expectation {
            get {
                return ResourceManager.GetString("net_auth_context_expectation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A remote side security requirement was not fulfilled during authentication. Try increasing the ProtectionLevel and/or ImpersonationLevel..
        /// </summary>
        internal static string net_auth_context_expectation_remote {
            get {
                return ResourceManager.GetString("net_auth_context_expectation_remote", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Protocol error: cannot proceed with SSPI handshake because an empty blob was received..
        /// </summary>
        internal static string net_auth_empty_read {
            get {
                return ResourceManager.GetString("net_auth_empty_read", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Authentication failed because the remote party has closed the transport stream..
        /// </summary>
        internal static string net_auth_eof {
            get {
                return ResourceManager.GetString("net_auth_eof", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Authentication failed, see inner exception..
        /// </summary>
        internal static string net_auth_failure {
            get {
                return ResourceManager.GetString("net_auth_failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Re-authentication failed because the remote party continued to encrypt more than {0} bytes before answering re-authentication..
        /// </summary>
        internal static string net_auth_ignored_reauth {
            get {
                return ResourceManager.GetString("net_auth_ignored_reauth", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Protocol error: A received message contains a valid signature but it was not encrypted as required by the effective Protection Level..
        /// </summary>
        internal static string net_auth_message_not_encrypted {
            get {
                return ResourceManager.GetString("net_auth_message_not_encrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An extended protection policy must specify either a custom channel binding or a custom service name collection..
        /// </summary>
        internal static string net_auth_must_specify_extended_protection_scheme {
            get {
                return ResourceManager.GetString("net_auth_must_specify_extended_protection_scheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The TokenImpersonationLevel.Anonymous level is not supported for authentication..
        /// </summary>
        internal static string net_auth_no_anonymous_support {
            get {
                return ResourceManager.GetString("net_auth_no_anonymous_support", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This operation is only allowed using a successfully authenticated context..
        /// </summary>
        internal static string net_auth_noauth {
            get {
                return ResourceManager.GetString("net_auth_noauth", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This authenticated context does not support data encryption..
        /// </summary>
        internal static string net_auth_noencryption {
            get {
                return ResourceManager.GetString("net_auth_noencryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This operation is not allowed on a security context that has already been authenticated..
        /// </summary>
        internal static string net_auth_reauth {
            get {
                return ResourceManager.GetString("net_auth_reauth", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A call to SSPI failed, see inner exception..
        /// </summary>
        internal static string net_auth_SSPI {
            get {
                return ResourceManager.GetString("net_auth_SSPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The supported values are Identification, Impersonation or Delegation..
        /// </summary>
        internal static string net_auth_supported_impl_levels {
            get {
                return ResourceManager.GetString("net_auth_supported_impl_levels", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The supplied authentication module is not registered..
        /// </summary>
        internal static string net_authmodulenotregistered {
            get {
                return ResourceManager.GetString("net_authmodulenotregistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to There is no registered module for this authentication scheme..
        /// </summary>
        internal static string net_authschemenotregistered {
            get {
                return ResourceManager.GetString("net_authschemenotregistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An invalid IP address prefix was specified..
        /// </summary>
        internal static string net_bad_ip_address_prefix {
            get {
                return ResourceManager.GetString("net_bad_ip_address_prefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An invalid physical address was specified..
        /// </summary>
        internal static string net_bad_mac_address {
            get {
                return ResourceManager.GetString("net_bad_mac_address", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The value of the date string in the header is invalid..
        /// </summary>
        internal static string net_baddate {
            get {
                return ResourceManager.GetString("net_baddate", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot set null or blank methods on request..
        /// </summary>
        internal static string net_badmethod {
            get {
                return ResourceManager.GetString("net_badmethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &quot;The Buffer space specified by the Count property is insufficient for the AcceptAsync method.&quot;;.
        /// </summary>
        internal static string net_buffercounttoosmall {
            get {
                return ResourceManager.GetString("net_buffercounttoosmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to For this RequestCache object, {0} access is denied..
        /// </summary>
        internal static string net_cache_access_denied {
            get {
                return ResourceManager.GetString("net_cache_access_denied", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The request failed because no cache entry (CacheKey = {0}) was found and the effective CachePolicy is {1}..
        /// </summary>
        internal static string net_cache_key_failed {
            get {
                return ResourceManager.GetString("net_cache_key_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The request (Method = {0}) cannot be served from the cache and will fail because of the effective CachePolicy: {1}..
        /// </summary>
        internal static string net_cache_method_failed {
            get {
                return ResourceManager.GetString("net_cache_method_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The cache protocol returned a cached response but the cache entry is invalid because it has a null stream. (Cache Key = {0})..
        /// </summary>
        internal static string net_cache_no_stream {
            get {
                return ResourceManager.GetString("net_cache_no_stream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The transport stream instance passed in the RangeStream constructor is not seekable and therefore is not supported..
        /// </summary>
        internal static string net_cache_non_seekable_stream_not_supported {
            get {
                return ResourceManager.GetString("net_cache_non_seekable_stream_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The cache protocol refused the server response. To allow automatic request retrying, set request.AllowAutoRedirect to true..
        /// </summary>
        internal static string net_cache_not_accept_response {
            get {
                return ResourceManager.GetString("net_cache_not_accept_response", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No cache protocol is available for this request..
        /// </summary>
        internal static string net_cache_not_configured {
            get {
                return ResourceManager.GetString("net_cache_not_configured", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The cached response is not supported for a request with a content body..
        /// </summary>
        internal static string net_cache_not_supported_body {
            get {
                return ResourceManager.GetString("net_cache_not_supported_body", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The cached response is not supported for a request with the specified request method..
        /// </summary>
        internal static string net_cache_not_supported_command {
            get {
                return ResourceManager.GetString("net_cache_not_supported_command", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cache retrieve failed: {0}..
        /// </summary>
        internal static string net_cache_retrieve_failure {
            get {
                return ResourceManager.GetString("net_cache_retrieve_failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Shadow stream must be writable..
        /// </summary>
        internal static string net_cache_shadowstream_not_writable {
            get {
                return ResourceManager.GetString("net_cache_shadowstream_not_writable", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A partial content stream does not support this operation or some method argument is out of range..
        /// </summary>
        internal static string net_cache_unsupported_partial_stream {
            get {
                return ResourceManager.GetString("net_cache_unsupported_partial_stream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The validation method {0}() returned a failure for this request..
        /// </summary>
        internal static string net_cache_validator_fail {
            get {
                return ResourceManager.GetString("net_cache_validator_fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The validation method {0}() returned the unexpected status: {1}..
        /// </summary>
        internal static string net_cache_validator_result {
            get {
                return ResourceManager.GetString("net_cache_validator_result", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified value cannot be false..
        /// </summary>
        internal static string net_cannot_be_false {
            get {
                return ResourceManager.GetString("net_cannot_be_false", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to load the proxy script runtime environment from the Microsoft.JScript assembly..
        /// </summary>
        internal static string net_cannot_load_proxy_helper {
            get {
                return ResourceManager.GetString("net_cannot_load_proxy_helper", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unable to create another web proxy script environment at this time..
        /// </summary>
        internal static string net_cant_create_environment {
            get {
                return ResourceManager.GetString("net_cant_create_environment", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Can&apos;t determine OS installation type: Can&apos;t read key &apos;{0}&apos;. Exception message: {1}.
        /// </summary>
        internal static string net_cant_determine_osinstalltype {
            get {
                return ResourceManager.GetString("net_cant_determine_osinstalltype", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This operation cannot be performed while the AppDomain is shutting down..
        /// </summary>
        internal static string net_cant_perform_during_shutdown {
            get {
                return ResourceManager.GetString("net_cant_perform_during_shutdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Content-Length value must be greater than or equal to zero..
        /// </summary>
        internal static string net_clsmall {
            get {
                return ResourceManager.GetString("net_clsmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The collection is read-only..
        /// </summary>
        internal static string net_collection_readonly {
            get {
                return ResourceManager.GetString("net_collection_readonly", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This operation cannot be performed on a completed asynchronous result object..
        /// </summary>
        internal static string net_completed_result {
            get {
                return ResourceManager.GetString("net_completed_result", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error creating the modules specified in the &apos;system.net/authenticationModules&apos; configuration section..
        /// </summary>
        internal static string net_config_authenticationmodules {
            get {
                return ResourceManager.GetString("net_config_authenticationmodules", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Insufficient permissions for setting the configuration element &apos;{0}&apos;..
        /// </summary>
        internal static string net_config_element_permission {
            get {
                return ResourceManager.GetString("net_config_element_permission", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Insufficient permissions for setting the configuration property &apos;{0}&apos;..
        /// </summary>
        internal static string net_config_property_permission {
            get {
                return ResourceManager.GetString("net_config_property_permission", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error creating the Web Proxy specified in the &apos;system.net/defaultProxy&apos; configuration section..
        /// </summary>
        internal static string net_config_proxy {
            get {
                return ResourceManager.GetString("net_config_proxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified proxy module type is not public..
        /// </summary>
        internal static string net_config_proxy_module_not_public {
            get {
                return ResourceManager.GetString("net_config_proxy_module_not_public", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error creating the Web Request caching policy specified in the &apos;system.net/requestCaching&apos; configuration section..
        /// </summary>
        internal static string net_config_requestcaching {
            get {
                return ResourceManager.GetString("net_config_requestcaching", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Insufficient permissions for setting the configuration section &apos;{0}&apos;..
        /// </summary>
        internal static string net_config_section_permission {
            get {
                return ResourceManager.GetString("net_config_section_permission", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error creating the modules specified in the &apos;system.net/webRequestModules&apos; configuration section..
        /// </summary>
        internal static string net_config_webrequestmodules {
            get {
                return ResourceManager.GetString("net_config_webrequestmodules", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Keep-Alive and Close may not be set using this property..
        /// </summary>
        internal static string net_connarg {
            get {
                return ResourceManager.GetString("net_connarg", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The underlying connection was closed: {0}..
        /// </summary>
        internal static string net_connclosed {
            get {
                return ResourceManager.GetString("net_connclosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An error occurred when adding a cookie to the container..
        /// </summary>
        internal static string net_container_add_cookie {
            get {
                return ResourceManager.GetString("net_container_add_cookie", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to When performing a write operation with AllowWriteStreamBuffering set to false, you must either set ContentLength to a non-negative number or set SendChunked to true..
        /// </summary>
        internal static string net_contentlengthmissing {
            get {
                return ResourceManager.GetString("net_contentlengthmissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;{0}&apos;=&apos;{1}&apos; part of the cookie is invalid..
        /// </summary>
        internal static string net_cookie_attribute {
            get {
                return ResourceManager.GetString("net_cookie_attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &apos;{0}&apos; has to be greater than &apos;{1}&apos; and less than &apos;{2}&apos;..
        /// </summary>
        internal static string net_cookie_capacity_range {
            get {
                return ResourceManager.GetString("net_cookie_capacity_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cookie already exists..
        /// </summary>
        internal static string net_cookie_exists {
            get {
                return ResourceManager.GetString("net_cookie_exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cookie format error..
        /// </summary>
        internal static string net_cookie_format {
            get {
                return ResourceManager.GetString("net_cookie_format", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid contents for cookie = &apos;{0}&apos;..
        /// </summary>
        internal static string net_cookie_invalid {
            get {
                return ResourceManager.GetString("net_cookie_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An error occurred when parsing the Cookie header for Uri &apos;{0}&apos;..
        /// </summary>
        internal static string net_cookie_parse_header {
            get {
                return ResourceManager.GetString("net_cookie_parse_header", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The value size of the cookie is &apos;{0}&apos;. This exceeds the configured maximum size, which is &apos;{1}&apos;..
        /// </summary>
        internal static string net_cookie_size {
            get {
                return ResourceManager.GetString("net_cookie_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Registry value &apos;{0}&apos; was either empty or not a string type..
        /// </summary>
        internal static string net_empty_osinstalltype {
            get {
                return ResourceManager.GetString("net_empty_osinstalltype", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The parameter &apos;{0}&apos; cannot be an empty string..
        /// </summary>
        internal static string net_emptystringcall {
            get {
                return ResourceManager.GetString("net_emptystringcall", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This property cannot be set to an empty string..
        /// </summary>
        internal static string net_emptystringset {
            get {
                return ResourceManager.GetString("net_emptystringset", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to You must write ContentLength bytes to the request stream before calling [Begin]GetResponse..
        /// </summary>
        internal static string net_entire_body_not_written {
            get {
                return ResourceManager.GetString("net_entire_body_not_written", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Bytes to be written to the stream exceed the Content-Length bytes size specified..
        /// </summary>
        internal static string net_entitytoobig {
            get {
                return ResourceManager.GetString("net_entitytoobig", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The shell expression &apos;{0}&apos; could not be parsed because it is formatted incorrectly..
        /// </summary>
        internal static string net_format_shexp {
            get {
                return ResourceManager.GetString("net_format_shexp", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The payload size is limited to {0}, attempted set it to {1}..
        /// </summary>
        internal static string net_frame_max_size {
            get {
                return ResourceManager.GetString("net_frame_max_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Received incomplete authentication message. Remote party has probably closed the connection..
        /// </summary>
        internal static string net_frame_read_io {
            get {
                return ResourceManager.GetString("net_frame_read_io", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot determine the frame size or a corrupted frame was received..
        /// </summary>
        internal static string net_frame_read_size {
            get {
                return ResourceManager.GetString("net_frame_read_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Received an invalid authentication frame. The message size is limited to {0} bytes, attempted to read {1} bytes..
        /// </summary>
        internal static string net_frame_size {
            get {
                return ResourceManager.GetString("net_frame_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The From parameter cannot be less than To..
        /// </summary>
        internal static string net_fromto {
            get {
                return ResourceManager.GetString("net_fromto", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The data connection was made from an address that is different than the address to which the FTP connection was made..
        /// </summary>
        internal static string net_ftp_active_address_different {
            get {
                return ResourceManager.GetString("net_ftp_active_address_different", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to FTP Method names cannot be null or empty..
        /// </summary>
        internal static string net_ftp_invalid_method_name {
            get {
                return ResourceManager.GetString("net_ftp_invalid_method_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The RenameTo filename cannot be null or empty..
        /// </summary>
        internal static string net_ftp_invalid_renameto {
            get {
                return ResourceManager.GetString("net_ftp_invalid_renameto", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The server returned the filename ({0}) which is not valid..
        /// </summary>
        internal static string net_ftp_invalid_response_filename {
            get {
                return ResourceManager.GetString("net_ftp_invalid_response_filename", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The status response ({0}) is not expected in response to &apos;{1}&apos; command..
        /// </summary>
        internal static string net_ftp_invalid_status_response {
            get {
                return ResourceManager.GetString("net_ftp_invalid_status_response", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The requested URI is invalid for this FTP command..
        /// </summary>
        internal static string net_ftp_invalid_uri {
            get {
                return ResourceManager.GetString("net_ftp_invalid_uri", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Default credentials are not supported on an FTP request..
        /// </summary>
        internal static string net_ftp_no_defaultcreds {
            get {
                return ResourceManager.GetString("net_ftp_no_defaultcreds", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The requested FTP command is not supported when using HTTP proxy..
        /// </summary>
        internal static string net_ftp_no_http_cmd {
            get {
                return ResourceManager.GetString("net_ftp_no_http_cmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Offsets are not supported when sending an FTP request over an HTTP proxy..
        /// </summary>
        internal static string net_ftp_no_offsetforhttp {
            get {
                return ResourceManager.GetString("net_ftp_no_offsetforhttp", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SSL cannot be enabled when using a proxy..
        /// </summary>
        internal static string net_ftp_proxy_does_not_support_ssl {
            get {
                return ResourceManager.GetString("net_ftp_proxy_does_not_support_ssl", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The response string &apos;{0}&apos; has invalid format..
        /// </summary>
        internal static string net_ftp_response_invalid_format {
            get {
                return ResourceManager.GetString("net_ftp_response_invalid_format", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The server failed the passive mode request with status response ({0})..
        /// </summary>
        internal static string net_ftp_server_failed_passive {
            get {
                return ResourceManager.GetString("net_ftp_server_failed_passive", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This method is not supported..
        /// </summary>
        internal static string net_ftp_unsupported_method {
            get {
                return ResourceManager.GetString("net_ftp_unsupported_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This type of FTP request does not return a response stream..
        /// </summary>
        internal static string net_ftpnoresponse {
            get {
                return ResourceManager.GetString("net_ftpnoresponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Need account for storing files.
        /// </summary>
        internal static string net_ftpstatuscode_AccountNeeded {
            get {
                return ResourceManager.GetString("net_ftpstatuscode_AccountNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Local error in processing.
        /// </summary>
        internal static string net_ftpstatuscode_ActionAbortedLocalProcessingError {
            get {
                return ResourceManager.GetString("net_ftpstatuscode_ActionAbortedLocalProcessingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Page type unknown.
        /// </summary>
        internal static string net_ftpstatuscode_ActionAbortedUnknownPageType {
            get {
                return ResourceManager.GetString("net_ftpstatuscode_ActionAbortedUnknownPageType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to File name not allowed.
        /// </summary>
        internal static string net_ftpstatuscode_ActionNotTakenFilenameNotAllowed {
            get {
                return ResourceManager.GetString("net_ftpstatuscode_ActionNotTakenFilenameNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to File unavailable (e.g., file not found, no access).
        /// </summary>
        internal static string net_ftpstatuscode_ActionNotTakenFileUnavailable {
            get {
                return ResourceManager.GetString("net_ftpstatuscode_ActionNotTakenFileUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to File unavailable (e.g., file busy).
        /// </summary>
        internal static string net_ftpstatuscode_ActionNotTakenFileUnavailableOrBusy {
            get {
                return ResourceManager.GetString("net_ftpstatuscode_ActionNotTakenFileUnavailableOrBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Insufficient storage space in system.
        /// </summary>
        internal static string net_ftpstatuscode_ActionNotTakenInsufficentSpace {
            get {
                return ResourceManager.GetString("net_ftpstatuscode_ActionNotTakenInsufficentSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Syntax error in parameters or arguments.
        /// </summary>
        internal static string net_ftpstatuscode_ArgumentSyntaxError {
            get {
                return ResourceManager.GetString("net_ftpstatuscode_ArgumentSyntaxError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Bad sequence of commands.
        /// </summary>
        internal static string net_ftpstatuscode_BadCommandSequence {
            get {
                return ResourceManager.GetString("net_ftpstatuscode_BadCommandSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Can&apos;t open data connection.
        /// </summary>
        internal static string net_ftpstatuscode_CantOpenData {
            get {
                return ResourceManager.GetString("net_ftpstatuscode_CantOpenData", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Command not implemented.
        /// </summary>
        internal static string net_ftpstatuscode_CommandNotImplemented {
            get {
                return ResourceManager.GetString("net_ftpstatuscode_CommandNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Syntax error, command unrecognized.
        /// </summary>
        internal static string net_ftpstatuscode_CommandSyntaxError {
            get {
                return ResourceManager.GetString("net_ftpstatuscode_CommandSyntaxError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Connection closed; transfer aborted.
        /// </summary>
        internal static string net_ftpstatuscode_ConnectionClosed {
            get {
                return ResourceManager.GetString("net_ftpstatuscode_ConnectionClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Exceeded storage allocation (for current directory or data set).
        /// </summary>
        internal static string net_ftpstatuscode_FileActionAborted {
            get {
                return ResourceManager.GetString("net_ftpstatuscode_FileActionAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Not logged in.
        /// </summary>
        internal static string net_ftpstatuscode_NotLoggedIn {
            get {
                return ResourceManager.GetString("net_ftpstatuscode_NotLoggedIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Service not available, closing control connection.
        /// </summary>
        internal static string net_ftpstatuscode_ServiceNotAvailable {
            get {
                return ResourceManager.GetString("net_ftpstatuscode_ServiceNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;{0}&apos; header must be modified using the appropriate property or method..
        /// </summary>
        internal static string net_headerrestrict {
            get {
                return ResourceManager.GetString("net_headerrestrict", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This collection holds response headers and cannot contain the specified request header..
        /// </summary>
        internal static string net_headers_req {
            get {
                return ResourceManager.GetString("net_headers_req", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This collection holds request headers and cannot contain the specified response header..
        /// </summary>
        internal static string net_headers_rsp {
            get {
                return ResourceManager.GetString("net_headers_rsp", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Header values cannot be longer than {0} characters..
        /// </summary>
        internal static string net_headers_toolong {
            get {
                return ResourceManager.GetString("net_headers_toolong", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Ambiguous Redirect.
        /// </summary>
        internal static string net_httpstatuscode_Ambiguous {
            get {
                return ResourceManager.GetString("net_httpstatuscode_Ambiguous", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Bad Gateway.
        /// </summary>
        internal static string net_httpstatuscode_BadGateway {
            get {
                return ResourceManager.GetString("net_httpstatuscode_BadGateway", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Bad Request.
        /// </summary>
        internal static string net_httpstatuscode_BadRequest {
            get {
                return ResourceManager.GetString("net_httpstatuscode_BadRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Conflict.
        /// </summary>
        internal static string net_httpstatuscode_Conflict {
            get {
                return ResourceManager.GetString("net_httpstatuscode_Conflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Forbidden.
        /// </summary>
        internal static string net_httpstatuscode_Forbidden {
            get {
                return ResourceManager.GetString("net_httpstatuscode_Forbidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Found Redirect.
        /// </summary>
        internal static string net_httpstatuscode_Found {
            get {
                return ResourceManager.GetString("net_httpstatuscode_Found", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Gateway Timeout.
        /// </summary>
        internal static string net_httpstatuscode_GatewayTimeout {
            get {
                return ResourceManager.GetString("net_httpstatuscode_GatewayTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Gone.
        /// </summary>
        internal static string net_httpstatuscode_Gone {
            get {
                return ResourceManager.GetString("net_httpstatuscode_Gone", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Http Version Not Supported.
        /// </summary>
        internal static string net_httpstatuscode_HttpVersionNotSupported {
            get {
                return ResourceManager.GetString("net_httpstatuscode_HttpVersionNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Internal Server Error.
        /// </summary>
        internal static string net_httpstatuscode_InternalServerError {
            get {
                return ResourceManager.GetString("net_httpstatuscode_InternalServerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Length Required.
        /// </summary>
        internal static string net_httpstatuscode_LengthRequired {
            get {
                return ResourceManager.GetString("net_httpstatuscode_LengthRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Method Not Allowed.
        /// </summary>
        internal static string net_httpstatuscode_MethodNotAllowed {
            get {
                return ResourceManager.GetString("net_httpstatuscode_MethodNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Moved Redirect.
        /// </summary>
        internal static string net_httpstatuscode_Moved {
            get {
                return ResourceManager.GetString("net_httpstatuscode_Moved", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Moved Permanently Redirect.
        /// </summary>
        internal static string net_httpstatuscode_MovedPermanently {
            get {
                return ResourceManager.GetString("net_httpstatuscode_MovedPermanently", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Multiple Choices Redirect.
        /// </summary>
        internal static string net_httpstatuscode_MultipleChoices {
            get {
                return ResourceManager.GetString("net_httpstatuscode_MultipleChoices", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No Content.
        /// </summary>
        internal static string net_httpstatuscode_NoContent {
            get {
                return ResourceManager.GetString("net_httpstatuscode_NoContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Non Authoritative Information.
        /// </summary>
        internal static string net_httpstatuscode_NonAuthoritativeInformation {
            get {
                return ResourceManager.GetString("net_httpstatuscode_NonAuthoritativeInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Not Acceptable.
        /// </summary>
        internal static string net_httpstatuscode_NotAcceptable {
            get {
                return ResourceManager.GetString("net_httpstatuscode_NotAcceptable", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Not Found.
        /// </summary>
        internal static string net_httpstatuscode_NotFound {
            get {
                return ResourceManager.GetString("net_httpstatuscode_NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Not Implemented.
        /// </summary>
        internal static string net_httpstatuscode_NotImplemented {
            get {
                return ResourceManager.GetString("net_httpstatuscode_NotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Not Modified.
        /// </summary>
        internal static string net_httpstatuscode_NotModified {
            get {
                return ResourceManager.GetString("net_httpstatuscode_NotModified", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Partial Content.
        /// </summary>
        internal static string net_httpstatuscode_PartialContent {
            get {
                return ResourceManager.GetString("net_httpstatuscode_PartialContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Payment Required.
        /// </summary>
        internal static string net_httpstatuscode_PaymentRequired {
            get {
                return ResourceManager.GetString("net_httpstatuscode_PaymentRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Proxy Authentication Required.
        /// </summary>
        internal static string net_httpstatuscode_ProxyAuthenticationRequired {
            get {
                return ResourceManager.GetString("net_httpstatuscode_ProxyAuthenticationRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Redirect.
        /// </summary>
        internal static string net_httpstatuscode_Redirect {
            get {
                return ResourceManager.GetString("net_httpstatuscode_Redirect", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Redirect Keep Verb.
        /// </summary>
        internal static string net_httpstatuscode_RedirectKeepVerb {
            get {
                return ResourceManager.GetString("net_httpstatuscode_RedirectKeepVerb", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Redirect Method.
        /// </summary>
        internal static string net_httpstatuscode_RedirectMethod {
            get {
                return ResourceManager.GetString("net_httpstatuscode_RedirectMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Request Timeout.
        /// </summary>
        internal static string net_httpstatuscode_RequestTimeout {
            get {
                return ResourceManager.GetString("net_httpstatuscode_RequestTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Reset Content.
        /// </summary>
        internal static string net_httpstatuscode_ResetContent {
            get {
                return ResourceManager.GetString("net_httpstatuscode_ResetContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to See Other.
        /// </summary>
        internal static string net_httpstatuscode_SeeOther {
            get {
                return ResourceManager.GetString("net_httpstatuscode_SeeOther", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Server Unavailable.
        /// </summary>
        internal static string net_httpstatuscode_ServiceUnavailable {
            get {
                return ResourceManager.GetString("net_httpstatuscode_ServiceUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Temporary Redirect.
        /// </summary>
        internal static string net_httpstatuscode_TemporaryRedirect {
            get {
                return ResourceManager.GetString("net_httpstatuscode_TemporaryRedirect", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unauthorized.
        /// </summary>
        internal static string net_httpstatuscode_Unauthorized {
            get {
                return ResourceManager.GetString("net_httpstatuscode_Unauthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Use Proxy Redirect.
        /// </summary>
        internal static string net_httpstatuscode_UseProxy {
            get {
                return ResourceManager.GetString("net_httpstatuscode_UseProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;{0}&apos; attribute cannot appear when &apos;{1}&apos; is present..
        /// </summary>
        internal static string net_illegalConfigWith {
            get {
                return ResourceManager.GetString("net_illegalConfigWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;{0}&apos; attribute can only appear when &apos;{1}&apos; is present..
        /// </summary>
        internal static string net_illegalConfigWithout {
            get {
                return ResourceManager.GetString("net_illegalConfigWithout", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An asynchronous call is already in progress. It must be completed or canceled before you can call this method..
        /// </summary>
        internal static string net_inasync {
            get {
                return ResourceManager.GetString("net_inasync", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid cast from {0} to {1}..
        /// </summary>
        internal static string net_invalid_cast {
            get {
                return ResourceManager.GetString("net_invalid_cast", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified value is not valid in the &apos;{0}&apos; enumeration..
        /// </summary>
        internal static string net_invalid_enum {
            get {
                return ResourceManager.GetString("net_invalid_enum", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified value is not a valid Host header string..
        /// </summary>
        internal static string net_invalid_host {
            get {
                return ResourceManager.GetString("net_invalid_host", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to IPv4 address 0.0.0.0 and IPv6 address ::0 are unspecified addresses that cannot be used as a target address..
        /// </summary>
        internal static string net_invalid_ip_addr {
            get {
                return ResourceManager.GetString("net_invalid_ip_addr", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Value of offset cannot be negative or greater than the length of the buffer..
        /// </summary>
        internal static string net_invalid_offset {
            get {
                return ResourceManager.GetString("net_invalid_offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The AddressFamily {0} is not valid for the {1} end point, use {2} instead..
        /// </summary>
        internal static string net_InvalidAddressFamily {
            get {
                return ResourceManager.GetString("net_InvalidAddressFamily", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to None of the discovered or specified addresses match the socket address family..
        /// </summary>
        internal static string net_invalidAddressList {
            get {
                return ResourceManager.GetString("net_invalidAddressList", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The supplied EndPoint of AddressFamily {0} is not valid for this Socket, use {1} instead..
        /// </summary>
        internal static string net_InvalidEndPointAddressFamily {
            get {
                return ResourceManager.GetString("net_InvalidEndPointAddressFamily", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The buffer length must not exceed 65500 bytes..
        /// </summary>
        internal static string net_invalidPingBufferSize {
            get {
                return ResourceManager.GetString("net_invalidPingBufferSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The supplied {0} is an invalid size for the {1} end point..
        /// </summary>
        internal static string net_InvalidSocketAddressSize {
            get {
                return ResourceManager.GetString("net_InvalidSocketAddressSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The socket handle is not valid..
        /// </summary>
        internal static string net_InvalidSocketHandle {
            get {
                return ResourceManager.GetString("net_InvalidSocketHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The status code must be exactly three digits..
        /// </summary>
        internal static string net_invalidstatus {
            get {
                return ResourceManager.GetString("net_invalidstatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The server returned a status code outside the valid range of 100-599..
        /// </summary>
        internal static string net_InvalidStatusCode {
            get {
                return ResourceManager.GetString("net_InvalidStatusCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This protocol version is not supported..
        /// </summary>
        internal static string net_invalidversion {
            get {
                return ResourceManager.GetString("net_invalidversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot block a call on this socket while an earlier asynchronous call is in progress..
        /// </summary>
        internal static string net_invasync {
            get {
                return ResourceManager.GetString("net_invasync", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The parameter: {0} is not valid. Use the object returned from corresponding Begin async call..
        /// </summary>
        internal static string net_io_async_result {
            get {
                return ResourceManager.GetString("net_io_async_result", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The socket has already been bound to an io completion port..
        /// </summary>
        internal static string net_io_completionportwasbound {
            get {
                return ResourceManager.GetString("net_io_completionportwasbound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The connection was closed.
        /// </summary>
        internal static string net_io_connectionclosed {
            get {
                return ResourceManager.GetString("net_io_connectionclosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The decryption operation failed, see inner exception..
        /// </summary>
        internal static string net_io_decrypt {
            get {
                return ResourceManager.GetString("net_io_decrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The encryption operation failed, see inner exception..
        /// </summary>
        internal static string net_io_encrypt {
            get {
                return ResourceManager.GetString("net_io_encrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Received an unexpected EOF or 0 bytes from the transport stream..
        /// </summary>
        internal static string net_io_eof {
            get {
                return ResourceManager.GetString("net_io_eof", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Found a wrong header field {0} read = {1}, expected = {2}..
        /// </summary>
        internal static string net_io_header_id {
            get {
                return ResourceManager.GetString("net_io_header_id", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Internal Error: A socket handle could not be bound to a completion port..
        /// </summary>
        internal static string net_io_internal_bind {
            get {
                return ResourceManager.GetString("net_io_internal_bind", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The IAsyncResult object was not returned from the corresponding asynchronous method on this class..
        /// </summary>
        internal static string net_io_invalidasyncresult {
            get {
                return ResourceManager.GetString("net_io_invalidasyncresult", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} can only be called once for each asynchronous operation..
        /// </summary>
        internal static string net_io_invalidendcall {
            get {
                return ResourceManager.GetString("net_io_invalidendcall", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The {0} method cannot be called when another {1} operation is pending..
        /// </summary>
        internal static string net_io_invalidnestedcall {
            get {
                return ResourceManager.GetString("net_io_invalidnestedcall", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The stream has to be read/write..
        /// </summary>
        internal static string net_io_must_be_rw_stream {
            get {
                return ResourceManager.GetString("net_io_must_be_rw_stream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to NetworkStream does not support a 0 millisecond timeout, use a value greater than zero for the timeout instead..
        /// </summary>
        internal static string net_io_no_0timeouts {
            get {
                return ResourceManager.GetString("net_io_no_0timeouts", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot close stream until all bytes are written..
        /// </summary>
        internal static string net_io_notenoughbyteswritten {
            get {
                return ResourceManager.GetString("net_io_notenoughbyteswritten", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The byte count must not exceed {0} bytes for this stream type..
        /// </summary>
        internal static string net_io_out_range {
            get {
                return ResourceManager.GetString("net_io_out_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The read operation failed, see inner exception..
        /// </summary>
        internal static string net_io_read {
            get {
                return ResourceManager.GetString("net_io_read", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unable to read data from the transport connection: {0}..
        /// </summary>
        internal static string net_io_readfailure {
            get {
                return ResourceManager.GetString("net_io_readfailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Timeout can be only be set to &apos;System.Threading.Timeout.Infinite&apos; or a value &gt;= 0..
        /// </summary>
        internal static string net_io_timeout_use_ge_zero {
            get {
                return ResourceManager.GetString("net_io_timeout_use_ge_zero", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Timeout can be only be set to &apos;System.Threading.Timeout.Infinite&apos; or a value &gt; 0..
        /// </summary>
        internal static string net_io_timeout_use_gt_zero {
            get {
                return ResourceManager.GetString("net_io_timeout_use_gt_zero", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unable to create a transport connection..
        /// </summary>
        internal static string net_io_transportfailure {
            get {
                return ResourceManager.GetString("net_io_transportfailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The write operation failed, see inner exception..
        /// </summary>
        internal static string net_io_write {
            get {
                return ResourceManager.GetString("net_io_write", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unable to write data to the transport connection: {0}..
        /// </summary>
        internal static string net_io_writefailure {
            get {
                return ResourceManager.GetString("net_io_writefailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to IPv4 is not installed..
        /// </summary>
        internal static string net_ipv4_not_installed {
            get {
                return ResourceManager.GetString("net_ipv4_not_installed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to IPv6 is not installed..
        /// </summary>
        internal static string net_ipv6_not_installed {
            get {
                return ResourceManager.GetString("net_ipv6_not_installed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The proxy JScript file threw an exception while being initialized: {0}..
        /// </summary>
        internal static string net_jscript_load {
            get {
                return ResourceManager.GetString("net_jscript_load", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to listen on prefix &apos;{0}&apos; because it conflicts with an existing registration on the machine..
        /// </summary>
        internal static string net_listener_already {
            get {
                return ResourceManager.GetString("net_listener_already", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot re-call {0} while a previous call is still in progress..
        /// </summary>
        internal static string net_listener_callinprogress {
            get {
                return ResourceManager.GetString("net_listener_callinprogress", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Custom channel bindings are not supported..
        /// </summary>
        internal static string net_listener_cannot_set_custom_cbt {
            get {
                return ResourceManager.GetString("net_listener_cannot_set_custom_cbt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to HTTP.SYS doesn&apos;t support extended protection. Please install the latest HTTP.SYS update..
        /// </summary>
        internal static string net_listener_cbt_not_supported {
            get {
                return ResourceManager.GetString("net_listener_cbt_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Can&apos;t close Url group. Status code: {0}..
        /// </summary>
        internal static string net_listener_close_urlgroup_error {
            get {
                return ResourceManager.GetString("net_listener_close_urlgroup_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Can&apos;t detach Url group from request queue. Status code: {0}..
        /// </summary>
        internal static string net_listener_detach_error {
            get {
                return ResourceManager.GetString("net_listener_detach_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Only Uri prefixes with a valid hostname are supported..
        /// </summary>
        internal static string net_listener_host {
            get {
                return ResourceManager.GetString("net_listener_host", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Querying the {0} Channel Binding is not supported..
        /// </summary>
        internal static string net_listener_invalid_cbt_type {
            get {
                return ResourceManager.GetString("net_listener_invalid_cbt_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Please call the {0} method before calling this method..
        /// </summary>
        internal static string net_listener_mustcall {
            get {
                return ResourceManager.GetString("net_listener_mustcall", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The in-progress method {0} must be completed first..
        /// </summary>
        internal static string net_listener_mustcompletecall {
            get {
                return ResourceManager.GetString("net_listener_mustcompletecall", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No service names could be determined from the registered prefixes. Either add prefixes from which default service names can be derived or specify an ExtendedProtectionPolicy object which contains an explicit list of service names..
        /// </summary>
        internal static string net_listener_no_spns {
            get {
                return ResourceManager.GetString("net_listener_no_spns", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This method cannot be called twice..
        /// </summary>
        internal static string net_listener_repcall {
            get {
                return ResourceManager.GetString("net_listener_repcall", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Only Uri prefixes starting with &apos;http://&apos; or &apos;https://&apos; are supported..
        /// </summary>
        internal static string net_listener_scheme {
            get {
                return ResourceManager.GetString("net_listener_scheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Only Uri prefixes ending in &apos;/&apos; are allowed..
        /// </summary>
        internal static string net_listener_slash {
            get {
                return ResourceManager.GetString("net_listener_slash", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Attempting to restart the session using the user-provided certificate: {0}..
        /// </summary>
        internal static string net_log_attempting_restart_using_cert {
            get {
                return ResourceManager.GetString("net_log_attempting_restart_using_cert", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The challenge string is not valid for this authentication module: {0}.
        /// </summary>
        internal static string net_log_auth_invalid_challenge {
            get {
                return ResourceManager.GetString("net_log_auth_invalid_challenge", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Buffered {0} bytes..
        /// </summary>
        internal static string net_log_buffered_n_bytes {
            get {
                return ResourceManager.GetString("net_log_buffered_n_bytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A 206 Response has been received and either ETag or Last-Modified header value does not match cache entry..
        /// </summary>
        internal static string net_log_cache_206_resp_non_matching_entry {
            get {
                return ResourceManager.GetString("net_log_cache_206_resp_non_matching_entry", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The starting position for 206 Response is not adjusted to the end of cache entry..
        /// </summary>
        internal static string net_log_cache_206_resp_starting_position_not_adjusted {
            get {
                return ResourceManager.GetString("net_log_cache_206_resp_starting_position_not_adjusted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A 304 response resulted from a HEAD request has different Last-Modified header..
        /// </summary>
        internal static string net_log_cache_304_head_resp_has_different_last_modified {
            get {
                return ResourceManager.GetString("net_log_cache_304_head_resp_has_different_last_modified", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to 304 response was received on an unconditional request..
        /// </summary>
        internal static string net_log_cache_304_received_on_unconditional_request {
            get {
                return ResourceManager.GetString("net_log_cache_304_received_on_unconditional_request", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to 304 response was received on an unconditional request, but expected response code is 200 or 206..
        /// </summary>
        internal static string net_log_cache_304_received_on_unconditional_request_expected_200_206 {
            get {
                return ResourceManager.GetString("net_log_cache_304_received_on_unconditional_request_expected_200_206", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Accept this response base on the retry count = {0}..
        /// </summary>
        internal static string net_log_cache_accept_based_on_retry_count {
            get {
                return ResourceManager.GetString("net_log_cache_accept_based_on_retry_count", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to After Response Cache Validation..
        /// </summary>
        internal static string net_log_cache_after_validation {
            get {
                return ResourceManager.GetString("net_log_cache_after_validation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cache Age = {0}, Cache MaxAge = {1}..
        /// </summary>
        internal static string net_log_cache_age {
            get {
                return ResourceManager.GetString("net_log_cache_age", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to [Age1] Now - LastSynchronized = [Age1] Now - LastSynchronized = {0}, Last Synchronized: {1}..
        /// </summary>
        internal static string net_log_cache_age1 {
            get {
                return ResourceManager.GetString("net_log_cache_age1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to [Age1] NowTime-Date Header = {0}, Date Header: {1}..
        /// </summary>
        internal static string net_log_cache_age1_date_header {
            get {
                return ResourceManager.GetString("net_log_cache_age1_date_header", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to [Age1] Now - LastSynchronized + AgeHeader = {0}, Last Synchronized: {1}..
        /// </summary>
        internal static string net_log_cache_age1_last_synchronized {
            get {
                return ResourceManager.GetString("net_log_cache_age1_last_synchronized", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to [Age1] Now - LastSynchronized + AgeHeader = {0}, Last Synchronized: {1}, Age Header: {2}..
        /// </summary>
        internal static string net_log_cache_age1_last_synchronized_age_header {
            get {
                return ResourceManager.GetString("net_log_cache_age1_last_synchronized_age_header", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to [Age2] AgeHeader = {0}..
        /// </summary>
        internal static string net_log_cache_age2 {
            get {
                return ResourceManager.GetString("net_log_cache_age2", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Request carries Authorization Header and no s-maxage, proxy-revalidate or public directive found..
        /// </summary>
        internal static string net_log_cache_auth_header_and_no_s_max_age {
            get {
                return ResourceManager.GetString("net_log_cache_auth_header_and_no_s_max_age", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cache Cache-Control = {0}..
        /// </summary>
        internal static string net_log_cache_cache_control {
            get {
                return ResourceManager.GetString("net_log_cache_cache_control", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid CacheControl header = {0}..
        /// </summary>
        internal static string net_log_cache_cache_control_error {
            get {
                return ResourceManager.GetString("net_log_cache_cache_control_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cache    LastModified={0},  ContentLength= {1}..
        /// </summary>
        internal static string net_log_cache_cache_last_modified {
            get {
                return ResourceManager.GetString("net_log_cache_cache_last_modified", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The cached entry has Authorization Header and cache is not fresh..
        /// </summary>
        internal static string net_log_cache_cached_auth_header {
            get {
                return ResourceManager.GetString("net_log_cache_cached_auth_header", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The cached entry has Authorization Header and no Cache-Control directive present that would allow to use that entry..
        /// </summary>
        internal static string net_log_cache_cached_auth_header_no_control_directive {
            get {
                return ResourceManager.GetString("net_log_cache_cached_auth_header_no_control_directive", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A Conditional Range request cannot be constructed..
        /// </summary>
        internal static string net_log_cache_cannot_construct_conditional_range_request {
            get {
                return ResourceManager.GetString("net_log_cache_cannot_construct_conditional_range_request", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A Conditional Request cannot be constructed..
        /// </summary>
        internal static string net_log_cache_cannot_construct_conditional_request {
            get {
                return ResourceManager.GetString("net_log_cache_cannot_construct_conditional_request", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} Cannot Remove (throw): Key = {1}, Error = {2}..
        /// </summary>
        internal static string net_log_cache_cannot_remove {
            get {
                return ResourceManager.GetString("net_log_cache_cannot_remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot update cache if Response status == 304 and a cache entry was not found..
        /// </summary>
        internal static string net_log_cache_cannot_update_cache_if_304 {
            get {
                return ResourceManager.GetString("net_log_cache_cannot_update_cache_if_304", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot update cache with HEAD response if the cache entry does not exist..
        /// </summary>
        internal static string net_log_cache_cannot_update_cache_with_head_resp {
            get {
                return ResourceManager.GetString("net_log_cache_cannot_update_cache_with_head_resp", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}: {1} Closing effective cache stream, type = {2}, cache entry key = {3}..
        /// </summary>
        internal static string net_log_cache_closing_cache_stream {
            get {
                return ResourceManager.GetString("net_log_cache_closing_cache_stream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Creation of a combined response has been requested from the cache protocol..
        /// </summary>
        internal static string net_log_cache_combined_resp_requested {
            get {
                return ResourceManager.GetString("net_log_cache_combined_resp_requested", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}, Key = {1}, Commit operation failed -&gt; {2}..
        /// </summary>
        internal static string net_log_cache_commit_failed {
            get {
                return ResourceManager.GetString("net_log_cache_commit_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}, Key = {1}, Committed entry as partial, not cached bytes count = {2}..
        /// </summary>
        internal static string net_log_cache_committed_as_partial {
            get {
                return ResourceManager.GetString("net_log_cache_committed_as_partial", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Request Condition = If-Modified-Since:{0}..
        /// </summary>
        internal static string net_log_cache_condition_if_modified_since {
            get {
                return ResourceManager.GetString("net_log_cache_condition_if_modified_since", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Request Condition = If-None-Match:{0}..
        /// </summary>
        internal static string net_log_cache_condition_if_none_match {
            get {
                return ResourceManager.GetString("net_log_cache_condition_if_none_match", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Request Condition = If-Range:{0}..
        /// </summary>
        internal static string net_log_cache_condition_if_range {
            get {
                return ResourceManager.GetString("net_log_cache_condition_if_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A Conditional Range request on Http &lt;= 1.0 is not implemented..
        /// </summary>
        internal static string net_log_cache_conditional_range_not_implemented_on_http_10 {
            get {
                return ResourceManager.GetString("net_log_cache_conditional_range_not_implemented_on_http_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid format of Response Content-Range:{0}..
        /// </summary>
        internal static string net_log_cache_content_range_error {
            get {
                return ResourceManager.GetString("net_log_cache_content_range_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cached CacheControl = must-revalidate and Cache is not fresh..
        /// </summary>
        internal static string net_log_cache_control_must_revalidate {
            get {
                return ResourceManager.GetString("net_log_cache_control_must_revalidate", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cached CacheControl = no-cache..
        /// </summary>
        internal static string net_log_cache_control_no_cache {
            get {
                return ResourceManager.GetString("net_log_cache_control_no_cache", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cached CacheControl = no-cache, Removing some headers..
        /// </summary>
        internal static string net_log_cache_control_no_cache_removing_some_headers {
            get {
                return ResourceManager.GetString("net_log_cache_control_no_cache_removing_some_headers", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Could be a Partial Cached Response, Size = {0}, Response Content Length = {1}..
        /// </summary>
        internal static string net_log_cache_could_be_partial {
            get {
                return ResourceManager.GetString("net_log_cache_could_be_partial", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Create operation failed -&gt; {0}..
        /// </summary>
        internal static string net_log_cache_create_failed {
            get {
                return ResourceManager.GetString("net_log_cache_create_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Response Date header value is older than that of the cache entry..
        /// </summary>
        internal static string net_log_cache_date_header_older_than_cache_entry {
            get {
                return ResourceManager.GetString("net_log_cache_date_header_older_than_cache_entry", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}, Key = {1}, Delete operation failed -&gt; {2}..
        /// </summary>
        internal static string net_log_cache_delete_failed {
            get {
                return ResourceManager.GetString("net_log_cache_delete_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Disable MaxStale (set to 0)..
        /// </summary>
        internal static string net_log_cache_disable_max_stale {
            get {
                return ResourceManager.GetString("net_log_cache_disable_max_stale", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Do not update Cached Headers..
        /// </summary>
        internal static string net_log_cache_dont_update_cached_headers {
            get {
                return ResourceManager.GetString("net_log_cache_dont_update_cached_headers", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to ...Dumping....
        /// </summary>
        internal static string net_log_cache_dumping {
            get {
                return ResourceManager.GetString("net_log_cache_dumping", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to ...Dumping Cache Context....
        /// </summary>
        internal static string net_log_cache_dumping_cache_context {
            get {
                return ResourceManager.GetString("net_log_cache_dumping_cache_context", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to ...Dumping Metadata....
        /// </summary>
        internal static string net_log_cache_dumping_metadata {
            get {
                return ResourceManager.GetString("net_log_cache_dumping_metadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Enable MaxStale (sec) ={0}..
        /// </summary>
        internal static string net_log_cache_enable_max_stale {
            get {
                return ResourceManager.GetString("net_log_cache_enable_max_stale", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}, Cache Entry not found, freshness result = Undefined..
        /// </summary>
        internal static string net_log_cache_entry_not_found_freshness_undefined {
            get {
                return ResourceManager.GetString("net_log_cache_entry_not_found_freshness_undefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cached Entry Size = {0} is too big, cannot do a range request..
        /// </summary>
        internal static string net_log_cache_entry_size_too_big {
            get {
                return ResourceManager.GetString("net_log_cache_entry_size_too_big", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}, Error deleting a Filename = {1}..
        /// </summary>
        internal static string net_log_cache_error_deleting_filename {
            get {
                return ResourceManager.GetString("net_log_cache_error_deleting_filename", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}, Exception = {1}..
        /// </summary>
        internal static string net_log_cache_exception {
            get {
                return ResourceManager.GetString("net_log_cache_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}: an exception (ignored) on {1} = {2}..
        /// </summary>
        internal static string net_log_cache_exception_ignored {
            get {
                return ResourceManager.GetString("net_log_cache_exception_ignored", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An existing cache entry has to be discarded..
        /// </summary>
        internal static string net_log_cache_existing_entry_has_to_be_discarded {
            get {
                return ResourceManager.GetString("net_log_cache_existing_entry_has_to_be_discarded", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An existing cache entry should be discarded..
        /// </summary>
        internal static string net_log_cache_existing_entry_should_be_discarded {
            get {
                return ResourceManager.GetString("net_log_cache_existing_entry_should_be_discarded", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Existing cache entry should but cannot be removed due to unexpected response Status = ({0}) {1}..
        /// </summary>
        internal static string net_log_cache_existing_not_removed_because_unexpected_response_status {
            get {
                return ResourceManager.GetString("net_log_cache_existing_not_removed_because_unexpected_response_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Expected length (0=none)= {0}..
        /// </summary>
        internal static string net_log_cache_expected_length {
            get {
                return ResourceManager.GetString("net_log_cache_expected_length", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Expires         (0=none)= {0}..
        /// </summary>
        internal static string net_log_cache_expires {
            get {
                return ResourceManager.GetString("net_log_cache_expires", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failing request with the WebExceptionStatus = {0}..
        /// </summary>
        internal static string net_log_cache_failing_request_with_exception {
            get {
                return ResourceManager.GetString("net_log_cache_failing_request_with_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} -&gt; Filename = {1}, Status = {2}..
        /// </summary>
        internal static string net_log_cache_filename {
            get {
                return ResourceManager.GetString("net_log_cache_filename", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Response freshness is not within the specified policy limits..
        /// </summary>
        internal static string net_log_cache_freshness_outside_policy_limits {
            get {
                return ResourceManager.GetString("net_log_cache_freshness_outside_policy_limits", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to FTP request method={0}..
        /// </summary>
        internal static string net_log_cache_ftp_method {
            get {
                return ResourceManager.GetString("net_log_cache_ftp_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This FTP request is configured to use a proxy through HTTP protocol. Cache revalidation and partially cached responses are not supported..
        /// </summary>
        internal static string net_log_cache_ftp_proxy_doesnt_support_partial {
            get {
                return ResourceManager.GetString("net_log_cache_ftp_proxy_doesnt_support_partial", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to FTP Response Status={0}, {1}..
        /// </summary>
        internal static string net_log_cache_ftp_response_status {
            get {
                return ResourceManager.GetString("net_log_cache_ftp_response_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Caching is not supported for non-binary FTP request mode..
        /// </summary>
        internal static string net_log_cache_ftp_supports_bin_only {
            get {
                return ResourceManager.GetString("net_log_cache_ftp_supports_bin_only", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A response resulted from a HEAD request has different Content-Length header..
        /// </summary>
        internal static string net_log_cache_head_resp_has_different_content_length {
            get {
                return ResourceManager.GetString("net_log_cache_head_resp_has_different_content_length", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A response resulted from a HEAD request has different Content-MD5 header..
        /// </summary>
        internal static string net_log_cache_head_resp_has_different_content_md5 {
            get {
                return ResourceManager.GetString("net_log_cache_head_resp_has_different_content_md5", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A response resulted from a HEAD request has different ETag header..
        /// </summary>
        internal static string net_log_cache_head_resp_has_different_etag {
            get {
                return ResourceManager.GetString("net_log_cache_head_resp_has_different_etag", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot parse HTTP headers in entry metadata, offending string: {0}..
        /// </summary>
        internal static string net_log_cache_http_header_parse_error {
            get {
                return ResourceManager.GetString("net_log_cache_http_header_parse_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to HttpWebResponse is null..
        /// </summary>
        internal static string net_log_cache_http_resp_is_null {
            get {
                return ResourceManager.GetString("net_log_cache_http_resp_is_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Entry Status Line = HTTP/{0} {1} {2}..
        /// </summary>
        internal static string net_log_cache_http_status_line {
            get {
                return ResourceManager.GetString("net_log_cache_http_status_line", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot Parse Cache HTTP Status Line: {0}..
        /// </summary>
        internal static string net_log_cache_http_status_parse_failure {
            get {
                return ResourceManager.GetString("net_log_cache_http_status_parse_failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The cached version is invalid, assuming HTTP 1.0..
        /// </summary>
        internal static string net_log_cache_invalid_http_version {
            get {
                return ResourceManager.GetString("net_log_cache_invalid_http_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}, Key = {1}..
        /// </summary>
        internal static string net_log_cache_key {
            get {
                return ResourceManager.GetString("net_log_cache_key", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}, Key = {1}, Remove operation failed -&gt; Status = {2}..
        /// </summary>
        internal static string net_log_cache_key_remove_failed_status {
            get {
                return ResourceManager.GetString("net_log_cache_key_remove_failed_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}, Key = {1}, -&gt; Status = {2}..
        /// </summary>
        internal static string net_log_cache_key_status {
            get {
                return ResourceManager.GetString("net_log_cache_key_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to LastModified    (0=none)= {0}..
        /// </summary>
        internal static string net_log_cache_last_modified {
            get {
                return ResourceManager.GetString("net_log_cache_last_modified", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to HTTP 1.0 Response Last-Modified header value is older than that of the cache entry..
        /// </summary>
        internal static string net_log_cache_last_modified_header_older_than_cache_entry {
            get {
                return ResourceManager.GetString("net_log_cache_last_modified_header_older_than_cache_entry", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The cache entry last synchronized time = {0}..
        /// </summary>
        internal static string net_log_cache_last_synchronized {
            get {
                return ResourceManager.GetString("net_log_cache_last_synchronized", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}, Lookup operation failed -&gt; {1}..
        /// </summary>
        internal static string net_log_cache_lookup_failed {
            get {
                return ResourceManager.GetString("net_log_cache_lookup_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to [MaxAge] Absolute time expiration check (sensitive to clock skew), cache Expires: {0}..
        /// </summary>
        internal static string net_log_cache_max_age_absolute {
            get {
                return ResourceManager.GetString("net_log_cache_max_age_absolute", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to [MaxAge] Cache MaxAge = {0}..
        /// </summary>
        internal static string net_log_cache_max_age_cache_max_age {
            get {
                return ResourceManager.GetString("net_log_cache_max_age_cache_max_age", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to [MaxAge] Cache s_MaxAge = {0}..
        /// </summary>
        internal static string net_log_cache_max_age_cache_s_max_age {
            get {
                return ResourceManager.GetString("net_log_cache_max_age_cache_s_max_age", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to [MaxAge] Cache Expires - Date = {0}, Expires: {1}..
        /// </summary>
        internal static string net_log_cache_max_age_expires_date {
            get {
                return ResourceManager.GetString("net_log_cache_max_age_expires_date", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to MaxStale (sec)          = {0}..
        /// </summary>
        internal static string net_log_cache_max_stale {
            get {
                return ResourceManager.GetString("net_log_cache_max_stale", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}, MaxStale = {1}, Update Status = {2}..
        /// </summary>
        internal static string net_log_cache_max_stale_and_update_status {
            get {
                return ResourceManager.GetString("net_log_cache_max_stale_and_update_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot parse all strings in system metadata as &quot;name:value&quot;, offending string: {0}..
        /// </summary>
        internal static string net_log_cache_metadata_name_value_parse_error {
            get {
                return ResourceManager.GetString("net_log_cache_metadata_name_value_parse_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Multiple/complexe ranges are not implemented..
        /// </summary>
        internal static string net_log_cache_multiple_complex_range_not_implemented {
            get {
                return ResourceManager.GetString("net_log_cache_multiple_complex_range_not_implemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Need to remove an invalid cache entry with status code == 304(NotModified)..
        /// </summary>
        internal static string net_log_cache_need_to_remove_invalid_cache_entry_304 {
            get {
                return ResourceManager.GetString("net_log_cache_need_to_remove_invalid_cache_entry_304", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Response can be cached although it will always require revalidation..
        /// </summary>
        internal static string net_log_cache_needs_revalidation {
            get {
                return ResourceManager.GetString("net_log_cache_needs_revalidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} has requested a cache response but the entry does not exist (Stream.Null)..
        /// </summary>
        internal static string net_log_cache_no_cache_entry {
            get {
                return ResourceManager.GetString("net_log_cache_no_cache_entry", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}, Nothing was written to the stream, do not commit that cache entry..
        /// </summary>
        internal static string net_log_cache_no_commit {
            get {
                return ResourceManager.GetString("net_log_cache_no_commit", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No request headers are found in cached metadata to test based on the cached response Vary header..
        /// </summary>
        internal static string net_log_cache_no_headers_in_metadata {
            get {
                return ResourceManager.GetString("net_log_cache_no_headers_in_metadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This Cache Entry does not carry HTTP response headers..
        /// </summary>
        internal static string net_log_cache_no_http_response_header {
            get {
                return ResourceManager.GetString("net_log_cache_no_http_response_header", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to [MaxAge] Cannot compute Cache MaxAge, use 10% since LastModified: {0}, LastModified: {1}..
        /// </summary>
        internal static string net_log_cache_no_max_age_use_10_percent {
            get {
                return ResourceManager.GetString("net_log_cache_no_max_age_use_10_percent", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to [MaxAge] Cannot compute Cache MaxAge, using default RequestCacheValidator.UnspecifiedMaxAge: {0}..
        /// </summary>
        internal static string net_log_cache_no_max_age_use_default {
            get {
                return ResourceManager.GetString("net_log_cache_no_max_age_use_default", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cache is not updated based on the request Method = {0}..
        /// </summary>
        internal static string net_log_cache_no_update_based_on_method {
            get {
                return ResourceManager.GetString("net_log_cache_no_update_based_on_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This was Not a GET, HEAD or POST request..
        /// </summary>
        internal static string net_log_cache_not_a_get_head_post {
            get {
                return ResourceManager.GetString("net_log_cache_not_a_get_head_post", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}, Cache is not updated based on the current cache protocol status = {1}..
        /// </summary>
        internal static string net_log_cache_not_updated_based_on_cache_protocol_status {
            get {
                return ResourceManager.GetString("net_log_cache_not_updated_based_on_cache_protocol_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cache is not updated based on the FTP response status. Expected = {0}, actual = {1}..
        /// </summary>
        internal static string net_log_cache_not_updated_based_on_ftp_response_status {
            get {
                return ResourceManager.GetString("net_log_cache_not_updated_based_on_ftp_response_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cache is not updated based on Policy = {0}..
        /// </summary>
        internal static string net_log_cache_not_updated_based_on_policy {
            get {
                return ResourceManager.GetString("net_log_cache_not_updated_based_on_policy", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cache is not updated because there is no response associated with the request..
        /// </summary>
        internal static string net_log_cache_not_updated_because_no_response {
            get {
                return ResourceManager.GetString("net_log_cache_not_updated_because_no_response", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to [Now Time (UTC)] = {0}..
        /// </summary>
        internal static string net_log_cache_now_time {
            get {
                return ResourceManager.GetString("net_log_cache_now_time", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} has requested a cache response but the cached stream is null..
        /// </summary>
        internal static string net_log_cache_null_cached_stream {
            get {
                return ResourceManager.GetString("net_log_cache_null_cached_stream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Response is null so this Request should fail..
        /// </summary>
        internal static string net_log_cache_null_response_failure {
            get {
                return ResourceManager.GetString("net_log_cache_null_response_failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} exception: {1}..
        /// </summary>
        internal static string net_log_cache_object_and_exception {
            get {
                return ResourceManager.GetString("net_log_cache_object_and_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Ranges other than bytes are not implemented..
        /// </summary>
        internal static string net_log_cache_only_byte_range_implemented {
            get {
                return ResourceManager.GetString("net_log_cache_only_byte_range_implemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A Cache Entry is partial and the user request has non zero ContentOffset = {0}. A restart from cache is not supported for partial cache entries..
        /// </summary>
        internal static string net_log_cache_partial_and_non_zero_content_offset {
            get {
                return ResourceManager.GetString("net_log_cache_partial_and_non_zero_content_offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Serving Partial Response (206) from cache, Content-Range:{0}..
        /// </summary>
        internal static string net_log_cache_partial_resp {
            get {
                return ResourceManager.GetString("net_log_cache_partial_resp", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A partial response is not combined with existing cache entry, Cache Stream Size = {0}, response Range Start = {1}..
        /// </summary>
        internal static string net_log_cache_partial_resp_not_combined_with_existing_entry {
            get {
                return ResourceManager.GetString("net_log_cache_partial_resp_not_combined_with_existing_entry", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Client Policy CacheSyncDate (UTC) = {0}, Cache LastSynchronizedUtc = {1}..
        /// </summary>
        internal static string net_log_cache_policy_cache_sync_date {
            get {
                return ResourceManager.GetString("net_log_cache_policy_cache_sync_date", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Client Policy MaxAge = {0}..
        /// </summary>
        internal static string net_log_cache_policy_max_age {
            get {
                return ResourceManager.GetString("net_log_cache_policy_max_age", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Client Policy MaxStale = {0}..
        /// </summary>
        internal static string net_log_cache_policy_max_stale {
            get {
                return ResourceManager.GetString("net_log_cache_policy_max_stale", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Client Policy MinFresh = {0}..
        /// </summary>
        internal static string net_log_cache_policy_min_fresh {
            get {
                return ResourceManager.GetString("net_log_cache_policy_min_fresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to POST Response without Cache-Control or Expires headers..
        /// </summary>
        internal static string net_log_cache_post_resp_without_cache_control_or_expires {
            get {
                return ResourceManager.GetString("net_log_cache_post_resp_without_cache_control_or_expires", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Request Range (not in Cache yet) = Range:{0}..
        /// </summary>
        internal static string net_log_cache_range {
            get {
                return ResourceManager.GetString("net_log_cache_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Serving Request Range from cache, Range:{0}..
        /// </summary>
        internal static string net_log_cache_range_in_cache {
            get {
                return ResourceManager.GetString("net_log_cache_range_in_cache", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid format of Request Range:{0}..
        /// </summary>
        internal static string net_log_cache_range_invalid_format {
            get {
                return ResourceManager.GetString("net_log_cache_range_invalid_format", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot serve from Cache, Range:{0}..
        /// </summary>
        internal static string net_log_cache_range_not_in_cache {
            get {
                return ResourceManager.GetString("net_log_cache_range_not_in_cache", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Range Request (user specified), Range: {0}..
        /// </summary>
        internal static string net_log_cache_range_request_range {
            get {
                return ResourceManager.GetString("net_log_cache_range_request_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Caching protocol has refused the server response. To allow automatic request retrying set request.AllowAutoRedirect=true..
        /// </summary>
        internal static string net_log_cache_refused_server_response {
            get {
                return ResourceManager.GetString("net_log_cache_refused_server_response", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Existing cache entry is removed since a restarted response was changed on the server, cache LastModified date = {0}, new LastModified date = {1}..
        /// </summary>
        internal static string net_log_cache_removed_entry_because_ftp_restart_response_changed {
            get {
                return ResourceManager.GetString("net_log_cache_removed_entry_because_ftp_restart_response_changed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Existing cache entry is removed based on the request Method = {0}..
        /// </summary>
        internal static string net_log_cache_removed_existing_based_on_method {
            get {
                return ResourceManager.GetString("net_log_cache_removed_existing_based_on_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Existing cache entry is removed based on Policy = {0}..
        /// </summary>
        internal static string net_log_cache_removed_existing_based_on_policy {
            get {
                return ResourceManager.GetString("net_log_cache_removed_existing_based_on_policy", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Existing entry is removed because it was found invalid..
        /// </summary>
        internal static string net_log_cache_removed_existing_invalid_entry {
            get {
                return ResourceManager.GetString("net_log_cache_removed_existing_invalid_entry", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Replacing cache entry metadata with &apos;HTTP/1.1 200 OK&apos; status line to satisfy HTTP cache protocol logic..
        /// </summary>
        internal static string net_log_cache_replacing_entry_with_HTTP_200 {
            get {
                return ResourceManager.GetString("net_log_cache_replacing_entry_with_HTTP_200", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to User Request contains a conditional header..
        /// </summary>
        internal static string net_log_cache_request_contains_conditional_header {
            get {
                return ResourceManager.GetString("net_log_cache_request_contains_conditional_header", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Request Method = {0}..
        /// </summary>
        internal static string net_log_cache_request_method {
            get {
                return ResourceManager.GetString("net_log_cache_request_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} has requested a combined response but the cached stream is null..
        /// </summary>
        internal static string net_log_cache_requested_combined_but_null_cached_stream {
            get {
                return ResourceManager.GetString("net_log_cache_requested_combined_but_null_cached_stream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Response==304 or Request was HEAD, updating cache entry..
        /// </summary>
        internal static string net_log_cache_resp_304_or_request_head {
            get {
                return ResourceManager.GetString("net_log_cache_resp_304_or_request_head", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Response explicitly allows caching = Cache-Control: {0}..
        /// </summary>
        internal static string net_log_cache_resp_allows_caching {
            get {
                return ResourceManager.GetString("net_log_cache_resp_allows_caching", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Response Cache-Control = no-store..
        /// </summary>
        internal static string net_log_cache_resp_cache_control_is_no_store {
            get {
                return ResourceManager.GetString("net_log_cache_resp_cache_control_is_no_store", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Response Cache-Control = private, and Cache is public..
        /// </summary>
        internal static string net_log_cache_resp_cache_control_is_private {
            get {
                return ResourceManager.GetString("net_log_cache_resp_cache_control_is_private", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Response Cache-Control = private+Headers, removing those headers..
        /// </summary>
        internal static string net_log_cache_resp_cache_control_is_private_plus_headers {
            get {
                return ResourceManager.GetString("net_log_cache_resp_cache_control_is_private_plus_headers", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Response Cache-Control = public..
        /// </summary>
        internal static string net_log_cache_resp_cache_control_is_public {
            get {
                return ResourceManager.GetString("net_log_cache_resp_cache_control_is_public", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Response with no CacheControl and Status Code = {0}..
        /// </summary>
        internal static string net_log_cache_resp_no_cache_control {
            get {
                return ResourceManager.GetString("net_log_cache_resp_no_cache_control", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to HttpWebResponse date is older than of the cached one..
        /// </summary>
        internal static string net_log_cache_resp_older_than_cache {
            get {
                return ResourceManager.GetString("net_log_cache_resp_older_than_cache", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Response Status = {0}..
        /// </summary>
        internal static string net_log_cache_resp_status {
            get {
                return ResourceManager.GetString("net_log_cache_resp_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Response status == 304 but the cache entry does not exist..
        /// </summary>
        internal static string net_log_cache_resp_status_304 {
            get {
                return ResourceManager.GetString("net_log_cache_resp_status_304", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Accept this response as valid based on the retry count = {0}..
        /// </summary>
        internal static string net_log_cache_resp_valid_based_on_retry {
            get {
                return ResourceManager.GetString("net_log_cache_resp_valid_based_on_retry", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Response LastModified={0},  ContentLength= {1}..
        /// </summary>
        internal static string net_log_cache_response_last_modified {
            get {
                return ResourceManager.GetString("net_log_cache_response_last_modified", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Response is valid based on Policy = {0}..
        /// </summary>
        internal static string net_log_cache_response_valid_based_on_policy {
            get {
                return ResourceManager.GetString("net_log_cache_response_valid_based_on_policy", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}, result = {1}..
        /// </summary>
        internal static string net_log_cache_result {
            get {
                return ResourceManager.GetString("net_log_cache_result", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} has returned a range cache stream, Offset = {1}, Length = {2}..
        /// </summary>
        internal static string net_log_cache_returned_range_cache {
            get {
                return ResourceManager.GetString("net_log_cache_returned_range_cache", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}, No cache entry revalidation is needed..
        /// </summary>
        internal static string net_log_cache_revalidation_not_needed {
            get {
                return ResourceManager.GetString("net_log_cache_revalidation_not_needed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Response revalidation is always required but neither Last-Modified nor ETag header is set on the response..
        /// </summary>
        internal static string net_log_cache_revalidation_required {
            get {
                return ResourceManager.GetString("net_log_cache_revalidation_required", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Saving Request Headers, Vary: {0}..
        /// </summary>
        internal static string net_log_cache_saving_request_headers {
            get {
                return ResourceManager.GetString("net_log_cache_saving_request_headers", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Server did not satisfy the range: {0}..
        /// </summary>
        internal static string net_log_cache_server_didnt_satisfy_range {
            get {
                return ResourceManager.GetString("net_log_cache_server_didnt_satisfy_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Set Expires               ={0}..
        /// </summary>
        internal static string net_log_cache_set_expires {
            get {
                return ResourceManager.GetString("net_log_cache_set_expires", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Set LastModified          ={0}..
        /// </summary>
        internal static string net_log_cache_set_last_modified {
            get {
                return ResourceManager.GetString("net_log_cache_set_last_modified", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Set LastSynchronized      ={0}..
        /// </summary>
        internal static string net_log_cache_set_last_synchronized {
            get {
                return ResourceManager.GetString("net_log_cache_set_last_synchronized", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Set new Metadata..
        /// </summary>
        internal static string net_log_cache_set_new_metadata {
            get {
                return ResourceManager.GetString("net_log_cache_set_new_metadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A Response Status Code is not 304 or 206..
        /// </summary>
        internal static string net_log_cache_status_code_not_304_206 {
            get {
                return ResourceManager.GetString("net_log_cache_status_code_not_304_206", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}, stream = {1}..
        /// </summary>
        internal static string net_log_cache_stream {
            get {
                return ResourceManager.GetString("net_log_cache_stream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Suppressing cache update since the entry was synchronized within the last minute..
        /// </summary>
        internal static string net_log_cache_suppress_update_because_synched_last_minute {
            get {
                return ResourceManager.GetString("net_log_cache_suppress_update_because_synched_last_minute", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Suppressing cache headers update on 304, new headers don&apos;t add anything..
        /// </summary>
        internal static string net_log_cache_suppressing_headers_update_on_304 {
            get {
                return ResourceManager.GetString("net_log_cache_suppressing_headers_update_on_304", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A 5XX Response and Cache-Only like policy, serving from cache..
        /// </summary>
        internal static string net_log_cache_sxx_resp_cache_only {
            get {
                return ResourceManager.GetString("net_log_cache_sxx_resp_cache_only", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A 5XX Response that can be replaced by existing cache entry..
        /// </summary>
        internal static string net_log_cache_sxx_resp_can_be_replaced {
            get {
                return ResourceManager.GetString("net_log_cache_sxx_resp_can_be_replaced", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The cache protocol method {0} has returned unexpected status: {1}..
        /// </summary>
        internal static string net_log_cache_unexpected_status {
            get {
                return ResourceManager.GetString("net_log_cache_unexpected_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Update Cached Headers..
        /// </summary>
        internal static string net_log_cache_update_cached_headers {
            get {
                return ResourceManager.GetString("net_log_cache_update_cached_headers", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}, Key = {1}, Update operation failed -&gt; {2}..
        /// </summary>
        internal static string net_log_cache_update_failed {
            get {
                return ResourceManager.GetString("net_log_cache_update_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cache update is not supported for restarted FTP responses. Restart offset = {0}..
        /// </summary>
        internal static string net_log_cache_update_not_supported_for_ftp_restart {
            get {
                return ResourceManager.GetString("net_log_cache_update_not_supported_for_ftp_restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Updating headers on 304 response..
        /// </summary>
        internal static string net_log_cache_updating_headers_on_304 {
            get {
                return ResourceManager.GetString("net_log_cache_updating_headers_on_304", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Updating cache entry last synchronized time = {0}..
        /// </summary>
        internal static string net_log_cache_updating_last_synchronized {
            get {
                return ResourceManager.GetString("net_log_cache_updating_last_synchronized", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Request Uri has a Query, and cached response is from HTTP 1.0 server..
        /// </summary>
        internal static string net_log_cache_uri_with_query_and_cached_resp_from_http_10 {
            get {
                return ResourceManager.GetString("net_log_cache_uri_with_query_and_cached_resp_from_http_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Request Uri has a Query, and no explicit expiration time is provided..
        /// </summary>
        internal static string net_log_cache_uri_with_query_has_no_expiration {
            get {
                return ResourceManager.GetString("net_log_cache_uri_with_query_has_no_expiration", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}, UseCount = {1}, File = {2}..
        /// </summary>
        internal static string net_log_cache_usecount_file {
            get {
                return ResourceManager.GetString("net_log_cache_usecount_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Valid as fresh or because of Cache Policy = {0}..
        /// </summary>
        internal static string net_log_cache_valid_as_fresh_or_because_policy {
            get {
                return ResourceManager.GetString("net_log_cache_valid_as_fresh_or_because_policy", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Valid based on Status Code: {0}..
        /// </summary>
        internal static string net_log_cache_valid_based_on_status_code {
            get {
                return ResourceManager.GetString("net_log_cache_valid_based_on_status_code", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Resubmitting this request because cache cannot validate the response..
        /// </summary>
        internal static string net_log_cache_validation_failed_resubmit {
            get {
                return ResourceManager.GetString("net_log_cache_validation_failed_resubmit", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This validator should not be called for policy : {0}..
        /// </summary>
        internal static string net_log_cache_validator_invalid_for_policy {
            get {
                return ResourceManager.GetString("net_log_cache_validator_invalid_for_policy", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cache entry Vary header contains &apos;*&apos;..
        /// </summary>
        internal static string net_log_cache_vary_header_contains_asterisks {
            get {
                return ResourceManager.GetString("net_log_cache_vary_header_contains_asterisks", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cache entry Vary header is empty..
        /// </summary>
        internal static string net_log_cache_vary_header_empty {
            get {
                return ResourceManager.GetString("net_log_cache_vary_header_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to All required Request headers match based on cached Vary response header..
        /// </summary>
        internal static string net_log_cache_vary_header_match {
            get {
                return ResourceManager.GetString("net_log_cache_vary_header_match", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Vary header: Request and cache header fields count does not match, header name = {0}..
        /// </summary>
        internal static string net_log_cache_vary_header_mismatched_count {
            get {
                return ResourceManager.GetString("net_log_cache_vary_header_mismatched_count", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Vary header: A Cache header field mismatch the request one, header name = {0}, cache field = {1}, request field = {2}..
        /// </summary>
        internal static string net_log_cache_vary_header_mismatched_field {
            get {
                return ResourceManager.GetString("net_log_cache_vary_header_mismatched_field", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Certificate is of type X509Certificate2 and contains the private key..
        /// </summary>
        internal static string net_log_cert_is_of_type_2 {
            get {
                return ResourceManager.GetString("net_log_cert_is_of_type_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}#{1} - Closed as idle..
        /// </summary>
        internal static string net_log_closed_idle {
            get {
                return ResourceManager.GetString("net_log_closed_idle", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot find the certificate in either the LocalMachine store or the CurrentUser store..
        /// </summary>
        internal static string net_log_did_not_find_cert_in_store {
            get {
                return ResourceManager.GetString("net_log_did_not_find_cert_in_store", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The hash algorithm is not supported by Digest authentication: {0}..
        /// </summary>
        internal static string net_log_digest_hash_algorithm_not_supported {
            get {
                return ResourceManager.GetString("net_log_digest_hash_algorithm_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Quality of Protection value is not supported by Digest authentication: {0}..
        /// </summary>
        internal static string net_log_digest_qop_not_supported {
            get {
                return ResourceManager.GetString("net_log_digest_qop_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A nonce parameter required for Digest authentication was not found or was preceded by an invalid parameter..
        /// </summary>
        internal static string net_log_digest_requires_nonce {
            get {
                return ResourceManager.GetString("net_log_digest_requires_nonce", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Exception in {0}::{1} - {2}..
        /// </summary>
        internal static string net_log_exception {
            get {
                return ResourceManager.GetString("net_log_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Exception in callback: {0}..
        /// </summary>
        internal static string net_log_exception_in_callback {
            get {
                return ResourceManager.GetString("net_log_exception_in_callback", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Trying to find a matching certificate in the certificate store..
        /// </summary>
        internal static string net_log_finding_matching_certs {
            get {
                return ResourceManager.GetString("net_log_finding_matching_certs", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Found the certificate in the {0} store..
        /// </summary>
        internal static string net_log_found_cert_in_store {
            get {
                return ResourceManager.GetString("net_log_found_cert_in_store", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Got a certificate from the client delegate..
        /// </summary>
        internal static string net_log_got_certificate_from_delegate {
            get {
                return ResourceManager.GetString("net_log_got_certificate_from_delegate", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Can&apos;t convert bytes &apos;{0}&apos; into UTF-16 characters: {1}.
        /// </summary>
        internal static string net_log_listener_cant_convert_bytes {
            get {
                return ResourceManager.GetString("net_log_listener_cant_convert_bytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Can&apos;t convert percent encoded value &apos;{0}&apos;..
        /// </summary>
        internal static string net_log_listener_cant_convert_percent_value {
            get {
                return ResourceManager.GetString("net_log_listener_cant_convert_percent_value", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Can&apos;t convert Uri path &apos;{0}&apos; using encoding &apos;{1}&apos;..
        /// </summary>
        internal static string net_log_listener_cant_convert_raw_path {
            get {
                return ResourceManager.GetString("net_log_listener_cant_convert_raw_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Can&apos;t convert string &apos;{0}&apos; into UTF-8 bytes: {1}.
        /// </summary>
        internal static string net_log_listener_cant_convert_to_utf8 {
            get {
                return ResourceManager.GetString("net_log_listener_cant_convert_to_utf8", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Can&apos;t create Uri from string &apos;{0}://{1}{2}{3}&apos;..
        /// </summary>
        internal static string net_log_listener_cant_create_uri {
            get {
                return ResourceManager.GetString("net_log_listener_cant_create_uri", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Channel binding check enabled..
        /// </summary>
        internal static string net_log_listener_cbt {
            get {
                return ResourceManager.GetString("net_log_listener_cbt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to create a valid Identity for an incoming request..
        /// </summary>
        internal static string net_log_listener_create_valid_identity_failed {
            get {
                return ResourceManager.GetString("net_log_listener_create_valid_identity_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Sending 500 response, AuthenticationSchemeSelectorDelegate threw an exception: {0}..
        /// </summary>
        internal static string net_log_listener_delegate_exception {
            get {
                return ResourceManager.GetString("net_log_listener_delegate_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Exception thrown while reading Registry key &apos;{0}&apos;: {1}.
        /// </summary>
        internal static string net_log_listener_httpsys_registry_error {
            get {
                return ResourceManager.GetString("net_log_listener_httpsys_registry_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Can&apos;t open Registry key &apos;{0}&apos;..
        /// </summary>
        internal static string net_log_listener_httpsys_registry_null {
            get {
                return ResourceManager.GetString("net_log_listener_httpsys_registry_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No channel binding check because extended protection is disabled..
        /// </summary>
        internal static string net_log_listener_no_cbt_disabled {
            get {
                return ResourceManager.GetString("net_log_listener_no_cbt_disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No channel binding check for requests without a secure channel..
        /// </summary>
        internal static string net_log_listener_no_cbt_http {
            get {
                return ResourceManager.GetString("net_log_listener_no_cbt_http", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No channel binding check because the underlying platform does not support extended protection..
        /// </summary>
        internal static string net_log_listener_no_cbt_platform {
            get {
                return ResourceManager.GetString("net_log_listener_no_cbt_platform", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No channel binding check for the trusted proxy scenario..
        /// </summary>
        internal static string net_log_listener_no_cbt_trustedproxy {
            get {
                return ResourceManager.GetString("net_log_listener_no_cbt_trustedproxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No service name check because the channel binding was already checked..
        /// </summary>
        internal static string net_log_listener_no_spn_cbt {
            get {
                return ResourceManager.GetString("net_log_listener_no_spn_cbt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No service name check because extended protection is disabled..
        /// </summary>
        internal static string net_log_listener_no_spn_disabled {
            get {
                return ResourceManager.GetString("net_log_listener_no_spn_disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No explicit service name check because Kerberos authentication already validates the service name..
        /// </summary>
        internal static string net_log_listener_no_spn_kerberos {
            get {
                return ResourceManager.GetString("net_log_listener_no_spn_kerberos", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No service name check because the authentication was from a client on the local machine..
        /// </summary>
        internal static string net_log_listener_no_spn_loopback {
            get {
                return ResourceManager.GetString("net_log_listener_no_spn_loopback", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No service name check because the underlying platform does not support extended protection..
        /// </summary>
        internal static string net_log_listener_no_spn_platform {
            get {
                return ResourceManager.GetString("net_log_listener_no_spn_platform", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No service name check because the client did not provide a service name and the server was configured for PolicyEnforcement.WhenSupported..
        /// </summary>
        internal static string net_log_listener_no_spn_whensupported {
            get {
                return ResourceManager.GetString("net_log_listener_no_spn_whensupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Client provided service name &apos;{0}&apos;..
        /// </summary>
        internal static string net_log_listener_spn {
            get {
                return ResourceManager.GetString("net_log_listener_spn", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Adding default service name &apos;{0}&apos; from prefix &apos;{1}&apos;..
        /// </summary>
        internal static string net_log_listener_spn_add {
            get {
                return ResourceManager.GetString("net_log_listener_spn_add", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Service name check failed..
        /// </summary>
        internal static string net_log_listener_spn_failed {
            get {
                return ResourceManager.GetString("net_log_listener_spn_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Service name check failed because the client did not provide a service name and the server was configured for PolicyEnforcement.Always..
        /// </summary>
        internal static string net_log_listener_spn_failed_always {
            get {
                return ResourceManager.GetString("net_log_listener_spn_failed_always", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Dumping acceptable service names:.
        /// </summary>
        internal static string net_log_listener_spn_failed_dump {
            get {
                return ResourceManager.GetString("net_log_listener_spn_failed_dump", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No acceptable service names were configured!.
        /// </summary>
        internal static string net_log_listener_spn_failed_empty {
            get {
                return ResourceManager.GetString("net_log_listener_spn_failed_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No default service name added for prefix &apos;{0}&apos;..
        /// </summary>
        internal static string net_log_listener_spn_not_add {
            get {
                return ResourceManager.GetString("net_log_listener_spn_not_add", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No default service name removed for prefix &apos;{0}&apos;..
        /// </summary>
        internal static string net_log_listener_spn_not_remove {
            get {
                return ResourceManager.GetString("net_log_listener_spn_not_remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Service name check succeeded..
        /// </summary>
        internal static string net_log_listener_spn_passed {
            get {
                return ResourceManager.GetString("net_log_listener_spn_passed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Removing default service name &apos;{0}&apos; from prefix &apos;{1}&apos;..
        /// </summary>
        internal static string net_log_listener_spn_remove {
            get {
                return ResourceManager.GetString("net_log_listener_spn_remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Received a request with an unmatched or no authentication scheme. AuthenticationSchemes:{0}, Authorization:{1}..
        /// </summary>
        internal static string net_log_listener_unmatched_authentication_scheme {
            get {
                return ResourceManager.GetString("net_log_listener_unmatched_authentication_scheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Received a request with an unsupported authentication scheme, Authorization:{0} SupportedSchemes:{1}..
        /// </summary>
        internal static string net_log_listener_unsupported_authentication_scheme {
            get {
                return ResourceManager.GetString("net_log_listener_unsupported_authentication_scheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Locating the private key for the certificate: {0}..
        /// </summary>
        internal static string net_log_locating_private_key_for_certificate {
            get {
                return ResourceManager.GetString("net_log_locating_private_key_for_certificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Method={0}..
        /// </summary>
        internal static string net_log_method_equal {
            get {
                return ResourceManager.GetString("net_log_method_equal", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Left with {0} client certificates to choose from..
        /// </summary>
        internal static string net_log_n_certs_after_filtering {
            get {
                return ResourceManager.GetString("net_log_n_certs_after_filtering", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Client delegate did not provide a certificate; and there are not other user-provided certificates. Need to attempt a session restart..
        /// </summary>
        internal static string net_log_no_delegate_and_have_no_client_cert {
            get {
                return ResourceManager.GetString("net_log_no_delegate_and_have_no_client_cert", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Client delegate did not provide a certificate; but there are other user-provided certificates&quot;..
        /// </summary>
        internal static string net_log_no_delegate_but_have_client_cert {
            get {
                return ResourceManager.GetString("net_log_no_delegate_but_have_client_cert", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to We have user-provided certificates. The server has not specified any issuers, so try all the certificates..
        /// </summary>
        internal static string net_log_no_issuers_try_all_certs {
            get {
                return ResourceManager.GetString("net_log_no_issuers_try_all_certs", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Opening Certificate store {0} failed, exception: {1}..
        /// </summary>
        internal static string net_log_open_store_failed {
            get {
                return ResourceManager.GetString("net_log_open_store_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} failed with error {1}..
        /// </summary>
        internal static string net_log_operation_failed_with_error {
            get {
                return ResourceManager.GetString("net_log_operation_failed_with_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} returned {1}..
        /// </summary>
        internal static string net_log_operation_returned_something {
            get {
                return ResourceManager.GetString("net_log_operation_returned_something", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to WebProxy failed to autodetect a Uri for a proxy script..
        /// </summary>
        internal static string net_log_proxy_autodetect_failed {
            get {
                return ResourceManager.GetString("net_log_proxy_autodetect_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to WebProxy failed to parse the auto-detected location of a proxy script:&quot;{0}&quot; into a Uri..
        /// </summary>
        internal static string net_log_proxy_autodetect_script_location_parse_error {
            get {
                return ResourceManager.GetString("net_log_proxy_autodetect_script_location_parse_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} was called with an invalid parameter..
        /// </summary>
        internal static string net_log_proxy_called_with_invalid_parameter {
            get {
                return ResourceManager.GetString("net_log_proxy_called_with_invalid_parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} was called with a null &apos;{1}&apos; parameter..
        /// </summary>
        internal static string net_log_proxy_called_with_null_parameter {
            get {
                return ResourceManager.GetString("net_log_proxy_called_with_null_parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to RAS is not supported. Can&apos;t create RasHelper instance..
        /// </summary>
        internal static string net_log_proxy_ras_notsupported_exception {
            get {
                return ResourceManager.GetString("net_log_proxy_ras_notsupported_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to RAS supported: {0}.
        /// </summary>
        internal static string net_log_proxy_ras_supported {
            get {
                return ResourceManager.GetString("net_log_proxy_ras_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to WebProxy caught an exception while  downloading/compiling the proxy script: {0}..
        /// </summary>
        internal static string net_log_proxy_script_download_compile_error {
            get {
                return ResourceManager.GetString("net_log_proxy_script_download_compile_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to WebProxy caught an exception while executing the ScriptReturn script: {0}..
        /// </summary>
        internal static string net_log_proxy_script_execution_error {
            get {
                return ResourceManager.GetString("net_log_proxy_script_execution_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to ScriptEngine was notified of a potential change in the system&apos;s proxy settings and will update WebProxy settings..
        /// </summary>
        internal static string net_log_proxy_system_setting_update {
            get {
                return ResourceManager.GetString("net_log_proxy_system_setting_update", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to ScriptEngine was notified of a change in the IP configuration and will update WebProxy settings..
        /// </summary>
        internal static string net_log_proxy_update_due_to_ip_config_change {
            get {
                return ResourceManager.GetString("net_log_proxy_update_due_to_ip_config_change", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Can&apos;t open WinHttp session. Error code: {0}..
        /// </summary>
        internal static string net_log_proxy_winhttp_cant_open_session {
            get {
                return ResourceManager.GetString("net_log_proxy_winhttp_cant_open_session", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Can&apos;t retrieve proxy settings for Uri &apos;{0}&apos;. Error code: {1}..
        /// </summary>
        internal static string net_log_proxy_winhttp_getproxy_failed {
            get {
                return ResourceManager.GetString("net_log_proxy_winhttp_getproxy_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Can&apos;t specify proxy discovery timeout. Error code: {0}..
        /// </summary>
        internal static string net_log_proxy_winhttp_timeout_error {
            get {
                return ResourceManager.GetString("net_log_proxy_winhttp_timeout_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Received headers
        ///{{
        ///{0}}}..
        /// </summary>
        internal static string net_log_received_headers {
            get {
                return ResourceManager.GetString("net_log_received_headers", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Received response [{0}].
        /// </summary>
        internal static string net_log_received_response {
            get {
                return ResourceManager.GetString("net_log_received_response", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Received status line: Version={0}, StatusCode={1}, StatusDescription={2}..
        /// </summary>
        internal static string net_log_received_status_line {
            get {
                return ResourceManager.GetString("net_log_received_status_line", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Releasing FTP connection#{0}..
        /// </summary>
        internal static string net_log_releasing_connection {
            get {
                return ResourceManager.GetString("net_log_releasing_connection", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Remote certificate has errors:.
        /// </summary>
        internal static string net_log_remote_cert_has_errors {
            get {
                return ResourceManager.GetString("net_log_remote_cert_has_errors", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Remote certificate has no errors..
        /// </summary>
        internal static string net_log_remote_cert_has_no_errors {
            get {
                return ResourceManager.GetString("net_log_remote_cert_has_no_errors", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Certificate name mismatch..
        /// </summary>
        internal static string net_log_remote_cert_name_mismatch {
            get {
                return ResourceManager.GetString("net_log_remote_cert_name_mismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The remote server did not provide a certificate..
        /// </summary>
        internal static string net_log_remote_cert_not_available {
            get {
                return ResourceManager.GetString("net_log_remote_cert_not_available", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Remote certificate was verified as invalid by the user..
        /// </summary>
        internal static string net_log_remote_cert_user_declared_invalid {
            get {
                return ResourceManager.GetString("net_log_remote_cert_user_declared_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Remote certificate was verified as valid by the user..
        /// </summary>
        internal static string net_log_remote_cert_user_declared_valid {
            get {
                return ResourceManager.GetString("net_log_remote_cert_user_declared_valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Remote certificate: {0}..
        /// </summary>
        internal static string net_log_remote_certificate {
            get {
                return ResourceManager.GetString("net_log_remote_certificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A resolved ServicePoint host could be wrongly considered as a remote server..
        /// </summary>
        internal static string net_log_resolved_servicepoint_may_not_be_remote_server {
            get {
                return ResourceManager.GetString("net_log_resolved_servicepoint_may_not_be_remote_server", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Resubmitting request..
        /// </summary>
        internal static string net_log_resubmitting_request {
            get {
                return ResourceManager.GetString("net_log_resubmitting_request", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An unexpected exception while retrieving the local address list: {0}..
        /// </summary>
        internal static string net_log_retrieving_localhost_exception {
            get {
                return ResourceManager.GetString("net_log_retrieving_localhost_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Selected certificate: {0}..
        /// </summary>
        internal static string net_log_selected_cert {
            get {
                return ResourceManager.GetString("net_log_selected_cert", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Sending command [{0}].
        /// </summary>
        internal static string net_log_sending_command {
            get {
                return ResourceManager.GetString("net_log_sending_command", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Sending headers
        ///{{
        ///{0}}}..
        /// </summary>
        internal static string net_log_sending_headers {
            get {
                return ResourceManager.GetString("net_log_sending_headers", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to We have user-provided certificates. The server has specified {0} issuer(s). Looking for certificates that match any of the issuers..
        /// </summary>
        internal static string net_log_server_issuers_look_for_matching_certs {
            get {
                return ResourceManager.GetString("net_log_server_issuers_look_for_matching_certs", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error code {0} was received from server response..
        /// </summary>
        internal static string net_log_server_response_error_code {
            get {
                return ResourceManager.GetString("net_log_server_response_error_code", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}#{1} - Setting SocketOptionName.ReuseUnicastPort option for socket..
        /// </summary>
        internal static string net_log_set_socketoption_reuseport {
            get {
                return ResourceManager.GetString("net_log_set_socketoption_reuseport", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Registry key activated to enable SocketOptionName.ReuseUnicastPort socket option by default for all ServicePoint TCP connections..
        /// </summary>
        internal static string net_log_set_socketoption_reuseport_default_on {
            get {
                return ResourceManager.GetString("net_log_set_socketoption_reuseport_default_on", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}#{1} - SocketOptionName.ReuseUnicastPort option not supported..
        /// </summary>
        internal static string net_log_set_socketoption_reuseport_not_supported {
            get {
                return ResourceManager.GetString("net_log_set_socketoption_reuseport_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to ShellServices.ShellExpression.Parse() was called with a badly formatted &apos;pattern&apos;:{0}..
        /// </summary>
        internal static string net_log_shell_expression_pattern_format_warning {
            get {
                return ResourceManager.GetString("net_log_shell_expression_pattern_format_warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Accepted connection from {0} to {1}..
        /// </summary>
        internal static string net_log_socket_accepted {
            get {
                return ResourceManager.GetString("net_log_socket_accepted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Connecting to a DnsEndPoint..
        /// </summary>
        internal static string net_log_socket_connect_dnsendpoint {
            get {
                return ResourceManager.GetString("net_log_socket_connect_dnsendpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Created connection from {0} to {1}..
        /// </summary>
        internal static string net_log_socket_connected {
            get {
                return ResourceManager.GetString("net_log_socket_connected", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Not logging data from file: {0}..
        /// </summary>
        internal static string net_log_socket_not_logged_file {
            get {
                return ResourceManager.GetString("net_log_socket_not_logged_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Enumerating security packages:.
        /// </summary>
        internal static string net_log_sspi_enumerating_security_packages {
            get {
                return ResourceManager.GetString("net_log_sspi_enumerating_security_packages", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}(In-Buffer length={1}, Out-Buffer length={2}, returned code={3})..
        /// </summary>
        internal static string net_log_sspi_security_context_input_buffer {
            get {
                return ResourceManager.GetString("net_log_sspi_security_context_input_buffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}(In-Buffers count={1}, Out-Buffer length={2}, returned code={3})..
        /// </summary>
        internal static string net_log_sspi_security_context_input_buffers {
            get {
                return ResourceManager.GetString("net_log_sspi_security_context_input_buffers", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Security package &apos;{0}&apos; was not found..
        /// </summary>
        internal static string net_log_sspi_security_package_not_found {
            get {
                return ResourceManager.GetString("net_log_sspi_security_package_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}(Protocol={1}, Cipher={2} {3} bit strength, Hash={4} {5} bit strength, Key Exchange={6} {7} bit strength)..
        /// </summary>
        internal static string net_log_sspi_selected_cipher_suite {
            get {
                return ResourceManager.GetString("net_log_sspi_selected_cipher_suite", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unexpected exception in {0}..
        /// </summary>
        internal static string net_log_unexpected_exception {
            get {
                return ResourceManager.GetString("net_log_unexpected_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to unknown.
        /// </summary>
        internal static string net_log_unknown {
            get {
                return ResourceManager.GetString("net_log_unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Using the cached credential handle..
        /// </summary>
        internal static string net_log_using_cached_credential {
            get {
                return ResourceManager.GetString("net_log_using_cached_credential", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Too many addresses to sort. The maximum number of addresses allowed are {0}..
        /// </summary>
        internal static string net_max_ip_address_list_length_exceeded {
            get {
                return ResourceManager.GetString("net_max_ip_address_list_length_exceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The maximum number of service points was exceeded..
        /// </summary>
        internal static string net_maxsrvpoints {
            get {
                return ResourceManager.GetString("net_maxsrvpoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This method is not implemented by this class..
        /// </summary>
        internal static string net_MethodNotImplementedException {
            get {
                return ResourceManager.GetString("net_MethodNotImplementedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This method is not supported by this class..
        /// </summary>
        internal static string net_MethodNotSupportedException {
            get {
                return ResourceManager.GetString("net_MethodNotSupportedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &quot;Multiple buffers cannot be used with this method.&quot;;.
        /// </summary>
        internal static string net_multibuffernotsupported {
            get {
                return ResourceManager.GetString("net_multibuffernotsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to You must provide a request body if you set ContentLength&gt;0 or SendChunked==true.  Do this by calling [Begin]GetRequestStream before [Begin]GetResponse..
        /// </summary>
        internal static string net_must_provide_request_body {
            get {
                return ResourceManager.GetString("net_must_provide_request_body", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The {0} parameter must represent a valid Uri (see inner exception)..
        /// </summary>
        internal static string net_mustbeuri {
            get {
                return ResourceManager.GetString("net_mustbeuri", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The requirement for mutual authentication was not met by the remote server..
        /// </summary>
        internal static string net_mutualauthfailed {
            get {
                return ResourceManager.GetString("net_mutualauthfailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This request requires buffering data to succeed..
        /// </summary>
        internal static string net_need_writebuffering {
            get {
                return ResourceManager.GetString("net_need_writebuffering", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to TransferEncoding requires the SendChunked property to be set to true..
        /// </summary>
        internal static string net_needchunked {
            get {
                return ResourceManager.GetString("net_needchunked", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to There were not enough free threads in the ThreadPool to complete the operation..
        /// </summary>
        internal static string net_needmorethreads {
            get {
                return ResourceManager.GetString("net_needmorethreads", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Specified value does not contain a &apos;class&apos; attribute..
        /// </summary>
        internal static string net_no_classname {
            get {
                return ResourceManager.GetString("net_no_classname", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The stream does not support concurrent IO read or write operations..
        /// </summary>
        internal static string net_no_concurrent_io_allowed {
            get {
                return ResourceManager.GetString("net_no_concurrent_io_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The value class attribute is not valid..
        /// </summary>
        internal static string net_no_typename {
            get {
                return ResourceManager.GetString("net_no_typename", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to 100-Continue may not be set using this property..
        /// </summary>
        internal static string net_no100 {
            get {
                return ResourceManager.GetString("net_no100", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Chunked encoding must be set via the SendChunked property..
        /// </summary>
        internal static string net_nochunked {
            get {
                return ResourceManager.GetString("net_nochunked", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Chunked encoding upload is not supported on the HTTP/1.0 protocol..
        /// </summary>
        internal static string net_nochunkuploadonhttp10 {
            get {
                return ResourceManager.GetString("net_nochunkuploadonhttp10", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Content-Length or Chunked Encoding cannot be set for an operation that does not write data..
        /// </summary>
        internal static string net_nocontentlengthonget {
            get {
                return ResourceManager.GetString("net_nocontentlengthonget", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Default credentials cannot be supplied for the {0} authentication scheme..
        /// </summary>
        internal static string net_nodefaultcreds {
            get {
                return ResourceManager.GetString("net_nodefaultcreds", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A non-CLS Compliant Exception (i.e. an object that does not derive from System.Exception) was thrown..
        /// </summary>
        internal static string net_nonClsCompliantException {
            get {
                return ResourceManager.GetString("net_nonClsCompliantException", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The URI scheme for the supplied IWebProxy has the illegal value &apos;{0}&apos;. Only &apos;http&apos; is supported..
        /// </summary>
        internal static string net_nonhttpproxynotallowed {
            get {
                return ResourceManager.GetString("net_nonhttpproxynotallowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This stream does not support seek operations..
        /// </summary>
        internal static string net_noseek {
            get {
                return ResourceManager.GetString("net_noseek", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Specified value does not contain &apos;IPermission&apos; as its tag..
        /// </summary>
        internal static string net_not_ipermission {
            get {
                return ResourceManager.GetString("net_not_ipermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The operation is not allowed on non-connected sockets..
        /// </summary>
        internal static string net_notconnected {
            get {
                return ResourceManager.GetString("net_notconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The operation is not allowed on non-stream oriented sockets..
        /// </summary>
        internal static string net_notstream {
            get {
                return ResourceManager.GetString("net_notstream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The supplied string is not a valid HTTP token..
        /// </summary>
        internal static string net_nottoken {
            get {
                return ResourceManager.GetString("net_nottoken", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot send a content-body with this verb-type..
        /// </summary>
        internal static string net_nouploadonget {
            get {
                return ResourceManager.GetString("net_nouploadonget", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Sum of offset and count cannot be greater than the length of the buffer..
        /// </summary>
        internal static string net_offset_plus_count {
            get {
                return ResourceManager.GetString("net_offset_plus_count", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Current OS installation type is &apos;{0}&apos;..
        /// </summary>
        internal static string net_osinstalltype {
            get {
                return ResourceManager.GetString("net_osinstalltype", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Argument must be a string instead of {0}..
        /// </summary>
        internal static string net_param_not_string {
            get {
                return ResourceManager.GetString("net_param_not_string", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Can&apos;t queue counter initialization logic on a thread pool thread. System.Net performance counters will not be available..
        /// </summary>
        internal static string net_perfcounter_cant_queue_workitem {
            get {
                return ResourceManager.GetString("net_perfcounter_cant_queue_workitem", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to System.Net performance counter initialization started..
        /// </summary>
        internal static string net_perfcounter_initialization_started {
            get {
                return ResourceManager.GetString("net_perfcounter_initialization_started", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to System.Net performance counters initialization completed with errors. See System.Net trace file for more information..
        /// </summary>
        internal static string net_perfcounter_initialized_error {
            get {
                return ResourceManager.GetString("net_perfcounter_initialized_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to System.Net performance counters initialization completed successful..
        /// </summary>
        internal static string net_perfcounter_initialized_success {
            get {
                return ResourceManager.GetString("net_perfcounter_initialized_success", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Performance counter category &apos;{0}&apos; doesn&apos;t exist. No System.Net performance counter values available..
        /// </summary>
        internal static string net_perfcounter_nocategory {
            get {
                return ResourceManager.GetString("net_perfcounter_nocategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The value for &apos;{0}&apos; must be specified..
        /// </summary>
        internal static string net_perm_attrib_count {
            get {
                return ResourceManager.GetString("net_perm_attrib_count", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The permission &apos;{0}={1}&apos; cannot be added. Add a separate Attribute statement..
        /// </summary>
        internal static string net_perm_attrib_multi {
            get {
                return ResourceManager.GetString("net_perm_attrib_multi", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot subset Regex. Only support if both patterns are identical..
        /// </summary>
        internal static string net_perm_both_regex {
            get {
                return ResourceManager.GetString("net_perm_both_regex", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The argument value &apos;{0}&apos; is invalid for creating a SocketPermission object..
        /// </summary>
        internal static string net_perm_epname {
            get {
                return ResourceManager.GetString("net_perm_epname", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The parameter value &apos;{0}={1}&apos; is invalid..
        /// </summary>
        internal static string net_perm_invalid_val {
            get {
                return ResourceManager.GetString("net_perm_invalid_val", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;{0}&apos; element contains one or more invalid values..
        /// </summary>
        internal static string net_perm_invalid_val_in_element {
            get {
                return ResourceManager.GetString("net_perm_invalid_val_in_element", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to There are no permissions to check..
        /// </summary>
        internal static string net_perm_none {
            get {
                return ResourceManager.GetString("net_perm_none", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot cast target permission type..
        /// </summary>
        internal static string net_perm_target {
            get {
                return ResourceManager.GetString("net_perm_target", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An exception occurred during a Ping request..
        /// </summary>
        internal static string net_ping {
            get {
                return ResourceManager.GetString("net_ping", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This property is not implemented by this class..
        /// </summary>
        internal static string net_PropertyNotImplementedException {
            get {
                return ResourceManager.GetString("net_PropertyNotImplementedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This property is not supported by this class..
        /// </summary>
        internal static string net_PropertyNotSupportedException {
            get {
                return ResourceManager.GetString("net_PropertyNotSupportedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &apos;{0}&apos; Client can only accept InterNetwork or InterNetworkV6 addresses..
        /// </summary>
        internal static string net_protocol_invalid_family {
            get {
                return ResourceManager.GetString("net_protocol_invalid_family", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Multicast family is not the same as the family of the &apos;{0}&apos; Client..
        /// </summary>
        internal static string net_protocol_invalid_multicast_family {
            get {
                return ResourceManager.GetString("net_protocol_invalid_multicast_family", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;{0}&apos; protocol is not supported by this class..
        /// </summary>
        internal static string net_ProtocolNotSupportedException {
            get {
                return ResourceManager.GetString("net_ProtocolNotSupportedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified value is not a valid day of the week..
        /// </summary>
        internal static string net_proxy_invalid_dayofweek {
            get {
                return ResourceManager.GetString("net_proxy_invalid_dayofweek", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The system proxy settings contain an invalid proxy server setting: &apos;{0}&apos;..
        /// </summary>
        internal static string net_proxy_invalid_url_format {
            get {
                return ResourceManager.GetString("net_proxy_invalid_url_format", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified value is not a valid GMT time..
        /// </summary>
        internal static string net_proxy_not_gmt {
            get {
                return ResourceManager.GetString("net_proxy_not_gmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The ServicePointManager does not support proxies with the {0} scheme..
        /// </summary>
        internal static string net_proxyschemenotsupported {
            get {
                return ResourceManager.GetString("net_proxyschemenotsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The From or To parameter cannot be less than 0..
        /// </summary>
        internal static string net_rangetoosmall {
            get {
                return ResourceManager.GetString("net_rangetoosmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A different range specifier has already been added to this request..
        /// </summary>
        internal static string net_rangetype {
            get {
                return ResourceManager.GetString("net_rangetype", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The stream does not support writing..
        /// </summary>
        internal static string net_readonlystream {
            get {
                return ResourceManager.GetString("net_readonlystream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to WebPermission demand failed for redirect URI..
        /// </summary>
        internal static string net_redirect_perm {
            get {
                return ResourceManager.GetString("net_redirect_perm", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot re-call BeginGetRequestStream/BeginGetResponse while a previous call is still in progress..
        /// </summary>
        internal static string net_repcall {
            get {
                return ResourceManager.GetString("net_repcall", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This operation cannot be performed after the request has been submitted..
        /// </summary>
        internal static string net_reqsubmitted {
            get {
                return ResourceManager.GetString("net_reqsubmitted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The request was aborted: {0}..
        /// </summary>
        internal static string net_requestaborted {
            get {
                return ResourceManager.GetString("net_requestaborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An error occurred on an automatic resubmission of the request..
        /// </summary>
        internal static string net_resubmitcanceled {
            get {
                return ResourceManager.GetString("net_resubmitcanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot handle redirect from HTTP/HTTPS protocols to other dissimilar ones..
        /// </summary>
        internal static string net_resubmitprotofailed {
            get {
                return ResourceManager.GetString("net_resubmitprotofailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to revert the thread token after authenticating a Web Request..
        /// </summary>
        internal static string net_revert_token {
            get {
                return ResourceManager.GetString("net_revert_token", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This operation cannot be performed after the response has been submitted..
        /// </summary>
        internal static string net_rspsubmitted {
            get {
                return ResourceManager.GetString("net_rspsubmitted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The requested security package is not supported..
        /// </summary>
        internal static string net_securitypackagesupport {
            get {
                return ResourceManager.GetString("net_securitypackagesupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The requested security protocol is not supported..
        /// </summary>
        internal static string net_securityprotocolnotsupported {
            get {
                return ResourceManager.GetString("net_securityprotocolnotsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;{0}&apos; select mode is not supported by this class..
        /// </summary>
        internal static string net_SelectModeNotSupportedException {
            get {
                return ResourceManager.GetString("net_SelectModeNotSupportedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The remote server returned an error: {0}..
        /// </summary>
        internal static string net_servererror {
            get {
                return ResourceManager.GetString("net_servererror", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This property is not supported for protocols that do not use URI..
        /// </summary>
        internal static string net_servicePointAddressNotSupportedInHostMode {
            get {
                return ResourceManager.GetString("net_servicePointAddressNotSupportedInHostMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to impersonate a thread doing authentication of a Web Request..
        /// </summary>
        internal static string net_set_token {
            get {
                return ResourceManager.GetString("net_set_token", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &quot;An asynchronous socket operation is already in progress using this SocketAsyncEventArgs instance.&quot;;.
        /// </summary>
        internal static string net_socketopinprogress {
            get {
                return ResourceManager.GetString("net_socketopinprogress", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The operation is not allowed on a non-blocking Socket..
        /// </summary>
        internal static string net_sockets_blocking {
            get {
                return ResourceManager.GetString("net_sockets_blocking", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Once the socket has been disconnected, you can only accept again asynchronously.  BeginAccept must be called on a thread that won&apos;t exit until the operation has been completed..
        /// </summary>
        internal static string net_sockets_disconnectedAccept {
            get {
                return ResourceManager.GetString("net_sockets_disconnectedAccept", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Once the socket has been disconnected, you can only reconnect again asynchronously, and only to a different EndPoint.  BeginConnect must be called on a thread that won&apos;t exit until the operation has been completed..
        /// </summary>
        internal static string net_sockets_disconnectedConnect {
            get {
                return ResourceManager.GetString("net_sockets_disconnectedConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to All lists are either null or empty..
        /// </summary>
        internal static string net_sockets_empty_select {
            get {
                return ResourceManager.GetString("net_sockets_empty_select", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The parameter {0} must not be of type DnsEndPoint..
        /// </summary>
        internal static string net_sockets_invalid_dnsendpoint {
            get {
                return ResourceManager.GetString("net_sockets_invalid_dnsendpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The number of specified IP addresses has to be greater than 0..
        /// </summary>
        internal static string net_sockets_invalid_ipaddress_length {
            get {
                return ResourceManager.GetString("net_sockets_invalid_ipaddress_length", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified value is not a valid &apos;{0}&apos;..
        /// </summary>
        internal static string net_sockets_invalid_optionValue {
            get {
                return ResourceManager.GetString("net_sockets_invalid_optionValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified value is not valid..
        /// </summary>
        internal static string net_sockets_invalid_optionValue_all {
            get {
                return ResourceManager.GetString("net_sockets_invalid_optionValue_all", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified value for the socket information is invalid..
        /// </summary>
        internal static string net_sockets_invalid_socketinformation {
            get {
                return ResourceManager.GetString("net_sockets_invalid_socketinformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &quot;This operation is only valid for IPv6 Sockets.&quot;;.
        /// </summary>
        internal static string net_sockets_ipv6only {
            get {
                return ResourceManager.GetString("net_sockets_ipv6only", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to You must call the Bind method before performing this operation..
        /// </summary>
        internal static string net_sockets_mustbind {
            get {
                return ResourceManager.GetString("net_sockets_mustbind", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to You must call the Listen method before performing this operation..
        /// </summary>
        internal static string net_sockets_mustlisten {
            get {
                return ResourceManager.GetString("net_sockets_mustlisten", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The socket must not be bound or connected..
        /// </summary>
        internal static string net_sockets_mustnotbebound {
            get {
                return ResourceManager.GetString("net_sockets_mustnotbebound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to You may not perform this operation after calling the Listen method..
        /// </summary>
        internal static string net_sockets_mustnotlisten {
            get {
                return ResourceManager.GetString("net_sockets_mustnotlisten", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}: The socket must not be bound or connected..
        /// </summary>
        internal static string net_sockets_namedmustnotbebound {
            get {
                return ResourceManager.GetString("net_sockets_namedmustnotbebound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to BeginConnect cannot be called while another asynchronous operation is in progress on the same Socket..
        /// </summary>
        internal static string net_sockets_no_duplicate_async {
            get {
                return ResourceManager.GetString("net_sockets_no_duplicate_async", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The operation is not allowed on objects of type {0}. Use only objects of type {1}..
        /// </summary>
        internal static string net_sockets_select {
            get {
                return ResourceManager.GetString("net_sockets_select", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The {0} list contains too many items; a maximum of {1} is allowed..
        /// </summary>
        internal static string net_sockets_toolarge_select {
            get {
                return ResourceManager.GetString("net_sockets_toolarge_select", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Use the Blocking property to change the status of the Socket..
        /// </summary>
        internal static string net_sockets_useblocking {
            get {
                return ResourceManager.GetString("net_sockets_useblocking", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The parameter {0} must contain one or more elements..
        /// </summary>
        internal static string net_sockets_zerolist {
            get {
                return ResourceManager.GetString("net_sockets_zerolist", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Async context creation failed..
        /// </summary>
        internal static string net_ssl_io_async_context {
            get {
                return ResourceManager.GetString("net_ssl_io_async_context", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The remote certificate is invalid according to the validation procedure..
        /// </summary>
        internal static string net_ssl_io_cert_validation {
            get {
                return ResourceManager.GetString("net_ssl_io_cert_validation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The security context has expired..
        /// </summary>
        internal static string net_ssl_io_context_expired {
            get {
                return ResourceManager.GetString("net_ssl_io_context_expired", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The stream is corrupted due to an invalid SSL version number in the SSL protocol header..
        /// </summary>
        internal static string net_ssl_io_corrupted {
            get {
                return ResourceManager.GetString("net_ssl_io_corrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The decryption operation failed, see inner exception..
        /// </summary>
        internal static string net_ssl_io_decrypt {
            get {
                return ResourceManager.GetString("net_ssl_io_decrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The encryption operation failed, see inner exception..
        /// </summary>
        internal static string net_ssl_io_encrypt {
            get {
                return ResourceManager.GetString("net_ssl_io_encrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The handshake failed due to an unexpected packet format..
        /// </summary>
        internal static string net_ssl_io_frame {
            get {
                return ResourceManager.GetString("net_ssl_io_frame", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The handshake failed, see inner exception..
        /// </summary>
        internal static string net_ssl_io_handshake {
            get {
                return ResourceManager.GetString("net_ssl_io_handshake", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The handshake failed. The remote side has dropped the stream..
        /// </summary>
        internal static string net_ssl_io_handshake_start {
            get {
                return ResourceManager.GetString("net_ssl_io_handshake_start", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} cannot be called when another {1} operation is pending..
        /// </summary>
        internal static string net_ssl_io_invalid_begin_call {
            get {
                return ResourceManager.GetString("net_ssl_io_invalid_begin_call", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} can only be called once for each asynchronous operation..
        /// </summary>
        internal static string net_ssl_io_invalid_end_call {
            get {
                return ResourceManager.GetString("net_ssl_io_invalid_end_call", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The server mode SSL must use a certificate with the associated private key..
        /// </summary>
        internal static string net_ssl_io_no_server_cert {
            get {
                return ResourceManager.GetString("net_ssl_io_no_server_cert", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Security Service Providers don&apos;t support extended protection. Please install the latest Security Service Providers update..
        /// </summary>
        internal static string net_ssp_dont_support_cbt {
            get {
                return ResourceManager.GetString("net_ssp_dont_support_cbt", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Not listening. You must call the Start() method before calling this method..
        /// </summary>
        internal static string net_stopped {
            get {
                return ResourceManager.GetString("net_stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The TcpListener must not be listening before performing this operation..
        /// </summary>
        internal static string net_tcplistener_mustbestopped {
            get {
                return ResourceManager.GetString("net_tcplistener_mustbestopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The operation has timed out..
        /// </summary>
        internal static string net_timeout {
            get {
                return ResourceManager.GetString("net_timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The SSL version is not supported..
        /// </summary>
        internal static string net_tls_version {
            get {
                return ResourceManager.GetString("net_tls_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The size of {0} is too long. It cannot be longer than {1} characters..
        /// </summary>
        internal static string net_toolong {
            get {
                return ResourceManager.GetString("net_toolong", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Too many automatic redirections were attempted..
        /// </summary>
        internal static string net_tooManyRedirections {
            get {
                return ResourceManager.GetString("net_tooManyRedirections", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified value must be greater than 0..
        /// </summary>
        internal static string net_toosmall {
            get {
                return ResourceManager.GetString("net_toosmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot send packets to an arbitrary host while connected..
        /// </summary>
        internal static string net_udpconnected {
            get {
                return ResourceManager.GetString("net_udpconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unknown Windows installation type &apos;{0}&apos;..
        /// </summary>
        internal static string net_unknown_osinstalltype {
            get {
                return ResourceManager.GetString("net_unknown_osinstalltype", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The URI prefix is not recognized..
        /// </summary>
        internal static string net_unknown_prefix {
            get {
                return ResourceManager.GetString("net_unknown_prefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A URI scheme name &apos;{0}&apos; already has a registered custom parser..
        /// </summary>
        internal static string net_uri_AlreadyRegistered {
            get {
                return ResourceManager.GetString("net_uri_AlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid URI: The Authority/Host could not be parsed..
        /// </summary>
        internal static string net_uri_BadAuthority {
            get {
                return ResourceManager.GetString("net_uri_BadAuthority", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid URI: The Authority/Host cannot end with a backslash character (&apos;\&apos;)..
        /// </summary>
        internal static string net_uri_BadAuthorityTerminator {
            get {
                return ResourceManager.GetString("net_uri_BadAuthorityTerminator", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid URI: The format of the URI could not be determined..
        /// </summary>
        internal static string net_uri_BadFormat {
            get {
                return ResourceManager.GetString("net_uri_BadFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid URI: The hostname could not be parsed..
        /// </summary>
        internal static string net_uri_BadHostName {
            get {
                return ResourceManager.GetString("net_uri_BadHostName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid URI: Invalid port specified..
        /// </summary>
        internal static string net_uri_BadPort {
            get {
                return ResourceManager.GetString("net_uri_BadPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid URI: The URI scheme is not valid..
        /// </summary>
        internal static string net_uri_BadScheme {
            get {
                return ResourceManager.GetString("net_uri_BadScheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid URI: There is an invalid sequence in the string..
        /// </summary>
        internal static string net_uri_BadString {
            get {
                return ResourceManager.GetString("net_uri_BadString", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An invalid Unicode character by IDN standards was specified in the host..
        /// </summary>
        internal static string net_uri_BadUnicodeHostForIdn {
            get {
                return ResourceManager.GetString("net_uri_BadUnicodeHostForIdn", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid URI: The username:password construct is badly formed..
        /// </summary>
        internal static string net_uri_BadUserPassword {
            get {
                return ResourceManager.GetString("net_uri_BadUserPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A relative URI cannot be created because the &apos;uriString&apos; parameter represents an absolute URI..
        /// </summary>
        internal static string net_uri_CannotCreateRelative {
            get {
                return ResourceManager.GetString("net_uri_CannotCreateRelative", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid URI: The URI is empty..
        /// </summary>
        internal static string net_uri_EmptyUri {
            get {
                return ResourceManager.GetString("net_uri_EmptyUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The generic authority &apos;{0}&apos; is not a valid dns name..
        /// </summary>
        internal static string net_uri_GenericAuthorityNotDnsSafe {
            get {
                return ResourceManager.GetString("net_uri_GenericAuthorityNotDnsSafe", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The value &apos;{0}&apos; passed for the UriKind parameter is invalid..
        /// </summary>
        internal static string net_uri_InvalidUriKind {
            get {
                return ResourceManager.GetString("net_uri_InvalidUriKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid URI: A Dos path must be rooted, for example, &apos;c:\&apos;..
        /// </summary>
        internal static string net_uri_MustRootedPath {
            get {
                return ResourceManager.GetString("net_uri_MustRootedPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The URI parser instance passed into &apos;uriParser&apos; parameter is already registered with the scheme name &apos;{0}&apos;..
        /// </summary>
        internal static string net_uri_NeedFreshParser {
            get {
                return ResourceManager.GetString("net_uri_NeedFreshParser", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This operation is not supported for a relative URI..
        /// </summary>
        internal static string net_uri_NotAbsolute {
            get {
                return ResourceManager.GetString("net_uri_NotAbsolute", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to UriComponents.SerializationInfoString must not be combined with other UriComponents..
        /// </summary>
        internal static string net_uri_NotJustSerialization {
            get {
                return ResourceManager.GetString("net_uri_NotJustSerialization", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A derived type &apos;{0}&apos; has reported an invalid value for the Uri port &apos;{1}&apos;..
        /// </summary>
        internal static string net_uri_PortOutOfRange {
            get {
                return ResourceManager.GetString("net_uri_PortOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid URI: The Uri scheme is too long..
        /// </summary>
        internal static string net_uri_SchemeLimit {
            get {
                return ResourceManager.GetString("net_uri_SchemeLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid URI: The Uri string is too long..
        /// </summary>
        internal static string net_uri_SizeLimit {
            get {
                return ResourceManager.GetString("net_uri_SizeLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A derived type &apos;{0}&apos; is responsible for parsing this Uri instance. The base implementation must not be used..
        /// </summary>
        internal static string net_uri_UserDrivenParsing {
            get {
                return ResourceManager.GetString("net_uri_UserDrivenParsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified value cannot be negative..
        /// </summary>
        internal static string net_value_cannot_be_negative {
            get {
                return ResourceManager.GetString("net_value_cannot_be_negative", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An exception occurred during a WebClient request..
        /// </summary>
        internal static string net_webclient {
            get {
                return ResourceManager.GetString("net_webclient", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Content-Type header cannot be changed from its default value for this request..
        /// </summary>
        internal static string net_webclient_ContentType {
            get {
                return ResourceManager.GetString("net_webclient_ContentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified value is not a valid base address..
        /// </summary>
        internal static string net_webclient_invalid_baseaddress {
            get {
                return ResourceManager.GetString("net_webclient_invalid_baseaddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Content-Type header cannot be set to a multipart type for this request..
        /// </summary>
        internal static string net_webclient_Multipart {
            get {
                return ResourceManager.GetString("net_webclient_Multipart", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to WebClient does not support concurrent I/O operations..
        /// </summary>
        internal static string net_webclient_no_concurrent_io_allowed {
            get {
                return ResourceManager.GetString("net_webclient_no_concurrent_io_allowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Specified value has invalid Control characters..
        /// </summary>
        internal static string net_WebHeaderInvalidControlChars {
            get {
                return ResourceManager.GetString("net_WebHeaderInvalidControlChars", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Specified value has invalid CRLF characters..
        /// </summary>
        internal static string net_WebHeaderInvalidCRLFChars {
            get {
                return ResourceManager.GetString("net_WebHeaderInvalidCRLFChars", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Specified value has invalid HTTP Header characters..
        /// </summary>
        internal static string net_WebHeaderInvalidHeaderChars {
            get {
                return ResourceManager.GetString("net_WebHeaderInvalidHeaderChars", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Specified value has invalid non-ASCII characters..
        /// </summary>
        internal static string net_WebHeaderInvalidNonAsciiChars {
            get {
                return ResourceManager.GetString("net_WebHeaderInvalidNonAsciiChars", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Specified value does not have a &apos;:&apos; separator..
        /// </summary>
        internal static string net_WebHeaderMissingColon {
            get {
                return ResourceManager.GetString("net_WebHeaderMissingColon", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to CR must be followed by LF.
        /// </summary>
        internal static string net_WebResponseParseError_CrLfError {
            get {
                return ResourceManager.GetString("net_WebResponseParseError_CrLfError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid header name.
        /// </summary>
        internal static string net_WebResponseParseError_IncompleteHeaderLine {
            get {
                return ResourceManager.GetString("net_WebResponseParseError_IncompleteHeaderLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Response chunk format is invalid.
        /// </summary>
        internal static string net_WebResponseParseError_InvalidChunkFormat {
            get {
                return ResourceManager.GetString("net_WebResponseParseError_InvalidChunkFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &apos;Content-Length&apos; header value is invalid.
        /// </summary>
        internal static string net_WebResponseParseError_InvalidContentLength {
            get {
                return ResourceManager.GetString("net_WebResponseParseError_InvalidContentLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Header name is invalid.
        /// </summary>
        internal static string net_WebResponseParseError_InvalidHeaderName {
            get {
                return ResourceManager.GetString("net_WebResponseParseError_InvalidHeaderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unexpected server response received.
        /// </summary>
        internal static string net_WebResponseParseError_UnexpectedServerResponse {
            get {
                return ResourceManager.GetString("net_WebResponseParseError_UnexpectedServerResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The {0} operation was called on an incoming WebSocket request without required &apos;{1}&apos; header. .
        /// </summary>
        internal static string net_WebSockets_AcceptHeaderNotFound {
            get {
                return ResourceManager.GetString("net_WebSockets_AcceptHeaderNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The {0} operation was called on an incoming request that did not specify a &apos;{1}: {2}&apos; header or the {2} header not contain &apos;{3}&apos;. {2} specified by the client was &apos;{4}&apos;..
        /// </summary>
        internal static string net_WebSockets_AcceptNotAWebSocket {
            get {
                return ResourceManager.GetString("net_WebSockets_AcceptNotAWebSocket", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The WebSocket client request requested &apos;{0}&apos; protocol(s), but server is only accepting &apos;{1}&apos; protocol(s)..
        /// </summary>
        internal static string net_WebSockets_AcceptUnsupportedProtocol {
            get {
                return ResourceManager.GetString("net_WebSockets_AcceptUnsupportedProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The {0} operation was called on an incoming request with WebSocket version &apos;{1}&apos;, expected &apos;{2}&apos;. .
        /// </summary>
        internal static string net_WebSockets_AcceptUnsupportedWebSocketVersion {
            get {
                return ResourceManager.GetString("net_WebSockets_AcceptUnsupportedWebSocketVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to There is already one outstanding &apos;{0}&apos; call for this WebSocket instance. ReceiveAsync and SendAsync can be called simultaneously, but at most one outstanding operation for each of them is allowed at the same time..
        /// </summary>
        internal static string net_Websockets_AlreadyOneOutstandingOperation {
            get {
                return ResourceManager.GetString("net_Websockets_AlreadyOneOutstandingOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The WebSocket has already been started..
        /// </summary>
        internal static string net_WebSockets_AlreadyStarted {
            get {
                return ResourceManager.GetString("net_WebSockets_AlreadyStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The message type &apos;{0}&apos; is not allowed for the &apos;{1}&apos; operation. Valid message types are: &apos;{2}, {3}&apos;. To close the WebSocket, use the &apos;{4}&apos; operation instead. .
        /// </summary>
        internal static string net_WebSockets_Argument_InvalidMessageType {
            get {
                return ResourceManager.GetString("net_WebSockets_Argument_InvalidMessageType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The byte array must have a length of at least &apos;{0}&apos; bytes.  .
        /// </summary>
        internal static string net_WebSockets_ArgumentOutOfRange_InternalBuffer {
            get {
                return ResourceManager.GetString("net_WebSockets_ArgumentOutOfRange_InternalBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The value of the &apos;{0}&apos; parameter ({1}) must be less than or equal to {2}..
        /// </summary>
        internal static string net_WebSockets_ArgumentOutOfRange_TooBig {
            get {
                return ResourceManager.GetString("net_WebSockets_ArgumentOutOfRange_TooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The argument must be a value greater than {0}..
        /// </summary>
        internal static string net_WebSockets_ArgumentOutOfRange_TooSmall {
            get {
                return ResourceManager.GetString("net_WebSockets_ArgumentOutOfRange_TooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The WebSocket client did not request any protocols, but server attempted to accept &apos;{0}&apos; protocol(s). .
        /// </summary>
        internal static string net_WebSockets_ClientAcceptingNoProtocols {
            get {
                return ResourceManager.GetString("net_WebSockets_ClientAcceptingNoProtocols", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The WebSocket client sent a blank &apos;{0}&apos; header; this is not allowed by the WebSocket protocol specification. The client should omit the header if the client is not negotiating any sub-protocols. .
        /// </summary>
        internal static string net_WebSockets_ClientSecWebSocketProtocolsBlank {
            get {
                return ResourceManager.GetString("net_WebSockets_ClientSecWebSocketProtocolsBlank", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The server returned status code &apos;{0}&apos; when status code &apos;101&apos; was expected..
        /// </summary>
        internal static string net_WebSockets_Connect101Expected {
            get {
                return ResourceManager.GetString("net_WebSockets_Connect101Expected", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The remote party closed the WebSocket connection without completing the close handshake..
        /// </summary>
        internal static string net_WebSockets_ConnectionClosedPrematurely_Generic {
            get {
                return ResourceManager.GetString("net_WebSockets_ConnectionClosedPrematurely_Generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An internal WebSocket error occurred. Please see the innerException, if present, for more details. .
        /// </summary>
        internal static string net_WebSockets_Generic {
            get {
                return ResourceManager.GetString("net_WebSockets_Generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The WebSocket request or response contained unsupported header(s). .
        /// </summary>
        internal static string net_WebSockets_HeaderError_Generic {
            get {
                return ResourceManager.GetString("net_WebSockets_HeaderError_Generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The buffer type &apos;{0}&apos; is invalid. Valid buffer types are: &apos;{1}&apos;, &apos;{2}&apos;, &apos;{3}&apos;, &apos;{4}&apos;, &apos;{5}&apos;..
        /// </summary>
        internal static string net_WebSockets_InvalidBufferType {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidBufferType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The WebSocket protocol &apos;{0}&apos; is invalid because it contains the invalid character &apos;{1}&apos;..
        /// </summary>
        internal static string net_WebSockets_InvalidCharInProtocolString {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidCharInProtocolString", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The close status code &apos;{0}&apos; is reserved for system use only and cannot be specified when calling this method..
        /// </summary>
        internal static string net_WebSockets_InvalidCloseStatusCode {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidCloseStatusCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The close status description &apos;{0}&apos; is too long. The UTF8-representation of the status description must not be longer than {1} bytes..
        /// </summary>
        internal static string net_WebSockets_InvalidCloseStatusDescription {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidCloseStatusDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Empty string is not a valid subprotocol value. Please use &quot;null&quot; to specify no value..
        /// </summary>
        internal static string net_WebSockets_InvalidEmptySubProtocol {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidEmptySubProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The received message type &apos;{2}&apos; is invalid after calling {0}. {0} should only be used if no more data is expected from the remote endpoint. Use &apos;{1}&apos; instead to keep being able to receive data but close the output channel..
        /// </summary>
        internal static string net_WebSockets_InvalidMessageType {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidMessageType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The received  message type is invalid after calling {0}. {0} should only be used if no more data is expected from the remote endpoint. Use &apos;{1}&apos; instead to keep being able to receive data but close the output channel..
        /// </summary>
        internal static string net_WebSockets_InvalidMessageType_Generic {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidMessageType_Generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The WebSocket schemes must be registered with the HttpWebRequest class..
        /// </summary>
        internal static string net_WebSockets_InvalidRegistration {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidRegistration", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;{0}&apos; header value &apos;{1}&apos; is invalid..
        /// </summary>
        internal static string net_WebSockets_InvalidResponseHeader {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidResponseHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The WebSocket is in an invalid state (&apos;{0}&apos;) for this operation. Valid states are: &apos;{1}&apos;.
        /// </summary>
        internal static string net_WebSockets_InvalidState {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidState", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;{0}&apos; instance cannot be used for communication because it has been transitioned into the &apos;{1}&apos; state..
        /// </summary>
        internal static string net_WebSockets_InvalidState_ClosedOrAborted {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidState_ClosedOrAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The WebSocket instance cannot be used for communication because it has been transitioned into an invalid state..
        /// </summary>
        internal static string net_WebSockets_InvalidState_Generic {
            get {
                return ResourceManager.GetString("net_WebSockets_InvalidState_Generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An error occurred when sending the WebSocket HTTP upgrade response during the {0} operation. The HRESULT returned is &apos;{1}&apos;.
        /// </summary>
        internal static string net_WebSockets_NativeSendResponseHeaders {
            get {
                return ResourceManager.GetString("net_WebSockets_NativeSendResponseHeaders", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Duplicate protocols are not allowed: &apos;{0}&apos;..
        /// </summary>
        internal static string net_WebSockets_NoDuplicateProtocol {
            get {
                return ResourceManager.GetString("net_WebSockets_NoDuplicateProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A WebSocket operation was called on a request or response that is not a WebSocket..
        /// </summary>
        internal static string net_WebSockets_NotAWebSocket_Generic {
            get {
                return ResourceManager.GetString("net_WebSockets_NotAWebSocket_Generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The WebSocket is not connected..
        /// </summary>
        internal static string net_WebSockets_NotConnected {
            get {
                return ResourceManager.GetString("net_WebSockets_NotConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The close status description &apos;{0}&apos; is invalid. When using close status code &apos;{1}&apos; the description must be null..
        /// </summary>
        internal static string net_WebSockets_ReasonNotNull {
            get {
                return ResourceManager.GetString("net_WebSockets_ReasonNotNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The WebSocket is in an invalid state for this operation. The &apos;{0}&apos; method has already been called before on this instance. Use &apos;{1}&apos; instead to keep being able to receive data but close the output channel..
        /// </summary>
        internal static string net_WebSockets_ReceiveAsyncDisallowedAfterCloseAsync {
            get {
                return ResourceManager.GetString("net_WebSockets_ReceiveAsyncDisallowedAfterCloseAsync", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Only Uris starting with &apos;ws://&apos; or &apos;wss://&apos; are supported..
        /// </summary>
        internal static string net_WebSockets_Scheme {
            get {
                return ResourceManager.GetString("net_WebSockets_Scheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The WebSocket protocol is not supported on this platform..
        /// </summary>
        internal static string net_WebSockets_UnsupportedPlatform {
            get {
                return ResourceManager.GetString("net_WebSockets_UnsupportedPlatform", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The WebSocket request or response operation was called with unsupported protocol(s). .
        /// </summary>
        internal static string net_WebSockets_UnsupportedProtocol_Generic {
            get {
                return ResourceManager.GetString("net_WebSockets_UnsupportedProtocol_Generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unsupported WebSocket version..
        /// </summary>
        internal static string net_WebSockets_UnsupportedWebSocketVersion_Generic {
            get {
                return ResourceManager.GetString("net_WebSockets_UnsupportedWebSocketVersion_Generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An exception caused the WebSocket to enter the Aborted state. Please see the InnerException, if present, for more details..
        /// </summary>
        internal static string net_Websockets_WebSocketBaseFaulted {
            get {
                return ResourceManager.GetString("net_Websockets_WebSocketBaseFaulted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The request cache-only policy does not allow a network request and the response is not found in cache.
        /// </summary>
        internal static string net_webstatus_CacheEntryNotFound {
            get {
                return ResourceManager.GetString("net_webstatus_CacheEntryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unable to connect to the remote server.
        /// </summary>
        internal static string net_webstatus_ConnectFailure {
            get {
                return ResourceManager.GetString("net_webstatus_ConnectFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The connection was closed unexpectedly.
        /// </summary>
        internal static string net_webstatus_ConnectionClosed {
            get {
                return ResourceManager.GetString("net_webstatus_ConnectionClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A connection that was expected to be kept alive was closed by the server.
        /// </summary>
        internal static string net_webstatus_KeepAliveFailure {
            get {
                return ResourceManager.GetString("net_webstatus_KeepAliveFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The message length limit was exceeded.
        /// </summary>
        internal static string net_webstatus_MessageLengthLimitExceeded {
            get {
                return ResourceManager.GetString("net_webstatus_MessageLengthLimitExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The remote name could not be resolved.
        /// </summary>
        internal static string net_webstatus_NameResolutionFailure {
            get {
                return ResourceManager.GetString("net_webstatus_NameResolutionFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A pipeline failure occurred.
        /// </summary>
        internal static string net_webstatus_PipelineFailure {
            get {
                return ResourceManager.GetString("net_webstatus_PipelineFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The proxy name could not be resolved.
        /// </summary>
        internal static string net_webstatus_ProxyNameResolutionFailure {
            get {
                return ResourceManager.GetString("net_webstatus_ProxyNameResolutionFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An unexpected error occurred on a receive.
        /// </summary>
        internal static string net_webstatus_ReceiveFailure {
            get {
                return ResourceManager.GetString("net_webstatus_ReceiveFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The request was canceled.
        /// </summary>
        internal static string net_webstatus_RequestCanceled {
            get {
                return ResourceManager.GetString("net_webstatus_RequestCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The request could not be satisfied using a cache-only policy.
        /// </summary>
        internal static string net_webstatus_RequestProhibitedByCachePolicy {
            get {
                return ResourceManager.GetString("net_webstatus_RequestProhibitedByCachePolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The IWebProxy object associated with the request did not allow the request to proceed.
        /// </summary>
        internal static string net_webstatus_RequestProhibitedByProxy {
            get {
                return ResourceManager.GetString("net_webstatus_RequestProhibitedByProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Could not create SSL/TLS secure channel.
        /// </summary>
        internal static string net_webstatus_SecureChannelFailure {
            get {
                return ResourceManager.GetString("net_webstatus_SecureChannelFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An unexpected error occurred on a send.
        /// </summary>
        internal static string net_webstatus_SendFailure {
            get {
                return ResourceManager.GetString("net_webstatus_SendFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The server committed a protocol violation.
        /// </summary>
        internal static string net_webstatus_ServerProtocolViolation {
            get {
                return ResourceManager.GetString("net_webstatus_ServerProtocolViolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Status success.
        /// </summary>
        internal static string net_webstatus_Success {
            get {
                return ResourceManager.GetString("net_webstatus_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The operation has timed out.
        /// </summary>
        internal static string net_webstatus_Timeout {
            get {
                return ResourceManager.GetString("net_webstatus_Timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Could not establish trust relationship for the SSL/TLS secure channel.
        /// </summary>
        internal static string net_webstatus_TrustFailure {
            get {
                return ResourceManager.GetString("net_webstatus_TrustFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The stream does not support reading..
        /// </summary>
        internal static string net_writeonlystream {
            get {
                return ResourceManager.GetString("net_writeonlystream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This property cannot be set after writing has started..
        /// </summary>
        internal static string net_writestarted {
            get {
                return ResourceManager.GetString("net_writestarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Only HTTP/1.0 and HTTP/1.1 version requests are currently supported..
        /// </summary>
        internal static string net_wrongversion {
            get {
                return ResourceManager.GetString("net_wrongversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The string used by ReadLine and WriteLine to denote a new line..
        /// </summary>
        internal static string NewLine {
            get {
                return ResourceManager.GetString("NewLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot obtain account information..
        /// </summary>
        internal static string NoAccountInfo {
            get {
                return ResourceManager.GetString("NoAccountInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No process is associated with this object..
        /// </summary>
        internal static string NoAssociatedProcess {
            get {
                return ResourceManager.GetString("NoAssociatedProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No async read operation is in progress on the stream..
        /// </summary>
        internal static string NoAsyncOperation {
            get {
                return ResourceManager.GetString("NoAsyncOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to No current EventLog entry available, cursor is located before the first or after the last element of the enumeration..
        /// </summary>
        internal static string NoCurrentEntry {
            get {
                return ResourceManager.GetString("NoCurrentEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot retrieve file mapping size while initializing configuration settings..
        /// </summary>
        internal static string NoFileMappingSize {
            get {
                return ResourceManager.GetString("NoFileMappingSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The {0} category doesn&apos;t provide any instance information, no accurate data can be returned..
        /// </summary>
        internal static string NoInstanceInformation {
            get {
                return ResourceManager.GetString("NoInstanceInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Log to delete was not specified..
        /// </summary>
        internal static string NoLogName {
            get {
                return ResourceManager.GetString("NoLogName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Process was not started by this object, so requested information cannot be determined..
        /// </summary>
        internal static string NoProcessHandle {
            get {
                return ResourceManager.GetString("NoProcessHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Process has exited, so the requested information is not available..
        /// </summary>
        internal static string NoProcessInfo {
            get {
                return ResourceManager.GetString("NoProcessInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Could not find a property for the attribute &apos;{0}&apos;..
        /// </summary>
        internal static string NoPropertyForAttribute {
            get {
                return ResourceManager.GetString("NoPropertyForAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Result cannot be called on a failed Match..
        /// </summary>
        internal static string NoResultOnFailed {
            get {
                return ResourceManager.GetString("NoResultOnFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The setting {0} does not have either an ApplicationScopedSettingAttribute or UserScopedSettingAttribute..
        /// </summary>
        internal static string NoScopeAttributes {
            get {
                return ResourceManager.GetString("NoScopeAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The requested Performance Counter is not a custom counter, it has to be initialized as ReadOnly..
        /// </summary>
        internal static string NotCustomCounter {
            get {
                return ResourceManager.GetString("NotCustomCounter", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Not enough )&apos;s..
        /// </summary>
        internal static string NotEnoughParens {
            get {
                return ResourceManager.GetString("NotEnoughParens", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0}: Not implemented.
        /// </summary>
        internal static string NotImplemented {
            get {
                return ResourceManager.GetString("NotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The base stream is not readable..
        /// </summary>
        internal static string NotReadableStream {
            get {
                return ResourceManager.GetString("NotReadableStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to [Not Set].
        /// </summary>
        internal static string NotSet {
            get {
                return ResourceManager.GetString("NotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This operation is not supported..
        /// </summary>
        internal static string NotSupported {
            get {
                return ResourceManager.GetString("NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This CodeDomProvider does not support this method..
        /// </summary>
        internal static string NotSupported_CodeDomAPI {
            get {
                return ResourceManager.GetString("NotSupported_CodeDomAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Reset is not supported on the Enumerator..
        /// </summary>
        internal static string NotSupported_EnumeratorReset {
            get {
                return ResourceManager.GetString("NotSupported_EnumeratorReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Only asymmetric keys that implement ICspAsymmetricAlgorithm are supported..
        /// </summary>
        internal static string NotSupported_InvalidKeyImpl {
            get {
                return ResourceManager.GetString("NotSupported_InvalidKeyImpl", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The certificate key algorithm is not supported..
        /// </summary>
        internal static string NotSupported_KeyAlgorithm {
            get {
                return ResourceManager.GetString("NotSupported_KeyAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Mutating a key collection derived from a dictionary is not allowed..
        /// </summary>
        internal static string NotSupported_KeyCollectionSet {
            get {
                return ResourceManager.GetString("NotSupported_KeyCollectionSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The NumberStyle option is not supported..
        /// </summary>
        internal static string NotSupported_NumberStyle {
            get {
                return ResourceManager.GetString("NotSupported_NumberStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This operation is only supported on Windows 2000, Windows XP, and higher..
        /// </summary>
        internal static string NotSupported_PlatformRequiresNT {
            get {
                return ResourceManager.GetString("NotSupported_PlatformRequiresNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Collection is read-only..
        /// </summary>
        internal static string NotSupported_ReadOnlyCollection {
            get {
                return ResourceManager.GetString("NotSupported_ReadOnlyCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This operation is not supported on SortedList nested types because they require modifying the original SortedList..
        /// </summary>
        internal static string NotSupported_SortedListNestedWrite {
            get {
                return ResourceManager.GetString("NotSupported_SortedListNestedWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Stream does not support reading..
        /// </summary>
        internal static string NotSupported_UnreadableStream {
            get {
                return ResourceManager.GetString("NotSupported_UnreadableStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Stream does not support seeking..
        /// </summary>
        internal static string NotSupported_UnseekableStream {
            get {
                return ResourceManager.GetString("NotSupported_UnseekableStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Stream does not support writing..
        /// </summary>
        internal static string NotSupported_UnwritableStream {
            get {
                return ResourceManager.GetString("NotSupported_UnwritableStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Mutating a value collection derived from a dictionary is not allowed..
        /// </summary>
        internal static string NotSupported_ValueCollectionSet {
            get {
                return ResourceManager.GetString("NotSupported_ValueCollectionSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SerialPort does not support encoding &apos;{0}&apos;.  The supported encodings include ASCIIEncoding, UTF8Encoding, UnicodeEncoding, UTF32Encoding, and most single or double byte code pages.  For a complete list please see the documentation..
        /// </summary>
        internal static string NotSupportedEncoding {
            get {
                return ResourceManager.GetString("NotSupportedEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to GetPortNames is not supported on Win9x platforms..
        /// </summary>
        internal static string NotSupportedOS {
            get {
                return ResourceManager.GetString("NotSupportedOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Feature is not supported for remote machines..
        /// </summary>
        internal static string NotSupportedRemote {
            get {
                return ResourceManager.GetString("NotSupportedRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Feature is not supported for threads on remote computers..
        /// </summary>
        internal static string NotSupportedRemoteThread {
            get {
                return ResourceManager.GetString("NotSupportedRemoteThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The base stream is not writeable..
        /// </summary>
        internal static string NotWriteableStream {
            get {
                return ResourceManager.GetString("NotWriteableStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified type is not a nullable type..
        /// </summary>
        internal static string NullableConverterBadCtorArg {
            get {
                return ResourceManager.GetString("NullableConverterBadCtorArg", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The &apos;{0}&apos; property cannot contain null or empty strings..
        /// </summary>
        internal static string NullOrEmpty_Value_in_Property {
            get {
                return ResourceManager.GetString("NullOrEmpty_Value_in_Property", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Object {0} has been disposed and can no longer be used..
        /// </summary>
        internal static string ObjectDisposed {
            get {
                return ResourceManager.GetString("ObjectDisposed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Can not access a closed Stream..
        /// </summary>
        internal static string ObjectDisposed_StreamClosed {
            get {
                return ResourceManager.GetString("ObjectDisposed_StreamClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Can not write to a closed TextWriter..
        /// </summary>
        internal static string ObjectDisposed_WriterClosed {
            get {
                return ResourceManager.GetString("ObjectDisposed_WriterClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot change ObservableCollection during a CollectionChanged event..
        /// </summary>
        internal static string ObservableCollectionReentrancyNotAllowed {
            get {
                return ResourceManager.GetString("ObservableCollectionReentrancyNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &apos;switchValue&apos; and &apos;switchName&apos; cannot both be specified on source &apos;{0}&apos;..
        /// </summary>
        internal static string Only_specify_one {
            get {
                return ResourceManager.GetString("Only_specify_one", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This operation is only allowed once per object..
        /// </summary>
        internal static string OnlyAllowedOnce {
            get {
                return ResourceManager.GetString("OnlyAllowedOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The OrderedDictionary is readonly and cannot be modified..
        /// </summary>
        internal static string OrderedDictionary_ReadOnly {
            get {
                return ResourceManager.GetString("OrderedDictionary_ReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to There was an error deserializing the OrderedDictionary.  The ArrayList does not contain DictionaryEntries..
        /// </summary>
        internal static string OrderedDictionary_SerializationMismatch {
            get {
                return ResourceManager.GetString("OrderedDictionary_SerializationMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Could not allocate needed memory..
        /// </summary>
        internal static string OutOfMemory {
            get {
                return ResourceManager.GetString("OutOfMemory", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to User event handler to call for async IO with StandardOutput stream..
        /// </summary>
        internal static string OutputDataReceived {
            get {
                return ResourceManager.GetString("OutputDataReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to BigInteger cannot represent infinity..
        /// </summary>
        internal static string Overflow_BigIntInfinity {
            get {
                return ResourceManager.GetString("Overflow_BigIntInfinity", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Value was either too large or too small for a Decimal..
        /// </summary>
        internal static string Overflow_Decimal {
            get {
                return ResourceManager.GetString("Overflow_Decimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Value was either too large or too small for an Int32..
        /// </summary>
        internal static string Overflow_Int32 {
            get {
                return ResourceManager.GetString("Overflow_Int32", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Value was either too large or too small for an Int64..
        /// </summary>
        internal static string Overflow_Int64 {
            get {
                return ResourceManager.GetString("Overflow_Int64", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The value is not a number..
        /// </summary>
        internal static string Overflow_NotANumber {
            get {
                return ResourceManager.GetString("Overflow_NotANumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The value could not be parsed..
        /// </summary>
        internal static string Overflow_ParseBigInteger {
            get {
                return ResourceManager.GetString("Overflow_ParseBigInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Value was either too large or too small for a UInt32..
        /// </summary>
        internal static string Overflow_UInt32 {
            get {
                return ResourceManager.GetString("Overflow_UInt32", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Value was either too large or too small for a UInt64..
        /// </summary>
        internal static string Overflow_UInt64 {
            get {
                return ResourceManager.GetString("Overflow_UInt64", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The size of {0} is too big. It cannot be longer than {1} characters..
        /// </summary>
        internal static string ParameterTooLong {
            get {
                return ResourceManager.GetString("ParameterTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The scheme for parity checking each received byte and marking each transmitted byte..
        /// </summary>
        internal static string Parity {
            get {
                return ResourceManager.GetString("Parity", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Byte with which to replace bytes received with parity errors..
        /// </summary>
        internal static string ParityReplace {
            get {
                return ResourceManager.GetString("ParityReplace", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &lt;The original value of this property potentially contains file system information and has been suppressed.&gt;.
        /// </summary>
        internal static string PartialTrustErrorTextReplacement {
            get {
                return ResourceManager.GetString("PartialTrustErrorTextReplacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to When used in partial trust, langID must be C#, VB, J#, or JScript, and the language provider must be in the global assembly cache..
        /// </summary>
        internal static string PartialTrustIllegalProvider {
            get {
                return ResourceManager.GetString("PartialTrustIllegalProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The character &apos;{0}&apos; in the pattern provided is not valid..
        /// </summary>
        internal static string PatternInvalidChar {
            get {
                return ResourceManager.GetString("PatternInvalidChar", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Property Pages.
        /// </summary>
        internal static string PBRSToolTipProperty_Pages {
            get {
                return ResourceManager.GetString("PBRSToolTipProperty Pages", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The description message for this counter..
        /// </summary>
        internal static string PC_CounterHelp {
            get {
                return ResourceManager.GetString("PC_CounterHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The counter type indicates how to interpret the value of the counter, for example an actual count or a rate of change..
        /// </summary>
        internal static string PC_CounterType {
            get {
                return ResourceManager.GetString("PC_CounterType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Directly accesses the raw value of this counter.  The counter must have been created using this component..
        /// </summary>
        internal static string PC_RawValue {
            get {
                return ResourceManager.GetString("PC_RawValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Indicates if the counter is read only.  Remote counters and counters not created using this component are read-only..
        /// </summary>
        internal static string PC_ReadOnly {
            get {
                return ResourceManager.GetString("PC_ReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Category name of the performance counter object..
        /// </summary>
        internal static string PCCategoryName {
            get {
                return ResourceManager.GetString("PCCategoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Counter name of the performance counter object..
        /// </summary>
        internal static string PCCounterName {
            get {
                return ResourceManager.GetString("PCCounterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Specifies the lifetime of the instance..
        /// </summary>
        internal static string PCInstanceLifetime {
            get {
                return ResourceManager.GetString("PCInstanceLifetime", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Instance name of the performance counter object..
        /// </summary>
        internal static string PCInstanceName {
            get {
                return ResourceManager.GetString("PCInstanceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Specifies the machine from where to read the performance data..
        /// </summary>
        internal static string PCMachineName {
            get {
                return ResourceManager.GetString("PCMachineName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Writeable performance counters are not allowed when running in AppContainer..
        /// </summary>
        internal static string PCNotSupportedUnderAppContainer {
            get {
                return ResourceManager.GetString("PCNotSupportedUnderAppContainer", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An async read operation has already been started on the stream..
        /// </summary>
        internal static string PendingAsyncOperation {
            get {
                return ResourceManager.GetString("PendingAsyncOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to There was an error calculating the PerformanceCounter value (0x{0})..
        /// </summary>
        internal static string PerfCounterPdhError {
            get {
                return ResourceManager.GetString("PerfCounterPdhError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid category name. Its length must be in the range between &apos;{0}&apos; and &apos;{1}&apos;. Double quotes, control characters and leading or trailing spaces are not allowed..
        /// </summary>
        internal static string PerfInvalidCategoryName {
            get {
                return ResourceManager.GetString("PerfInvalidCategoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid counter name. Its length must be in the range between &apos;{0}&apos; and &apos;{1}&apos;. Double quotes, control characters and leading or trailing spaces are not allowed..
        /// </summary>
        internal static string PerfInvalidCounterName {
            get {
                return ResourceManager.GetString("PerfInvalidCounterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Invalid help string. Its length must be in the range between &apos;{0}&apos; and &apos;{1}&apos;..
        /// </summary>
        internal static string PerfInvalidHelp {
            get {
                return ResourceManager.GetString("PerfInvalidHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot create Performance Category &apos;{0}&apos; because it already exists..
        /// </summary>
        internal static string PerformanceCategoryExists {
            get {
                return ResourceManager.GetString("PerformanceCategoryExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Represents a Windows performance counter component..
        /// </summary>
        internal static string PerformanceCounterDesc {
            get {
                return ResourceManager.GetString("PerformanceCounterDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Parameter must be of type enum..
        /// </summary>
        internal static string PermissionBadParameterEnum {
            get {
                return ResourceManager.GetString("PermissionBadParameterEnum", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Length must be greater than {0}..
        /// </summary>
        internal static string PermissionInvalidLength {
            get {
                return ResourceManager.GetString("PermissionInvalidLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The requested item doesn&apos;t exist..
        /// </summary>
        internal static string PermissionItemDoesntExist {
            get {
                return ResourceManager.GetString("PermissionItemDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The item provided already exists..
        /// </summary>
        internal static string PermissionItemExists {
            get {
                return ResourceManager.GetString("PermissionItemExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The number of elements on the access path must be the same as the number of tag names..
        /// </summary>
        internal static string PermissionNumberOfElements {
            get {
                return ResourceManager.GetString("PermissionNumberOfElements", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Type mismatch..
        /// </summary>
        internal static string PermissionTypeMismatch {
            get {
                return ResourceManager.GetString("PermissionTypeMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The port is already open..
        /// </summary>
        internal static string Port_already_open {
            get {
                return ResourceManager.GetString("Port_already_open", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The port is closed..
        /// </summary>
        internal static string Port_not_open {
            get {
                return ResourceManager.GetString("Port_not_open", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The name of the communications port to open..
        /// </summary>
        internal static string PortName {
            get {
                return ResourceManager.GetString("PortName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The PortName cannot be empty..
        /// </summary>
        internal static string PortNameEmpty_String {
            get {
                return ResourceManager.GetString("PortNameEmpty_String", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Position cannot be less than zero..
        /// </summary>
        internal static string PositionOutOfRange {
            get {
                return ResourceManager.GetString("PositionOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The operation couldn&apos;t be completed, potential internal deadlock..
        /// </summary>
        internal static string PossibleDeadlock {
            get {
                return ResourceManager.GetString("PossibleDeadlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The AboveNormal and BelowNormal priority classes are not available on this platform..
        /// </summary>
        internal static string PriorityClassNotSupported {
            get {
                return ResourceManager.GetString("PriorityClassNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Command line arguments that will be passed to the application specified by the FileName property..
        /// </summary>
        internal static string ProcessArguments {
            get {
                return ResourceManager.GetString("ProcessArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Indicates if the process component is associated with a real process..
        /// </summary>
        internal static string ProcessAssociated {
            get {
                return ResourceManager.GetString("ProcessAssociated", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The base priority computed based on the priority class that all threads run relative to..
        /// </summary>
        internal static string ProcessBasePriority {
            get {
                return ResourceManager.GetString("ProcessBasePriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Whether to start the process without creating a new window to contain it..
        /// </summary>
        internal static string ProcessCreateNoWindow {
            get {
                return ResourceManager.GetString("ProcessCreateNoWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Provides access to local and remote processes, enabling starting and stopping of local processes..
        /// </summary>
        internal static string ProcessDesc {
            get {
                return ResourceManager.GetString("ProcessDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Process performance counter is disabled, so the requested operation cannot be performed..
        /// </summary>
        internal static string ProcessDisabled {
            get {
                return ResourceManager.GetString("ProcessDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Whether the process component should watch for the associated process to exit, and raise the Exited event..
        /// </summary>
        internal static string ProcessEnableRaisingEvents {
            get {
                return ResourceManager.GetString("ProcessEnableRaisingEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Set of environment variables that apply to this process and child processes..
        /// </summary>
        internal static string ProcessEnvironmentVariables {
            get {
                return ResourceManager.GetString("ProcessEnvironmentVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Whether to show an error dialog to the user if there is an error..
        /// </summary>
        internal static string ProcessErrorDialog {
            get {
                return ResourceManager.GetString("ProcessErrorDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The value returned from the associated process when it terminated..
        /// </summary>
        internal static string ProcessExitCode {
            get {
                return ResourceManager.GetString("ProcessExitCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to If the WatchForExit property is set to true, then this event is raised when the associated process exits..
        /// </summary>
        internal static string ProcessExited {
            get {
                return ResourceManager.GetString("ProcessExited", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The time that the associated process exited..
        /// </summary>
        internal static string ProcessExitTime {
            get {
                return ResourceManager.GetString("ProcessExitTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The name of the application, document or URL to start..
        /// </summary>
        internal static string ProcessFileName {
            get {
                return ResourceManager.GetString("ProcessFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Returns the native handle for this process.   The handle is only available if the process was started using this component..
        /// </summary>
        internal static string ProcessHandle {
            get {
                return ResourceManager.GetString("ProcessHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The number of native handles associated with this process..
        /// </summary>
        internal static string ProcessHandleCount {
            get {
                return ResourceManager.GetString("ProcessHandleCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot process request because the process ({0}) has exited..
        /// </summary>
        internal static string ProcessHasExited {
            get {
                return ResourceManager.GetString("ProcessHasExited", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot process request because the process has exited..
        /// </summary>
        internal static string ProcessHasExitedNoId {
            get {
                return ResourceManager.GetString("ProcessHasExitedNoId", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The unique identifier for the process..
        /// </summary>
        internal static string ProcessId {
            get {
                return ResourceManager.GetString("ProcessId", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Feature requires a process identifier..
        /// </summary>
        internal static string ProcessIdRequired {
            get {
                return ResourceManager.GetString("ProcessIdRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to PerformanceCounterInstanceLifetime.Process is not valid in the global shared memory.  If your performance counter category was created with an older version of the Framework, it uses the global shared memory.  Either use PerformanceCounterInstanceLifetime.Global, or if applications running on older versions of the Framework do not need to write to your category, delete and recreate it..
        /// </summary>
        internal static string ProcessLifetimeNotValidInGlobal {
            get {
                return ResourceManager.GetString("ProcessLifetimeNotValidInGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The name of the machine the running the process..
        /// </summary>
        internal static string ProcessMachineName {
            get {
                return ResourceManager.GetString("ProcessMachineName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The main module for the associated process..
        /// </summary>
        internal static string ProcessMainModule {
            get {
                return ResourceManager.GetString("ProcessMainModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The handle of the main window for the process..
        /// </summary>
        internal static string ProcessMainWindowHandle {
            get {
                return ResourceManager.GetString("ProcessMainWindowHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The caption of the main window for the process..
        /// </summary>
        internal static string ProcessMainWindowTitle {
            get {
                return ResourceManager.GetString("ProcessMainWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The maximum amount of physical memory the process has required since it was started..
        /// </summary>
        internal static string ProcessMaxWorkingSet {
            get {
                return ResourceManager.GetString("ProcessMaxWorkingSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The minimum amount of physical memory the process has required since it was started..
        /// </summary>
        internal static string ProcessMinWorkingSet {
            get {
                return ResourceManager.GetString("ProcessMinWorkingSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The modules that have been loaded by the associated process..
        /// </summary>
        internal static string ProcessModules {
            get {
                return ResourceManager.GetString("ProcessModules", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The number of bytes of non pageable system  memory the process is using..
        /// </summary>
        internal static string ProcessNonpagedSystemMemorySize {
            get {
                return ResourceManager.GetString("ProcessNonpagedSystemMemorySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Thread {0} found, but no process {1} found..
        /// </summary>
        internal static string ProcessNotFound {
            get {
                return ResourceManager.GetString("ProcessNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The current amount of memory that can be paged to disk that the process is using..
        /// </summary>
        internal static string ProcessPagedMemorySize {
            get {
                return ResourceManager.GetString("ProcessPagedMemorySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The number of bytes of pageable system memory the process is using..
        /// </summary>
        internal static string ProcessPagedSystemMemorySize {
            get {
                return ResourceManager.GetString("ProcessPagedSystemMemorySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The maximum amount of memory that can be paged to disk that the process has used since it was started..
        /// </summary>
        internal static string ProcessPeakPagedMemorySize {
            get {
                return ResourceManager.GetString("ProcessPeakPagedMemorySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The maximum amount of virtual memory the process has allocated since it was started..
        /// </summary>
        internal static string ProcessPeakVirtualMemorySize {
            get {
                return ResourceManager.GetString("ProcessPeakVirtualMemorySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The maximum amount of physical memory the process has used since it was started..
        /// </summary>
        internal static string ProcessPeakWorkingSet {
            get {
                return ResourceManager.GetString("ProcessPeakWorkingSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Whether this process would like a priority boost when the user interacts with it..
        /// </summary>
        internal static string ProcessPriorityBoostEnabled {
            get {
                return ResourceManager.GetString("ProcessPriorityBoostEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The priority that the threads in the process run relative to..
        /// </summary>
        internal static string ProcessPriorityClass {
            get {
                return ResourceManager.GetString("ProcessPriorityClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The current amount of memory that the process has allocated that cannot be shared with other processes..
        /// </summary>
        internal static string ProcessPrivateMemorySize {
            get {
                return ResourceManager.GetString("ProcessPrivateMemorySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The amount of CPU time the process spent inside the operating system core..
        /// </summary>
        internal static string ProcessPrivilegedProcessorTime {
            get {
                return ResourceManager.GetString("ProcessPrivilegedProcessorTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The name of the process..
        /// </summary>
        internal static string ProcessProcessName {
            get {
                return ResourceManager.GetString("ProcessProcessName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A bit mask which represents the processors that the threads within the process are allowed to run on..
        /// </summary>
        internal static string ProcessProcessorAffinity {
            get {
                return ResourceManager.GetString("ProcessProcessorAffinity", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Whether the process&apos;s error output is written to the Process instance&apos;s StandardError member..
        /// </summary>
        internal static string ProcessRedirectStandardError {
            get {
                return ResourceManager.GetString("ProcessRedirectStandardError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Whether the process command input is read from the Process instance&apos;s StandardInput member..
        /// </summary>
        internal static string ProcessRedirectStandardInput {
            get {
                return ResourceManager.GetString("ProcessRedirectStandardInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Whether the process output is written to the Process instance&apos;s StandardOutput member..
        /// </summary>
        internal static string ProcessRedirectStandardOutput {
            get {
                return ResourceManager.GetString("ProcessRedirectStandardOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Whether this process is currently responding..
        /// </summary>
        internal static string ProcessResponding {
            get {
                return ResourceManager.GetString("ProcessResponding", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The identifier for the session of the process..
        /// </summary>
        internal static string ProcessSessionId {
            get {
                return ResourceManager.GetString("ProcessSessionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Standard error stream of the process..
        /// </summary>
        internal static string ProcessStandardError {
            get {
                return ResourceManager.GetString("ProcessStandardError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Standard input stream of the process..
        /// </summary>
        internal static string ProcessStandardInput {
            get {
                return ResourceManager.GetString("ProcessStandardInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Standard output stream of the process..
        /// </summary>
        internal static string ProcessStandardOutput {
            get {
                return ResourceManager.GetString("ProcessStandardOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Specifies information used to start a process..
        /// </summary>
        internal static string ProcessStartInfo {
            get {
                return ResourceManager.GetString("ProcessStartInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The time at which the process was started..
        /// </summary>
        internal static string ProcessStartTime {
            get {
                return ResourceManager.GetString("ProcessStartTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The object used to marshal the event handler calls issued as a result of a Process exit..
        /// </summary>
        internal static string ProcessSynchronizingObject {
            get {
                return ResourceManager.GetString("ProcessSynchronizingObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Indicates if the associated process has been terminated..
        /// </summary>
        internal static string ProcessTerminated {
            get {
                return ResourceManager.GetString("ProcessTerminated", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The threads running in the associated process..
        /// </summary>
        internal static string ProcessThreads {
            get {
                return ResourceManager.GetString("ProcessThreads", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The amount of CPU time the process has used..
        /// </summary>
        internal static string ProcessTotalProcessorTime {
            get {
                return ResourceManager.GetString("ProcessTotalProcessorTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The amount of CPU time the process spent outside the operating system core..
        /// </summary>
        internal static string ProcessUserProcessorTime {
            get {
                return ResourceManager.GetString("ProcessUserProcessorTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Whether to use the operating system shell to start the process..
        /// </summary>
        internal static string ProcessUseShellExecute {
            get {
                return ResourceManager.GetString("ProcessUseShellExecute", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The verb to apply to the document specified by the FileName property..
        /// </summary>
        internal static string ProcessVerb {
            get {
                return ResourceManager.GetString("ProcessVerb", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The amount of virtual memory the process has currently allocated..
        /// </summary>
        internal static string ProcessVirtualMemorySize {
            get {
                return ResourceManager.GetString("ProcessVirtualMemorySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to How the main window should be created when the process starts..
        /// </summary>
        internal static string ProcessWindowStyle {
            get {
                return ResourceManager.GetString("ProcessWindowStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The initial working directory for the process..
        /// </summary>
        internal static string ProcessWorkingDirectory {
            get {
                return ResourceManager.GetString("ProcessWorkingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The current amount of physical memory the process is using..
        /// </summary>
        internal static string ProcessWorkingSet {
            get {
                return ResourceManager.GetString("ProcessWorkingSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The memory address that the module loaded at..
        /// </summary>
        internal static string ProcModBaseAddress {
            get {
                return ResourceManager.GetString("ProcModBaseAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The memory address of the function that runs when the module is loaded..
        /// </summary>
        internal static string ProcModEntryPointAddress {
            get {
                return ResourceManager.GetString("ProcModEntryPointAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The file name of the module..
        /// </summary>
        internal static string ProcModFileName {
            get {
                return ResourceManager.GetString("ProcModFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The amount of virtual memory required by the code and data in the module file..
        /// </summary>
        internal static string ProcModModuleMemorySize {
            get {
                return ResourceManager.GetString("ProcModModuleMemorySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The name of the module..
        /// </summary>
        internal static string ProcModModuleName {
            get {
                return ResourceManager.GetString("ProcModModuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Action.
        /// </summary>
        internal static string PropertyCategoryAction {
            get {
                return ResourceManager.GetString("PropertyCategoryAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Appearance.
        /// </summary>
        internal static string PropertyCategoryAppearance {
            get {
                return ResourceManager.GetString("PropertyCategoryAppearance", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Asynchronous.
        /// </summary>
        internal static string PropertyCategoryAsynchronous {
            get {
                return ResourceManager.GetString("PropertyCategoryAsynchronous", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Behavior.
        /// </summary>
        internal static string PropertyCategoryBehavior {
            get {
                return ResourceManager.GetString("PropertyCategoryBehavior", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Configurations.
        /// </summary>
        internal static string PropertyCategoryConfig {
            get {
                return ResourceManager.GetString("PropertyCategoryConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Data.
        /// </summary>
        internal static string PropertyCategoryData {
            get {
                return ResourceManager.GetString("PropertyCategoryData", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to DDE.
        /// </summary>
        internal static string PropertyCategoryDDE {
            get {
                return ResourceManager.GetString("PropertyCategoryDDE", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Misc.
        /// </summary>
        internal static string PropertyCategoryDefault {
            get {
                return ResourceManager.GetString("PropertyCategoryDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Design.
        /// </summary>
        internal static string PropertyCategoryDesign {
            get {
                return ResourceManager.GetString("PropertyCategoryDesign", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Drag Drop.
        /// </summary>
        internal static string PropertyCategoryDragDrop {
            get {
                return ResourceManager.GetString("PropertyCategoryDragDrop", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Focus.
        /// </summary>
        internal static string PropertyCategoryFocus {
            get {
                return ResourceManager.GetString("PropertyCategoryFocus", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Font.
        /// </summary>
        internal static string PropertyCategoryFont {
            get {
                return ResourceManager.GetString("PropertyCategoryFont", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Format.
        /// </summary>
        internal static string PropertyCategoryFormat {
            get {
                return ResourceManager.GetString("PropertyCategoryFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Key.
        /// </summary>
        internal static string PropertyCategoryKey {
            get {
                return ResourceManager.GetString("PropertyCategoryKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Layout.
        /// </summary>
        internal static string PropertyCategoryLayout {
            get {
                return ResourceManager.GetString("PropertyCategoryLayout", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to List.
        /// </summary>
        internal static string PropertyCategoryList {
            get {
                return ResourceManager.GetString("PropertyCategoryList", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Mouse.
        /// </summary>
        internal static string PropertyCategoryMouse {
            get {
                return ResourceManager.GetString("PropertyCategoryMouse", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Position.
        /// </summary>
        internal static string PropertyCategoryPosition {
            get {
                return ResourceManager.GetString("PropertyCategoryPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Scale.
        /// </summary>
        internal static string PropertyCategoryScale {
            get {
                return ResourceManager.GetString("PropertyCategoryScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Text.
        /// </summary>
        internal static string PropertyCategoryText {
            get {
                return ResourceManager.GetString("PropertyCategoryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Window Style.
        /// </summary>
        internal static string PropertyCategoryWindowStyle {
            get {
                return ResourceManager.GetString("PropertyCategoryWindowStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Parameter must be of type int or string..
        /// </summary>
        internal static string PropertyDescriptorCollectionBadKey {
            get {
                return ResourceManager.GetString("PropertyDescriptorCollectionBadKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Parameter must be of type PropertyDescriptor..
        /// </summary>
        internal static string PropertyDescriptorCollectionBadValue {
            get {
                return ResourceManager.GetString("PropertyDescriptorCollectionBadValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to tabClasses must have the same number of items as tabScopes.
        /// </summary>
        internal static string PropertyTabAttributeArrayLengthMismatch {
            get {
                return ResourceManager.GetString("PropertyTabAttributeArrayLengthMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Scope must be PropertyTabScope.Document or PropertyTabScope.Component.
        /// </summary>
        internal static string PropertyTabAttributeBadPropertyTabScope {
            get {
                return ResourceManager.GetString("PropertyTabAttributeBadPropertyTabScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to An array of tab type names or tab types must be specified.
        /// </summary>
        internal static string PropertyTabAttributeParamsBothNull {
            get {
                return ResourceManager.GetString("PropertyTabAttributeParamsBothNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Couldn&apos;t find type {0}.
        /// </summary>
        internal static string PropertyTabAttributeTypeLoadException {
            get {
                return ResourceManager.GetString("PropertyTabAttributeTypeLoadException", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This provider instance has already been initialized..
        /// </summary>
        internal static string Provider_Already_Initialized {
            get {
                return ResourceManager.GetString("Provider_Already_Initialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This CodeDomProvider type does not have a constructor that takes providerOptions - &quot;{0}&quot;.
        /// </summary>
        internal static string Provider_does_not_support_options {
            get {
                return ResourceManager.GetString("Provider_does_not_support_options", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to instantiate provider: {0}..
        /// </summary>
        internal static string ProviderInstantiationFailed {
            get {
                return ResourceManager.GetString("ProviderInstantiationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to load provider type: {0}..
        /// </summary>
        internal static string ProviderTypeLoadFailed {
            get {
                return ResourceManager.GetString("ProviderTypeLoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Quantifier {x,y} following nothing..
        /// </summary>
        internal static string QuantifyAfterNothing {
            get {
                return ResourceManager.GetString("QuantifyAfterNothing", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The size of the read buffer in bytes.  This is the maximum number of read bytes which can be buffered..
        /// </summary>
        internal static string ReadBufferSize {
            get {
                return ResourceManager.GetString("ReadBufferSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Reading is not supported on this stream..
        /// </summary>
        internal static string ReadNotSupported {
            get {
                return ResourceManager.GetString("ReadNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot update Performance Counter, this object has been initialized as ReadOnly..
        /// </summary>
        internal static string ReadOnlyCounter {
            get {
                return ResourceManager.GetString("ReadOnlyCounter", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot remove Performance Counter Instance, this object as been initialized as ReadOnly..
        /// </summary>
        internal static string ReadOnlyRemoveInstance {
            get {
                return ResourceManager.GetString("ReadOnlyRemoveInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The read timeout in Milliseconds..
        /// </summary>
        internal static string ReadTimeout {
            get {
                return ResourceManager.GetString("ReadTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Number of bytes required to be available before the Read event is fired..
        /// </summary>
        internal static string ReceivedBytesThreshold {
            get {
                return ResourceManager.GetString("ReceivedBytesThreshold", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A listener with no type name specified references the sharedListeners section and cannot have any attributes other than &apos;Name&apos;.  Listener: &apos;{0}&apos;..
        /// </summary>
        internal static string Reference_listener_cant_have_properties {
            get {
                return ResourceManager.GetString("Reference_listener_cant_have_properties", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Listener &apos;{0}&apos; does not exist in the sharedListeners section..
        /// </summary>
        internal static string Reference_to_nonexistent_listener {
            get {
                return ResourceManager.GetString("Reference_to_nonexistent_listener", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The RegEx engine has timed out while trying to match a pattern to an input string. This can occur for many reasons, including very large inputs or excessive backtracking caused by nested quantifiers, back-references and other factors..
        /// </summary>
        internal static string RegexMatchTimeoutException_Occurred {
            get {
                return ResourceManager.GetString("RegexMatchTimeoutException_Occurred", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot open registry key {0}\{1}\{2} on computer &apos;{3}&apos;..
        /// </summary>
        internal static string RegKeyMissing {
            get {
                return ResourceManager.GetString("RegKeyMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot open registry key {0} on computer {1}..
        /// </summary>
        internal static string RegKeyMissingShort {
            get {
                return ResourceManager.GetString("RegKeyMissingShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot open registry key {0} on computer {1}. You might not have access..
        /// </summary>
        internal static string RegKeyNoAccess {
            get {
                return ResourceManager.GetString("RegKeyNoAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Creating or Deleting Performance Counter Categories on remote machines is not supported..
        /// </summary>
        internal static string RemoteCounterAdmin {
            get {
                return ResourceManager.GetString("RemoteCounterAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot write to a Performance Counter in a remote machine..
        /// </summary>
        internal static string RemoteWriting {
            get {
                return ResourceManager.GetString("RemoteWriting", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &apos;retentionDays&apos; must be between 1 and 365 days..
        /// </summary>
        internal static string RentionDaysOutOfRange {
            get {
                return ResourceManager.GetString("RentionDaysOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Replacement pattern error..
        /// </summary>
        internal static string ReplacementError {
            get {
                return ResourceManager.GetString("ReplacementError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Reset action must be initialized with index -1..
        /// </summary>
        internal static string ResetActionRequiresIndexMinus1 {
            get {
                return ResourceManager.GetString("ResetActionRequiresIndexMinus1", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Reset action must be initialized with no changed items..
        /// </summary>
        internal static string ResetActionRequiresNullItem {
            get {
                return ResourceManager.GetString("ResetActionRequiresNullItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to [x-y] range in reverse order..
        /// </summary>
        internal static string ReversedCharRange {
            get {
                return ResourceManager.GetString("ReversedCharRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to RTL_False.
        /// </summary>
        internal static string RTL {
            get {
                return ResourceManager.GetString("RTL", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Whether to enable the Request To Send (RTS) line during communications..
        /// </summary>
        internal static string RtsEnable {
            get {
                return ResourceManager.GetString("RtsEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error saving {0} - The LocalFileSettingsProvider does not support saving changes to application-scoped settings..
        /// </summary>
        internal static string SaveAppScopedNotSupported {
            get {
                return ResourceManager.GetString("SaveAppScopedNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This operation requires OS support for extended protection..
        /// </summary>
        internal static string security_ExtendedProtection_NoOSSupport {
            get {
                return ResourceManager.GetString("security_ExtendedProtection_NoOSSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The ServiceNameCollection must contain at least one service name..
        /// </summary>
        internal static string security_ExtendedProtectionPolicy_NoEmptyServiceNameCollection {
            get {
                return ResourceManager.GetString("security_ExtendedProtectionPolicy_NoEmptyServiceNameCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to To construct a policy with PolicyEnforcement.Never, the single-parameter constructor must be used..
        /// </summary>
        internal static string security_ExtendedProtectionPolicy_UseDifferentConstructorForNever {
            get {
                return ResourceManager.GetString("security_ExtendedProtectionPolicy_UseDifferentConstructorForNever", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The {0} value was invalid..
        /// </summary>
        internal static string Security_InvalidValue {
            get {
                return ResourceManager.GetString("Security_InvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A service name must not be null or empty..
        /// </summary>
        internal static string security_ServiceNameCollection_EmptyServiceName {
            get {
                return ResourceManager.GetString("security_ServiceNameCollection_EmptyServiceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Seeking is not supported on this stream..
        /// </summary>
        internal static string SeekNotSupported {
            get {
                return ResourceManager.GetString("SeekNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Raised each time when data is received from the SerialPort..
        /// </summary>
        internal static string SerialDataReceived {
            get {
                return ResourceManager.GetString("SerialDataReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Raised each time when an error is received from the SerialPort..
        /// </summary>
        internal static string SerialErrorReceived {
            get {
                return ResourceManager.GetString("SerialErrorReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to OnDeserialization method was called while the object was not being deserialized..
        /// </summary>
        internal static string Serialization_InvalidOnDeser {
            get {
                return ResourceManager.GetString("Serialization_InvalidOnDeser", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The serialized Count information doesn&apos;t match the number of items..
        /// </summary>
        internal static string Serialization_MismatchedCount {
            get {
                return ResourceManager.GetString("Serialization_MismatchedCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The values for this collection are missing..
        /// </summary>
        internal static string Serialization_MissingValues {
            get {
                return ResourceManager.GetString("Serialization_MissingValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Raised each time when pin is changed on the SerialPort..
        /// </summary>
        internal static string SerialPinChanged {
            get {
                return ResourceManager.GetString("SerialPinChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Represents a serial port resource..
        /// </summary>
        internal static string SerialPortDesc {
            get {
                return ResourceManager.GetString("SerialPortDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot initialize security descriptor initialized..
        /// </summary>
        internal static string SetSecurityDescriptorFailed {
            get {
                return ResourceManager.GetString("SetSecurityDescriptorFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The settings property &apos;{0}&apos; was not found..
        /// </summary>
        internal static string SettingsPropertyNotFound {
            get {
                return ResourceManager.GetString("SettingsPropertyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The settings property &apos;{0}&apos; is read-only..
        /// </summary>
        internal static string SettingsPropertyReadOnly {
            get {
                return ResourceManager.GetString("SettingsPropertyReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The settings property &apos;{0}&apos; is of a non-compatible type..
        /// </summary>
        internal static string SettingsPropertyWrongType {
            get {
                return ResourceManager.GetString("SettingsPropertyWrongType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to reset settings: unable to access the configuration section..
        /// </summary>
        internal static string SettingsResetFailed {
            get {
                return ResourceManager.GetString("SettingsResetFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to save settings: {0}.
        /// </summary>
        internal static string SettingsSaveFailed {
            get {
                return ResourceManager.GetString("SettingsSaveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to save settings: unable to access the configuration section..
        /// </summary>
        internal static string SettingsSaveFailedNoSection {
            get {
                return ResourceManager.GetString("SettingsSaveFailedNoSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot access shared memory, AppDomain has been unloaded..
        /// </summary>
        internal static string SharedMemoryGhosted {
            get {
                return ResourceManager.GetString("SharedMemoryGhosted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Category &apos;{0}&apos; is marked as single-instance.  Performance counters in this category can only be created without instance names..
        /// </summary>
        internal static string SingleInstanceOnly {
            get {
                return ResourceManager.GetString("SingleInstanceOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unable to send to all recipients..
        /// </summary>
        internal static string SmtpAllRecipientsFailed {
            get {
                return ResourceManager.GetString("SmtpAllRecipientsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Already connected..
        /// </summary>
        internal static string SmtpAlreadyConnected {
            get {
                return ResourceManager.GetString("SmtpAlreadyConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Authentication failed..
        /// </summary>
        internal static string SmtpAuthenticationFailed {
            get {
                return ResourceManager.GetString("SmtpAuthenticationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Authentication failed due to lack of credentials..
        /// </summary>
        internal static string SmtpAuthenticationFailedNoCreds {
            get {
                return ResourceManager.GetString("SmtpAuthenticationFailedNoCreds", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The server returned an invalid response in the authentication handshake..
        /// </summary>
        internal static string SmtpAuthResponseInvalid {
            get {
                return ResourceManager.GetString("SmtpAuthResponseInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Bad sequence of commands..
        /// </summary>
        internal static string SmtpBadCommandSequence {
            get {
                return ResourceManager.GetString("SmtpBadCommandSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Client does not have permission to submit mail to this server..
        /// </summary>
        internal static string SmtpClientNotPermitted {
            get {
                return ResourceManager.GetString("SmtpClientNotPermitted", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Command not implemented..
        /// </summary>
        internal static string SmtpCommandNotImplemented {
            get {
                return ResourceManager.GetString("SmtpCommandNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Command parameter not implemented..
        /// </summary>
        internal static string SmtpCommandParameterNotImplemented {
            get {
                return ResourceManager.GetString("SmtpCommandParameterNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Syntax error, command unrecognized..
        /// </summary>
        internal static string SmtpCommandUnrecognized {
            get {
                return ResourceManager.GetString("SmtpCommandUnrecognized", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Data stream is still open..
        /// </summary>
        internal static string SmtpDataStreamOpen {
            get {
                return ResourceManager.GetString("SmtpDataStreamOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This is a multi-part MIME message..
        /// </summary>
        internal static string SmtpDefaultMimePreamble {
            get {
                return ResourceManager.GetString("SmtpDefaultMimePreamble", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to @@SOAP Application Message.
        /// </summary>
        internal static string SmtpDefaultSubject {
            get {
                return ResourceManager.GetString("SmtpDefaultSubject", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The server returned an invalid response to the EHLO command..
        /// </summary>
        internal static string SmtpEhloResponseInvalid {
            get {
                return ResourceManager.GetString("SmtpEhloResponseInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Exceeded storage allocation..
        /// </summary>
        internal static string SmtpExceededStorageAllocation {
            get {
                return ResourceManager.GetString("SmtpExceededStorageAllocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A from address must be specified..
        /// </summary>
        internal static string SmtpFromRequired {
            get {
                return ResourceManager.GetString("SmtpFromRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot get IIS pickup directory..
        /// </summary>
        internal static string SmtpGetIisPickupDirectoryFailed {
            get {
                return ResourceManager.GetString("SmtpGetIisPickupDirectoryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Help message..
        /// </summary>
        internal static string SmtpHelpMessage {
            get {
                return ResourceManager.GetString("SmtpHelpMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Insufficient system storage..
        /// </summary>
        internal static string SmtpInsufficientStorage {
            get {
                return ResourceManager.GetString("SmtpInsufficientStorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The address has an invalid host name: {0}..
        /// </summary>
        internal static string SmtpInvalidHostName {
            get {
                return ResourceManager.GetString("SmtpInvalidHostName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This operation cannot be performed while a message is being sent..
        /// </summary>
        internal static string SmtpInvalidOperationDuringSend {
            get {
                return ResourceManager.GetString("SmtpInvalidOperationDuringSend", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Smtp server returned an invalid response..
        /// </summary>
        internal static string SmtpInvalidResponse {
            get {
                return ResourceManager.GetString("SmtpInvalidResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error in processing..
        /// </summary>
        internal static string SmtpLocalErrorInProcessing {
            get {
                return ResourceManager.GetString("SmtpLocalErrorInProcessing", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Mailbox unavailable..
        /// </summary>
        internal static string SmtpMailboxBusy {
            get {
                return ResourceManager.GetString("SmtpMailboxBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Mailbox name not allowed..
        /// </summary>
        internal static string SmtpMailboxNameNotAllowed {
            get {
                return ResourceManager.GetString("SmtpMailboxNameNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Mailbox unavailable..
        /// </summary>
        internal static string SmtpMailboxUnavailable {
            get {
                return ResourceManager.GetString("SmtpMailboxUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The SMTP server requires a secure connection or the client was not authenticated..
        /// </summary>
        internal static string SmtpMustIssueStartTlsFirst {
            get {
                return ResourceManager.GetString("SmtpMustIssueStartTlsFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Only absolute directories are allowed for pickup directory..
        /// </summary>
        internal static string SmtpNeedAbsolutePickupDirectory {
            get {
                return ResourceManager.GetString("SmtpNeedAbsolutePickupDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The client or server is only configured for E-mail addresses with ASCII local-parts: {0}..
        /// </summary>
        internal static string SmtpNonAsciiUserNotSupported {
            get {
                return ResourceManager.GetString("SmtpNonAsciiUserNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Not connected..
        /// </summary>
        internal static string SmtpNotConnected {
            get {
                return ResourceManager.GetString("SmtpNotConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Completed..
        /// </summary>
        internal static string SmtpOK {
            get {
                return ResourceManager.GetString("SmtpOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Previous operation is still in progress..
        /// </summary>
        internal static string SmtpOperationInProgress {
            get {
                return ResourceManager.GetString("SmtpOperationInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Client does not have permission to Send As this sender..
        /// </summary>
        internal static string SmtpPermissionDenied {
            get {
                return ResourceManager.GetString("SmtpPermissionDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SSL must not be enabled for pickup-directory delivery methods..
        /// </summary>
        internal static string SmtpPickupDirectoryDoesnotSupportSsl {
            get {
                return ResourceManager.GetString("SmtpPickupDirectoryDoesnotSupportSsl", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unable to send to a recipient..
        /// </summary>
        internal static string SmtpRecipientFailed {
            get {
                return ResourceManager.GetString("SmtpRecipientFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A recipient must be specified..
        /// </summary>
        internal static string SmtpRecipientRequired {
            get {
                return ResourceManager.GetString("SmtpRecipientRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failure sending mail..
        /// </summary>
        internal static string SmtpSendMailFailure {
            get {
                return ResourceManager.GetString("SmtpSendMailFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Service closing transmission channel..
        /// </summary>
        internal static string SmtpServiceClosingTransmissionChannel {
            get {
                return ResourceManager.GetString("SmtpServiceClosingTransmissionChannel", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Service not available, closing transmission channel..
        /// </summary>
        internal static string SmtpServiceNotAvailable {
            get {
                return ResourceManager.GetString("SmtpServiceNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Service ready..
        /// </summary>
        internal static string SmtpServiceReady {
            get {
                return ResourceManager.GetString("SmtpServiceReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Start mail input; end with &lt;CRLF&gt;.&lt;CRLF&gt;..
        /// </summary>
        internal static string SmtpStartMailInput {
            get {
                return ResourceManager.GetString("SmtpStartMailInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Syntax error in parameters or arguments..
        /// </summary>
        internal static string SmtpSyntaxError {
            get {
                return ResourceManager.GetString("SmtpSyntaxError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to System status, or system help reply..
        /// </summary>
        internal static string SmtpSystemStatus {
            get {
                return ResourceManager.GetString("SmtpSystemStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Transaction failed..
        /// </summary>
        internal static string SmtpTransactionFailed {
            get {
                return ResourceManager.GetString("SmtpTransactionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to User not local; please try a different path..
        /// </summary>
        internal static string SmtpUserNotLocalTryAlternatePath {
            get {
                return ResourceManager.GetString("SmtpUserNotLocalTryAlternatePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to User not local; will forward to specified path..
        /// </summary>
        internal static string SmtpUserNotLocalWillForward {
            get {
                return ResourceManager.GetString("SmtpUserNotLocalWillForward", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The source was not found, but some or all event logs could not be searched.  Inaccessible logs: {0}..
        /// </summary>
        internal static string SomeLogsInaccessible {
            get {
                return ResourceManager.GetString("SomeLogsInaccessible", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The source was not found, but some or all event logs could not be searched.  To create the source, you need permission to read all event logs to make sure that the new source name is unique.  Inaccessible logs: {0}..
        /// </summary>
        internal static string SomeLogsInaccessibleToCreate {
            get {
                return ResourceManager.GetString("SomeLogsInaccessibleToCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Could not determine a universal resource identifier for the sound location..
        /// </summary>
        internal static string SoundAPIBadSoundLocation {
            get {
                return ResourceManager.GetString("SoundAPIBadSoundLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Please be sure a sound file exists at the specified location..
        /// </summary>
        internal static string SoundAPIFileDoesNotExist {
            get {
                return ResourceManager.GetString("SoundAPIFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Sound API only supports playing PCM wave files..
        /// </summary>
        internal static string SoundAPIFormatNotSupported {
            get {
                return ResourceManager.GetString("SoundAPIFormatNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The file located at {0} is not a valid wave file..
        /// </summary>
        internal static string SoundAPIInvalidWaveFile {
            get {
                return ResourceManager.GetString("SoundAPIInvalidWaveFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The wave header is corrupt..
        /// </summary>
        internal static string SoundAPIInvalidWaveHeader {
            get {
                return ResourceManager.GetString("SoundAPIInvalidWaveHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The request to load the wave file in memory timed out..
        /// </summary>
        internal static string SoundAPILoadTimedOut {
            get {
                return ResourceManager.GetString("SoundAPILoadTimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The LoadTimeout property of a SoundPlayer cannot be negative..
        /// </summary>
        internal static string SoundAPILoadTimeout {
            get {
                return ResourceManager.GetString("SoundAPILoadTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to There was an error reading the file located at {0}. Please make sure that a valid wave file exists at the specified location..
        /// </summary>
        internal static string SoundAPIReadError {
            get {
                return ResourceManager.GetString("SoundAPIReadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Source {0} already exists on the computer &apos;{1}&apos;..
        /// </summary>
        internal static string SourceAlreadyExists {
            get {
                return ResourceManager.GetString("SourceAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The listener &apos;{0}&apos; added to source &apos;{1}&apos; must have a listener with the same name defined in the main Trace listeners section..
        /// </summary>
        internal static string SourceListenerDoesntExist {
            get {
                return ResourceManager.GetString("SourceListenerDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The source &apos;{0}&apos; is not registered on machine &apos;{1}&apos;, or you do not have write access to the {2} registry key..
        /// </summary>
        internal static string SourceNotRegistered {
            get {
                return ResourceManager.GetString("SourceNotRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The source &apos;{0}&apos; must have a switch with the same name defined in the Switches section..
        /// </summary>
        internal static string SourceSwitchDoesntExist {
            get {
                return ResourceManager.GetString("SourceSwitchDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to AuthenticationType and ServicePrincipalName cannot be specified as null for server&apos;s SSPI Negotiation module..
        /// </summary>
        internal static string SSPIAuthenticationOrSPNNull {
            get {
                return ResourceManager.GetString("SSPIAuthenticationOrSPNNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &apos;{0}&apos; is not a supported handle type..
        /// </summary>
        internal static string SSPIInvalidHandleType {
            get {
                return ResourceManager.GetString("SSPIInvalidHandleType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} failed with error {1}..
        /// </summary>
        internal static string SSPIPInvokeError {
            get {
                return ResourceManager.GetString("SSPIPInvokeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to StandardErrorEncoding is only supported when standard error is redirected..
        /// </summary>
        internal static string StandardErrorEncodingNotAllowed {
            get {
                return ResourceManager.GetString("StandardErrorEncodingNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to get marshaler for IID {0}..
        /// </summary>
        internal static string StandardOleMarshalObjectGetMarshalerFailed {
            get {
                return ResourceManager.GetString("StandardOleMarshalObjectGetMarshalerFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to StandardOutputEncoding is only supported when standard output is redirected..
        /// </summary>
        internal static string StandardOutputEncodingNotAllowed {
            get {
                return ResourceManager.GetString("StandardOutputEncodingNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The number of stop bits per transmitted/received byte..
        /// </summary>
        internal static string StopBits {
            get {
                return ResourceManager.GetString("StopBits", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The gzip stream can&apos;t contain more than 4GB data..
        /// </summary>
        internal static string StreamSizeOverflow {
            get {
                return ResourceManager.GetString("StreamSizeOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Could not use String deserialization for setting: {0}..
        /// </summary>
        internal static string StringDeserializationFailed {
            get {
                return ResourceManager.GetString("StringDeserializationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Could not use String serialization for setting: {0}..
        /// </summary>
        internal static string StringSerializationFailed {
            get {
                return ResourceManager.GetString("StringSerializationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A subtraction must be the last element in a character class..
        /// </summary>
        internal static string SubtractionMustBeLast {
            get {
                return ResourceManager.GetString("SubtractionMustBeLast", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Target not WebBrowserPermissionLevel..
        /// </summary>
        internal static string TargetNotWebBrowserPermissionLevel {
            get {
                return ResourceManager.GetString("TargetNotWebBrowserPermissionLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The current base priority of the thread..
        /// </summary>
        internal static string ThreadBasePriority {
            get {
                return ResourceManager.GetString("ThreadBasePriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The current priority level of the thread..
        /// </summary>
        internal static string ThreadCurrentPriority {
            get {
                return ResourceManager.GetString("ThreadCurrentPriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The request cannot be processed because the thread ({0}) has exited..
        /// </summary>
        internal static string ThreadExited {
            get {
                return ResourceManager.GetString("ThreadExited", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The unique identifier for the thread..
        /// </summary>
        internal static string ThreadId {
            get {
                return ResourceManager.GetString("ThreadId", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Whether the thread would like a priority boost when the user interacts with UI associated with the thread..
        /// </summary>
        internal static string ThreadPriorityBoostEnabled {
            get {
                return ResourceManager.GetString("ThreadPriorityBoostEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The priority level of the thread..
        /// </summary>
        internal static string ThreadPriorityLevel {
            get {
                return ResourceManager.GetString("ThreadPriorityLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The amount of CPU time the thread spent inside the operating system core..
        /// </summary>
        internal static string ThreadPrivilegedProcessorTime {
            get {
                return ResourceManager.GetString("ThreadPrivilegedProcessorTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The memory address of the function that was run when the thread started..
        /// </summary>
        internal static string ThreadStartAddress {
            get {
                return ResourceManager.GetString("ThreadStartAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The time the thread was started..
        /// </summary>
        internal static string ThreadStartTime {
            get {
                return ResourceManager.GetString("ThreadStartTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The execution state of the thread..
        /// </summary>
        internal static string ThreadThreadState {
            get {
                return ResourceManager.GetString("ThreadThreadState", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The amount of CPU time the thread has consumed since it was started..
        /// </summary>
        internal static string ThreadTotalProcessorTime {
            get {
                return ResourceManager.GetString("ThreadTotalProcessorTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The amount of CPU time the thread spent outside the operating system core..
        /// </summary>
        internal static string ThreadUserProcessorTime {
            get {
                return ResourceManager.GetString("ThreadUserProcessorTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The reason the thread is waiting, if it is waiting..
        /// </summary>
        internal static string ThreadWaitReason {
            get {
                return ResourceManager.GetString("ThreadWaitReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Indicates whether the timer will be restarted when it is enabled..
        /// </summary>
        internal static string TimerAutoReset {
            get {
                return ResourceManager.GetString("TimerAutoReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Indicates whether the timer is enabled to fire events at a defined interval..
        /// </summary>
        internal static string TimerEnabled {
            get {
                return ResourceManager.GetString("TimerEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The number of milliseconds between timer events..
        /// </summary>
        internal static string TimerInterval {
            get {
                return ResourceManager.GetString("TimerInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Occurs when the Interval has elapsed..
        /// </summary>
        internal static string TimerIntervalElapsed {
            get {
                return ResourceManager.GetString("TimerIntervalElapsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &apos;{0}&apos; is not a valid value for &apos;Interval&apos;. &apos;Interval&apos; must be greater than {1}..
        /// </summary>
        internal static string TimerInvalidInterval {
            get {
                return ResourceManager.GetString("TimerInvalidInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The object used to marshal the event handler calls issued when an interval has elapsed..
        /// </summary>
        internal static string TimerSynchronizingObject {
            get {
                return ResourceManager.GetString("TimerSynchronizingObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to initializeData needs to be valid for this TraceListener..
        /// </summary>
        internal static string TL_InitializeData_NotSpecified {
            get {
                return ResourceManager.GetString("TL_InitializeData_NotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Insufficient hexadecimal digits..
        /// </summary>
        internal static string TooFewHex {
            get {
                return ResourceManager.GetString("TooFewHex", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Failed to create ToolboxItem of type: {0}.
        /// </summary>
        internal static string ToolboxItemAttributeFailedGetType {
            get {
                return ResourceManager.GetString("ToolboxItemAttributeFailedGetType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Too many | in (?()|)..
        /// </summary>
        internal static string TooManyAlternates {
            get {
                return ResourceManager.GetString("TooManyAlternates", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Too many )&apos;s..
        /// </summary>
        internal static string TooManyParens {
            get {
                return ResourceManager.GetString("TooManyParens", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The maximum allowed number of replacement strings is 255..
        /// </summary>
        internal static string TooManyReplacementStrings {
            get {
                return ResourceManager.GetString("TooManyReplacementStrings", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to (none).
        /// </summary>
        internal static string toStringNone {
            get {
                return ResourceManager.GetString("toStringNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to (null).
        /// </summary>
        internal static string ToStringNull {
            get {
                return ResourceManager.GetString("ToStringNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to (unknown).
        /// </summary>
        internal static string toStringUnknown {
            get {
                return ResourceManager.GetString("toStringUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Trace.
        /// </summary>
        internal static string TraceAsTraceSource {
            get {
                return ResourceManager.GetString("TraceAsTraceSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Fail:.
        /// </summary>
        internal static string TraceListenerFail {
            get {
                return ResourceManager.GetString("TraceListenerFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The IndentSize property must be non-negative..
        /// </summary>
        internal static string TraceListenerIndentSize {
            get {
                return ResourceManager.GetString("TraceListenerIndentSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The Level must be set to a value in the enumeration TraceLevel..
        /// </summary>
        internal static string TraceSwitchInvalidLevel {
            get {
                return ResourceManager.GetString("TraceSwitchInvalidLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Attempted to set {0} to a value that is too high.  Setting level to TraceLevel.Verbose.
        /// </summary>
        internal static string TraceSwitchLevelTooHigh {
            get {
                return ResourceManager.GetString("TraceSwitchLevelTooHigh", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Attempted to set {0} to a value that is too low.  Setting level to TraceLevel.Off.
        /// </summary>
        internal static string TraceSwitchLevelTooLow {
            get {
                return ResourceManager.GetString("TraceSwitchLevelTooLow", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Could not add trace listener {0} because it is not a subclass of TraceListener..
        /// </summary>
        internal static string Type_isnt_tracelistener {
            get {
                return ResourceManager.GetString("Type_isnt_tracelistener", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The primary and secondary objects are already associated with each other..
        /// </summary>
        internal static string TypeDescriptorAlreadyAssociated {
            get {
                return ResourceManager.GetString("TypeDescriptorAlreadyAssociated", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The number of elements in the Type and Object arrays must match..
        /// </summary>
        internal static string TypeDescriptorArgsCountMismatch {
            get {
                return ResourceManager.GetString("TypeDescriptorArgsCountMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Expected types in the collection to be of type {0}..
        /// </summary>
        internal static string TypeDescriptorExpectedElementType {
            get {
                return ResourceManager.GetString("TypeDescriptorExpectedElementType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The type description provider {0} has returned null from {1} which is illegal..
        /// </summary>
        internal static string TypeDescriptorProviderError {
            get {
                return ResourceManager.GetString("TypeDescriptorProviderError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Cannot create an association when the primary and secondary objects are the same..
        /// </summary>
        internal static string TypeDescriptorSameAssociation {
            get {
                return ResourceManager.GetString("TypeDescriptorSameAssociation", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The object {0} is being remoted by a proxy that does not support interface discovery.  This type of remoted object is not supported..
        /// </summary>
        internal static string TypeDescriptorUnsupportedRemoteObject {
            get {
                return ResourceManager.GetString("TypeDescriptorUnsupportedRemoteObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Could not find a type-converter to convert object if type &apos;{0}&apos; from string..
        /// </summary>
        internal static string Unable_to_convert_type_from_string {
            get {
                return ResourceManager.GetString("Unable_to_convert_type_from_string", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Could not find a type-converter to convert object if type &apos;{0}&apos; to string..
        /// </summary>
        internal static string Unable_to_convert_type_to_string {
            get {
                return ResourceManager.GetString("Unable_to_convert_type_to_string", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The CodeDom provider type &quot;{0}&quot; could not be located..
        /// </summary>
        internal static string Unable_To_Locate_Type {
            get {
                return ResourceManager.GetString("Unable_To_Locate_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Access to the port is denied..
        /// </summary>
        internal static string UnauthorizedAccess_IODenied_NoPathName {
            get {
                return ResourceManager.GetString("UnauthorizedAccess_IODenied_NoPathName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Access to the port &apos;{0}&apos; is denied..
        /// </summary>
        internal static string UnauthorizedAccess_IODenied_Path {
            get {
                return ResourceManager.GetString("UnauthorizedAccess_IODenied_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Reference to undefined group number {0}..
        /// </summary>
        internal static string UndefinedBackref {
            get {
                return ResourceManager.GetString("UndefinedBackref", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Reference to undefined group name {0}..
        /// </summary>
        internal static string UndefinedNameRef {
            get {
                return ResourceManager.GetString("UndefinedNameRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to (?({0}) ) reference to undefined group..
        /// </summary>
        internal static string UndefinedReference {
            get {
                return ResourceManager.GetString("UndefinedReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unexpected opcode in regular expression generation: {0}..
        /// </summary>
        internal static string UnexpectedOpcode {
            get {
                return ResourceManager.GetString("UnexpectedOpcode", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unimplemented state..
        /// </summary>
        internal static string UnimplementedState {
            get {
                return ResourceManager.GetString("UnimplementedState", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unknown error..
        /// </summary>
        internal static string Unknown_Error {
            get {
                return ResourceManager.GetString("Unknown_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unknown block type. Stream might be corrupted..
        /// </summary>
        internal static string UnknownBlockType {
            get {
                return ResourceManager.GetString("UnknownBlockType", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The compression mode specified in GZip header is unknown..
        /// </summary>
        internal static string UnknownCompressionMode {
            get {
                return ResourceManager.GetString("UnknownCompressionMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unknown property &apos;{0}&apos;..
        /// </summary>
        internal static string UnknownProperty {
            get {
                return ResourceManager.GetString("UnknownProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unknown SeekOrigin specified..
        /// </summary>
        internal static string UnknownSeekOrigin {
            get {
                return ResourceManager.GetString("UnknownSeekOrigin", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unknown serialization format specified..
        /// </summary>
        internal static string UnknownSerializationFormat {
            get {
                return ResourceManager.GetString("UnknownSerializationFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Decoder is in some unknown state. This might be caused by corrupted data..
        /// </summary>
        internal static string UnknownState {
            get {
                return ResourceManager.GetString("UnknownState", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unknown ConfigurationUserLevel specified..
        /// </summary>
        internal static string UnknownUserLevel {
            get {
                return ResourceManager.GetString("UnknownUserLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unrecognized control character..
        /// </summary>
        internal static string UnrecognizedControl {
            get {
                return ResourceManager.GetString("UnrecognizedControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unrecognized escape sequence \{0}..
        /// </summary>
        internal static string UnrecognizedEscape {
            get {
                return ResourceManager.GetString("UnrecognizedEscape", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unrecognized grouping construct..
        /// </summary>
        internal static string UnrecognizedGrouping {
            get {
                return ResourceManager.GetString("UnrecognizedGrouping", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The SMTP host was not specified..
        /// </summary>
        internal static string UnspecifiedHost {
            get {
                return ResourceManager.GetString("UnspecifiedHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unterminated [] set..
        /// </summary>
        internal static string UnterminatedBracket {
            get {
                return ResourceManager.GetString("UnterminatedBracket", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Unterminated (?#...) comment..
        /// </summary>
        internal static string UnterminatedComment {
            get {
                return ResourceManager.GetString("UnterminatedComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} cannot convert from {1}..
        /// </summary>
        internal static string UriTypeConverter_ConvertFrom_CannotConvert {
            get {
                return ResourceManager.GetString("UriTypeConverter_ConvertFrom_CannotConvert", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to {0} cannot convert {1} to {2}..
        /// </summary>
        internal static string UriTypeConverter_ConvertTo_CannotConvert {
            get {
                return ResourceManager.GetString("UriTypeConverter_ConvertTo_CannotConvert", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The current configuration system does not support user-scoped settings..
        /// </summary>
        internal static string UserSettingsNotSupported {
            get {
                return ResourceManager.GetString("UserSettingsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Current thread is not in Single Thread Apartment (STA) mode. Starting a process with UseShellExecute set to True requires the current thread be in STA mode.  Ensure that your Main function has STAThreadAttribute marked..
        /// </summary>
        internal static string UseShellExecuteRequiresSTA {
            get {
                return ResourceManager.GetString("UseShellExecuteRequiresSTA", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Error in trace switch &apos;{0}&apos;: The value of a switch must be integral..
        /// </summary>
        internal static string Value_must_be_numeric {
            get {
                return ResourceManager.GetString("Value_must_be_numeric", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to (Default).
        /// </summary>
        internal static string VerbEditorDefault {
            get {
                return ResourceManager.GetString("VerbEditorDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A WaitHandle with system-wide name &apos;{0}&apos; cannot be created. A WaitHandle of a different type might have the same name..
        /// </summary>
        internal static string WaitHandleCannotBeOpenedException_InvalidHandle {
            get {
                return ResourceManager.GetString("WaitHandleCannotBeOpenedException_InvalidHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to WaitReason is only available if the ThreadState is Wait..
        /// </summary>
        internal static string WaitReasonUnavailable {
            get {
                return ResourceManager.GetString("WaitReasonUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Process must exit before requested information can be determined..
        /// </summary>
        internal static string WaitTillExit {
            get {
                return ResourceManager.GetString("WaitTillExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Bad Xml {0}.
        /// </summary>
        internal static string WebBrowserBadXml {
            get {
                return ResourceManager.GetString("WebBrowserBadXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Feature requires Windows 2000 or later..
        /// </summary>
        internal static string Win2000Required {
            get {
                return ResourceManager.GetString("Win2000Required", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Feature requires Windows 2000..
        /// </summary>
        internal static string Win2kRequired {
            get {
                return ResourceManager.GetString("Win2kRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Feature requires Windows NT..
        /// </summary>
        internal static string WinNTRequired {
            get {
                return ResourceManager.GetString("WinNTRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Operating system does not support accessing processes on remote computers. This feature requires Windows NT or later..
        /// </summary>
        internal static string WinNTRequiredForRemote {
            get {
                return ResourceManager.GetString("WinNTRequiredForRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The write timed out..
        /// </summary>
        internal static string Write_timed_out {
            get {
                return ResourceManager.GetString("Write_timed_out", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The size of the write buffer in bytes.  This is the maximum number of bytes which can be queued for write..
        /// </summary>
        internal static string WriteBufferSize {
            get {
                return ResourceManager.GetString("WriteBufferSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Writing is not supported on this stream..
        /// </summary>
        internal static string WriteNotSupported {
            get {
                return ResourceManager.GetString("WriteNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The write timeout in milliseconds..
        /// </summary>
        internal static string WriteTimeout {
            get {
                return ResourceManager.GetString("WriteTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Constructor supports only the &apos;{0}&apos; action..
        /// </summary>
        internal static string WrongActionForCtor {
            get {
                return ResourceManager.GetString("WrongActionForCtor", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Could not use Xml deserialization for setting: {0}..
        /// </summary>
        internal static string XmlDeserializationFailed {
            get {
                return ResourceManager.GetString("XmlDeserializationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Could not use Xml serialization for setting: {0}..
        /// </summary>
        internal static string XmlSerializationFailed {
            get {
                return ResourceManager.GetString("XmlSerializationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The underlying compression routine could not be loaded correctly..
        /// </summary>
        internal static string ZLibErrorDLLLoadError {
            get {
                return ResourceManager.GetString("ZLibErrorDLLLoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The stream state of the underlying compression routine is inconsistent..
        /// </summary>
        internal static string ZLibErrorInconsistentStream {
            get {
                return ResourceManager.GetString("ZLibErrorInconsistentStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The underlying compression routine received incorrect initialization parameters..
        /// </summary>
        internal static string ZLibErrorIncorrectInitParameters {
            get {
                return ResourceManager.GetString("ZLibErrorIncorrectInitParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The underlying compression routine could not reserve sufficient memory..
        /// </summary>
        internal static string ZLibErrorNotEnoughMemory {
            get {
                return ResourceManager.GetString("ZLibErrorNotEnoughMemory", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The stream state of the underlying compression routine was freed prematurely..
        /// </summary>
        internal static string ZLibErrorSteamFreedPrematurely {
            get {
                return ResourceManager.GetString("ZLibErrorSteamFreedPrematurely", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The underlying compression routine returned an unexpected error code..
        /// </summary>
        internal static string ZLibErrorUnexpected {
            get {
                return ResourceManager.GetString("ZLibErrorUnexpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The version of the underlying compression routine does not match expected version..
        /// </summary>
        internal static string ZLibErrorVersionMismatch {
            get {
                return ResourceManager.GetString("ZLibErrorVersionMismatch", resourceCulture);
            }
        }
    }
}
