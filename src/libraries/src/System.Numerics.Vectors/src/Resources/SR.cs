// Do not edit this file manually it is auto-generated during the build based on the .resx file for this project.
namespace System
{
    internal static partial class SR
    {
#pragma warning disable 0414
        private const string s_resourcesName = "System.Numerics.Vectors.resources"; // assembly Name + .resources
#pragma warning restore 0414

#if !DEBUGRESOURCES
        internal static string Arg_ArgumentOutOfRangeException {
              get { return SR.GetResourceString("Arg_ArgumentOutOfRangeException", null); }
        }
        internal static string Arg_ElementsInSourceIsGreaterThanDestination {
              get { return SR.GetResourceString("Arg_ElementsInSourceIsGreaterThanDestination", null); }
        }
        internal static string Arg_MultiDimArrayNotSupported {
              get { return SR.GetResourceString("Arg_MultiDimArrayNotSupported", null); }
        }
        internal static string Arg_RegisterLengthOfRangeException {
              get { return SR.GetResourceString("Arg_RegisterLengthOfRangeException", null); }
        }
        internal static string Arg_TypeNotSupported {
              get { return SR.GetResourceString("Arg_TypeNotSupported", null); }
        }
        internal static string Reflection_MethodNotSupported {
              get { return SR.GetResourceString("Reflection_MethodNotSupported", null); }
        }
#else
        internal static string Arg_ArgumentOutOfRangeException {
              get { return SR.GetResourceString("Arg_ArgumentOutOfRangeException", @"Index was out of bounds:"); }
        }
        internal static string Arg_ElementsInSourceIsGreaterThanDestination {
              get { return SR.GetResourceString("Arg_ElementsInSourceIsGreaterThanDestination", @"Number of elements in source vector is greater than the destination array"); }
        }
        internal static string Arg_MultiDimArrayNotSupported {
              get { return SR.GetResourceString("Arg_MultiDimArrayNotSupported", @"Only one-dimensional arrays are supported"); }
        }
        internal static string Arg_RegisterLengthOfRangeException {
              get { return SR.GetResourceString("Arg_RegisterLengthOfRangeException", @"length must be less than"); }
        }
        internal static string Arg_TypeNotSupported {
              get { return SR.GetResourceString("Arg_TypeNotSupported", @"Specified type is not supported"); }
        }
        internal static string Reflection_MethodNotSupported {
              get { return SR.GetResourceString("Reflection_MethodNotSupported", @"Vector<T>.Count cannot be called via reflection when intrinsics are enabled."); }
        }

#endif
    }
}
