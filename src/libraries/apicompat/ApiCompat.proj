<Project Sdk="Microsoft.Build.NoTargets">

  <PropertyGroup>
    <TargetFramework>$(NetCoreAppCurrent)-$(TargetOS)</TargetFramework>
    <!-- Reference the dependencies to have the assemblies available for API comparison. -->
    <NoTargetsDoNotReferenceOutputAssemblies>false</NoTargetsDoNotReferenceOutputAssemblies>
    <!-- Target reference assemblies instead of implementation assemblies. -->
    <CompileUsingReferenceAssemblies>true</CompileUsingReferenceAssemblies>

    <ApiCompatNetCoreAppLatestStableBaselineFile>$(MSBuildThisFileDirectory)ApiCompatBaseline.NetCoreAppLatestStable.xml</ApiCompatNetCoreAppLatestStableBaselineFile>
    <ApiCompatNetStandard21BaselineFile>$(MSBuildThisFileDirectory)ApiCompatBaseline.netstandard2.1.xml</ApiCompatNetStandard21BaselineFile>
    <ApiCompatNetStandard20BaselineFile>$(MSBuildThisFileDirectory)ApiCompatBaseline.netstandard2.0.xml</ApiCompatNetStandard20BaselineFile>
  </PropertyGroup>

  <!-- In servicing, the live targeting pack is compared against the GA version in strict mode. -->
  <PropertyGroup Condition="'$(DotNetFinalVersionKind)' == 'servicing'">
    <ApiCompatEnableStrictMode>true</ApiCompatEnableStrictMode>
  </PropertyGroup>

  <ItemGroup>
    <ApiCompatExcludeAttributesFile Include="$(RepositoryEngineeringDir)DefaultGenApiDocIds.txt" />
    <ApiCompatExcludeAttributesFile Include="$(RepositoryEngineeringDir)ApiCompatExcludeAttributes.txt" />
    <ApiCompatExcludeAttributesFile Include="ApiCompatBaselineExcludedAttributes.txt" />
  </ItemGroup>

  <ItemGroup>
    <ApiCompatNetCoreAppLatestStableLeftAssembliesTransformationPattern Include=".+%5C$([System.IO.Path]::DirectorySeparatorChar)(.+)" ReplacementString="$(ApiCompatNetCoreAppBaselineTFM)/$1" />
    <ApiCompatNetStandard21LeftAssembliesTransformationPattern Include=".+%5C$([System.IO.Path]::DirectorySeparatorChar)(.+)" ReplacementString="netstandard2.1/$1" />
    <ApiCompatNetStandard20LeftAssembliesTransformationPattern Include=".+%5C$([System.IO.Path]::DirectorySeparatorChar)(.+)" ReplacementString="netstandard2.0/$1" />
    <ApiCompatNetCoreAppCurrentRightAssembliesTransformationPattern Include=".+%5C$([System.IO.Path]::DirectorySeparatorChar)(.+)" ReplacementString="$(NetCoreAppCurrent)/$1" />
  </ItemGroup>

  <!-- For API comparison, ApiCompat needs the inbox assemblies (including shims) and to resolve type forwards, the out-of-band assemblies. -->
  <ItemGroup>
    <ProjectReference Include="..\sfx-src.proj" OutputItemType="SharedFrameworkAssembly" />
    <ProjectReference Include="..\shims.proj" OutputItemType="SharedFrameworkAssembly" />
    <ProjectReference Include="..\oob-src.proj" OutputItemType="OOBAssembly" />
  </ItemGroup>

  <ItemGroup>
    <PackageDownload Include="Microsoft.NETCore.App.Ref" Version="[$(ApiCompatNetCoreAppBaselineVersion)]" />
    <PackageDownload Include="NETStandard.Library.Ref" Version="[$(NETStandardLibraryRefVersion)]" />
    <PackageDownload Include="NETStandard.Library" Version="[$(NetStandardLibraryVersion)]" />
    <PackageReference Include="Microsoft.DotNet.ApiCompat.Task" Version="$(MicrosoftDotNetApiCompatTaskVersion)" IsImplicitlyDefined="true" />
  </ItemGroup>

  <Target Name="RunApiCompat"
          DependsOnTargets="FindReferenceAssembliesForReferences;CollectApiCompatInputs"
          AfterTargets="Build"
          Inputs="@(ReferencePathWithRefAssemblies);$(ApiCompatNetStandard20BaselineFile);$(ApiCompatNetStandard21BaselineFile);$(ApiCompatNetCoreAppLatestStableBaselineFile);@(ApiCompatExcludeAttributesFile)"
          Outputs="$(IntermediateOutputPath)$(TargetArchitecture)-marker.txt">
    <Message Text="ApiCompat -> Comparing $(NetCoreAppCurrent) reference assemblies against .NETStandard 2.x and .NETCoreApp $(ApiCompatNetCoreAppBaselineVersion)..." Importance="high"  />

    <ItemGroup>
      <ApiCompatRightAssembly Include="@(ReferencePathWithRefAssemblies->WithMetadataValue('IsPrivateAssembly', 'false')->WithMetadataValue('OutputItemType', 'SharedFrameworkAssembly'))" />
      <ApiCompatRightAssemblyReference Include="@(ReferencePathWithRefAssemblies->WithMetadataValue('IsPrivateAssembly', 'false')->WithMetadataValue('OutputItemType', 'OOBAssembly'), ',')" />
    </ItemGroup>

    <!-- ApiCompat: NetCoreAppCurrent <-> .NETCoreApp ApiCompatNetCoreAppBaselineVersion -->
    <Microsoft.DotNet.ApiCompat.Task.ValidateAssembliesTask
      LeftAssemblies="$([MSBuild]::NormalizeDirectory('$(NuGetPackageRoot)', 'microsoft.netcore.app.ref', '$(ApiCompatNetCoreAppBaselineVersion)', 'ref', '$(ApiCompatNetCoreAppBaselineTFM)'))"
      RightAssemblies="@(ApiCompatRightAssembly)"
      RoslynAssembliesPath="$(RoslynAssembliesPath)"
      GenerateSuppressionFile="$(ApiCompatGenerateSuppressionFile)"
      SuppressionFiles="$(ApiCompatNetCoreAppLatestStableBaselineFile)"
      EnableStrictMode="$(ApiCompatEnableStrictMode)"
      EnableRuleAttributesMustMatch="true"
      ExcludeAttributesFiles="@(ApiCompatExcludeAttributesFile)"
      LeftAssembliesTransformationPattern="@(ApiCompatNetCoreAppLatestStableLeftAssembliesTransformationPattern)"
      RightAssembliesTransformationPattern="@(ApiCompatNetCoreAppCurrentRightAssembliesTransformationPattern)"
      RightAssembliesReferences="@(ApiCompatRightAssemblyReference)" />

    <!-- ApiCompat: NetCoreAppCurrent <-> netstandard2.1 -->
    <Microsoft.DotNet.ApiCompat.Task.ValidateAssembliesTask
      LeftAssemblies="$(NETStandard21RefPath)netstandard.dll"
      RightAssemblies="@(ApiCompatRightAssembly)"
      RoslynAssembliesPath="$(RoslynAssembliesPath)"
      GenerateSuppressionFile="$(ApiCompatGenerateSuppressionFile)"
      SuppressionFiles="$(ApiCompatNetStandard21BaselineFile)"
      EnableRuleAttributesMustMatch="true"
      ExcludeAttributesFiles="@(ApiCompatExcludeAttributesFile)"
      LeftAssembliesTransformationPattern="@(ApiCompatNetStandard21LeftAssembliesTransformationPattern)"
      RightAssembliesTransformationPattern="@(ApiCompatNetCoreAppCurrentRightAssembliesTransformationPattern)"
      RightAssembliesReferences="@(ApiCompatRightAssemblyReference)" />

    <!-- ApiCompat: NetCoreAppCurrent <-> netstandard2.0 -->
    <Microsoft.DotNet.ApiCompat.Task.ValidateAssembliesTask
      LeftAssemblies="$([MSBuild]::NormalizeDirectory('$(NuGetPackageRoot)', 'netstandard.library', '$(NetStandardLibraryVersion)', 'build', 'netstandard2.0', 'ref'))"
      RightAssemblies="@(ApiCompatRightAssembly)"
      RoslynAssembliesPath="$(RoslynAssembliesPath)"
      GenerateSuppressionFile="$(ApiCompatGenerateSuppressionFile)"
      SuppressionFiles="$(ApiCompatNetStandard20BaselineFile)"
      EnableRuleAttributesMustMatch="true"
      ExcludeAttributesFiles="@(ApiCompatExcludeAttributesFile)"
      LeftAssembliesTransformationPattern="@(ApiCompatNetStandard20LeftAssembliesTransformationPattern)"
      RightAssembliesTransformationPattern="@(ApiCompatNetCoreAppCurrentRightAssembliesTransformationPattern)"
      RightAssembliesReferences="@(ApiCompatRightAssemblyReference)" />

    <!-- Create a marker file which serves as the target's output to enable incremental builds. -->
    <Touch Files="$(IntermediateOutputPath)$(TargetArchitecture)-marker.txt"
           AlwaysCreate="true" />
  </Target>

  <Target Name="CleanAdditionalFiles" AfterTargets="Clean">
    <RemoveDir Directories="$(IntermediateOutputPath)" />
  </Target>

</Project>
