<Project DefaultTargets="Build">
  <Import Project="$([MSBuild]::GetPathOfFileAbove(Directory.Build.props))" />
  <PropertyGroup>
    <ServiceModelVersion>4.8.0</ServiceModelVersion>
    <!-- We don't need to harvest the stable packages to build this -->
    <HarvestStablePackage>false</HarvestStablePackage>
    <PackageDescription>This Windows Compatibility Pack provides access to APIs that were previously available only for .NET Framework. It can be used from both .NET Core as well as .NET Standard.</PackageDescription>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <PrereleaseLibraryPackage>
      <Version>$(PackageVersion)</Version>
    </PrereleaseLibraryPackage>
    <NS21PrereleaseLibraryPackage>
      <Version>$(PackageVersion)</Version>
    </NS21PrereleaseLibraryPackage>
  </ItemDefinitionGroup>
  <ItemGroup>
    <PrereleaseLibraryPackage Include="Microsoft.Win32.Registry" />
    <PrereleaseLibraryPackage Include="Microsoft.Win32.Registry.AccessControl" />
    <PrereleaseLibraryPackage Include="Microsoft.Win32.SystemEvents" />
    <PrereleaseLibraryPackage Include="System.CodeDom" />
    <PrereleaseLibraryPackage Include="System.ComponentModel.Composition" />
    <PrereleaseLibraryPackage Include="System.Configuration.ConfigurationManager" />
    <PrereleaseLibraryPackage Include="System.Data.Odbc" />
    <PrereleaseLibraryPackage Include="System.Data.OleDb" />
    <PrereleaseLibraryPackage Include="System.Drawing.Common" />
    <PrereleaseLibraryPackage Include="System.Diagnostics.EventLog" />
    <PrereleaseLibraryPackage Include="System.Diagnostics.PerformanceCounter" />
    <PrereleaseLibraryPackage Include="System.DirectoryServices" />
    <PrereleaseLibraryPackage Include="System.DirectoryServices.AccountManagement" />
    <PrereleaseLibraryPackage Include="System.DirectoryServices.Protocols" />
    <PrereleaseLibraryPackage Include="System.IO.FileSystem.AccessControl" />
    <PrereleaseLibraryPackage Include="System.IO.Packaging" />
    <PrereleaseLibraryPackage Include="System.IO.Pipes.AccessControl" />
    <PrereleaseLibraryPackage Include="System.IO.Ports" />
    <PrereleaseLibraryPackage Include="System.Management" />
    <PrereleaseLibraryPackage Include="System.Runtime.Caching" />
    <PrereleaseLibraryPackage Include="System.Security.AccessControl" />
    <PrereleaseLibraryPackage Include="System.Security.Cryptography.Cng" />
    <PrereleaseLibraryPackage Include="System.Security.Cryptography.Pkcs" />
    <PrereleaseLibraryPackage Include="System.Security.Cryptography.ProtectedData" />
    <PrereleaseLibraryPackage Include="System.Security.Cryptography.Xml" />
    <PrereleaseLibraryPackage Include="System.Security.Permissions" />
    <PrereleaseLibraryPackage Include="System.Security.Principal.Windows" />
    <PrereleaseLibraryPackage Include="System.ServiceModel.Syndication" />
    <PrereleaseLibraryPackage Include="System.ServiceProcess.ServiceController" />
    <PrereleaseLibraryPackage Include="System.Speech" />
    <PrereleaseLibraryPackage Include="System.Text.Encoding.CodePages" />
    <PrereleaseLibraryPackage Include="System.Threading.AccessControl" />

    <NS21PrereleaseLibraryPackage Include="System.ComponentModel.Composition.Registration" />
    <NS21PrereleaseLibraryPackage Include="System.Reflection.Context" />

    <!-- Packages we don't build in master anymore -->
    <LibraryPackage Include="System.Data.DataSetExtensions">
      <Version>4.5.0</Version>
    </LibraryPackage>
    <LibraryPackage Include="System.Data.SqlClient">
      <Version>4.8.1</Version>
    </LibraryPackage>
    <LibraryPackage Include="System.Reflection.Emit">
      <Version>4.7.0</Version>
    </LibraryPackage>
    <LibraryPackage Include="System.Reflection.Emit.ILGeneration">
      <Version>4.7.0</Version>
    </LibraryPackage>
    <LibraryPackage Include="System.Reflection.Emit.Lightweight">
      <Version>4.7.0</Version>
    </LibraryPackage>

    <!-- Service model packages -->
    <ExternalLibraryPackage Include="System.ServiceModel.Primitives">
      <Version>$(ServiceModelVersion)</Version>
    </ExternalLibraryPackage>
    <ExternalLibraryPackage Include="System.ServiceModel.Duplex">
      <Version>$(ServiceModelVersion)</Version>
    </ExternalLibraryPackage>
    <ExternalLibraryPackage Include="System.ServiceModel.Http">
      <Version>$(ServiceModelVersion)</Version>
    </ExternalLibraryPackage>
    <ExternalLibraryPackage Include="System.ServiceModel.NetTcp">
      <Version>$(ServiceModelVersion)</Version>
    </ExternalLibraryPackage>
    <ExternalLibraryPackage Include="System.ServiceModel.Security">
      <Version>$(ServiceModelVersion)</Version>
    </ExternalLibraryPackage>
  </ItemGroup>
  <ItemGroup>
    <!-- The shims included in the shims package are only needed for netcoreapp2.0 since in newer frameworks they are included inbox.
    In order to condition the shims package to an specific framework other dependencies need to specify their target framework. So
    we need to include the dependencies with the supported frameworks and then we include the compatibility shims package only for 2.0 -->
    <IndexedDependency Include="@(LibraryPackage);@(PrereleaseLibraryPackage)">
      <TargetFramework>netcoreapp2.0</TargetFramework>
    </IndexedDependency>
    <IndexedDependency Include="@(LibraryPackage);@(PrereleaseLibraryPackage)">
      <TargetFramework>netcoreapp2.1</TargetFramework>
    </IndexedDependency>
    <IndexedDependency Include="@(LibraryPackage);@(PrereleaseLibraryPackage);@(NS21PrereleaseLibraryPackage)">
      <TargetFramework>netcoreapp3.0</TargetFramework>
    </IndexedDependency>
    <IndexedDependency Include="@(LibraryPackage);@(PrereleaseLibraryPackage)">
      <TargetFramework>netstandard2.0</TargetFramework>
    </IndexedDependency>
    <IndexedDependency Include="@(LibraryPackage);@(PrereleaseLibraryPackage);@(NS21PrereleaseLibraryPackage)">
      <TargetFramework>netstandard2.1</TargetFramework>
    </IndexedDependency>
    <!-- Include dependency to shims package -->
    <IndexedDependency Include="Microsoft.Windows.Compatibility.Shims">
      <Version>2.0.1</Version>
      <TargetFramework>netcoreapp2.0</TargetFramework>
    </IndexedDependency>
  </ItemGroup>

  <ItemGroup>
    <Dependency Include="@(ExternalLibraryPackage)">
      <TargetFramework>netcoreapp2.0</TargetFramework>
    </Dependency>
    <Dependency Include="@(ExternalLibraryPackage)">
      <TargetFramework>netcoreapp2.1</TargetFramework>
    </Dependency>
    <Dependency Include="@(ExternalLibraryPackage)">
      <TargetFramework>netcoreapp3.0</TargetFramework>
    </Dependency>
    <Dependency Include="@(ExternalLibraryPackage)">
      <TargetFramework>netstandard2.0</TargetFramework>
    </Dependency>
    <Dependency Include="@(ExternalLibraryPackage)">
      <TargetFramework>netstandard2.1</TargetFramework>
    </Dependency>
  </ItemGroup>
  <Import Project="$([MSBuild]::GetPathOfFileAbove(Directory.Build.targets))" />
</Project>
