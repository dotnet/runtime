<Project>
  <Import Project="$(MSBuildThisFileDirectory)..\Directory.Build.targets" />

  <Target Name="BuildAllProjects">
    <MSBuild Targets="$(MSBuildProjectDefaultTargets)"
             Projects="@(Project)"
             Properties="BuildAllProjects=true;%(Project.AdditionalProperties)"
             BuildInParallel="true"
             ContinueOnError="ErrorAndStop" />
  </Target>

  <Target Name="GetFilesToPackage"
          DependsOnTargets="FilterProjects"
          Returns="@(FilesToPackage)">
    <MSBuild Targets="GetFilesToPackage"
             Projects="@(Project)"
             BuildInParallel="true"
             Properties="$(ProjectProperties)"
             ContinueOnError="ErrorAndContinue" >
      <Output TaskParameter="TargetOutputs"
              ItemName="FilesToPackage" />
    </MSBuild>

    <!-- Given we ErrorAndContinue we need to propagate the error if the overall task failed -->
    <Error Condition="'$(MSBuildLastTaskResult)'=='false'" />
  </Target>

  <!-- Pack is a no-op and should just invoke build. -->
  <Target Name="Pack" DependsOnTargets="Build" />

  <PropertyGroup>
    <TraversalBuildDependsOn>BuildAllProjects;$(TraversalBuildDependsOn);</TraversalBuildDependsOn>
  </PropertyGroup>

  <Target Name="Build" DependsOnTargets="$(TraversalBuildDependsOn)" />
  <Target Name="Clean" DependsOnTargets="$(TraversalCleanDependsOn)" />
  <Target Name="Rebuild" DependsOnTargets="Clean;Build" />
  <Target Name="Restore" />

  <PropertyGroup Condition="'$(BuildingAnOfficialBuildLeg)' == 'true'">
    <!-- During an official build, only build identity packages in the AllConfigurations build -->
    <SkipBuildIdentityPackage Condition="'$(BuildAllConfigurations)' != 'true'">true</SkipBuildIdentityPackage>

    <!-- During an official build, skip building runtime packages on AllConfigurations build -->
    <SkipBuildRuntimePackage Condition="'$(BuildAllConfigurations)' == 'true'">true</SkipBuildRuntimePackage>
  </PropertyGroup>

  <PropertyGroup>
    <TraversalBuildDependsOn>
      FilterProjectsPackageRID;
      $(TraversalBuildDependsOn);
    </TraversalBuildDependsOn>
  </PropertyGroup>

  <!-- When @(BuildRID) is set, filter the set of projects down to only those applicable to $(PackageRID) -->
  <Target Name="FilterProjectsPackageRID" Condition="'@(BuildRID)' != ''">
    <ItemGroup>
      <!-- Build identity package, when SkipBuildIdentityPackage is not set -->
      <_projectsToBuild Include="@(Project)" Condition="'%(Project.PackageTargetRuntime)' == '' and '$(SkipBuildIdentityPackage)' != 'true'" />
      <!-- Build packages for current RID, when SkipBuildRuntimePackage is not set -->
      <_projectsToBuild Include="@(Project)" Condition="'%(Project.PackageTargetRuntime)' == '$(PackageRID)' and '$(SkipBuildRuntimePackage)' != 'true'" />
    </ItemGroup>

    <ItemGroup>
      <Project Remove="@(Project)" />
      <Project Include="@(_projectsToBuild)" />
    </ItemGroup>
  </Target>
</Project>
