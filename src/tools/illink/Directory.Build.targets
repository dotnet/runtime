<Project>
  <Import Project="..\..\..\Directory.Build.targets" />

  <Import Project="$(_ToolsProjectTargets)" Condition="Exists('$(_ToolsProjectTargets)')" />

  <Target Name="VSTestIfTestProject">
    <CallTarget Targets="VSTest" Condition="'$(IsTestProject)' == 'true'" />
  </Target>

  <!-- Import reference assembly and ApiCompat logic --> 
  <Import Project="$(RepositoryEngineeringDir)resolveContract.targets" Condition="'$(IsSourceProject)' == 'true'" />

  <!-- The default pack logic will include the implementation assembly in lib.
       This also adds the reference assembly under ref. -->
  <Target Name="_AddReferenceAssemblyToPackage">
    <!-- Get the build output of the reference project, which has been built due to the ProjectReference. -->
    <MSBuild Projects="$(ContractProject)" Targets="BuiltProjectOutputGroup" Properties="TargetFramework=$(TargetFramework)">
      <Output TaskParameter="TargetOutputs" ItemName="_ReferenceAssemblies" />
    </MSBuild>
    <!-- Check just to be safe. -->
    <Error Condition="!Exists('%(_ReferenceAssemblies.Identity)')" Text="Reference assembly %(Identity) does not exist. Ensure it has been built before packaging." />
    <!-- Add it to the package. -->
    <ItemGroup>
      <TfmSpecificPackageFile Include="@(_ReferenceAssemblies)" PackagePath="ref\$(TargetFramework)" />
    </ItemGroup>
  </Target>
</Project>
