<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method()" e="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::SameContext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::SameContext()" e="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Broken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Broken()" e="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Conditional()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Conditional()" e="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Conditional()" e="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C::ConditionalTest()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Conditional()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.C:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C::ConditionalTest()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Broken()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::SameContext()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::field" e="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::field" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::SameContext()" e="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method2(System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::SameContext()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method2(System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method2(System.SByte&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method2(System.SByte&amp;)" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method2(System.SByte&amp;)" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method2(System.SByte&amp;)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method2(System.SByte&amp;)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C::Dependency1()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C::Dependency2(T[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C::Dependency3(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C::RecursiveDependency()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method()" e="Field:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::field" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::field" e="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.C:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::field" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Nested::NextOne(Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Nested&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Nested::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method()" e="Method:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::get_Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method()" e="Method:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::get_Property2()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex::M(Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/S`1&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A,V&gt;&gt;[0...,0...,0...][][][0...,0...]&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex::M(Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/S`1&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A,V&gt;&gt;[0...,0...,0...][][][0...,0...]&amp;)" e="TypeSpec:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/S`1&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A,V&gt;&gt;[0...,0...,0...][][][0...,0...]&amp;:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/S`1&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A,V&gt;&gt;[0...,0...,0...][][][0...,0...]&amp;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/S`1&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A,V&gt;&gt;[0...,0...,0...][][][0...,0...]:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/S`1&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A,V&gt;&gt;[0...,0...,0...][][][0...,0...]:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/S`1&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A,V&gt;&gt;[0...,0...,0...][][]:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/S`1&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A,V&gt;&gt;[0...,0...,0...][][]:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/S`1&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A,V&gt;&gt;[0...,0...,0...][]:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/S`1&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A,V&gt;&gt;[0...,0...,0...][]:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/S`1&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A,V&gt;&gt;[0...,0...,0...]:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A,V&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A:test.exe" e="Module:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/S`1&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A,V&gt;&gt;:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A,V&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A,V&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2:test.exe" e="Module:test.exe" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/S`1&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A,V&gt;&gt;[0...,0...,0...]:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/S`1&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A,V&gt;&gt;:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/S`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex::M(Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/S`1&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/G`2&lt;Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Complex/A,V&gt;&gt;[0...,0...,0...][][][0...,0...]&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::get_Property2()" e="Property:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::Property2()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::get_Property2()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::get_Property()" e="Property:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::Property()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::get_Property()" e="TypeDef:System.String" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Nested:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Nested::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Nested:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Nested::.cctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Nested::NextOne(Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Nested&amp;)" e="TypeSpec:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Nested&amp;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Nested::NextOne(Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/Nested&amp;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.C:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C::RecursiveDependency()" e="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C/NestedInC::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C::RecursiveDependency()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.C/NestedInC:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C/NestedInC::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.C/NestedInC:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C/NestedInC::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C/NestedInC::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C::Dependency3(System.String)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C::Dependency2(T[],System.Int32)" e="TypeSpec:T[]:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C::Dependency2(T[],System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.C::Dependency1()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DynamicDependencies.DynamicDependencyMethod/B::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::get_Property2()" e="Field:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::&lt;Property2&gt;k__BackingField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::&lt;Property2&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.C:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::&lt;Property2&gt;k__BackingField" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::get_Property()" e="Field:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::&lt;Property&gt;k__BackingField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::&lt;Property&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DynamicDependencies.C:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DynamicDependencies.C::&lt;Property&gt;k__BackingField" e="TypeDef:System.String" />
</dependencies>