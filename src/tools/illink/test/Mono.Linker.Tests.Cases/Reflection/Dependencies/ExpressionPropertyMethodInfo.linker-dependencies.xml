<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNull()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNull()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNonPropertyMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNonPropertyMethod()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNonExistentMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNonExistentMethod()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestUnknownMethod(System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestUnknownMethod(System.Reflection.MethodInfo)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestUnknownMethod(System.Reflection.MethodInfo)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestUnknownMethod(System.Reflection.MethodInfo)" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::get_FirstStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::get_SecondStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::FirstStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::get_FirstStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::set_FirstStaticProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::SecondStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::get_SecondStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::Test(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::set_SecondStaticProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::set_SecondStaticProperty(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::SecondStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::set_SecondStaticProperty(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::set_SecondStaticProperty(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::&lt;SecondStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::&lt;SecondStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::&lt;SecondStaticProperty&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::set_FirstStaticProperty(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::FirstStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::set_FirstStaticProperty(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::set_FirstStaticProperty(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::&lt;FirstStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::&lt;FirstStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::&lt;FirstStaticProperty&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::get_SecondStaticProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::SecondStaticProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::get_SecondStaticProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::get_SecondStaticProperty()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::&lt;SecondStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::get_FirstStaticProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::FirstStaticProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::get_FirstStaticProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::get_FirstStaticProperty()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/MultipleMethods::&lt;FirstStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNonExistentMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNonExistentMethod()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNonExistentMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNonExistentMethod()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNonExistentMethod()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNonPropertyMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNonPropertyMethod()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNonPropertyMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNonPropertyMethod()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNonPropertyMethod()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNull()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNull()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo::TestNull()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Void System.Type::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Reflection.MethodInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeMethod(System.Type,System.String,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Linq.Expressions.NewExpression System.Linq.Expressions.Expression::New(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::set_StaticPropertyReflectionAccess(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::StaticPropertyReflectionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::get_StaticPropertyReflectionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::set_StaticPropertyReflectionAccess(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::set_StaticPropertyViaRuntimeMethod(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::StaticPropertyViaRuntimeMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::get_StaticPropertyViaRuntimeMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::set_StaticPropertyViaRuntimeMethod(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::set_InstancePropertyReflectionAccess(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::InstancePropertyReflectionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::get_InstancePropertyReflectionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::set_InstancePropertyReflectionAccess(System.Int32)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::get_InstancePropertyReflectionAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::InstancePropertyReflectionAccess()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::get_InstancePropertyReflectionAccess()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::get_InstancePropertyReflectionAccess()" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::get_InstancePropertyReflectionAccess()" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::get_InstancePropertyReflectionAccess()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::get_InstancePropertyReflectionAccess()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::set_InstancePropertyReflectionAccess(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::InstancePropertyReflectionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::set_InstancePropertyReflectionAccess(System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::get_StaticPropertyViaRuntimeMethod()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::StaticPropertyViaRuntimeMethod()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::get_StaticPropertyViaRuntimeMethod()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::get_StaticPropertyViaRuntimeMethod()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::&lt;StaticPropertyViaRuntimeMethod&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::&lt;StaticPropertyViaRuntimeMethod&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::&lt;StaticPropertyViaRuntimeMethod&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::set_StaticPropertyViaRuntimeMethod(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::StaticPropertyViaRuntimeMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::set_StaticPropertyViaRuntimeMethod(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::set_StaticPropertyViaRuntimeMethod(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::&lt;StaticPropertyViaRuntimeMethod&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::get_StaticPropertyReflectionAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::StaticPropertyReflectionAccess()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::get_StaticPropertyReflectionAccess()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::get_StaticPropertyReflectionAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::&lt;StaticPropertyReflectionAccess&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::&lt;StaticPropertyReflectionAccess&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::&lt;StaticPropertyReflectionAccess&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::set_StaticPropertyReflectionAccess(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::StaticPropertyReflectionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::set_StaticPropertyReflectionAccess(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::set_StaticPropertyReflectionAccess(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::&lt;StaticPropertyReflectionAccess&gt;k__BackingField" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.Int32&gt;&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter:test.exe" />
	<edge mark="1" b="TypeSpec:System.Func`2&lt;Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter,System.Int32&gt;" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter,System.Int32&gt;&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_StaticPropertyExpressionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.Int32&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Linq.Expressions.ParameterExpression System.Linq.Expressions.Expression::Parameter(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_InstancePropertyExpressionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`2&lt;Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter,System.Int32&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="TypeSpec:System.Func`2&lt;Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter,System.Int32&gt;" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Linq.Expressions.NewExpression System.Linq.Expressions.Expression::New(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Reflection.MethodInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeMethod(System.Type,System.String,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::StaticPropertyExpressionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_StaticPropertyExpressionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_StaticPropertyExpressionAccess(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_StaticPropertyViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::StaticPropertyViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_StaticPropertyViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_StaticPropertyViaReflection(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::InstancePropertyExpressionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_InstancePropertyExpressionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_InstancePropertyExpressionAccess(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_InstancePropertyViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::InstancePropertyViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_InstancePropertyViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_InstancePropertyViaReflection(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_StaticPropertyViaRuntimeMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::StaticPropertyViaRuntimeMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_StaticPropertyViaRuntimeMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_StaticPropertyViaRuntimeMethod(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_StaticPropertyViaRuntimeMethod(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::StaticPropertyViaRuntimeMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_StaticPropertyViaRuntimeMethod(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_StaticPropertyViaRuntimeMethod(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;StaticPropertyViaRuntimeMethod&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;StaticPropertyViaRuntimeMethod&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;StaticPropertyViaRuntimeMethod&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_StaticPropertyViaRuntimeMethod()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::StaticPropertyViaRuntimeMethod()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_StaticPropertyViaRuntimeMethod()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_StaticPropertyViaRuntimeMethod()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;StaticPropertyViaRuntimeMethod&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_InstancePropertyViaReflection(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::InstancePropertyViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_InstancePropertyViaReflection(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_InstancePropertyViaReflection()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::InstancePropertyViaReflection()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_InstancePropertyViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_InstancePropertyExpressionAccess(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::InstancePropertyExpressionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_InstancePropertyExpressionAccess(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_StaticPropertyViaReflection(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::StaticPropertyViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_StaticPropertyViaReflection(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_StaticPropertyViaReflection(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;StaticPropertyViaReflection&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;StaticPropertyViaReflection&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;StaticPropertyViaReflection&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_StaticPropertyViaReflection()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::StaticPropertyViaReflection()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_StaticPropertyViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_StaticPropertyViaReflection()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;StaticPropertyViaReflection&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_StaticPropertyExpressionAccess(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::StaticPropertyExpressionAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_StaticPropertyExpressionAccess(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_StaticPropertyExpressionAccess(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;StaticPropertyExpressionAccess&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;StaticPropertyExpressionAccess&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;StaticPropertyExpressionAccess&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_InstancePropertyExpressionAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::InstancePropertyExpressionAccess()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_InstancePropertyExpressionAccess()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:T[] System.Array::Empty()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_StaticPropertyExpressionAccess()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::StaticPropertyExpressionAccess()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_StaticPropertyExpressionAccess()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_StaticPropertyExpressionAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;StaticPropertyExpressionAccess&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::get_InstancePropertyReflectionAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::&lt;InstancePropertyReflectionAccess&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::&lt;InstancePropertyReflectionAccess&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::&lt;InstancePropertyReflectionAccess&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::set_InstancePropertyReflectionAccess(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertySetter::&lt;InstancePropertyReflectionAccess&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_InstancePropertyViaReflection(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;InstancePropertyViaReflection&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;InstancePropertyViaReflection&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;InstancePropertyViaReflection&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_InstancePropertyViaReflection()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;InstancePropertyViaReflection&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::set_InstancePropertyExpressionAccess(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;InstancePropertyExpressionAccess&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;InstancePropertyExpressionAccess&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;InstancePropertyExpressionAccess&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::get_InstancePropertyExpressionAccess()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionPropertyMethodInfo/PropertyGetter::&lt;InstancePropertyExpressionAccess&gt;k__BackingField" />
	<edge b="Field:T[] System.SpanDebugView`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="ModuleRef:QCall" />
	<edge b="Method:T[] System.ReadOnlySpan`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.Span`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Span`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::GetPinnableReference()" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.ArraySegment`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::GetPinnableReference()" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.SpanDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToTruncating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToSaturating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToChecked(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ArraySegment`1&lt;T&gt; System.ArraySegment`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
</dependencies>