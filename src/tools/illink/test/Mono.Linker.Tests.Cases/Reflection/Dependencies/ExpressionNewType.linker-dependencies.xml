<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_SystemTypeValueNode(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_SystemTypeValueNode(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_SystemTypeValueNode(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_SystemTypeValueNode(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_NullValueNode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_NullValueNode()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType/C:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType/C:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_MethodParameterValueNode(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_MethodParameterValueNode(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_UnrecognizedPatterns()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_UnrecognizedPatterns()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::TestNullType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::TestNullType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::TestNoValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::TestNoValue()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::TestNoValue()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::TestNoValue()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::TestNoValue()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::TestNoValue()" e="Method:System.Linq.Expressions.NewExpression System.Linq.Expressions.Expression::New(System.Type)" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::TestNullType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::TestNullType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::TestNullType()" e="Method:System.Linq.Expressions.NewExpression System.Linq.Expressions.Expression::New(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_UnrecognizedPatterns()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_UnrecognizedPatterns()" e="Method:System.Type System.Type::GetType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_UnrecognizedPatterns()" e="Method:System.Linq.Expressions.NewExpression System.Linq.Expressions.Expression::New(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_UnrecognizedPatterns()" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::GetType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::GetType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_UnrecognizedPatterns()" e="Method:System.Linq.Expressions.NewExpression System.Linq.Expressions.Expression::New(System.Type)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::GetType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::GetType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::GetType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType/D:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType/D:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::GetType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_MethodParameterValueNode(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_MethodParameterValueNode(System.Type)" e="Method:System.Linq.Expressions.NewExpression System.Linq.Expressions.Expression::New(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_NullValueNode()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_NullValueNode()" e="Method:System.Linq.Expressions.NewExpression System.Linq.Expressions.Expression::New(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_SystemTypeValueNode(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_SystemTypeValueNode(System.Int32)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_SystemTypeValueNode(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_SystemTypeValueNode(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_SystemTypeValueNode(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType/A:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType/A:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_SystemTypeValueNode(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_SystemTypeValueNode(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType/B:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType/B:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_SystemTypeValueNode(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_SystemTypeValueNode(System.Int32)" e="Method:System.Linq.Expressions.NewExpression System.Linq.Expressions.Expression::New(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_SystemTypeValueNode(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType/A::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType::Branch_SystemTypeValueNode(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType/B::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType/B::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType/B:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType/B::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType/B::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType/A::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionNewType/A:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType/A::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionNewType/A::.ctor()" e="Method:System.Void System.Object::.ctor()" />
</dependencies>