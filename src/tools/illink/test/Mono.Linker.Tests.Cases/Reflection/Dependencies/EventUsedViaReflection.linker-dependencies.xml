<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestByName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestByName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestInternalByName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestInternalByName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameWrongBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameWrongBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlags(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNullName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNullName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEmptyName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEmptyName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValueName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValueName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNonExistingName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNonExistingName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNullType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNullType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValue()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestDataFlowType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestDataFlowType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEventInBaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEventInBaseType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIgnoreCaseBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestFailIgnoreCaseBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestFailIgnoreCaseBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestUnsupportedBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestUnsupportedBindingFlags()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::MarkedDueToPutRefDispPropertyEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::MarkedDueToPutRefDispPropertyEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::MarkedDueToPutRefDispPropertyEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestUnsupportedBindingFlags()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::MarkedDueToPutRefDispPropertyEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::MarkedDueToPutRefDispPropertyEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestFailIgnoreCaseBindingFlags()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestFailIgnoreCaseBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/FailIgnoreCaseBindingFlagsClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/FailIgnoreCaseBindingFlagsClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestFailIgnoreCaseBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestFailIgnoreCaseBindingFlags()" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::MarkedDueToIgnoreCaseEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::MarkedDueToIgnoreCaseEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::add_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::MarkedDueToIgnoreCaseEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::add_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::MarkedDueToIgnoreCaseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::add_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::MarkedDueToIgnoreCaseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::add_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IgnoreCaseBindingFlagsClass::add_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEventInBaseType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEventInBaseType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/DerivedClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/DerivedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEventInBaseType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEventInBaseType()" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEventInBaseType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/DerivedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEventInBaseType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEventInBaseType()" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEventInBaseType()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/BaseClass::PublicEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/BaseClass::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/BaseClass::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/BaseClass::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/BaseClass::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEventInBaseType()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/BaseClass::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/BaseClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/BaseClass::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/BaseClass::PublicEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/BaseClass::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/BaseClass::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/BaseClass::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/BaseClass::PublicEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/BaseClass::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/BaseClass::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::IfEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::IfEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::IfEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::ElseEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::ElseEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::ElseEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::IfEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::IfEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::IfEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::ElseEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::ElseEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::ElseEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::ElseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::ElseEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::ElseEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::ElseEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::ElseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::ElseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::ElseEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::ElseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::IfEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::IfEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/ElseClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::ElseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::ElseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::IfEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::IfEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/IfClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestDataFlowType()" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::FindType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::FindType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestDataFlowType()" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::FindType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::FindType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::FindType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo:test.exe" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::FindType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValue()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValue()" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValue()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValue()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValue()" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNullType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNullType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNullType()" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNullType()" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNonExistingName()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNonExistingName()" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNonExistingName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNonExistingName()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNonExistingName()" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValueName()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValueName()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValueName()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValueName()" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValueName()" e="Method:System.String System.Type::get_AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValueName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValueName()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNoValueName()" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEmptyName()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEmptyName()" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEmptyName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEmptyName()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEmptyName()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestEmptyName()" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNullName()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNullName()" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNullName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNullName()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNullName()" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::InternalEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::InternalEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::InternalEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::Static" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::Static" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::Static" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::PrivateEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::Static" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::Static" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::Static" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::Static" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::Static" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::Static" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::Static" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::Static" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::InternalEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::InternalEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlagsAndName::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlags(System.Reflection.BindingFlags)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::InternalEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::InternalEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::InternalEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlags(System.Reflection.BindingFlags)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::Static" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::Static" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::Static" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlags(System.Reflection.BindingFlags)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::PrivateEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlags(System.Reflection.BindingFlags)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::Static" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::Static" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::Static" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::Static" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::Static" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::Static" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::Static" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::Static" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::InternalEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::InternalEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/UnknownBindingFlags::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameWrongBindingFlags()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameWrongBindingFlags()" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameWrongBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Bar:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Bar:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameWrongBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameWrongBindingFlags()" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameBindingFlags()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameBindingFlags()" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Bar:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameBindingFlags()" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameBindingFlags()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Bar::PrivateEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Bar::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Bar::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Bar::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Bar::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestNameBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Bar::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Bar::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Bar::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Bar::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Bar::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Bar::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Bar::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Bar::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Bar::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestInternalByName()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestInternalByName()" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestInternalByName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/InternalEventType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/InternalEventType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestInternalByName()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestInternalByName()" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestInternalByName()" e="Method:System.Reflection.MethodInfo System.Reflection.EventInfo::GetAddMethod(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestByName()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestByName()" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestByName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestByName()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestByName()" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestByName()" e="Method:System.Reflection.MethodInfo System.Reflection.EventInfo::GetAddMethod(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestByName()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::Event" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::Event" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::Event" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection::TestByName()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::Event" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::Event" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::Event" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::Event" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::Event" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::Event" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::Event" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::Event" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
</dependencies>