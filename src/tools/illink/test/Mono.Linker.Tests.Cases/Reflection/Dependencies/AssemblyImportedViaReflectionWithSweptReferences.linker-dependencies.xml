<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.AssemblyImportedViaReflectionWithSweptReferences" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.AssemblyImportedViaReflectionWithSweptReferences" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.AssemblyImportedViaReflectionWithSweptReferences::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.AssemblyImportedViaReflectionWithSweptReferences" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.AssemblyImportedViaReflectionWithSweptReferences::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.AssemblyImportedViaReflectionWithSweptReferences::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.AssemblyImportedViaReflectionWithSweptReferences::AccessNonExistingTypeInAssembly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.AssemblyImportedViaReflectionWithSweptReferences::AccessNonExistingTypeInAssembly()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.AssemblyImportedViaReflectionWithSweptReferences" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.AssemblyImportedViaReflectionWithSweptReferences::AccessNonExistingTypeInAssembly()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.AssemblyImportedViaReflectionWithSweptReferences::AccessNonExistingTypeInAssembly()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.AssemblyImportedViaReflectionWithSweptReferences::AccessNonExistingTypeInAssembly()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.AssemblyImportedViaReflectionWithSweptReferences::AccessNonExistingTypeInAssembly()" e="Method:System.Type System.Type::GetType(System.String,System.Boolean)" />
</dependencies>