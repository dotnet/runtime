<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers::TestWithCallingConvention()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers::TestWithCallingConvention()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNullType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNullType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNoValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNoValue()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNullArguments()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNullArguments()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestDataFlowType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestDataFlowType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse::TestIfElse(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse::TestIfElse(System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse::TestIfElse(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse::TestIfElse(System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse::TestIfElse(System.Boolean)" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse::TestIfElse(System.Boolean)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse::TestIfElse(System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse/IfConstructor:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse/IfConstructor:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse::TestIfElse(System.Boolean)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse::TestIfElse(System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse/ElseConstructor:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse/ElseConstructor:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse::TestIfElse(System.Boolean)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse::TestIfElse(System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse::TestIfElse(System.Boolean)" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse::TestIfElse(System.Boolean)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse::TestIfElse(System.Boolean)" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse/IfConstructor::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse/ElseConstructor::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse/ElseConstructor::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse/ElseConstructor:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse/ElseConstructor::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse/ElseConstructor::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse/IfConstructor::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse/IfConstructor:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse/IfConstructor::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/IfElse/IfConstructor::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestDataFlowType()" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::FindType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::FindType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestDataFlowType()" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Type[])" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::FindType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::FindType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNullArguments()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNullArguments()" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNullArguments()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/TestType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/TestType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNullArguments()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNullArguments()" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNullArguments()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/TestType::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/TestType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/TestType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/TestType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNoValue()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNoValue()" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNoValue()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNoValue()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNoValue()" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNullType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNullType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNullType()" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNullType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::TestNullType()" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_EmptyTypes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_EmptyTypes()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_EmptyTypes_DataFlow(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_EmptyTypes_DataFlow(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes_DataFlow(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes_DataFlow(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes_DataFlow(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes_DataFlow(System.Type)" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes_DataFlow(System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes_DataFlow(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes_DataFlow(System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes_DataFlow(System.Type)" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Reflection.BindingFlags,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_EmptyTypes_DataFlow(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_EmptyTypes_DataFlow(System.Type)" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_EmptyTypes_DataFlow(System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_EmptyTypes_DataFlow(System.Type)" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Reflection.BindingFlags,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes()" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types/NonEmptyTypes:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types/NonEmptyTypes:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes()" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Reflection.BindingFlags,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types/NonEmptyTypes::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_NonEmptyTypes()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types/NonEmptyTypes::.ctor(System.Int32)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types/NonEmptyTypes::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types/NonEmptyTypes:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types/NonEmptyTypes::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types/NonEmptyTypes::.ctor(System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types/NonEmptyTypes::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types/NonEmptyTypes:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types/NonEmptyTypes::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types/NonEmptyTypes::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_EmptyTypes()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_EmptyTypes()" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_EmptyTypes()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_EmptyTypes()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_EmptyTypes()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_EmptyTypes()" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Reflection.BindingFlags,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_EmptyTypes()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_EmptyTypes()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::TestWithBindingFlagsAndTypes_EmptyTypes()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Types::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers::TestWithCallingConvention()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers::TestWithCallingConvention()" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers::TestWithCallingConvention()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers::TestWithCallingConvention()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers::TestWithCallingConvention()" e="Method:System.Reflection.Binder Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::GetNullValue(System.String,System.Int32,System.Int64)" />
	<edge mark="1" b="Method:System.Reflection.Binder Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::GetNullValue(System.String,System.Int32,System.Int64)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers::TestWithCallingConvention()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers::TestWithCallingConvention()" e="TypeDef:System.Reflection.ParameterModifier" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers::TestWithCallingConvention()" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers::TestWithCallingConvention()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers::TestWithCallingConvention()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers::TestWithCallingConvention()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_CallConvention_Types_Modifiers::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.Binder Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::GetNullValue(System.String,System.Int32,System.Int64)" e="TypeDef:System.Reflection.Binder" />
	<edge mark="1" b="Method:System.Reflection.Binder Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::GetNullValue(System.String,System.Int32,System.Int64)" e="TypeDef:System.Reflection.Binder" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Reflection.Binder Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::GetNullValue(System.String,System.Int32,System.Int64)" />
	<edge mark="1" b="Method:System.Reflection.Binder Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::GetNullValue(System.String,System.Int32,System.Int64)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.ParameterModifier" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor(System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor(System.String)" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor(System.Int32,System.Int32,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor(System.Int32,System.Int32,System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor(System.Int32,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor(System.Int32,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor(System.Int32,System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/UnknownBindingFlags::.ctor(System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithBindingFlags()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithBindingFlags()" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/KnownBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/KnownBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithBindingFlags()" e="Method:System.Reflection.Binder Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::GetNullValue(System.String,System.Int32,System.Int64)" />
	<edge mark="1" b="Method:System.Reflection.Binder Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection::GetNullValue(System.String,System.Int32,System.Int64)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithBindingFlags()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithBindingFlags()" e="TypeDef:System.Reflection.ParameterModifier" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithBindingFlags()" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithBindingFlags()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithBindingFlags()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers::TestWithBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/KnownBindingFlags::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/KnownBindingFlags::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/KnownBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/KnownBindingFlags::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_BindingAttr_Binder_Types_Modifiers/KnownBindingFlags::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes_DataFlow(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes_DataFlow(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_DataFlow(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_DataFlow(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes_RUCOnCtor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes_RUCOnCtor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_RUCOnCtor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_RUCOnCtor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_RUCOnCtor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_RUCOnCtor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/CtorWithRUC:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/CtorWithRUC:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_RUCOnCtor()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_RUCOnCtor()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_RUCOnCtor()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_RUCOnCtor()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_RUCOnCtor()" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_RUCOnCtor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/CtorWithRUC::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_RUCOnCtor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/CtorWithRUC::.ctor(System.Int32)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/CtorWithRUC::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/CtorWithRUC:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/CtorWithRUC::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/CtorWithRUC::.ctor(System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/CtorWithRUC::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/CtorWithRUC:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/CtorWithRUC::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/CtorWithRUC::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes_RUCOnCtor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes_RUCOnCtor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/CtorWithRUC:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes_RUCOnCtor()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes_RUCOnCtor()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes_RUCOnCtor()" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes_RUCOnCtor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/CtorWithRUC::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_DataFlow(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_DataFlow(System.Type)" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_DataFlow(System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_DataFlow(System.Type)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_DataFlow(System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_DataFlow(System.Type)" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_DataFlow(System.Type)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes_DataFlow(System.Type)" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes_DataFlow(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes_DataFlow(System.Type)" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes_DataFlow(System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes_DataFlow(System.Type)" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes_DataFlow(System.Type)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes_DataFlow(System.Type)" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes()" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes()" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_NonEmptyTypes()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::.ctor(System.Int32)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::.ctor(System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes()" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/EmptyTypes:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/EmptyTypes:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes()" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types::TestConstructorWithTypes_EmptyTypes()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/EmptyTypes::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/EmptyTypes::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/EmptyTypes:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/EmptyTypes::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ConstructorUsedViaReflection/GetConstructor_Types/EmptyTypes::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Field:T[] System.SpanDebugView`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="ModuleRef:QCall" />
	<edge b="Method:T[] System.ReadOnlySpan`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.Span`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Span`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::GetPinnableReference()" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.ArraySegment`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::GetPinnableReference()" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.SpanDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToTruncating(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToSaturating(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToChecked(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
</dependencies>