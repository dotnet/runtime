<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestGetNestedTypes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestGetNestedTypes()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestNullType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestNullType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestNoValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestNoValue()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestDataFlowType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestDataFlowType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/MyType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/MyType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/MyType/publicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/MyType/publicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/SuppressChangeTypeClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/SuppressChangeTypeClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/SuppressChangeTypeClass/MarkedDueToSuppressChangeType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/SuppressChangeTypeClass/MarkedDueToSuppressChangeType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/SuppressChangeTypeClass/SuppressChangeTypeNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/SuppressChangeTypeClass/SuppressChangeTypeNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/IgnoreCaseClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/IgnoreCaseClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/IgnoreCaseClass/MarkedDueToIgnoreCase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/IgnoreCaseClass/MarkedDueToIgnoreCase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/IgnoreCaseClass/IgnoreCasePublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/IgnoreCaseClass/IgnoreCasePublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestDataFlowType()" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::FindType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::FindType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestDataFlowType()" e="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::FindType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::FindType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestNoValue()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestNoValue()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestNoValue()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestNoValue()" e="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestNullType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestNullType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestNullType()" e="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/UnknownBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/UnknownBindingFlags/PrivateNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/UnknownBindingFlags/PrivateNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/UnknownBindingFlags/PublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/UnknownBindingFlags/PublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/NestedType" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/NestedType" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/PublicNestedType" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/PublicNestedType" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestByBindingFlags()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestGetNestedTypes()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestGetNestedTypes()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestGetNestedTypes()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestGetNestedTypes()" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection::TestGetNestedTypes()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypesUsedViaReflection/NestedType" />
</dependencies>