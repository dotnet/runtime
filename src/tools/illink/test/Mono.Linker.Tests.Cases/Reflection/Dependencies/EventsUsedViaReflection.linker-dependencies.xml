<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestGetEvents()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestGetEvents()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestInternal()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestInternal()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestNullType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestNullType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestNoValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestNoValue()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestDataFlowType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestDataFlowType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIgnoreCaseBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnsupportedBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::PublicEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::PublicEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::PublicEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::PublicEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeSpec:System.Reflection.EventInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Reflection.EventInfo[] System.Type::GetEvents(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnsupportedBindingFlags()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::MarkedDueToPutRefDispPropertyEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::MarkedDueToPutRefDispPropertyEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::MarkedDueToPutRefDispPropertyEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnsupportedBindingFlags()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::PublicEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::PublicEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::PublicEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::PublicEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::MarkedDueToPutRefDispPropertyEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::MarkedDueToPutRefDispPropertyEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::MarkedDueToPutRefDispPropertyEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::MarkedDueToPutRefDispPropertyEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::MarkedDueToPutRefDispPropertyEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::MarkedDueToPutRefDispPropertyEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::MarkedDueToPutRefDispPropertyEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::MarkedDueToPutRefDispPropertyEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/PutRefDispPropertyBindingFlagsClass::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeSpec:System.Reflection.EventInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Reflection.EventInfo[] System.Type::GetEvents(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::MarkedDueToIgnoreCaseEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::MarkedDueToIgnoreCaseEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::MarkedDueToIgnoreCaseEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::PublicEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::PublicEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::PublicEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::PublicEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::MarkedDueToIgnoreCaseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::MarkedDueToIgnoreCaseEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::MarkedDueToIgnoreCaseEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::MarkedDueToIgnoreCaseEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::MarkedDueToIgnoreCaseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::remove_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::MarkedDueToIgnoreCaseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::MarkedDueToIgnoreCaseEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::MarkedDueToIgnoreCaseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IgnoreCaseBindingFlagsClass::add_MarkedDueToIgnoreCaseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" e="TypeSpec:System.Reflection.EventInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Reflection.EventInfo[] System.Type::GetEvents(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::IfEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::IfEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::IfEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::ElseEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::ElseEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::ElseEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::ElseEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::ElseEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::ElseEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::IfEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::IfEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::IfEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::IfEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::IfEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::IfEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::IfEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::IfEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::IfEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::IfEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::IfEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::ElseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::ElseEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::ElseEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::ElseEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::ElseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::ElseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::ElseEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::ElseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/ElseClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::ElseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::ElseEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::ElseEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::ElseEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::ElseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::ElseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::ElseEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::ElseEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_ElseEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::IfEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::IfEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::IfEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::IfEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::IfEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::remove_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::IfEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::IfEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::IfEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/IfClass::add_IfEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="TypeSpec:System.Reflection.EventInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="Method:System.Reflection.EventInfo[] System.Type::GetEvents(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestDataFlowType()" e="TypeSpec:System.Reflection.EventInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestDataFlowType()" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::FindType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::FindType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestDataFlowType()" e="Method:System.Reflection.EventInfo[] System.Type::GetEvents(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::FindType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::FindType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::FindType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo:test.exe" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::FindType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestNoValue()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestNoValue()" e="TypeSpec:System.Reflection.EventInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestNoValue()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestNoValue()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestNoValue()" e="Method:System.Reflection.EventInfo[] System.Type::GetEvents()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestNullType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestNullType()" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestNullType()" e="TypeSpec:System.Reflection.EventInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestNullType()" e="Method:System.Reflection.EventInfo[] System.Type::GetEvents()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.EventInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo[] System.Type::GetEvents(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::InternalEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::InternalEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::InternalEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::Static" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::Static" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::Static" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PrivateEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PublicEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PublicEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PublicEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PublicEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PrivateEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PrivateEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PrivateEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PrivateEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::Static" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::Static" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::Static" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::Static" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::Static" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::Static" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::Static" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::Static" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::InternalEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::InternalEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::InternalEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::InternalEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::InternalEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::InternalEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::InternalEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::InternalEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/UnknownBindingFlags::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestBindingFlags()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestBindingFlags()" e="TypeSpec:System.Reflection.EventInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestBindingFlags()" e="Method:System.Reflection.EventInfo[] System.Type::GetEvents(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestBindingFlags()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::InternalEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::InternalEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::InternalEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestBindingFlags()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::Static" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::Static" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::Static" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestBindingFlags()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::PrivateEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::PrivateEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::PrivateEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::PrivateEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::PrivateEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::Static" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::Static" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::Static" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::Static" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::Static" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::Static" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::Static" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::Static" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_Static(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::InternalEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::InternalEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::InternalEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::InternalEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::InternalEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::remove_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::InternalEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::InternalEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::InternalEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Bar::add_InternalEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestInternal()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestInternal()" e="TypeSpec:System.Reflection.EventInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestInternal()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/InternalEventType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/InternalEventType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestInternal()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestInternal()" e="Method:System.Reflection.EventInfo[] System.Type::GetEvents()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestGetEvents()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestGetEvents()" e="TypeSpec:System.Reflection.EventInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestGetEvents()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestGetEvents()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestGetEvents()" e="Method:System.Reflection.EventInfo[] System.Type::GetEvents()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestGetEvents()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::Event" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::Event" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::Event" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection::TestGetEvents()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::Event" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::Event" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::Event" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::Event" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::Event" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::Event" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::Event" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::Event" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.EventsUsedViaReflection/Foo::.ctor()" e="Method:System.Void System.Object::.ctor()" />
</dependencies>