<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags::Main()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags::Main()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags::Main()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags::Main()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo::OnlyCalledViaReflection(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo::OnlyCalledViaReflection(System.Int32,System.Int32)" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo::OnlyCalledViaReflection(System.Int32,System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflectionWithDefaultBindingFlags/Foo::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
</dependencies>