<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions" />
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions::Main()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions::Main()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Unsuppressed:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Unsuppressed:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Suppressed:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Suppressed:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Suppressed:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Suppressed:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Suppressed:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Suppressed:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Suppressed:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Suppressed:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Suppressed:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Suppressed::RUCMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Suppressed::RUCMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Unsuppressed:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Unsuppressed:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Unsuppressed:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Unsuppressed:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Unsuppressed:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Unsuppressed:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Unsuppressed:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Unsuppressed::RUCMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions/Unsuppressed::RUCMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchyLibraryModeSuppressions::.ctor()" e="Method:System.Void System.Object::.ctor()" />
</dependencies>