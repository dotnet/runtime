<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Reflection.PropertyInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeProperty(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithUnkeptMembers:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithUnkeptMembers:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Reflection.PropertyInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeProperty(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithUnkeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Reflection.PropertyInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeProperty(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithProperty()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithProperty()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Reflection.PropertyInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeProperty(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Derived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Derived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Reflection.PropertyInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeProperty(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.String Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownString()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownString()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Reflection.PropertyInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeProperty(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Reflection.PropertyInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeProperty(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Reflection.PropertyInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeProperty(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Reflection.PropertyInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeProperty(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Reflection.PropertyInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeProperty(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.String System.Type::get_AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Reflection.PropertyInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeProperty(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Property:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::set_PublicProperty(System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Property:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::get_Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeProperty()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::set_Property(System.Int64)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::set_Property(System.Int64)" e="Property:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::set_Property(System.Int64)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::set_Property(System.Int64)" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::set_Property(System.Int64)" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::set_Property(System.Int64)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::set_Property(System.Int64)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::get_Property()" e="Property:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::Property()" />
	<edge mark="1" b="Method:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::get_Property()" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::set_PublicProperty(System.Int64)" e="Property:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::set_PublicProperty(System.Int64)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::get_PublicProperty()" e="Property:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::PublicProperty()" />
	<edge mark="1" b="Method:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::get_PublicProperty()" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithProperty()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithProperty()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithProperty()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithProperty:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithProperty:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithProperty()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithProperty()" e="Property:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithProperty::Property()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithProperty()" e="Method:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithProperty::get_Property()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithProperty()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithProperty::set_Property(System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithProperty::set_Property(System.Int64)" e="Property:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithProperty::Property()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithProperty::set_Property(System.Int64)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithProperty::set_Property(System.Int64)" e="Field:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithProperty::&lt;Property&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithProperty::&lt;Property&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithProperty:test.exe" />
	<edge mark="1" b="Field:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithProperty::&lt;Property&gt;k__BackingField" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithProperty::get_Property()" e="Property:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithProperty::Property()" />
	<edge mark="1" b="Method:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithProperty::get_Property()" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithProperty::get_Property()" e="Field:System.Int64 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithProperty::&lt;Property&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Void System.Type::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Reflection.MethodInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeMethod(System.Type,System.String,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithUnkeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Reflection.MethodInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeMethod(System.Type,System.String,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithUnkeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Reflection.MethodInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeMethod(System.Type,System.String,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithMethod()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithMethod()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Reflection.MethodInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeMethod(System.Type,System.String,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Derived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Reflection.MethodInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeMethod(System.Type,System.String,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.String Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownString()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownString()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Reflection.MethodInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeMethod(System.Type,System.String,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Reflection.MethodInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeMethod(System.Type,System.String,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Reflection.MethodInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeMethod(System.Type,System.String,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Reflection.MethodInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeMethod(System.Type,System.String,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Reflection.MethodInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeMethod(System.Type,System.String,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.String System.Type::get_AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Reflection.MethodInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeMethod(System.Type,System.String,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::PublicMethod(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::Method(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::Method(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::PublicMethod(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithMethod()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithMethod()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithMethod()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithMethod:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithMethod:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithMethod::Method(System.Int32)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithMethod()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithMethod()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithMethod()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithMethod()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithMethod()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithMethod()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithMethod::Method(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Reflection.FieldInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeField(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithUnkeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Reflection.FieldInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeField(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithUnkeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Reflection.FieldInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeField(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithField()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithField()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Reflection.FieldInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeField(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Derived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Reflection.FieldInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeField(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.String Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownString()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownString()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Reflection.FieldInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeField(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Reflection.FieldInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeField(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Reflection.FieldInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeField(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Reflection.FieldInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeField(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Reflection.FieldInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeField(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.String System.Type::get_AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Method:System.Reflection.FieldInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeField(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::PublicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::PublicField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::PublicField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::Field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::Field" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::Field" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::PublicField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::PublicField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeField()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::PublicField" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithField()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithField()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithField()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithField:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithField:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithField()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithField()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithField::Field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithField::Field" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithField:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithField::Field" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Reflection.EventInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeEvent(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithUnkeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Reflection.EventInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeEvent(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithUnkeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Reflection.EventInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeEvent(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithEvent()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithEvent()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Reflection.EventInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeEvent(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Derived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Reflection.EventInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeEvent(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.String Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownString()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetUnknownString()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Reflection.EventInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeEvent(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Reflection.EventInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeEvent(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Reflection.EventInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeEvent(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Reflection.EventInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeEvent(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Reflection.EventInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeEvent(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.String System.Type::get_AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Reflection.EventInfo System.Reflection.RuntimeReflectionExtensions::GetRuntimeEvent(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::Event" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::Event" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::Event" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::TestGetRuntimeEvent()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::Event" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::Event" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/Base::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithKeptMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithEvent()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithEvent()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithEvent()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithEvent()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithEvent()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::Event" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::Event" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::Event" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls::GetClassWithEvent()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::Event" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::Event" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::Event" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::Event" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::Event" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::remove_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::Event" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::Event" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::Event" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RuntimeReflectionExtensionsCalls/ClassWithEvent::add_Event(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
</dependencies>