<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/ByName::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/ByName::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/ByName:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/ByName:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/PrivateByName::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/PrivateByName::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/PrivateByName:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/PrivateByName:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NullName::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NullName::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NullName:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NullName:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/EmptyName::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/EmptyName::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/EmptyName:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/EmptyName:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NoValueName::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NoValueName::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NoValueName:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NoValueName:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NonExistingName::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NonExistingName::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NonExistingName:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NonExistingName:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::TestNullType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::TestNullType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::TestNoValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::TestNoValue()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/FailIgnoreCaseBindingFlags::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/FailIgnoreCaseBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/FailIgnoreCaseBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/FailIgnoreCaseBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/MemberOnNestedType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/MemberOnNestedType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/MemberOnNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/MemberOnNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/MemberOnNestedType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/MemberOnNestedType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/MemberOnNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/MemberOnNestedType::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/MemberOnNestedType::Test()" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/MemberOnNestedType::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/MemberOnNestedType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/MemberOnNestedType/PublicNestedTypeWithMembers:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/MemberOnNestedType/PublicNestedTypeWithMembers:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/MemberOnNestedType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/MemberOnNestedType/PublicNestedTypeWithMembers::UsedMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/MemberOnNestedType/PublicNestedTypeWithMembers::UsedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags/MarkedDueToSuppressChangeType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags/MarkedDueToSuppressChangeType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags/SuppressChangeTypeNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags/SuppressChangeTypeNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnsupportedBindingFlags::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/FailIgnoreCaseBindingFlags::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/FailIgnoreCaseBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/FailIgnoreCaseBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/FailIgnoreCaseBindingFlags::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/FailIgnoreCaseBindingFlags::Test()" e="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags/IgnoreCasePublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags/IgnoreCasePublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags/MarkedDueToIgnoreCase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags/MarkedDueToIgnoreCase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/IgnoreCaseBindingFlags::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::TestNoValue()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::TestNoValue()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::TestNoValue()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::TestNoValue()" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::TestNullType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::TestNullType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection::TestNullType()" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NonExistingName::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NonExistingName::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NonExistingName:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NonExistingName::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NonExistingName::Test()" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName/PrivateNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName/PrivateNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName/ProtectedNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName/ProtectedNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName/PublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName/PublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName/AnotherPublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName/AnotherPublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlagsAndName::Test(System.Reflection.BindingFlags,System.String)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags/PrivateNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags/PrivateNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags/ProtectedNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags/ProtectedNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags/PublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags/PublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags/AnotherPublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags/AnotherPublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/UnknownBindingFlags::Test(System.Reflection.BindingFlags)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags::Test()" e="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags::Test()" e="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags::Test()" e="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags/PrivateNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags/PrivateNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags/PublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags/PublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags/ProtectedNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/WithBindingFlags/ProtectedNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NoValueName::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NoValueName::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NoValueName::Test()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NoValueName::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NoValueName::Test()" e="Method:System.String System.Type::get_AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NoValueName::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NoValueName:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NoValueName::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NoValueName::Test()" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/EmptyName::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/EmptyName::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/EmptyName:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/EmptyName::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/EmptyName::Test()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/EmptyName::Test()" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NullName::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NullName::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NullName:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NullName::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/NullName::Test()" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/PrivateByName::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/PrivateByName::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/PrivateByName:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/PrivateByName::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/PrivateByName::Test()" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/PrivateByName::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/PrivateByName:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/PrivateByName::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/PrivateByName::Test()" e="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/ByName::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/ByName::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/ByName:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/ByName::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/ByName::Test()" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/ByName::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/ByName/NestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.NestedTypeUsedViaReflection/ByName/NestedType:test.exe" e="Module:test.exe" />
</dependencies>