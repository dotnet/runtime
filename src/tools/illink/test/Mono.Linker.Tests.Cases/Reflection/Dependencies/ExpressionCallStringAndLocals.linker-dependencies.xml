<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::Branch_SystemTypeValueNode_KnownStringValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::Branch_SystemTypeValueNode_KnownStringValue()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::Branch_SystemTypeValueNode_KnownStringValue()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::Branch_SystemTypeValueNode_KnownStringValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::Branch_SystemTypeValueNode_KnownStringValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::Branch_SystemTypeValueNode_KnownStringValue()" e="TypeDef:System.Linq.Expressions.MethodCallExpression" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::Branch_SystemTypeValueNode_KnownStringValue()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::Branch_SystemTypeValueNode_KnownStringValue()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::Branch_SystemTypeValueNode_KnownStringValue()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::Branch_SystemTypeValueNode_KnownStringValue()" e="Method:System.Void System.Type::.cctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::Branch_SystemTypeValueNode_KnownStringValue()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::Branch_SystemTypeValueNode_KnownStringValue()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::Branch_SystemTypeValueNode_KnownStringValue()" e="Method:System.Reflection.MethodInfo System.Linq.Expressions.MethodCallExpression::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::Branch_SystemTypeValueNode_KnownStringValue()" e="Method:System.Void System.Console::WriteLine(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::Branch_SystemTypeValueNode_KnownStringValue()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::OnlyCalledViaExpression()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::OnlyCalledViaExpression()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ExpressionCallStringAndLocals::OnlyCalledViaExpression()" e="TypeDef:System.Int32" />
	<edge b="Method:T[] System.Array::Empty()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
</dependencies>