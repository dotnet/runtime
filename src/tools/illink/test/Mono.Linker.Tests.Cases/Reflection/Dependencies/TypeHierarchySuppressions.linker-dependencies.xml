<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="Field:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Unsuppressed Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::unsuppressed" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Unsuppressed Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::unsuppressed" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Unsuppressed Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::unsuppressed" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Unsuppressed:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Unsuppressed:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::RequireMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::RequireMethods(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="Field:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Suppressed Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::suppressed" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Suppressed Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::suppressed" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Suppressed Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::suppressed" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Suppressed:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Suppressed:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::RequireMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::RequireMethods(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="Field:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::annotatedAllSuppressed" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::annotatedAllSuppressed" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::annotatedAllSuppressed" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromSuppressed1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromSuppressed1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromUnsuppressed1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromUnsuppressed1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/SuppressedOnDerived1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/SuppressedOnDerived1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/SuppressedBaseWarningsOnDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/SuppressedBaseWarningsOnDerived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::UseDerivedTypes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::UseDerivedTypes()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="Field:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromSuppressed1 Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::derivedFromSuppressed" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromSuppressed1 Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::derivedFromSuppressed" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromSuppressed1 Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::derivedFromSuppressed" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromSuppressed1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Unsuppressed:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Unsuppressed:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Unsuppressed:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Unsuppressed:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Unsuppressed:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Unsuppressed:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Unsuppressed:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Unsuppressed::RUCMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Suppressed:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Suppressed:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Suppressed:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Suppressed:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Suppressed:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Suppressed:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Suppressed:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Suppressed::RUCMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed:test.exe" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed:test.exe" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed:test.exe" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed:test.exe" e="Field:System.Type Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed::DAMTField" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed::DAMTField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed::DAMTField" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed::RUCMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed::DAMTMethod(System.Type)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromSuppressed1:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromSuppressed1::RUCDerivedMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Unsuppressed:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Suppressed:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromSuppressed1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromSuppressed1::RUCDerivedMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed::DAMTMethod(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/AnnotatedAllSuppressed::RUCMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Suppressed::RUCMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/Unsuppressed::RUCMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::UseDerivedTypes()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::UseDerivedTypes()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::UseDerivedTypes()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::UseDerivedTypes()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::UseDerivedTypes()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromUnsuppressed2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromUnsuppressed2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::UseDerivedTypes()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::UseDerivedTypes()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromSuppressed2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromSuppressed2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::UseDerivedTypes()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::UseDerivedTypes()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/SuppressedOnDerived2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/SuppressedOnDerived2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::UseDerivedTypes()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/SuppressedOnDerived2:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/SuppressedOnDerived2::DerivedRUCMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/SuppressedOnDerived2::DerivedRUCMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromSuppressed2:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromSuppressed2::RUCDerivedMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromSuppressed2::RUCDerivedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromUnsuppressed2:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromUnsuppressed2::DerivedRUCMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromUnsuppressed2::DerivedRUCMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/SuppressedBaseWarningsOnDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/SuppressedBaseWarningsOnDerived::DerivedRUCMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/SuppressedBaseWarningsOnDerived::DerivedRUCMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/SuppressedOnDerived1:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/SuppressedOnDerived1::DerivedRUCMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/SuppressedOnDerived1::DerivedRUCMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromUnsuppressed1:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromUnsuppressed1::DerivedRUCMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions/DerivedFromUnsuppressed1::DerivedRUCMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::RequireAll(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeHierarchySuppressions::RequireMethods(System.Type)" e="TypeDef:System.Void" />
</dependencies>