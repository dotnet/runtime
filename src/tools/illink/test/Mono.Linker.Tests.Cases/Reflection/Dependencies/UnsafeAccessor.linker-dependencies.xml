<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::OnBase(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::OnBase(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::OnDerived(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::OnDerived(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::OnBoth(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::OnBoth(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::PublicOnBase(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::PublicOnBase(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::PublicOnBoth(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::PublicOnBoth(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::Test()" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::FieldOnBase(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::FieldOnBase(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::Test()" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::FieldOnDerived(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::FieldOnDerived(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::Test()" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::PublicFieldOnBase(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::PublicFieldOnBase(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest:test.exe" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::PublicFieldOnBase(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::FieldOnDerived(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::FieldOnDerived(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived::FieldOnDerived" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived::FieldOnDerived" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived::FieldOnDerived" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::FieldOnBase(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::PublicOnBoth(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::PublicOnBoth(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived::PublicOnBoth(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived::PublicOnBoth(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::PublicOnBase(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::OnBoth(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::OnBoth(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived::OnBoth(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived::OnBoth(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::OnDerived(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::OnDerived(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived::OnDerived()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived::OnDerived()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest::OnBase(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetDerived::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetBase:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetBase::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InheritanceTest/InheritanceTargetBase::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess::Test()" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess::Field(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess::Field(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess::Test()" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess::StaticFieldAsInstanceField(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess::StaticFieldAsInstanceField(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::Test()" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::Field(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target&amp;)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::Field(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::Test()" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::FieldWithoutRefOnThis(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::FieldWithoutRefOnThis(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::Test()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::FieldWithoutRefOnReturn(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target&amp;)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::FieldWithoutRefOnReturn(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType:test.exe" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::FieldWithoutRefOnReturn(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target&amp;)" e="TypeSpec:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target&amp;:test.exe" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::FieldWithoutRefOnReturn(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target&amp;)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::FieldWithoutRefOnThis(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::Field(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target&amp;)" e="TypeSpec:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target&amp;:test.exe" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::Field(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType::Field(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target&amp;)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target::Field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target::Field" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/FieldOnValueType/Target::Field" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess::StaticFieldAsInstanceField(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess::Field(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess::Field(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget::Field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget::Field" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget::Field" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceFieldAccess/InstanceFieldTarget::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Test()" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Field(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Field(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Test()" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldWithParameters(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget,System.Int32)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldWithParameters(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Test()" e="Method:System.String&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldWithDifferentType(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" />
	<edge mark="1" b="Method:System.String&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldWithDifferentType(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldWithVoidType(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldWithVoidType(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Test()" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldByName(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldByName(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Test()" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::NonExistentField(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::NonExistentField(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Test()" e="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldWithoutRef(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldWithoutRef(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Test()" e="Method:System.String&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldWithRef(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" />
	<edge mark="1" b="Method:System.String&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldWithRef(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Test()" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::InstanceFieldAsStaticField(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::InstanceFieldAsStaticField(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::Test()" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::Field(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target&amp;)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::Field(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::Test()" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::FieldWithoutRefOnThis(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::FieldWithoutRefOnThis(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::Test()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::FieldWithoutRefOnReturn(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target&amp;)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::FieldWithoutRefOnReturn(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType:test.exe" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::FieldWithoutRefOnReturn(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target&amp;)" e="TypeSpec:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target&amp;:test.exe" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::FieldWithoutRefOnReturn(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target&amp;)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::FieldWithoutRefOnThis(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::FieldWithoutRefOnThis(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target::FieldWithoutRefOnThis" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target::FieldWithoutRefOnThis" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target::FieldWithoutRefOnThis" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::Field(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target&amp;)" e="TypeSpec:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target&amp;:test.exe" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::Field(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType::Field(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target&amp;)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target::Field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target::Field" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/FieldOnValueType/Target::Field" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::InstanceFieldAsStaticField(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.String&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldWithRef(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="TypeSpec:System.String&amp;" />
	<edge mark="1" b="Method:System.String&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldWithRef(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="Field:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget::FieldWithRef" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget::FieldWithRef" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget::FieldWithRef" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldWithoutRef(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="TypeDef:System.String" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::NonExistentField(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldByName(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldByName(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget::FieldByName" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget::FieldByName" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget::FieldByName" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldWithVoidType(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="TypeDef:System.Void" />
	<edge b="Method:System.String&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldWithDifferentType(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="TypeSpec:System.String&amp;" />
	<edge mark="1" b="Method:System.String&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldWithDifferentType(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget::FieldWithDifferentType" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget::FieldWithDifferentType" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget::FieldWithDifferentType" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::FieldWithParameters(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget,System.Int32)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Field(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess::Field(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget::Field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget::Field" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticFieldAccess/StaticFieldTarget::Field" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType/MethodOnValueTypeTarget:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType/MethodOnValueTypeTarget:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType/MethodOnValueTypeTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType::InvokeMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType/MethodOnValueTypeTarget&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType::InvokeMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType/MethodOnValueTypeTarget&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType::InvokeMethodWithoutRef(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType/MethodOnValueTypeTarget)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType::InvokeMethodWithoutRef(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType/MethodOnValueTypeTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType::InvokeMethodWithoutRef(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType/MethodOnValueTypeTarget)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType::InvokeMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType/MethodOnValueTypeTarget&amp;)" e="TypeSpec:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType/MethodOnValueTypeTarget&amp;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType::InvokeMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType/MethodOnValueTypeTarget&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType::InvokeMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType/MethodOnValueTypeTarget&amp;)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType/MethodOnValueTypeTarget::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodOnValueType/MethodOnValueTypeTarget::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest::Test()" e="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest::CallPrivateMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest/CustomModifiersTestTarget,method System.Void modopt(System.Runtime.CompilerServices.CallConvMemberFunction) modopt(System.Runtime.CompilerServices.CallConvStdcall) *())" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest::CallPrivateMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest/CustomModifiersTestTarget,method System.Void modopt(System.Runtime.CompilerServices.CallConvMemberFunction) modopt(System.Runtime.CompilerServices.CallConvStdcall) *())" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest/CustomModifiersTestTarget:test.exe" e="Module:test.exe" />
	<edge b="TypeSpec:method System.Void modopt(System.Runtime.CompilerServices.CallConvMemberFunction) modopt(System.Runtime.CompilerServices.CallConvStdcall) *():test.exe" e="TypeSpec:System.Void modopt(System.Runtime.CompilerServices.CallConvMemberFunction) modopt(System.Runtime.CompilerServices.CallConvStdcall)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest::CallPrivateMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest/CustomModifiersTestTarget,method System.Void modopt(System.Runtime.CompilerServices.CallConvMemberFunction) modopt(System.Runtime.CompilerServices.CallConvStdcall) *())" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest::CallPrivateMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest/CustomModifiersTestTarget,method System.Void modopt(System.Runtime.CompilerServices.CallConvMemberFunction) modopt(System.Runtime.CompilerServices.CallConvStdcall) *())" e="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest/CustomModifiersTestTarget::_Ambiguous(method System.Void modopt(System.Runtime.CompilerServices.CallConvMemberFunction) modopt(System.Runtime.CompilerServices.CallConvCdecl) *())" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest::CallPrivateMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest/CustomModifiersTestTarget,method System.Void modopt(System.Runtime.CompilerServices.CallConvMemberFunction) modopt(System.Runtime.CompilerServices.CallConvStdcall) *())" e="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest/CustomModifiersTestTarget::_Ambiguous(method System.Void modopt(System.Runtime.CompilerServices.CallConvMemberFunction) modopt(System.Runtime.CompilerServices.CallConvStdcall) *())" />
	<edge b="TypeSpec:method System.Void modopt(System.Runtime.CompilerServices.CallConvMemberFunction) modopt(System.Runtime.CompilerServices.CallConvStdcall) *():test.exe" e="TypeSpec:System.Void modopt(System.Runtime.CompilerServices.CallConvMemberFunction) modopt(System.Runtime.CompilerServices.CallConvStdcall)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest/CustomModifiersTestTarget::_Ambiguous(method System.Void modopt(System.Runtime.CompilerServices.CallConvMemberFunction) modopt(System.Runtime.CompilerServices.CallConvStdcall) *())" e="TypeDef:System.String" />
	<edge b="TypeSpec:method System.Void modopt(System.Runtime.CompilerServices.CallConvMemberFunction) modopt(System.Runtime.CompilerServices.CallConvCdecl) *():test.exe" e="TypeSpec:System.Void modopt(System.Runtime.CompilerServices.CallConvMemberFunction) modopt(System.Runtime.CompilerServices.CallConvCdecl)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/CustomModifiersTest/CustomModifiersTestTarget::_Ambiguous(method System.Void modopt(System.Runtime.CompilerServices.CallConvMemberFunction) modopt(System.Runtime.CompilerServices.CallConvCdecl) *())" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::Test()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithGenericAndSpecificOverload(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithGenericAndSpecificOverload(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithImperfectMatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithImperfectMatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::Test()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::Test()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::Test()" e="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MoreParameters(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MoreParameters(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::Test()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::Test()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MoreParametersWithReturnValueMismatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MoreParametersWithReturnValueMismatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter:test.exe" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MoreParametersWithReturnValueMismatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="TypeSpec:System.String&amp;" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MoreParametersWithReturnValueMismatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="TypeSpec:System.String&amp;" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MoreParametersWithReturnValueMismatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MoreParametersWithReturnValueMismatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParametersWithReturnValueMismatch(System.String,System.String&amp;,System.String&amp;)" />
	<edge b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParametersWithReturnValueMismatch(System.String,System.String&amp;,System.String&amp;)" e="TypeSpec:System.String&amp;" />
	<edge b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParametersWithReturnValueMismatch(System.String,System.String&amp;,System.String&amp;)" e="TypeSpec:System.String&amp;" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParametersWithReturnValueMismatch(System.String,System.String&amp;,System.String&amp;)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParametersWithReturnValueMismatch(System.String,System.String&amp;,System.String&amp;)" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParametersWithReturnValueMismatch(System.String,System.String&amp;,System.String&amp;)" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParametersWithReturnValueMismatch(System.String,System.String&amp;,System.String&amp;)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParametersWithReturnValueMismatch(System.String,System.String&amp;,System.String&amp;)" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MoreParameters(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="TypeSpec:System.String&amp;" />
	<edge b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MoreParameters(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="TypeSpec:System.String&amp;" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MoreParameters(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MoreParameters(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParameters(System.String,System.String&amp;,System.String&amp;)" />
	<edge b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParameters(System.String,System.String&amp;,System.String&amp;)" e="TypeSpec:System.String&amp;" />
	<edge b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParameters(System.String,System.String&amp;,System.String&amp;)" e="TypeSpec:System.String&amp;" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParameters(System.String,System.String&amp;,System.String&amp;)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithImperfectMatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithImperfectMatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithImperfectMatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/SuperBase)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithImperfectMatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithImperfectMatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Derived)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/SuperBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Derived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithImperfectMatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Derived)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithImperfectMatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/SuperBase)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/SuperBase)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Derived)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Derived)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/SuperBase)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithGenericAndSpecificOverload(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithGenericAndSpecificOverload(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithGenericAndSpecificOverload(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithGenericAndSpecificOverload(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithGenericAndSpecificOverload(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithGenericAndSpecificOverload(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithGenericAndSpecificOverload(System.Object)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithOverloads()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter::MethodWithOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithOverloads(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithOverloads(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithOverloads()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithParameter/MethodWithParameterTarget::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::TargetMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::TargetMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::SpecifyNameParameter(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::SpecifyNameParameter(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::StaticTarget(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::StaticTarget(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::DifferentName(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::DifferentName(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::DifferentName(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::StaticTarget(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::SpecifyNameParameter(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::SpecifyNameParameter(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget::SecondTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget::SecondTarget()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::TargetMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters::TargetMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget::TargetMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget::TargetMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/InstanceMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType/MethodOnValueTypeTarget:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType/MethodOnValueTypeTarget:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType/MethodOnValueTypeTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType::InvokeMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType/MethodOnValueTypeTarget&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType::InvokeMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType/MethodOnValueTypeTarget&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType::InvokeMethodWithoutRef(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType/MethodOnValueTypeTarget)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType::InvokeMethodWithoutRef(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType/MethodOnValueTypeTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType::InvokeMethodWithoutRef(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType/MethodOnValueTypeTarget)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType::InvokeMethodWithoutRef(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType/MethodOnValueTypeTarget)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType/MethodOnValueTypeTarget::MethodCalledWithoutRef()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType/MethodOnValueTypeTarget::MethodCalledWithoutRef()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType::InvokeMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType/MethodOnValueTypeTarget&amp;)" e="TypeSpec:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType/MethodOnValueTypeTarget&amp;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType::InvokeMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType/MethodOnValueTypeTarget&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType::InvokeMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType/MethodOnValueTypeTarget&amp;)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType/MethodOnValueTypeTarget::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodOnValueType/MethodOnValueTypeTarget::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::Test()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithGenericAndSpecificOverload(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithGenericAndSpecificOverload(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithImperfectMatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithImperfectMatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::Test()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::Test()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::Test()" e="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MoreParameters(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MoreParameters(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::Test()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::Test()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MoreParametersWithReturnValueMismatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MoreParametersWithReturnValueMismatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MoreParametersWithReturnValueMismatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="TypeSpec:System.String&amp;" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MoreParametersWithReturnValueMismatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="TypeSpec:System.String&amp;" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MoreParametersWithReturnValueMismatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MoreParametersWithReturnValueMismatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParametersWithReturnValueMismatch(System.String,System.String&amp;,System.String&amp;)" />
	<edge b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParametersWithReturnValueMismatch(System.String,System.String&amp;,System.String&amp;)" e="TypeSpec:System.String&amp;" />
	<edge b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParametersWithReturnValueMismatch(System.String,System.String&amp;,System.String&amp;)" e="TypeSpec:System.String&amp;" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParametersWithReturnValueMismatch(System.String,System.String&amp;,System.String&amp;)" e="TypeDef:System.String" />
	<edge b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MoreParameters(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="TypeSpec:System.String&amp;" />
	<edge b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MoreParameters(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="TypeSpec:System.String&amp;" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MoreParameters(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MoreParameters(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String,System.String&amp;,System.String&amp;)" e="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParameters(System.String,System.String&amp;,System.String&amp;)" />
	<edge b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParameters(System.String,System.String&amp;,System.String&amp;)" e="TypeSpec:System.String&amp;" />
	<edge b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParameters(System.String,System.String&amp;,System.String&amp;)" e="TypeSpec:System.String&amp;" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MoreParameters(System.String,System.String&amp;,System.String&amp;)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithImperfectMatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithImperfectMatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithImperfectMatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/SuperBase)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithImperfectMatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithImperfectMatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Derived)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithImperfectMatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Derived)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithImperfectMatch(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/SuperBase)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/SuperBase)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Derived)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Derived)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/Base)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithThreeInheritanceOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/SuperBase)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithGenericAndSpecificOverload(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithGenericAndSpecificOverload(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithGenericAndSpecificOverload(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithGenericAndSpecificOverload(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.String)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithGenericAndSpecificOverload(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithGenericAndSpecificOverload(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithGenericAndSpecificOverload(System.Object)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithOverloads()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter::MethodWithOverloads(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget,System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithOverloads(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithOverloads(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithParameter/MethodWithParameterTarget::MethodWithOverloads()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::TargetMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::TargetMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::SpecifyNameParameter(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::SpecifyNameParameter(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::InstanceTarget(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::InstanceTarget(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::DifferentName(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::DifferentName(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::DifferentName(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::InstanceTarget(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::SpecifyNameParameter(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::SpecifyNameParameter(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget::SecondTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget::SecondTarget()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::TargetMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters::TargetMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget::TargetMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/StaticMethodAccess/MethodWithoutParameters/MethodWithoutParametersTarget::TargetMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorAsMethodOnValueWithoutRefTarget:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorAsMethodOnValueWithoutRefTarget:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::InvokeDefaultConstructor()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::InvokeDefaultConstructor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="Method:System.Object System.Runtime.CompilerServices.RuntimeHelpers::GetUninitializedObject(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::InvokeConstructorAsMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget&amp;,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::InvokeConstructorAsMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget&amp;,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorAsMethodOnValueWithoutRefTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="Method:System.Object System.Runtime.CompilerServices.RuntimeHelpers::GetUninitializedObject(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorAsMethodOnValueWithoutRefTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::InvokeConstructorAsMethodWithoutRef(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorAsMethodOnValueWithoutRefTarget,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::InvokeConstructorAsMethodWithoutRef(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorAsMethodOnValueWithoutRefTarget,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget::.ctor(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorAsMethodOnValueWithoutRefTarget::.ctor(System.Int32)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorAsMethodOnValueWithoutRefTarget::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorAsMethodOnValueWithoutRefTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorAsMethodOnValueWithoutRefTarget::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::InvokeConstructorAsMethodWithoutRef(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorAsMethodOnValueWithoutRefTarget,System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::InvokeConstructorAsMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget&amp;,System.Int32)" e="TypeSpec:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget&amp;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::InvokeConstructorAsMethod(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget&amp;,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::InvokeDefaultConstructor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::InvokeDefaultConstructor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget::.ctor()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType::InvokeDefaultConstructor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorOnValueType/ConstructorOnValueTypeTarget::.ctor(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeConstructorWithParameter(System.Int32)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeConstructorWithParameter(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeWithEmptyName(System.String)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeWithEmptyName(System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeOnInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeOnInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeNonExistent(System.Double)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeNonExistent(System.Double)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeWithoutReturnType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeWithoutReturnType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeWithoutReturnType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeNonExistent(System.Double)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeNonExistent(System.Double)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget::.ctor()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeNonExistent(System.Double)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget::.ctor(System.Int32)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeNonExistent(System.Double)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget::.ctor(System.String)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget::.ctor(System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget::.ctor(System.String)" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget::.ctor(System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeOnInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeWithEmptyName(System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeWithEmptyName(System.String)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget::.ctor()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeWithEmptyName(System.String)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget::.ctor(System.Int32)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeWithEmptyName(System.String)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget::.ctor(System.String)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeConstructorWithParameter(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeConstructorWithParameter(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget::.ctor()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeConstructorWithParameter(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget::.ctor(System.Int32)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter::InvokeConstructorWithParameter(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/ConstructorWithParameter/ConstructorWithParameterTarget::.ctor(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor::InvokeDefaultConstructor()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor::InvokeDefaultConstructor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor::InvokeWithName(System.Int32)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor::InvokeWithName(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::Test()" e="Method:System.Object System.Runtime.CompilerServices.RuntimeHelpers::GetUninitializedObject(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::CallPrivateConstructor(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::CallPrivateConstructor(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::CallPrivateConstructor(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::CallPrivateConstructor(Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/AccessCtorAsMethod::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction::&lt;Test&gt;g__InvokeDefaultConstructorLocal|1_0()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction::&lt;Test&gt;g__InvokeDefaultConstructorLocal|1_0()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction::&lt;Test&gt;g__InvokeDefaultConstructorLocal|1_0()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction::&lt;Test&gt;g__InvokeDefaultConstructorLocal|1_0()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/UseLocalFunction::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor::InvokeWithName(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor::InvokeDefaultConstructor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor::InvokeDefaultConstructor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget::.ctor()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor::InvokeDefaultConstructor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget::.ctor(System.Int32)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget::.ctor(System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.UnsafeAccessor/ConstructorAccess/DefaultConstructor/DefaultConstructorTarget::.ctor()" e="Method:System.Void System.Object::.ctor()" />
</dependencies>