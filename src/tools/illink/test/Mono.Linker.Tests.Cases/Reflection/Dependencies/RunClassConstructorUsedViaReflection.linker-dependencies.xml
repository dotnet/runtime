<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestRunClassConstructor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestRunClassConstructor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNonKeptStaticConstructor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNonKeptStaticConstructor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNull()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNull()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNoValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNoValue()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestDataFlowType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestDataFlowType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingRuntimeTypeHandle(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingRuntimeTypeHandle(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingType(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingType(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingType(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingType(System.Int32)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingType(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingType(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingType(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/IfClass2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/IfClass2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingType(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingType(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/ElseClass2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/ElseClass2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingType(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingType(System.Int32)" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingType(System.Int32)" e="Method:System.Void System.Runtime.CompilerServices.RuntimeHelpers::RunClassConstructor(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingType(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/ElseClass2::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/ElseClass2::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingRuntimeTypeHandle(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingRuntimeTypeHandle(System.Int32)" e="TypeDef:System.RuntimeTypeHandle" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingRuntimeTypeHandle(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingRuntimeTypeHandle(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingRuntimeTypeHandle(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/IfClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/IfClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingRuntimeTypeHandle(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingRuntimeTypeHandle(System.Int32)" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingRuntimeTypeHandle(System.Int32)" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::FindType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::FindType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingRuntimeTypeHandle(System.Int32)" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingRuntimeTypeHandle(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/ElseClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/ElseClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingRuntimeTypeHandle(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingRuntimeTypeHandle(System.Int32)" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingRuntimeTypeHandle(System.Int32)" e="Method:System.Void System.Runtime.CompilerServices.RuntimeHelpers::RunClassConstructor(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestIfElseUsingRuntimeTypeHandle(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/ElseClass::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/ElseClass::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::FindType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::FindType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestDataFlowType()" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::FindType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::FindType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestDataFlowType()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestDataFlowType()" e="Method:System.Void System.Runtime.CompilerServices.RuntimeHelpers::RunClassConstructor(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNoValue()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNoValue()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNoValue()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNoValue()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNoValue()" e="Method:System.Void System.Runtime.CompilerServices.RuntimeHelpers::RunClassConstructor(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNull()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNull()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNull()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNull()" e="Method:System.Void System.Runtime.CompilerServices.RuntimeHelpers::RunClassConstructor(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNonKeptStaticConstructor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNonKeptStaticConstructor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/NonKeptStaticConstructorClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/NonKeptStaticConstructorClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestNonKeptStaticConstructor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/NonKeptStaticConstructorClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/NonKeptStaticConstructorClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/NonKeptStaticConstructorClass:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/NonKeptStaticConstructorClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/NonKeptStaticConstructorClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/NonKeptStaticConstructorClass::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/NonKeptStaticConstructorClass::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestRunClassConstructor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestRunClassConstructor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/OnlyUsedViaReflection:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/OnlyUsedViaReflection:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestRunClassConstructor()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestRunClassConstructor()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestRunClassConstructor()" e="Method:System.Void System.Runtime.CompilerServices.RuntimeHelpers::RunClassConstructor(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection::TestRunClassConstructor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/OnlyUsedViaReflection::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/OnlyUsedViaReflection::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/OnlyUsedViaReflection::.cctor()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/OnlyUsedViaReflection::i" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/OnlyUsedViaReflection::i" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/OnlyUsedViaReflection:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.RunClassConstructorUsedViaReflection/OnlyUsedViaReflection::i" e="TypeDef:System.Int32" />
</dependencies>