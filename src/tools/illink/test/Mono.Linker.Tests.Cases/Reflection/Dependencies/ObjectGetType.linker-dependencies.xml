<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations::Test(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations::Test(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations::Test(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations::Test(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns::Test(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns::Test(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns::Test(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns::Test(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns::Test(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns::Test(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NullValue::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NullValue::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NullValue:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NullValue:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NoValue::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NoValue::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NoValue:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NoValue:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/IBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/IBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation::Test()" e="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation::implementationInstance" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation::implementationInstance" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation::implementationInstance" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation::Test()" e="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation::implementationInstance" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation::Test()" e="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation::implementationInstance" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation:test.exe" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation:test.exe" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation:test.exe" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/IBase::Method()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/IBase::Method()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedImplementation/Implementation::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/IBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/IBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface::Test()" e="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface::implementationInstance" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface::implementationInstance" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface::implementationInstance" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface::Test()" e="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface::implementationInstance" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface::Test()" e="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface::implementationInstance" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation:test.exe" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation:test.exe" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation:test.exe" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/IBase::Method()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/IBase::Method()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedInterface/Implementation::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived::Test()" e="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived/Derived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived::derivedInstance" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived/Derived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived::derivedInstance" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived/Derived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived::derivedInstance" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived/Derived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived/Derived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived/Base::Method()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived/Derived:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived/Derived:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived/Derived:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived/Derived:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived/Derived:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived/Derived:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived/Derived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived/Base:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedDerived/Base::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase::Test()" e="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase/Derived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase::derivedInstance" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase/Derived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase::derivedInstance" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase/Derived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase::derivedInstance" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase/Derived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase/Derived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase/Base::Method()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase/Derived:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase/Derived:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase/Derived:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase/Derived:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase/Derived:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase/Derived:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase/Derived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase/Base:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UsedByDerived/AnnotatedBase/Base::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf/Target:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf/Target:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf/Target::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf/Target::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf/Target:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf::TestIsInstOf(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf::TestIsInstOf(System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf::TestIsInstOf(System.Object)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf::TestIsInstOf(System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf/Target:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf::TestIsInstOf(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf::TestIsInstOf(System.Object)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf::TestIsInstOf(System.Object)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicParameterlessConstructor(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf::TestIsInstOf(System.Object)" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf/Target::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf/Target:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf/Target::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/IsInstOf/Target::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived::Test()" e="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived::_instance" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived::_instance" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived::_instance" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived::Test()" e="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived::_instance" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived::Test()" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicMethods(System.Type)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Base::BasePrivateMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived:test.exe" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived:test.exe" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived::DerivedPrivateMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived::DerivedPrivateMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Base:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Base::BasePrivateMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/SuperBase:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Derived::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Base::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Base::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Base:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Base::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Base:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Base::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/Base::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/SuperBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/SuperBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/SuperBase:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/SuperBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/SuperBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/SuperBase::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/PrivateMembersOnBaseTypesAppliedToDerived/SuperBase::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue/TestType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue/TestType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue/TestType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue::GetInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue/TestType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue/TestType:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue/TestType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue/TestType:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue/TestType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue::GetInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue/TestType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue/TestType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue/TestType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue/TestType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnknownValue/TestType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NoValue::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NoValue::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NoValue::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NoValue::Test()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NoValue::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NoValue::Test()" e="Method:System.Type System.Type::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NoValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NullValue::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NullValue::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NullValue/TestType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NullValue/TestType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NullValue::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/NullValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::Test()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::Test()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::GetInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::Test()" e="Method:System.String System.Reflection.MemberInfo::get_Name()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::GetBaseInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::GetBaseInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::Test()" e="Method:System.Void System.Console::WriteLine(System.String)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::GetBaseInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::GetBaseInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedBase:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedBase::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedBase::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType::GetInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DataFlowUnusedGetType/AnnotatedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase&gt;" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances::Test()" e="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances::Test()" e="Method:System.Collections.Generic.IEnumerable`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase&gt; Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances::GetInstances()" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerable`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase&gt; Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances::GetInstances()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances::Test()" e="MemberRef:System.Collections.Generic.IEnumerator`1&lt;!0&gt; System.Collections.Generic.IEnumerable`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase&gt;::GetEnumerator()" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase&gt;" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances::Test()" e="MemberRef:!0 System.Collections.Generic.IEnumerator`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase&gt;::get_Current()" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase&gt;" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances::Test()" e="Method:System.Boolean System.Collections.IEnumerator::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances::Test()" e="Method:System.Void System.IDisposable::Dispose()" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase&gt;" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase:test.exe" />
	<edge b="Method:System.Collections.Generic.IEnumerable`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase&gt; Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances::GetInstances()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase&gt;" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerable`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase&gt; Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances::GetInstances()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase:test.exe" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerable`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase&gt; Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances::GetInstances()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/Derived::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/Derived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/Derived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/Derived:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/Derived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/Derived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/Derived::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/Derived::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/EnumerationOverInstances/AnnotatedBase::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType::GetInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/DerivedWithInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/DerivedWithInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase:test.exe" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase:test.exe" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase:test.exe" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/DerivedWithInterface:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/InterfaceImplementedByDerived::Method()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/DerivedWithInterface:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/InterfaceImplementedByDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/InterfaceImplementedByDerived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/DerivedWithInterface:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/DerivedWithInterface::Method()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/DerivedWithInterface:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/DerivedWithInterface::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/DerivedWithInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/DerivedWithInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/DerivedWithInterface::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/DerivedWithInterface::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/DerivedWithInterface::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/InterfaceImplementedByDerived::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType::GetInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/Nested:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/Nested:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/INestedInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/INestedInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/INestedInterface::InterfaceMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/Nested::InterfaceMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/Nested::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/NestedAnnotatedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/NestedAnnotatedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/NestedAnnotatedType::_field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/NestedAnnotatedType::_field" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/NestedAnnotatedType:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/NestedAnnotatedType::_field" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/NestedAnnotatedType::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived::_field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived::_field" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived::_field" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived::Method()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived::get_PublicProperty()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Property:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived::PublicProperty()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived:test.exe" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived::get_PublicProperty()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived::get_PublicProperty()" e="Property:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived::PublicProperty()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived::get_PublicProperty()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType:test.exe" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType::_field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType::_field" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType::_field" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnotherAnnotatedType::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived::Method()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/NestedAnnotatedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/NestedAnnotatedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/NestedAnnotatedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/NestedAnnotatedType::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/AnnotatedBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/NestedAnnotatedType:test.exe" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/NestedAnnotatedType::_field" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/NestedAnnotatedType:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/NestedAnnotatedType::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/Nested::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/Nested:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/Nested::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/Nested::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/Derived/Nested::InterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToEntireType/INestedInterface::InterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::GetMethodsInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::GetMethodsInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::Test()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/PropertiesAnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::GetPropertiesInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/PropertiesAnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::GetPropertiesInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::Test()" e="Method:System.Reflection.PropertyInfo[] System.Type::GetProperties()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/PropertiesAnnotatedBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/PropertiesAnnotatedBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/PropertiesAnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::GetPropertiesInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/PropertiesAnnotatedBase:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/PropertiesAnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::GetPropertiesInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/PropertiesAnnotatedBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/PropertiesAnnotatedBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/PropertiesAnnotatedBase:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/PropertiesAnnotatedBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/PropertiesAnnotatedBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/PropertiesAnnotatedBase::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/PropertiesAnnotatedBase::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::GetMethodsInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations::GetMethodsInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromMethodsBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromMethodsBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromMethodsBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromMethodsBase:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromMethodsBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromMethodsBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromMethodsBase::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromMethodsBase::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/MethodAnnotatedBase::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromMethodsBase:test.exe" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherMethodsDerived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromMethodsBase::PublicMethod()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherMethodsDerived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromMethodsBase::PublicMethod()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherMethodsDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherMethodsDerived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherMethodsDerived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromMethodsBase::PublicMethod()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherMethodsDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherMethodsDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherMethodsDerived::PublicStaticMethod(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromPropertiesBase)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromPropertiesBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherMethodsDerived::PublicStaticMethod(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromPropertiesBase)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromPropertiesBase:test.exe" e="Property:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherPropertiesDerived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromPropertiesBase::PublicProperty()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromPropertiesBase:test.exe" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherPropertiesDerived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromPropertiesBase::get_PublicProperty()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherPropertiesDerived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromPropertiesBase::get_PublicProperty()" e="Property:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherPropertiesDerived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromPropertiesBase::PublicProperty()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherPropertiesDerived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/DerivedFromPropertiesBase::get_PublicProperty()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherPropertiesDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherPropertiesDerived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherPropertiesDerived:test.exe" e="Property:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/UsedType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherPropertiesDerived::PublicProperty()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherPropertiesDerived:test.exe" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/UsedType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherPropertiesDerived::get_PublicProperty()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/UsedType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherPropertiesDerived::get_PublicProperty()" e="Property:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/UsedType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherPropertiesDerived::PublicProperty()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/UsedType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/AnotherPropertiesDerived::get_PublicProperty()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/UsedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToMultipleAnnotations/UsedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/IAnnotatedInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces::GetInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/IAnnotatedInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces::Test()" e="Method:System.Reflection.FieldInfo[] System.Type::GetFields()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/IAnnotatedInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/IAnnotatedInterface:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/IAnnotatedInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/IAnnotatedInterface:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/IAnnotatedInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces::GetInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/ImplementsInterface::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/ImplementsInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/ImplementsInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/ImplementsInterface:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/ImplementsInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/ImplementsInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/ImplementsInterface::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/ImplementsInterface::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/ImplementsInterface:test.exe" e="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/ImplementsInterface::_publicFieldWithInterface" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/ImplementsInterface::_publicFieldWithInterface" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/ImplementsInterface:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/ImplementsInterface::_publicFieldWithInterface" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface:test.exe" e="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface::_selfReference" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface::_selfReference" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface::_selfReference" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface:test.exe" e="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface/NestedFieldType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface::_nestedField" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface/NestedFieldType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface::_nestedField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface/NestedFieldType Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface::_nestedField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface/NestedFieldType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationToViaInterfaces/FieldTypeAlsoImplementsInterface/NestedFieldType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/IUnannotatedInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/IUnannotatedInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo::GetInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo::Test()" e="Method:System.Type[] System.Type::GetNestedTypes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo::GetInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedChild:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedChild:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedChild::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedPrivateChild:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedPrivateChild:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedPrivateChild::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/NestedChild:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/NestedChild:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/IUnannotatedInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/NestedChild::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/NestedChild::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/NestedChild:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/NestedChild::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/NestedChild::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedPrivateChild::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedPrivateChild:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedPrivateChild::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedPrivateChild::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedChild::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedChild:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedChild::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedChild::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedChild:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedChild::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedPrivateChild:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedPrivateChild::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/NestedChild:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/NestedChild::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/AnnotatedBase::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/NestedChild:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/NestedChild::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedChild:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived:test.exe" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived:test.exe" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived:test.exe" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ApplyingAnnotationIntroducesTypesToApplyAnnotationTo/Derived/NestedDerived/DeepNestedDerived/DeepNestedChild::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/IAnnotatedCommon Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface::GetInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/IAnnotatedCommon Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/IAnnotatedCommon:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/IAnnotatedCommon::InterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/IAnnotatedCommon:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/IAnnotatedCommon:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/IAnnotatedCommon::InterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/IAnnotatedCommon Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/IAnnotatedCommon:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/IAnnotatedCommon Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface::GetInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/MostDerived::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/MostDerived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/MostDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/MostDerived:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/MostDerived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/MostDerived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/MostDerived::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/MostDerived::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/DerivedAndImplementsSameInterface::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/DerivedAndImplementsSameInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/DerivedAndImplementsSameInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/DerivedAndImplementsSameInterface:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/DerivedAndImplementsSameInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/DerivedAndImplementsSameInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/DerivedAndImplementsSameInterface::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/DerivedAndImplementsSameInterface::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/ImplementsCommonInterface::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/ImplementsCommonInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/ImplementsCommonInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/ImplementsCommonInterface:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/ImplementsCommonInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/ImplementsCommonInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/ImplementsCommonInterface::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/ImplementsCommonInterface::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/ImplementsCommonInterface:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/ImplementsCommonInterface:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/ImplementsCommonInterface:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/ImplementsCommonInterface:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/ImplementsCommonInterface:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/ImplementsCommonInterface:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/ImplementsCommonInterface:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/ImplementsCommonInterface::InterfaceMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/MostDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/MostDerived::InterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/ImplementsCommonInterface::InterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/MostDerived::InterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/ImplementsCommonInterface::InterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/MostDerived::InterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/MostDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/MostDerived::InterfaceMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/MostDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithAnnotatedInterface/MostDerived::InterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/ICommon:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/ICommon:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface::GetInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/ImplementsCommonInterface::InterfaceMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/ImplementsCommonInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/ImplementsCommonInterface::InterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface::GetInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/MostDerived::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/MostDerived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/MostDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/MostDerived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/MostDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/MostDerived::InterfaceMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/MostDerived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/MostDerived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/MostDerived::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/MostDerived::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/DerivedAndImplementsSameInterface::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/ImplementsCommonInterface::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/ImplementsCommonInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/ImplementsCommonInterface:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/ImplementsCommonInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/ImplementsCommonInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/ImplementsCommonInterface::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/ImplementsCommonInterface::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/MostDerived::InterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/ImplementsCommonInterface::InterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/MostDerived::InterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/MostDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/MostDerived::InterfaceMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/MostDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DiamondShapeWithUnannotatedInterface/MostDerived::InterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/SealedDerived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation::GetInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/SealedDerived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/SealedDerived::PrivateMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/SealedDerived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/SealedDerived::PrivateMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/AnnotatedBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/SealedDerived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/SealedDerived:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/SealedDerived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation::GetInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/SealedDerived::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/SealedDerived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/SealedDerived:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/SealedDerived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/SealedDerived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/SealedDerived::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/SealedDerived::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/AnnotatedBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/AnnotatedBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/AnnotatedBase:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/AnnotatedBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/AnnotatedBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/AnnotatedBase::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedWithAnnotation/AnnotatedBase::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithPrivateMethods:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithPrivateMethods:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithPrivateMethods::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithPrivateMethods::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithPrivateMethods:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IMethodsAnnotatedInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::GetMethodsInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IMethodsAnnotatedInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::GetMethodsInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::GetEventsInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::GetEventsInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::Test()" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IMethodsAnnotatedInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IMethodsAnnotatedInterface:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IMethodsAnnotatedInterface::InterfaceMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface:test.exe" e="Event:System.EventHandler Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface::MyEvent" />
	<edge mark="1" b="Event:System.EventHandler Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface::MyEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface::add_MyEvent(System.EventHandler)" />
	<edge mark="1" b="Event:System.EventHandler Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface::MyEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface::remove_MyEvent(System.EventHandler)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface::add_MyEvent(System.EventHandler)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IMethodsAnnotatedInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface::remove_MyEvent(System.EventHandler)" e="Event:System.EventHandler Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface::MyEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface::remove_MyEvent(System.EventHandler)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface::add_MyEvent(System.EventHandler)" e="Event:System.EventHandler Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface::MyEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface::add_MyEvent(System.EventHandler)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IMethodsAnnotatedInterface::InterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::GetEventsInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IEventsAnnotatedInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::GetEventsInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::get_Property()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::get_AnotherProperty()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::add_MyEvent(System.EventHandler)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::remove_MyEvent(System.EventHandler)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::InterfaceMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::AnotherMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Property:System.Boolean Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::Property()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::get_Property()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::AnotherProperty()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::get_AnotherProperty()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Event:System.EventHandler Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::MyEvent" />
	<edge mark="1" b="Event:System.EventHandler Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::MyEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::add_MyEvent(System.EventHandler)" />
	<edge mark="1" b="Event:System.EventHandler Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::MyEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::remove_MyEvent(System.EventHandler)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::add_MyEvent(System.EventHandler)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::AnotherMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::InterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::remove_MyEvent(System.EventHandler)" e="Event:System.EventHandler Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::MyEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::remove_MyEvent(System.EventHandler)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::remove_MyEvent(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::remove_MyEvent(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::remove_MyEvent(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::remove_MyEvent(System.EventHandler)" e="Field:System.EventHandler Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::MyEvent" />
	<edge mark="1" b="Field:System.EventHandler Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::MyEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" />
	<edge mark="1" b="Field:System.EventHandler Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::MyEvent" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::remove_MyEvent(System.EventHandler)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::remove_MyEvent(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::remove_MyEvent(System.EventHandler)" e="Field:System.EventHandler Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::MyEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::remove_MyEvent(System.EventHandler)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::add_MyEvent(System.EventHandler)" e="Event:System.EventHandler Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::MyEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::add_MyEvent(System.EventHandler)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::add_MyEvent(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::add_MyEvent(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::add_MyEvent(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::add_MyEvent(System.EventHandler)" e="Field:System.EventHandler Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::MyEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::add_MyEvent(System.EventHandler)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::add_MyEvent(System.EventHandler)" e="TypeDef:System.EventHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::add_MyEvent(System.EventHandler)" e="Field:System.EventHandler Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::MyEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::add_MyEvent(System.EventHandler)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::get_AnotherProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::AnotherProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::get_AnotherProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::get_AnotherProperty()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::&lt;AnotherProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::&lt;AnotherProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::&lt;AnotherProperty&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::get_Property()" e="Property:System.Boolean Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::Property()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::get_Property()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IMethodsAnnotatedInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::GetMethodsInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IMethodsAnnotatedInterface:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/IMethodsAnnotatedInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied::GetMethodsInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithPrivateMethods::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithPrivateMethods:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithPrivateMethods::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithPrivateMethods::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithPrivateMethods:test.exe" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithPrivateMethods:test.exe" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithPrivateMethods:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithPrivateMethods::PrivateMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithPrivateMethods:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithPrivateMethods::PublicMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithPrivateMethods::PublicMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithPrivateMethods::PrivateMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors::.ctor(System.Int32)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/DerivedClassWithCtors::.ctor(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AllAnnotationsAreApplied/ImplementationClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/IAnnotatedInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/IAnnotatedInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/IAnnotatedInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface::GetInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/IAnnotatedInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/IAnnotatedInterface:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/IAnnotatedInterface::InterfaceMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/IAnnotatedInterface:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/IAnnotatedInterface::DoSomething()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/IAnnotatedInterface:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/IAnnotatedInterface::DefaultInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/IAnnotatedInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/IAnnotatedInterface::DefaultInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/IAnnotatedInterface::DoSomething()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/IAnnotatedInterface::InterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/IAnnotatedInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/IAnnotatedInterface:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/IAnnotatedInterface Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface::GetInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/Derived::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/Derived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/Derived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/Derived:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/Derived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/Derived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/Derived::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/Derived::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass:test.exe" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass:test.exe" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass::Mono.Linker.Tests.Cases.Reflection.ObjectGetType.AnnotationsRequestedOnInterface.IAnnotatedInterface.InterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass::Mono.Linker.Tests.Cases.Reflection.ObjectGetType.AnnotationsRequestedOnInterface.IAnnotatedInterface.InterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/IAnnotatedInterface::InterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/ImplementationClass::Mono.Linker.Tests.Cases.Reflection.ObjectGetType.AnnotationsRequestedOnInterface.IAnnotatedInterface.InterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/Derived::NewMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnInterface/Derived::NewMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/IAnnotatedInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/IAnnotatedInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation::GetInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass:test.exe" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass:test.exe" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass::Mono.Linker.Tests.Cases.Reflection.ObjectGetType.AnnotationsRequestedOnImplementation.IAnnotatedInterface.InterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass::Mono.Linker.Tests.Cases.Reflection.ObjectGetType.AnnotationsRequestedOnImplementation.IAnnotatedInterface.InterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/IAnnotatedInterface::InterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass::Mono.Linker.Tests.Cases.Reflection.ObjectGetType.AnnotationsRequestedOnImplementation.IAnnotatedInterface.InterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/IAnnotatedInterface::InterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation::GetInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/Derived::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/Derived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/Derived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/Derived:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/Derived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/Derived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/Derived::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/Derived::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/ImplementationClass::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/Derived::NewMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/AnnotationsRequestedOnImplementation/Derived::NewMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/FirstImplementationClass::Do()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/FirstImplementationClass::Do()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/FirstImplementationClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/FirstImplementationClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/IAnnotatedInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/IAnnotatedInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst::GetInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass:test.exe" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass:test.exe" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass::Mono.Linker.Tests.Cases.Reflection.ObjectGetType.InterfaceSeenFirst.IAnnotatedInterface.InterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass::Mono.Linker.Tests.Cases.Reflection.ObjectGetType.InterfaceSeenFirst.IAnnotatedInterface.InterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/IAnnotatedInterface::InterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass::Mono.Linker.Tests.Cases.Reflection.ObjectGetType.InterfaceSeenFirst.IAnnotatedInterface.InterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/IAnnotatedInterface::InterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst::GetInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/ImplementationClass::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/InterfaceSeenFirst/FirstImplementationClass::Do()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource/Derived::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource/Derived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource/Derived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource/Derived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource/Derived:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource/Derived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource/Derived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource/Derived::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource/Derived::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource/Base::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource/Base::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource/Base:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource/Base:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource/Base::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource/Base:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource/Base::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/ConstructorAsSource/Base::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/IAnnotatedInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/IAnnotatedInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy::GetInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/BaseImplementingInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy::GetInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived3::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived3::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived3:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived3:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived3::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived3:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived3::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived3::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived2::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived2::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived2:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived2::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived2::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived2::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived1::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/BaseImplementingInterface::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/BaseImplementingInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/BaseImplementingInterface:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/BaseImplementingInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/BaseImplementingInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/BaseImplementingInterface::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/BaseImplementingInterface::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived3:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived3::UsedMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived3:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived3::UnusedMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived3::UnusedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepInterfaceHierarchy/Derived3::UsedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy::GetInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/BaseClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1 Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy::GetInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass3::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass3::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass3:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass3:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass3::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass3:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass3::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass3::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass2::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass2::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass2:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass2::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass2::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass2::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass1::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/BaseClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/BaseClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/BaseClass:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/BaseClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/BaseClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/BaseClass::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/BaseClass::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass3:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass3::UsedMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass3:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass3::UnusedMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass3::UnusedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DeepHierarchy/DerivedClass3::UsedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/IHierarchyAnnotatedParentInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/IHierarchyAnnotatedParentInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild::Instance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild::Instance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild::UsedMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild::UnusedMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild:test.exe" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild::Instance()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild::UnusedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild::UsedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild::Instance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild::Instance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceChild::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceParent::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceParent::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceParent:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceParent:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceParent::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceParent:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceParent::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithBaseAndAnnotatedInterface/HierarchyAnnotatedParentInterfaceParent::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived::GetInstance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived:test.exe" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived:test.exe" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Derived::Method()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Base::Method()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived::PrivateMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Derived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Base:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Derived::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Derived::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Base::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived::PrivateMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Base::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Derived::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Base::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Derived::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived::GetInstance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived::GetInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived::Method()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/MostDerived::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Derived::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Derived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Derived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Derived:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Derived::Method()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Derived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Derived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Derived::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Derived::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Base::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Base::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Base:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Base::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Base:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Base::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/DerivedWithAnnotationOnDerived/Base::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent::Test()" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild::Instance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild::Instance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild::UsedMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild::UnusedMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild:test.exe" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild::Instance()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild::UnusedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild::UsedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild::Instance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild::Instance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClassChild::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClass:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClass::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SingleDerivedWithAnnotatedParent/HierarchyAnnotatedParentClass::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns::Test(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns::Test(System.Int32)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns::Test(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns::Test(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns::Test(System.Int32)" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass::Instance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass::Instance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns::Test(System.Int32)" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass::Instance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass::Instance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns::Test(System.Int32)" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass::Instance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass::Instance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns::Test(System.Int32)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns::Test(System.Int32)" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass::UsedMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass::UnusedMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass:test.exe" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass::Instance()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns::Test(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns::Test(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns::Test(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass::UsedMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass::UsedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass::UnusedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass::UsedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass::Instance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass::Instance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/UnannotatedClass::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass::Instance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass::Instance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/AnnotatedClass::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass::Instance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass::Instance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAndWithoutAnnotationsWarns/SealedClass::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations::Test(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations::Test(System.Int32)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations::Test(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations::Test(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations::Test(System.Int32)" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass::Instance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass::Instance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations::Test(System.Int32)" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass::Instance()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass::Instance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations::Test(System.Int32)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations::Test(System.Int32)" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass::UsedMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass::UnusedMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass:test.exe" e="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass::Instance()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations::Test(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations::Test(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass::UsedMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass::UsedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass::UnusedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass::UsedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass::Instance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass::Instance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/AnnotatedClass::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass::Instance()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass::Instance()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/MultipleValuesWithAnnotations/SealedClass::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedStruct:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedStruct:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::TestInterface(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::TestInterface(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::TestClass(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::TestClass(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedStruct:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::TestStruct(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedStruct)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::TestStruct(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedStruct)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::TestStruct(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedStruct)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::TestStruct(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedStruct)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedStruct:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::TestStruct(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedStruct)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::TestStruct(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedStruct)" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::TestClass(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::TestClass(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::TestClass(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass)" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass::UsedMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass::UnusedMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::TestClass(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass::UnusedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass::UsedMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/BasicAnnotatedClass::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::TestInterface(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::TestInterface(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::TestInterface(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface)" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface::UsedMethod()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface::UnusedMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses::TestInterface(Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface::UnusedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface::UsedMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/BasicAnnotationWithNoDerivedClasses/ClassImplementingAnnotatedInterface::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements::Test()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType&gt;::TestReturn()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType&gt;:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType&gt;::TestReturn()" e="TypeSpec:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType&gt;::TestReturn()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::TestReturn()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType&gt;::TestField()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType&gt;:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType&gt;::TestField()" e="TypeSpec:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType&gt;::TestField()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::TestField()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::TestField()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::TestField()" e="MemberRef:TWithMethods Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;TWithMethods&gt;::_fieldAnnotated" />
	<edge b="MemberRef:TWithMethods Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;TWithMethods&gt;::_fieldAnnotated" e="TypeSpec:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;TWithMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;TWithMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1:test.exe" />
	<edge mark="1" b="MemberRef:TWithMethods Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;TWithMethods&gt;::_fieldAnnotated" e="Field:TWithMethods Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::_fieldAnnotated" />
	<edge mark="1" b="Field:TWithMethods Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::_fieldAnnotated" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1:test.exe" />
	<edge mark="1" b="Field:TWithMethods Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::_fieldAnnotated" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::TestField()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::TestField()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::.cctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::.cctor()" e="MethodSpec:!!0 System.Activator::CreateInstance&lt;TWithMethods&gt;()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::.cctor()" e="MemberRef:TWithMethods Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;TWithMethods&gt;::_fieldAnnotated" />
	<edge b="MemberRef:TWithMethods Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;TWithMethods&gt;::_fieldAnnotated" e="TypeSpec:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;TWithMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;TWithMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1:test.exe" />
	<edge mark="1" b="MemberRef:TWithMethods Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;TWithMethods&gt;::_fieldAnnotated" e="Field:TWithMethods Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::_fieldAnnotated" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::TestReturn()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::TestReturn()" e="MemberRef:TWithMethods Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;TWithMethods&gt;::ReturnAnnotated()" />
	<edge b="MemberRef:TWithMethods Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;TWithMethods&gt;::ReturnAnnotated()" e="TypeSpec:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;TWithMethods&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;TWithMethods&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1:test.exe" />
	<edge mark="1" b="MemberRef:TWithMethods Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1&lt;TWithMethods&gt;::ReturnAnnotated()" e="Method:TWithMethods Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::ReturnAnnotated()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::TestReturn()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::TestReturn()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge b="Method:TWithMethods Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/Generic`1::ReturnAnnotated()" e="MethodSpec:!!0 System.Activator::CreateInstance&lt;TWithMethods&gt;()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/GenericWithRequirements/TestType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Derived::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Derived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Derived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Derived:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::MethodWithRequirements&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Base&gt;(TWithMethods)" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::MethodWithRequirements&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Base&gt;(TWithMethods)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Base:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Base:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Base::PublicMethodOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::MethodWithRequirements&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Base&gt;(TWithMethods)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::MethodWithRequirements(TWithMethods)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::MethodWithRequirements(TWithMethods)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::MethodWithRequirements(TWithMethods)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest::MethodWithRequirements(TWithMethods)" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Base::PublicMethodOnBase()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Derived::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Derived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Derived::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Derived::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Base::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Base::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Base:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Base::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Base:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Base::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsAndDerivedTypeTest/Base::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest/TestType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest/TestType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest/TestType:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::MethodWithRequirements&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest/TestType&gt;(TWithMethods)" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::MethodWithRequirements&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest/TestType&gt;(TWithMethods)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest/TestType::PublicMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::MethodWithRequirements&lt;Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest/TestType&gt;(TWithMethods)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::MethodWithRequirements(TWithMethods)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::MethodWithRequirements(TWithMethods)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::MethodWithRequirements(TWithMethods)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest::MethodWithRequirements(TWithMethods)" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest/TestType::PublicMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest/TestType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest/TestType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/TypeOfGenericParameters/MethodWithRequirementsTest/TestType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType/UnsealedClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType/UnsealedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType/UnsealedClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType/UnsealedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType::Test()" e="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType/UnsealedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType::s_unsealedClassField" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType/UnsealedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType::s_unsealedClassField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType/UnsealedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType::s_unsealedClassField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType/UnsealedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType::Test()" e="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType/UnsealedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType::s_unsealedClassField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType/UnsealedClass:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType/UnsealedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType/UnsealedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType/UnsealedClass::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/UnsealedType/UnsealedClass::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType/SealedClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType/SealedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType/SealedClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType/SealedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType::Test()" e="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType/SealedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType::s_sealedClassField" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType/SealedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType::s_sealedClassField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType/SealedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType::s_sealedClassField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType/SealedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType::Test()" e="Field:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType/SealedClass Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType::s_sealedClassField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType/SealedClass::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType/SealedClass::Method()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType/SealedClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType/SealedClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType/SealedClass::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.ObjectGetType/SealedType/SealedClass::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Field:T[] System.SpanDebugView`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="ModuleRef:QCall" />
	<edge b="Method:T[] System.ReadOnlySpan`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.Span`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Span`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::GetPinnableReference()" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.ArraySegment`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::GetPinnableReference()" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.SpanDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToTruncating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToSaturating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToChecked(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
</dependencies>