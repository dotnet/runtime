<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestNamePrivate()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestNamePrivate()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::TestNameAndType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::TestNameAndType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestExplicitBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestExplicitBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestWrongBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestWrongBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestNullName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestNullName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownName(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownName(System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNameAndWrongBindingFlags(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNameAndWrongBindingFlags(System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers::TestNameBindingFlagsAndParameterModifier()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers::TestNameBindingFlagsAndParameterModifier()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameBindingFlagsCallingConventionParameterModifier()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameBindingFlagsCallingConventionParameterModifier()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types::TestNameBindingFlagsAndTypes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types::TestNameBindingFlagsAndTypes()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::TestNameWithIntAndType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::TestNameWithIntAndType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::TestNameWithIntAndTypeAndModifiers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::TestNameWithIntAndTypeAndModifiers()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers::TestNameWithIntAndBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers::TestNameWithIntAndBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::TestNameWithIntAndPrivateBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::TestNameWithIntAndPrivateBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameWithIntBindingFlagsCallingConventionParameter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameWithIntBindingFlagsCallingConventionParameter()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_CallConvention_Types_Modifiers:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_CallConvention_Types_Modifiers:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNullName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNullName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestEmptyName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestEmptyName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValueName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValueName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNonExistingName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNonExistingName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNullType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNullType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValue()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestDataFlowType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestDataFlowType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/DerivedAndBase::TestMethodInBaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/DerivedAndBase::TestMethodInBaseType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/DerivedAndBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/DerivedAndBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/FailIgnoreCaseBindingFlags::TestFailIgnoreCaseBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/FailIgnoreCaseBindingFlags::TestFailIgnoreCaseBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/FailIgnoreCaseBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/FailIgnoreCaseBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnorableBindingFlags::TestIgnorableBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnorableBindingFlags::TestIgnorableBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnorableBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnorableBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" e="Method:System.Boolean Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::MarkedDueToChangeType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::TestUnsupportedBindingFlags()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::MarkedDueToChangeType()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/UnsupportedBindingFlags::MarkedDueToChangeType()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnorableBindingFlags::TestIgnorableBindingFlags()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnorableBindingFlags::TestIgnorableBindingFlags()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnorableBindingFlags::TestIgnorableBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnorableBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnorableBindingFlags::TestIgnorableBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnorableBindingFlags::TestIgnorableBindingFlags()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnorableBindingFlags::TestIgnorableBindingFlags()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnorableBindingFlags::TestIgnorableBindingFlags()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnorableBindingFlags::TestIgnorableBindingFlags()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnorableBindingFlags::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnorableBindingFlags::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnorableBindingFlags::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/FailIgnoreCaseBindingFlags::TestFailIgnoreCaseBindingFlags()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/FailIgnoreCaseBindingFlags::TestFailIgnoreCaseBindingFlags()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/FailIgnoreCaseBindingFlags::TestFailIgnoreCaseBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/FailIgnoreCaseBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/FailIgnoreCaseBindingFlags::TestFailIgnoreCaseBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/FailIgnoreCaseBindingFlags::TestFailIgnoreCaseBindingFlags()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/FailIgnoreCaseBindingFlags::TestFailIgnoreCaseBindingFlags()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/FailIgnoreCaseBindingFlags::TestFailIgnoreCaseBindingFlags()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" e="Method:System.String Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::MarkedDueToIgnoreCase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::TestIgnoreCaseBindingFlags()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::MarkedDueToIgnoreCase()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::MarkedDueToIgnoreCase()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IgnoreCaseBindingFlags::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/DerivedAndBase::TestMethodInBaseType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/DerivedAndBase::TestMethodInBaseType()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/DerivedAndBase::TestMethodInBaseType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/DerivedAndBase/DerivedClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/DerivedAndBase/DerivedClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/DerivedAndBase::TestMethodInBaseType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/DerivedAndBase::TestMethodInBaseType()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/DerivedAndBase::TestMethodInBaseType()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/DerivedAndBase::TestMethodInBaseType()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/DerivedAndBase::TestMethodInBaseType()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/DerivedAndBase/BaseClass::OnlyCalledViaReflection()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/DerivedAndBase/BaseClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/DerivedAndBase/BaseClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/DerivedAndBase/BaseClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/IfClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/IfClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseIfClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseIfClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/IfClass::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/IfClass::ElseIfCall()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseIfClass::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseIfClass::OnlyCalledViaReflection(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseIfClass::ElseIfCall()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseClass::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse::TestIfElse(System.Int32)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseClass::OnlyCalledViaReflection(System.Int32)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseClass::OnlyCalledViaReflection(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseClass::OnlyCalledViaReflection(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseIfClass::ElseIfCall()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseIfClass::ElseIfCall()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseIfClass::OnlyCalledViaReflection(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseIfClass::OnlyCalledViaReflection(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseIfClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/ElseIfClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/IfClass::ElseIfCall()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/IfClass::ElseIfCall()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/IfClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/IfElse/IfClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestDataFlowType()" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::FindType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::FindType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestDataFlowType()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::FindType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::FindType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::FindType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::FindType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValue()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValue()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValue()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValue()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValue()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNullType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNullType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNullType()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNullType()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNonExistingName()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNonExistingName()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNonExistingName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNonExistingName()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNonExistingName()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValueName()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValueName()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValueName()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValueName()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValueName()" e="Method:System.String System.Type::get_AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValueName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValueName()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNoValueName()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestEmptyName()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestEmptyName()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestEmptyName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestEmptyName()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestEmptyName()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestEmptyName()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNullName()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNullName()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNullName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNullName()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection::TestNullName()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameWithIntBindingFlagsCallingConventionParameter()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameWithIntBindingFlagsCallingConventionParameter()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameWithIntBindingFlagsCallingConventionParameter()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_CallConvention_Types_Modifiers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameWithIntBindingFlagsCallingConventionParameter()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameWithIntBindingFlagsCallingConventionParameter()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameWithIntBindingFlagsCallingConventionParameter()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Int32,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameWithIntBindingFlagsCallingConventionParameter()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameWithIntBindingFlagsCallingConventionParameter()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameWithIntBindingFlagsCallingConventionParameter()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_CallConvention_Types_Modifiers::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_CallConvention_Types_Modifiers::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_CallConvention_Types_Modifiers::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::TestNameWithIntAndPrivateBindingFlags()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::TestNameWithIntAndPrivateBindingFlags()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::TestNameWithIntAndPrivateBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::TestNameWithIntAndPrivateBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::TestNameWithIntAndPrivateBindingFlags()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::TestNameWithIntAndPrivateBindingFlags()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::TestNameWithIntAndPrivateBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::TestNameWithIntAndPrivateBindingFlags()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Int32,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::TestNameWithIntAndPrivateBindingFlags()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::TestNameWithIntAndPrivateBindingFlags()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::TestNameWithIntAndPrivateBindingFlags()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::TestNameWithIntAndPrivateBindingFlags()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::TestNameWithIntAndPrivateBindingFlags()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::OnlyCalledViaReflection(System.Int32)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::OnlyCalledViaReflection(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::OnlyCalledViaReflection(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers_PrivateBinding::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers::TestNameWithIntAndBindingFlags()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers::TestNameWithIntAndBindingFlags()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers::TestNameWithIntAndBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers::TestNameWithIntAndBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers::TestNameWithIntAndBindingFlags()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers::TestNameWithIntAndBindingFlags()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Int32,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers::TestNameWithIntAndBindingFlags()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers::TestNameWithIntAndBindingFlags()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers::TestNameWithIntAndBindingFlags()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers::OnlyCalledViaReflection(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers::TestNameWithIntAndBindingFlags()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_BindingAttr_Binder_Types_Modifiers::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::TestNameWithIntAndTypeAndModifiers()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::TestNameWithIntAndTypeAndModifiers()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::TestNameWithIntAndTypeAndModifiers()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::TestNameWithIntAndTypeAndModifiers()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::TestNameWithIntAndTypeAndModifiers()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::TestNameWithIntAndTypeAndModifiers()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::TestNameWithIntAndTypeAndModifiers()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::TestNameWithIntAndTypeAndModifiers()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Int32,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::TestNameWithIntAndTypeAndModifiers()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::TestNameWithIntAndTypeAndModifiers()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::TestNameWithIntAndTypeAndModifiers()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::OnlyCalledViaReflection(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::TestNameWithIntAndTypeAndModifiers()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types_Modifiers::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::TestNameWithIntAndType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::TestNameWithIntAndType()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::TestNameWithIntAndType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::TestNameWithIntAndType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::TestNameWithIntAndType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::TestNameWithIntAndType()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::TestNameWithIntAndType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::TestNameWithIntAndType()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Int32,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::TestNameWithIntAndType()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::TestNameWithIntAndType()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::TestNameWithIntAndType()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::OnlyCalledViaReflection(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::TestNameWithIntAndType()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_GenericParameterCount_Types::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types::TestNameBindingFlagsAndTypes()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types::TestNameBindingFlagsAndTypes()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types::TestNameBindingFlagsAndTypes()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types::TestNameBindingFlagsAndTypes()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types::TestNameBindingFlagsAndTypes()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types::TestNameBindingFlagsAndTypes()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types::TestNameBindingFlagsAndTypes()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types::TestNameBindingFlagsAndTypes()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types::TestNameBindingFlagsAndTypes()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types::OnlyCalledViaReflection(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types::TestNameBindingFlagsAndTypes()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Types::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameBindingFlagsCallingConventionParameterModifier()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameBindingFlagsCallingConventionParameterModifier()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameBindingFlagsCallingConventionParameterModifier()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameBindingFlagsCallingConventionParameterModifier()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameBindingFlagsCallingConventionParameterModifier()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameBindingFlagsCallingConventionParameterModifier()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameBindingFlagsCallingConventionParameterModifier()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameBindingFlagsCallingConventionParameterModifier()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameBindingFlagsCallingConventionParameterModifier()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers::TestNameBindingFlagsCallingConventionParameterModifier()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers::OnlyCalledViaReflection(System.Int32)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers::OnlyCalledViaReflection(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers::OnlyCalledViaReflection(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_CallConvention_Types_Modifiers::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers::TestNameBindingFlagsAndParameterModifier()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers::TestNameBindingFlagsAndParameterModifier()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers::TestNameBindingFlagsAndParameterModifier()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers::TestNameBindingFlagsAndParameterModifier()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers::TestNameBindingFlagsAndParameterModifier()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers::TestNameBindingFlagsAndParameterModifier()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers::TestNameBindingFlagsAndParameterModifier()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers::TestNameBindingFlagsAndParameterModifier()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers::TestNameBindingFlagsAndParameterModifier()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers::OnlyCalledViaReflection(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers::TestNameBindingFlagsAndParameterModifier()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr_Binder_Types_Modifiers::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNameAndWrongBindingFlags(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNameAndWrongBindingFlags(System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownNameAndWrongBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownNameAndWrongBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNameAndWrongBindingFlags(System.String)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNameAndWrongBindingFlags(System.String)" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownName(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownName(System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownName:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownName:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownName(System.String)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownName(System.String)" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownName(System.String)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownName::AlsoKnown()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownName(System.String)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownName(System.String)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownName(System.String)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownName(System.String)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownName(System.String)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownName(System.String)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownName::AlsoKnown()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestNullName()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestNullName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/NullName:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/NullName:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestNullName()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestNullName()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestWrongBindingFlags()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestWrongBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/WrongBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/WrongBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestWrongBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestWrongBindingFlags()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestWrongBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/WrongBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestWrongBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestWrongBindingFlags()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestWrongBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/WrongBindingFlags::One()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestWrongBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/WrongBindingFlags::Two()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/WrongBindingFlags::Two()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/WrongBindingFlags::One()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/NullBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/NullBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/NullBindingFlags::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/NullBindingFlags::OnlyCalledViaReflection(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/NullBindingFlags::OnlyCalledViaReflection(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/NullBindingFlags::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownNullBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/NullBindingFlags::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/NullBindingFlags::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/NullBindingFlags::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/NullBindingFlags::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/NullBindingFlags::OnlyCalledViaReflection(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/NullBindingFlags::OnlyCalledViaReflection(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/NullBindingFlags::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/NullBindingFlags::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlagsAndName:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlagsAndName:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlagsAndName::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlagsAndName(System.Reflection.BindingFlags,System.String)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlagsAndName::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlagsAndName::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlags::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlags::OnlyCalledViaReflection(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlags::OnlyCalledViaReflection(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlags::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlags::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlags::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlags::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlags::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlags::OnlyCalledViaReflection(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlags::OnlyCalledViaReflection(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlags::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr/UnknownBindingFlags::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestExplicitBindingFlags()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestExplicitBindingFlags()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestExplicitBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestExplicitBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestExplicitBindingFlags()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestExplicitBindingFlags()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestExplicitBindingFlags()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestExplicitBindingFlags()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::TestExplicitBindingFlags()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_BindingAttr::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::TestNameAndType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::TestNameAndType()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::TestNameAndType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::TestNameAndType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::TestNameAndType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::TestNameAndType()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::TestNameAndType()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::TestNameAndType()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::TestNameAndType()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::TestNameAndType()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::OnlyCalledViaReflection(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::TestNameAndType()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name_Types::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestNamePrivate()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestNamePrivate()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestNamePrivate()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestNamePrivate()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestNamePrivate()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestNamePrivate()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestNamePrivate()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestName()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestName()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestName()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestName()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestName()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestName()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestName()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestName()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::TestName()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::OnlyCalledViaReflection(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodUsedViaReflection/GetMethod_Name::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge b="Field:T[] System.SpanDebugView`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="ModuleRef:QCall" />
	<edge b="Method:T[] System.ReadOnlySpan`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.Span`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Span`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::GetPinnableReference()" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.ArraySegment`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::GetPinnableReference()" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.SpanDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
</dependencies>