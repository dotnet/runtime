<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived::Test()" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived::Test()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived::Test()" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived::Test()" e="Field:System.Type[] System.Type::EmptyTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived::Test()" e="Method:System.Void System.Type::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived::Test()" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructor(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Base::UsedViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Derived::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Base::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Base:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Base::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Base:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Base::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Base::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.TypeBaseTypeUseViaReflection/KnownType_Base::UsedViaReflection()" e="TypeDef:System.Void" />
</dependencies>