<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestNullType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestNullType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestNoValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestNoValue()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestDataFlowType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestDataFlowType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::PublicMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::set_PublicProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::_publicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::_publicField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::_publicField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType/PublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType/PublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType/PublicNestedType::_nestedPublicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType/PublicNestedType::_nestedPublicField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType/PublicNestedType:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType/PublicNestedType::_nestedPublicField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType/PublicNestedType::NestedPublicMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::set_PublicProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType/PublicNestedType::NestedPublicMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::set_PublicProperty(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::set_PublicProperty(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::set_PublicProperty(System.Int32)" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::set_PublicProperty(System.Int32)" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::set_PublicProperty(System.Int32)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::set_PublicProperty(System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::get_PublicProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::PublicProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::get_PublicProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::PublicMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="TypeSpec:System.Reflection.MemberInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Reflection.MemberInfo[] System.Type::GetMembers(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::PublicMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::set_PublicProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::_publicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::_publicField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::_publicField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType/PublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType/PublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType/PublicNestedType::_nestedPublicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType/PublicNestedType::_nestedPublicField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType/PublicNestedType:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType/PublicNestedType::_nestedPublicField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType/PublicNestedType::NestedPublicMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::set_PublicProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::PublicMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::set_PublicProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::_publicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::_publicField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::_publicField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType/PublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType/PublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType/PublicNestedType::_nestedPublicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType/PublicNestedType::_nestedPublicField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType/PublicNestedType:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType/PublicNestedType::_nestedPublicField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType/PublicNestedType::NestedPublicMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::set_PublicProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestIfElse(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType/PublicNestedType::NestedPublicMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::set_PublicProperty(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::set_PublicProperty(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::get_PublicProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::PublicProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::get_PublicProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::PublicMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType/PublicNestedType::NestedPublicMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::set_PublicProperty(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::set_PublicProperty(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::get_PublicProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::PublicProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::get_PublicProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::PublicMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="TypeSpec:System.Reflection.MemberInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="Method:System.Reflection.MemberInfo[] System.Type::GetMembers(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestDataFlowType()" e="TypeSpec:System.Reflection.MemberInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestDataFlowType()" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::FindType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::FindType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestDataFlowType()" e="Method:System.Reflection.MemberInfo[] System.Type::GetMembers(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::FindType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::FindType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestNoValue()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestNoValue()" e="TypeSpec:System.Reflection.MemberInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestNoValue()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestNoValue()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestNoValue()" e="Method:System.Reflection.MemberInfo[] System.Type::GetMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestNullType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestNullType()" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestNullType()" e="TypeSpec:System.Reflection.MemberInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestNullType()" e="Method:System.Reflection.MemberInfo[] System.Type::GetMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.MemberInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Reflection.MemberInfo[] System.Type::GetMembers(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::.ctor(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PrivateMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::get_PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::set_PrivateProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PublicMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::set_PublicProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PublicEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PublicEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PublicEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::MarkedDueToPutRefDispPropertyEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::MarkedDueToPutRefDispPropertyEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::MarkedDueToPutRefDispPropertyEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::_privateField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::_privateField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::_privateField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::_publicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::_publicField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::_publicField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags/PrivateNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags/PrivateNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags/PublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags/PublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags/PublicNestedType::_nestedPublicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags/PublicNestedType::_nestedPublicField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags/PublicNestedType:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags/PublicNestedType::_nestedPublicField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags/PublicNestedType::NestedPublicMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::get_PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::set_PrivateProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::set_PublicProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::MarkedDueToPutRefDispPropertyEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::MarkedDueToPutRefDispPropertyEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::MarkedDueToPutRefDispPropertyEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags/PublicNestedType::NestedPublicMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::set_PublicProperty(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::set_PublicProperty(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::get_PublicProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PublicProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::get_PublicProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PublicMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::set_PrivateProperty(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::set_PrivateProperty(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::get_PrivateProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PrivateProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::get_PrivateProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::MarkedDueToPutRefDispPropertyEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::MarkedDueToPutRefDispPropertyEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PrivateMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::.ctor(System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="TypeSpec:System.Reflection.MemberInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Reflection.MemberInfo[] System.Type::GetMembers(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::PublicMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::set_PublicProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::_publicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::_publicField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::_publicField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags/PublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags/PublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags/PublicNestedType::_nestedPublicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags/PublicNestedType::_nestedPublicField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags/PublicNestedType:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags/PublicNestedType::_nestedPublicField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags/PublicNestedType::NestedPublicMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::set_PublicProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestWithBindingFlags()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags/PublicNestedType::NestedPublicMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::set_PublicProperty(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::set_PublicProperty(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::get_PublicProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::PublicProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::get_PublicProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::PublicMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="TypeSpec:System.Reflection.MemberInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Reflection.MemberInfo[] System.Type::GetMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::PublicMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::set_PublicProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::_publicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::_publicField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::_publicField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers/PublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers/PublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers/PublicNestedType::_nestedPublicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers/PublicNestedType::_nestedPublicField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers/PublicNestedType:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers/PublicNestedType::_nestedPublicField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers/PublicNestedType::NestedPublicMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::set_PublicProperty(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection::TestGetMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers/PublicNestedType::NestedPublicMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::set_PublicProperty(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::set_PublicProperty(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::get_PublicProperty()" e="Property:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::PublicProperty()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::get_PublicProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::PublicMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::set_PublicProperty(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::_publicField" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::get_PublicProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::get_PublicProperty()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::_publicField" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::PublicEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::PublicEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::PublicEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::PublicEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MyType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::set_PublicProperty(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::_publicField" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::get_PublicProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::get_PublicProperty()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::_publicField" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::PublicEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::PublicEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::PublicEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::PublicEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/ElseType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::set_PublicProperty(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::_publicField" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::get_PublicProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::get_PublicProperty()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::_publicField" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::PublicEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::PublicEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::PublicEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::PublicEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/IfType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::set_PublicProperty(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::_publicField" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::get_PublicProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::get_PublicProperty()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::_publicField" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PublicEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PublicEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::set_PrivateProperty(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::_privateField" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::get_PrivateProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::get_PrivateProperty()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::_privateField" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::MarkedDueToPutRefDispPropertyEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::MarkedDueToPutRefDispPropertyEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::remove_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::MarkedDueToPutRefDispPropertyEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::MarkedDueToPutRefDispPropertyEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/UnknownBindingFlags::add_MarkedDueToPutRefDispPropertyEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::set_PublicProperty(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::_publicField" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::get_PublicProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::get_PublicProperty()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::_publicField" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::PublicEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::PublicEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::PublicEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::PublicEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/MembersBindingFlags::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::set_PublicProperty(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::_publicField" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::get_PublicProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::get_PublicProperty()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::_publicField" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::PublicEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::PublicEvent" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers:test.exe" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::PublicEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::PublicEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MembersUsedViaReflection/SimpleGetMembers::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge b="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
</dependencies>