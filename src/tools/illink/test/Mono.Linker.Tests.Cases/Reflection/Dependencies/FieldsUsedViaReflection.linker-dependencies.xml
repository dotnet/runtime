<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestGetFields()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestGetFields()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestNullType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestNullType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestNoValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestNoValue()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestDataFlowType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestDataFlowType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/MyType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/MyType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIfElse(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIgnoreCaseBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnsupportedBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/MyType::ifField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/MyType::ifField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/MyType:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/MyType::ifField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/MyType::elseField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/MyType::elseField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/MyType:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/MyType::elseField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeSpec:System.Reflection.FieldInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/PutDispPropertyBindingFlagsClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/PutDispPropertyBindingFlagsClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Reflection.FieldInfo[] System.Type::GetFields(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnsupportedBindingFlags()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/PutDispPropertyBindingFlagsClass::markedDueToPutDispPropertyField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/PutDispPropertyBindingFlagsClass::markedDueToPutDispPropertyField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/PutDispPropertyBindingFlagsClass:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/PutDispPropertyBindingFlagsClass::markedDueToPutDispPropertyField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnsupportedBindingFlags()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/PutDispPropertyBindingFlagsClass::putDispPropertyField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/PutDispPropertyBindingFlagsClass::putDispPropertyField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/PutDispPropertyBindingFlagsClass:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/PutDispPropertyBindingFlagsClass::putDispPropertyField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeSpec:System.Reflection.FieldInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IgnoreCaseBindingFlagsClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IgnoreCaseBindingFlagsClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Reflection.FieldInfo[] System.Type::GetFields(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IgnoreCaseBindingFlagsClass::publicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IgnoreCaseBindingFlagsClass::publicField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IgnoreCaseBindingFlagsClass:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IgnoreCaseBindingFlagsClass::publicField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IgnoreCaseBindingFlagsClass::markedDueToIgnoreCaseField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IgnoreCaseBindingFlagsClass::markedDueToIgnoreCaseField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IgnoreCaseBindingFlagsClass:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IgnoreCaseBindingFlagsClass::markedDueToIgnoreCaseField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIfElse(System.Int32)" e="TypeSpec:System.Reflection.FieldInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IfClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IfClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/ElseClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/ElseClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Reflection.FieldInfo[] System.Type::GetFields(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIfElse(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IfClass::ifField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IfClass::ifField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IfClass:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IfClass::ifField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIfElse(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IfClass::elseField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IfClass::elseField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IfClass:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/IfClass::elseField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIfElse(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/ElseClass::elseField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/ElseClass::elseField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/ElseClass:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/ElseClass::elseField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestIfElse(System.Int32)" e="Field:System.String Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/ElseClass::ifField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/ElseClass::ifField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/ElseClass:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/ElseClass::ifField" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="TypeSpec:System.Reflection.FieldInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="Method:System.Reflection.FieldInfo[] System.Type::GetFields(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestDataFlowType()" e="TypeSpec:System.Reflection.FieldInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestDataFlowType()" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::FindType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::FindType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestDataFlowType()" e="Method:System.Reflection.FieldInfo[] System.Type::GetFields(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::FindType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::FindType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::FindType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::FindType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestNoValue()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestNoValue()" e="TypeSpec:System.Reflection.FieldInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestNoValue()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestNoValue()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestNoValue()" e="Method:System.Reflection.FieldInfo[] System.Type::GetFields()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestNullType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestNullType()" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestNullType()" e="TypeSpec:System.Reflection.FieldInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestNullType()" e="Method:System.Reflection.FieldInfo[] System.Type::GetFields()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.FieldInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/UnknownBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo[] System.Type::GetFields(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/UnknownBindingFlags::privatefield" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/UnknownBindingFlags::privatefield" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/UnknownBindingFlags::privatefield" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/UnknownBindingFlags::field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/UnknownBindingFlags::field" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/UnknownBindingFlags::field" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/UnknownBindingFlags::nonStatic" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/UnknownBindingFlags::nonStatic" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/UnknownBindingFlags:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/UnknownBindingFlags::nonStatic" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestBindingFlags()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestBindingFlags()" e="TypeSpec:System.Reflection.FieldInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/Foo:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/Foo:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestBindingFlags()" e="Method:System.Reflection.FieldInfo[] System.Type::GetFields(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestBindingFlags()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/Foo::field" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/Foo::field" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/Foo:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/Foo::field" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestBindingFlags()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/Foo::nonStatic" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/Foo::nonStatic" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/Foo:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection/Foo::nonStatic" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestGetFields()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestGetFields()" e="TypeSpec:System.Reflection.FieldInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestGetFields()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestGetFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestGetFields()" e="Method:System.Reflection.FieldInfo[] System.Type::GetFields()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::TestGetFields()" e="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::publicField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::publicField" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.Reflection.FieldsUsedViaReflection::publicField" e="TypeDef:System.Int32" />
</dependencies>