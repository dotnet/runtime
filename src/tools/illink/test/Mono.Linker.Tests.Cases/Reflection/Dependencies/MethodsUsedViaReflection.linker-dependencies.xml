<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestGetMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestGetMethods()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestNullType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestNullType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestNoValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestNoValue()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestDataFlowType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestDataFlowType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/MyType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/MyType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnoreCaseBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnorableBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnorableBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnsupportedBindingFlags()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/MyType::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/MyType::SomeotherFunc()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/MyType::SomeotherFunc()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/MyType::SomeotherFunc()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/MyType::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/MyType::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants/TestClassWithRUCMethods:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants/TestClassWithRUCMethods:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants/TestClassWithRUCMethods:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants/TestClassWithRUCMethods::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants/TestClassWithRUCMethods::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsFromConstants/TestClassWithRUCMethods::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers/TestClassWithRUCMethods:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers/TestClassWithRUCMethods:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers/TestClassWithRUCMethods:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers/TestClassWithRUCMethods::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers/TestClassWithRUCMethods::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfBindingFlagsAsNumbers/TestClassWithRUCMethods::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags/TestClassWithRUCMethods:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags/TestClassWithRUCMethods:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags/TestClassWithRUCMethods::PrivateMethodWithRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags/TestClassWithRUCMethods::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags/TestClassWithRUCMethods::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/HandlingOfComplexExpressionForBindingFlags/TestClassWithRUCMethods::PrivateMethodWithRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnsupportedBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/SuppressChangeTypeClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/SuppressChangeTypeClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Boolean Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/SuppressChangeTypeClass::MarkedDueToSuppressChangeType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/SuppressChangeTypeClass::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnsupportedBindingFlags()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/SuppressChangeTypeClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/SuppressChangeTypeClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/SuppressChangeTypeClass::MarkedDueToSuppressChangeType()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/SuppressChangeTypeClass::MarkedDueToSuppressChangeType()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnorableBindingFlags()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnorableBindingFlags()" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnorableBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/InvokeMethodClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/InvokeMethodClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnorableBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnorableBindingFlags()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnorableBindingFlags()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/InvokeMethodClass::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnorableBindingFlags()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnorableBindingFlags()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnorableBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnorableBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnorableBindingFlags()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnorableBindingFlags()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/InvokeMethodClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/InvokeMethodClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/IgnoreCaseClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/IgnoreCaseClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/IgnoreCaseClass::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.String Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/IgnoreCaseClass::MarkedDueToIgnoreCase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIgnoreCaseBindingFlags()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/IgnoreCaseClass::MarkedDueToIgnoreCase()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/IgnoreCaseClass::MarkedDueToIgnoreCase()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/IgnoreCaseClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/IgnoreCaseClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/IfClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/IfClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/ElseIfClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/ElseIfClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/ElseClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/ElseClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/IfClass::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/IfClass::ElseIfCall()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/ElseIfClass::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/ElseIfClass::ElseIfCall()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/ElseClass::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestIfElse(System.Int32)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/ElseClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/ElseClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/ElseIfClass::ElseIfCall()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/ElseIfClass::ElseIfCall()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/ElseIfClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/ElseIfClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/IfClass::ElseIfCall()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/IfClass::ElseIfCall()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/IfClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/IfClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestDataFlowWithAnnotation(System.Type)" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestDataFlowType()" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestDataFlowType()" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestDataFlowType()" e="Method:System.Type Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::FindType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::FindType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestDataFlowType()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::FindType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::FindType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::FindType()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::FindType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestNoValue()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestNoValue()" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestNoValue()" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestNoValue()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestNoValue()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestNoValue()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestNullType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestNullType()" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestNullType()" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestNullType()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestUnknownBindingClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestUnknownBindingClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestUnknownBindingClass::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestUnknownBindingClass::OnlyCalledViaReflection(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestUnknownBindingClass::OnlyCalledViaReflection(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestUnknownBindingClass::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestUnknownBindingFlags(System.Reflection.BindingFlags)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestUnknownBindingClass::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestUnknownBindingClass::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestUnknownBindingClass::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestUnknownBindingClass::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestUnknownBindingClass::OnlyCalledViaReflection(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestUnknownBindingClass::OnlyCalledViaReflection(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestUnknownBindingClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestUnknownBindingClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestBindingFlags()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestBindingFlags()" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestBindingFlags()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestBindingClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestBindingClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestBindingFlags()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestBindingFlags()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestBindingFlags()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestBindingClass::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestBindingFlags()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestBindingClass::OnlyCalledViaReflection(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestBindingFlags()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestBindingClass::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestBindingFlags()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestBindingFlags()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestBindingFlags()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestBindingFlags()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestBindingFlags()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestBindingClass::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestBindingClass::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestBindingClass::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestBindingClass::OnlyCalledViaReflection(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestBindingClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection/TestBindingClass::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestGetMethods()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestGetMethods()" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestGetMethods()" e="TypeDef:Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestGetMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestGetMethods()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestGetMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::Main()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestGetMethods()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::OnlyCalledViaReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestGetMethods()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::OnlyCalledViaReflection(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestGetMethods()" e="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestGetMethods()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestGetMethods()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestGetMethods()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestGetMethods()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestGetMethods()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::TestGetMethods()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::OnlyCalledViaReflection(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::OnlyCalledViaReflection(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::OnlyCalledViaReflection(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.Reflection.MethodsUsedViaReflection::OnlyCalledViaReflection()" e="TypeDef:System.Int32" />
</dependencies>