<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="TypeRef:System.Void" e="ExportedType:System.Void" />
	<edge mark="1" b="TypeRef:System.Runtime.CompilerServices.CompilationRelaxationsAttribute" e="ExportedType:System.Runtime.CompilerServices.CompilationRelaxationsAttribute" />
	<edge mark="1" b="TypeRef:System.Int32" e="ExportedType:System.Int32" />
	<edge mark="1" b="TypeRef:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" e="ExportedType:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" />
	<edge mark="1" b="TypeRef:System.Boolean" e="ExportedType:System.Boolean" />
	<edge mark="1" b="TypeRef:System.Diagnostics.DebuggableAttribute" e="ExportedType:System.Diagnostics.DebuggableAttribute" />
	<edge mark="1" b="TypeRef:System.Diagnostics.DebuggableAttribute/DebuggingModes" e="ExportedType:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="TypeRef:System.Runtime.CompilerServices.RefSafetyRulesAttribute" e="ExportedType:System.Runtime.CompilerServices.RefSafetyRulesAttribute" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedClassWithImplicitlyImplementedInterface" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedClassWithImplicitlyImplementedInterface" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithPrivateInterface" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithPrivateInterface" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUsedStaticInterface/InterfaceMethodUnused:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUsedStaticInterface/InterfaceMethodUnused:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::GenericMethodThatCallsInternalStaticInterfaceMethod&lt;Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUsedStaticInterface/InterfaceMethodUsedThroughInterface&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::GenericMethodThatCallsInternalStaticInterfaceMethod&lt;Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUsedStaticInterface/InterfaceMethodUsedThroughInterface&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUsedStaticInterface/InterfaceMethodUsedThroughInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUsedStaticInterface/InterfaceMethodUsedThroughInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::GenericMethodThatCallsInternalStaticInterfaceMethod&lt;Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUsedStaticInterface/InterfaceMethodUsedThroughInterface&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::GenericMethodThatCallsInternalStaticInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicInterface" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicInterface" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicStaticInterface" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicStaticInterface" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::MarkIFormattable(System.IFormattable)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::MarkIFormattable(System.IFormattable)" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IStaticInterfaceUsed:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicInterface::PublicInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicInterface::ExplicitImplementationPublicInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicStaticInterface::PublicStaticInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicStaticInterface::ExplicitImplementationPublicStaticInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicStaticInterface::ExplicitImplementationPublicStaticInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicStaticInterface::PublicStaticInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicInterface::ExplicitImplementationPublicInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicInterface::PublicInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::MarkIFormattable(System.IFormattable)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::GenericMethodThatCallsInternalStaticInterfaceMethod()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IStaticInterfaceUsed:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::GenericMethodThatCallsInternalStaticInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants::GenericMethodThatCallsInternalStaticInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IStaticInterfaceUsed::StaticMethodUsedThroughInterface()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IStaticInterfaceUsed::StaticMethodUsedThroughInterface()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IStaticInterfaceUsed:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IStaticInterfaceUsed::StaticMethodUsedThroughInterface()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUsedStaticInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface/InterfaceMethodUsedThroughImplementation::InterfaceUsedMethodNot()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface/InterfaceMethodUsedThroughImplementation::InterfaceUsedMethodNot()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface/InterfaceMethodUsedThroughImplementation:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface/InterfaceMethodUsedThroughImplementation:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface/InterfaceMethodUsedThroughImplementation::InterfaceAndMethodNoUsed()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface/InterfaceMethodUsedThroughImplementation::InterfaceAndMethodNoUsed()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface/InterfaceMethodUsedThroughImplementation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface/IStaticInterfaceMethodUnused:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface/IStaticInterfaceMethodUnused:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface::Test()" e="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface/InterfaceMethodUnused:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface/InterfaceMethodUnused:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface/InterfaceMethodUsedThroughImplementation::InterfaceAndMethodNoUsed()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUnusedStaticInterface/InterfaceMethodUsedThroughImplementation::InterfaceUsedMethodNot()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryStaticInterface::CopyLibraryExplicitImplementationStaticInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryStaticInterface.CopyLibraryExplicitImplementationStaticInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryStaticInterface::CopyLibraryStaticInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::CopyLibraryStaticInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryInterface::CopyLibraryExplicitImplementationInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryInterface.CopyLibraryExplicitImplementationInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryInterface::CopyLibraryInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::CopyLibraryInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicStaticInterface::ExplicitImplementationPublicStaticInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants.IPublicStaticInterface.ExplicitImplementationPublicStaticInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicStaticInterface::PublicStaticInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::PublicStaticInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicInterface::ExplicitImplementationPublicInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants.IPublicInterface.ExplicitImplementationPublicInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicInterface::PublicInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::PublicInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IStaticInterfaceUsed::StaticMethodUsedThroughInterface()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUsedStaticInterface/InterfaceMethodUsedThroughInterface::StaticMethodUsedThroughInterface()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryStaticInterface::CopyLibraryExplicitImplementationStaticInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface::Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryStaticInterface.CopyLibraryExplicitImplementationStaticInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryStaticInterface::CopyLibraryStaticInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface::CopyLibraryStaticInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryInterface::CopyLibraryExplicitImplementationInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface::Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryInterface.CopyLibraryExplicitImplementationInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryInterface::CopyLibraryInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface::CopyLibraryInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicStaticInterface::ExplicitImplementationPublicStaticInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface::Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants.IPublicStaticInterface.ExplicitImplementationPublicStaticInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicStaticInterface::PublicStaticInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface::PublicStaticInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicInterface::ExplicitImplementationPublicInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface::Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants.IPublicInterface.ExplicitImplementationPublicInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicInterface::PublicInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface::PublicInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IStaticInterfaceUsed::StaticMethodUsedThroughInterface()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUsedStaticInterface/InterfaceMethodUnused::StaticMethodUsedThroughInterface()" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedClassWithImplicitlyImplementedInterface::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedClassWithImplicitlyImplementedInterface::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedClassWithImplicitlyImplementedInterface::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedClassWithImplicitlyImplementedInterface::ToString(System.String,System.IFormatProvider)" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedClassWithImplicitlyImplementedInterface::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedClassWithImplicitlyImplementedInterface::ToString(System.String,System.IFormatProvider)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUsedStaticInterface/InterfaceMethodUnused::StaticMethodUsedThroughInterface()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface::PublicInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface::Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants.IPublicInterface.ExplicitImplementationPublicInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicInterface::ExplicitImplementationPublicInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface::Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants.IPublicInterface.ExplicitImplementationPublicInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface::PublicStaticInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface::Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants.IPublicStaticInterface.ExplicitImplementationPublicStaticInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface::CopyLibraryInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface::Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryInterface.CopyLibraryExplicitImplementationInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryInterface::CopyLibraryExplicitImplementationInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface::Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryInterface.CopyLibraryExplicitImplementationInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface::CopyLibraryStaticInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/UninstantiatedPublicClassWithInterface::Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryStaticInterface.CopyLibraryExplicitImplementationStaticInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/ImplementsUsedStaticInterface/InterfaceMethodUsedThroughInterface::StaticMethodUsedThroughInterface()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::PublicInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants.IPublicInterface.ExplicitImplementationPublicInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/IPublicInterface::ExplicitImplementationPublicInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants.IPublicInterface.ExplicitImplementationPublicInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::PublicStaticInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants.IPublicStaticInterface.ExplicitImplementationPublicStaticInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::CopyLibraryInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryInterface.CopyLibraryExplicitImplementationInterfaceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryInterface::CopyLibraryExplicitImplementationInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryInterface.CopyLibraryExplicitImplementationInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::CopyLibraryStaticInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.Inheritance.Interfaces.InterfaceVariants/InstantiatedClassWithInterfaces::Mono.Linker.Tests.Cases.Inheritance.Interfaces.Dependencies.ICopyLibraryStaticInterface.CopyLibraryExplicitImplementationStaticInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="N:null" e="Assembly:copylibrary, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
</dependencies>