<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.I" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.I" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/GC`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/GC`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/GC`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/GC`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/GC`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TS:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TS:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test(method Mono.Linker.Tests.Cases.TypeForwarding.S* *(Mono.Linker.Tests.Cases.TypeForwarding.C))" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test(method Mono.Linker.Tests.Cases.TypeForwarding.S* *(Mono.Linker.Tests.Cases.TypeForwarding.C))" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="Method:Mono.Linker.Tests.Cases.TypeForwarding.C Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test2(Mono.Linker.Tests.Cases.TypeForwarding.C)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.C Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test2(Mono.Linker.Tests.Cases.TypeForwarding.C)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="Field:Mono.Linker.Tests.Cases.TypeForwarding.C Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::c" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.TypeForwarding.C Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::c" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.TypeForwarding.C Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::c" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.C" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="MethodSpec:Mono.Linker.Tests.Cases.TypeForwarding.C[] Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test3&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;(Mono.Linker.Tests.Cases.TypeForwarding.C&amp;)" />
	<edge mark="1" b="MethodSpec:Mono.Linker.Tests.Cases.TypeForwarding.C[] Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test3&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;(Mono.Linker.Tests.Cases.TypeForwarding.C&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.C" />
	<edge mark="1" b="MethodSpec:Mono.Linker.Tests.Cases.TypeForwarding.C[] Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test3&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;(Mono.Linker.Tests.Cases.TypeForwarding.C&amp;)" e="Method:Mono.Linker.Tests.Cases.TypeForwarding.C[] Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test3(Mono.Linker.Tests.Cases.TypeForwarding.C&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test4(Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;[],System.Object)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test4(Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;[],System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test5(Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test5(Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test6&lt;System.String&gt;(Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;T&gt;)" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test6&lt;System.String&gt;(Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;T&gt;)" e="TypeDef:System.String" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test6&lt;System.String&gt;(Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;T&gt;)" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test6(Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="Field:Mono.Linker.Tests.Cases.TypeForwarding.C Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::c" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="Field:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::g" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::g" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::g" e="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::add_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::add_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.I::Test(Mono.Linker.Tests.Cases.TypeForwarding.C)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TS:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TS:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.I::Test(Mono.Linker.Tests.Cases.TypeForwarding.C)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Main()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/GC`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/GC`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/GC`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/GC`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/GC`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/GC`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/GC`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/GC`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/GC`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/GC`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/GC`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/GC`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.C::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::add_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="Event:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::e" />
	<edge mark="1" b="Event:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::e" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::add_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" />
	<edge mark="1" b="Event:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::e" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::remove_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::add_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::add_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::add_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::add_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::add_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="Field:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::e" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::e" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::e" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::add_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::add_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::add_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="Field:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::e" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::add_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D&gt;(!!0&amp;,!!0,!!0)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D:test.exe" e="Method:Mono.Linker.Tests.Cases.TypeForwarding.C Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D::Invoke()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.C Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D::Invoke()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.C" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge b="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::remove_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="Event:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::e" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::remove_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::remove_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::remove_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::remove_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::remove_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="Field:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::e" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::remove_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::remove_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::remove_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="Field:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::e" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::remove_e(Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D&gt;(!!0&amp;,!!0,!!0)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/D:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test6(Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;T&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test6(Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test5(Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;" />
	<edge b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test5(Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;" />
	<edge b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test5(Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.G`1/N&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;" />
	<edge b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test4(Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;[],System.Object)" e="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;[]" />
	<edge b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test4(Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;[],System.Object)" e="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test4(Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;[],System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.C" />
	<edge b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test4(Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;[],System.Object)" e="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test4(Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;[],System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.C" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test4(Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;[],System.Object)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test4(Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;[],System.Object)" e="Method:System.Void System.Console::WriteLine(System.Object)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test4(Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;[],System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.G`1" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test4(Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;[],System.Object)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test4(Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;[],System.Object)" e="Method:System.Void System.Console::WriteLine(System.Object)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test4(Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;[],System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.G`1/N" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test4(Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;[],System.Object)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test4(Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;[],System.Object)" e="Method:System.Void System.Console::WriteLine(System.Object)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test4(Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;[],System.Object)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.C" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt; Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test4(Mono.Linker.Tests.Cases.TypeForwarding.G`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.C&gt;[],System.Object)" e="Method:System.Void System.Console::WriteLine(System.Object)" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.C[] Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test3(Mono.Linker.Tests.Cases.TypeForwarding.C&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.C" />
	<edge b="Method:Mono.Linker.Tests.Cases.TypeForwarding.C[] Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test3(Mono.Linker.Tests.Cases.TypeForwarding.C&amp;)" e="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.C&amp;" />
	<edge b="Method:Mono.Linker.Tests.Cases.TypeForwarding.C[] Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test3(Mono.Linker.Tests.Cases.TypeForwarding.C&amp;)" e="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.C[]" />
	<edge b="Method:Mono.Linker.Tests.Cases.TypeForwarding.C[] Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test3(Mono.Linker.Tests.Cases.TypeForwarding.C&amp;)" e="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.C[]" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.C Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test2(Mono.Linker.Tests.Cases.TypeForwarding.C)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.C" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.C Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test2(Mono.Linker.Tests.Cases.TypeForwarding.C)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.C" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.TypeForwarding.C Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test2(Mono.Linker.Tests.Cases.TypeForwarding.C)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.C" />
	<edge mark="1" b="TypeSpec:method Mono.Linker.Tests.Cases.TypeForwarding.S* *(Mono.Linker.Tests.Cases.TypeForwarding.C):test.exe" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.C" />
	<edge b="TypeSpec:method Mono.Linker.Tests.Cases.TypeForwarding.S* *(Mono.Linker.Tests.Cases.TypeForwarding.C):test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.S*" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite::Test(method Mono.Linker.Tests.Cases.TypeForwarding.S* *(Mono.Linker.Tests.Cases.TypeForwarding.C))" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/GC`1:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.I" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.I::Test(Mono.Linker.Tests.Cases.TypeForwarding.C)" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC::Mono.Linker.Tests.Cases.TypeForwarding.I.Test(Mono.Linker.Tests.Cases.TypeForwarding.C)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.I::Test(Mono.Linker.Tests.Cases.TypeForwarding.C)" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TS::Test(Mono.Linker.Tests.Cases.TypeForwarding.C)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TS::Test(Mono.Linker.Tests.Cases.TypeForwarding.C)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC::Mono.Linker.Tests.Cases.TypeForwarding.I.Test(Mono.Linker.Tests.Cases.TypeForwarding.C)" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.I::Test(Mono.Linker.Tests.Cases.TypeForwarding.C)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TypeForwardersRewrite/TC::Mono.Linker.Tests.Cases.TypeForwarding.I.Test(Mono.Linker.Tests.Cases.TypeForwarding.C)" e="TypeDef:System.Void" />
</dependencies>