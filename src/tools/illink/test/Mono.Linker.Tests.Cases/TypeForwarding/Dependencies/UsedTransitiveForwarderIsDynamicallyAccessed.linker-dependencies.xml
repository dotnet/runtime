<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::PointToTypeInFacade(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::PointToTypeInFacade(System.String)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary" e="ExportedType:Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary/ImplementationLibraryNestedType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary/ImplementationLibraryNestedType::&lt;PropertyOnNestedType&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary/ImplementationLibraryNestedType::get_PropertyOnNestedType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary/ImplementationLibraryNestedType::set_PropertyOnNestedType(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary/ImplementationLibraryNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Property:System.Int32 Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary/ImplementationLibraryNestedType::PropertyOnNestedType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary/ImplementationLibraryNestedType::get_PropertyOnNestedType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary/ImplementationLibraryNestedType::set_PropertyOnNestedType(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary/ForwardedNestedType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary/ForwardedNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary::someField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.String Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary::GetSomeValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.UsedTransitiveForwarderIsDynamicallyAccessed::PointToTypeInFacade(System.String)" e="TypeDef:System.Void" />
</dependencies>