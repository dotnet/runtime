<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Parameter_TypeRef()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Parameter_TypeRef()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Parameter_TypeRefMDArray()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Parameter_TypeRefMDArray()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Parameter_PointerTypeRef()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Parameter_PointerTypeRef()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Property_ArrayOfTypeRefs()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Property_ArrayOfTypeRefs()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Field_GenericOfTypeRefArray()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Field_GenericOfTypeRefArray()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Field_OpenGeneric()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Field_OpenGeneric()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Field_ArrayOfPointerTypeRef()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Field_ArrayOfPointerTypeRef()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded:test.exe" />
	<edge mark="1" b="Field:System.Object Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute::TestField" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Object Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute::TestField" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Field_ArrayOfPointerTypeRef()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute::.ctor()" e="Method:System.Void System.Attribute::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.SomeGenericType`1" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Field_OpenGeneric()" e="TypeDef:System.Void" />
	<edge b="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.SomeGenericType`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary[]&gt;" e="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary[]" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.TypeForwarding.SomeGenericType`1&lt;Mono.Linker.Tests.Cases.TypeForwarding.Dependencies.ImplementationLibrary[]&gt;" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.SomeGenericType`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Field_GenericOfTypeRefArray()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Property_ArrayOfTypeRefs()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute::set_TestProperty(System.Object)" e="Property:System.Object Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute::TestProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute::set_TestProperty(System.Object)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute::set_TestProperty(System.Object)" e="Field:System.Object Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute::&lt;TestProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Object Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute::&lt;TestProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute" />
	<edge mark="1" b="Field:System.Object Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute::&lt;TestProperty&gt;k__BackingField" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Parameter_PointerTypeRef()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute::.ctor(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute::.ctor(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.TestTypeAttribute::.ctor(System.Type)" e="Method:System.Void System.Attribute::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Parameter_TypeRefMDArray()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.TypeForwarding.AttributeArgumentForwarded::Test_Parameter_TypeRef()" e="TypeDef:System.Void" />
</dependencies>