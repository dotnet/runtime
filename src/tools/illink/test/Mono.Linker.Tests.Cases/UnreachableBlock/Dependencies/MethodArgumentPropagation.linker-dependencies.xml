<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestSimpleStaticCall()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestSimpleStaticCall()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestFailedAndSuccessfullPropagation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestFailedAndSuccessfullPropagation()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestComplexButAlwaysConstant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestComplexButAlwaysConstant()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestModifiesArgumentOnStack()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestModifiesArgumentOnStack()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalStaticCall()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalStaticCall()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestSimpleLocalVariable()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestSimpleLocalVariable()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalJumpIntoReplacedTarget(System.Double)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalJumpIntoReplacedTarget(System.Double)" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestNullPropagation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestNullPropagation()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestFirstLevelReduction()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestFirstLevelReduction()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalArguments()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalArguments()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalArguments_2()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalArguments_2()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestRecursionFromDeadCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestRecursionFromDeadCode()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestIndirectRecursion()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestIndirectRecursion()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestStringCalls()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestStringCalls()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestStringCalls()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestIndirectRecursion()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestIndirectRecursion()" e="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestIndirectRecursion_1()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestIndirectRecursion_1()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestIndirectRecursion_1()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestIndirectRecursion_1()" e="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestIndirectRecursion_2()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestIndirectRecursion_2()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestIndirectRecursion_2()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestIndirectRecursion_2()" e="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestIndirectRecursion()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestIndirectRecursion()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestRecursionFromDeadCode()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalArguments_2()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalArguments_2()" e="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::GetUnknownValue()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::GetUnknownValue()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalArguments_2()" e="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::KeptIntInOut(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::KeptIntInOut(System.Int32,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalArguments_2()" e="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Reached()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Reached()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Reached()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::KeptIntInOut(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::GetUnknownValue()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::GetUnknownValue()" e="Method:System.Int32 System.Environment::get_ProcessId()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalArguments()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalArguments()" e="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::GetUnknownValue()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::GetUnknownValue()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalArguments()" e="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::KeptIntInOut(System.Int32)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::KeptIntInOut(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalArguments()" e="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Reached()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Reached()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::KeptIntInOut(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestFirstLevelReduction()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestFirstLevelReduction()" e="Method:System.Void System.Console::WriteLine(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestNullPropagation()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalJumpIntoReplacedTarget(System.Double)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalJumpIntoReplacedTarget(System.Double)" e="Method:System.Void System.ArgumentOutOfRangeException::.ctor(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalJumpIntoReplacedTarget(System.Double)" e="Method:System.Void System.Console::WriteLine(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalJumpIntoReplacedTarget(System.Double)" e="Method:System.Void System.ArgumentOutOfRangeException::.ctor(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalJumpIntoReplacedTarget(System.Double)" e="Method:System.Void System.Console::WriteLine(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestSimpleLocalVariable()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestSimpleLocalVariable()" e="Method:System.Void System.Console::WriteLine(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestConditionalStaticCall()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestModifiesArgumentOnStack()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestModifiesArgumentOnStack()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestModifiesArgumentOnStack()" e="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::ModifiesArgumentOnStack(System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::ModifiesArgumentOnStack(System.Int32&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestModifiesArgumentOnStack()" e="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Reached()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Reached()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::ModifiesArgumentOnStack(System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::ModifiesArgumentOnStack(System.Int32&amp;)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestComplexButAlwaysConstant()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestComplexButAlwaysConstant()" e="Method:System.String System.String::Trim()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestComplexButAlwaysConstant()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestComplexButAlwaysConstant()" e="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::ComplexButAlwaysConstant(System.Int32,System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::ComplexButAlwaysConstant(System.Int32,System.String,System.Object[])" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::ComplexButAlwaysConstant(System.Int32,System.String,System.Object[])" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::ComplexButAlwaysConstant(System.Int32,System.String,System.Object[])" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestFailedAndSuccessfullPropagation()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestFailedAndSuccessfullPropagation()" e="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::GetUnknownValue()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::GetUnknownValue()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestFailedAndSuccessfullPropagation()" e="Method:System.Boolean Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::SimpleCompare(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::SimpleCompare(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestFailedAndSuccessfullPropagation()" e="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Reached()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::Reached()" e="TypeDef:Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation:test.exe" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::SimpleCompare(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.UnreachableBlock.MethodArgumentPropagation::TestSimpleStaticCall()" e="TypeDef:System.Void" />
</dependencies>