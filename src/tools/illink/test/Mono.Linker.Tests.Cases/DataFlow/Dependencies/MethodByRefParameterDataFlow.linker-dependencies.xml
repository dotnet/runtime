<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::_fieldWithMethods" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::_fieldWithMethods" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::_fieldWithMethods" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignStaticToAnnotatedRefParameter(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignStaticToAnnotatedRefParameter(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/TestType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/TestType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignParameterToAnnotatedRefParameter(System.Type&amp;,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignParameterToAnnotatedRefParameter(System.Type&amp;,System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_PassedTwice()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_PassedTwice()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnOutput()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnOutput()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnOutput_PassedTwice()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnOutput_PassedTwice()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnInput()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnInput()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnInput_PassedTwice()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnInput_PassedTwice()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_DeclaredBefore()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_DeclaredBefore()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_Ovewrite()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_Ovewrite()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefParameter(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefParameter(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefParameter_Mismatch(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefParameter_Mismatch(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssigningToRefParameter(System.Type,System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssigningToRefParameter(System.Type,System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssigningToRefParameter_Mismatch(System.Type,System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssigningToRefParameter_Mismatch(System.Type,System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingCapturedOutParameter(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingCapturedOutParameter(System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty_OutParameter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty_OutParameter()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty_Mismatch()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty_Mismatch()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty_OutParameter_Mismatch()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty_OutParameter_Mismatch()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_OutParameter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_OutParameter()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_Mismatch()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_Mismatch()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_OutParameter_Mismatch()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_OutParameter_Mismatch()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::MethodWithLocalMethodWithDam(System.Type,System.Type,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::MethodWithLocalMethodWithDam(System.Type,System.Type,System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::MethodWithLocalMethodWithDam(System.Type,System.Type,System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::MethodWithLocalMethodWithDam(System.Type,System.Type,System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::&lt;MethodWithLocalMethodWithDam&gt;g__InnerMethodWithDam|3_0(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::&lt;MethodWithLocalMethodWithDam&gt;g__InnerMethodWithDam|3_0(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::MethodWithLocalMethodWithDam(System.Type,System.Type,System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::&lt;MethodWithLocalMethodWithDam&gt;g__InnerMethodWithDam|3_0(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::&lt;MethodWithLocalMethodWithDam&gt;g__InnerMethodWithDam|3_0(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::MethodWithLocalMethodWithDam(System.Type,System.Type,System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::&lt;MethodWithLocalMethodWithDam&gt;g__InnerMethodWithDam|3_0(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::&lt;MethodWithLocalMethodWithDam&gt;g__InnerMethodWithDam|3_0(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::MethodWithLocalMethodWithDam(System.Type,System.Type,System.Type)" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::GetTypeRefWithoutAnnotations()" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::GetTypeRefWithoutAnnotations()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::MethodWithLocalMethodWithDam(System.Type,System.Type,System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::&lt;MethodWithLocalMethodWithDam&gt;g__InnerMethodWithDam|3_0(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::&lt;MethodWithLocalMethodWithDam&gt;g__InnerMethodWithDam|3_0(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::MethodWithLocalMethodWithDam(System.Type,System.Type,System.Type)" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::GetTypeRefWithMethods()" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::GetTypeRefWithMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::MethodWithLocalMethodWithDam(System.Type,System.Type,System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::&lt;MethodWithLocalMethodWithDam&gt;g__InnerMethodWithDam|3_0(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::&lt;MethodWithLocalMethodWithDam&gt;g__InnerMethodWithDam|3_0(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::MethodWithLocalMethodWithDam(System.Type,System.Type,System.Type)" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::GetTypeRefWithMethodsAndFields()" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::GetTypeRefWithMethodsAndFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::MethodWithLocalMethodWithDam(System.Type,System.Type,System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::&lt;MethodWithLocalMethodWithDam&gt;g__InnerMethodWithDam|3_0(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::&lt;MethodWithLocalMethodWithDam&gt;g__InnerMethodWithDam|3_0(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas:test.exe" />
	<edge b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::GetTypeRefWithMethodsAndFields()" e="TypeSpec:System.Type&amp;" />
	<edge b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::GetTypeRefWithMethods()" e="TypeSpec:System.Type&amp;" />
	<edge b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::GetTypeRefWithoutAnnotations()" e="TypeSpec:System.Type&amp;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::&lt;MethodWithLocalMethodWithDam&gt;g__InnerMethodWithDam|3_0(System.Type&amp;)" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/LocalMethodsAndLambdas::&lt;MethodWithLocalMethodWithDam&gt;g__InnerMethodWithDam|3_0(System.Type&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_OutParameter_Mismatch()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_OutParameter_Mismatch()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_OutParameter_Mismatch()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_OutParameter_Mismatch()" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::get_Item(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_OutParameter_Mismatch()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueOut(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueOut(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueOut(System.Type&amp;)" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueOut(System.Type&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueOut(System.Type&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::get_Item(System.Int32)" e="Property:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::Item(System.Int32)" />
	<edge b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::get_Item(System.Int32)" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::get_Item(System.Int32)" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::get_Item(System.Int32)" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::get_Item(System.Int32)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::get_Item(System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_Mismatch()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_Mismatch()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_Mismatch()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_Mismatch()" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::get_Item(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_Mismatch()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_OutParameter()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_OutParameter()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_OutParameter()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_OutParameter()" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods::get_Item(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer_OutParameter()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueOut(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueOut(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods::get_Item(System.Int32)" e="Property:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods::Item(System.Int32)" />
	<edge b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods::get_Item(System.Int32)" e="TypeSpec:System.Type&amp;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer()" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods::get_Item(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefIndexer()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty_OutParameter_Mismatch()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty_OutParameter_Mismatch()" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::get_TypeWithFieldsProperty()" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::get_TypeWithFieldsProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty_OutParameter_Mismatch()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueOut(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueOut(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::get_TypeWithFieldsProperty()" e="Property:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TypeWithFieldsProperty()" />
	<edge b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::get_TypeWithFieldsProperty()" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::get_TypeWithFieldsProperty()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::typeWithFieldsField" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::typeWithFieldsField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::typeWithFieldsField" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty_Mismatch()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty_Mismatch()" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::get_TypeWithFieldsProperty()" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::get_TypeWithFieldsProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty_Mismatch()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty_OutParameter()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty_OutParameter()" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::get_TypeWithMethodsProperty()" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::get_TypeWithMethodsProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty_OutParameter()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueOut(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueOut(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::get_TypeWithMethodsProperty()" e="Property:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TypeWithMethodsProperty()" />
	<edge b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::get_TypeWithMethodsProperty()" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::get_TypeWithMethodsProperty()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::typeWithMethodsField" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::typeWithMethodsField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::typeWithMethodsField" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty()" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::get_TypeWithMethodsProperty()" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::get_TypeWithMethodsProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefProperty()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingCapturedOutParameter(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingCapturedOutParameter(System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingCapturedOutParameter(System.Boolean)" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueWithExtraUnusedParameter(System.Type&amp;,System.Int32)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueWithExtraUnusedParameter(System.Type&amp;,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingCapturedOutParameter(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueWithExtraUnusedParameter(System.Type&amp;,System.Int32)" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueWithExtraUnusedParameter(System.Type&amp;,System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueWithExtraUnusedParameter(System.Type&amp;,System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::MethodWithRefAndImplicitThis(System.Type&amp;,System.Type&amp;,System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::MethodWithRefAndImplicitThis(System.Type&amp;,System.Type&amp;,System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::CompareTo(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Int32::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Int32::Equals(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.Int32::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.Int32::ToString(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.Int32::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.Int32::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::Parse(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::Parse(System.String,System.Globalization.NumberStyles)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Int32::TryParse(System.String,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Int32::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.TypeCode System.Int32::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.ValueTuple`2&lt;System.Int32,System.Int32&gt; System.Int32::DivRem(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::LeadingZeroCount(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::PopCount(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::RotateLeft(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::RotateRight(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::TrailingZeroCount(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Int32::IsPow2(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::Log2(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::Clamp(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::CopySign(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::Max(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::Min(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::Sign(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::Abs(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::CreateChecked(TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Int32::IsEvenInteger(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Int32::IsNegative(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Int32::IsOddInteger(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Int32::IsPositive(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::MaxMagnitude(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::MinMagnitude(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Int32::TryParse(System.String,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeDef:System.String/SearchValuesStorage:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Field:System.Buffers.SearchValues`1&lt;System.Char&gt; System.String/SearchValuesStorage::NewLineChars" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String/SearchValuesStorage::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeDef:System.IComparable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.IComparable::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Collections.IEnumerator System.Collections.IEnumerable::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeDef:System.IConvertible" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.TypeCode System.IConvertible::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1::GetEnumerator()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeSpec:System.IComparable`1&lt;System.String&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.IComparable`1::CompareTo(T)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeSpec:System.IEquatable`1&lt;System.String&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.IEquatable`1::Equals(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeDef:System.ICloneable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Object System.ICloneable::Clone()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeSpec:System.ISpanParsable`1&lt;System.String&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeSpec:System.IParsable`1&lt;TSelf&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="TypeSpec:System.IParsable`1&lt;System.String&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Field:System.Int32 System.String::_stringLength" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Field:System.Char System.String::_firstChar" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::FastAllocateString(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::Intern(System.Runtime.CompilerServices.StringHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Intern(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::IsInterned(System.Runtime.CompilerServices.StringHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::IsInterned(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::InternalCopy(System.String,System.IntPtr,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::GetBytesFromEncoding(System.Byte*,System.Int32,System.Text.Encoding)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::EqualsHelper(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::CompareOrdinalHelper(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::EqualsOrdinalIgnoreCase(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::EqualsOrdinalIgnoreCaseNoLengthCheck(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::CompareOrdinalHelper(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::Compare(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::CompareOrdinal(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::CompareTo(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::EndsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::EndsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::EndsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::EndsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::Equals(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::Equals(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::Equals(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::Equals(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::op_Equality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::op_Inequality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::GetHashCode(System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::GetHashCodeOrdinalIgnoreCase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::GetHashCodeOrdinalIgnoreCase(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::GetNonRandomizedHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::GetNonRandomizedHashCodeOrdinalIgnoreCase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::StartsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::StartsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::StartsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::StartsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::CheckStringComparison(System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Globalization.CompareOptions System.String::GetCaseCompareOfComparisonCulture(System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Globalization.CompareOptions System.String::GetCompareOptionsFromOrdinalStringComparison(System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::.ctor(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Ctor(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::.ctor(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Ctor(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::.ctor(System.Char*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Ctor(System.Char*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::.ctor(System.Char*,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Ctor(System.Char*,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::.ctor(System.SByte*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Ctor(System.SByte*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::.ctor(System.SByte*,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Ctor(System.SByte*,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::CreateStringForSByteConstructor(System.Byte*,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::.ctor(System.SByte*,System.Int32,System.Int32,System.Text.Encoding)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Ctor(System.SByte*,System.Int32,System.Int32,System.Text.Encoding)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::.ctor(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Ctor(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::.ctor(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Ctor(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Create(System.Int32,TState,System.Buffers.SpanAction`2&lt;System.Char,TState&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Span`1&lt;System.Char&gt;,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.ReadOnlySpan`1&lt;System.Char&gt; System.String::op_Implicit(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::TryGetSpan(System.Int32,System.Int32,System.ReadOnlySpan`1&lt;System.Char&gt;&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Object System.String::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Copy(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::CopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::TryCopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Char[] System.String::ToCharArray()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Char[] System.String::ToCharArray(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::IsNullOrEmpty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::IsNullOrWhiteSpace(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Char&amp; modreq(System.Runtime.InteropServices.InAttribute) System.String::GetPinnableReference()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Char&amp; System.String::GetRawStringData()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.UInt16&amp; System.String::GetRawStringDataAsUInt16()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::CreateStringFromEncoding(System.Byte*,System.Int32,System.Text.Encoding)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::CreateFromChar(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::CreateFromChar(System.Char,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.CharEnumerator System.String::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Collections.Generic.IEnumerator`1&lt;System.Char&gt; System.String::System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Collections.IEnumerator System.String::System.Collections.IEnumerable.GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Text.StringRuneEnumerator System.String::EnumerateRunes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::wcslen(System.Char*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::strlen(System.Byte*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.TypeCode System.String::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Char System.String::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.SByte System.String::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Byte System.String::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int16 System.String::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.UInt16 System.String::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.UInt32 System.String::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int64 System.String::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.UInt64 System.String::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Single System.String::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Double System.String::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Decimal System.String::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.DateTime System.String::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Object System.String::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::IsNormalized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::IsNormalized(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Normalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Normalize(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Char System.String::get_Chars(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::System.IParsable&lt;System.String&gt;.Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::System.IParsable&lt;System.String&gt;.TryParse(System.String,System.IFormatProvider,System.String&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::System.ISpanParsable&lt;System.String&gt;.Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::System.ISpanParsable&lt;System.String&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.String&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::CopyStringContent(System.String,System.Int32,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Concat(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Concat(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Concat(System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Concat(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Concat(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Concat(System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Concat(System.String,System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Concat(System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Format(System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Format(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::FormatHelper(System.IFormatProvider,System.String,System.ReadOnlySpan`1&lt;System.Object&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1,TArg2)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan`1&lt;System.Object&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1,TArg2,System.ReadOnlySpan`1&lt;System.Object&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Insert(System.Int32,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Join(System.Char,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Join(System.String,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Join(System.Char,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Join(System.String,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Join(System.Char,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Join(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Join(System.Char,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::JoinCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::PadLeft(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::PadLeft(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::PadRight(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::PadRight(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Remove(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Remove(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Replace(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Replace(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::ReplaceCore(System.String,System.String,System.Globalization.CompareInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::ReplaceCore(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.CompareInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Replace(System.Char,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Replace(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::ReplaceHelper(System.Int32,System.String,System.ReadOnlySpan`1&lt;System.Int32&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::ReplaceLineEndings()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::ReplaceLineEndings(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::ReplaceLineEndingsCore(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::IndexOfNewlineChar(System.ReadOnlySpan`1&lt;System.Char&gt;,System.String,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::ReplaceLineEndingsWithLineFeed()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String[] System.String::Split(System.Char,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String[] System.String::Split(System.Char,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String[] System.String::Split(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String[] System.String::Split(System.Char[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String[] System.String::SplitInternal(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String[] System.String::Split(System.String,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String[] System.String::Split(System.String,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String[] System.String::Split(System.String[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String[] System.String::Split(System.String[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String[] System.String::SplitInternal(System.String,System.String[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String[] System.String::CreateSplitArrayOfThisAsSoleValue(System.StringSplitOptions,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String[] System.String::SplitInternal(System.String,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String[] System.String::SplitWithoutPostProcessing(System.ReadOnlySpan`1&lt;System.Int32&gt;,System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String[] System.String::SplitWithPostProcessing(System.ReadOnlySpan`1&lt;System.Int32&gt;,System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Int32,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::MakeSeparatorListAny(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::MakeSeparatorListVectorized(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;,System.Char,System.Char,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::MakeSeparatorList(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::MakeSeparatorListAny(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.String&gt;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;,System.Collections.Generic.ValueListBuilder`1&lt;System.Int32&gt;&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::CheckStringSplitOptions(System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Substring(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Substring(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Void System.String::ThrowSubstringArgumentOutOfRange(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::InternalSubString(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::ToLower()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::ToLower(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::ToLowerInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::ToUpper()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::ToUpper(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::ToUpperInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Trim()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Trim(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::Trim(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::TrimStart()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::TrimStart(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::TrimStart(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::TrimEnd()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::TrimEnd(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::TrimEnd(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::TrimWhiteSpaceHelper(System.Text.TrimType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::TrimHelper(System.Char*,System.Int32,System.Text.TrimType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.String System.String::CreateTrimmedString(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::Contains(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::Contains(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::Contains(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Boolean System.String::Contains(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::IndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::IndexOfCharOrdinalIgnoreCase(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::IndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::IndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::LastIndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::LastIndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::&lt;GetNonRandomizedHashCodeOrdinalIgnoreCase&gt;g__GetNonRandomizedHashCodeOrdinalIgnoreCaseSlow|45_0(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Property:System.Char System.String::Chars(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Char System.String::get_Chars(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Property:System.Int32 System.String::Length()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefsWithImplicitThis()" e="Method:System.Int32 System.String::get_Length()" />
	<edge b="Field:T[] System.Collections.Generic.ValueListBuilder`1::_arrayFromPool" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.SpanDebugView`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.Span`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="ModuleRef:QCall" />
	<edge b="Method:T[] System.Span`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::GetPinnableReference()" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.ArraySegment`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.SpanDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.ReadOnlySpan`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::GetPinnableReference()" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.String::IsInterned(System.Runtime.CompilerServices.StringHandleOnStack)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Void System.String::Intern(System.Runtime.CompilerServices.StringHandleOnStack)" e="ModuleRef:QCall" />
	<edge b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Buffers.SearchValuesDebugView`1::get_Values()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.Module System.Type::get_Module()" e="Method:System.Reflection.Module Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Module()" />
	<edge mark="1" b="Method:System.Reflection.Module Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Module()" e="Property:System.Reflection.Module Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::Module()" />
	<edge mark="1" b="Method:System.Reflection.Module Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Module()" e="Method:System.Reflection.Module System.Type::get_Module()" />
	<edge mark="1" b="Method:System.Reflection.Module Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Module()" e="TypeDef:System.Reflection.Module" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::MethodWithRefAndImplicitThis(System.Type&amp;,System.Type&amp;,System.Type&amp;)" e="TypeSpec:System.Type&amp;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::MethodWithRefAndImplicitThis(System.Type&amp;,System.Type&amp;,System.Type&amp;)" e="TypeSpec:System.Type&amp;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::MethodWithRefAndImplicitThis(System.Type&amp;,System.Type&amp;,System.Type&amp;)" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::MethodWithRefAndImplicitThis(System.Type&amp;,System.Type&amp;,System.Type&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.Assembly Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Assembly()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_AssemblyQualifiedName()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_BaseType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_FullName()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Guid Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_GUID()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.Module Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Module()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Namespace()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_UnderlyingSystemType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Name()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.ConstructorInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetConstructors(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Object[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetCustomAttributes(System.Boolean)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Object[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetElementType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.EventInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.EventInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetEvents(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.FieldInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetField(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.FieldInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetFields(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetInterface(System.String,System.Boolean)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetInterfaces()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.MemberInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMembers(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.MethodInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.PropertyInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetProperties(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsDefined(System.Type,System.Boolean)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.TypeAttributes Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetAttributeFlagsImpl()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.ConstructorInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.MethodInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.PropertyInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::HasElementTypeImpl()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsArrayImpl()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsByRefImpl()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsCOMObjectImpl()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsPointerImpl()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsPrimitiveImpl()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::.ctor()" e="Method:System.Void System.Type::.ctor()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsPrimitiveImpl()" e="Method:System.Boolean System.Type::IsPrimitiveImpl()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsPrimitiveImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsPrimitiveImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsPrimitiveImpl()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsPointerImpl()" e="Method:System.Boolean System.Type::IsPointerImpl()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsPointerImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsPointerImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsPointerImpl()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsCOMObjectImpl()" e="Method:System.Boolean System.Type::IsCOMObjectImpl()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsCOMObjectImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsCOMObjectImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsCOMObjectImpl()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsByRefImpl()" e="Method:System.Boolean System.Type::IsByRefImpl()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsByRefImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsByRefImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsByRefImpl()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsArrayImpl()" e="Method:System.Boolean System.Type::IsArrayImpl()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsArrayImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsArrayImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsArrayImpl()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::HasElementTypeImpl()" e="Method:System.Boolean System.Type::HasElementTypeImpl()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::HasElementTypeImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::HasElementTypeImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::HasElementTypeImpl()" />
	<edge b="Method:System.Reflection.PropertyInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.PropertyInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.PropertyInfo System.Type::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.PropertyInfo" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.PropertyInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge b="Method:System.Reflection.MethodInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.MethodInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.MethodInfo System.Type::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.MethodInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge b="Method:System.Reflection.ConstructorInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.ConstructorInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.ConstructorInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetAttributeFlagsImpl()" e="Method:System.Reflection.TypeAttributes System.Type::GetAttributeFlagsImpl()" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetAttributeFlagsImpl()" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetAttributeFlagsImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.TypeAttributes Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetAttributeFlagsImpl()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsDefined(System.Type,System.Boolean)" e="Method:System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsDefined(System.Type,System.Boolean)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsDefined(System.Type,System.Boolean)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsDefined(System.Type,System.Boolean)" />
	<edge b="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.Object[]" />
	<edge b="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge b="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.String[]" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="Method:System.Object System.Type::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetProperties(System.Reflection.BindingFlags)" e="Method:System.Reflection.PropertyInfo[] System.Type::GetProperties(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.PropertyInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetProperties(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.PropertyInfo[]" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetProperties(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.PropertyInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetProperties(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetNestedTypes(System.Reflection.BindingFlags)" e="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Type[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetNestedTypes(System.Reflection.BindingFlags)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Type[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetNestedTypes(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetNestedType(System.String,System.Reflection.BindingFlags)" e="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetNestedType(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetNestedType(System.String,System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMethods(System.Reflection.BindingFlags)" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.MethodInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMethods(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMethods(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.MethodInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.MemberInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMembers(System.Reflection.BindingFlags)" e="Method:System.Reflection.MemberInfo[] System.Type::GetMembers(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.MemberInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMembers(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.MemberInfo[]" />
	<edge mark="1" b="Method:System.Reflection.MemberInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMembers(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.MemberInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMembers(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetInterfaces()" e="Method:System.Type[] System.Type::GetInterfaces()" />
	<edge b="Method:System.Type[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetInterfaces()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Type[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetInterfaces()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetInterfaces()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetInterface(System.String,System.Boolean)" e="Method:System.Type System.Type::GetInterface(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetInterface(System.String,System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetInterface(System.String,System.Boolean)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetInterface(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetFields(System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo[] System.Type::GetFields(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.FieldInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetFields(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.FieldInfo[]" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetFields(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.FieldInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetFields(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetField(System.String,System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo System.Type::GetField(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetField(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.FieldInfo" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetField(System.String,System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.FieldInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetField(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.EventInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetEvents(System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo[] System.Type::GetEvents(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.EventInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetEvents(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.EventInfo[]" />
	<edge mark="1" b="Method:System.Reflection.EventInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetEvents(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.EventInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetEvents(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.EventInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetEvent(System.String,System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.EventInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetEvent(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Reflection.EventInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetEvent(System.String,System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.EventInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetElementType()" e="Method:System.Type System.Type::GetElementType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetElementType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetElementType()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetElementType()" />
	<edge mark="1" b="Method:System.Object[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetCustomAttributes(System.Type,System.Boolean)" e="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge b="Method:System.Object[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetCustomAttributes(System.Type,System.Boolean)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.Object[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetCustomAttributes(System.Type,System.Boolean)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Object[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Object[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetCustomAttributes(System.Boolean)" e="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Boolean)" />
	<edge b="Method:System.Object[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetCustomAttributes(System.Boolean)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.Object[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetCustomAttributes(System.Boolean)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Object[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetCustomAttributes(System.Boolean)" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetConstructors(System.Reflection.BindingFlags)" e="Method:System.Reflection.ConstructorInfo[] System.Type::GetConstructors(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.ConstructorInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetConstructors(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.ConstructorInfo[]" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetConstructors(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.ConstructorInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetConstructors(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Name()" e="Property:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::Name()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Name()" e="Method:System.String System.Reflection.MemberInfo::get_Name()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Name()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Name()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Name()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_UnderlyingSystemType()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::UnderlyingSystemType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_UnderlyingSystemType()" e="Method:System.Type System.Type::get_UnderlyingSystemType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_UnderlyingSystemType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_UnderlyingSystemType()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_UnderlyingSystemType()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Namespace()" e="Property:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::Namespace()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Namespace()" e="Method:System.String System.Type::get_Namespace()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Namespace()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Namespace()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Namespace()" />
	<edge mark="1" b="Method:System.Guid Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_GUID()" e="Property:System.Guid Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GUID()" />
	<edge mark="1" b="Method:System.Guid Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_GUID()" e="Method:System.Guid System.Type::get_GUID()" />
	<edge mark="1" b="Method:System.Guid Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_GUID()" e="TypeDef:System.Guid" />
	<edge mark="1" b="Method:System.Guid Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_GUID()" e="TypeDef:System.Guid" />
	<edge mark="1" b="Method:System.Guid Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_GUID()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Guid Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_GUID()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_FullName()" e="Property:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::FullName()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_FullName()" e="Method:System.String System.Type::get_FullName()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_FullName()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_FullName()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_FullName()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_BaseType()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::BaseType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_BaseType()" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_BaseType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_BaseType()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_BaseType()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_AssemblyQualifiedName()" e="Property:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_AssemblyQualifiedName()" e="Method:System.String System.Type::get_AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_AssemblyQualifiedName()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_AssemblyQualifiedName()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.Reflection.Assembly Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Assembly()" e="Property:System.Reflection.Assembly Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::Assembly()" />
	<edge mark="1" b="Method:System.Reflection.Assembly Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Assembly()" e="Method:System.Reflection.Assembly System.Type::get_Assembly()" />
	<edge mark="1" b="Method:System.Reflection.Assembly Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Assembly()" e="TypeDef:System.Reflection.Assembly" />
	<edge mark="1" b="Method:System.Reflection.Assembly Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Assembly()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.Assembly Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Assembly()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.Assembly Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Assembly()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_AssemblyQualifiedName()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_BaseType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_FullName()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Guid Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_GUID()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.Module Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Module()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Namespace()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_UnderlyingSystemType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.String Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Name()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.ConstructorInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetConstructors(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Object[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetCustomAttributes(System.Boolean)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Object[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetElementType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.EventInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.EventInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetEvents(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.FieldInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetField(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.FieldInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetFields(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetInterface(System.String,System.Boolean)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetInterfaces()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.MemberInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMembers(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.MethodInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Type[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.PropertyInfo[] Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetProperties(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Object Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsDefined(System.Type,System.Boolean)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.TypeAttributes Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetAttributeFlagsImpl()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.ConstructorInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.MethodInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Reflection.PropertyInfo Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::HasElementTypeImpl()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsArrayImpl()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsByRefImpl()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsCOMObjectImpl()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsPointerImpl()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType:test.exe" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::IsPrimitiveImpl()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssigningToRefParameter_Mismatch(System.Type,System.Type&amp;)" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssigningToRefParameter_Mismatch(System.Type,System.Type&amp;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssigningToRefParameter(System.Type,System.Type&amp;)" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssigningToRefParameter(System.Type,System.Type&amp;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefParameter_Mismatch(System.Type&amp;)" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefParameter_Mismatch(System.Type&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefParameter_Mismatch(System.Type&amp;)" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefParameter(System.Type&amp;)" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefParameter(System.Type&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestPassingRefParameter(System.Type&amp;)" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_Ovewrite()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_Ovewrite()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_Ovewrite()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_Ovewrite()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_Ovewrite()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueOut(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueOut(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_Ovewrite()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_DeclaredBefore()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_DeclaredBefore()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_DeclaredBefore()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueOut(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueOut(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_DeclaredBefore()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueOut(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueOut(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnInput_PassedTwice()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnInput_PassedTwice()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnInput_PassedTwice()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::GetTypeWithFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::GetTypeWithFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnInput_PassedTwice()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueFromValue(System.Type,System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueFromValue(System.Type,System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnInput_PassedTwice()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueFromValue(System.Type,System.Type&amp;)" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueFromValue(System.Type,System.Type&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueFromValue(System.Type,System.Type&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::GetTypeWithFields()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnInput()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnInput()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnInput()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::GetTypeWithFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::GetTypeWithFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnInput()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnInput()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnOutput_PassedTwice()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnOutput_PassedTwice()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnOutput_PassedTwice()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueFromValue(System.Type,System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueFromValue(System.Type,System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnOutput_PassedTwice()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnOutput()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnOutput()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnOutput()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter_MismatchOnOutput()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_PassedTwice()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_PassedTwice()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_PassedTwice()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueFromValue(System.Type,System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValueFromValue(System.Type,System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromOutParameter_PassedTwice()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TryGetAnnotatedValue(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestReadFromRefParameter()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignParameterToAnnotatedRefParameter(System.Type&amp;,System.Type)" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignParameterToAnnotatedRefParameter(System.Type&amp;,System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignParameterToAnnotatedRefParameter(System.Type&amp;,System.Type)" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignStaticToAnnotatedRefParameter(System.Type&amp;)" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignStaticToAnnotatedRefParameter(System.Type&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignStaticToAnnotatedRefParameter(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/TestTypeWithRequires:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/TestTypeWithRequires:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignStaticToAnnotatedRefParameter(System.Type&amp;)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignStaticToAnnotatedRefParameter(System.Type&amp;)" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignStaticToAnnotatedRefParameter(System.Type&amp;)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/TestTypeWithRequires::Requires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignStaticToAnnotatedRefParameter(System.Type&amp;)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignStaticToAnnotatedRefParameter(System.Type&amp;)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignStaticToAnnotatedRefParameter(System.Type&amp;)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignStaticToAnnotatedRefParameter(System.Type&amp;)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignStaticToAnnotatedRefParameter(System.Type&amp;)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow::TestAssignStaticToAnnotatedRefParameter(System.Type&amp;)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/TestTypeWithRequires::Requires()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::get_Item(System.Int32)" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::typeWithFieldsField" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::typeWithFieldsField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicFields::typeWithFieldsField" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods::get_Item(System.Int32)" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods::typeWithMethodsField" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods::typeWithMethodsField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/RefIndexer_PublicMethods::typeWithMethodsField" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Reflection.Module Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::get_Module()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::MethodWithRefAndImplicitThis(System.Type&amp;,System.Type&amp;,System.Type&amp;)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::MethodWithRefAndImplicitThis(System.Type&amp;,System.Type&amp;,System.Type&amp;)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::MethodWithRefAndImplicitThis(System.Type&amp;,System.Type&amp;,System.Type&amp;)" e="Field:System.Int32 System.Int32::MaxValue" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefParameterDataFlow/InheritsFromType::MethodWithRefAndImplicitThis(System.Type&amp;,System.Type&amp;,System.Type&amp;)" e="Field:System.Int32 System.Int32::MinValue" />
	<edge b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToTruncating(System.UInt64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToTruncating(System.Single,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToTruncating(System.SByte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToTruncating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToTruncating(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToTruncating(System.Double,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToTruncating(System.Decimal,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToSaturating(System.UInt64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToSaturating(System.Single,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToSaturating(System.SByte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToSaturating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToSaturating(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToSaturating(System.Double,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToSaturating(System.Decimal,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToChecked(System.UInt64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToChecked(System.Single,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToChecked(System.SByte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToChecked(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToChecked(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToChecked(System.Double,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToChecked(System.Decimal,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
</dependencies>