<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOf()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOf()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOfFromGeneric&lt;Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOfFromGeneric&lt;Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow/TestType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow/TestType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOfFromGeneric&lt;Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOfFromGeneric()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandleFromGeneric&lt;Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandleFromGeneric&lt;Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandleFromGeneric&lt;Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandleFromGeneric()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestUnsupportedPatterns(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestUnsupportedPatterns(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestNull()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestNull()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestNoValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestNoValue()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestNoValue()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestNoValue()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestNoValue()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestNoValue()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestNoValue()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestNoValue()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestNull()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestNull()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestNull()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestNull()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestNull()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestUnsupportedPatterns(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestUnsupportedPatterns(System.Type)" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestUnsupportedPatterns(System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestUnsupportedPatterns(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandleFromGeneric()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandleFromGeneric()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandleFromGeneric()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandleFromGeneric()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandleFromGeneric()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandleFromGeneric()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandleFromGeneric()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandleFromGeneric()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandleFromGeneric()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow/TestTypeWithRUCOnMembers:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow/TestTypeWithRUCOnMembers:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow/TestTypeWithRUCOnMembers::PublicMethodWithRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestGetTypeHandle()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow/TestTypeWithRUCOnMembers::PublicMethodWithRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOfFromGeneric()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOfFromGeneric()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOfFromGeneric()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOfFromGeneric()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOfFromGeneric()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOf()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOf()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOf()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOf()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOf()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow/TestTypeWithRUCOnMembers:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOf()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOf()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOf()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOf()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOf()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow/TestTypeWithRUCOnMembers::PublicMethodWithRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOf()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOf()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOf()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOf()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOf()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeHandleDataFlow::TestTypeOf()" e="Method:System.Int32 System.Object::GetHashCode()" />
</dependencies>