<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToFinally()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToFinally()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToAfterFinally()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToAfterFinally()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChain()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChain()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChainWithPostFinallyState()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChainWithPostFinallyState()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToCatch()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToCatch()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToFinally()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToFinally()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToAfterTry()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToAfterTry()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToAfterFinally()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToAfterFinally()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyFlowsToAfterFinally()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyFlowsToAfterFinally()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithFinally()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithFinally()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ControlFlowsOutOfMultipleFinally()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ControlFlowsOutOfMultipleFinally()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithCatch()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithCatch()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTry()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTry()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTryWithFinally()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTryWithFinally()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInFinally()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInFinally()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TestCatchesHaveSeparateState()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TestCatchesHaveSeparateState()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithBranchToFirstBlock()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithBranchToFirstBlock()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithBranchToFirstBlockAndEnclosingTryCatchState()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithBranchToFirstBlockAndEnclosingTryCatchState()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithBranchToFirstBlock()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithBranchToFirstBlock()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithBranchToFirstBlockAndReassignment()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithBranchToFirstBlockAndReassignment()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithNonSimplePredecessor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithNonSimplePredecessor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithNonSimplePredecessor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithNonSimplePredecessor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyInTryWithPredecessor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyInTryWithPredecessor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinally()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinally()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ChangeInFinallyNestedInFinally()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ChangeInFinallyNestedInFinally()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinallyWithPredecessor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinallyWithPredecessor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilter()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterStateChange()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterStateChange()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithBranch()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithBranch()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithException()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithException()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithException()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithException()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithException()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithException()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow/Exception1" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow/Exception1" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithException()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithException()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithException()" e="Method:System.Boolean System.Type::op_Inequality(System.Type,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithException()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithException()" e="Method:System.Boolean System.Type::op_Equality(System.Type,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithException()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithException()" e="Method:System.Boolean System.Type::op_Equality(System.Type,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithException()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithException()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllTrue(System.Type)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllTrue(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithException()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllTrue(System.Type)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllTrue(System.Type)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithBranch()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithBranch()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithBranch()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithBranch()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithBranch()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithBranch()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithBranch()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithBranch()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithBranch()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithBranch()" e="Method:System.Boolean System.Type::op_Equality(System.Type,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithBranch()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithBranch()" e="Method:System.Boolean System.Type::op_Equality(System.Type,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithBranch()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithBranch()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllTrue(System.Type)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllTrue(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterWithBranch()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow/Exception1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllFalse(System.Type)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllFalse(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllTrue(System.Type)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllTrue(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllFalse2(System.Type)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllFalse2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll4(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll4(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll5(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll5(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionMultipleFilters()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll6(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll6(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll6(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll5(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll4(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllFalse2(System.Type)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllFalse2(System.Type)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllFalse(System.Type)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllFalse(System.Type)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterStateChange()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterStateChange()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterStateChange()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterStateChange()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterStateChange()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterStateChange()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllTrue(System.Type)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllTrue(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterStateChange()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilterStateChange()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilter()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilter()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilter()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilter()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilter()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilter()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllTrue(System.Type)" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAllTrue(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ExceptionFilter()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinallyWithPredecessor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinallyWithPredecessor()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinallyWithPredecessor()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinallyWithPredecessor()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinallyWithPredecessor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinallyWithPredecessor()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinallyWithPredecessor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinallyWithPredecessor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ChangeInFinallyNestedInFinally()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ChangeInFinallyNestedInFinally()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ChangeInFinallyNestedInFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ChangeInFinallyNestedInFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ChangeInFinallyNestedInFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ChangeInFinallyNestedInFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ChangeInFinallyNestedInFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ChangeInFinallyNestedInFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll4(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll4(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinally()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinally()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyInTryWithPredecessor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyInTryWithPredecessor()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyInTryWithPredecessor()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyInTryWithPredecessor()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyInTryWithPredecessor()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyInTryWithPredecessor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyInTryWithPredecessor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithNonSimplePredecessor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithNonSimplePredecessor()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithNonSimplePredecessor()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithNonSimplePredecessor()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithNonSimplePredecessor()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithNonSimplePredecessor()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithNonSimplePredecessor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithNonSimplePredecessor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithNonSimplePredecessor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithNonSimplePredecessor()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithNonSimplePredecessor()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithNonSimplePredecessor()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithNonSimplePredecessor()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithNonSimplePredecessor()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithNonSimplePredecessor()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithNonSimplePredecessor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithNonSimplePredecessor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithBranchToFirstBlockAndReassignment()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithBranchToFirstBlockAndReassignment()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithBranchToFirstBlockAndReassignment()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithBranchToFirstBlockAndReassignment()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithBranchToFirstBlockAndReassignment()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithBranchToFirstBlockAndReassignment()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithBranchToFirstBlockAndReassignment()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithBranchToFirstBlock()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithBranchToFirstBlock()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithBranchToFirstBlock()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithBranchToFirstBlock()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithBranchToFirstBlock()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchWithBranchToFirstBlock()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithBranchToFirstBlockAndEnclosingTryCatchState()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithBranchToFirstBlockAndEnclosingTryCatchState()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithBranchToFirstBlockAndEnclosingTryCatchState()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithBranchToFirstBlockAndEnclosingTryCatchState()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithBranchToFirstBlockAndEnclosingTryCatchState()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithBranchToFirstBlockAndEnclosingTryCatchState()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithBranchToFirstBlockAndEnclosingTryCatchState()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithBranchToFirstBlock()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithBranchToFirstBlock()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithBranchToFirstBlock()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithBranchToFirstBlock()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyWithBranchToFirstBlock()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TestCatchesHaveSeparateState()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TestCatchesHaveSeparateState()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TestCatchesHaveSeparateState()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow/Exception1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TestCatchesHaveSeparateState()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow/Exception2" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow/Exception2" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TestCatchesHaveSeparateState()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TestCatchesHaveSeparateState()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TestCatchesHaveSeparateState()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInFinally()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInFinally()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInFinally()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicConstructors()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicConstructors()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicConstructors()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicConstructors()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTryWithFinally()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTryWithFinally()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTryWithFinally()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTryWithFinally()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTryWithFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicConstructors()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicConstructors()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTryWithFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTryWithFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTryWithFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTryWithFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTry()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTry()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTry()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTry()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTry()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTry()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchInTry()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithCatch()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithCatch()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithCatch()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithCatch()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithCatch()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithCatch()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithCatch()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithCatch()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithCatch()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicEvents()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicEvents()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithCatch()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicConstructors()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicConstructors()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithCatch()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithCatch()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicEvents()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicEvents()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ControlFlowsOutOfMultipleFinally()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ControlFlowsOutOfMultipleFinally()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ControlFlowsOutOfMultipleFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ControlFlowsOutOfMultipleFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ControlFlowsOutOfMultipleFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ControlFlowsOutOfMultipleFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ControlFlowsOutOfMultipleFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ControlFlowsOutOfMultipleFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicEvents()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicEvents()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::ControlFlowsOutOfMultipleFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithFinally()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithFinally()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicEvents()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicEvents()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicConstructors()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicConstructors()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::NestedWithFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow/Exception1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow/Exception2" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll4(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll4(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicEvents()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicEvents()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll5(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll5(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll6(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll6(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicConstructors()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicConstructors()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll7(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll7(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToMultipleCatchAndFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll7(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyFlowsToAfterFinally()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyFlowsToAfterFinally()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyFlowsToAfterFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyFlowsToAfterFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyFlowsToAfterFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyFlowsToAfterFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToAfterFinally()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToAfterFinally()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToAfterFinally()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToAfterFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToAfterFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToAfterFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToAfterFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToAfterTry()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToAfterTry()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToAfterTry()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToAfterTry()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToAfterTry()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToAfterTry()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToAfterTry()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToFinally()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToFinally()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToFinally()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::CatchFlowsToFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToCatch()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToCatch()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToCatch()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToCatch()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToCatch()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToCatch()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToCatch()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChainWithPostFinallyState()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChainWithPostFinallyState()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChainWithPostFinallyState()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChainWithPostFinallyState()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChainWithPostFinallyState()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChainWithPostFinallyState()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChainWithPostFinallyState()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChainWithPostFinallyState()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll3(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChainWithPostFinallyState()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll4(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll4(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChain()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChain()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChain()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChain()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChain()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChain()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::FinallyChain()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll1(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicEvents()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicEvents()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll2(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleFinallyPaths()" e="Method:System.Void System.Exception::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicConstructors()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicConstructors()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::MultipleTryExits()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToAfterFinally()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToAfterFinally()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToAfterFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToAfterFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToAfterFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToAfterFinally()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToAfterFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToFinally()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToFinally()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToFinally()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::GetWithPublicProperties()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::TryFlowsToFinally()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ExceptionalDataFlow" />
</dependencies>