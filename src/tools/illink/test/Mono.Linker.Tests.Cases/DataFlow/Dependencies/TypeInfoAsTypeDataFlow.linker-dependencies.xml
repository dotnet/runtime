<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow/TestType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::Main()" e="Method:System.Reflection.TypeInfo System.Reflection.IntrospectionExtensions::GetTypeInfo(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestNoAnnotations(System.Reflection.TypeInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestNoAnnotations(System.Reflection.TypeInfo)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::Main()" e="Method:System.Reflection.TypeInfo System.Reflection.IntrospectionExtensions::GetTypeInfo(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithAnnotations(System.Reflection.TypeInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithAnnotations(System.Reflection.TypeInfo)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithNull()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithNull()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithNoValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithNoValue()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithNoValue()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithNoValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithNoValue()" e="TypeDef:System.Reflection.TypeInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithNoValue()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithNoValue()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithNoValue()" e="Method:System.Reflection.TypeInfo System.Reflection.IntrospectionExtensions::GetTypeInfo(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithNoValue()" e="Method:System.Type System.Reflection.TypeInfo::AsType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithNoValue()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithNull()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithNull()" e="TypeDef:System.Reflection.TypeInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithNull()" e="Method:System.Type System.Reflection.TypeInfo::AsType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithNull()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithAnnotations(System.Reflection.TypeInfo)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithAnnotations(System.Reflection.TypeInfo)" e="Method:System.Type System.Reflection.TypeInfo::AsType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithAnnotations(System.Reflection.TypeInfo)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithAnnotations(System.Reflection.TypeInfo)" e="Method:System.Type System.Reflection.TypeInfo::AsType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithAnnotations(System.Reflection.TypeInfo)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithAnnotations(System.Reflection.TypeInfo)" e="Method:System.Type System.Reflection.TypeInfo::AsType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestWithAnnotations(System.Reflection.TypeInfo)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestNoAnnotations(System.Reflection.TypeInfo)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestNoAnnotations(System.Reflection.TypeInfo)" e="Method:System.Type System.Reflection.TypeInfo::AsType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestNoAnnotations(System.Reflection.TypeInfo)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestNoAnnotations(System.Reflection.TypeInfo)" e="Method:System.Type System.Reflection.TypeInfo::AsType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.TypeInfoAsTypeDataFlow::TestNoAnnotations(System.Reflection.TypeInfo)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
</dependencies>