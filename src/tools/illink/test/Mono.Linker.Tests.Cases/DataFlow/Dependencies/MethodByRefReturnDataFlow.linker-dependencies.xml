<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::ReturnAnnotatedTypeReferenceAsUnannotated()" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::ReturnAnnotatedTypeReferenceAsUnannotated()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReference()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReference()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReference()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReference()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToCapturedAnnotatedTypeReference()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToCapturedAnnotatedTypeReference()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceWithRequirements()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceWithRequirements()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::get_AnnotatedTypeReferenceAsUnannotatedProperty()" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::get_AnnotatedTypeReferenceAsUnannotatedProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReferenceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReferenceProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToCapturedAnnotatedTypeReferenceProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToCapturedAnnotatedTypeReferenceProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::TestCompoundAssignment(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::TestCompoundAssignment(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::TestCompoundAssignmentCapture(System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::TestCompoundAssignmentCapture(System.Type,System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::TestCompoundAssignmentMultipleCaptures(System.Type,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::TestCompoundAssignmentMultipleCaptures(System.Type,System.Type,System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::TestCompoundAssignmentMultipleCaptures(System.Type,System.Type,System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::TestCompoundAssignmentMultipleCaptures(System.Type,System.Type,System.Boolean)" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetRefReturnInt(System.Type)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetRefReturnInt(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::TestCompoundAssignmentMultipleCaptures(System.Type,System.Type,System.Boolean)" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetRefReturnInt(System.Type)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetRefReturnInt(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetRefReturnInt(System.Type)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetRefReturnInt(System.Type)" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::intField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::intField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::intField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::TestCompoundAssignmentCapture(System.Type,System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::TestCompoundAssignmentCapture(System.Type,System.Boolean)" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetRefReturnInt(System.Type)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetRefReturnInt(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::TestCompoundAssignment(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::TestCompoundAssignment(System.Type)" e="Method:System.Int32&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetRefReturnInt(System.Type)" />
	<edge mark="1" b="Method:System.Int32&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetRefReturnInt(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToCapturedAnnotatedTypeReferenceProperty()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToCapturedAnnotatedTypeReferenceProperty()" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::get_AnnotatedTypeReferenceAsAnnotatedProperty()" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::get_AnnotatedTypeReferenceAsAnnotatedProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToCapturedAnnotatedTypeReferenceProperty()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToCapturedAnnotatedTypeReferenceProperty()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetWithPublicFields()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetWithPublicMethods()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::get_AnnotatedTypeReferenceAsAnnotatedProperty()" e="Property:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AnnotatedTypeReferenceAsAnnotatedProperty()" />
	<edge b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::get_AnnotatedTypeReferenceAsAnnotatedProperty()" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::get_AnnotatedTypeReferenceAsAnnotatedProperty()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::_annotatedField" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::_annotatedField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::_annotatedField" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReferenceProperty()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReferenceProperty()" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::get_AnnotatedTypeReferenceAsAnnotatedProperty()" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::get_AnnotatedTypeReferenceAsAnnotatedProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReferenceProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow/TestTypeWithRequires" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow/TestTypeWithRequires" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReferenceProperty()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReferenceProperty()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReferenceProperty()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReferenceProperty()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow/TestTypeWithRequires::Requires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReferenceProperty()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReferenceProperty()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReferenceProperty()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReferenceProperty()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReferenceProperty()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReferenceProperty()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow/TestTypeWithRequires::Requires()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceProperty()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceProperty()" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceProperty()" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::get_AnnotatedTypeReferenceAsAnnotatedProperty()" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::get_AnnotatedTypeReferenceAsAnnotatedProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow/TestTypeWithRequires" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceProperty()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceProperty()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceProperty()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceProperty()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow/TestTypeWithRequires::Requires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceProperty()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceProperty()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceProperty()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceProperty()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceProperty()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceProperty()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::get_AnnotatedTypeReferenceAsUnannotatedProperty()" e="Property:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AnnotatedTypeReferenceAsUnannotatedProperty()" />
	<edge b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::get_AnnotatedTypeReferenceAsUnannotatedProperty()" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::get_AnnotatedTypeReferenceAsUnannotatedProperty()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceWithRequirements()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceWithRequirements()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceWithRequirements()" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::ReturnAnnotatedTypeWithRequirements(System.Type)" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::ReturnAnnotatedTypeWithRequirements(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReferenceWithRequirements()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::ReturnAnnotatedTypeWithRequirements(System.Type)" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::ReturnAnnotatedTypeWithRequirements(System.Type)" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToCapturedAnnotatedTypeReference()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToCapturedAnnotatedTypeReference()" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::ReturnAnnotatedTypeReferenceAsAnnotated()" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::ReturnAnnotatedTypeReferenceAsAnnotated()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToCapturedAnnotatedTypeReference()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToCapturedAnnotatedTypeReference()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetWithPublicFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::GetWithPublicFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::ReturnAnnotatedTypeReferenceAsAnnotated()" e="TypeSpec:System.Type&amp;" />
	<edge b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::ReturnAnnotatedTypeReferenceAsAnnotated()" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::ReturnAnnotatedTypeReferenceAsAnnotated()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReference()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReference()" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::ReturnAnnotatedTypeReferenceAsAnnotated()" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::ReturnAnnotatedTypeReferenceAsAnnotated()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReference()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow/TestTypeWithRequires" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReference()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReference()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReference()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReference()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow/TestTypeWithRequires::Requires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReference()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReference()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReference()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReference()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReference()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignDirectlyToAnnotatedTypeReference()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReference()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReference()" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReference()" e="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::ReturnAnnotatedTypeReferenceAsAnnotated()" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::ReturnAnnotatedTypeReferenceAsAnnotated()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReference()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow/TestTypeWithRequires" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReference()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReference()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReference()" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReference()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow/TestTypeWithRequires::Requires()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReference()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReference()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReference()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReference()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReference()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::AssignToAnnotatedTypeReference()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::ReturnAnnotatedTypeReferenceAsUnannotated()" e="TypeSpec:System.Type&amp;" />
	<edge b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::ReturnAnnotatedTypeReferenceAsUnannotated()" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Type&amp; Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::ReturnAnnotatedTypeReferenceAsUnannotated()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.MethodByRefReturnDataFlow::_annotatedField" />
	<edge b="Field:T[] System.SpanDebugView`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="ModuleRef:QCall" />
	<edge b="Method:T[] System.ReadOnlySpan`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.Span`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Span`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::GetPinnableReference()" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.ArraySegment`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::GetPinnableReference()" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.SpanDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
</dependencies>