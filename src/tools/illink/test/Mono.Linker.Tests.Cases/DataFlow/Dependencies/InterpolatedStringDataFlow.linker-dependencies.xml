<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::TestInterpolatedStringHandler(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::TestInterpolatedStringHandler(System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::TestUnknownInterpolatedString(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::TestUnknownInterpolatedString(System.String)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::TestUnknownInterpolatedString(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::TestUnknownInterpolatedString(System.String)" e="Method:System.Type System.Type::GetType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::TestInterpolatedStringHandler(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::TestInterpolatedStringHandler(System.Boolean)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::TestInterpolatedStringHandler(System.Boolean)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::TestInterpolatedStringHandler(System.Boolean)" e="TypeDef:System.Diagnostics.Debug/AssertInterpolatedStringHandler" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::TestInterpolatedStringHandler(System.Boolean)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::TestInterpolatedStringHandler(System.Boolean)" e="Method:System.Void System.Diagnostics.Debug/AssertInterpolatedStringHandler::.ctor(System.Int32,System.Int32,System.Boolean,System.Boolean&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::TestInterpolatedStringHandler(System.Boolean)" e="Method:System.Void System.Diagnostics.Debug/AssertInterpolatedStringHandler::AppendLiteral(System.String)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::TestInterpolatedStringHandler(System.Boolean)" e="MethodSpec:System.Void System.Diagnostics.Debug/AssertInterpolatedStringHandler::AppendFormatted&lt;System.Boolean&gt;(!!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.InterpolatedStringDataFlow::TestInterpolatedStringHandler(System.Boolean)" e="Method:System.Void System.Diagnostics.Debug::Assert(System.Boolean,System.Diagnostics.Debug/AssertInterpolatedStringHandler&amp;)" />
</dependencies>