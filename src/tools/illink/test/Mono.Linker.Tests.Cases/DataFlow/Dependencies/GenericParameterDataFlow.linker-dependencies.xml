<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestBaseTypeGenericRequirements()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestBaseTypeGenericRequirements()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestDeepNestedTypesWithGenerics()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestDeepNestedTypesWithGenerics()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestInterfaceTypeGenericRequirements()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestInterfaceTypeGenericRequirements()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestTypeGenericRequirementsOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestTypeGenericRequirementsOnMembers()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestPartialInstantiationTypes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestPartialInstantiationTypes()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnMethod()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNewConstraintSatisfiesParameterlessConstructor&lt;System.Object&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNewConstraintSatisfiesParameterlessConstructor&lt;System.Object&gt;()" e="TypeDef:System.Object" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNewConstraintSatisfiesParameterlessConstructor&lt;System.Object&gt;()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNewConstraintSatisfiesParameterlessConstructor&lt;System.Object&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNewConstraintSatisfiesParameterlessConstructor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestStructConstraintSatisfiesParameterlessConstructor&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestStruct&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestStructConstraintSatisfiesParameterlessConstructor&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestStruct&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestStruct" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestStruct" e="Module:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestStructConstraintSatisfiesParameterlessConstructor&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestStruct&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestStructConstraintSatisfiesParameterlessConstructor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestUnmanagedConstraintSatisfiesParameterlessConstructor&lt;System.Byte&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestUnmanagedConstraintSatisfiesParameterlessConstructor&lt;System.Byte&gt;()" e="TypeDef:System.Byte" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestUnmanagedConstraintSatisfiesParameterlessConstructor&lt;System.Byte&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestUnmanagedConstraintSatisfiesParameterlessConstructor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestEnumConstraintSatisfiesPublicFields&lt;System.Enum&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestEnumConstraintSatisfiesPublicFields&lt;System.Enum&gt;()" e="TypeDef:System.Enum" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestEnumConstraintSatisfiesPublicFields&lt;System.Enum&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestEnumConstraintSatisfiesPublicFields()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToField()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToField()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToReturnValue()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" e="Module:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringType()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringTypeInstance&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringTypeInstance&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringTypeInstance&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringTypeInstance()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCMethod&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::StaticMethod()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::StaticMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::StaticMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::StaticMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::StaticMethodRequiresPublicMethods&lt;T&gt;()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::StaticMethodRequiresPublicMethods&lt;T&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::StaticMethodRequiresPublicMethods()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::StaticMethodRequiresPublicMethods()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::StaticMethodRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::StaticMethodRequiresPublicMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;U&gt;::StaticMethodRequiresPublicMethods&lt;T&gt;()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;U&gt;::StaticMethodRequiresPublicMethods&lt;T&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;U&gt;::StaticMethodRequiresPublicMethods()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;U&gt;::StaticMethodRequiresPublicMethods()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;U&gt;" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;U&gt;" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;U&gt;::StaticMethodRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::StaticMethodRequiresPublicMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;System.Int32&gt;::StaticMethodRequiresPublicMethods&lt;System.String&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;System.Int32&gt;::StaticMethodRequiresPublicMethods&lt;System.String&gt;()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Intern(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::IsInterned(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::Compare(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::CompareTo(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::EndsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::EndsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::EndsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::EndsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::Equals(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::Equals(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::Equals(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::Equals(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::op_Equality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::op_Inequality(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::GetHashCode(System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::GetHashCode(System.ReadOnlySpan`1&lt;System.Char&gt;,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::StartsWith(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::StartsWith(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::StartsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::StartsWith(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Create(System.Int32,TState,System.Buffers.SpanAction`2&lt;System.Char,TState&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Create(System.IFormatProvider,System.Span`1&lt;System.Char&gt;,System.Runtime.CompilerServices.DefaultInterpolatedStringHandler&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.ReadOnlySpan`1&lt;System.Char&gt; System.String::op_Implicit(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Object System.String::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Copy(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Void System.String::CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Void System.String::CopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::TryCopyTo(System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Char[] System.String::ToCharArray()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Char[] System.String::ToCharArray(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::IsNullOrEmpty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::IsNullOrWhiteSpace(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Char&amp; modreq(System.Runtime.InteropServices.InAttribute) System.String::GetPinnableReference()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.CharEnumerator System.String::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Text.StringRuneEnumerator System.String::EnumerateRunes()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.TypeCode System.String::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::IsNormalized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::IsNormalized(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Normalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Normalize(System.Text.NormalizationForm)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Char System.String::get_Chars(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Concat(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Concat(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Concat(System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Concat(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Concat(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Concat(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Concat(System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Concat(System.String,System.String,System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Concat(System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Concat(System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Format(System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Format(System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Format(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Format(System.IFormatProvider,System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,TArg0,TArg1,TArg2)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Format(System.IFormatProvider,System.Text.CompositeFormat,System.ReadOnlySpan`1&lt;System.Object&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Insert(System.Int32,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Join(System.Char,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Join(System.String,System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Join(System.Char,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Join(System.String,System.String[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Join(System.Char,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Join(System.String,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Join(System.Char,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Join(System.String,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::PadLeft(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::PadLeft(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::PadRight(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::PadRight(System.Int32,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Remove(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Remove(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Replace(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Replace(System.String,System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Replace(System.Char,System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Replace(System.String,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::ReplaceLineEndings()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::ReplaceLineEndings(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String[] System.String::Split(System.Char,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String[] System.String::Split(System.Char,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String[] System.String::Split(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String[] System.String::Split(System.Char[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String[] System.String::Split(System.Char[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String[] System.String::Split(System.String,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String[] System.String::Split(System.String,System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String[] System.String::Split(System.String[],System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String[] System.String::Split(System.String[],System.Int32,System.StringSplitOptions)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Substring(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Substring(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::ToLower()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::ToLower(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::ToLowerInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::ToUpper()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::ToUpper(System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::ToUpperInvariant()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Trim()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Trim(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::Trim(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::TrimStart()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::TrimStart(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::TrimStart(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::TrimEnd()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::TrimEnd(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.String::TrimEnd(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::Contains(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::Contains(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::Contains(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.String::Contains(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::IndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::IndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::IndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::IndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::IndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::LastIndexOf(System.Char)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::LastIndexOf(System.Char,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::LastIndexOfAny(System.Char[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::LastIndexOf(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.String::LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;System.Int32&gt;::StaticMethodRequiresPublicMethods&lt;System.String&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;System.Int32&gt;::StaticMethodRequiresPublicMethods()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Field:System.Int32 System.Int32::MaxValue" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="Field:System.Int32 System.Int32::MinValue" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;System.Int32&gt;::StaticMethodRequiresPublicMethods()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;System.Int32&gt;" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;System.Int32&gt;" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;System.Int32&gt;::StaticMethodRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::StaticMethodRequiresPublicMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::InstanceMethod()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::InstanceMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::InstanceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::InstanceMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::InstanceMethodRequiresPublicMethods&lt;T&gt;()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::InstanceMethodRequiresPublicMethods&lt;T&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::InstanceMethodRequiresPublicMethods()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::InstanceMethodRequiresPublicMethods()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::InstanceMethodRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::InstanceMethodRequiresPublicMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::VirtualMethod()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::VirtualMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::VirtualMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::VirtualMethod()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCType()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::VirtualMethodRequiresPublicMethods&lt;T&gt;()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::VirtualMethodRequiresPublicMethods&lt;T&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::VirtualMethodRequiresPublicMethods()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::VirtualMethodRequiresPublicMethods()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1&lt;T&gt;::VirtualMethodRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::VirtualMethodRequiresPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::VirtualMethodRequiresPublicMethods()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::VirtualMethodRequiresPublicMethods()" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::VirtualMethodRequiresPublicMethods()" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::VirtualMethodRequiresPublicMethods()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::VirtualMethodRequiresPublicMethods()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::VirtualMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::InstanceMethodRequiresPublicMethods()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::InstanceMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Field:T[] System.SpanDebugView`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="ModuleRef:QCall" />
	<edge b="Method:T[] System.ReadOnlySpan`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.Span`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Span`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::GetPinnableReference()" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.ArraySegment`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::GetPinnableReference()" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.SpanDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::StaticMethodRequiresPublicMethods()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::StaticMethodRequiresPublicMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::StaticMethodRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::StaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::StaticMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::StaticMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCMethod()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;T&gt;::RUCTest()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;T&gt;::RUCTest()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;T&gt;::RUCTest()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::RUCTest()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNoWarningsInRUCMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::RUCMethodRequiresPublicMethods&lt;T&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::RUCMethodRequiresPublicMethods&lt;T&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::RUCMethodRequiresPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::RUCMethodRequiresPublicMethods()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::RUCMethodRequiresPublicMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::RUCMethodRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::RUCTest()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::RUCTest()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::RUCTest()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringTypeInstance()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringTypeInstance()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringTypeInstance()" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringTypeInstance()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1&lt;T&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1&lt;T&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1&lt;T&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringTypeInstance()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1&lt;T&gt;::InstanceMethod()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1&lt;T&gt;::InstanceMethod()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1&lt;T&gt;::InstanceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1::InstanceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringTypeInstance()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1::InstanceMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringType()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringType()" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringType()" e="MemberRef:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethodDeclaringType&gt;O__70_0`1&lt;T&gt;::&lt;0&gt;__Method" />
	<edge b="MemberRef:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethodDeclaringType&gt;O__70_0`1&lt;T&gt;::&lt;0&gt;__Method" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethodDeclaringType&gt;O__70_0`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethodDeclaringType&gt;O__70_0`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethodDeclaringType&gt;O__70_0`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethodDeclaringType&gt;O__70_0`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethodDeclaringType&gt;O__70_0`1&lt;T&gt;::&lt;0&gt;__Method" e="Field:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethodDeclaringType&gt;O__70_0`1::&lt;0&gt;__Method" />
	<edge mark="1" b="Field:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethodDeclaringType&gt;O__70_0`1::&lt;0&gt;__Method" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethodDeclaringType&gt;O__70_0`1:test.exe" />
	<edge mark="1" b="Field:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethodDeclaringType&gt;O__70_0`1::&lt;0&gt;__Method" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1&lt;T&gt;::Method()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1&lt;T&gt;::Method()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1&lt;T&gt;::Method()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringType()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethodDeclaringType()" e="MemberRef:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethodDeclaringType&gt;O__70_0`1&lt;T&gt;::&lt;0&gt;__Method" />
	<edge b="MemberRef:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethodDeclaringType&gt;O__70_0`1&lt;T&gt;::&lt;0&gt;__Method" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethodDeclaringType&gt;O__70_0`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethodDeclaringType&gt;O__70_0`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethodDeclaringType&gt;O__70_0`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethodDeclaringType&gt;O__70_0`1&lt;T&gt;::&lt;0&gt;__Method" e="Field:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethodDeclaringType&gt;O__70_0`1::&lt;0&gt;__Method" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DelegateMethodTypeRequiresFields`1::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethod()" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethod()" e="MemberRef:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethod&gt;O__69_0`1&lt;T&gt;::&lt;0&gt;__MethodRequiresPublicFields" />
	<edge b="MemberRef:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethod&gt;O__69_0`1&lt;T&gt;::&lt;0&gt;__MethodRequiresPublicFields" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethod&gt;O__69_0`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethod&gt;O__69_0`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethod&gt;O__69_0`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethod&gt;O__69_0`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethod&gt;O__69_0`1&lt;T&gt;::&lt;0&gt;__MethodRequiresPublicFields" e="Field:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethod&gt;O__69_0`1::&lt;0&gt;__MethodRequiresPublicFields" />
	<edge mark="1" b="Field:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethod&gt;O__69_0`1::&lt;0&gt;__MethodRequiresPublicFields" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethod&gt;O__69_0`1:test.exe" />
	<edge mark="1" b="Field:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethod&gt;O__69_0`1::&lt;0&gt;__MethodRequiresPublicFields" e="TypeDef:System.Action" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields&lt;T&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields&lt;T&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethod()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToDelegateMethod()" e="MemberRef:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethod&gt;O__69_0`1&lt;T&gt;::&lt;0&gt;__MethodRequiresPublicFields" />
	<edge b="MemberRef:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethod&gt;O__69_0`1&lt;T&gt;::&lt;0&gt;__MethodRequiresPublicFields" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethod&gt;O__69_0`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethod&gt;O__69_0`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethod&gt;O__69_0`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethod&gt;O__69_0`1&lt;T&gt;::&lt;0&gt;__MethodRequiresPublicFields" e="Field:System.Action Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/&lt;TestGenericParameterFlowsToDelegateMethod&gt;O__69_0`1::&lt;0&gt;__MethodRequiresPublicFields" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToReturnValue()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToReturnValue()" e="MemberRef:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::ReturnRequiresPublicFields()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::ReturnRequiresPublicFields()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::ReturnRequiresPublicFields()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::ReturnRequiresPublicFields()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToReturnValue()" e="MemberRef:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::ReturnRequiresPublicMethods()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::ReturnRequiresPublicMethods()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::ReturnRequiresPublicMethods()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::ReturnRequiresPublicMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToReturnValue()" e="MemberRef:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::ReturnRequiresNothing()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::ReturnRequiresNothing()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::ReturnRequiresNothing()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::ReturnRequiresNothing()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::ReturnRequiresNothing()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::ReturnRequiresNothing()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::ReturnRequiresNothing()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::ReturnRequiresPublicMethods()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::ReturnRequiresPublicMethods()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::ReturnRequiresPublicMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::ReturnRequiresPublicFields()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::ReturnRequiresPublicFields()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::ReturnRequiresPublicFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToField()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestGenericParameterFlowsToField()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestFields()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestFields()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestFields()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::TestFields()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::TestFields()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::TestFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::TestFields()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::FieldRequiresPublicFields" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::FieldRequiresPublicFields" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::FieldRequiresPublicFields" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::TestFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::TestFields()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::FieldRequiresPublicMethods" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::FieldRequiresPublicMethods" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::FieldRequiresPublicMethods" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::TestFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::TestFields()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::FieldRequiresNothing" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::FieldRequiresNothing" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::FieldRequiresNothing" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestEnumConstraintSatisfiesPublicFields()" e="TypeDef:System.Enum" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestEnumConstraintSatisfiesPublicFields()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestEnumConstraintSatisfiesPublicFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestEnumConstraintSatisfiesPublicFields()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestUnmanagedConstraintSatisfiesParameterlessConstructor()" e="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestUnmanagedConstraintSatisfiesParameterlessConstructor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestUnmanagedConstraintSatisfiesParameterlessConstructor()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::RequiresParameterlessConstructor&lt;T&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::RequiresParameterlessConstructor&lt;T&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::RequiresParameterlessConstructor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::RequiresParameterlessConstructor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestStructConstraintSatisfiesParameterlessConstructor()" e="TypeDef:System.ValueType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestStructConstraintSatisfiesParameterlessConstructor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestStructConstraintSatisfiesParameterlessConstructor()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::RequiresParameterlessConstructor&lt;T&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::RequiresParameterlessConstructor&lt;T&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::RequiresParameterlessConstructor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNewConstraintSatisfiesParameterlessConstructor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestNewConstraintSatisfiesParameterlessConstructor()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::RequiresParameterlessConstructor&lt;T&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::RequiresParameterlessConstructor&lt;T&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::RequiresParameterlessConstructor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::StaticRequiresPublicFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::StaticRequiresPublicFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::StaticRequiresPublicFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::StaticRequiresPublicFields()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::StaticRequiresPublicFields()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::StaticRequiresPublicFields()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticRequiresPublicFields()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::StaticRequiresPublicFieldsNonGeneric()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::StaticRequiresPublicFieldsNonGeneric()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::StaticRequiresPublicFieldsNonGeneric()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticRequiresPublicFieldsNonGeneric()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::StaticPartialInstantiation()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::StaticPartialInstantiation()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::StaticPartialInstantiation()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticPartialInstantiation()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::StaticPartialInstantiationUnrecognized()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::StaticPartialInstantiationUnrecognized()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::StaticPartialInstantiationUnrecognized()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticPartialInstantiationUnrecognized()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::InstanceRequiresPublicFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::InstanceRequiresPublicFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::InstanceRequiresPublicFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::InstanceRequiresPublicFields()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::InstanceRequiresPublicFields()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::InstanceRequiresPublicFields()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::InstanceRequiresPublicFields()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::InstanceRequiresPublicFieldsNonGeneric()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::InstanceRequiresPublicFieldsNonGeneric()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::InstanceRequiresPublicFieldsNonGeneric()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::InstanceRequiresPublicFieldsNonGeneric()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::VirtualRequiresPublicFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::VirtualRequiresPublicFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::VirtualRequiresPublicFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::VirtualRequiresPublicFields()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::VirtualRequiresPublicMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::VirtualRequiresPublicMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::VirtualRequiresPublicMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::VirtualRequiresPublicMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::CallInterface()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::CallInterface()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::CallInterface()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::CallInterface()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod::InterfaceRequiresPublicFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod::InterfaceRequiresPublicFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod::InterfaceRequiresPublicFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod::InterfaceRequiresPublicFields()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod::InterfaceRequiresPublicMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod::InterfaceRequiresPublicMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMethodGenericParametersViaInheritance()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod::InterfaceRequiresPublicMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod::InterfaceRequiresPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod::InterfaceRequiresPublicMethods()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod::InterfaceRequiresPublicFields()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::CallInterface()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::VirtualRequiresPublicMethods()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::VirtualRequiresPublicFields()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::InstanceRequiresPublicFieldsNonGeneric()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::InstanceRequiresPublicFields()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::VirtualRequiresPublicFields()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::VirtualRequiresPublicMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::VirtualRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::VirtualRequiresPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::VirtualRequiresPublicMethods()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::VirtualRequiresPublicMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::VirtualRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::VirtualRequiresPublicFields()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::VirtualRequiresPublicFields()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::VirtualRequiresPublicFields()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::VirtualRequiresPublicFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::VirtualRequiresPublicFields()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticPartialInstantiationUnrecognized()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticPartialInstantiationUnrecognized()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresMultipleGenericParams&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,TOuter&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresMultipleGenericParams&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,TOuter&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresMultipleGenericParams&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,TOuter&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresMultipleGenericParams()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresMultipleGenericParams()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresMultipleGenericParams()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresMultipleGenericParams()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresMultipleGenericParams()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresMultipleGenericParams()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticPartialInstantiation()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticPartialInstantiation()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresMultipleGenericParams&lt;TOuter,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresMultipleGenericParams&lt;TOuter,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticPartialInstantiation()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticPartialInstantiation()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticPartialInstantiation()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticPartialInstantiation()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticPartialInstantiation()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticPartialInstantiation()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresMultipleGenericParams&lt;TOuter,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresMultipleGenericParams()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticRequiresPublicFieldsNonGeneric()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticRequiresPublicFieldsNonGeneric()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::StaticRequiresPublicFields&lt;TOuter&gt;()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::StaticRequiresPublicFields&lt;TOuter&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::StaticRequiresPublicFields()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::StaticRequiresPublicFields()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::StaticRequiresPublicFields()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticRequiresPublicFields()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticRequiresPublicFieldsNonGeneric()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresPublicMethods&lt;TOuter&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresPublicMethods&lt;TOuter&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresPublicMethods()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresPublicMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticRequiresPublicFields()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticRequiresPublicFields()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::StaticRequiresPublicFields&lt;TInner&gt;()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::StaticRequiresPublicFields&lt;TInner&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::StaticRequiresPublicFields()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::StaticRequiresPublicFields()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::StaticRequiresPublicFields()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticRequiresPublicFields()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::StaticRequiresPublicFields()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresPublicMethods&lt;TInner&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresPublicMethods&lt;TInner&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::StaticRequiresPublicMethods()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::VirtualRequiresPublicFields()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::VirtualRequiresPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestFields()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestBoth&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestBoth&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestBoth&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestBoth&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestBoth&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestBoth&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestBoth()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestNothing&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestNothing&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestNothing&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestNothing&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnMethod()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestNothing&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestNothing&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestNothing()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestNothing()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestNothing()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestNothing()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestNothing()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestNothing()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestNothing()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestNothing()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestBoth()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestBoth()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestBoth()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestBoth()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestBoth()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestBoth()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestBoth()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMethods()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestFields()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestFields()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestFields()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestFields()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodMultipleWithDifferentRequirements_TestMultiple()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnMethod()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnMethod()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnMethod()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnMethod()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnMethod()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicMethods&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothing&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothing&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothing&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothing()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFieldsPassThrough&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFieldsPassThrough&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFieldsPassThrough&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFieldsPassThrough()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnMethod()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothingPassThrough&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothingPassThrough&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothingPassThrough&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothingPassThrough()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothingPassThrough()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothingPassThrough()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields&lt;T&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields&lt;T&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothingPassThrough()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicMethods&lt;T&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicMethods&lt;T&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothingPassThrough()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothing&lt;T&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothing&lt;T&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothing()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFieldsPassThrough()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFieldsPassThrough()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields&lt;T&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields&lt;T&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFields()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFieldsPassThrough()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicMethods&lt;T&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicMethods&lt;T&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicFieldsPassThrough()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothing&lt;T&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothing&lt;T&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothing()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothing()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothing()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothing()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothing()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothing()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothing()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresNothing()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicMethods()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::MethodRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestPartialInstantiationTypes()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestPartialInstantiationTypes()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestPartialInstantiationTypes()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/FullyInstantiatedOverPartiallyInstantiatedFields::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/FullyInstantiatedOverPartiallyInstantiatedFields::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/FullyInstantiatedOverPartiallyInstantiatedFields:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/FullyInstantiatedOverPartiallyInstantiatedFields:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestPartialInstantiationTypes()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestPartialInstantiationTypes()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/FullyInstantiatedOverPartiallyInstantiatedMethods::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/FullyInstantiatedOverPartiallyInstantiatedMethods::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/FullyInstantiatedOverPartiallyInstantiatedMethods:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/FullyInstantiatedOverPartiallyInstantiatedMethods:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/FullyInstantiatedOverPartiallyInstantiatedMethods::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/FullyInstantiatedOverPartiallyInstantiatedMethods:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/FullyInstantiatedOverPartiallyInstantiatedMethods::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/FullyInstantiatedOverPartiallyInstantiatedMethods::.ctor()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/FullyInstantiatedOverPartiallyInstantiatedMethods:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1::.ctor()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,TOuter&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,TOuter&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,TOuter&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedMethods`1:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,TOuter&gt;:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/FullyInstantiatedOverPartiallyInstantiatedFields::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/FullyInstantiatedOverPartiallyInstantiatedFields:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/FullyInstantiatedOverPartiallyInstantiatedFields::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/FullyInstantiatedOverPartiallyInstantiatedFields::.ctor()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/FullyInstantiatedOverPartiallyInstantiatedFields:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1::.ctor()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2&lt;TOuter,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2&lt;TOuter,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1::.ctor()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1::.ctor()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1::.ctor()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1::.ctor()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1::.ctor()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1::.ctor()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2&lt;TOuter,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2&lt;TOuter,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2&lt;TOuter,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2&lt;TOuter,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2&lt;TOuter,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1:test.exe" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1:test.exe" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1:test.exe" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1:test.exe" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1:test.exe" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/PartialyInstantiatedFields`1:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseForPartialInstantiation`2&lt;TOuter,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestTypeGenericRequirementsOnMembers()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestTypeGenericRequirementsOnMembers()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestTypeGenericRequirementsOnMembers()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestTypeGenericRequirementsOnMembers()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicFieldsField" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicFieldsField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicFieldsField" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicFieldsField" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicFieldsField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicFieldsField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestTypeGenericRequirementsOnMembers()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicMethodsField" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicMethodsField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicMethodsField" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicMethodsField" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicMethodsField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicMethodsField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestTypeGenericRequirementsOnMembers()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::get_PublicFieldsProperty()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::get_PublicFieldsProperty()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::get_PublicFieldsProperty()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::get_PublicFieldsProperty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestTypeGenericRequirementsOnMembers()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::set_PublicFieldsProperty(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;)" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::set_PublicFieldsProperty(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::set_PublicFieldsProperty(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::set_PublicFieldsProperty(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestTypeGenericRequirementsOnMembers()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::get_PublicMethodsProperty()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::get_PublicMethodsProperty()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::get_PublicMethodsProperty()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::get_PublicMethodsProperty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestTypeGenericRequirementsOnMembers()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::set_PublicMethodsProperty(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;)" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::set_PublicMethodsProperty(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::set_PublicMethodsProperty(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::set_PublicMethodsProperty(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestTypeGenericRequirementsOnMembers()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::get_PublicMethodsImplicitGetter()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::get_PublicMethodsImplicitGetter()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::get_PublicMethodsImplicitGetter()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::get_PublicMethodsImplicitGetter()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestTypeGenericRequirementsOnMembers()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicFieldsMethodParameter(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;)" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicFieldsMethodParameter(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicFieldsMethodParameter(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicFieldsMethodParameter(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestTypeGenericRequirementsOnMembers()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicMethodsMethodParameter(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;)" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicMethodsMethodParameter(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicMethodsMethodParameter(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicMethodsMethodParameter(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestTypeGenericRequirementsOnMembers()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicFieldsMethodReturnValue()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicFieldsMethodReturnValue()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicFieldsMethodReturnValue()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicFieldsMethodReturnValue()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestTypeGenericRequirementsOnMembers()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicMethodsMethodReturnValue()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicMethodsMethodReturnValue()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicMethodsMethodReturnValue()" e="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicMethodsMethodReturnValue()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestTypeGenericRequirementsOnMembers()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicFieldsMethodLocalVariable()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicFieldsMethodLocalVariable()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicFieldsMethodLocalVariable()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicFieldsMethodLocalVariable()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestTypeGenericRequirementsOnMembers()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicMethodsMethodLocalVariable()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicMethodsMethodLocalVariable()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::PublicMethodsMethodLocalVariable()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicMethodsMethodLocalVariable()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicMethodsMethodLocalVariable()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicFieldsMethodLocalVariable()" e="TypeDef:System.Void" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicMethodsMethodReturnValue()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1:test.exe" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicFieldsMethodReturnValue()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicMethodsMethodParameter(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicMethodsMethodParameter(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicFieldsMethodParameter(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicFieldsMethodParameter(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::get_PublicMethodsImplicitGetter()" e="Property:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicMethodsImplicitGetter()" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::get_PublicMethodsImplicitGetter()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::set_PublicMethodsProperty(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;)" e="Property:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicMethodsProperty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::set_PublicMethodsProperty(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::set_PublicMethodsProperty(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::get_PublicMethodsProperty()" e="Property:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicMethodsProperty()" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::get_PublicMethodsProperty()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::set_PublicFieldsProperty(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;)" e="Property:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicFieldsProperty()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::set_PublicFieldsProperty(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::set_PublicFieldsProperty(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::get_PublicFieldsProperty()" e="Property:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicFieldsProperty()" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::get_PublicFieldsProperty()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestInterfaceTypeGenericRequirements()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IGenericInterfaceTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestInterfaceTypeGenericRequirements()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IGenericInterfaceTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IGenericInterfaceTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IGenericInterfaceTypeWithRequirements`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IGenericInterfaceTypeWithRequirements`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestInterfaceTypeGenericRequirements()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithInstantiatedGenericOnBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithInstantiatedGenericOnBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithInstantiatedGenericOnBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithInstantiatedGenericOnBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestInterfaceTypeGenericRequirements()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithInstantiationOverSelfOnBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithInstantiationOverSelfOnBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithInstantiationOverSelfOnBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithInstantiationOverSelfOnBase:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestInterfaceTypeGenericRequirements()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBase`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBase`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBase`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestInterfaceTypeGenericRequirements()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBaseWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBaseWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBaseWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBaseWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBaseWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBaseWithRequirements`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBaseWithRequirements`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBaseWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBaseWithRequirements`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestInterfaceTypeGenericRequirements()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/TestType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/TestType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/IFace`1&lt;System.String&gt;:test.exe" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" e="TypeDef:System.IComparable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" e="TypeDef:System.IConvertible" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" e="TypeDef:System.Collections.IEnumerable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" e="TypeSpec:System.IComparable`1&lt;System.String&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" e="TypeSpec:System.IEquatable`1&lt;System.String&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" e="TypeDef:System.ICloneable" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" e="TypeSpec:System.ISpanParsable`1&lt;System.String&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" e="TypeSpec:System.IParsable`1&lt;TSelf&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" e="TypeSpec:System.IParsable`1&lt;System.String&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/IFace`1&lt;System.String&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/IFace`1&lt;System.String&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/IFace`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/IFace`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/TestType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/TestType:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/IFace`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/TestType:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/IFace`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/IFace`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/TestType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/TestType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RecursiveGenericWithInterfacesRequirement/TestType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IGenericInterfaceTypeWithRequirements`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IGenericInterfaceTypeWithRequirements`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBaseWithRequirements`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBaseWithRequirements`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBaseWithRequirements`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBaseWithRequirements`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IGenericInterfaceTypeWithRequirements`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IGenericInterfaceTypeWithRequirements`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBase`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBase`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBase`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithOpenGenericOnBase`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithInstantiationOverSelfOnBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithInstantiationOverSelfOnBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithInstantiationOverSelfOnBase::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithInstantiationOverSelfOnBase::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IGenericInterfaceTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IGenericInterfaceTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IGenericInterfaceTypeWithRequirements`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithInstantiatedGenericOnBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithInstantiatedGenericOnBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithInstantiatedGenericOnBase::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/InterfaceImplementationTypeWithInstantiatedGenericOnBase::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestDeepNestedTypesWithGenerics()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestDeepNestedTypesWithGenerics()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RootTypeWithRequirements`1/InnerTypeWithNoAddedGenerics&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestAccess()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RootTypeWithRequirements`1/InnerTypeWithNoAddedGenerics&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RootTypeWithRequirements`1/InnerTypeWithNoAddedGenerics&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestAccess()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RootTypeWithRequirements`1/InnerTypeWithNoAddedGenerics&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RootTypeWithRequirements`1/InnerTypeWithNoAddedGenerics&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RootTypeWithRequirements`1/InnerTypeWithNoAddedGenerics:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RootTypeWithRequirements`1/InnerTypeWithNoAddedGenerics:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RootTypeWithRequirements`1/InnerTypeWithNoAddedGenerics&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RootTypeWithRequirements`1/InnerTypeWithNoAddedGenerics::TestAccess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RootTypeWithRequirements`1/InnerTypeWithNoAddedGenerics::TestAccess()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RootTypeWithRequirements`1/InnerTypeWithNoAddedGenerics::TestAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RootTypeWithRequirements`1/InnerTypeWithNoAddedGenerics::TestAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RootTypeWithRequirements`1/InnerTypeWithNoAddedGenerics::TestAccess()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RootTypeWithRequirements`1/InnerTypeWithNoAddedGenerics::TestAccess()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RootTypeWithRequirements`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestBaseTypeGenericRequirements()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestBaseTypeGenericRequirements()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiatedGenericOnBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiatedGenericOnBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiatedGenericOnBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiatedGenericOnBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestBaseTypeGenericRequirements()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestBaseTypeGenericRequirements()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBase`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBase`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBase`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestBaseTypeGenericRequirements()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestDerivedTypeWithOpenGenericOnBaseWithRUCOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestDerivedTypeWithOpenGenericOnBaseWithRUCOnBase()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestBaseTypeGenericRequirements()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestDerivedTypeWithOpenGenericOnBaseWithRUCOnDerived()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestDerivedTypeWithOpenGenericOnBaseWithRUCOnDerived()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestBaseTypeGenericRequirements()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRequirements`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRequirements`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRequirements`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRequirements`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRequirements`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRequirements`1::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRequirements`1::.ctor()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;T&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;T&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;T&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1::.ctor()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRequirements`1:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestDerivedTypeWithOpenGenericOnBaseWithRUCOnDerived()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestDerivedTypeWithOpenGenericOnBaseWithRUCOnDerived()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnDerived`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnDerived`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnDerived`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnDerived`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnDerived`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnDerived`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnDerived`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnDerived`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnDerived`1::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IGenericInterfaceTypeWithRequirements`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IGenericInterfaceTypeWithRequirements`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnDerived`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnDerived`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnDerived`1::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnDerived`1::.ctor()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMT`1&lt;T&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMT`1&lt;T&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMT`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMT`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMT`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMT`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMT`1&lt;T&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMT`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMT`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMT`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMT`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMT`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnDerived`1:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMT`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestDerivedTypeWithOpenGenericOnBaseWithRUCOnBase()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestDerivedTypeWithOpenGenericOnBaseWithRUCOnBase()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnBase`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnBase`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnBase`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnBase`1::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IGenericInterfaceTypeWithRequirements`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IGenericInterfaceTypeWithRequirements`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnBase`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnBase`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnBase`1::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnBase`1::.ctor()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMTAndRUC`1&lt;T&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMTAndRUC`1&lt;T&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMTAndRUC`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMTAndRUC`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMTAndRUC`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMTAndRUC`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMTAndRUC`1&lt;T&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMTAndRUC`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMTAndRUC`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMTAndRUC`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMTAndRUC`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMTAndRUC`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBaseWithRUCOnBase`1:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithOpenGenericDAMTAndRUC`1&lt;T&gt;:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBase`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBase`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBase`1::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBase`1::.ctor()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;T&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;T&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;T&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1::.ctor()" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithOpenGenericOnBase`1:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;T&gt;:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase::.ctor()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase:test.exe" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiationOverSelfOnBase&gt;:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiatedGenericOnBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiatedGenericOnBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiatedGenericOnBase::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiatedGenericOnBase::.ctor()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1::.ctor()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/DerivedTypeWithInstantiatedGenericOnBase:test.exe" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/GenericBaseTypeWithRequirements`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestMultiple()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestMultiple()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestMultiple()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMultiple()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestFields()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestFields()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestFields()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestFields()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestMethods()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestMethods()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestBoth()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestBoth()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestBoth()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestBoth()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestNothing()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestMultipleGenericParametersOnType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestNothing()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType,Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::TestNothing()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestNothing()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestNothing()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestNothing()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestNothing()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestNothing()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestNothing()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestNothing()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestNothing()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestBoth()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestBoth()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestBoth()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestBoth()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestBoth()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestBoth()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestBoth()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMethods()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestFields()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestFields()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestFields()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestFields()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMultiple()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMultiple()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMultiple()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMultiple()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMultiple()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMultiple()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMultiple()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMultiple()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMultiple()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMultiple()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMultiple()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMultiple()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMultiple()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMultiple()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMultiple()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMultiple()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/MultipleTypesWithDifferentRequirements`4::TestMultiple()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::Test()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1::Test()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::Test()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::Test()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::Test()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1::Test()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFieldsPassThrough`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::Test()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFieldsPassThrough`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFieldsPassThrough`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFieldsPassThrough`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFieldsPassThrough`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFieldsPassThrough`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFieldsPassThrough`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFieldsPassThrough`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFieldsPassThrough`1::Test()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow::TestSingleGenericParameterOnType()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothingPassThrough`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::Test()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothingPassThrough`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothingPassThrough`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothingPassThrough`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothingPassThrough`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothingPassThrough`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothingPassThrough`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothingPassThrough`1&lt;Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TestType&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothingPassThrough`1::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothingPassThrough`1::Test()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothingPassThrough`1::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;T&gt;::Test()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;T&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;T&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::Test()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothingPassThrough`1::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;T&gt;::Test()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;T&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;T&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1::Test()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothingPassThrough`1::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1&lt;T&gt;::Test()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1&lt;T&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1&lt;T&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1&lt;T&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1&lt;T&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFieldsPassThrough`1::Test()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFieldsPassThrough`1::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TSource&gt;::Test()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TSource&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TSource&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TSource&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TSource&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::Test()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFieldsPassThrough`1::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TSource&gt;::Test()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TSource&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TSource&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TSource&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TSource&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1::Test()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFieldsPassThrough`1::Test()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1&lt;TSource&gt;::Test()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1&lt;TSource&gt;::Test()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1&lt;TSource&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1&lt;TSource&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1&lt;TSource&gt;::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresNothing`1::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNone(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod::InterfaceRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::InterfaceRequiresPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod::InterfaceRequiresPublicFields()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::InterfaceRequiresPublicFields()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::VirtualMethodRequiresPublicMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::VirtualMethodRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::VirtualMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::VirtualMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::InstanceMethodRequiresPublicMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::InstanceMethodRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::InstanceMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/RUCTypeRequiresPublicFields`1::InstanceMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::CallInterface()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::CallInterface()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod::InterfaceRequiresPublicFields&lt;TOuter&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod::InterfaceRequiresPublicFields&lt;TOuter&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod::InterfaceRequiresPublicFields()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::CallInterface()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod::InterfaceRequiresPublicMethods&lt;TOuter&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod::InterfaceRequiresPublicMethods&lt;TOuter&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/IInterfaceWithGenericMethod::InterfaceRequiresPublicMethods()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::VirtualRequiresPublicMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::VirtualRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::VirtualRequiresPublicFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::VirtualRequiresPublicFields()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::InstanceRequiresPublicFieldsNonGeneric()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::InstanceRequiresPublicFields&lt;TOuter&gt;()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::InstanceRequiresPublicFields&lt;TOuter&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::InstanceRequiresPublicFields()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::InstanceRequiresPublicFields()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::InstanceRequiresPublicFields()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::InstanceRequiresPublicFields()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::InstanceRequiresPublicFieldsNonGeneric()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::InstanceRequiresPublicMethods&lt;TOuter&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::InstanceRequiresPublicMethods&lt;TOuter&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::InstanceRequiresPublicMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::InstanceRequiresPublicFields()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::InstanceRequiresPublicFields&lt;TInner&gt;()" />
	<edge b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::InstanceRequiresPublicFields&lt;TInner&gt;()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::InstanceRequiresPublicFields()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::InstanceRequiresPublicFields()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1&lt;TOuter&gt;::InstanceRequiresPublicFields()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::InstanceRequiresPublicFields()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::InstanceRequiresPublicFields()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::InstanceRequiresPublicMethods&lt;TInner&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::InstanceRequiresPublicMethods&lt;TInner&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::InstanceRequiresPublicMethods()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicMethodsMethodLocalVariable()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicFieldsMethodLocalVariable()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1:test.exe" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicMethodsMethodReturnValue()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1&lt;TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicMethods`1:test.exe" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::PublicFieldsMethodReturnValue()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::set_PublicFieldsProperty(Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;)" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;TOuter&gt;::&lt;PublicFieldsProperty&gt;k__BackingField" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;TOuter&gt;::&lt;PublicFieldsProperty&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;TOuter&gt;::&lt;PublicFieldsProperty&gt;k__BackingField" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::&lt;PublicFieldsProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::&lt;PublicFieldsProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::&lt;PublicFieldsProperty&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1:test.exe" />
	<edge b="Method:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::get_PublicFieldsProperty()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;TOuter&gt;::&lt;PublicFieldsProperty&gt;k__BackingField" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;TOuter&gt;::&lt;PublicFieldsProperty&gt;k__BackingField" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;TOuter&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;TOuter&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1&lt;TOuter&gt;::&lt;PublicFieldsProperty&gt;k__BackingField" e="Field:Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeRequiresPublicFields`1&lt;TOuter&gt; Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeGenericRequirementsOnMembers`1::&lt;PublicFieldsProperty&gt;k__BackingField" />
	<edge b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToTruncating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToSaturating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToChecked(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::InstanceRequiresPublicMethods()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::InstanceRequiresPublicMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/BaseTypeWithGenericMethod::InstanceRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::InterfaceRequiresPublicFields()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::InterfaceRequiresPublicFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::InterfaceRequiresPublicFields()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::InterfaceRequiresPublicMethods()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::InterfaceRequiresPublicMethods()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GenericParameterDataFlow/TypeWithInstantiatedGenericMethodViaGenericParameter`1::InterfaceRequiresPublicMethods()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToTruncating(System.UInt64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToTruncating(System.Single,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToTruncating(System.SByte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToTruncating(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToTruncating(System.Double,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToTruncating(System.Decimal,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToSaturating(System.UInt64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToSaturating(System.Single,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToSaturating(System.SByte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToSaturating(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToSaturating(System.Double,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToSaturating(System.Decimal,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToChecked(System.UInt64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToChecked(System.Single,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToChecked(System.SByte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToChecked(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToChecked(System.Double,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToChecked(System.Decimal,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
</dependencies>