<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnAllAnnotatedParameter(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnAllAnnotatedParameter(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnNonAllAnnotatedParameter(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnNonAllAnnotatedParameter(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithBindingFlags(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithBindingFlags(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithUnknownBindingFlags(System.Reflection.BindingFlags,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithUnknownBindingFlags(System.Reflection.BindingFlags,System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestUnsupportedBindingFlags(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestUnsupportedBindingFlags(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithNull()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithNull()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithEmptyInput()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithEmptyInput()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestIfElse(System.Int32,System.Type,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestIfElse(System.Int32,System.Type,System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithNullName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithNullName()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithKnownTypeAndNameWhichDoesntExist()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithKnownTypeAndNameWhichDoesntExist()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::PublicStaticInt" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::PublicStaticInt" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::PublicStaticInt" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::&lt;Prop&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::&lt;Prop&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::&lt;Prop&gt;k__BackingField" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Property:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::PublicStaticInt" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::&lt;Prop&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Property:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::PublicStaticInt" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::&lt;Prop&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Property:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::PublicStaticInt" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::&lt;Prop&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Property:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::PublicStaticInt" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::&lt;Prop&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Property:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::PublicStaticInt" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::&lt;Prop&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Property:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::PublicStaticInt" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::&lt;Prop&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Property:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::PublicStaticInt" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::&lt;Prop&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Property:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" e="Property:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" e="Property:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Prop()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Method()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithKnownTypeAndNameWhichDoesntExist()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithKnownTypeAndNameWhichDoesntExist()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithKnownTypeAndNameWhichDoesntExist()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithKnownTypeAndNameWhichDoesntExist()" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithKnownTypeAndNameWhichDoesntExist()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::PublicStaticInt" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::&lt;Prop&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Property:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithUnknownName(System.String)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithNullName()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithNullName()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithNullName()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithNullName()" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeWithNullName()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::PublicStaticInt" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::&lt;Prop&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Property:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnKnownTypeOnly()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.Void &lt;PrivateImplementationDetails&gt;::ThrowSwitchExpressionException(System.Object)" />
	<edge mark="1" b="Method:System.Void &lt;PrivateImplementationDetails&gt;::ThrowSwitchExpressionException(System.Object)" e="TypeDef:&lt;PrivateImplementationDetails&gt;:test.exe" />
	<edge mark="1" b="TypeDef:&lt;PrivateImplementationDetails&gt;:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::PublicStaticInt" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::&lt;Prop&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Property:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestSwitchAllValid(System.Int32,System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" />
	<edge mark="1" b="Method:System.Void &lt;PrivateImplementationDetails&gt;::ThrowSwitchExpressionException(System.Object)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void &lt;PrivateImplementationDetails&gt;::ThrowSwitchExpressionException(System.Object)" e="Method:System.Void System.Runtime.CompilerServices.SwitchExpressionException::.ctor(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestIfElse(System.Int32,System.Type,System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestIfElse(System.Int32,System.Type,System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestIfElse(System.Int32,System.Type,System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestIfElse(System.Int32,System.Type,System.Type)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestIfElse(System.Int32,System.Type,System.Type)" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestIfElse(System.Int32,System.Type,System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithEmptyInput()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithEmptyInput()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithEmptyInput()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithEmptyInput()" e="Method:System.RuntimeTypeHandle System.Type::get_TypeHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithEmptyInput()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithEmptyInput()" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithEmptyInput()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithNull()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithNull()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithNull()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithNull()" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithNull()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestUnsupportedBindingFlags(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestUnsupportedBindingFlags(System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestUnsupportedBindingFlags(System.Type)" e="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestUnsupportedBindingFlags(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithUnknownBindingFlags(System.Reflection.BindingFlags,System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithUnknownBindingFlags(System.Reflection.BindingFlags,System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithUnknownBindingFlags(System.Reflection.BindingFlags,System.Type)" e="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithUnknownBindingFlags(System.Reflection.BindingFlags,System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithBindingFlags(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithBindingFlags(System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithBindingFlags(System.Type)" e="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestWithBindingFlags(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnNonAllAnnotatedParameter(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnNonAllAnnotatedParameter(System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnNonAllAnnotatedParameter(System.Type)" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnNonAllAnnotatedParameter(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnAllAnnotatedParameter(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnAllAnnotatedParameter(System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnAllAnnotatedParameter(System.Type)" e="Method:System.Type System.Type::GetNestedType(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType::TestOnAllAnnotatedParameter(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::set_Prop(System.Int32)" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::&lt;Prop&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::get_Prop()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.GetNestedTypeOnAllAnnotatedType/TestType/NestedType::&lt;Prop&gt;k__BackingField" />
</dependencies>