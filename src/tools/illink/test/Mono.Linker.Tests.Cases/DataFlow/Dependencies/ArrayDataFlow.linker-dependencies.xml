<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementParameter(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementParameter(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType&gt;(System.Type)" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType&gt;(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType&gt;(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMix()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMix()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMerged()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMerged()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementParameter(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementParameter(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestMergedArrayElement(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestMergedArrayElement(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType&gt;(System.Type)" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType&gt;(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType&gt;(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType&gt;(System.Type)" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType&gt;(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType&gt;(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetElementAtUnknownIndex(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetElementAtUnknownIndex(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetMergedArrayElement(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetMergedArrayElement(System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestMergedArrayElementWithUnknownIndex(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestMergedArrayElementWithUnknownIndex(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetStoreUnknownIndex(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetStoreUnknownIndex(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterCall()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterCall()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterAssignment()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterAssignment()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::LoopAssignmentWithInitAfter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::LoopAssignmentWithInitAfter()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::LoopAssignmentWithInitAfter()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::LoopAssignmentWithInitAfter()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation/&lt;&gt;c__DisplayClass0_0:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation/&lt;&gt;c__DisplayClass0_0:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::LoopAssignmentWithInitAfter()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::LoopAssignmentWithInitAfter()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::LoopAssignmentWithInitAfter()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::&lt;LoopAssignmentWithInitAfter&gt;g__Initialize|0_0(Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation/&lt;&gt;c__DisplayClass0_0&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::&lt;LoopAssignmentWithInitAfter&gt;g__Initialize|0_0(Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation/&lt;&gt;c__DisplayClass0_0&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::LoopAssignmentWithInitAfter()" e="Field:System.Int32[] Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation/&lt;&gt;c__DisplayClass0_0::arr" />
	<edge mark="1" b="Field:System.Int32[] Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation/&lt;&gt;c__DisplayClass0_0::arr" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation/&lt;&gt;c__DisplayClass0_0:test.exe" />
	<edge b="Field:System.Int32[] Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation/&lt;&gt;c__DisplayClass0_0::arr" e="TypeSpec:System.Int32[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::LoopAssignmentWithInitAfter()" e="Field:System.Int32[] Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation/&lt;&gt;c__DisplayClass0_0::arr" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::&lt;LoopAssignmentWithInitAfter&gt;g__Initialize|0_0(Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation/&lt;&gt;c__DisplayClass0_0&amp;)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::&lt;LoopAssignmentWithInitAfter&gt;g__Initialize|0_0(Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation/&lt;&gt;c__DisplayClass0_0&amp;)" e="Field:System.Int32[] Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation/&lt;&gt;c__DisplayClass0_0::arr" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::&lt;LoopAssignmentWithInitAfter&gt;g__Initialize|0_0(Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation/&lt;&gt;c__DisplayClass0_0&amp;)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation/&lt;&gt;c__DisplayClass0_0&amp;:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation::&lt;LoopAssignmentWithInitAfter&gt;g__Initialize|0_0(Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/HoistedArrayMutation/&lt;&gt;c__DisplayClass0_0&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/ConstantFieldValuesAsIndex::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestArrayElementAssignment(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestArrayElementAssignment(System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestInlineArrayElementReferenceAssignment(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestInlineArrayElementReferenceAssignment(System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalesce&lt;System.Int32,System.Int32,System.Int32&gt;(System.Boolean)" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalesce&lt;System.Int32,System.Int32,System.Int32&gt;(System.Boolean)" e="TypeDef:System.Int32" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalesce&lt;System.Int32,System.Int32,System.Int32&gt;(System.Boolean)" e="TypeDef:System.Int32" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalesce&lt;System.Int32,System.Int32,System.Int32&gt;(System.Boolean)" e="TypeDef:System.Int32" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalesce&lt;System.Int32,System.Int32,System.Int32&gt;(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalesce(System.Boolean)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalescingAssignment&lt;System.Int32,System.Int32,System.Int32&gt;(System.Boolean)" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalescingAssignment&lt;System.Int32,System.Int32,System.Int32&gt;(System.Boolean)" e="TypeDef:System.Int32" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalescingAssignment&lt;System.Int32,System.Int32,System.Int32&gt;(System.Boolean)" e="TypeDef:System.Int32" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalescingAssignment&lt;System.Int32,System.Int32,System.Int32&gt;(System.Boolean)" e="TypeDef:System.Int32" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalescingAssignment&lt;System.Int32,System.Int32,System.Int32&gt;(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalescingAssignment(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalescingAssignment(System.Boolean)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalescingAssignment(System.Boolean)" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalescingAssignment(System.Boolean)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalescingAssignment(System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalescingAssignment(System.Boolean)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalescingAssignment(System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalescingAssignment(System.Boolean)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalescingAssignment(System.Boolean)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalescingAssignment(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalescingAssignment(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalesce(System.Boolean)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalesce(System.Boolean)" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalesce(System.Boolean)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalesce(System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalesce(System.Boolean)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalesce(System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalesce(System.Boolean)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalesce(System.Boolean)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalesce(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestNullCoalesce(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestInlineArrayElementReferenceAssignment(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestInlineArrayElementReferenceAssignment(System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestInlineArrayElementReferenceAssignment(System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestInlineArrayElementReferenceAssignment(System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestInlineArrayElementReferenceAssignment(System.Boolean)" e="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" />
	<edge mark="1" b="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray:test.exe" />
	<edge mark="1" b="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" e="TypeDef:System.Type" />
	<edge mark="1" b="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" e="Method:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef(TBuffer&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestInlineArrayElementReferenceAssignment(System.Boolean)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestInlineArrayElementReferenceAssignment(System.Boolean)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestInlineArrayElementReferenceAssignment(System.Boolean)" e="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" />
	<edge mark="1" b="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray:test.exe" />
	<edge mark="1" b="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" e="TypeDef:System.Type" />
	<edge mark="1" b="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" e="Method:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef(TBuffer&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestInlineArrayElementReferenceAssignment(System.Boolean)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestInlineArrayElementReferenceAssignment(System.Boolean)" e="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" />
	<edge mark="1" b="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray:test.exe" />
	<edge mark="1" b="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" e="TypeDef:System.Type" />
	<edge mark="1" b="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" e="Method:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef(TBuffer&amp;)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestInlineArrayElementReferenceAssignment(System.Boolean)" e="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" />
	<edge mark="1" b="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray:test.exe" />
	<edge mark="1" b="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" e="TypeDef:System.Type" />
	<edge mark="1" b="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" e="Method:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef(TBuffer&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestInlineArrayElementReferenceAssignment(System.Boolean)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestInlineArrayElementReferenceAssignment(System.Boolean)" e="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" />
	<edge mark="1" b="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray:test.exe" />
	<edge mark="1" b="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" e="TypeDef:System.Type" />
	<edge mark="1" b="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" e="Method:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef(TBuffer&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestInlineArrayElementReferenceAssignment(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestInlineArrayElementReferenceAssignment(System.Boolean)" e="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" />
	<edge mark="1" b="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray:test.exe" />
	<edge mark="1" b="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" e="TypeDef:System.Type" />
	<edge mark="1" b="MethodSpec:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray,System.Type&gt;(TBuffer&amp;)" e="Method:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef(TBuffer&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestInlineArrayElementReferenceAssignment(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeDef:&lt;PrivateImplementationDetails&gt;:test.exe" e="Module:test.exe" />
	<edge b="Method:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef(TBuffer&amp;)" e="TypeSpec:TBuffer&amp;:test.exe" />
	<edge b="Method:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef(TBuffer&amp;)" e="TypeSpec:TElement&amp;:test.exe" />
	<edge b="Method:TElement&amp; &lt;PrivateImplementationDetails&gt;::InlineArrayFirstElementRef(TBuffer&amp;)" e="MethodSpec:!!1&amp; System.Runtime.CompilerServices.Unsafe::As&lt;TBuffer,TElement&gt;(!!0&amp;)" />
	<edge b="Method:TTo&amp; System.Runtime.CompilerServices.Unsafe::As(TFrom&amp;)" e="TypeSpec:TFrom&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:TTo&amp; System.Runtime.CompilerServices.Unsafe::As(TFrom&amp;)" e="TypeSpec:TTo&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray:test.exe" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray::t" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray::t" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray/InlineTypeArray::t" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestArrayElementAssignment(System.Boolean)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestArrayElementAssignment(System.Boolean)" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestArrayElementAssignment(System.Boolean)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestArrayElementAssignment(System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestArrayElementAssignment(System.Boolean)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestArrayElementAssignment(System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestArrayElementAssignment(System.Boolean)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestArrayElementAssignment(System.Boolean)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestArrayElementAssignment(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteElementOfCapturedArray::TestArrayElementAssignment(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetWithPublicMethods()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetWithPublicMethods()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalesce()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalesce()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignment()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignment()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentToEmpty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentToEmpty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentComplex()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentComplex()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentToEmptyComplex()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentToEmptyComplex()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentToEmptyComplex()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentToEmptyComplex()" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentToEmptyComplex()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentToEmptyComplex()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentToEmptyComplex()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentToEmptyComplex()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentToEmptyComplex()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentComplex()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentComplex()" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentComplex()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentComplex()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentComplex()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetWithPublicMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetWithPublicMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentComplex()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentComplex()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentComplex()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentToEmpty()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentToEmpty()" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentToEmpty()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentToEmpty()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentToEmpty()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignmentToEmpty()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignment()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignment()" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignment()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignment()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignment()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignment()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalescingAssignment()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalesce()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalesce()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalesce()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalesce()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalesce()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/WriteCapturedArrayElement::TestNullCoalesce()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerOneElementStaticType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerOneElementStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerOneElementParameter(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerOneElementParameter(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsStaticType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsMix&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType&gt;(System.Type)" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsMix&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType&gt;(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsMix&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType&gt;(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsMix(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementOneElementStaticType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementOneElementStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementOneElementParameter(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementOneElementParameter(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsStaticType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsMix&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType&gt;(System.Type)" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsMix&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType&gt;(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsMix&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType&gt;(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsMix(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementAndInitializerMultipleElementsMix&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType&gt;(System.Type)" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementAndInitializerMultipleElementsMix&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType&gt;(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementAndInitializerMultipleElementsMix&lt;Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType&gt;(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestGetElementAtUnknownIndex(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestGetElementAtUnknownIndex(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetStoreUnknownIndex(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetStoreUnknownIndex(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetGetElementOnByRefArray(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetGetElementOnByRefArray(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetAfterCall()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetAfterCall()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetAfterAssignment()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetAfterAssignment()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestAddressOfElement()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestAddressOfElement()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestAddressOfElement()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestAddressOfElement()" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestAddressOfElement()" e="TypeSpec:System.Type&amp;" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::.ctor(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestAddressOfElement()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestAddressOfElement()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Type&amp; System.Type[0...,0...]::Address(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestAddressOfElement()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetAfterAssignment()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetAfterAssignment()" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::.ctor(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetAfterAssignment()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetAfterAssignment()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetAfterAssignment()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetAfterAssignment()" e="Field:System.Type[0...,0...] Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::_externalArray" />
	<edge mark="1" b="Field:System.Type[0...,0...] Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::_externalArray" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray:test.exe" />
	<edge b="Field:System.Type[0...,0...] Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::_externalArray" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetAfterAssignment()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetAfterCall()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetAfterCall()" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::.ctor(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetAfterCall()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetAfterCall()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetAfterCall()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetAfterCall()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TakesTypesArray(System.Type[0...,0...])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TakesTypesArray(System.Type[0...,0...])" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray:test.exe" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetAfterCall()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TakesTypesArray(System.Type[0...,0...])" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TakesTypesArray(System.Type[0...,0...])" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetGetElementOnByRefArray(System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetGetElementOnByRefArray(System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::.ctor(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetGetElementOnByRefArray(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge b="MemberRef:System.Type&amp; System.Type[0...,0...]::Address(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TakesTypeByRef(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TakesTypeByRef(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray:test.exe" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge b="MemberRef:System.Type&amp; System.Type[0...,0...]::Address(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TakesTypeByRef(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TakesTypeByRef(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray:test.exe" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TakesTypeByRef(System.Type&amp;)" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TakesTypeByRef(System.Type&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetStoreUnknownIndex(System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetStoreUnknownIndex(System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::.ctor(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetStoreUnknownIndex(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetStoreUnknownIndex(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetStoreUnknownIndex(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetStoreUnknownIndex(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetStoreUnknownIndex(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayResetStoreUnknownIndex(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestGetElementAtUnknownIndex(System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestGetElementAtUnknownIndex(System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::.ctor(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestGetElementAtUnknownIndex(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestGetElementAtUnknownIndex(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestGetElementAtUnknownIndex(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::.ctor(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsMix(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsMix(System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::.ctor(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsMix(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsStaticType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsStaticType()" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::.ctor(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementOneElementParameter(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementOneElementParameter(System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::.ctor(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementOneElementParameter(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementOneElementParameter(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementOneElementStaticType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementOneElementStaticType()" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::.ctor(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementOneElementStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementOneElementStaticType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementOneElementStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArraySetElementOneElementStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::.ctor(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsStaticType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsStaticType()" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::.ctor(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerOneElementParameter(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerOneElementParameter(System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::.ctor(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerOneElementParameter(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerOneElementParameter(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerOneElementStaticType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerOneElementStaticType()" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::.ctor(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerOneElementStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerOneElementStaticType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="MemberRef:System.Void System.Type[0...,0...]::Set(System.Int32,System.Int32,System.Type)" e="TypeSpec:System.Type[0...,0...]" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerOneElementStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge b="MemberRef:System.Type System.Type[0...,0...]::Get(System.Int32,System.Int32)" e="TypeSpec:System.Type[0...,0...]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestMultiDimensionalArray::TestArrayWithInitializerOneElementStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::&lt;TestArrayRecursion&gt;g__ConsumeArray|24_0(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::&lt;TestArrayRecursion&gt;g__ConsumeArray|24_0(System.Object[])" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayRecursion()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::&lt;TestArrayRecursion&gt;g__ConsumeArray|24_0(System.Object[])" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::&lt;TestArrayRecursion&gt;g__ConsumeArray|24_0(System.Object[])" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterAssignment()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterAssignment()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterAssignment()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterAssignment()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterAssignment()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterAssignment()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterAssignment()" e="Field:System.Type[] Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::_externalArray" />
	<edge mark="1" b="Field:System.Type[] Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::_externalArray" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge b="Field:System.Type[] Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::_externalArray" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterAssignment()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterCall()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterCall()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterCall()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterCall()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterCall()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterCall()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterCall()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TakesTypesArray(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TakesTypesArray(System.Type[])" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetAfterCall()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TakesTypesArray(System.Type[])" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TakesTypesArray(System.Type[])" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TakesTypeByRef(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TakesTypeByRef(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TakesTypeByRef(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TakesTypeByRef(System.Type&amp;)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetGetElementOnByRefArray(System.Int32)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TakesTypeByRef(System.Type&amp;)" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TakesTypeByRef(System.Type&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetStoreUnknownIndex(System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetStoreUnknownIndex(System.Int32)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetStoreUnknownIndex(System.Int32)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetStoreUnknownIndex(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetStoreUnknownIndex(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetStoreUnknownIndex(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetStoreUnknownIndex(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetStoreUnknownIndex(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayResetStoreUnknownIndex(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestMergedArrayElementWithUnknownIndex(System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestMergedArrayElementWithUnknownIndex(System.Int32)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestMergedArrayElementWithUnknownIndex(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestMergedArrayElementWithUnknownIndex(System.Int32)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestMergedArrayElementWithUnknownIndex(System.Int32)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestMergedArrayElementWithUnknownIndex(System.Int32)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestMergedArrayElementWithUnknownIndex(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetFields()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetMethods()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetMergedArrayElement(System.Boolean)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetMergedArrayElement(System.Boolean)" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetMergedArrayElement(System.Boolean)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetMergedArrayElement(System.Boolean)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetMergedArrayElement(System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetMergedArrayElement(System.Boolean)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetMergedArrayElement(System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetMergedArrayElement(System.Boolean)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetMergedArrayElement(System.Boolean)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetElementAtUnknownIndex(System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetElementAtUnknownIndex(System.Int32)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetElementAtUnknownIndex(System.Int32)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetElementAtUnknownIndex(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetElementAtUnknownIndex(System.Int32)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestGetElementAtUnknownIndex(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementAndInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestMergedArrayElement(System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestMergedArrayElement(System.Int32)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestMergedArrayElement(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestMergedArrayElement(System.Int32)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestMergedArrayElement(System.Int32)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetMethods()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetMethods()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestMergedArrayElement(System.Int32)" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetFields()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestMergedArrayElement(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementParameter(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementParameter(System.Type)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementParameter(System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementParameter(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementParameter(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMerged()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMerged()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMerged()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMerged()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMerged()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMerged()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMerged()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMerged()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMix()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMix()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMix()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMix()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMix()" e="Field:System.String System.String::Empty" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMix()" e="Method:System.Int32 System.String::get_Length()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMix()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetUnknownType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMix()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::GetTypeWithPublicConstructors()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementMix()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArraySetElementOneElementStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsMix(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerMultipleElementsStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementParameter(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementParameter(System.Type)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementParameter(System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementParameter(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementParameter(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow::TestArrayWithInitializerOneElementStaticType()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.ArrayDataFlow/TestType::.ctor()" />
	<edge b="Field:T[] System.SpanDebugView`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="ModuleRef:QCall" />
	<edge b="Method:T[] System.ReadOnlySpan`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.Span`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Span`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::GetPinnableReference()" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.ArraySegment`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::GetPinnableReference()" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.SpanDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
</dependencies>