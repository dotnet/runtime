<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::Test()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::Test()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::Test()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers/AnnotatedType" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers/AnnotatedType" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers/AnnotatedType::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::.ctor()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::MethodWithDataflow(System.Type)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::MethodWithRequires()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::MethodWithRequires()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::MethodWithDataflow(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers/AnnotatedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers/AnnotatedType" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers/AnnotatedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers/AnnotatedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DamOnTypeAccessesMembers::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestField()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestField()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLambda()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLambda()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLocalMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLocalMethod()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestMethodReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestMethodReturnValue()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestEvent()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestEvent()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestEvent()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestEvent()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestEvent()" e="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::Event" />
	<edge mark="1" b="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::Event" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation:test.exe" />
	<edge b="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::Event" e="TypeSpec:System.Action`1&lt;System.Type&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestEvent()" e="MemberRef:System.Void System.Action`1&lt;System.Type&gt;::Invoke(!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestEvent()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestEvent()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestEvent()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestEvent()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::Invoke(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::Invoke(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::Invoke(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::Invoke(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestMethodReturnValue()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestMethodReturnValue()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestMethodReturnValue()" e="Method:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::MethodReturnValue()" />
	<edge mark="1" b="Method:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::MethodReturnValue()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestMethodReturnValue()" e="MemberRef:System.Void System.Action`1&lt;System.Type&gt;::Invoke(!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestMethodReturnValue()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestMethodReturnValue()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestMethodReturnValue()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestMethodReturnValue()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::Invoke(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::Invoke(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge b="Method:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::MethodReturnValue()" e="TypeSpec:System.Action`1&lt;System.Type&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLocalMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLocalMethod()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLocalMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::&lt;TestLocalMethod&gt;g__LocalMethod|13_0(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLocalMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLocalMethod()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLocalMethod()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLocalMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::Invoke(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::Invoke(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::&lt;TestLocalMethod&gt;g__LocalMethod|13_0(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLambda()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLambda()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLambda()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::&lt;&gt;9__12_0" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::&lt;&gt;9__12_0" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::&lt;&gt;9__12_0" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLambda()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLambda()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::&lt;&gt;9" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::&lt;&gt;9" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLambda()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::&lt;TestLambda&gt;b__12_0(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLambda()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLambda()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::&lt;&gt;9__12_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLambda()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLambda()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestLambda()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::Invoke(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::Invoke(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::&lt;TestLambda&gt;b__12_0(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::.cctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::.cctor()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::&lt;&gt;9" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/&lt;&gt;c::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestProperty()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestProperty()" e="Method:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::get_Property()" />
	<edge mark="1" b="Method:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::get_Property()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestProperty()" e="MemberRef:System.Void System.Action`1&lt;System.Type&gt;::Invoke(!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestProperty()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestProperty()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestProperty()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestProperty()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::Invoke(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::Invoke(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="Method:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::get_Property()" e="Property:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::Property()" />
	<edge b="Method:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::get_Property()" e="TypeSpec:System.Action`1&lt;System.Type&gt;" />
	<edge mark="1" b="Method:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::get_Property()" e="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::&lt;Property&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::&lt;Property&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation:test.exe" />
	<edge b="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::&lt;Property&gt;k__BackingField" e="TypeSpec:System.Action`1&lt;System.Type&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestField()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestField()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestField()" e="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::field" />
	<edge mark="1" b="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::field" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation:test.exe" />
	<edge b="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::field" e="TypeSpec:System.Action`1&lt;System.Type&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestField()" e="MemberRef:System.Void System.Action`1&lt;System.Type&gt;::Invoke(!0)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestField()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestField()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestField()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation::TestField()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::Invoke(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate::Invoke(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/DelegateCreation/UnannotatedDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod::Test()" e="Method:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod::GetValueWithAnnotatedField()" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod::GetValueWithAnnotatedField()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod::AcceptValueWithAnnotatedField(Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod::AcceptValueWithAnnotatedField(Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod::AcceptValueWithAnnotatedField(Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod::AcceptValueWithAnnotatedField(Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField)" e="ModuleRef:nonexistent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod::AcceptValueWithAnnotatedField(Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField)" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField::_typeField" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField::_typeField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField::_typeField" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod::GetValueWithAnnotatedField()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField:test.exe" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod::GetValueWithAnnotatedField()" e="ModuleRef:nonexistent" />
	<edge mark="1" b="Method:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod::GetValueWithAnnotatedField()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField::_typeField" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField:test.exe" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnInteropMethod/ValueWithAnnotatedField::_typeField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericTypeWithStaticMethodViaLdftn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericTypeWithStaticMethodViaLdftn()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationReflection()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationDirectCall()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationDirectCall()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationViaLdftn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationViaLdftn()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;::AnnotatedMethod(System.Type)" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType:test.exe" e="Module:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;::AnnotatedMethod(System.Type)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;::AnnotatedMethod(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1::AnnotatedMethod(System.Type)" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" e="Method:System.Linq.Expressions.ConstantExpression System.Linq.Expressions.Expression::Constant(System.Object,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge b="Method:T[] System.Array::Empty()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1::AnnotatedMethod(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1::AnnotatedMethod(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::&lt;&gt;9" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::&lt;&gt;9" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::&lt;&gt;9" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericTypeWithStaticMethodViaLdftn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationDirectCall()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationViaLdftn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotation(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::.cctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::.cctor()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::&lt;&gt;9" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1::AnnotatedMethod(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/&lt;&gt;c::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericTypeWithStaticMethodViaLdftn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationDirectCall()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationViaLdftn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll2()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::LdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericTypeWithStaticMethodViaLdftn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationReflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationDirectCall()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationViaLdftn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodDynamicallyAccessedMembers()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationViaLdftn()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationViaLdftn()" e="TypeSpec:System.Action`1&lt;System.Type&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationViaLdftn()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;(System.Type)" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotation(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationViaLdftn()" e="MemberRef:System.Void System.Action`1&lt;System.Type&gt;::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationDirectCall()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationDirectCall()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationDirectCall()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationDirectCall()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;(System.Type)" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType:test.exe" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotation&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationDirectCall()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationDirectCall()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationDirectCall()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationDirectCall()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationDirectCall()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationDirectCall()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationReflection()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationReflection()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationReflection()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationReflection()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotationReflection()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericMethodWithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericTypeWithStaticMethodViaLdftn()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericTypeWithStaticMethodViaLdftn()" e="TypeSpec:System.Action`1&lt;System.Type&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericTypeWithStaticMethodViaLdftn()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;::AnnotatedMethod(System.Type)" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType:test.exe" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;::AnnotatedMethod(System.Type)" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType&gt;::AnnotatedMethod(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics/GenericWithAnnotatedMethod`1::AnnotatedMethod(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotationOnGenerics::GenericTypeWithStaticMethodViaLdftn()" e="MemberRef:System.Void System.Action`1&lt;System.Type&gt;::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::ReflectionOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::ReflectionOnly()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicDependency()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicDependency()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembers()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::InstantiateGeneric(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::InstantiateGeneric(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::Test()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::LdToken&lt;System.String&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::LdToken&lt;System.String&gt;()" e="TypeDef:System.String" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::LdToken&lt;System.String&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::LdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::LdToken()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::LdToken()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::LdToken()" e="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::GenericWithAnnotation&lt;TUnknown&gt;()" />
	<edge mark="1" b="MethodSpec:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::GenericWithAnnotation&lt;TUnknown&gt;()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::GenericWithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::LdToken()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::LdToken()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::LdToken()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::LdToken()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::LdToken()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::LdToken()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::GenericWithAnnotation()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1::&lt;&gt;9" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1::&lt;&gt;9" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1:test.exe" />
	<edge b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1::&lt;&gt;9" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1::&lt;&gt;9" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::GenericWithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::ReflectionOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicDependency()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::InstantiateGeneric(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::LdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembersAll()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1::.cctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1::.cctor()" e="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt;::.ctor()" />
	<edge b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt;::.ctor()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1:test.exe" />
	<edge mark="1" b="MemberRef:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt;::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1::.cctor()" e="MemberRef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt;::&lt;&gt;9" />
	<edge b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt;::&lt;&gt;9" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1:test.exe" />
	<edge mark="1" b="MemberRef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt;::&lt;&gt;9" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1&lt;TUnknown&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics/&lt;&gt;c__6`1::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::InstantiateGeneric(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::InstantiateGeneric(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::InstantiateGeneric(System.Type)" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::InstantiateGeneric(System.Type)" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::InstantiateGeneric(System.Type)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::InstantiateGeneric(System.Type)" e="Method:System.Reflection.MethodInfo System.Reflection.MethodInfo::MakeGenericMethod(System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::InstantiateGeneric(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::GenericWithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembers()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembers()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembers()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::GenericWithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembers()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembers()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembers()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembers()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembers()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicallyAccessedMembers()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicDependency()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::GenericWithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicDependency()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicDependency()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicDependency()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicDependency()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicDependency()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicDependency()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicDependency()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::DynamicDependency()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::ReflectionOnly()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::ReflectionOnly()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::ReflectionOnly()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::ReflectionOnly()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::ReflectionOnly()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedGenerics::GenericWithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItself()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItself()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItselfSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItselfSuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnly()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnlyOnVirtual()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnlyOnVirtual()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnGetter()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnSetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnSetter()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnVirtualGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnVirtualGetter()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::AnnotatedAttributeProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::AnnotatedAttributeProperty()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedFields()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::LdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::LdToken()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::LdToken()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::LdToken()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Func`1&lt;System.Type&gt;&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::LdToken()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::LdToken()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::LdToken()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::LdToken()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::LdToken()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::LdToken()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Func`1&lt;System.Type&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::LdToken()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::LdToken()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::LdToken()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property1WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property1WithAnnotation(System.Type)" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property1WithAnnotation(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property1WithAnnotation(System.Type)" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::&lt;Property1WithAnnotation&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::&lt;Property1WithAnnotation&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::&lt;Property1WithAnnotation&gt;k__BackingField" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property1WithAnnotation()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property1WithAnnotation()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property1WithAnnotation()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::&lt;Property1WithAnnotation&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedFields()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedFields()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedFields()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedFields()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedFields()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::&lt;Property1WithAnnotation&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedFields()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::&lt;Property5WithAnnotationOnMembers&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::&lt;Property5WithAnnotationOnMembers&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::&lt;Property5WithAnnotationOnMembers&gt;k__BackingField" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::InternalGetCustomAttributes(System.Reflection.PropertyInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::InternalIsDefined(System.Reflection.PropertyInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Reflection.PropertyInfo System.Attribute::GetParentDefinition(System.Reflection.PropertyInfo,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::InternalGetCustomAttributes(System.Reflection.EventInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Reflection.EventInfo System.Attribute::GetParentDefinition(System.Reflection.EventInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::InternalIsDefined(System.Reflection.EventInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Reflection.ParameterInfo System.Attribute::GetParentDefinition(System.Reflection.ParameterInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::InternalParamGetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::InternalParamIsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void System.Attribute::CopyToAttributeList(System.Collections.Generic.List`1&lt;System.Attribute&gt;,System.Attribute[],System.Collections.Generic.Dictionary`2&lt;System.Type,System.AttributeUsageAttribute&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Type[] System.Attribute::GetIndexParameterTypes(System.Reflection.PropertyInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void System.Attribute::AddAttributesToList(System.Collections.Generic.List`1&lt;System.Attribute&gt;,System.Attribute[],System.Collections.Generic.Dictionary`2&lt;System.Type,System.AttributeUsageAttribute&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.AttributeUsageAttribute System.Attribute::InternalGetAttributeUsage(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::CreateAttributeArrayHelper(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.MemberInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.MemberInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.MemberInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.MemberInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.ParameterInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.ParameterInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Module,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Module)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Module,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.Module,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.Module,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.Module,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Assembly,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Assembly)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Assembly,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.Assembly,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.Assembly,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void System.Attribute::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Int32 System.Attribute::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::AreFieldValuesEqual(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Object System.Attribute::get_TypeId()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::Match(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::IsDefaultAttribute()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Property:System.Object System.Attribute::TypeId()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Object System.Attribute::get_TypeId()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::&lt;PropertyWithAnnotation&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::&lt;PropertyWithAnnotation&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::&lt;PropertyWithAnnotation&gt;k__BackingField" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::get_PropertyWithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::set_PropertyWithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::PropertyWithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::get_PropertyWithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::set_PropertyWithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::&lt;&gt;9" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::&lt;&gt;9" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::&lt;&gt;9" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::&lt;Property1WithAnnotation&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::&lt;Property5WithAnnotationOnMembers&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property1WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property2WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty3WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty4WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty4WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property5WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property5WithAnnotationOnMembers(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty6WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty6WithAnnotationOnMembers(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItself()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItselfSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnlyOnVirtual()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnSetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnVirtualGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::AnnotatedAttributeProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedFields()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::LdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property1WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property2WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property2WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty3WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty3WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty4WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty4WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty4WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property5WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property5WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property5WithAnnotationOnMembers(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty6WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty6WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty6WithAnnotationOnMembers(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty6WithAnnotationOnMembers(System.Type)" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty6WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty6WithAnnotationOnMembers(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty6WithAnnotationOnMembers(System.Type)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty6WithAnnotationOnMembers()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty6WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty6WithAnnotationOnMembers()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property5WithAnnotationOnMembers(System.Type)" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property5WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property5WithAnnotationOnMembers(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property5WithAnnotationOnMembers(System.Type)" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::&lt;Property5WithAnnotationOnMembers&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property5WithAnnotationOnMembers()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property5WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property5WithAnnotationOnMembers()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property5WithAnnotationOnMembers()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::&lt;Property5WithAnnotationOnMembers&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty4WithAnnotation(System.Type)" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty4WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty4WithAnnotation(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty4WithAnnotation(System.Type)" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty4WithAnnotation()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty4WithAnnotation()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty4WithAnnotation()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty3WithAnnotationGetterOnly()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty3WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty3WithAnnotationGetterOnly()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property2WithAnnotationGetterOnly()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property2WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property2WithAnnotationGetterOnly()" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::.cctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::.cctor()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::set_PropertyWithAnnotation(System.Type)" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::PropertyWithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::set_PropertyWithAnnotation(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::set_PropertyWithAnnotation(System.Type)" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::set_PropertyWithAnnotation(System.Type)" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::set_PropertyWithAnnotation(System.Type)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::set_PropertyWithAnnotation(System.Type)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::get_PropertyWithAnnotation()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::PropertyWithAnnotation()" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::get_PropertyWithAnnotation()" e="TypeDef:System.Type" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::.ctor()" e="Method:System.Void System.Attribute::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::InternalGetCustomAttributes(System.Reflection.PropertyInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::InternalIsDefined(System.Reflection.PropertyInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Reflection.PropertyInfo System.Attribute::GetParentDefinition(System.Reflection.PropertyInfo,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::InternalGetCustomAttributes(System.Reflection.EventInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Reflection.EventInfo System.Attribute::GetParentDefinition(System.Reflection.EventInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::InternalIsDefined(System.Reflection.EventInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Reflection.ParameterInfo System.Attribute::GetParentDefinition(System.Reflection.ParameterInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::InternalParamGetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::InternalParamIsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void System.Attribute::CopyToAttributeList(System.Collections.Generic.List`1&lt;System.Attribute&gt;,System.Attribute[],System.Collections.Generic.Dictionary`2&lt;System.Type,System.AttributeUsageAttribute&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Type[] System.Attribute::GetIndexParameterTypes(System.Reflection.PropertyInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void System.Attribute::AddAttributesToList(System.Collections.Generic.List`1&lt;System.Attribute&gt;,System.Attribute[],System.Collections.Generic.Dictionary`2&lt;System.Type,System.AttributeUsageAttribute&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.AttributeUsageAttribute System.Attribute::InternalGetAttributeUsage(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::CreateAttributeArrayHelper(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.MemberInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.MemberInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.MemberInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.MemberInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.ParameterInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.ParameterInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Module,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Module)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Module,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.Module,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.Module,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.Module,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Assembly,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Assembly)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Assembly,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.Assembly,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.Assembly,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void System.Attribute::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Int32 System.Attribute::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::AreFieldValuesEqual(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Object System.Attribute::get_TypeId()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::Match(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::IsDefaultAttribute()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Property:System.Object System.Attribute::TypeId()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Object System.Attribute::get_TypeId()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::&lt;PropertyWithAnnotation&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::get_PropertyWithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::set_PropertyWithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::PropertyWithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::get_PropertyWithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::set_PropertyWithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/&lt;&gt;c::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::&lt;Property1WithAnnotation&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::&lt;Property5WithAnnotationOnMembers&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property1WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property2WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty3WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty4WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty4WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property5WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property5WithAnnotationOnMembers(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty6WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty6WithAnnotationOnMembers(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItself()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItselfSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnlyOnVirtual()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnSetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnVirtualGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::AnnotatedAttributeProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll2()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedFields()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::LdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property1WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property2WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property2WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty3WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty3WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty4WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty4WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty4WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property5WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property5WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property5WithAnnotationOnMembers(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty6WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty6WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty6WithAnnotationOnMembers(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property1WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property2WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property2WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty3WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty3WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty4WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty4WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty4WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property5WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property5WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property5WithAnnotationOnMembers(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty6WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty6WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty6WithAnnotationOnMembers(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property1WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property2WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property2WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty3WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty3WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty4WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty4WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty4WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property5WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property5WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property5WithAnnotationOnMembers(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty6WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty6WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty6WithAnnotationOnMembers(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property1WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property2WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property2WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty3WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty3WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty4WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty4WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty4WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property5WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property5WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property5WithAnnotationOnMembers(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty6WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty6WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty6WithAnnotationOnMembers(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependencySuppressedByRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property1WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property2WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property2WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty3WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty3WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty4WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty4WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty4WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property5WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property5WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property5WithAnnotationOnMembers(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty6WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty6WithAnnotationOnMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_VirtualProperty6WithAnnotationOnMembers(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::DynamicDependency()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::AnnotatedAttributeProperty()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnVirtualGetter()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnVirtualGetter()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnVirtualGetter()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnVirtualGetter()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnVirtualGetter()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty3WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnSetter()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnSetter()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnSetter()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnSetter()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnSetter()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property1WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnGetter()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnGetter()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnGetter()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnGetter()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnGetter()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnlyOnVirtual()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnlyOnVirtual()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnlyOnVirtual()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnlyOnVirtual()" e="Method:System.Reflection.PropertyInfo System.Type::GetProperty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnlyOnVirtual()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::VirtualProperty3WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnlyOnVirtual()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_VirtualProperty3WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnly()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnly()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnly()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnly()" e="Method:System.Reflection.PropertyInfo System.Type::GetProperty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnly()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property2WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyWithGetterOnly()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property2WithAnnotationGetterOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItselfSuppressedByRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItselfSuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItselfSuppressedByRUC()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItselfSuppressedByRUC()" e="Method:System.Reflection.PropertyInfo System.Type::GetProperty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItselfSuppressedByRUC()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItselfSuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItselfSuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property1WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItself()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItself()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItself()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItself()" e="Method:System.Reflection.PropertyInfo System.Type::GetProperty(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItself()" e="Property:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItself()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::get_Property1WithAnnotation()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::ReflectionOnPropertyItself()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty::set_Property1WithAnnotation(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnStatic()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnStatic()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnInstance()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnInstance()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnVirtual()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnVirtual()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnVirtualSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnVirtualSuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependency()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependency()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencySuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencySuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencyByNameOnStatic()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencyByNameOnStatic()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencyByNameOnInstance()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencyByNameOnInstance()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencyByNameOnVirtual()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencyByNameOnVirtual()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembers()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembersSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembersSuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnStatic()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnStatic()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnInstance()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnInstance()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnVirtual()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnVirtual()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnStatic()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnStatic()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnVirtual()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnVirtual()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnVirtual()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Action`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue&gt;" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnVirtual()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue&gt;&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnVirtual()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnVirtual()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnVirtual()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnVirtual()" e="Method:System.Linq.Expressions.ParameterExpression System.Linq.Expressions.Expression::Parameter(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnVirtual()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::VirtualMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnVirtual()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnVirtual()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnVirtual()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnVirtual()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnVirtual()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnVirtual()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="TypeSpec:System.Action`1&lt;Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue&gt;" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::VirtualMethodWithAnnotatedReturnValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnStatic()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnStatic()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnStatic()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::StaticMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnStatic()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnStatic()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnStatic()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.Expression&gt;()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnStatic()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnStatic()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdTokenOnStatic()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::StaticMethodWithAnnotatedReturnValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnVirtual()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnVirtual()" e="TypeSpec:System.Func`1&lt;System.Type&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnVirtual()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnVirtual()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::VirtualMethodWithAnnotatedReturnValue()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnVirtual()" e="MemberRef:System.Void System.Func`1&lt;System.Type&gt;::.ctor(System.Object,System.IntPtr)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnInstance()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnInstance()" e="TypeSpec:System.Func`1&lt;System.Type&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnInstance()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnInstance()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::InstanceMethodWithAnnotatedReturnValue()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnInstance()" e="MemberRef:System.Void System.Func`1&lt;System.Type&gt;::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::InstanceMethodWithAnnotatedReturnValue()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnStatic()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnStatic()" e="TypeSpec:System.Func`1&lt;System.Type&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnStatic()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::StaticMethodWithAnnotatedReturnValue()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::LdftnOnStatic()" e="MemberRef:System.Void System.Func`1&lt;System.Type&gt;::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembersSuppressedByRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembersSuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::StaticMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::InstanceMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::VirtualMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembers()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembers()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembers()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembers()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::StaticMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembers()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::InstanceMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembers()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::VirtualMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembers()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembers()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembers()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembers()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembers()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicallyAccessedMembers()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencyByNameOnVirtual()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::VirtualMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencyByNameOnVirtual()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencyByNameOnInstance()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::InstanceMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencyByNameOnInstance()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencyByNameOnStatic()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::StaticMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencyByNameOnStatic()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencySuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::StaticMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencySuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::InstanceMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencySuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::VirtualMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencySuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencySuppressedByRUC()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencySuppressedByRUC()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencySuppressedByRUC()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencySuppressedByRUC()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencySuppressedByRUC()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencySuppressedByRUC()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependencySuppressedByRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependency()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::StaticMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependency()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::InstanceMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependency()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::VirtualMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependency()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependency()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependency()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependency()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependency()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependency()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependency()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::DynamicDependency()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnVirtualSuppressedByRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnVirtualSuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnVirtualSuppressedByRUC()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnVirtualSuppressedByRUC()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnVirtualSuppressedByRUC()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnVirtualSuppressedByRUC()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::VirtualMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnVirtual()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnVirtual()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnVirtual()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnVirtual()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnVirtual()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnVirtual()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::VirtualMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnInstance()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnInstance()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnInstance()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnInstance()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnInstance()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnInstance()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::InstanceMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnStatic()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnStatic()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnStatic()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnStatic()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnStatic()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::ReflectionOnStatic()" e="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodReturnValue::StaticMethodWithAnnotatedReturnValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Reflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Reflection()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::ReflectionSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::ReflectionSuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependency()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependency()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencySuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencySuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencyByName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencyByName()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembers()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersSuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Ldftn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Ldftn()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnSuppressedByRequiresUnreferencedCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnSuppressedByRequiresUnreferencedCode()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambda()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambda()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLocalMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLocalMethod()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambdaTriggersLamdaAnalysis()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambdaTriggersLamdaAnalysis()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLocalMethodTriggersLocalMethodAnalysis()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLocalMethodTriggersLocalMethodAnalysis()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Ldvirtftn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Ldvirtftn()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdToken()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdToken()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdToken()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action`1&lt;System.Type&gt;&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdToken()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdToken()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdToken()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdToken()" e="Method:System.Linq.Expressions.ParameterExpression System.Linq.Expressions.Expression::Parameter(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdToken()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::MethodWithSingleAnnotatedParameter(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdToken()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdToken()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdToken()" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdToken()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdToken()" e="TypeDef:System.Linq.Expressions.ParameterExpression" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdToken()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action`1&lt;System.Type&gt;&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::MethodWithSingleAnnotatedParameter(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/AttributeWithConstructorWithAnnotation:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/AttributeWithConstructorWithAnnotation:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::InternalGetCustomAttributes(System.Reflection.PropertyInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::InternalIsDefined(System.Reflection.PropertyInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Reflection.PropertyInfo System.Attribute::GetParentDefinition(System.Reflection.PropertyInfo,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::InternalGetCustomAttributes(System.Reflection.EventInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Reflection.EventInfo System.Attribute::GetParentDefinition(System.Reflection.EventInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::InternalIsDefined(System.Reflection.EventInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Reflection.ParameterInfo System.Attribute::GetParentDefinition(System.Reflection.ParameterInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::InternalParamGetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::InternalParamIsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void System.Attribute::CopyToAttributeList(System.Collections.Generic.List`1&lt;System.Attribute&gt;,System.Attribute[],System.Collections.Generic.Dictionary`2&lt;System.Type,System.AttributeUsageAttribute&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Type[] System.Attribute::GetIndexParameterTypes(System.Reflection.PropertyInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void System.Attribute::AddAttributesToList(System.Collections.Generic.List`1&lt;System.Attribute&gt;,System.Attribute[],System.Collections.Generic.Dictionary`2&lt;System.Type,System.AttributeUsageAttribute&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.AttributeUsageAttribute System.Attribute::InternalGetAttributeUsage(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::CreateAttributeArrayHelper(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.MemberInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.MemberInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.MemberInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.MemberInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.ParameterInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.ParameterInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Module,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Module)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Module,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.Module,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.Module,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.Module,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Assembly,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Assembly)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Assembly,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.Assembly,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.Assembly,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void System.Attribute::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Int32 System.Attribute::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::AreFieldValuesEqual(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Object System.Attribute::get_TypeId()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::Match(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Attribute::IsDefaultAttribute()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Property:System.Object System.Attribute::TypeId()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Object System.Attribute::get_TypeId()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/AttributeWithConstructorWithAnnotation::.ctor(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/IWithAnnotatedMethod:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/IWithAnnotatedMethod:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/IWithAnnotatedMethod::AnnotatedMethod(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9__12_0" />
	<edge mark="1" b="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9__12_0" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c:test.exe" />
	<edge b="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9__12_0" e="TypeSpec:System.Action`1&lt;System.Type&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9__14_0" />
	<edge mark="1" b="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9__14_0" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c:test.exe" />
	<edge b="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9__14_0" e="TypeSpec:System.Action`1&lt;System.Type&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;LdftnOnLambda&gt;b__12_0(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;LdftnOnLambdaTriggersLamdaAnalysis&gt;b__14_0(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::MethodWithSingleAnnotatedParameter(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Reflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::ReflectionSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::AnnotatedAttributeConstructor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependency()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencySuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencyByName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Ldftn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnSuppressedByRequiresUnreferencedCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambda()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLocalMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambdaTriggersLamdaAnalysis()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLocalMethodTriggersLocalMethodAnalysis()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Ldvirtftn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::&lt;LdftnOnLocalMethod&gt;g__LocalMethod|13_0(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::&lt;LdftnOnLocalMethodTriggersLocalMethodAnalysis&gt;g__LocalMethod|15_0(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::&lt;LdftnOnLocalMethodTriggersLocalMethodAnalysis&gt;g__LocalMethod|15_0(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::&lt;LdftnOnLocalMethodTriggersLocalMethodAnalysis&gt;g__LocalMethod|15_0(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::&lt;LdftnOnLocalMethod&gt;g__LocalMethod|13_0(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::AnnotatedAttributeConstructor()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::AnnotatedAttributeConstructor()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::AnnotatedAttributeConstructor()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::AnnotatedAttributeConstructor()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::AnnotatedAttributeConstructor()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::AnnotatedAttributeConstructor()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::AnnotatedAttributeConstructor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;LdftnOnLambdaTriggersLamdaAnalysis&gt;b__14_0(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;LdftnOnLambda&gt;b__12_0(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::.cctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::.cctor()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/IWithAnnotatedMethod::AnnotatedMethod(System.Type)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/AttributeWithConstructorWithAnnotation::.ctor(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/AttributeWithConstructorWithAnnotation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/AttributeWithConstructorWithAnnotation::.ctor(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/AttributeWithConstructorWithAnnotation::.ctor(System.Type)" e="Method:System.Void System.Attribute::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/AttributeWithConstructorWithAnnotation:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::InternalGetCustomAttributes(System.Reflection.PropertyInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::InternalIsDefined(System.Reflection.PropertyInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Reflection.PropertyInfo System.Attribute::GetParentDefinition(System.Reflection.PropertyInfo,System.Type[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::InternalGetCustomAttributes(System.Reflection.EventInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Reflection.EventInfo System.Attribute::GetParentDefinition(System.Reflection.EventInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::InternalIsDefined(System.Reflection.EventInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Reflection.ParameterInfo System.Attribute::GetParentDefinition(System.Reflection.ParameterInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::InternalParamGetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::InternalParamIsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void System.Attribute::CopyToAttributeList(System.Collections.Generic.List`1&lt;System.Attribute&gt;,System.Attribute[],System.Collections.Generic.Dictionary`2&lt;System.Type,System.AttributeUsageAttribute&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Type[] System.Attribute::GetIndexParameterTypes(System.Reflection.PropertyInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void System.Attribute::AddAttributesToList(System.Collections.Generic.List`1&lt;System.Attribute&gt;,System.Attribute[],System.Collections.Generic.Dictionary`2&lt;System.Type,System.AttributeUsageAttribute&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.AttributeUsageAttribute System.Attribute::InternalGetAttributeUsage(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::CreateAttributeArrayHelper(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.MemberInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.MemberInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.MemberInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.MemberInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.ParameterInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.ParameterInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Module,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Module)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Module,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.Module,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.Module,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.Module,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Assembly,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Assembly)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute[] System.Attribute::GetCustomAttributes(System.Reflection.Assembly,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.Assembly,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.Assembly,System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Attribute System.Attribute::GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void System.Attribute::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Int32 System.Attribute::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::AreFieldValuesEqual(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Object System.Attribute::get_TypeId()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::Match(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Attribute::IsDefaultAttribute()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Property:System.Object System.Attribute::TypeId()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Object System.Attribute::get_TypeId()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/AttributeWithConstructorWithAnnotation::.ctor(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/IWithAnnotatedMethod:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/IWithAnnotatedMethod::AnnotatedMethod(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9__12_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9__14_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;LdftnOnLambda&gt;b__12_0(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;LdftnOnLambdaTriggersLamdaAnalysis&gt;b__14_0(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::MethodWithSingleAnnotatedParameter(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Reflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::ReflectionSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::AnnotatedAttributeConstructor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependency()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencySuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencyByName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Ldftn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnSuppressedByRequiresUnreferencedCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambda()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLocalMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambdaTriggersLamdaAnalysis()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLocalMethodTriggersLocalMethodAnalysis()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Ldvirtftn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll2()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::&lt;LdftnOnLocalMethod&gt;g__LocalMethod|13_0(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::&lt;LdftnOnLocalMethodTriggersLocalMethodAnalysis&gt;g__LocalMethod|15_0(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Ldvirtftn()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Ldvirtftn()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/IWithAnnotatedMethod:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Ldvirtftn()" e="TypeSpec:System.Action`1&lt;System.Type&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Ldvirtftn()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/IWithAnnotatedMethod::AnnotatedMethod(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Ldvirtftn()" e="MemberRef:System.Void System.Action`1&lt;System.Type&gt;::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLocalMethodTriggersLocalMethodAnalysis()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLocalMethodTriggersLocalMethodAnalysis()" e="TypeSpec:System.Action`1&lt;System.Type&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLocalMethodTriggersLocalMethodAnalysis()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::&lt;LdftnOnLocalMethodTriggersLocalMethodAnalysis&gt;g__LocalMethod|15_0(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLocalMethodTriggersLocalMethodAnalysis()" e="MemberRef:System.Void System.Action`1&lt;System.Type&gt;::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambdaTriggersLamdaAnalysis()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambdaTriggersLamdaAnalysis()" e="TypeSpec:System.Action`1&lt;System.Type&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambdaTriggersLamdaAnalysis()" e="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9__14_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambdaTriggersLamdaAnalysis()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambdaTriggersLamdaAnalysis()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;LdftnOnLambdaTriggersLamdaAnalysis&gt;b__14_0(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambdaTriggersLamdaAnalysis()" e="MemberRef:System.Void System.Action`1&lt;System.Type&gt;::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambdaTriggersLamdaAnalysis()" e="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9__14_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;LdftnOnLambdaTriggersLamdaAnalysis&gt;b__14_0(System.Type)" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLocalMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLocalMethod()" e="TypeSpec:System.Action`1&lt;System.Type&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLocalMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::&lt;LdftnOnLocalMethod&gt;g__LocalMethod|13_0(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLocalMethod()" e="MemberRef:System.Void System.Action`1&lt;System.Type&gt;::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambda()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambda()" e="TypeSpec:System.Action`1&lt;System.Type&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambda()" e="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9__12_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambda()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambda()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;LdftnOnLambda&gt;b__12_0(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambda()" e="MemberRef:System.Void System.Action`1&lt;System.Type&gt;::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnOnLambda()" e="Field:System.Action`1&lt;System.Type&gt; Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters/&lt;&gt;c::&lt;&gt;9__12_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnSuppressedByRequiresUnreferencedCode()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnSuppressedByRequiresUnreferencedCode()" e="TypeSpec:System.Action`1&lt;System.Type&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnSuppressedByRequiresUnreferencedCode()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::MethodWithSingleAnnotatedParameter(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::LdftnSuppressedByRequiresUnreferencedCode()" e="MemberRef:System.Void System.Action`1&lt;System.Type&gt;::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Ldftn()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Ldftn()" e="TypeSpec:System.Action`1&lt;System.Type&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Ldftn()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::MethodWithSingleAnnotatedParameter(System.Type)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Ldftn()" e="MemberRef:System.Void System.Action`1&lt;System.Type&gt;::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersSuppressedByRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersSuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::MethodWithSingleAnnotatedParameter(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembers()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembers()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembers()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::MethodWithSingleAnnotatedParameter(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembers()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembers()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembers()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembers()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembers()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicallyAccessedMembers()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencyByName()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::MethodWithSingleAnnotatedParameter(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencyByName()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencySuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::MethodWithSingleAnnotatedParameter(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencySuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencySuppressedByRUC()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencySuppressedByRUC()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencySuppressedByRUC()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencySuppressedByRUC()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencySuppressedByRUC()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencySuppressedByRUC()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependencySuppressedByRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependency()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::MethodWithSingleAnnotatedParameter(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependency()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependency()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependency()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependency()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependency()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependency()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependency()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::DynamicDependency()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::ReflectionSuppressedByRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::ReflectionSuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::ReflectionSuppressedByRUC()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::ReflectionSuppressedByRUC()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::ReflectionSuppressedByRUC()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::ReflectionSuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::MethodWithSingleAnnotatedParameter(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Reflection()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Reflection()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Reflection()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Reflection()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Reflection()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::Reflection()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodParameters::MethodWithSingleAnnotatedParameter(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Test()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Reflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Reflection()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Ldftn()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Ldftn()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::LdftnOnLambda()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::LdftnOnLambda()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::LdftnOnLocalMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::LdftnOnLocalMethod()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::LdftnOnLocalMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::LdftnOnLambda()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Ldftn()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Reflection()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Reflection()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Reflection()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Reflection()" e="Method:System.Reflection.MethodInfo System.Type::GetMethod(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Reflection()" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Reflection()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::MethodWithAnnotatedThisParameter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::MethodWithAnnotatedThisParameter()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::.ctor()" e="Method:System.Void System.TestSystemTypeBase::.ctor()" />
	<edge mark="1" b="Method:System.Void System.TestSystemTypeBase::.ctor()" e="TypeDef:System.TestSystemTypeBase" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.Assembly System.TestSystemTypeBase::get_Assembly()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.String System.TestSystemTypeBase::get_AssemblyQualifiedName()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::get_BaseType()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.String System.TestSystemTypeBase::get_FullName()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Guid System.TestSystemTypeBase::get_GUID()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.Module System.TestSystemTypeBase::get_Module()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.String System.TestSystemTypeBase::get_Namespace()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::get_UnderlyingSystemType()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.String System.TestSystemTypeBase::get_Name()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.ConstructorInfo[] System.TestSystemTypeBase::GetConstructors(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Boolean)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::GetElementType()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.EventInfo System.TestSystemTypeBase::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.EventInfo[] System.TestSystemTypeBase::GetEvents(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.FieldInfo System.TestSystemTypeBase::GetField(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.FieldInfo[] System.TestSystemTypeBase::GetFields(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::GetInterface(System.String,System.Boolean)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type[] System.TestSystemTypeBase::GetInterfaces()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.MemberInfo[] System.TestSystemTypeBase::GetMembers(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.MethodInfo[] System.TestSystemTypeBase::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type[] System.TestSystemTypeBase::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.PropertyInfo[] System.TestSystemTypeBase::GetProperties(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Object System.TestSystemTypeBase::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsDefined(System.Type,System.Boolean)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.TypeAttributes System.TestSystemTypeBase::GetAttributeFlagsImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.ConstructorInfo System.TestSystemTypeBase::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.MethodInfo System.TestSystemTypeBase::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.PropertyInfo System.TestSystemTypeBase::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::HasElementTypeImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsArrayImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsByRefImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsCOMObjectImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsPointerImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsPrimitiveImpl()" />
	<edge b="Method:System.Void System.TestSystemTypeBase::.ctor()" e="TypeDef:System.TestSystemTypeBase" />
	<edge mark="1" b="Method:System.Void System.TestSystemTypeBase::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.TestSystemTypeBase::.ctor()" e="Method:System.Void System.Type::.ctor()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsPrimitiveImpl()" e="Method:System.Boolean System.Type::IsPrimitiveImpl()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsPrimitiveImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsPrimitiveImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsPointerImpl()" e="Method:System.Boolean System.Type::IsPointerImpl()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsPointerImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsPointerImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsCOMObjectImpl()" e="Method:System.Boolean System.Type::IsCOMObjectImpl()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsCOMObjectImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsCOMObjectImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsByRefImpl()" e="Method:System.Boolean System.Type::IsByRefImpl()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsByRefImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsByRefImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsArrayImpl()" e="Method:System.Boolean System.Type::IsArrayImpl()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsArrayImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsArrayImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::HasElementTypeImpl()" e="Method:System.Boolean System.Type::HasElementTypeImpl()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::HasElementTypeImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::HasElementTypeImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge b="Method:System.Reflection.PropertyInfo System.TestSystemTypeBase::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.PropertyInfo System.TestSystemTypeBase::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo System.TestSystemTypeBase::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.PropertyInfo System.Type::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo System.TestSystemTypeBase::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.PropertyInfo" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo System.TestSystemTypeBase::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge b="Method:System.Reflection.MethodInfo System.TestSystemTypeBase::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.MethodInfo System.TestSystemTypeBase::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.TestSystemTypeBase::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.MethodInfo System.Type::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.TestSystemTypeBase::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.TestSystemTypeBase::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge b="Method:System.Reflection.ConstructorInfo System.TestSystemTypeBase::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.ConstructorInfo System.TestSystemTypeBase::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo System.TestSystemTypeBase::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo System.TestSystemTypeBase::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo System.TestSystemTypeBase::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes System.TestSystemTypeBase::GetAttributeFlagsImpl()" e="Method:System.Reflection.TypeAttributes System.Type::GetAttributeFlagsImpl()" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes System.TestSystemTypeBase::GetAttributeFlagsImpl()" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes System.TestSystemTypeBase::GetAttributeFlagsImpl()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsDefined(System.Type,System.Boolean)" e="Method:System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsDefined(System.Type,System.Boolean)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.TestSystemTypeBase::IsDefined(System.Type,System.Boolean)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge b="Method:System.Object System.TestSystemTypeBase::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.Object[]" />
	<edge b="Method:System.Object System.TestSystemTypeBase::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge b="Method:System.Object System.TestSystemTypeBase::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.String[]" />
	<edge mark="1" b="Method:System.Object System.TestSystemTypeBase::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="Method:System.Object System.Type::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
	<edge mark="1" b="Method:System.Object System.TestSystemTypeBase::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.TestSystemTypeBase::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo[] System.TestSystemTypeBase::GetProperties(System.Reflection.BindingFlags)" e="Method:System.Reflection.PropertyInfo[] System.Type::GetProperties(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.PropertyInfo[] System.TestSystemTypeBase::GetProperties(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.PropertyInfo[]" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo[] System.TestSystemTypeBase::GetProperties(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Type[] System.TestSystemTypeBase::GetNestedTypes(System.Reflection.BindingFlags)" e="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Type[] System.TestSystemTypeBase::GetNestedTypes(System.Reflection.BindingFlags)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Type[] System.TestSystemTypeBase::GetNestedTypes(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::GetNestedType(System.String,System.Reflection.BindingFlags)" e="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::GetNestedType(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::GetNestedType(System.String,System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo[] System.TestSystemTypeBase::GetMethods(System.Reflection.BindingFlags)" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.MethodInfo[] System.TestSystemTypeBase::GetMethods(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo[] System.TestSystemTypeBase::GetMethods(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.MemberInfo[] System.TestSystemTypeBase::GetMembers(System.Reflection.BindingFlags)" e="Method:System.Reflection.MemberInfo[] System.Type::GetMembers(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.MemberInfo[] System.TestSystemTypeBase::GetMembers(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.MemberInfo[]" />
	<edge mark="1" b="Method:System.Reflection.MemberInfo[] System.TestSystemTypeBase::GetMembers(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Type[] System.TestSystemTypeBase::GetInterfaces()" e="Method:System.Type[] System.Type::GetInterfaces()" />
	<edge b="Method:System.Type[] System.TestSystemTypeBase::GetInterfaces()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Type[] System.TestSystemTypeBase::GetInterfaces()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::GetInterface(System.String,System.Boolean)" e="Method:System.Type System.Type::GetInterface(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::GetInterface(System.String,System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::GetInterface(System.String,System.Boolean)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo[] System.TestSystemTypeBase::GetFields(System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo[] System.Type::GetFields(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.FieldInfo[] System.TestSystemTypeBase::GetFields(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.FieldInfo[]" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo[] System.TestSystemTypeBase::GetFields(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.TestSystemTypeBase::GetField(System.String,System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo System.Type::GetField(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.TestSystemTypeBase::GetField(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.FieldInfo" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.TestSystemTypeBase::GetField(System.String,System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.EventInfo[] System.TestSystemTypeBase::GetEvents(System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo[] System.Type::GetEvents(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.EventInfo[] System.TestSystemTypeBase::GetEvents(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.EventInfo[]" />
	<edge mark="1" b="Method:System.Reflection.EventInfo[] System.TestSystemTypeBase::GetEvents(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.EventInfo System.TestSystemTypeBase::GetEvent(System.String,System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.EventInfo System.TestSystemTypeBase::GetEvent(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Reflection.EventInfo System.TestSystemTypeBase::GetEvent(System.String,System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::GetElementType()" e="Method:System.Type System.Type::GetElementType()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::GetElementType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::GetElementType()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Type,System.Boolean)" e="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge b="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Type,System.Boolean)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Type,System.Boolean)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Boolean)" e="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Boolean)" />
	<edge b="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Boolean)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Boolean)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo[] System.TestSystemTypeBase::GetConstructors(System.Reflection.BindingFlags)" e="Method:System.Reflection.ConstructorInfo[] System.Type::GetConstructors(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.ConstructorInfo[] System.TestSystemTypeBase::GetConstructors(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.ConstructorInfo[]" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo[] System.TestSystemTypeBase::GetConstructors(System.Reflection.BindingFlags)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_Name()" e="Property:System.String System.TestSystemTypeBase::Name()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_Name()" e="Method:System.String System.Reflection.MemberInfo::get_Name()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_Name()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_Name()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::get_UnderlyingSystemType()" e="Property:System.Type System.TestSystemTypeBase::UnderlyingSystemType()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::get_UnderlyingSystemType()" e="Method:System.Type System.Type::get_UnderlyingSystemType()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::get_UnderlyingSystemType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::get_UnderlyingSystemType()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_Namespace()" e="Property:System.String System.TestSystemTypeBase::Namespace()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_Namespace()" e="Method:System.String System.Type::get_Namespace()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_Namespace()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_Namespace()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.Module System.TestSystemTypeBase::get_Module()" e="Property:System.Reflection.Module System.TestSystemTypeBase::Module()" />
	<edge mark="1" b="Method:System.Reflection.Module System.TestSystemTypeBase::get_Module()" e="Method:System.Reflection.Module System.Type::get_Module()" />
	<edge mark="1" b="Method:System.Reflection.Module System.TestSystemTypeBase::get_Module()" e="TypeDef:System.Reflection.Module" />
	<edge mark="1" b="Method:System.Reflection.Module System.TestSystemTypeBase::get_Module()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Guid System.TestSystemTypeBase::get_GUID()" e="Property:System.Guid System.TestSystemTypeBase::GUID()" />
	<edge mark="1" b="Method:System.Guid System.TestSystemTypeBase::get_GUID()" e="Method:System.Guid System.Type::get_GUID()" />
	<edge mark="1" b="Method:System.Guid System.TestSystemTypeBase::get_GUID()" e="TypeDef:System.Guid" />
	<edge mark="1" b="Method:System.Guid System.TestSystemTypeBase::get_GUID()" e="TypeDef:System.Guid" />
	<edge mark="1" b="Method:System.Guid System.TestSystemTypeBase::get_GUID()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_FullName()" e="Property:System.String System.TestSystemTypeBase::FullName()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_FullName()" e="Method:System.String System.Type::get_FullName()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_FullName()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_FullName()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::get_BaseType()" e="Property:System.Type System.TestSystemTypeBase::BaseType()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::get_BaseType()" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::get_BaseType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.TestSystemTypeBase::get_BaseType()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_AssemblyQualifiedName()" e="Property:System.String System.TestSystemTypeBase::AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_AssemblyQualifiedName()" e="Method:System.String System.Type::get_AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_AssemblyQualifiedName()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.TestSystemTypeBase::get_AssemblyQualifiedName()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.TestSystemTypeBase::get_Assembly()" e="Property:System.Reflection.Assembly System.TestSystemTypeBase::Assembly()" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.TestSystemTypeBase::get_Assembly()" e="Method:System.Reflection.Assembly System.Type::get_Assembly()" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.TestSystemTypeBase::get_Assembly()" e="TypeDef:System.Reflection.Assembly" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.TestSystemTypeBase::get_Assembly()" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.Assembly System.TestSystemTypeBase::get_Assembly()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.String System.TestSystemTypeBase::get_AssemblyQualifiedName()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::get_BaseType()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.String System.TestSystemTypeBase::get_FullName()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Guid System.TestSystemTypeBase::get_GUID()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.Module System.TestSystemTypeBase::get_Module()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.String System.TestSystemTypeBase::get_Namespace()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::get_UnderlyingSystemType()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.String System.TestSystemTypeBase::get_Name()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.ConstructorInfo[] System.TestSystemTypeBase::GetConstructors(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Boolean)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Object[] System.TestSystemTypeBase::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::GetElementType()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.EventInfo System.TestSystemTypeBase::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.EventInfo[] System.TestSystemTypeBase::GetEvents(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.FieldInfo System.TestSystemTypeBase::GetField(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.FieldInfo[] System.TestSystemTypeBase::GetFields(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::GetInterface(System.String,System.Boolean)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type[] System.TestSystemTypeBase::GetInterfaces()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.MemberInfo[] System.TestSystemTypeBase::GetMembers(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.MethodInfo[] System.TestSystemTypeBase::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type System.TestSystemTypeBase::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Type[] System.TestSystemTypeBase::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.PropertyInfo[] System.TestSystemTypeBase::GetProperties(System.Reflection.BindingFlags)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Object System.TestSystemTypeBase::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsDefined(System.Type,System.Boolean)" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.TypeAttributes System.TestSystemTypeBase::GetAttributeFlagsImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.ConstructorInfo System.TestSystemTypeBase::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.MethodInfo System.TestSystemTypeBase::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Reflection.PropertyInfo System.TestSystemTypeBase::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::HasElementTypeImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsArrayImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsByRefImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsCOMObjectImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsPointerImpl()" />
	<edge mark="1" b="TypeDef:System.TestSystemTypeBase" e="Method:System.Boolean System.TestSystemTypeBase::IsPrimitiveImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Test()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Reflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Reflection()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionSuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionReadOnly()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicDependency()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicDependency()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicDependencySuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicDependencySuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicDependencyByName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicDependencyByName()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembers()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersSuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Test()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::LdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::LdToken()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::LdToken()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::LdToken()" e="TypeSpec:System.Linq.Expressions.Expression`1&lt;System.Action&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::LdToken()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::PotentialWriteAccess(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::LdToken()" e="Method:System.Reflection.MethodBase System.Reflection.MethodBase::GetMethodFromHandle(System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::LdToken()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::LdToken()" e="TypeDef:System.Linq.Expressions.Expression" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::LdToken()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::_annotatedField" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::_annotatedField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::_annotatedField" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::LdToken()" e="Method:System.Reflection.FieldInfo System.Reflection.FieldInfo::GetFieldFromHandle(System.RuntimeFieldHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::LdToken()" e="Method:System.Linq.Expressions.MemberExpression System.Linq.Expressions.Expression::Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::LdToken()" e="Method:System.Linq.Expressions.MethodCallExpression System.Linq.Expressions.Expression::Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::LdToken()" e="MethodSpec:!!0[] System.Array::Empty&lt;System.Linq.Expressions.ParameterExpression&gt;()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::LdToken()" e="MethodSpec:System.Linq.Expressions.Expression`1&lt;!!0&gt; System.Linq.Expressions.Expression::Lambda&lt;System.Action&gt;(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::PotentialWriteAccess(System.Type&amp;)" e="TypeSpec:System.Type&amp;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::PotentialWriteAccess(System.Type&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicNestedTypes(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType::_annotatedField" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType::_annotatedField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType:test.exe" />
	<edge mark="1" b="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType::_annotatedField" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::&lt;&gt;9" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::&lt;&gt;9" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::&lt;&gt;9" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::.cctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::.cctor()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::&lt;&gt;9" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresNonPublicNestedTypes(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Reflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicDependency()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicDependencySuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicDependencyByName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::PotentialWriteAccess(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::LdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/NestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Field:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField/&lt;&gt;c::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Reflection()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicDependency()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicDependencySuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicDependencyByName()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembers()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersSuppressedByRUC()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll2()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes1()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersNestedTypes2()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::PotentialWriteAccess(System.Type&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::LdToken()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Test()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersAll1()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersSuppressedByRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersSuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersSuppressedByRUC()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembersSuppressedByRUC()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembers()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembers()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembers()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembers()" e="Method:System.Void Mono.Linker.Tests.Cases.Expectations.Helpers.DataFlowTypeExtensions::RequiresPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicallyAccessedMembers()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicDependencyByName()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicDependencyByName()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicDependencySuppressedByRUC()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicDependencySuppressedByRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicDependency()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::DynamicDependency()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionReadOnly()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionReadOnly()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionReadOnly()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionReadOnly()" e="Method:System.Reflection.FieldInfo System.Type::GetField(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionReadOnly()" e="Method:System.Object System.Reflection.FieldInfo::GetValue(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionReadOnly()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionSuppressedByRUC()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionSuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionSuppressedByRUC()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionSuppressedByRUC()" e="Method:System.Reflection.FieldInfo System.Type::GetField(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionSuppressedByRUC()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionSuppressedByRUC()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionSuppressedByRUC()" e="Method:System.Void System.Reflection.FieldInfo::SetValue(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::ReflectionSuppressedByRUC()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Reflection()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Reflection()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Reflection()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Reflection()" e="Method:System.Reflection.FieldInfo System.Type::GetField(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Reflection()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/TestType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Reflection()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Reflection()" e="Method:System.Void System.Reflection.FieldInfo::SetValue(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::Reflection()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedField::_annotatedField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::set_PropertyWithAnnotation(System.Type)" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::&lt;PropertyWithAnnotation&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::get_PropertyWithAnnotation()" e="Field:System.Type Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedProperty/AttributeWithPropertyWithAnnotation::&lt;PropertyWithAnnotation&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::LdftnOnLocalMethod()" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::LdftnOnLocalMethod()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::&lt;LdftnOnLocalMethod&gt;g__LocalMethod|4_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::LdftnOnLocalMethod()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::&lt;LdftnOnLocalMethod&gt;g__LocalMethod|4_0()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::MethodWithAnnotatedThisParameter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::MethodWithAnnotatedThisParameter()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::LdftnOnLambda()" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::LdftnOnLambda()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::&lt;LdftnOnLambda&gt;b__3_0()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::LdftnOnLambda()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::&lt;LdftnOnLambda&gt;b__3_0()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::MethodWithAnnotatedThisParameter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::MethodWithAnnotatedThisParameter()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Ldftn()" e="TypeDef:System.Action" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Ldftn()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::MethodWithAnnotatedThisParameter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::Ldftn()" e="Method:System.Void System.Action::.ctor(System.Object,System.IntPtr)" />
	<edge b="Field:T[] System.SpanDebugView`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="ModuleRef:QCall" />
	<edge b="Method:T[] System.ReadOnlySpan`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:T&amp; System.Span`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.Span`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::GetPinnableReference()" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.ArraySegment`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::GetPinnableReference()" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge b="Method:T[] System.SpanDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToTruncating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToSaturating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToChecked(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::&lt;LdftnOnLambda&gt;b__3_0()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.AnnotatedMembersAccessedViaReflection/AnnotatedMethodThisParameter::&lt;LdftnOnLocalMethod&gt;g__LocalMethod|4_0()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ArraySegment`1&lt;T&gt; System.ArraySegment`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
</dependencies>