<?xml version="1.0" encoding="utf-8"?>
<dependencies version="1.2">
	<edge mark="1" b="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" e="Module:test.exe" />
	<edge mark="1" b="Module:test.exe" e="Assembly:test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Void" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Module:System.Private.CoreLib.dll" e="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeDef:System.Type" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicParameterlessConstructor(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicParameterlessConstructor(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PrivateParameterlessConstructorType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PrivateParameterlessConstructorType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicParameterlessConstructor(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicParameterlessConstructor(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBeforeFieldInitType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBeforeFieldInitType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicParameterlessConstructor(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicParameterlessConstructor(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicConstructors(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBeforeFieldInitType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBeforeFieldInitType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicConstructors(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsPrivateParameterlessConstructorType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsPrivateParameterlessConstructorType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicConstructors(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicConstructors(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBeforeFieldInitType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBeforeFieldInitType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicConstructors(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllConstructors(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllConstructors(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllConstructors(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicMethods(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicMethods(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllMethods(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllMethods(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicFields(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicFields(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllFields(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllFields(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicNestedTypes(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicNestedTypes(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicNestedTypes(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicNestedTypes(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllNestedTypes(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllNestedTypes(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicProperties(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicProperties(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllProperties(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllProperties(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicEvents(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicEvents(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicEvents(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicEvents(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllEvents(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllEvents(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/InterfacesType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/InterfacesType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireInterfaces(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireInterfaces(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAll(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAll(System.Type)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBeforeFieldInitType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsType::.ctor(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBeforeFieldInitType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBeforeFieldInitType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.ctor(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicMethod1()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicMethod2(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_PublicProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_PublicStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_PublicPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::InternalMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_ProtectedProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_PrivateProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_ProtectedStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_PrivateStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::get_ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::set_ProtectedPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::get_ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::InternalMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_ProtectedProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PrivateProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_ProtectedStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PrivateStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_ProtectedPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicMethod1()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicMethod2(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PublicProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PublicStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_PublicPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::PublicField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::PublicField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::PublicField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Boolean" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::PublicStringField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::PublicStringField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::PublicStringField" e="TypeDef:System.String" />
	<edge mark="1" b="TypeDef:System.String" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::HideField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::HideField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::HideField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::StaticPublicField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::StaticPublicField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::StaticPublicField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::StaticPublicStringField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::StaticPublicStringField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::StaticPublicStringField" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::HideStaticField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::HideStaticField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsType::HideStaticField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::PublicBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::PublicBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::PublicBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::HideField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::HideField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::HideField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::StaticPublicBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::StaticPublicBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::StaticPublicBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::HideStaticField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::HideStaticField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicFieldsBaseType::HideStaticField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::InternalField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::InternalField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::InternalField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::ProtectedField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::ProtectedField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::ProtectedField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PrivateField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PrivateField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PrivateField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PublicProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PublicProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PublicProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;ProtectedProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;ProtectedProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;ProtectedProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PrivateProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PrivateProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PrivateProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;HideProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;HideProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;HideProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PublicEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PublicEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge mark="1" b="TypeDef:System.EventArgs" e="Module:System.Private.CoreLib.dll" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PublicEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeDef:System.EventHandler`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::ProtectedEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::ProtectedEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::ProtectedEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PrivateEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PrivateEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PrivateEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::HideEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::HideEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::HideEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::StaticProtectedField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::StaticProtectedField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::StaticProtectedField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::StaticPrivateField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::StaticPrivateField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::StaticPrivateField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PublicStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PublicStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PublicStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::ProtectedStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::ProtectedStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::ProtectedStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PrivateStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PrivateStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::PrivateStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsBaseType::ProtectedBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsBaseType::ProtectedBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsBaseType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsBaseType::ProtectedBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsBaseType::StaticProtectedBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsBaseType::StaticProtectedBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicFieldsBaseType::StaticProtectedBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::InternalField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::InternalField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::InternalField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::ProtectedField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::ProtectedField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::ProtectedField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PrivateField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PrivateField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PrivateField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PublicProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PublicProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PublicProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;ProtectedProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;ProtectedProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;ProtectedProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PrivateProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PrivateProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PrivateProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;HideProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;HideProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;HideProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::ProtectedEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::ProtectedEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::ProtectedEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PrivateEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PrivateEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PrivateEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticProtectedField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticProtectedField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticProtectedField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticPrivateField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticPrivateField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticPrivateField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::ProtectedStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::ProtectedStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::ProtectedStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PrivateStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PrivateStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PrivateStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::ProtectedBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::ProtectedBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::ProtectedBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::StaticProtectedBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::StaticProtectedBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::StaticProtectedBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicStringField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicStringField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::PublicStringField" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticPublicField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticPublicField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticPublicField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticPublicStringField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticPublicStringField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::StaticPublicStringField" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideStaticField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideStaticField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsType::HideStaticField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::PublicBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::PublicBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::PublicBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::HideField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::HideField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::HideField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::StaticPublicBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::StaticPublicBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::StaticPublicBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::HideStaticField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::HideStaticField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllFieldsBaseType::HideStaticField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/HideNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/HideNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/HideNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Field:System.MulticastDelegate System.Delegate/InvocationListEnumerator`1::_delegate" />
	<edge mark="1" b="Field:System.MulticastDelegate System.Delegate/InvocationListEnumerator`1::_delegate" e="TypeDef:System.Delegate/InvocationListEnumerator`1" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.MulticastDelegate System.Delegate/InvocationListEnumerator`1::_delegate" e="TypeDef:System.MulticastDelegate" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Field:System.Int32 System.Delegate/InvocationListEnumerator`1::_index" />
	<edge mark="1" b="Field:System.Int32 System.Delegate/InvocationListEnumerator`1::_index" e="TypeDef:System.Delegate/InvocationListEnumerator`1" />
	<edge mark="1" b="Field:System.Int32 System.Delegate/InvocationListEnumerator`1::_index" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Int32" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Field:TDelegate System.Delegate/InvocationListEnumerator`1::_current" />
	<edge mark="1" b="Field:TDelegate System.Delegate/InvocationListEnumerator`1::_current" e="TypeDef:System.Delegate/InvocationListEnumerator`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Delegate/InvocationListEnumerator`1" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::HasFlagsAttribute" />
	<edge mark="1" b="Field:System.Boolean System.Enum/EnumInfo`1::HasFlagsAttribute" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Boolean System.Enum/EnumInfo`1::HasFlagsAttribute" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::ValuesAreSequentialFromZero" />
	<edge mark="1" b="Field:System.Boolean System.Enum/EnumInfo`1::ValuesAreSequentialFromZero" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Boolean System.Enum/EnumInfo`1::ValuesAreSequentialFromZero" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TStorage[] System.Enum/EnumInfo`1::Values" />
	<edge mark="1" b="Field:TStorage[] System.Enum/EnumInfo`1::Values" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge b="Field:TStorage[] System.Enum/EnumInfo`1::Values" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String[] System.Enum/EnumInfo`1::Names" />
	<edge mark="1" b="Field:System.String[] System.Enum/EnumInfo`1::Names" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge b="Field:System.String[] System.Enum/EnumInfo`1::Names" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TResult[] System.Enum/EnumInfo`1::CloneValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9" />
	<edge mark="1" b="Field:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9" e="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" />
	<edge b="Field:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9" e="TypeSpec:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt;:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt;:System.Private.CoreLib.dll" e="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9__63_0" />
	<edge mark="1" b="Field:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9__63_0" e="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeDef:System.Char" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Module:System.Private.CoreLib.dll" />
	<edge b="Field:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9__63_0" e="TypeSpec:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt;" />
	<edge mark="1" b="TypeSpec:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt;" e="TypeDef:System.Buffers.SpanAction`2" />
	<edge mark="1" b="TypeDef:System.Buffers.SpanAction`2" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::&lt;FormatNumberAsHex&gt;b__63_0(System.Span`1&lt;System.Char&gt;,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.IComparable" />
	<edge mark="1" b="TypeDef:System.IComparable" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IComparable::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.ISpanFormattable" />
	<edge mark="1" b="TypeDef:System.ISpanFormattable" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.IFormattable" />
	<edge mark="1" b="TypeDef:System.IFormattable" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.IFormattable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.IConvertible" />
	<edge mark="1" b="TypeDef:System.IConvertible" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.IConvertible::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.RuntimeType[] System.Enum::s_underlyingTypes" />
	<edge mark="1" b="Field:System.RuntimeType[] System.Enum::s_underlyingTypes" e="TypeDef:System.Enum" />
	<edge mark="1" b="TypeDef:System.Enum" e="Module:System.Private.CoreLib.dll" />
	<edge b="Field:System.RuntimeType[] System.Enum::s_underlyingTypes" e="TypeSpec:System.RuntimeType[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.RuntimeType[]:System.Private.CoreLib.dll" e="TypeDef:System.RuntimeType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.RuntimeType:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.RuntimeType[] System.Enum::s_underlyingTypes" e="Method:System.Void System.Enum::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Char System.Enum::EnumSeparatorChar" />
	<edge mark="1" b="Field:System.Char System.Enum::EnumSeparatorChar" e="TypeDef:System.Enum" />
	<edge mark="1" b="Field:System.Char System.Enum::EnumSeparatorChar" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::InternalGetUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::GetEnumInfo(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.RuntimeType,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetNameInlined(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNamesNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Enum::GetUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum[] System.Enum::GetValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValues(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingTypeNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::HasFlag(System.Enum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefinedPrimitive(System.RuntimeType,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::ToUInt64(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::GetValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatNumberAsHex(System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::Format(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatUnconstrained(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetMultipleEnumsFlagsFormatResultLength(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::WriteMultipleFoundFlagsNames(System.String[],System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::ValidateRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidEmptyParseArgument()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.FormatException System.Enum::CreateInvalidFormatSpecifierException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.InvalidOperationException System.Enum::CreateUnknownEnumTypeException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.Enum::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.SByte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Byte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSorted(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::AssertValidGenerics()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::&lt;GetEnumInfo&gt;g__InitializeEnumInfo|7_0(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::&lt;TryParse&gt;g__TryParseRareTypes|41_0(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|55_0(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|56_0(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCode(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCodeHelper(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.ValueType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.MulticastDelegate System.Delegate/InvocationListEnumerator`1::_delegate" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.Delegate/InvocationListEnumerator`1::_index" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TDelegate System.Delegate/InvocationListEnumerator`1::_current" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate/InvocationListEnumerator`1::.ctor(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate/InvocationListEnumerator`1::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate/InvocationListEnumerator`1::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:TDelegate System.Delegate/InvocationListEnumerator`1::Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.ICloneable" />
	<edge mark="1" b="TypeDef:System.ICloneable" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.ICloneable::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Runtime.Serialization.ISerializable" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.ISerializable" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_target" />
	<edge mark="1" b="Field:System.Object System.Delegate::_target" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeDef:System.Delegate" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Object System.Delegate::_target" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:System.Object" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_methodBase" />
	<edge mark="1" b="Field:System.Object System.Delegate::_methodBase" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Field:System.Object System.Delegate::_methodBase" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtr" />
	<edge mark="1" b="Field:System.IntPtr System.Delegate::_methodPtr" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Field:System.IntPtr System.Delegate::_methodPtr" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtrAux" />
	<edge mark="1" b="Field:System.IntPtr System.Delegate::_methodPtrAux" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Field:System.IntPtr System.Delegate::_methodPtrAux" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvokeImpl(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateNoSecurityCheck(System.Type,System.Object,System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateInternal(System.RuntimeType,System.Reflection.RuntimeMethodInfo,System.Object,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Object,System.RuntimeType,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Object,System.IRuntimeMethodInfo,System.RuntimeType,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAlloc(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAlloc(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAllocLike(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAllocLike(System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualTypes(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::DelegateConstruct(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetMulticastInvoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetInvokeMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IRuntimeMethodInfo System.Delegate::FindMethodHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::FindMethodHandle(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.Delegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate::EnumerateInvocationList(TDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvoke(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveAll(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Equality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Inequality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;InternalEqualMethodHandles&gt;g____PInvoke|33_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Delegate::Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Delegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Reflection.MethodInfo System.Delegate::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Runtime.Serialization.ISerializable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.MulticastDelegate::_invocationList" />
	<edge mark="1" b="Field:System.Object System.MulticastDelegate::_invocationList" e="TypeDef:System.MulticastDelegate" />
	<edge mark="1" b="Field:System.Object System.MulticastDelegate::_invocationList" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.MulticastDelegate::_invocationCount" />
	<edge mark="1" b="Field:System.IntPtr System.MulticastDelegate::_invocationCount" e="TypeDef:System.MulticastDelegate" />
	<edge mark="1" b="Field:System.IntPtr System.MulticastDelegate::_invocationCount" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::IsUnmanagedFunctionPtr()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListLogicallyNull()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListEquals(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::TrySetSlot(System.Object[],System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::StoreDynamicMethod(System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object[] System.MulticastDelegate::DeleteFromInvocationList(System.Object[],System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::EqualInvocationLists(System.Object[],System.Object[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::TryGetAt(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.MulticastDelegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::ThrowNullThisInDelegateToInstance()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosedStatic(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorRTClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorOpened(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorVirtualDispatch(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleClosedStatic(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleOpened(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleVirtualDispatch(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Equality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Inequality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.MulticastDelegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/ProtectedNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/ProtectedNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/ProtectedNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Field:System.MulticastDelegate System.Delegate/InvocationListEnumerator`1::_delegate" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Field:System.Int32 System.Delegate/InvocationListEnumerator`1::_index" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Field:TDelegate System.Delegate/InvocationListEnumerator`1::_current" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Delegate/InvocationListEnumerator`1" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::HasFlagsAttribute" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::ValuesAreSequentialFromZero" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TStorage[] System.Enum/EnumInfo`1::Values" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String[] System.Enum/EnumInfo`1::Names" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TResult[] System.Enum/EnumInfo`1::CloneValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9__63_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::&lt;FormatNumberAsHex&gt;b__63_0(System.Span`1&lt;System.Char&gt;,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IComparable::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.IConvertible::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.RuntimeType[] System.Enum::s_underlyingTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Char System.Enum::EnumSeparatorChar" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::InternalGetUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::GetEnumInfo(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.RuntimeType,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetNameInlined(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNamesNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Enum::GetUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum[] System.Enum::GetValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValues(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingTypeNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::HasFlag(System.Enum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefinedPrimitive(System.RuntimeType,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::ToUInt64(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::GetValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatNumberAsHex(System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::Format(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatUnconstrained(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetMultipleEnumsFlagsFormatResultLength(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::WriteMultipleFoundFlagsNames(System.String[],System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::ValidateRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidEmptyParseArgument()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.FormatException System.Enum::CreateInvalidFormatSpecifierException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.InvalidOperationException System.Enum::CreateUnknownEnumTypeException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.Enum::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.SByte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Byte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSorted(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::AssertValidGenerics()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::&lt;GetEnumInfo&gt;g__InitializeEnumInfo|7_0(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::&lt;TryParse&gt;g__TryParseRareTypes|41_0(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|55_0(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|56_0(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCode(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCodeHelper(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.ValueType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.MulticastDelegate System.Delegate/InvocationListEnumerator`1::_delegate" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.Delegate/InvocationListEnumerator`1::_index" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TDelegate System.Delegate/InvocationListEnumerator`1::_current" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate/InvocationListEnumerator`1::.ctor(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate/InvocationListEnumerator`1::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate/InvocationListEnumerator`1::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:TDelegate System.Delegate/InvocationListEnumerator`1::Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.ICloneable::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_target" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_methodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtr" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtrAux" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvokeImpl(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateNoSecurityCheck(System.Type,System.Object,System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateInternal(System.RuntimeType,System.Reflection.RuntimeMethodInfo,System.Object,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Object,System.RuntimeType,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Object,System.IRuntimeMethodInfo,System.RuntimeType,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAlloc(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAlloc(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAllocLike(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAllocLike(System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualTypes(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::DelegateConstruct(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetMulticastInvoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetInvokeMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IRuntimeMethodInfo System.Delegate::FindMethodHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::FindMethodHandle(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.Delegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate::EnumerateInvocationList(TDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvoke(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveAll(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Equality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Inequality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;InternalEqualMethodHandles&gt;g____PInvoke|33_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Delegate::Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Delegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Reflection.MethodInfo System.Delegate::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.MulticastDelegate::_invocationList" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.MulticastDelegate::_invocationCount" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::IsUnmanagedFunctionPtr()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListLogicallyNull()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListEquals(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::TrySetSlot(System.Object[],System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::StoreDynamicMethod(System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object[] System.MulticastDelegate::DeleteFromInvocationList(System.Object[],System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::EqualInvocationLists(System.Object[],System.Object[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::TryGetAt(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.MulticastDelegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::ThrowNullThisInDelegateToInstance()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosedStatic(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorRTClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorOpened(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorVirtualDispatch(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleClosedStatic(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleOpened(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleVirtualDispatch(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Equality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Inequality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.MulticastDelegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/ProtectedNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/ProtectedNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/ProtectedNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Field:System.MulticastDelegate System.Delegate/InvocationListEnumerator`1::_delegate" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Field:System.Int32 System.Delegate/InvocationListEnumerator`1::_index" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Field:TDelegate System.Delegate/InvocationListEnumerator`1::_current" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Delegate/InvocationListEnumerator`1" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::HasFlagsAttribute" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::ValuesAreSequentialFromZero" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TStorage[] System.Enum/EnumInfo`1::Values" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String[] System.Enum/EnumInfo`1::Names" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TResult[] System.Enum/EnumInfo`1::CloneValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9__63_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::&lt;FormatNumberAsHex&gt;b__63_0(System.Span`1&lt;System.Char&gt;,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IComparable::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.IConvertible::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.RuntimeType[] System.Enum::s_underlyingTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Char System.Enum::EnumSeparatorChar" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::InternalGetUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::GetEnumInfo(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.RuntimeType,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetNameInlined(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNamesNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Enum::GetUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum[] System.Enum::GetValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValues(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingTypeNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::HasFlag(System.Enum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefinedPrimitive(System.RuntimeType,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::ToUInt64(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::GetValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatNumberAsHex(System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::Format(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatUnconstrained(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetMultipleEnumsFlagsFormatResultLength(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::WriteMultipleFoundFlagsNames(System.String[],System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::ValidateRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidEmptyParseArgument()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.FormatException System.Enum::CreateInvalidFormatSpecifierException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.InvalidOperationException System.Enum::CreateUnknownEnumTypeException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.Enum::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.SByte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Byte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSorted(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::AssertValidGenerics()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::&lt;GetEnumInfo&gt;g__InitializeEnumInfo|7_0(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::&lt;TryParse&gt;g__TryParseRareTypes|41_0(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|55_0(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|56_0(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCode(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCodeHelper(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.ValueType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.MulticastDelegate System.Delegate/InvocationListEnumerator`1::_delegate" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.Delegate/InvocationListEnumerator`1::_index" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TDelegate System.Delegate/InvocationListEnumerator`1::_current" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate/InvocationListEnumerator`1::.ctor(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate/InvocationListEnumerator`1::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate/InvocationListEnumerator`1::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:TDelegate System.Delegate/InvocationListEnumerator`1::Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.ICloneable::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_target" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_methodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtr" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtrAux" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvokeImpl(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateNoSecurityCheck(System.Type,System.Object,System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateInternal(System.RuntimeType,System.Reflection.RuntimeMethodInfo,System.Object,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Object,System.RuntimeType,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Object,System.IRuntimeMethodInfo,System.RuntimeType,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAlloc(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAlloc(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAllocLike(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAllocLike(System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualTypes(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::DelegateConstruct(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetMulticastInvoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetInvokeMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IRuntimeMethodInfo System.Delegate::FindMethodHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::FindMethodHandle(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.Delegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate::EnumerateInvocationList(TDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvoke(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveAll(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Equality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Inequality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;InternalEqualMethodHandles&gt;g____PInvoke|33_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Delegate::Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Delegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Reflection.MethodInfo System.Delegate::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.MulticastDelegate::_invocationList" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.MulticastDelegate::_invocationCount" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::IsUnmanagedFunctionPtr()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListLogicallyNull()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListEquals(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::TrySetSlot(System.Object[],System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::StoreDynamicMethod(System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object[] System.MulticastDelegate::DeleteFromInvocationList(System.Object[],System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::EqualInvocationLists(System.Object[],System.Object[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::TryGetAt(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.MulticastDelegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::ThrowNullThisInDelegateToInstance()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosedStatic(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorRTClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorOpened(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorVirtualDispatch(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleClosedStatic(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleOpened(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleVirtualDispatch(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Equality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Inequality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.MulticastDelegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/HideNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/HideNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/HideNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Field:System.MulticastDelegate System.Delegate/InvocationListEnumerator`1::_delegate" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Field:System.Int32 System.Delegate/InvocationListEnumerator`1::_index" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Field:TDelegate System.Delegate/InvocationListEnumerator`1::_current" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Delegate/InvocationListEnumerator`1" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::HasFlagsAttribute" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::ValuesAreSequentialFromZero" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TStorage[] System.Enum/EnumInfo`1::Values" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String[] System.Enum/EnumInfo`1::Names" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TResult[] System.Enum/EnumInfo`1::CloneValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9__63_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::&lt;FormatNumberAsHex&gt;b__63_0(System.Span`1&lt;System.Char&gt;,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IComparable::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.IConvertible::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.RuntimeType[] System.Enum::s_underlyingTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Char System.Enum::EnumSeparatorChar" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::InternalGetUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::GetEnumInfo(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.RuntimeType,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetNameInlined(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNamesNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Enum::GetUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum[] System.Enum::GetValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValues(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingTypeNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::HasFlag(System.Enum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefinedPrimitive(System.RuntimeType,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::ToUInt64(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::GetValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatNumberAsHex(System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::Format(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatUnconstrained(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetMultipleEnumsFlagsFormatResultLength(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::WriteMultipleFoundFlagsNames(System.String[],System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::ValidateRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidEmptyParseArgument()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.FormatException System.Enum::CreateInvalidFormatSpecifierException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.InvalidOperationException System.Enum::CreateUnknownEnumTypeException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.Enum::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.SByte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Byte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSorted(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::AssertValidGenerics()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::&lt;GetEnumInfo&gt;g__InitializeEnumInfo|7_0(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::&lt;TryParse&gt;g__TryParseRareTypes|41_0(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|55_0(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|56_0(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCode(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCodeHelper(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.ValueType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.MulticastDelegate System.Delegate/InvocationListEnumerator`1::_delegate" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.Delegate/InvocationListEnumerator`1::_index" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TDelegate System.Delegate/InvocationListEnumerator`1::_current" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate/InvocationListEnumerator`1::.ctor(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate/InvocationListEnumerator`1::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate/InvocationListEnumerator`1::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:TDelegate System.Delegate/InvocationListEnumerator`1::Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.ICloneable::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_target" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_methodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtr" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtrAux" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvokeImpl(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateNoSecurityCheck(System.Type,System.Object,System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateInternal(System.RuntimeType,System.Reflection.RuntimeMethodInfo,System.Object,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Object,System.RuntimeType,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Object,System.IRuntimeMethodInfo,System.RuntimeType,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAlloc(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAlloc(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAllocLike(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAllocLike(System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualTypes(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::DelegateConstruct(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetMulticastInvoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetInvokeMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IRuntimeMethodInfo System.Delegate::FindMethodHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::FindMethodHandle(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.Delegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate::EnumerateInvocationList(TDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvoke(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveAll(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Equality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Inequality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;InternalEqualMethodHandles&gt;g____PInvoke|33_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Delegate::Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Delegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Reflection.MethodInfo System.Delegate::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.MulticastDelegate::_invocationList" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.MulticastDelegate::_invocationCount" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::IsUnmanagedFunctionPtr()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListLogicallyNull()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListEquals(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::TrySetSlot(System.Object[],System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::StoreDynamicMethod(System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object[] System.MulticastDelegate::DeleteFromInvocationList(System.Object[],System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::EqualInvocationLists(System.Object[],System.Object[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::TryGetAt(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.MulticastDelegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::ThrowNullThisInDelegateToInstance()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosedStatic(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorRTClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorOpened(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorVirtualDispatch(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleClosedStatic(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleOpened(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleVirtualDispatch(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Equality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Inequality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.MulticastDelegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicPropertyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicPropertyGetter(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicPropertySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicPropertySetter(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertyOnlyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicPropertyOnlyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertyOnlySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicPropertyOnlySetter(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertyGetterOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertySetterOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyOnlyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertyOnlyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyOnlySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertyOnlySetterOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_ProtectedProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_PrivateProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_ProtectedStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_PrivateStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::get_ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::set_ProtectedPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::get_ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_ProtectedProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PrivateProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_ProtectedStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PrivateStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_ProtectedPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicPropertyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicPropertyGetter(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicPropertySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicPropertySetter(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertyOnlyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicPropertyOnlyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertyOnlySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicPropertyOnlySetter(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertyGetterOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertySetterOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyOnlyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertyOnlyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyOnlySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertyOnlySetterOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesEmpty:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesEmpty:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesWithMethods:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesWithMethods:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesDerived:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesDerived:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesBase:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfaceGeneric`1&lt;System.Int32&gt;:test.exe" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfaceGeneric`1&lt;System.Int32&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfaceGeneric`1&lt;System.Int32&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfaceGeneric`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfaceGeneric`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesOnBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfacesOnBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfaceOnBaseBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfaceOnBaseBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IInterfaceOnBaseBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicNestedType::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/ProtectedNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/ProtectedNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/ProtectedNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/HideNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/HideNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/HideNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Field:System.MulticastDelegate System.Delegate/InvocationListEnumerator`1::_delegate" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Field:System.Int32 System.Delegate/InvocationListEnumerator`1::_index" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Field:TDelegate System.Delegate/InvocationListEnumerator`1::_current" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Delegate/InvocationListEnumerator`1" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::HasFlagsAttribute" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::ValuesAreSequentialFromZero" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TStorage[] System.Enum/EnumInfo`1::Values" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String[] System.Enum/EnumInfo`1::Names" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TResult[] System.Enum/EnumInfo`1::CloneValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9__63_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::&lt;FormatNumberAsHex&gt;b__63_0(System.Span`1&lt;System.Char&gt;,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IComparable::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.IConvertible::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.RuntimeType[] System.Enum::s_underlyingTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Char System.Enum::EnumSeparatorChar" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::InternalGetUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::GetEnumInfo(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.RuntimeType,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetNameInlined(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNamesNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Enum::GetUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum[] System.Enum::GetValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValues(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingTypeNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::HasFlag(System.Enum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefinedPrimitive(System.RuntimeType,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::ToUInt64(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::GetValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatNumberAsHex(System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::Format(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatUnconstrained(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetMultipleEnumsFlagsFormatResultLength(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::WriteMultipleFoundFlagsNames(System.String[],System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::ValidateRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidEmptyParseArgument()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.FormatException System.Enum::CreateInvalidFormatSpecifierException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.InvalidOperationException System.Enum::CreateUnknownEnumTypeException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.Enum::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.SByte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Byte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSorted(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::AssertValidGenerics()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::&lt;GetEnumInfo&gt;g__InitializeEnumInfo|7_0(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::&lt;TryParse&gt;g__TryParseRareTypes|41_0(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|55_0(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|56_0(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCode(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCodeHelper(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.ValueType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.MulticastDelegate System.Delegate/InvocationListEnumerator`1::_delegate" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.Delegate/InvocationListEnumerator`1::_index" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TDelegate System.Delegate/InvocationListEnumerator`1::_current" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate/InvocationListEnumerator`1::.ctor(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate/InvocationListEnumerator`1::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate/InvocationListEnumerator`1::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:TDelegate System.Delegate/InvocationListEnumerator`1::Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.ICloneable::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_target" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.Delegate::_methodBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtr" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.Delegate::_methodPtrAux" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvokeImpl(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateNoSecurityCheck(System.Type,System.Object,System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegateInternal(System.RuntimeType,System.Reflection.RuntimeMethodInfo,System.Object,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Object,System.RuntimeType,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodName(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.String,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Object,System.IRuntimeMethodInfo,System.RuntimeType,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAlloc(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAlloc(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.Delegate::InternalAllocLike(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InternalAllocLike(System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualTypes(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::DelegateConstruct(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetMulticastInvoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::GetInvokeMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IRuntimeMethodInfo System.Delegate::FindMethodHandle()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::FindMethodHandle(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IntPtr System.Delegate::AdjustTarget(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::Clone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Combine(System.Delegate[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.Delegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate::EnumerateInvocationList(TDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::DynamicInvoke(System.Object[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Delegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.Delegate::RemoveAll(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Equality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::op_Inequality(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Delegate::&lt;InternalEqualMethodHandles&gt;g____PInvoke|33_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Delegate::Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Delegate::get_Target()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Delegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Delegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Reflection.MethodInfo System.Delegate::Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Object System.MulticastDelegate::_invocationList" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.IntPtr System.MulticastDelegate::_invocationCount" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::IsUnmanagedFunctionPtr()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListLogicallyNull()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::InvocationListEquals(System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::TrySetSlot(System.Object[],System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::StoreDynamicMethod(System.Reflection.MethodInfo)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object[] System.MulticastDelegate::DeleteFromInvocationList(System.Object[],System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::EqualInvocationLists(System.Object[],System.Object[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::TryGetAt(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.MulticastDelegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.MulticastDelegate::GetTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::ThrowNullThisInDelegateToInstance()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorClosedStatic(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorRTClosed(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorOpened(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorVirtualDispatch(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleClosedStatic(System.Object,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleOpened(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::CtorCollectibleVirtualDispatch(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.MulticastDelegate::.ctor(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Equality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::op_Inequality(System.MulticastDelegate,System.MulticastDelegate)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.MulticastDelegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/ProtectedBaseNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/ProtectedBaseNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/ProtectedBaseNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/HideBaseNestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/HideBaseNestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/HideBaseNestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllDerivedInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllDerivedInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1&lt;System.Int64&gt;:test.exe" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeDef:System.Int64" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1&lt;System.Int64&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1&lt;System.Int64&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1::BaseInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1::BaseDefaultMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllDerivedInterface::DerivedInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllDerivedInterface::DerivedDefaultMethod()" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1&lt;System.Int64&gt;:test.exe" e="TypeDef:System.Int64" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1&lt;System.Int64&gt;:test.exe" />
	<edge mark="1" b="TypeSpec:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1&lt;System.Int64&gt;:test.exe" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivatePropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivatePropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivatePropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivateStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivateStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivateStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::StaticPublicBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::StaticPublicBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::StaticPublicBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::StaticProtectedBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::StaticProtectedBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::StaticProtectedBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::StaticPrivateBaseField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::StaticPrivateBaseField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::StaticPrivateBaseField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivatePropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivatePropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticBaseMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::DerivedInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::BaseInterfaceMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivateStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivateStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivatePropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivatePropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivatePropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivateStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivateStaticPropertyOnBase(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStringField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStringField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStringField" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::InternalField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::InternalField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::InternalField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticPublicField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticPublicField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticPublicField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticPublicStringField" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticPublicStringField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.String Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticPublicStringField" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticProtectedField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticProtectedField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticProtectedField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticPrivateField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticPrivateField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::StaticPrivateField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicMethod1()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicMethod2(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::InternalMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticMethod()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideStaticProperty(System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType::parent" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType::parent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType:test.exe" />
	<edge mark="1" b="Field:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType::parent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveBase:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveBase:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveBase::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences&gt;" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.IEquatable`1&lt;Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences&gt;" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeDef:System.IEquatable`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.IEquatable`1::Equals(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface::Equals(Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericBaseClass:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericBaseClass:test.exe" e="Module:test.exe" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1/Enumerator" e="Field:System.Collections.Generic.List`1&lt;T&gt; System.Collections.Generic.List`1/Enumerator::_list" />
	<edge mark="1" b="Field:System.Collections.Generic.List`1&lt;T&gt; System.Collections.Generic.List`1/Enumerator::_list" e="TypeDef:System.Collections.Generic.List`1/Enumerator" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1/Enumerator" e="Module:System.Private.CoreLib.dll" />
	<edge b="Field:System.Collections.Generic.List`1&lt;T&gt; System.Collections.Generic.List`1/Enumerator::_list" e="TypeSpec:System.Collections.Generic.List`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.List`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.List`1" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1/Enumerator" e="Field:System.Int32 System.Collections.Generic.List`1/Enumerator::_index" />
	<edge mark="1" b="Field:System.Int32 System.Collections.Generic.List`1/Enumerator::_index" e="TypeDef:System.Collections.Generic.List`1/Enumerator" />
	<edge mark="1" b="Field:System.Int32 System.Collections.Generic.List`1/Enumerator::_index" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1/Enumerator" e="Field:System.Int32 System.Collections.Generic.List`1/Enumerator::_version" />
	<edge mark="1" b="Field:System.Int32 System.Collections.Generic.List`1/Enumerator::_version" e="TypeDef:System.Collections.Generic.List`1/Enumerator" />
	<edge mark="1" b="Field:System.Int32 System.Collections.Generic.List`1/Enumerator::_version" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1/Enumerator" e="Field:T System.Collections.Generic.List`1/Enumerator::_current" />
	<edge mark="1" b="Field:T System.Collections.Generic.List`1/Enumerator::_current" e="TypeDef:System.Collections.Generic.List`1/Enumerator" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.Generic.List`1/Enumerator" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::HasFlagsAttribute" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Boolean System.Enum/EnumInfo`1::ValuesAreSequentialFromZero" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:TStorage[] System.Enum/EnumInfo`1::Values" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.String[] System.Enum/EnumInfo`1::Names" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TResult[] System.Enum/EnumInfo`1::CloneValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Enum/&lt;&gt;c__63`1&lt;TStorage&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Buffers.SpanAction`2&lt;System.Char,System.IntPtr&gt; System.Enum/&lt;&gt;c__63`1::&lt;&gt;9__63_0" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum/&lt;&gt;c__63`1::&lt;FormatNumberAsHex&gt;b__63_0(System.Span`1&lt;System.Char&gt;,System.IntPtr)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IComparable::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.IConvertible::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.RuntimeType[] System.Enum::s_underlyingTypes" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Char System.Enum::EnumSeparatorChar" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::InternalGetUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::GetEnumInfo(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.RuntimeType,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetName(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetNameInlined(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNames(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String[] System.Enum::GetNamesNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Type System.Enum::GetUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum[] System.Enum::GetValues()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValues(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Array System.Enum::GetValuesAsUnderlyingTypeNoCopy(System.RuntimeType)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::HasFlag(System.Enum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(TEnum)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefinedPrimitive(System.RuntimeType,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::IsDefined(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Object&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::ToUInt64(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::GetValue()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatNumberAsHex(System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::Format(System.Type,System.Object,System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatUnconstrained(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::GetMultipleEnumsFlagsFormatResultLength(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::WriteMultipleFoundFlagsNames(System.String[],System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Span`1&lt;System.Char&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.RuntimeType System.Enum::ValidateRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidRuntimeType(System.Type)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::ThrowInvalidEmptyParseArgument()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.FormatException System.Enum::CreateInvalidFormatSpecifierException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.InvalidOperationException System.Enum::CreateUnknownEnumTypeException()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.TypeCode System.Enum::GetTypeCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.SByte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Byte)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt16)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.Int64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Enum::ToObject(System.Type,System.UInt64)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::AreSorted(TStorage[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::AssertValidGenerics()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Enum::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::&lt;GetEnumInfo&gt;g__InitializeEnumInfo|7_0(System.RuntimeType,System.Boolean)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Enum::&lt;TryParse&gt;g__TryParseRareTypes|41_0(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|55_0(System.RuntimeType,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|56_0(System.RuntimeType,System.Char,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCode(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCodeHelper(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.ValueType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" />
	<edge mark="1" b="TypeDef:System.Byte" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IEnumerator`1" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.IEnumerator`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.IDisposable" />
	<edge mark="1" b="TypeDef:System.IDisposable" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.IDisposable::Dispose()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerator" />
	<edge mark="1" b="TypeDef:System.Collections.IEnumerator" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.IEnumerator::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.IEnumerator::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.IEnumerator::Reset()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Collections.IEnumerator::Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.IEnumerator::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.IEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:T System.Collections.Generic.IEnumerator`1::Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.IEnumerator`1::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.IDisposable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerator" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Collections.Generic.List`1&lt;T&gt; System.Collections.Generic.List`1/Enumerator::_list" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.Collections.Generic.List`1/Enumerator::_index" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.Collections.Generic.List`1/Enumerator::_version" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:T System.Collections.Generic.List`1/Enumerator::_current" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1/Enumerator::.ctor(System.Collections.Generic.List`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1/Enumerator::Dispose()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1/Enumerator::MoveNext()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1/Enumerator::MoveNextRare()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.List`1/Enumerator::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.Generic.List`1/Enumerator::System.Collections.IEnumerator.get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1/Enumerator::System.Collections.IEnumerator.Reset()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:T System.Collections.Generic.List`1/Enumerator::Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.List`1/Enumerator::get_Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Collections.Generic.List`1/Enumerator::System.Collections.IEnumerator.Current()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.Generic.List`1/Enumerator::System.Collections.IEnumerator.get_Current()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IList`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IList`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IList`1" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.IList`1" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.ICollection`1" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.ICollection`1" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IEnumerable`1" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.IEnumerable`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="TypeDef:System.Collections.IEnumerable" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.IEnumerator System.Collections.IEnumerable::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.ICollection`1::get_Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.ICollection`1::get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.ICollection`1::Add(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.ICollection`1::Clear()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.ICollection`1::Contains(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.ICollection`1::CopyTo(T[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.ICollection`1::Remove(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Int32 System.Collections.Generic.ICollection`1::Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.ICollection`1::get_Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Collections.Generic.ICollection`1::IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.ICollection`1::get_IsReadOnly()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IEnumerable`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.IList`1::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.IList`1::set_Item(System.Int32,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.IList`1::IndexOf(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.IList`1::Insert(System.Int32,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.IList`1::RemoveAt(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:T System.Collections.Generic.IList`1::Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.IList`1::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.IList`1::set_Item(System.Int32,T)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.ICollection`1" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IEnumerable`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IList" />
	<edge mark="1" b="TypeDef:System.Collections.IList" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.ICollection" />
	<edge mark="1" b="TypeDef:System.Collections.ICollection" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.ICollection::CopyTo(System.Array,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.ICollection::get_Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.ICollection::get_SyncRoot()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.ICollection::get_IsSynchronized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Int32 System.Collections.ICollection::Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.ICollection::get_Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Collections.ICollection::SyncRoot()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.ICollection::get_SyncRoot()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Collections.ICollection::IsSynchronized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.ICollection::get_IsSynchronized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.IList::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.IList::set_Item(System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.IList::Add(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.IList::Contains(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.IList::Clear()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.IList::get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.IList::get_IsFixedSize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.IList::IndexOf(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.IList::Insert(System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.IList::Remove(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.IList::RemoveAt(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Collections.IList::Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.IList::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.IList::set_Item(System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Collections.IList::IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.IList::get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Collections.IList::IsFixedSize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.IList::get_IsFixedSize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.ICollection" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IReadOnlyList`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IReadOnlyList`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IReadOnlyList`1" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.IReadOnlyList`1" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IReadOnlyCollection`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IReadOnlyCollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IReadOnlyCollection`1" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.IReadOnlyCollection`1" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IEnumerable`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.IReadOnlyCollection`1::get_Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Int32 System.Collections.Generic.IReadOnlyCollection`1::Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.IReadOnlyCollection`1::get_Count()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IEnumerable`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeDef:System.Collections.IEnumerable" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.IReadOnlyList`1::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:T System.Collections.Generic.IReadOnlyList`1::Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.IReadOnlyList`1::get_Item(System.Int32)" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="TypeSpec:System.Collections.Generic.IReadOnlyCollection`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IReadOnlyCollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IReadOnlyCollection`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:T[] System.Collections.Generic.List`1::_items" />
	<edge mark="1" b="Field:T[] System.Collections.Generic.List`1::_items" e="TypeDef:System.Collections.Generic.List`1" />
	<edge b="Field:T[] System.Collections.Generic.List`1::_items" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.Collections.Generic.List`1::_size" />
	<edge mark="1" b="Field:System.Int32 System.Collections.Generic.List`1::_size" e="TypeDef:System.Collections.Generic.List`1" />
	<edge mark="1" b="Field:System.Int32 System.Collections.Generic.List`1::_size" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:System.Int32 System.Collections.Generic.List`1::_version" />
	<edge mark="1" b="Field:System.Int32 System.Collections.Generic.List`1::_version" e="TypeDef:System.Collections.Generic.List`1" />
	<edge mark="1" b="Field:System.Int32 System.Collections.Generic.List`1::_version" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Field:T[] System.Collections.Generic.List`1::s_emptyArray" />
	<edge mark="1" b="Field:T[] System.Collections.Generic.List`1::s_emptyArray" e="TypeDef:System.Collections.Generic.List`1" />
	<edge b="Field:T[] System.Collections.Generic.List`1::s_emptyArray" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:T[] System.Collections.Generic.List`1::s_emptyArray" e="Method:System.Void System.Collections.Generic.List`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::.ctor(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::.ctor(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::get_Capacity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::set_Capacity(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::get_Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.get_IsFixedSize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.ICollection.get_IsSynchronized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.Generic.List`1::System.Collections.ICollection.get_SyncRoot()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.List`1::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::set_Item(System.Int32,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::IsCompatibleObject(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.Generic.List`1::System.Collections.IList.get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::System.Collections.IList.set_Item(System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Add(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::AddWithResize(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::System.Collections.IList.Add(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::AddRange(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;T&gt; System.Collections.Generic.List`1::AsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::BinarySearch(System.Int32,System.Int32,T,System.Collections.Generic.IComparer`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::BinarySearch(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::BinarySearch(T,System.Collections.Generic.IComparer`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Clear()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::Contains(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.Contains(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.Generic.List`1&lt;TOutput&gt; System.Collections.Generic.List`1::ConvertAll(System.Converter`2&lt;T,TOutput&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::CopyTo(T[])" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::CopyTo(System.Int32,T[],System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::CopyTo(T[],System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::EnsureCapacity(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Grow(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::GrowForInsertion(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::GetNewCapacity(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::Exists(System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.List`1::Find(System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.Generic.List`1&lt;T&gt; System.Collections.Generic.List`1::FindAll(System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::FindIndex(System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::FindIndex(System.Int32,System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::FindIndex(System.Int32,System.Int32,System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.List`1::FindLast(System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::FindLastIndex(System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::FindLastIndex(System.Int32,System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::FindLastIndex(System.Int32,System.Int32,System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::ForEach(System.Action`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.Generic.List`1/Enumerator&lt;T&gt; System.Collections.Generic.List`1::GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.List`1::System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.IEnumerator System.Collections.Generic.List`1::System.Collections.IEnumerable.GetEnumerator()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.Generic.List`1&lt;T&gt; System.Collections.Generic.List`1::GetRange(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Collections.Generic.List`1&lt;T&gt; System.Collections.Generic.List`1::Slice(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::IndexOf(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::System.Collections.IList.IndexOf(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::IndexOf(T,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::IndexOf(T,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Insert(System.Int32,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::System.Collections.IList.Insert(System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::InsertRange(System.Int32,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::LastIndexOf(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::LastIndexOf(T,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::LastIndexOf(T,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::Remove(T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::System.Collections.IList.Remove(System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::RemoveAll(System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::RemoveAt(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::RemoveRange(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Reverse()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Reverse(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Sort()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Sort(System.Collections.Generic.IComparer`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::Sort(System.Comparison`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T[] System.Collections.Generic.List`1::ToArray()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::TrimExcess()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::TrueForAll(System.Predicate`1&lt;T&gt;)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::.cctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Int32 System.Collections.Generic.List`1::Capacity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::get_Capacity()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::set_Capacity(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Int32 System.Collections.Generic.List`1::Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Int32 System.Collections.Generic.List`1::get_Count()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.IsFixedSize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.get_IsFixedSize()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Collections.Generic.List`1::System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Boolean System.Collections.Generic.List`1::System.Collections.ICollection.IsSynchronized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.ICollection.get_IsSynchronized()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Collections.Generic.List`1::System.Collections.ICollection.SyncRoot()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.Generic.List`1::System.Collections.ICollection.get_SyncRoot()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:T System.Collections.Generic.List`1::Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:T System.Collections.Generic.List`1::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::set_Item(System.Int32,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Property:System.Object System.Collections.Generic.List`1::System.Collections.IList.Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Object System.Collections.Generic.List`1::System.Collections.IList.get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void System.Collections.Generic.List`1::System.Collections.IList.set_Item(System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericBaseClass::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::Main()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences::.ctor()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericBaseClass::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericBaseClass:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericBaseClass::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericBaseClass::.ctor()" e="MemberRef:System.Void System.Collections.Generic.List`1&lt;Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences&gt;::.ctor()" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.List`1&lt;Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences&gt;" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences:test.exe" />
	<edge b="MemberRef:System.Void System.Collections.Generic.List`1&lt;Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences&gt;::.ctor()" e="TypeSpec:System.Collections.Generic.List`1&lt;Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.List`1&lt;Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences&gt;" e="TypeDef:System.Collections.Generic.List`1" />
	<edge mark="1" b="MemberRef:System.Void System.Collections.Generic.List`1&lt;Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences&gt;::.ctor()" e="Method:System.Void System.Collections.Generic.List`1::.ctor()" />
	<edge b="Method:System.Boolean System.Collections.Generic.List`1::TrueForAll(System.Predicate`1&lt;T&gt;)" e="TypeSpec:System.Predicate`1&lt;T&gt;" />
	<edge mark="1" b="TypeDef:System.Predicate`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1::TrueForAll(System.Predicate`1&lt;T&gt;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Predicate`1" e="Method:System.Void System.Predicate`1::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:System.Predicate`1" e="Method:System.Boolean System.Predicate`1::Invoke(T)" />
	<edge mark="1" b="Method:System.Boolean System.Predicate`1::Invoke(T)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.NullableContextAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.NullableContextAttribute::.ctor(System.Byte)" e="TypeDef:System.Runtime.CompilerServices.NullableContextAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.NullableContextAttribute::.ctor(System.Byte)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Attribute" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.TypeForwardedFromAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.TypeForwardedFromAttribute::.ctor(System.String)" e="TypeDef:System.Runtime.CompilerServices.TypeForwardedFromAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.TypeForwardedFromAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.AttributeUsageAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.AttributeUsageAttribute::set_AllowMultiple(System.Boolean)" e="Property:System.Boolean System.AttributeUsageAttribute::AllowMultiple()" />
	<edge mark="1" b="Method:System.Void System.AttributeUsageAttribute::set_AllowMultiple(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.AttributeUsageAttribute::set_Inherited(System.Boolean)" e="Property:System.Boolean System.AttributeUsageAttribute::Inherited()" />
	<edge mark="1" b="Method:System.Void System.AttributeUsageAttribute::set_Inherited(System.Boolean)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.AttributeUsageAttribute::.ctor(System.AttributeTargets)" e="TypeDef:System.AttributeUsageAttribute" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.AttributeUsageAttribute::.ctor(System.AttributeTargets)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.Int32 System.AttributeTargets::value__" />
	<edge mark="1" b="Field:System.Int32 System.AttributeTargets::value__" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.Int32 System.AttributeTargets::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Assembly" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Assembly" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Assembly" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Module" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Module" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Module" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Class" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Class" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Class" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Struct" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Struct" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Struct" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Enum" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Enum" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Enum" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Constructor" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Constructor" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Constructor" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Method" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Method" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Method" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Property" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Property" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Property" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Field" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Field" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Field" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Event" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Event" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Event" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Interface" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Interface" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Interface" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Parameter" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Parameter" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Parameter" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::Delegate" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Delegate" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::Delegate" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::ReturnValue" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::ReturnValue" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::ReturnValue" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::GenericParameter" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::GenericParameter" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::GenericParameter" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.AttributeTargets" e="Field:System.AttributeTargets System.AttributeTargets::All" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::All" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="Field:System.AttributeTargets System.AttributeTargets::All" e="TypeDef:System.AttributeTargets" />
	<edge mark="1" b="TypeDef:System.FlagsAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.FlagsAttribute::.ctor()" e="TypeDef:System.FlagsAttribute" />
	<edge mark="1" b="Method:System.Void System.FlagsAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableAttribute" e="Method:System.Boolean System.ComponentModel.EditorBrowsableAttribute::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableAttribute" e="Method:System.Int32 System.ComponentModel.EditorBrowsableAttribute::GetHashCode()" />
	<edge b="Method:System.Void System.ComponentModel.EditorBrowsableAttribute::.ctor(System.ComponentModel.EditorBrowsableState)" e="TypeDef:System.ComponentModel.EditorBrowsableAttribute" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableState" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.ComponentModel.EditorBrowsableAttribute::.ctor(System.ComponentModel.EditorBrowsableState)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableState" e="Field:System.Int32 System.ComponentModel.EditorBrowsableState::value__" />
	<edge mark="1" b="Field:System.Int32 System.ComponentModel.EditorBrowsableState::value__" e="TypeDef:System.ComponentModel.EditorBrowsableState" />
	<edge mark="1" b="Field:System.Int32 System.ComponentModel.EditorBrowsableState::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableState" e="Field:System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableState::Always" />
	<edge mark="1" b="Field:System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableState::Always" e="TypeDef:System.ComponentModel.EditorBrowsableState" />
	<edge mark="1" b="Field:System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableState::Always" e="TypeDef:System.ComponentModel.EditorBrowsableState" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableState" e="Field:System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableState::Never" />
	<edge mark="1" b="Field:System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableState::Never" e="TypeDef:System.ComponentModel.EditorBrowsableState" />
	<edge mark="1" b="Field:System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableState::Never" e="TypeDef:System.ComponentModel.EditorBrowsableState" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableState" e="Field:System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableState::Advanced" />
	<edge mark="1" b="Field:System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableState::Advanced" e="TypeDef:System.ComponentModel.EditorBrowsableState" />
	<edge mark="1" b="Field:System.ComponentModel.EditorBrowsableState System.ComponentModel.EditorBrowsableState::Advanced" e="TypeDef:System.ComponentModel.EditorBrowsableState" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableAttribute" e="Method:System.Boolean System.ComponentModel.EditorBrowsableAttribute::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableAttribute" e="Method:System.Int32 System.ComponentModel.EditorBrowsableAttribute::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ComponentModel.EditorBrowsableAttribute::GetHashCode()" e="Method:System.Int32 System.Attribute::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Attribute::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ComponentModel.EditorBrowsableAttribute::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Attribute::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableAttribute" e="Method:System.Int32 System.ComponentModel.EditorBrowsableAttribute::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Attribute::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute::set_Justification(System.String)" e="Property:System.String System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute::Justification()" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute::set_Justification(System.String)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute::.ctor(System.String,System.String)" e="TypeDef:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute::.ctor(System.String,System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.ComponentModel.EditorBrowsableAttribute::Equals(System.Object)" e="Method:System.Boolean System.Attribute::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Attribute::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ComponentModel.EditorBrowsableAttribute::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Attribute::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ComponentModel.EditorBrowsableAttribute" e="Method:System.Boolean System.ComponentModel.EditorBrowsableAttribute::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Attribute::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.CodeAnalysis.NotNullWhenAttribute::.ctor(System.Boolean)" e="TypeDef:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.NotNullWhenAttribute::.ctor(System.Boolean)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Predicate`1::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Predicate`1" />
	<edge mark="1" b="Method:System.Void System.Predicate`1::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::TrimExcess()" e="TypeDef:System.Void" />
	<edge b="Method:T[] System.Collections.Generic.List`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Collections.Generic.List`1::Sort(System.Comparison`1&lt;T&gt;)" e="TypeSpec:System.Comparison`1&lt;T&gt;" />
	<edge mark="1" b="TypeDef:System.Comparison`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::Sort(System.Comparison`1&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Comparison`1" e="Method:System.Void System.Comparison`1::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:System.Comparison`1" e="Method:System.Int32 System.Comparison`1::Invoke(T,T)" />
	<edge mark="1" b="Method:System.Int32 System.Comparison`1::Invoke(T,T)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void System.Comparison`1::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Comparison`1" />
	<edge mark="1" b="Method:System.Void System.Comparison`1::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Collections.Generic.List`1::Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer`1&lt;T&gt;)" e="TypeSpec:System.Collections.Generic.IComparer`1&lt;T&gt;" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.IComparer`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer`1&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Collections.Generic.List`1::Sort(System.Collections.Generic.IComparer`1&lt;T&gt;)" e="TypeSpec:System.Collections.Generic.IComparer`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::Sort(System.Collections.Generic.IComparer`1&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::Sort()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::Reverse(System.Int32,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::Reverse()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::RemoveRange(System.Int32,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::RemoveAt(System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Int32 System.Collections.Generic.List`1::RemoveAll(System.Predicate`1&lt;T&gt;)" e="TypeSpec:System.Predicate`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::RemoveAll(System.Predicate`1&lt;T&gt;)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::System.Collections.IList.Remove(System.Object)" e="Method:System.Void System.Collections.IList::Remove(System.Object)" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::System.Collections.IList.Remove(System.Object)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1::Remove(T)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::LastIndexOf(T,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::LastIndexOf(T,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::LastIndexOf(T)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void System.Collections.Generic.List`1::InsertRange(System.Int32,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::InsertRange(System.Int32,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::System.Collections.IList.Insert(System.Int32,System.Object)" e="Method:System.Void System.Collections.IList::Insert(System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::System.Collections.IList.Insert(System.Int32,System.Object)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::Insert(System.Int32,T)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::IndexOf(T,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::IndexOf(T,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::System.Collections.IList.IndexOf(System.Object)" e="Method:System.Int32 System.Collections.IList::IndexOf(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::System.Collections.IList.IndexOf(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::IndexOf(T)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Collections.Generic.List`1&lt;T&gt; System.Collections.Generic.List`1::Slice(System.Int32,System.Int32)" e="TypeSpec:System.Collections.Generic.List`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.List`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.List`1" />
	<edge b="Method:System.Collections.Generic.List`1&lt;T&gt; System.Collections.Generic.List`1::GetRange(System.Int32,System.Int32)" e="TypeSpec:System.Collections.Generic.List`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.List`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.List`1" />
	<edge mark="1" b="Method:System.Collections.IEnumerator System.Collections.Generic.List`1::System.Collections.IEnumerable.GetEnumerator()" e="Method:System.Collections.IEnumerator System.Collections.IEnumerable::GetEnumerator()" />
	<edge mark="1" b="Method:System.Collections.IEnumerator System.Collections.Generic.List`1::System.Collections.IEnumerable.GetEnumerator()" e="TypeDef:System.Collections.IEnumerator" />
	<edge b="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.List`1::System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()" e="MemberRef:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1&lt;T&gt;::GetEnumerator()" />
	<edge b="MemberRef:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1&lt;T&gt;::GetEnumerator()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IEnumerable`1" />
	<edge mark="1" b="MemberRef:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1&lt;T&gt;::GetEnumerator()" e="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1::GetEnumerator()" />
	<edge b="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.List`1::System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()" e="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IEnumerator`1" />
	<edge b="Method:System.Collections.Generic.List`1/Enumerator&lt;T&gt; System.Collections.Generic.List`1::GetEnumerator()" e="TypeSpec:System.Collections.Generic.List`1/Enumerator&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.List`1/Enumerator&lt;T&gt;" e="TypeDef:System.Collections.Generic.List`1/Enumerator" />
	<edge b="Method:System.Void System.Collections.Generic.List`1::ForEach(System.Action`1&lt;T&gt;)" e="TypeSpec:System.Action`1&lt;T&gt;" />
	<edge mark="1" b="TypeDef:System.Action`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::ForEach(System.Action`1&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Action`1" e="Method:System.Void System.Action`1::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:System.Action`1" e="Method:System.Void System.Action`1::Invoke(T)" />
	<edge mark="1" b="Method:System.Void System.Action`1::Invoke(T)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Action`1::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Action`1" />
	<edge mark="1" b="Method:System.Void System.Action`1::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge b="Method:System.Int32 System.Collections.Generic.List`1::FindLastIndex(System.Int32,System.Int32,System.Predicate`1&lt;T&gt;)" e="TypeSpec:System.Predicate`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::FindLastIndex(System.Int32,System.Int32,System.Predicate`1&lt;T&gt;)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Collections.Generic.List`1::FindLastIndex(System.Int32,System.Predicate`1&lt;T&gt;)" e="TypeSpec:System.Predicate`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::FindLastIndex(System.Int32,System.Predicate`1&lt;T&gt;)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Collections.Generic.List`1::FindLastIndex(System.Predicate`1&lt;T&gt;)" e="TypeSpec:System.Predicate`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::FindLastIndex(System.Predicate`1&lt;T&gt;)" e="TypeDef:System.Int32" />
	<edge b="Method:T System.Collections.Generic.List`1::FindLast(System.Predicate`1&lt;T&gt;)" e="TypeSpec:System.Predicate`1&lt;T&gt;" />
	<edge b="Method:System.Int32 System.Collections.Generic.List`1::FindIndex(System.Int32,System.Int32,System.Predicate`1&lt;T&gt;)" e="TypeSpec:System.Predicate`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::FindIndex(System.Int32,System.Int32,System.Predicate`1&lt;T&gt;)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Collections.Generic.List`1::FindIndex(System.Int32,System.Predicate`1&lt;T&gt;)" e="TypeSpec:System.Predicate`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::FindIndex(System.Int32,System.Predicate`1&lt;T&gt;)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Collections.Generic.List`1::FindIndex(System.Predicate`1&lt;T&gt;)" e="TypeSpec:System.Predicate`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::FindIndex(System.Predicate`1&lt;T&gt;)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Collections.Generic.List`1&lt;T&gt; System.Collections.Generic.List`1::FindAll(System.Predicate`1&lt;T&gt;)" e="TypeSpec:System.Predicate`1&lt;T&gt;" />
	<edge b="Method:System.Collections.Generic.List`1&lt;T&gt; System.Collections.Generic.List`1::FindAll(System.Predicate`1&lt;T&gt;)" e="TypeSpec:System.Collections.Generic.List`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.List`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.List`1" />
	<edge b="Method:T System.Collections.Generic.List`1::Find(System.Predicate`1&lt;T&gt;)" e="TypeSpec:System.Predicate`1&lt;T&gt;" />
	<edge b="Method:System.Boolean System.Collections.Generic.List`1::Exists(System.Predicate`1&lt;T&gt;)" e="TypeSpec:System.Predicate`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1::Exists(System.Predicate`1&lt;T&gt;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::GetNewCapacity(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::GrowForInsertion(System.Int32,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::Grow(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::EnsureCapacity(System.Int32)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void System.Collections.Generic.List`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::CopyTo(T[],System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Collections.Generic.List`1::CopyTo(System.Int32,T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::CopyTo(System.Int32,T[],System.Int32,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Array" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::System.Collections.ICollection.CopyTo(System.Array,System.Int32)" e="Method:System.Void System.Collections.ICollection::CopyTo(System.Array,System.Int32)" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::System.Collections.ICollection.CopyTo(System.Array,System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Collections.Generic.List`1::CopyTo(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::CopyTo(T[])" e="TypeDef:System.Void" />
	<edge b="Method:System.Collections.Generic.List`1&lt;TOutput&gt; System.Collections.Generic.List`1::ConvertAll(System.Converter`2&lt;T,TOutput&gt;)" e="TypeSpec:System.Converter`2&lt;T,TOutput&gt;" />
	<edge mark="1" b="TypeDef:System.Converter`2" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Collections.Generic.List`1&lt;TOutput&gt; System.Collections.Generic.List`1::ConvertAll(System.Converter`2&lt;T,TOutput&gt;)" e="TypeSpec:System.Collections.Generic.List`1&lt;TOutput&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.List`1&lt;TOutput&gt;" e="TypeDef:System.Collections.Generic.List`1" />
	<edge mark="1" b="TypeDef:System.Converter`2" e="Method:System.Void System.Converter`2::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:System.Converter`2" e="Method:TOutput System.Converter`2::Invoke(TInput)" />
	<edge b="Method:System.Void System.Converter`2::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Converter`2" />
	<edge mark="1" b="Method:System.Void System.Converter`2::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.Contains(System.Object)" e="Method:System.Boolean System.Collections.IList::Contains(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.Contains(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1::Contains(T)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::Clear()" e="TypeDef:System.Void" />
	<edge b="Method:System.Int32 System.Collections.Generic.List`1::BinarySearch(T,System.Collections.Generic.IComparer`1&lt;T&gt;)" e="TypeSpec:System.Collections.Generic.IComparer`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::BinarySearch(T,System.Collections.Generic.IComparer`1&lt;T&gt;)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::BinarySearch(T)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Collections.Generic.List`1::BinarySearch(System.Int32,System.Int32,T,System.Collections.Generic.IComparer`1&lt;T&gt;)" e="TypeSpec:System.Collections.Generic.IComparer`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::BinarySearch(System.Int32,System.Int32,T,System.Collections.Generic.IComparer`1&lt;T&gt;)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;T&gt; System.Collections.Generic.List`1::AsReadOnly()" e="TypeSpec:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.ObjectModel.ReadOnlyCollection`1&lt;T&gt;" e="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.ICollectionDebugView`1:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Field:System.Collections.Generic.ICollection`1&lt;T&gt; System.Collections.Generic.ICollectionDebugView`1::_collection" />
	<edge mark="1" b="Field:System.Collections.Generic.ICollection`1&lt;T&gt; System.Collections.Generic.ICollectionDebugView`1::_collection" e="TypeDef:System.Collections.Generic.ICollectionDebugView`1:System.Private.CoreLib.dll" />
	<edge b="Field:System.Collections.Generic.ICollection`1&lt;T&gt; System.Collections.Generic.ICollectionDebugView`1::_collection" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.ICollection`1" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:System.Void System.Collections.Generic.ICollectionDebugView`1::.ctor(System.Collections.Generic.ICollection`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Property:T[] System.Collections.Generic.ICollectionDebugView`1::Items()" />
	<edge mark="1" b="TypeDef:System.Collections.ObjectModel.ReadOnlyCollection`1" e="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" />
	<edge mark="1" b="Method:System.Int32 System.Collections.ObjectModel.ReadOnlyCollection`1::get_Count()" e="Property:System.Int32 System.Collections.ObjectModel.ReadOnlyCollection`1::Count()" />
	<edge mark="1" b="Method:System.Int32 System.Collections.ObjectModel.ReadOnlyCollection`1::get_Count()" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerDisplayAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.DebuggerDisplayAttribute::.ctor(System.String)" e="TypeDef:System.Diagnostics.DebuggerDisplayAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.DebuggerDisplayAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerBrowsableAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.DebuggerBrowsableAttribute::.ctor(System.Diagnostics.DebuggerBrowsableState)" e="TypeDef:System.Diagnostics.DebuggerBrowsableAttribute" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerBrowsableState" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.DebuggerBrowsableAttribute::.ctor(System.Diagnostics.DebuggerBrowsableState)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerBrowsableState" e="Field:System.Int32 System.Diagnostics.DebuggerBrowsableState::value__" />
	<edge mark="1" b="Field:System.Int32 System.Diagnostics.DebuggerBrowsableState::value__" e="TypeDef:System.Diagnostics.DebuggerBrowsableState" />
	<edge mark="1" b="Field:System.Int32 System.Diagnostics.DebuggerBrowsableState::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerBrowsableState" e="Field:System.Diagnostics.DebuggerBrowsableState System.Diagnostics.DebuggerBrowsableState::Never" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggerBrowsableState System.Diagnostics.DebuggerBrowsableState::Never" e="TypeDef:System.Diagnostics.DebuggerBrowsableState" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggerBrowsableState System.Diagnostics.DebuggerBrowsableState::Never" e="TypeDef:System.Diagnostics.DebuggerBrowsableState" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerBrowsableState" e="Field:System.Diagnostics.DebuggerBrowsableState System.Diagnostics.DebuggerBrowsableState::Collapsed" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggerBrowsableState System.Diagnostics.DebuggerBrowsableState::Collapsed" e="TypeDef:System.Diagnostics.DebuggerBrowsableState" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggerBrowsableState System.Diagnostics.DebuggerBrowsableState::Collapsed" e="TypeDef:System.Diagnostics.DebuggerBrowsableState" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerBrowsableState" e="Field:System.Diagnostics.DebuggerBrowsableState System.Diagnostics.DebuggerBrowsableState::RootHidden" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggerBrowsableState System.Diagnostics.DebuggerBrowsableState::RootHidden" e="TypeDef:System.Diagnostics.DebuggerBrowsableState" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggerBrowsableState System.Diagnostics.DebuggerBrowsableState::RootHidden" e="TypeDef:System.Diagnostics.DebuggerBrowsableState" />
	<edge mark="1" b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="Property:T[] System.Collections.Generic.ICollectionDebugView`1::Items()" />
	<edge b="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Collections.Generic.ICollectionDebugView`1::.ctor(System.Collections.Generic.ICollection`1&lt;T&gt;)" e="TypeDef:System.Collections.Generic.ICollectionDebugView`1:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Collections.Generic.ICollectionDebugView`1::.ctor(System.Collections.Generic.ICollection`1&lt;T&gt;)" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.ICollectionDebugView`1::.ctor(System.Collections.Generic.ICollection`1&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerTypeProxyAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.DebuggerTypeProxyAttribute::.ctor(System.Type)" e="TypeDef:System.Diagnostics.DebuggerTypeProxyAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.DebuggerTypeProxyAttribute::.ctor(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute::.ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes)" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute::.ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Int32 System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::value__" />
	<edge mark="1" b="Field:System.Int32 System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::value__" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Int32 System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::None" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::None" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::None" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicParameterlessConstructor" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicParameterlessConstructor" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicParameterlessConstructor" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicConstructors" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicConstructors" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicConstructors" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicConstructors" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicConstructors" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicConstructors" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicMethods" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicMethods" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicMethods" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicMethods" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicMethods" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicMethods" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicFields" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicFields" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicFields" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicFields" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicFields" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicFields" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicNestedTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicNestedTypes" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicNestedTypes" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicNestedTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicNestedTypes" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicNestedTypes" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicProperties" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicProperties" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicProperties" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicProperties" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicProperties" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicProperties" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicEvents" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicEvents" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::PublicEvents" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicEvents" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicEvents" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::NonPublicEvents" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::Interfaces" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::Interfaces" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::Interfaces" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" e="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::All" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::All" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="Field:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes::All" e="TypeDef:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.DefaultMemberAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.DefaultMemberAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.DefaultMemberAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.DefaultMemberAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Collections.Generic.List`1::AddRange(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::AddRange(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::System.Collections.IList.Add(System.Object)" e="Method:System.Int32 System.Collections.IList::Add(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::System.Collections.IList.Add(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::AddWithResize(T)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::Add(T)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::System.Collections.IList.set_Item(System.Int32,System.Object)" e="Property:System.Object System.Collections.Generic.List`1::System.Collections.IList.Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::System.Collections.IList.set_Item(System.Int32,System.Object)" e="Method:System.Void System.Collections.IList::set_Item(System.Int32,System.Object)" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::System.Collections.IList.set_Item(System.Int32,System.Object)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Object System.Collections.Generic.List`1::System.Collections.IList.get_Item(System.Int32)" e="Property:System.Object System.Collections.Generic.List`1::System.Collections.IList.Item(System.Int32)" />
	<edge mark="1" b="Method:System.Object System.Collections.Generic.List`1::System.Collections.IList.get_Item(System.Int32)" e="Method:System.Object System.Collections.IList::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Object System.Collections.Generic.List`1::System.Collections.IList.get_Item(System.Int32)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1::IsCompatibleObject(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::set_Item(System.Int32,T)" e="Property:T System.Collections.Generic.List`1::Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::set_Item(System.Int32,T)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:T System.Collections.Generic.List`1::get_Item(System.Int32)" e="Property:T System.Collections.Generic.List`1::Item(System.Int32)" />
	<edge mark="1" b="Method:System.Object System.Collections.Generic.List`1::System.Collections.ICollection.get_SyncRoot()" e="Property:System.Object System.Collections.Generic.List`1::System.Collections.ICollection.SyncRoot()" />
	<edge mark="1" b="Method:System.Object System.Collections.Generic.List`1::System.Collections.ICollection.get_SyncRoot()" e="Method:System.Object System.Collections.ICollection::get_SyncRoot()" />
	<edge mark="1" b="Method:System.Object System.Collections.Generic.List`1::System.Collections.ICollection.get_SyncRoot()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.ICollection.get_IsSynchronized()" e="Property:System.Boolean System.Collections.Generic.List`1::System.Collections.ICollection.IsSynchronized()" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.ICollection.get_IsSynchronized()" e="Method:System.Boolean System.Collections.ICollection::get_IsSynchronized()" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.ICollection.get_IsSynchronized()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.get_IsReadOnly()" e="Property:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.IsReadOnly()" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.get_IsReadOnly()" e="Method:System.Boolean System.Collections.IList::get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.get_IsReadOnly()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()" e="Property:System.Boolean System.Collections.Generic.List`1::System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly()" />
	<edge b="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()" e="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::get_IsReadOnly()" />
	<edge b="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::get_IsReadOnly()" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.ICollection`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::get_IsReadOnly()" e="Method:System.Boolean System.Collections.Generic.ICollection`1::get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.get_IsFixedSize()" e="Property:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.IsFixedSize()" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.get_IsFixedSize()" e="Method:System.Boolean System.Collections.IList::get_IsFixedSize()" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1::System.Collections.IList.get_IsFixedSize()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::get_Count()" e="Property:System.Int32 System.Collections.Generic.List`1::Count()" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::get_Count()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::set_Capacity(System.Int32)" e="Property:System.Int32 System.Collections.Generic.List`1::Capacity()" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::set_Capacity(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::get_Capacity()" e="Property:System.Int32 System.Collections.Generic.List`1::Capacity()" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.List`1::get_Capacity()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void System.Collections.Generic.List`1::.ctor(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" e="TypeDef:System.Collections.Generic.List`1" />
	<edge b="Method:System.Void System.Collections.Generic.List`1::.ctor(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::.ctor(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Collections.Generic.List`1::.ctor(System.Int32)" e="TypeDef:System.Collections.Generic.List`1" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Collections.Generic.List`1::.ctor()" e="TypeDef:System.Collections.Generic.List`1" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:T System.Collections.Generic.IReadOnlyList`1::get_Item(System.Int32)" e="Property:T System.Collections.Generic.IReadOnlyList`1::Item(System.Int32)" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.IReadOnlyCollection`1::get_Count()" e="Property:System.Int32 System.Collections.Generic.IReadOnlyCollection`1::Count()" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.IReadOnlyCollection`1::get_Count()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void System.Collections.IList::RemoveAt(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.IList::Remove(System.Object)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.IList::Insert(System.Int32,System.Object)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 System.Collections.IList::IndexOf(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Collections.IList::get_IsFixedSize()" e="Property:System.Boolean System.Collections.IList::IsFixedSize()" />
	<edge mark="1" b="Method:System.Boolean System.Collections.IList::get_IsFixedSize()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Collections.IList::get_IsReadOnly()" e="Property:System.Boolean System.Collections.IList::IsReadOnly()" />
	<edge mark="1" b="Method:System.Boolean System.Collections.IList::get_IsReadOnly()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void System.Collections.IList::Clear()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.Collections.IList::Contains(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.Collections.IList::Add(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void System.Collections.IList::set_Item(System.Int32,System.Object)" e="Property:System.Object System.Collections.IList::Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void System.Collections.IList::set_Item(System.Int32,System.Object)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Object System.Collections.IList::get_Item(System.Int32)" e="Property:System.Object System.Collections.IList::Item(System.Int32)" />
	<edge mark="1" b="Method:System.Object System.Collections.IList::get_Item(System.Int32)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Boolean System.Collections.ICollection::get_IsSynchronized()" e="Property:System.Boolean System.Collections.ICollection::IsSynchronized()" />
	<edge mark="1" b="Method:System.Boolean System.Collections.ICollection::get_IsSynchronized()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Object System.Collections.ICollection::get_SyncRoot()" e="Property:System.Object System.Collections.ICollection::SyncRoot()" />
	<edge mark="1" b="Method:System.Object System.Collections.ICollection::get_SyncRoot()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Int32 System.Collections.ICollection::get_Count()" e="Property:System.Int32 System.Collections.ICollection::Count()" />
	<edge mark="1" b="Method:System.Int32 System.Collections.ICollection::get_Count()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void System.Collections.ICollection::CopyTo(System.Array,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.IList`1::RemoveAt(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.IList`1::Insert(System.Int32,T)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.IList`1::IndexOf(T)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.IList`1::set_Item(System.Int32,T)" e="Property:T System.Collections.Generic.IList`1::Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.IList`1::set_Item(System.Int32,T)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:T System.Collections.Generic.IList`1::get_Item(System.Int32)" e="Property:T System.Collections.Generic.IList`1::Item(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.ICollection`1::Remove(T)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Void System.Collections.Generic.ICollection`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.ICollection`1::CopyTo(T[],System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.ICollection`1::Contains(T)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.ICollection`1::Clear()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.ICollection`1::Add(T)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.ICollection`1::get_IsReadOnly()" e="Property:System.Boolean System.Collections.Generic.ICollection`1::IsReadOnly()" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.ICollection`1::get_IsReadOnly()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.ICollection`1::get_Count()" e="Property:System.Int32 System.Collections.Generic.ICollection`1::Count()" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.ICollection`1::get_Count()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1::GetEnumerator()" e="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IEnumerator`1" />
	<edge mark="1" b="Method:System.Collections.IEnumerator System.Collections.IEnumerable::GetEnumerator()" e="TypeDef:System.Collections.IEnumerator" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.ComVisibleAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.InteropServices.ComVisibleAttribute::.ctor(System.Boolean)" e="TypeDef:System.Runtime.InteropServices.ComVisibleAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.ComVisibleAttribute::.ctor(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.GuidAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.InteropServices.GuidAttribute::.ctor(System.String)" e="TypeDef:System.Runtime.InteropServices.GuidAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.GuidAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1/Enumerator::System.Collections.IEnumerator.Reset()" e="Method:System.Void System.Collections.IEnumerator::Reset()" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1/Enumerator::System.Collections.IEnumerator.Reset()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Object System.Collections.Generic.List`1/Enumerator::System.Collections.IEnumerator.get_Current()" e="Property:System.Object System.Collections.Generic.List`1/Enumerator::System.Collections.IEnumerator.Current()" />
	<edge mark="1" b="Method:System.Object System.Collections.Generic.List`1/Enumerator::System.Collections.IEnumerator.get_Current()" e="Method:System.Object System.Collections.IEnumerator::get_Current()" />
	<edge mark="1" b="Method:System.Object System.Collections.Generic.List`1/Enumerator::System.Collections.IEnumerator.get_Current()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:T System.Collections.Generic.List`1/Enumerator::get_Current()" e="Property:T System.Collections.Generic.List`1/Enumerator::Current()" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1/Enumerator::MoveNextRare()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.List`1/Enumerator::MoveNext()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1/Enumerator::Dispose()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1/Enumerator" e="Field:System.Collections.Generic.List`1&lt;T&gt; System.Collections.Generic.List`1/Enumerator::_list" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1/Enumerator" e="Field:System.Int32 System.Collections.Generic.List`1/Enumerator::_index" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1/Enumerator" e="Field:System.Int32 System.Collections.Generic.List`1/Enumerator::_version" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1/Enumerator" e="Field:T System.Collections.Generic.List`1/Enumerator::_current" />
	<edge b="Method:System.Void System.Collections.Generic.List`1/Enumerator::.ctor(System.Collections.Generic.List`1&lt;T&gt;)" e="TypeDef:System.Collections.Generic.List`1/Enumerator" />
	<edge b="Method:System.Void System.Collections.Generic.List`1/Enumerator::.ctor(System.Collections.Generic.List`1&lt;T&gt;)" e="TypeSpec:System.Collections.Generic.List`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.List`1/Enumerator::.ctor(System.Collections.Generic.List`1&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:T System.Collections.Generic.IEnumerator`1::get_Current()" e="Property:T System.Collections.Generic.IEnumerator`1::Current()" />
	<edge mark="1" b="Method:System.Void System.Collections.IEnumerator::Reset()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Object System.Collections.IEnumerator::get_Current()" e="Property:System.Object System.Collections.IEnumerator::Current()" />
	<edge mark="1" b="Method:System.Object System.Collections.IEnumerator::get_Current()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Boolean System.Collections.IEnumerator::MoveNext()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void System.IDisposable::Dispose()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Byte&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeDef:System.Byte" e="Method:System.Boolean System.Byte::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Byte" e="Method:System.Int32 System.Byte::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Byte" e="Method:System.String System.Byte::ToString()" />
	<edge mark="1" b="TypeDef:System.Byte" e="Field:System.Byte System.Byte::m_value" />
	<edge mark="1" b="Field:System.Byte System.Byte::m_value" e="TypeDef:System.Byte" />
	<edge mark="1" b="Field:System.Byte System.Byte::m_value" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Byte" e="Method:System.Boolean System.Byte::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Byte" e="Method:System.Int32 System.Byte::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Byte" e="Method:System.String System.Byte::ToString()" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.Byte::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Byte::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Byte::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Byte::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Byte::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Byte::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.IsReadOnlyAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.IsReadOnlyAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.IsReadOnlyAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.IsReadOnlyAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.NullableAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.NullableAttribute::.ctor(System.Byte[])" e="TypeDef:System.Runtime.CompilerServices.NullableAttribute" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.NullableAttribute::.ctor(System.Byte[])" e="TypeSpec:System.Byte[]" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.NullableAttribute::.ctor(System.Byte[])" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1" e="Field:System.Collections.Generic.ICollection`1&lt;T&gt; System.Collections.Generic.ICollectionDebugView`1::_collection" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1" e="Method:System.Void System.Collections.Generic.ICollectionDebugView`1::.ctor(System.Collections.Generic.ICollection`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1" e="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1" e="Property:T[] System.Collections.Generic.ICollectionDebugView`1::Items()" />
	<edge mark="1" b="TypeDef:System.Collections.Generic.List`1" e="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.List`1&lt;Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences&gt;" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences:test.exe" />
	<edge b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericBaseClass:test.exe" e="TypeSpec:System.Collections.Generic.List`1&lt;Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences&gt;" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface::Equals(Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveGenericInterface::Equals(Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences)" e="Method:System.Void System.NotImplementedException::.ctor()" />
	<edge mark="1" b="Method:System.Void System.NotImplementedException::.ctor()" e="TypeDef:System.NotImplementedException" />
	<edge mark="1" b="TypeDef:System.NotImplementedException" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.NotImplementedException::.ctor()" e="TypeDef:System.NotImplementedException" />
	<edge mark="1" b="Method:System.Void System.NotImplementedException::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.SystemException" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Exception" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveBase::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveBase:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveBase::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedTypeWithRecursiveBase::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/RequireAllWithRecursiveTypeReferences/NestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="TypeDef:System.Threading.Interlocked" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute::.ctor(System.String)" e="TypeDef:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.IntrinsicAttribute:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.IntrinsicAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.IntrinsicAttribute:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.IntrinsicAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="TypeDef:System.NotSupportedException" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Void System.NotSupportedException::.ctor(System.String)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Void System.Object::.ctor()" />
	<edge b="Method:System.Void System.NotSupportedException::.ctor(System.String)" e="TypeDef:System.NotSupportedException" />
	<edge mark="1" b="Method:System.Void System.NotSupportedException::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::InternalMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicMethod2(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicMethod1()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.cctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor(System.Int32,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor(System.Int32,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor(System.Int32,System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivateStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivateStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivateStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivateStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivateStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivateStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivateStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivateStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::BaseInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::DerivedInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedStaticBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateStaticBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicStaticBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivatePropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivatePropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivatePropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivatePropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivatePropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivatePropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicBaseMethod()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor(System.Int32)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllDerivedInterface::DerivedDefaultMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllDerivedInterface::DerivedInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1::BaseDefaultMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/IAllBaseGenericInterface`1::BaseInterfaceMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Int64&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeDef:System.Int64" e="Method:System.Boolean System.Int64::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Int64" e="Method:System.Int32 System.Int64::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Int64" e="Method:System.String System.Int64::ToString()" />
	<edge mark="1" b="TypeDef:System.Int64" e="Field:System.Int64 System.Int64::m_value" />
	<edge mark="1" b="Field:System.Int64 System.Int64::m_value" e="TypeDef:System.Int64" />
	<edge mark="1" b="Field:System.Int64 System.Int64::m_value" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeDef:System.Int64" e="Method:System.Boolean System.Int64::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Int64" e="Method:System.Int32 System.Int64::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Int64" e="Method:System.String System.Int64::ToString()" />
	<edge mark="1" b="Method:System.String System.Int64::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Int64::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Int64::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Int64::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Int64::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Int64::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.IAsyncResult" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::EndInvoke(System.IAsyncResult)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate:test.exe" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="TypeDef:System.AsyncCallback" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::BeginInvoke(System.AsyncCallback,System.Object)" e="TypeDef:System.IAsyncResult" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="TypeDef:System.AsyncCallback" e="Method:System.Void System.AsyncCallback::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:System.AsyncCallback" e="Method:System.Void System.AsyncCallback::Invoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Void System.AsyncCallback::Invoke(System.IAsyncResult)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.AsyncCallback::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.AsyncCallback" />
	<edge mark="1" b="Method:System.Void System.AsyncCallback::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::Invoke()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::EndInvoke(System.IAsyncResult)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate:test.exe" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::BeginInvoke(System.AsyncCallback,System.Object)" e="TypeDef:System.IAsyncResult" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::Invoke()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseDelegate::Invoke()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/HideBaseNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/HideBaseNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/HideBaseNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/HideBaseNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PrivateBaseNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/ProtectedBaseNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/ProtectedBaseNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/ProtectedBaseNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/ProtectedBaseNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType/PublicBaseNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::EndInvoke(System.IAsyncResult)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate:test.exe" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::BeginInvoke(System.AsyncCallback,System.Object)" e="TypeDef:System.IAsyncResult" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::Invoke()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateDelegate::Invoke()" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::EndInvoke(System.IAsyncResult)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate:test.exe" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::BeginInvoke(System.AsyncCallback,System.Object)" e="TypeDef:System.IAsyncResult" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::Invoke()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicDelegate::Invoke()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/HideNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/HideNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/HideNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/HideNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PrivateNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/ProtectedNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/ProtectedNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/ProtectedNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/ProtectedNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType/PublicNestedType::Method()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::HideEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::PublicEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::HideEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PublicEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::PrivateEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::ProtectedEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::PrivateEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::ProtectedEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicEventsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::HideEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::PublicEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::HideEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::PublicEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicEventsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertyOnlySetterOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyOnlySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertyOnlySetterOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertyOnlyGetterOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyOnlyGetterOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertyOnlyGetterOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertySetterOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertySetterOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertySetterOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertySetterOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertySetterOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertyGetterOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertyGetterOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertyGetterOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyGetterOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertyGetterOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_PublicPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_PublicPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicPropertyOnlySetter(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertyOnlySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicPropertyOnlySetter(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicPropertyOnlyGetter()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertyOnlyGetter()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicPropertyOnlyGetter()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicPropertySetter(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicPropertySetter(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicPropertySetter()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertySetter()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicPropertySetter()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicPropertyGetter(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicPropertyGetter(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicPropertyGetter()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicPropertyGetter()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicPropertyGetter()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PublicProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PublicProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PublicProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_ProtectedStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_ProtectedStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_ProtectedStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_ProtectedPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesBaseType::get_ProtectedPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PrivateStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PrivateStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PrivateStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PrivateStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PrivateStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PrivateStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_ProtectedStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_ProtectedStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_ProtectedStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_ProtectedStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_ProtectedStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_ProtectedStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PrivateProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_PrivateProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PrivateProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_PrivateProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_ProtectedProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::set_ProtectedProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_ProtectedProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllPropertiesType::get_ProtectedProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::get_ProtectedStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::get_ProtectedStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::get_ProtectedStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::get_ProtectedPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesBaseType::get_ProtectedPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_PrivateStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_PrivateStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_PrivateStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_PrivateStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_PrivateStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_PrivateStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_ProtectedStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_ProtectedStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_ProtectedStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_ProtectedStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_ProtectedStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_ProtectedStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_PrivateProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_PrivateProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_PrivateProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_PrivateProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_ProtectedProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::set_ProtectedProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_ProtectedProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicPropertiesType::get_ProtectedProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertyOnlySetterOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyOnlySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertyOnlySetterOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertyOnlyGetterOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyOnlyGetterOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertyOnlyGetterOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertySetterOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertySetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertySetterOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertySetterOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertySetterOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertySetterOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertyGetterOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyGetterOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertyGetterOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertyGetterOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyGetterOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertyGetterOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::set_PublicPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesBaseType::get_PublicPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicPropertyOnlySetter(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertyOnlySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicPropertyOnlySetter(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicPropertyOnlyGetter()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertyOnlyGetter()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicPropertyOnlyGetter()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicPropertySetter(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertySetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicPropertySetter(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicPropertySetter()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertySetter()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicPropertySetter()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicPropertyGetter(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertyGetter()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicPropertyGetter(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicPropertyGetter()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicPropertyGetter()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicPropertyGetter()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::set_PublicProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::PublicProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicPropertiesType::get_PublicProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::EndInvoke(System.IAsyncResult)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate:test.exe" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::BeginInvoke(System.AsyncCallback,System.Object)" e="TypeDef:System.IAsyncResult" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::Invoke()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicDelegate::Invoke()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/HideNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/HideNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/HideNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/HideNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PublicNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::EndInvoke(System.IAsyncResult)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate:test.exe" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::BeginInvoke(System.AsyncCallback,System.Object)" e="TypeDef:System.IAsyncResult" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::Invoke()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateDelegate::Invoke()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/PrivateNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/ProtectedNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/ProtectedNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/ProtectedNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesType/ProtectedNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::EndInvoke(System.IAsyncResult)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate:test.exe" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::BeginInvoke(System.AsyncCallback,System.Object)" e="TypeDef:System.IAsyncResult" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::Invoke()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateDelegate::Invoke()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/PrivateNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/ProtectedNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/ProtectedNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/ProtectedNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesType/ProtectedNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::EndInvoke(System.IAsyncResult)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate:test.exe" e="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::BeginInvoke(System.AsyncCallback,System.Object)" />
	<edge mark="1" b="Method:System.IAsyncResult Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::BeginInvoke(System.AsyncCallback,System.Object)" e="TypeDef:System.IAsyncResult" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::EndInvoke(System.IAsyncResult)" />
	<edge mark="1" b="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::Invoke()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.MulticastDelegate::op_Inequality(System.MulticastDelegate,System.MulticastDelegate)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.MulticastDelegate::op_Equality(System.MulticastDelegate,System.MulticastDelegate)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Int32 System.MulticastDelegate::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Object System.MulticastDelegate::GetTarget()" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" />
	<edge b="Method:System.Void System.MulticastDelegate::.ctor(System.Type,System.String)" e="TypeDef:System.MulticastDelegate" />
	<edge mark="1" b="Method:System.Void System.MulticastDelegate::.ctor(System.Type,System.String)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.MulticastDelegate::.ctor(System.Object,System.String)" e="TypeDef:System.MulticastDelegate" />
	<edge mark="1" b="Method:System.Void System.MulticastDelegate::.ctor(System.Object,System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.MulticastDelegate::CtorCollectibleVirtualDispatch(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerStepThroughAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.DebuggerStepThroughAttribute::.ctor()" e="TypeDef:System.Diagnostics.DebuggerStepThroughAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.DebuggerStepThroughAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerNonUserCodeAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor()" e="TypeDef:System.Diagnostics.DebuggerNonUserCodeAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.DebuggerNonUserCodeAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.MulticastDelegate::CtorCollectibleOpened(System.Object,System.IntPtr,System.IntPtr,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.MulticastDelegate::CtorCollectibleClosedStatic(System.Object,System.IntPtr,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.MulticastDelegate::CtorVirtualDispatch(System.Object,System.IntPtr,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.MulticastDelegate::CtorOpened(System.Object,System.IntPtr,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.MulticastDelegate::CtorRTClosed(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.MulticastDelegate::CtorClosedStatic(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.MulticastDelegate::CtorClosed(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.MulticastDelegate::ThrowNullThisInDelegateToInstance()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute::.ctor()" e="TypeDef:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" e="Method:System.Reflection.MethodInfo System.Delegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodBase" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.MethodInfo::get_MemberType()" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MethodInfo::get_MemberType()" e="Property:System.Reflection.MemberTypes System.Reflection.MethodInfo::MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MethodInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MethodInfo::get_MemberType()" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Int32 System.Reflection.MemberTypes::value__" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.MemberTypes::value__" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.MemberTypes::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Constructor" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Constructor" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Constructor" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Event" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Event" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Event" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Field" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Field" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Field" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Method" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Method" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Method" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Property" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Property" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Property" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::TypeInfo" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::TypeInfo" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::TypeInfo" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Custom" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Custom" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::Custom" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::NestedType" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::NestedType" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::NestedType" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="TypeDef:System.Reflection.MemberTypes" e="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::All" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::All" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Field:System.Reflection.MemberTypes System.Reflection.MemberTypes::All" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" e="Property:System.Reflection.MemberTypes System.Reflection.MemberInfo::MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Type::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.MethodInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Type::get_MemberType()" e="Property:System.Reflection.MemberTypes System.Type::MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Type::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Type::get_MemberType()" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Method:System.Object System.MulticastDelegate::GetTarget()" e="Method:System.Object System.Delegate::GetTarget()" />
	<edge mark="1" b="Method:System.Object System.MulticastDelegate::GetTarget()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Int32 System.MulticastDelegate::GetHashCode()" e="Method:System.Int32 System.Delegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.MulticastDelegate::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Object System.MulticastDelegate::TryGetAt(System.Int32)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" e="Property:System.Boolean System.MulticastDelegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Boolean System.MulticastDelegate::get_HasSingleTarget()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" e="Method:System.Delegate[] System.Delegate::GetInvocationList()" />
	<edge b="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" e="TypeSpec:System.Delegate[]" />
	<edge mark="1" b="TypeSpec:System.Delegate[]" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" e="Method:System.Delegate System.Delegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" e="TypeDef:System.Delegate" />
	<edge b="Method:System.Boolean System.MulticastDelegate::EqualInvocationLists(System.Object[],System.Object[],System.Int32,System.Int32)" e="TypeSpec:System.Object[]" />
	<edge b="Method:System.Boolean System.MulticastDelegate::EqualInvocationLists(System.Object[],System.Object[],System.Int32,System.Int32)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.Boolean System.MulticastDelegate::EqualInvocationLists(System.Object[],System.Object[],System.Int32,System.Int32)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Object[] System.MulticastDelegate::DeleteFromInvocationList(System.Object[],System.Int32,System.Int32,System.Int32)" e="TypeSpec:System.Object[]" />
	<edge b="Method:System.Object[] System.MulticastDelegate::DeleteFromInvocationList(System.Object[],System.Int32,System.Int32,System.Int32)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="TypeSpec:System.Object[]" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" e="Method:System.Delegate System.Delegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Void System.MulticastDelegate::StoreDynamicMethod(System.Reflection.MethodInfo)" e="TypeDef:System.Void" />
	<edge b="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32)" e="TypeDef:System.MulticastDelegate" />
	<edge b="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32,System.Boolean)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.MulticastDelegate System.MulticastDelegate::NewMulticastDelegate(System.Object[],System.Int32,System.Boolean)" e="TypeDef:System.MulticastDelegate" />
	<edge b="Method:System.Boolean System.MulticastDelegate::TrySetSlot(System.Object[],System.Int32,System.Object)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.Boolean System.MulticastDelegate::TrySetSlot(System.Object[],System.Int32,System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.MulticastDelegate::InvocationListEquals(System.MulticastDelegate)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" e="Method:System.Boolean System.Delegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.SerializationInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContext" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="Method:System.Void System.Delegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContext" e="Method:System.Boolean System.Runtime.Serialization.StreamingContext::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContext" e="Method:System.Int32 System.Runtime.Serialization.StreamingContext::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContext" e="Field:System.Object System.Runtime.Serialization.StreamingContext::_additionalContext" />
	<edge mark="1" b="Field:System.Object System.Runtime.Serialization.StreamingContext::_additionalContext" e="TypeDef:System.Runtime.Serialization.StreamingContext" />
	<edge mark="1" b="Field:System.Object System.Runtime.Serialization.StreamingContext::_additionalContext" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContext" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContext::_state" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContext::_state" e="TypeDef:System.Runtime.Serialization.StreamingContext" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContext::_state" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContext" e="Method:System.Boolean System.Runtime.Serialization.StreamingContext::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContext" e="Method:System.Int32 System.Runtime.Serialization.StreamingContext::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Int32 System.Runtime.Serialization.StreamingContextStates::value__" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.Serialization.StreamingContextStates::value__" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.Serialization.StreamingContextStates::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::CrossProcess" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::CrossProcess" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::CrossProcess" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::CrossMachine" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::CrossMachine" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::CrossMachine" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::File" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::File" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::File" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Persistence" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Persistence" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Persistence" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Remoting" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Remoting" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Remoting" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Other" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Other" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Other" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Clone" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Clone" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::Clone" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::CrossAppDomain" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::CrossAppDomain" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::CrossAppDomain" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContextStates" e="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::All" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::All" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Field:System.Runtime.Serialization.StreamingContextStates System.Runtime.Serialization.StreamingContextStates::All" e="TypeDef:System.Runtime.Serialization.StreamingContextStates" />
	<edge mark="1" b="Method:System.Int32 System.Runtime.Serialization.StreamingContext::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Runtime.Serialization.StreamingContext::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Runtime.Serialization.StreamingContext::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Runtime.Serialization.StreamingContext::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.ObsoleteAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.ObsoleteAttribute::set_UrlFormat(System.String)" e="Property:System.String System.ObsoleteAttribute::UrlFormat()" />
	<edge mark="1" b="Method:System.Void System.ObsoleteAttribute::set_UrlFormat(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.ObsoleteAttribute::set_DiagnosticId(System.String)" e="Property:System.String System.ObsoleteAttribute::DiagnosticId()" />
	<edge mark="1" b="Method:System.Void System.ObsoleteAttribute::set_DiagnosticId(System.String)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.ObsoleteAttribute::.ctor(System.String)" e="TypeDef:System.ObsoleteAttribute" />
	<edge mark="1" b="Method:System.Void System.ObsoleteAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.MulticastDelegate::InvocationListLogicallyNull()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.MulticastDelegate::IsUnmanagedFunctionPtr()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.ObjectHandleOnStack:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;InternalEqualMethodHandles&gt;g____PInvoke|33_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;InternalEqualMethodHandles&gt;g____PInvoke|33_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;InternalEqualMethodHandles&gt;g____PInvoke|33_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" e="Field:System.Int32 System.Int32::m_value" />
	<edge mark="1" b="Field:System.Int32 System.Int32::m_value" e="TypeDef:System.Int32" />
	<edge mark="1" b="Field:System.Int32 System.Int32::m_value" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;InternalEqualMethodHandles&gt;g____PInvoke|33_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" e="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" />
	<edge mark="1" b="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" e="TypeDef:System.Runtime.CompilerServices.ObjectHandleOnStack:System.Private.CoreLib.dll" />
	<edge b="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" e="TypeSpec:System.Void*" />
	<edge mark="1" b="TypeSpec:System.Void*" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;InternalEqualMethodHandles&gt;g____PInvoke|33_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" e="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.ObjectHandleOnStack:System.Private.CoreLib.dll" e="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute::.ctor(System.String)" e="TypeDef:System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.ObsoleteAttribute::.ctor(System.String,System.Boolean)" e="TypeDef:System.ObsoleteAttribute" />
	<edge mark="1" b="Method:System.Void System.ObsoleteAttribute::.ctor(System.String,System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.IsByRefLikeAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.IsByRefLikeAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.IsByRefLikeAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.IsByRefLikeAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.RuntimeMethodHandleInternal:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.QCallTypeHandle:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" e="Field:System.Int32 System.Int32::m_value" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" e="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" e="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" e="Field:System.IntPtr System.RuntimeMethodHandleInternal::m_handle" />
	<edge mark="1" b="Field:System.IntPtr System.RuntimeMethodHandleInternal::m_handle" e="TypeDef:System.RuntimeMethodHandleInternal:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.IntPtr System.RuntimeMethodHandleInternal::m_handle" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" e="Field:System.Void* System.Runtime.CompilerServices.QCallTypeHandle::_ptr" />
	<edge mark="1" b="Field:System.Void* System.Runtime.CompilerServices.QCallTypeHandle::_ptr" e="TypeDef:System.Runtime.CompilerServices.QCallTypeHandle:System.Private.CoreLib.dll" />
	<edge b="Field:System.Void* System.Runtime.CompilerServices.QCallTypeHandle::_ptr" e="TypeSpec:System.Void*" />
	<edge mark="1" b="TypeSpec:System.Void*" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" e="Field:System.IntPtr System.Runtime.CompilerServices.QCallTypeHandle::_handle" />
	<edge mark="1" b="Field:System.IntPtr System.Runtime.CompilerServices.QCallTypeHandle::_handle" e="TypeDef:System.Runtime.CompilerServices.QCallTypeHandle:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.IntPtr System.Runtime.CompilerServices.QCallTypeHandle::_handle" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodInfo&gt;g____PInvoke|21_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" e="Field:System.Int32 System.DelegateBindingFlags::value__" />
	<edge mark="1" b="Field:System.Int32 System.DelegateBindingFlags::value__" e="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Int32 System.DelegateBindingFlags::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" e="Field:System.Int32 System.DelegateBindingFlags::value__" />
	<edge mark="1" b="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" e="Field:System.DelegateBindingFlags System.DelegateBindingFlags::StaticMethodOnly" />
	<edge mark="1" b="Field:System.DelegateBindingFlags System.DelegateBindingFlags::StaticMethodOnly" e="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.DelegateBindingFlags System.DelegateBindingFlags::StaticMethodOnly" e="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" e="Field:System.DelegateBindingFlags System.DelegateBindingFlags::InstanceMethodOnly" />
	<edge mark="1" b="Field:System.DelegateBindingFlags System.DelegateBindingFlags::InstanceMethodOnly" e="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.DelegateBindingFlags System.DelegateBindingFlags::InstanceMethodOnly" e="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" e="Field:System.DelegateBindingFlags System.DelegateBindingFlags::OpenDelegateOnly" />
	<edge mark="1" b="Field:System.DelegateBindingFlags System.DelegateBindingFlags::OpenDelegateOnly" e="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.DelegateBindingFlags System.DelegateBindingFlags::OpenDelegateOnly" e="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" e="Field:System.DelegateBindingFlags System.DelegateBindingFlags::ClosedDelegateOnly" />
	<edge mark="1" b="Field:System.DelegateBindingFlags System.DelegateBindingFlags::ClosedDelegateOnly" e="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.DelegateBindingFlags System.DelegateBindingFlags::ClosedDelegateOnly" e="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" e="Field:System.DelegateBindingFlags System.DelegateBindingFlags::NeverCloseOverNull" />
	<edge mark="1" b="Field:System.DelegateBindingFlags System.DelegateBindingFlags::NeverCloseOverNull" e="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.DelegateBindingFlags System.DelegateBindingFlags::NeverCloseOverNull" e="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" e="Field:System.DelegateBindingFlags System.DelegateBindingFlags::CaselessMatching" />
	<edge mark="1" b="Field:System.DelegateBindingFlags System.DelegateBindingFlags::CaselessMatching" e="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.DelegateBindingFlags System.DelegateBindingFlags::CaselessMatching" e="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" e="Field:System.DelegateBindingFlags System.DelegateBindingFlags::RelaxedSignature" />
	<edge mark="1" b="Field:System.DelegateBindingFlags System.DelegateBindingFlags::RelaxedSignature" e="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.DelegateBindingFlags System.DelegateBindingFlags::RelaxedSignature" e="TypeDef:System.DelegateBindingFlags:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.QCallTypeHandle:System.Private.CoreLib.dll" e="Field:System.Void* System.Runtime.CompilerServices.QCallTypeHandle::_ptr" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.QCallTypeHandle:System.Private.CoreLib.dll" e="Field:System.IntPtr System.Runtime.CompilerServices.QCallTypeHandle::_handle" />
	<edge mark="1" b="TypeDef:System.RuntimeMethodHandleInternal:System.Private.CoreLib.dll" e="Field:System.IntPtr System.RuntimeMethodHandleInternal::m_handle" />
	<edge b="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" e="TypeSpec:System.Byte*" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" e="Field:System.Int32 System.Int32::m_value" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" e="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" e="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" e="Field:System.Void* System.Runtime.CompilerServices.QCallTypeHandle::_ptr" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" e="Field:System.IntPtr System.Runtime.CompilerServices.QCallTypeHandle::_handle" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" e="Field:System.Byte System.Byte::m_value" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::&lt;BindToMethodName&gt;g____PInvoke|19_0(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.Byte*,System.DelegateBindingFlags)" e="Field:System.Int32 System.DelegateBindingFlags::value__" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::op_Inequality(System.Delegate,System.Delegate)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::op_Equality(System.Delegate,System.Delegate)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::RemoveAll(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" e="Property:System.Reflection.MethodInfo System.Delegate::Method()" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.Delegate::get_Method()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void System.Delegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="TypeDef:System.Void" />
	<edge b="Method:System.Object System.Delegate::DynamicInvoke(System.Object[])" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.Object System.Delegate::DynamicInvoke(System.Object[])" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:System.ParamArrayAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ParamArrayAttribute::.ctor()" e="TypeDef:System.ParamArrayAttribute" />
	<edge mark="1" b="Method:System.Void System.ParamArrayAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate::EnumerateInvocationList(TDelegate)" e="TypeDef:System.Delegate" />
	<edge b="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate::EnumerateInvocationList(TDelegate)" e="TypeSpec:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt;" />
	<edge mark="1" b="TypeSpec:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt;" e="TypeDef:System.Delegate/InvocationListEnumerator`1" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::get_HasSingleTarget()" e="Property:System.Boolean System.Delegate::HasSingleTarget()" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::get_HasSingleTarget()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" />
	<edge b="Method:System.Delegate[] System.Delegate::GetInvocationList()" e="TypeSpec:System.Delegate[]" />
	<edge mark="1" b="TypeSpec:System.Delegate[]" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::RemoveImpl(System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::CombineImpl(System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)" e="TypeDef:System.Delegate" />
	<edge b="Method:System.Delegate System.Delegate::Combine(System.Delegate[])" e="TypeSpec:System.Delegate[]" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate[])" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Object System.Delegate::Clone()" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Object System.MulticastDelegate::GetTarget()" />
	<edge mark="1" b="Method:System.Object System.Delegate::GetTarget()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" e="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" />
	<edge mark="1" b="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" e="Field:System.IntPtr System.IntPtr::_value" />
	<edge mark="1" b="Field:System.IntPtr System.IntPtr::_value" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Field:System.IntPtr System.IntPtr::_value" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.LibraryImportAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.LibraryImportAttribute::set_EntryPoint(System.String)" e="Property:System.String System.Runtime.InteropServices.LibraryImportAttribute::EntryPoint()" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.LibraryImportAttribute::set_EntryPoint(System.String)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Runtime.InteropServices.LibraryImportAttribute::.ctor(System.String)" e="TypeDef:System.Runtime.InteropServices.LibraryImportAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.LibraryImportAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Delegate::InitializeVirtualCallStub(System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::AdjustTarget(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::AdjustTarget(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::AdjustTarget(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" e="Field:System.IntPtr System.IntPtr::_value" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::AdjustTarget(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" e="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::AdjustTarget(System.Runtime.CompilerServices.ObjectHandleOnStack,System.IntPtr)" e="Field:System.IntPtr System.IntPtr::_value" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::AdjustTarget(System.Object,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.CodeDom.Compiler.GeneratedCodeAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.CodeDom.Compiler.GeneratedCodeAttribute::.ctor(System.String,System.String)" e="TypeDef:System.CodeDom.Compiler.GeneratedCodeAttribute" />
	<edge mark="1" b="Method:System.Void System.CodeDom.Compiler.GeneratedCodeAttribute::.ctor(System.String,System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::InternalEqualMethodHandles(System.Delegate,System.Delegate)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void System.Delegate::FindMethodHandle(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Delegate::FindMethodHandle(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Void System.Delegate::FindMethodHandle(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" e="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" />
	<edge mark="1" b="Method:System.Void System.Delegate::FindMethodHandle(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack)" e="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" />
	<edge mark="1" b="Method:System.IRuntimeMethodInfo System.Delegate::FindMethodHandle()" e="TypeDef:System.IRuntimeMethodInfo:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.IRuntimeMethodInfo:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::GetInvokeMethod()" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::GetInvokeMethod()" e="Field:System.IntPtr System.IntPtr::_value" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::GetInvokeMethod()" e="Field:System.Object System.Delegate::_target" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::GetInvokeMethod()" e="Field:System.Object System.Delegate::_methodBase" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::GetInvokeMethod()" e="Field:System.IntPtr System.Delegate::_methodPtr" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::GetInvokeMethod()" e="Field:System.IntPtr System.Delegate::_methodPtrAux" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::GetMulticastInvoke()" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::GetMulticastInvoke()" e="Field:System.IntPtr System.IntPtr::_value" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::GetMulticastInvoke()" e="Field:System.Object System.Delegate::_target" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::GetMulticastInvoke()" e="Field:System.Object System.Delegate::_methodBase" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::GetMulticastInvoke()" e="Field:System.IntPtr System.Delegate::_methodPtr" />
	<edge mark="1" b="Method:System.IntPtr System.Delegate::GetMulticastInvoke()" e="Field:System.IntPtr System.Delegate::_methodPtrAux" />
	<edge mark="1" b="Method:System.Void System.Delegate::DelegateConstruct(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Delegate::DelegateConstruct(System.Object,System.IntPtr)" e="Field:System.Object System.Delegate::_target" />
	<edge mark="1" b="Method:System.Void System.Delegate::DelegateConstruct(System.Object,System.IntPtr)" e="Field:System.Object System.Delegate::_methodBase" />
	<edge mark="1" b="Method:System.Void System.Delegate::DelegateConstruct(System.Object,System.IntPtr)" e="Field:System.IntPtr System.Delegate::_methodPtr" />
	<edge mark="1" b="Method:System.Void System.Delegate::DelegateConstruct(System.Object,System.IntPtr)" e="Field:System.IntPtr System.Delegate::_methodPtrAux" />
	<edge mark="1" b="Method:System.Void System.Delegate::DelegateConstruct(System.Object,System.IntPtr)" e="Field:System.IntPtr System.IntPtr::_value" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::InternalEqualTypes(System.Object,System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void System.Delegate::InternalAllocLike(System.Runtime.CompilerServices.ObjectHandleOnStack)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Delegate::InternalAllocLike(System.Runtime.CompilerServices.ObjectHandleOnStack)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Void System.Delegate::InternalAllocLike(System.Runtime.CompilerServices.ObjectHandleOnStack)" e="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" />
	<edge mark="1" b="Method:System.MulticastDelegate System.Delegate::InternalAllocLike(System.MulticastDelegate)" e="TypeDef:System.MulticastDelegate" />
	<edge mark="1" b="Method:System.Void System.Delegate::InternalAlloc(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Delegate::InternalAlloc(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Void System.Delegate::InternalAlloc(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack)" e="Field:System.Void* System.Runtime.CompilerServices.QCallTypeHandle::_ptr" />
	<edge mark="1" b="Method:System.Void System.Delegate::InternalAlloc(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack)" e="Field:System.IntPtr System.Runtime.CompilerServices.QCallTypeHandle::_handle" />
	<edge mark="1" b="Method:System.Void System.Delegate::InternalAlloc(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack)" e="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" />
	<edge mark="1" b="Method:System.MulticastDelegate System.Delegate::InternalAlloc(System.RuntimeType)" e="TypeDef:System.MulticastDelegate" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.RuntimeMethodHandleInternal,System.Runtime.CompilerServices.QCallTypeHandle,System.DelegateBindingFlags)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::BindToMethodInfo(System.Object,System.IRuntimeMethodInfo,System.RuntimeType,System.DelegateBindingFlags)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::BindToMethodName(System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.QCallTypeHandle,System.String,System.DelegateBindingFlags)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.LibraryImportAttribute::set_StringMarshalling(System.Runtime.InteropServices.StringMarshalling)" e="Property:System.Runtime.InteropServices.StringMarshalling System.Runtime.InteropServices.LibraryImportAttribute::StringMarshalling()" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.StringMarshalling" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.LibraryImportAttribute::set_StringMarshalling(System.Runtime.InteropServices.StringMarshalling)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.StringMarshalling" e="Field:System.Int32 System.Runtime.InteropServices.StringMarshalling::value__" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.InteropServices.StringMarshalling::value__" e="TypeDef:System.Runtime.InteropServices.StringMarshalling" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.InteropServices.StringMarshalling::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.StringMarshalling" e="Field:System.Runtime.InteropServices.StringMarshalling System.Runtime.InteropServices.StringMarshalling::Custom" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.StringMarshalling System.Runtime.InteropServices.StringMarshalling::Custom" e="TypeDef:System.Runtime.InteropServices.StringMarshalling" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.StringMarshalling System.Runtime.InteropServices.StringMarshalling::Custom" e="TypeDef:System.Runtime.InteropServices.StringMarshalling" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.StringMarshalling" e="Field:System.Runtime.InteropServices.StringMarshalling System.Runtime.InteropServices.StringMarshalling::Utf8" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.StringMarshalling System.Runtime.InteropServices.StringMarshalling::Utf8" e="TypeDef:System.Runtime.InteropServices.StringMarshalling" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.StringMarshalling System.Runtime.InteropServices.StringMarshalling::Utf8" e="TypeDef:System.Runtime.InteropServices.StringMarshalling" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.StringMarshalling" e="Field:System.Runtime.InteropServices.StringMarshalling System.Runtime.InteropServices.StringMarshalling::Utf16" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.StringMarshalling System.Runtime.InteropServices.StringMarshalling::Utf16" e="TypeDef:System.Runtime.InteropServices.StringMarshalling" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.StringMarshalling System.Runtime.InteropServices.StringMarshalling::Utf16" e="TypeDef:System.Runtime.InteropServices.StringMarshalling" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::BindToMethodName(System.Object,System.RuntimeType,System.String,System.DelegateBindingFlags)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Reflection.RuntimeMethodInfo:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::CreateDelegateInternal(System.RuntimeType,System.Reflection.RuntimeMethodInfo,System.Object,System.DelegateBindingFlags)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Boolean)" e="Method:System.Object[] System.Reflection.RuntimeMethodInfo::GetCustomAttributes(System.Boolean)" />
	<edge mark="1" b="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Type,System.Boolean)" e="Method:System.Object[] System.Reflection.RuntimeMethodInfo::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean)" e="Method:System.Boolean System.Reflection.RuntimeMethodInfo::IsDefined(System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.String System.Reflection.MemberInfo::get_Name()" e="Method:System.String System.Reflection.RuntimeMethodInfo::get_Name()" />
	<edge mark="1" b="Method:System.Type System.Reflection.MemberInfo::get_DeclaringType()" e="Method:System.Type System.Reflection.RuntimeMethodInfo::get_DeclaringType()" />
	<edge mark="1" b="Method:System.Type System.Reflection.MemberInfo::get_ReflectedType()" e="Method:System.Type System.Reflection.RuntimeMethodInfo::get_ReflectedType()" />
	<edge mark="1" b="Method:System.Reflection.ParameterInfo[] System.Reflection.MethodBase::GetParameters()" e="Method:System.Reflection.ParameterInfo[] System.Reflection.RuntimeMethodInfo::GetParameters()" />
	<edge mark="1" b="Method:System.Reflection.MethodImplAttributes System.Reflection.MethodBase::GetMethodImplementationFlags()" e="Method:System.Reflection.MethodImplAttributes System.Reflection.RuntimeMethodInfo::GetMethodImplementationFlags()" />
	<edge mark="1" b="Method:System.RuntimeMethodHandle System.Reflection.MethodBase::get_MethodHandle()" e="Method:System.RuntimeMethodHandle System.Reflection.RuntimeMethodInfo::get_MethodHandle()" />
	<edge mark="1" b="Method:System.Reflection.MethodAttributes System.Reflection.MethodBase::get_Attributes()" e="Method:System.Reflection.MethodAttributes System.Reflection.RuntimeMethodInfo::get_Attributes()" />
	<edge mark="1" b="Method:System.Reflection.ICustomAttributeProvider System.Reflection.MethodInfo::get_ReturnTypeCustomAttributes()" e="Method:System.Reflection.ICustomAttributeProvider System.Reflection.RuntimeMethodInfo::get_ReturnTypeCustomAttributes()" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.Reflection.MethodInfo::GetBaseDefinition()" e="Method:System.Reflection.MethodInfo System.Reflection.RuntimeMethodInfo::GetBaseDefinition()" />
	<edge mark="1" b="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" e="Method:System.Object System.Reflection.RuntimeMethodInfo::Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.Binder" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Object System.Reflection.RuntimeMethodInfo::Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="TypeDef:System.Globalization.CultureInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Object System.Reflection.RuntimeMethodInfo::Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" e="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Object System.Reflection.RuntimeMethodInfo::Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Int32 System.Reflection.BindingFlags::value__" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.BindingFlags::value__" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.BindingFlags::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Default" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Default" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Default" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::IgnoreCase" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::IgnoreCase" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::IgnoreCase" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::DeclaredOnly" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::DeclaredOnly" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::DeclaredOnly" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Instance" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Instance" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Instance" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Static" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Static" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Static" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Public" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Public" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::Public" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::NonPublic" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::NonPublic" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::NonPublic" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::FlattenHierarchy" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::FlattenHierarchy" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::FlattenHierarchy" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::InvokeMethod" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::InvokeMethod" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::InvokeMethod" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::CreateInstance" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::CreateInstance" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::CreateInstance" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::GetField" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::GetField" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::GetField" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::SetField" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::SetField" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::SetField" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::GetProperty" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::GetProperty" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::GetProperty" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::SetProperty" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::SetProperty" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::SetProperty" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::PutDispProperty" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::PutDispProperty" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::PutDispProperty" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::PutRefDispProperty" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::PutRefDispProperty" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::PutRefDispProperty" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::ExactBinding" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::ExactBinding" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::ExactBinding" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::SuppressChangeType" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::SuppressChangeType" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::SuppressChangeType" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::OptionalParamBinding" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::OptionalParamBinding" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::OptionalParamBinding" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::IgnoreReturn" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::IgnoreReturn" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::IgnoreReturn" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="TypeDef:System.Reflection.BindingFlags" e="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::DoNotWrapExceptions" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::DoNotWrapExceptions" e="TypeDef:System.Reflection.BindingFlags" />
	<edge mark="1" b="Field:System.Reflection.BindingFlags System.Reflection.BindingFlags::DoNotWrapExceptions" e="TypeDef:System.Reflection.BindingFlags" />
	<edge b="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" e="Method:System.Object System.Reflection.RuntimeMethodInfo::Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
	<edge mark="1" b="Method:System.Object System.Reflection.MethodBase::Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggerHiddenAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.DebuggerHiddenAttribute::.ctor()" e="TypeDef:System.Diagnostics.DebuggerHiddenAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.DebuggerHiddenAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.Reflection.RuntimeMethodInfo::GetBaseDefinition()" e="Method:System.Reflection.MethodInfo System.Reflection.MethodInfo::GetBaseDefinition()" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.Reflection.RuntimeMethodInfo::GetBaseDefinition()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.Reflection.MethodInfo::GetBaseDefinition()" e="Method:System.Reflection.MethodInfo System.Reflection.RuntimeMethodInfo::GetBaseDefinition()" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.Reflection.MethodInfo::GetBaseDefinition()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Reflection.ICustomAttributeProvider System.Reflection.RuntimeMethodInfo::get_ReturnTypeCustomAttributes()" e="Property:System.Reflection.ICustomAttributeProvider System.Reflection.RuntimeMethodInfo::ReturnTypeCustomAttributes()" />
	<edge mark="1" b="Method:System.Reflection.ICustomAttributeProvider System.Reflection.RuntimeMethodInfo::get_ReturnTypeCustomAttributes()" e="Method:System.Reflection.ICustomAttributeProvider System.Reflection.MethodInfo::get_ReturnTypeCustomAttributes()" />
	<edge mark="1" b="Method:System.Reflection.ICustomAttributeProvider System.Reflection.RuntimeMethodInfo::get_ReturnTypeCustomAttributes()" e="TypeDef:System.Reflection.ICustomAttributeProvider" />
	<edge mark="1" b="TypeDef:System.Reflection.ICustomAttributeProvider" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.ICustomAttributeProvider System.Reflection.MethodInfo::get_ReturnTypeCustomAttributes()" e="Property:System.Reflection.ICustomAttributeProvider System.Reflection.MethodInfo::ReturnTypeCustomAttributes()" />
	<edge mark="1" b="Method:System.Reflection.ICustomAttributeProvider System.Reflection.MethodInfo::get_ReturnTypeCustomAttributes()" e="Method:System.Reflection.ICustomAttributeProvider System.Reflection.RuntimeMethodInfo::get_ReturnTypeCustomAttributes()" />
	<edge mark="1" b="Method:System.Reflection.ICustomAttributeProvider System.Reflection.MethodInfo::get_ReturnTypeCustomAttributes()" e="TypeDef:System.Reflection.ICustomAttributeProvider" />
	<edge mark="1" b="Method:System.Reflection.MethodAttributes System.Reflection.RuntimeMethodInfo::get_Attributes()" e="Property:System.Reflection.MethodAttributes System.Reflection.RuntimeMethodInfo::Attributes()" />
	<edge mark="1" b="Method:System.Reflection.MethodAttributes System.Reflection.RuntimeMethodInfo::get_Attributes()" e="Method:System.Reflection.MethodAttributes System.Reflection.MethodBase::get_Attributes()" />
	<edge mark="1" b="Method:System.Reflection.MethodAttributes System.Reflection.RuntimeMethodInfo::get_Attributes()" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Int32 System.Reflection.MethodAttributes::value__" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.MethodAttributes::value__" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.MethodAttributes::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::MemberAccessMask" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::MemberAccessMask" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::MemberAccessMask" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::PrivateScope" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::PrivateScope" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::PrivateScope" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Private" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Private" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Private" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::FamANDAssem" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::FamANDAssem" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::FamANDAssem" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Assembly" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Assembly" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Assembly" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Family" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Family" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Family" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::FamORAssem" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::FamORAssem" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::FamORAssem" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Public" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Public" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Public" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Static" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Static" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Static" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Final" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Final" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Final" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Virtual" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Virtual" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Virtual" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::HideBySig" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::HideBySig" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::HideBySig" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::CheckAccessOnOverride" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::CheckAccessOnOverride" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::CheckAccessOnOverride" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::VtableLayoutMask" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::VtableLayoutMask" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::VtableLayoutMask" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::ReuseSlot" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::ReuseSlot" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::ReuseSlot" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::NewSlot" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::NewSlot" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::NewSlot" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Abstract" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Abstract" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::Abstract" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::SpecialName" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::SpecialName" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::SpecialName" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::PinvokeImpl" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::PinvokeImpl" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::PinvokeImpl" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::UnmanagedExport" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::UnmanagedExport" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::UnmanagedExport" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::RTSpecialName" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::RTSpecialName" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::RTSpecialName" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::HasSecurity" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::HasSecurity" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::HasSecurity" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::RequireSecObject" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::RequireSecObject" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::RequireSecObject" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodAttributes" e="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::ReservedMask" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::ReservedMask" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodAttributes System.Reflection.MethodAttributes::ReservedMask" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Method:System.Reflection.MethodAttributes System.Reflection.MethodBase::get_Attributes()" e="Property:System.Reflection.MethodAttributes System.Reflection.MethodBase::Attributes()" />
	<edge mark="1" b="Method:System.Reflection.MethodAttributes System.Reflection.MethodBase::get_Attributes()" e="Method:System.Reflection.MethodAttributes System.Reflection.RuntimeMethodInfo::get_Attributes()" />
	<edge mark="1" b="Method:System.Reflection.MethodAttributes System.Reflection.MethodBase::get_Attributes()" e="TypeDef:System.Reflection.MethodAttributes" />
	<edge mark="1" b="Method:System.RuntimeMethodHandle System.Reflection.RuntimeMethodInfo::get_MethodHandle()" e="Property:System.RuntimeMethodHandle System.Reflection.RuntimeMethodInfo::MethodHandle()" />
	<edge mark="1" b="Method:System.RuntimeMethodHandle System.Reflection.RuntimeMethodInfo::get_MethodHandle()" e="Method:System.RuntimeMethodHandle System.Reflection.MethodBase::get_MethodHandle()" />
	<edge mark="1" b="Method:System.RuntimeMethodHandle System.Reflection.RuntimeMethodInfo::get_MethodHandle()" e="TypeDef:System.RuntimeMethodHandle" />
	<edge mark="1" b="TypeDef:System.RuntimeMethodHandle" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.RuntimeMethodHandle&gt;" e="TypeDef:System.RuntimeMethodHandle" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.RuntimeMethodHandle&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeDef:System.RuntimeMethodHandle" e="Method:System.Int32 System.RuntimeMethodHandle::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.RuntimeMethodHandle" e="Method:System.Boolean System.RuntimeMethodHandle::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.RuntimeMethodHandle" e="Field:System.IRuntimeMethodInfo System.RuntimeMethodHandle::m_value" />
	<edge mark="1" b="Field:System.IRuntimeMethodInfo System.RuntimeMethodHandle::m_value" e="TypeDef:System.RuntimeMethodHandle" />
	<edge mark="1" b="Field:System.IRuntimeMethodInfo System.RuntimeMethodHandle::m_value" e="TypeDef:System.IRuntimeMethodInfo:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.RuntimeMethodHandle" e="Method:System.Int32 System.RuntimeMethodHandle::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.RuntimeMethodHandle" e="Method:System.Boolean System.RuntimeMethodHandle::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeMethodHandle::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeMethodHandle::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.RuntimeMethodHandle::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.RuntimeMethodHandle::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Runtime.Versioning.NonVersionableAttribute:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.Versioning.NonVersionableAttribute::.ctor()" e="TypeDef:System.Runtime.Versioning.NonVersionableAttribute:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Runtime.Versioning.NonVersionableAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.RuntimeMethodHandle System.Reflection.MethodBase::get_MethodHandle()" e="Property:System.RuntimeMethodHandle System.Reflection.MethodBase::MethodHandle()" />
	<edge mark="1" b="Method:System.RuntimeMethodHandle System.Reflection.MethodBase::get_MethodHandle()" e="Method:System.RuntimeMethodHandle System.Reflection.RuntimeMethodInfo::get_MethodHandle()" />
	<edge mark="1" b="Method:System.RuntimeMethodHandle System.Reflection.MethodBase::get_MethodHandle()" e="TypeDef:System.RuntimeMethodHandle" />
	<edge mark="1" b="Method:System.Reflection.MethodImplAttributes System.Reflection.RuntimeMethodInfo::GetMethodImplementationFlags()" e="Method:System.Reflection.MethodImplAttributes System.Reflection.MethodBase::GetMethodImplementationFlags()" />
	<edge mark="1" b="Method:System.Reflection.MethodImplAttributes System.Reflection.RuntimeMethodInfo::GetMethodImplementationFlags()" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Field:System.Int32 System.Reflection.MethodImplAttributes::value__" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.MethodImplAttributes::value__" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.MethodImplAttributes::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::CodeTypeMask" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::CodeTypeMask" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::CodeTypeMask" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::IL" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::IL" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::IL" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::Native" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::Native" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::Native" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::OPTIL" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::OPTIL" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::OPTIL" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::Runtime" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::Runtime" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::Runtime" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::ManagedMask" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::ManagedMask" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::ManagedMask" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::Unmanaged" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::Unmanaged" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::Unmanaged" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::Managed" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::Managed" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::Managed" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::ForwardRef" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::ForwardRef" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::ForwardRef" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::PreserveSig" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::PreserveSig" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::PreserveSig" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::InternalCall" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::InternalCall" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::InternalCall" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::Synchronized" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::Synchronized" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::Synchronized" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::NoInlining" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::NoInlining" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::NoInlining" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::AggressiveInlining" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::AggressiveInlining" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::AggressiveInlining" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::NoOptimization" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::NoOptimization" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::NoOptimization" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::AggressiveOptimization" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::AggressiveOptimization" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::AggressiveOptimization" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.MethodImplAttributes" e="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::MaxMethodImplVal" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::MaxMethodImplVal" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Field:System.Reflection.MethodImplAttributes System.Reflection.MethodImplAttributes::MaxMethodImplVal" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Method:System.Reflection.MethodImplAttributes System.Reflection.MethodBase::GetMethodImplementationFlags()" e="Method:System.Reflection.MethodImplAttributes System.Reflection.RuntimeMethodInfo::GetMethodImplementationFlags()" />
	<edge mark="1" b="Method:System.Reflection.MethodImplAttributes System.Reflection.MethodBase::GetMethodImplementationFlags()" e="TypeDef:System.Reflection.MethodImplAttributes" />
	<edge mark="1" b="Method:System.Reflection.ParameterInfo[] System.Reflection.RuntimeMethodInfo::GetParameters()" e="Method:System.Reflection.ParameterInfo[] System.Reflection.MethodBase::GetParameters()" />
	<edge b="Method:System.Reflection.ParameterInfo[] System.Reflection.RuntimeMethodInfo::GetParameters()" e="TypeSpec:System.Reflection.ParameterInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.ParameterInfo[]" e="TypeDef:System.Reflection.ParameterInfo" />
	<edge mark="1" b="TypeDef:System.Reflection.ParameterInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.ParameterInfo[] System.Reflection.MethodBase::GetParameters()" e="Method:System.Reflection.ParameterInfo[] System.Reflection.RuntimeMethodInfo::GetParameters()" />
	<edge b="Method:System.Reflection.ParameterInfo[] System.Reflection.MethodBase::GetParameters()" e="TypeSpec:System.Reflection.ParameterInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.ParameterInfo[]" e="TypeDef:System.Reflection.ParameterInfo" />
	<edge mark="1" b="Method:System.Type System.Reflection.RuntimeMethodInfo::get_ReflectedType()" e="Property:System.Type System.Reflection.RuntimeMethodInfo::ReflectedType()" />
	<edge mark="1" b="Method:System.Type System.Reflection.RuntimeMethodInfo::get_ReflectedType()" e="Method:System.Type System.Reflection.MemberInfo::get_ReflectedType()" />
	<edge mark="1" b="Method:System.Type System.Reflection.RuntimeMethodInfo::get_ReflectedType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Reflection.MemberInfo::get_ReflectedType()" e="Property:System.Type System.Reflection.MemberInfo::ReflectedType()" />
	<edge mark="1" b="Method:System.Type System.Reflection.MemberInfo::get_ReflectedType()" e="Method:System.Type System.Type::get_ReflectedType()" />
	<edge mark="1" b="Method:System.Type System.Reflection.MemberInfo::get_ReflectedType()" e="Method:System.Type System.Reflection.RuntimeMethodInfo::get_ReflectedType()" />
	<edge mark="1" b="Method:System.Type System.Reflection.MemberInfo::get_ReflectedType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Type::get_ReflectedType()" e="Property:System.Type System.Type::ReflectedType()" />
	<edge mark="1" b="Method:System.Type System.Type::get_ReflectedType()" e="Method:System.Type System.Reflection.MemberInfo::get_ReflectedType()" />
	<edge mark="1" b="Method:System.Type System.Type::get_ReflectedType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Reflection.RuntimeMethodInfo::get_DeclaringType()" e="Property:System.Type System.Reflection.RuntimeMethodInfo::DeclaringType()" />
	<edge mark="1" b="Method:System.Type System.Reflection.RuntimeMethodInfo::get_DeclaringType()" e="Method:System.Type System.Reflection.MemberInfo::get_DeclaringType()" />
	<edge mark="1" b="Method:System.Type System.Reflection.RuntimeMethodInfo::get_DeclaringType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Reflection.MemberInfo::get_DeclaringType()" e="Property:System.Type System.Reflection.MemberInfo::DeclaringType()" />
	<edge mark="1" b="Method:System.Type System.Reflection.MemberInfo::get_DeclaringType()" e="Method:System.Type System.Type::get_DeclaringType()" />
	<edge mark="1" b="Method:System.Type System.Reflection.MemberInfo::get_DeclaringType()" e="Method:System.Type System.Reflection.RuntimeMethodInfo::get_DeclaringType()" />
	<edge mark="1" b="Method:System.Type System.Reflection.MemberInfo::get_DeclaringType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Type::get_DeclaringType()" e="Property:System.Type System.Type::DeclaringType()" />
	<edge mark="1" b="Method:System.Type System.Type::get_DeclaringType()" e="Method:System.Type System.Reflection.MemberInfo::get_DeclaringType()" />
	<edge mark="1" b="Method:System.Type System.Type::get_DeclaringType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.String System.Reflection.RuntimeMethodInfo::get_Name()" e="Property:System.String System.Reflection.RuntimeMethodInfo::Name()" />
	<edge mark="1" b="Method:System.String System.Reflection.RuntimeMethodInfo::get_Name()" e="Method:System.String System.Reflection.MemberInfo::get_Name()" />
	<edge mark="1" b="Method:System.String System.Reflection.RuntimeMethodInfo::get_Name()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Reflection.MemberInfo::get_Name()" e="Property:System.String System.Reflection.MemberInfo::Name()" />
	<edge mark="1" b="Method:System.String System.Reflection.MemberInfo::get_Name()" e="Method:System.String System.RuntimeType::get_Name()" />
	<edge mark="1" b="Method:System.String System.Reflection.MemberInfo::get_Name()" e="Method:System.String System.Reflection.RuntimeMethodInfo::get_Name()" />
	<edge mark="1" b="Method:System.String System.Reflection.MemberInfo::get_Name()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_Name()" e="Property:System.String System.RuntimeType::Name()" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_Name()" e="Method:System.String System.Reflection.MemberInfo::get_Name()" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_Name()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.RuntimeMethodInfo::IsDefined(System.Type,System.Boolean)" e="Method:System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.RuntimeMethodInfo::IsDefined(System.Type,System.Boolean)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean)" e="Method:System.Boolean System.RuntimeType::IsDefined(System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean)" e="Method:System.Boolean System.Reflection.RuntimeMethodInfo::IsDefined(System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsDefined(System.Type,System.Boolean)" e="Method:System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsDefined(System.Type,System.Boolean)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Object[] System.Reflection.RuntimeMethodInfo::GetCustomAttributes(System.Type,System.Boolean)" e="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge b="Method:System.Object[] System.Reflection.RuntimeMethodInfo::GetCustomAttributes(System.Type,System.Boolean)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="TypeSpec:System.Object[]" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Type,System.Boolean)" e="Method:System.Object[] System.RuntimeType::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Type,System.Boolean)" e="Method:System.Object[] System.Reflection.RuntimeMethodInfo::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge b="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Type,System.Boolean)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="TypeSpec:System.Object[]" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object[] System.RuntimeType::GetCustomAttributes(System.Type,System.Boolean)" e="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge b="Method:System.Object[] System.RuntimeType::GetCustomAttributes(System.Type,System.Boolean)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="TypeSpec:System.Object[]" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object[] System.Reflection.RuntimeMethodInfo::GetCustomAttributes(System.Boolean)" e="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Boolean)" />
	<edge b="Method:System.Object[] System.Reflection.RuntimeMethodInfo::GetCustomAttributes(System.Boolean)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="TypeSpec:System.Object[]" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Boolean)" e="Method:System.Object[] System.RuntimeType::GetCustomAttributes(System.Boolean)" />
	<edge mark="1" b="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Boolean)" e="Method:System.Object[] System.Reflection.RuntimeMethodInfo::GetCustomAttributes(System.Boolean)" />
	<edge b="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Boolean)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="TypeSpec:System.Object[]" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object[] System.RuntimeType::GetCustomAttributes(System.Boolean)" e="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Boolean)" />
	<edge b="Method:System.Object[] System.RuntimeType::GetCustomAttributes(System.Boolean)" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="TypeSpec:System.Object[]" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::CreateDelegateNoSecurityCheck(System.Type,System.Object,System.RuntimeMethodHandle)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Object System.Delegate::get_Target()" e="Property:System.Object System.Delegate::Target()" />
	<edge mark="1" b="Method:System.Object System.Delegate::get_Target()" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.Delegate::GetMethodImpl()" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Int32 System.MulticastDelegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Delegate::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Delegate::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Object System.Delegate::DynamicInvokeImpl(System.Object[])" e="TypeSpec:System.Object[]" />
	<edge mark="1" b="Method:System.Object System.Delegate::DynamicInvokeImpl(System.Object[])" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:System.Delegate" e="Method:System.Boolean System.Delegate::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Delegate" e="Method:System.Int32 System.Delegate::GetHashCode()" />
	<edge b="Method:System.Void System.Delegate::.ctor(System.Type,System.String)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Void System.Delegate::.ctor(System.Type,System.String)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Delegate::.ctor(System.Object,System.String)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="Method:System.Void System.Delegate::.ctor(System.Object,System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Object" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.ClassInterfaceAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(System.Runtime.InteropServices.ClassInterfaceType)" e="TypeDef:System.Runtime.InteropServices.ClassInterfaceAttribute" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.ClassInterfaceAttribute::.ctor(System.Runtime.InteropServices.ClassInterfaceType)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" e="Field:System.Int32 System.Runtime.InteropServices.ClassInterfaceType::value__" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.InteropServices.ClassInterfaceType::value__" e="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.InteropServices.ClassInterfaceType::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" e="Field:System.Runtime.InteropServices.ClassInterfaceType System.Runtime.InteropServices.ClassInterfaceType::None" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.ClassInterfaceType System.Runtime.InteropServices.ClassInterfaceType::None" e="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.ClassInterfaceType System.Runtime.InteropServices.ClassInterfaceType::None" e="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" e="Field:System.Runtime.InteropServices.ClassInterfaceType System.Runtime.InteropServices.ClassInterfaceType::AutoDispatch" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.ClassInterfaceType System.Runtime.InteropServices.ClassInterfaceType::AutoDispatch" e="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.ClassInterfaceType System.Runtime.InteropServices.ClassInterfaceType::AutoDispatch" e="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" e="Field:System.Runtime.InteropServices.ClassInterfaceType System.Runtime.InteropServices.ClassInterfaceType::AutoDual" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.ClassInterfaceType System.Runtime.InteropServices.ClassInterfaceType::AutoDual" e="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.ClassInterfaceType System.Runtime.InteropServices.ClassInterfaceType::AutoDual" e="TypeDef:System.Runtime.InteropServices.ClassInterfaceType" />
	<edge mark="1" b="TypeDef:System.Delegate" e="Method:System.Boolean System.Delegate::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Delegate" e="Method:System.Int32 System.Delegate::GetHashCode()" />
	<edge mark="1" b="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Object System.ICloneable::Clone()" e="TypeDef:System.Object" />
	<edge b="Method:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt; System.Delegate/InvocationListEnumerator`1::GetEnumerator()" e="TypeSpec:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt;" />
	<edge mark="1" b="TypeSpec:System.Delegate/InvocationListEnumerator`1&lt;TDelegate&gt;" e="TypeDef:System.Delegate/InvocationListEnumerator`1" />
	<edge mark="1" b="Method:System.Boolean System.Delegate/InvocationListEnumerator`1::MoveNext()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:TDelegate System.Delegate/InvocationListEnumerator`1::get_Current()" e="Property:TDelegate System.Delegate/InvocationListEnumerator`1::Current()" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Field:System.MulticastDelegate System.Delegate/InvocationListEnumerator`1::_delegate" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Field:System.Int32 System.Delegate/InvocationListEnumerator`1::_index" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="Field:TDelegate System.Delegate/InvocationListEnumerator`1::_current" />
	<edge b="Method:System.Void System.Delegate/InvocationListEnumerator`1::.ctor(System.MulticastDelegate)" e="TypeDef:System.Delegate/InvocationListEnumerator`1" />
	<edge mark="1" b="Method:System.Void System.Delegate/InvocationListEnumerator`1::.ctor(System.MulticastDelegate)" e="TypeDef:System.Void" />
	<edge b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="TypeSpec:System.UInt32*" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="TypeSpec:System.UInt32*" />
	<edge b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="TypeSpec:System.Runtime.CompilerServices.MethodTable**:System.Private.CoreLib.dll" />
	<edge b="TypeSpec:System.Runtime.CompilerServices.MethodTable**:System.Private.CoreLib.dll" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::ComponentSize" />
	<edge mark="1" b="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::ComponentSize" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::ComponentSize" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::Flags" />
	<edge mark="1" b="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::Flags" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::Flags" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::BaseSize" />
	<edge mark="1" b="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::BaseSize" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::BaseSize" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::InterfaceCount" />
	<edge mark="1" b="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::InterfaceCount" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::InterfaceCount" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Runtime.CompilerServices.MethodTable* System.Runtime.CompilerServices.MethodTable::ParentMethodTable" />
	<edge mark="1" b="Field:System.Runtime.CompilerServices.MethodTable* System.Runtime.CompilerServices.MethodTable::ParentMethodTable" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge b="Field:System.Runtime.CompilerServices.MethodTable* System.Runtime.CompilerServices.MethodTable::ParentMethodTable" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Runtime.CompilerServices.MethodTableAuxiliaryData* System.Runtime.CompilerServices.MethodTable::AuxiliaryData" />
	<edge mark="1" b="Field:System.Runtime.CompilerServices.MethodTableAuxiliaryData* System.Runtime.CompilerServices.MethodTable::AuxiliaryData" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge b="Field:System.Runtime.CompilerServices.MethodTableAuxiliaryData* System.Runtime.CompilerServices.MethodTable::AuxiliaryData" e="TypeSpec:System.Runtime.CompilerServices.MethodTableAuxiliaryData*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Runtime.CompilerServices.MethodTableAuxiliaryData*:System.Private.CoreLib.dll" e="TypeDef:System.Runtime.CompilerServices.MethodTableAuxiliaryData:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTableAuxiliaryData:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Void* System.Runtime.CompilerServices.MethodTable::ElementType" />
	<edge mark="1" b="Field:System.Void* System.Runtime.CompilerServices.MethodTable::ElementType" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge b="Field:System.Void* System.Runtime.CompilerServices.MethodTable::ElementType" e="TypeSpec:System.Void*" />
	<edge mark="1" b="TypeSpec:System.Void*" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Runtime.CompilerServices.MethodTable** System.Runtime.CompilerServices.MethodTable::InterfaceMap" />
	<edge mark="1" b="Field:System.Runtime.CompilerServices.MethodTable** System.Runtime.CompilerServices.MethodTable::InterfaceMap" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge b="Field:System.Runtime.CompilerServices.MethodTable** System.Runtime.CompilerServices.MethodTable::InterfaceMap" e="TypeSpec:System.Runtime.CompilerServices.MethodTable**:System.Private.CoreLib.dll" />
	<edge b="TypeSpec:System.Runtime.CompilerServices.MethodTable**:System.Private.CoreLib.dll" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" e="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt32 System.UInt32::m_value" />
	<edge mark="1" b="Field:System.UInt32 System.UInt32::m_value" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Field:System.UInt32 System.UInt32::m_value" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt32 System.UInt32::m_value" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::ComponentSize" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::Flags" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::BaseSize" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::InterfaceCount" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Runtime.CompilerServices.MethodTable* System.Runtime.CompilerServices.MethodTable::ParentMethodTable" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Runtime.CompilerServices.MethodTableAuxiliaryData* System.Runtime.CompilerServices.MethodTable::AuxiliaryData" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Void* System.Runtime.CompilerServices.MethodTable::ElementType" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::&lt;GetHashCodeStrategy&gt;g____PInvoke|5_0(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32*,System.UInt32*,System.Runtime.CompilerServices.MethodTable**)" e="Field:System.Runtime.CompilerServices.MethodTable** System.Runtime.CompilerServices.MethodTable::InterfaceMap" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.UInt32&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Method:System.Boolean System.UInt32::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Method:System.Int32 System.UInt32::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Method:System.String System.UInt32::ToString()" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Field:System.UInt32 System.UInt32::m_value" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Method:System.Boolean System.UInt32::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Method:System.Int32 System.UInt32::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Method:System.String System.UInt32::ToString()" />
	<edge mark="1" b="Method:System.String System.UInt32::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.UInt32::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.CLSCompliantAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.CLSCompliantAttribute::.ctor(System.Boolean)" e="TypeDef:System.CLSCompliantAttribute" />
	<edge mark="1" b="Method:System.Void System.CLSCompliantAttribute::.ctor(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" e="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::ComponentSize" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::Flags" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::BaseSize" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" e="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::InterfaceCount" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" e="Field:System.Runtime.CompilerServices.MethodTable* System.Runtime.CompilerServices.MethodTable::ParentMethodTable" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" e="Field:System.Runtime.CompilerServices.MethodTableAuxiliaryData* System.Runtime.CompilerServices.MethodTable::AuxiliaryData" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" e="Field:System.Void* System.Runtime.CompilerServices.MethodTable::ElementType" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTable:System.Private.CoreLib.dll" e="Field:System.Runtime.CompilerServices.MethodTable** System.Runtime.CompilerServices.MethodTable::InterfaceMap" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.MethodTableAuxiliaryData:System.Private.CoreLib.dll" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTableAuxiliaryData::Flags" />
	<edge mark="1" b="Field:System.UInt32 System.Runtime.CompilerServices.MethodTableAuxiliaryData::Flags" e="TypeDef:System.Runtime.CompilerServices.MethodTableAuxiliaryData:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.UInt32 System.Runtime.CompilerServices.MethodTableAuxiliaryData::Flags" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.UInt16&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Method:System.Boolean System.UInt16::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Method:System.Int32 System.UInt16::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Method:System.String System.UInt16::ToString()" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Field:System.UInt16 System.UInt16::m_value" />
	<edge mark="1" b="Field:System.UInt16 System.UInt16::m_value" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Field:System.UInt16 System.UInt16::m_value" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Method:System.Boolean System.UInt16::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Method:System.Int32 System.UInt16::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Method:System.String System.UInt16::ToString()" />
	<edge mark="1" b="Method:System.String System.UInt16::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.UInt16::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.Int32 System.Int32::m_value" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::ComponentSize" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::Flags" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::BaseSize" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::InterfaceCount" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.Runtime.CompilerServices.MethodTable* System.Runtime.CompilerServices.MethodTable::ParentMethodTable" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.Runtime.CompilerServices.MethodTableAuxiliaryData* System.Runtime.CompilerServices.MethodTable::AuxiliaryData" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.Void* System.Runtime.CompilerServices.MethodTable::ElementType" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::&lt;CanCompareBitsOrUseFastGetHashCodeHelper&gt;g____PInvoke|2_0(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.Runtime.CompilerServices.MethodTable** System.Runtime.CompilerServices.MethodTable::InterfaceMap" />
	<edge b="Method:System.Void System.ValueType::.ctor()" e="TypeDef:System.ValueType" />
	<edge mark="1" b="Method:System.Void System.ValueType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:System.Byte" e="Method:System.String System.Byte::ToString()" />
	<edge mark="1" b="TypeDef:System.Int64" e="Method:System.String System.Int64::ToString()" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Method:System.String System.UInt16::ToString()" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Method:System.String System.UInt32::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="TypeDef:System.String" />
	<edge b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*&amp;:System.Private.CoreLib.dll" />
	<edge b="TypeSpec:System.Runtime.CompilerServices.MethodTable*&amp;:System.Private.CoreLib.dll" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.ValueType/ValueTypeHashCodeStrategy System.ValueType::GetHashCodeStrategy(System.Runtime.CompilerServices.MethodTable*,System.Runtime.CompilerServices.ObjectHandleOnStack,System.UInt32&amp;,System.UInt32&amp;,System.Runtime.CompilerServices.MethodTable*&amp;)" e="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.RuntimeMethodHandle" e="Method:System.Int32 System.RuntimeMethodHandle::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Byte" e="Method:System.Int32 System.Byte::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Int64" e="Method:System.Int32 System.Int64::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Method:System.Int32 System.UInt16::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Method:System.Int32 System.UInt32::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContext" e="Method:System.Int32 System.Runtime.Serialization.StreamingContext::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCodeHelper(System.Runtime.CompilerServices.MethodTable*)" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCodeHelper(System.Runtime.CompilerServices.MethodTable*)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCode(System.Runtime.CompilerServices.MethodTable*)" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::CanCompareBitsOrUseFastGetHashCode(System.Runtime.CompilerServices.MethodTable*)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.RuntimeMethodHandle" e="Method:System.Boolean System.RuntimeMethodHandle::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Byte" e="Method:System.Boolean System.Byte::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Int64" e="Method:System.Boolean System.Int64::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.UInt16" e="Method:System.Boolean System.UInt16::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.UInt32" e="Method:System.Boolean System.UInt32::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Runtime.Serialization.StreamingContext" e="Method:System.Boolean System.Runtime.Serialization.StreamingContext::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|56_0(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|56_0(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|55_0(System.RuntimeType,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.String System.Enum::&lt;ToString&gt;g__HandleRareTypes|55_0(System.RuntimeType,System.Byte&amp;)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::&lt;TryParse&gt;g__TryParseRareTypes|41_0(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Int64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.Enum::&lt;TryParse&gt;g__TryParseRareTypes|41_0(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Enum::&lt;TryParse&gt;g__TryParseRareTypes|41_0(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.SpanDebugView`1:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Field:T[] System.SpanDebugView`1::_array" />
	<edge mark="1" b="Field:T[] System.SpanDebugView`1::_array" e="TypeDef:System.SpanDebugView`1:System.Private.CoreLib.dll" />
	<edge b="Field:T[] System.SpanDebugView`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Void System.SpanDebugView`1::.ctor(System.Span`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Void System.SpanDebugView`1::.ctor(System.ReadOnlySpan`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:T[] System.SpanDebugView`1::get_Items()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Property:T[] System.SpanDebugView`1::Items()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:T[] System.SpanDebugView`1::get_Items()" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Field:T&amp; System.ReadOnlySpan`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Int32 System.ReadOnlySpan`1::_length" e="TypeDef:System.ReadOnlySpan`1" />
	<edge mark="1" b="Field:System.Int32 System.ReadOnlySpan`1::_length" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Boolean System.ReadOnlySpan`1::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Int32 System.ReadOnlySpan`1::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.String System.ReadOnlySpan`1::ToString()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Field:T&amp; System.ReadOnlySpan`1::_reference" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Field:System.Int32 System.ReadOnlySpan`1::_length" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Boolean System.ReadOnlySpan`1::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.Int32 System.ReadOnlySpan`1::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1" e="Method:System.String System.ReadOnlySpan`1::ToString()" />
	<edge b="Method:T[] System.ReadOnlySpan`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::Slice(System.Int32,System.Int32)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::Slice(System.Int32)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge mark="1" b="Method:System.String System.ReadOnlySpan`1::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.ReadOnlySpan`1::ToString()" e="TypeDef:System.String" />
	<edge b="Method:System.Boolean System.ReadOnlySpan`1::op_Equality(System.ReadOnlySpan`1&lt;T&gt;,System.ReadOnlySpan`1&lt;T&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge b="Method:System.Boolean System.ReadOnlySpan`1::op_Equality(System.ReadOnlySpan`1&lt;T&gt;,System.ReadOnlySpan`1&lt;T&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Boolean System.ReadOnlySpan`1::op_Equality(System.ReadOnlySpan`1&lt;T&gt;,System.ReadOnlySpan`1&lt;T&gt;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.ReadOnlySpan`1::TryCopyTo(System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.ReadOnlySpan`1::TryCopyTo(System.Span`1&lt;T&gt;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Field:T[] System.SpanDebugView`1::_array" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Void System.SpanDebugView`1::.ctor(System.Span`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Void System.SpanDebugView`1::.ctor(System.ReadOnlySpan`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:T[] System.SpanDebugView`1::get_Items()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Property:T[] System.SpanDebugView`1::Items()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:T[] System.SpanDebugView`1::get_Items()" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:T&amp; System.Span`1::_reference" e="TypeDef:System.Span`1" />
	<edge b="Field:T&amp; System.Span`1::_reference" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Int32 System.Span`1::_length" e="TypeDef:System.Span`1" />
	<edge mark="1" b="Field:System.Int32 System.Span`1::_length" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Boolean System.Span`1::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Int32 System.Span`1::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.String System.Span`1::ToString()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Field:T&amp; System.Span`1::_reference" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Field:System.Int32 System.Span`1::_length" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Boolean System.Span`1::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.Int32 System.Span`1::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Span`1" e="Method:System.String System.Span`1::ToString()" />
	<edge b="Method:T[] System.Span`1::ToArray()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::Slice(System.Int32,System.Int32)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;T&gt;" e="TypeDef:System.Span`1" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::Slice(System.Int32)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;T&gt;" e="TypeDef:System.Span`1" />
	<edge mark="1" b="Method:System.String System.Span`1::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Span`1::ToString()" e="TypeDef:System.String" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.Span`1::op_Implicit(System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.Span`1::op_Implicit(System.Span`1&lt;T&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Method:System.Boolean System.Span`1::op_Equality(System.Span`1&lt;T&gt;,System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge b="Method:System.Boolean System.Span`1::op_Equality(System.Span`1&lt;T&gt;,System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Span`1::op_Equality(System.Span`1&lt;T&gt;,System.Span`1&lt;T&gt;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Span`1::TryCopyTo(System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Span`1::TryCopyTo(System.Span`1&lt;T&gt;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Void System.Span`1::CopyTo(System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void System.Span`1::CopyTo(System.Span`1&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Span`1::Fill(T)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Span`1::Clear()" e="TypeDef:System.Void" />
	<edge b="Method:T&amp; System.Span`1::GetPinnableReference()" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1/Enumerator&lt;T&gt; System.Span`1::GetEnumerator()" e="TypeSpec:System.Span`1/Enumerator&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1/Enumerator&lt;T&gt;" e="TypeDef:System.Span`1/Enumerator" />
	<edge mark="1" b="TypeDef:System.Span`1/Enumerator" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Span`1/Enumerator" e="Field:System.Span`1&lt;T&gt; System.Span`1/Enumerator::_span" />
	<edge mark="1" b="Field:System.Span`1&lt;T&gt; System.Span`1/Enumerator::_span" e="TypeDef:System.Span`1/Enumerator" />
	<edge b="Field:System.Span`1&lt;T&gt; System.Span`1/Enumerator::_span" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;T&gt;" e="TypeDef:System.Span`1" />
	<edge mark="1" b="TypeDef:System.Span`1/Enumerator" e="Field:System.Int32 System.Span`1/Enumerator::_index" />
	<edge mark="1" b="Field:System.Int32 System.Span`1/Enumerator::_index" e="TypeDef:System.Span`1/Enumerator" />
	<edge mark="1" b="Field:System.Int32 System.Span`1/Enumerator::_index" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Span`1&lt;T&gt; System.Span`1::get_Empty()" e="Property:System.Span`1&lt;T&gt; System.Span`1::Empty()" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::get_Empty()" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;T&gt;" e="TypeDef:System.Span`1" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(System.ArraySegment`1&lt;T&gt;)" e="TypeSpec:System.ArraySegment`1&lt;T&gt;" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(System.ArraySegment`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;T&gt;" e="TypeDef:System.Span`1" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Field:System.Collections.Generic.ICollection`1&lt;T&gt; System.Collections.Generic.ICollectionDebugView`1::_collection" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Void System.Collections.Generic.ICollectionDebugView`1::.ctor(System.Collections.Generic.ICollection`1&lt;T&gt;)" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Property:T[] System.Collections.Generic.ICollectionDebugView`1::Items()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:T[] System.Collections.Generic.ICollectionDebugView`1::get_Items()" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IList`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IList`1" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.ICollection`1" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IEnumerable`1" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IReadOnlyList`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IReadOnlyList`1" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IReadOnlyCollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IReadOnlyCollection`1" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Int32 System.ArraySegment`1::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Boolean System.ArraySegment`1::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Field:T[] System.ArraySegment`1::_array" />
	<edge mark="1" b="Field:T[] System.ArraySegment`1::_array" e="TypeDef:System.ArraySegment`1" />
	<edge b="Field:T[] System.ArraySegment`1::_array" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Field:System.Int32 System.ArraySegment`1::_offset" />
	<edge mark="1" b="Field:System.Int32 System.ArraySegment`1::_offset" e="TypeDef:System.ArraySegment`1" />
	<edge mark="1" b="Field:System.Int32 System.ArraySegment`1::_offset" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Field:System.Int32 System.ArraySegment`1::_count" />
	<edge mark="1" b="Field:System.Int32 System.ArraySegment`1::_count" e="TypeDef:System.ArraySegment`1" />
	<edge mark="1" b="Field:System.Int32 System.ArraySegment`1::_count" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Int32 System.ArraySegment`1::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ArraySegment`1" e="Method:System.Boolean System.ArraySegment`1::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ArraySegment`1::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ArraySegment`1::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.ArraySegment`1::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ArraySegment`1::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.ArraySegment`1::get_Count()" e="Property:System.Int32 System.ArraySegment`1::Count()" />
	<edge mark="1" b="Method:System.Int32 System.ArraySegment`1::get_Count()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Span`1&lt;T&gt; System.Span`1::op_Implicit(T[])" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;T&gt;" e="TypeDef:System.Span`1" />
	<edge mark="1" b="Method:System.Int32 System.Span`1::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Span`1::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Span`1::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Span`1::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Span`1::op_Inequality(System.Span`1&lt;T&gt;,System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge b="Method:System.Boolean System.Span`1::op_Inequality(System.Span`1&lt;T&gt;,System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Span`1::op_Inequality(System.Span`1&lt;T&gt;,System.Span`1&lt;T&gt;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Span`1::get_IsEmpty()" e="Property:System.Boolean System.Span`1::IsEmpty()" />
	<edge mark="1" b="Method:System.Boolean System.Span`1::get_IsEmpty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.Span`1::get_Length()" e="Property:System.Int32 System.Span`1::Length()" />
	<edge mark="1" b="Method:System.Int32 System.Span`1::get_Length()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="Property:T&amp; System.Span`1::Item(System.Int32)" />
	<edge b="Method:T&amp; System.Span`1::get_Item(System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeDef:System.Span`1" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Span`1::.ctor(T&amp;,System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeDef:System.Span`1" />
	<edge b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Span`1::.ctor(T&amp;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Span`1::.ctor(System.Void*,System.Int32)" e="TypeDef:System.Span`1" />
	<edge b="Method:System.Void System.Span`1::.ctor(System.Void*,System.Int32)" e="TypeSpec:System.Void*" />
	<edge mark="1" b="Method:System.Void System.Span`1::.ctor(System.Void*,System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeDef:System.Span`1" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Span`1::.ctor(T[],System.Int32,System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeDef:System.Span`1" />
	<edge b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Span`1::.ctor(T[])" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Module:System.Private.CoreLib.dll" />
	<edge b="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2" e="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Int32 System.Runtime.InteropServices.UnmanagedType::value__" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.InteropServices.UnmanagedType::value__" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.InteropServices.UnmanagedType::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Bool" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Bool" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Bool" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I1" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I1" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I1" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U1" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U1" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U1" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I2" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I2" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I2" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U2" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U2" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U2" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I4" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I4" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I4" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U4" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U4" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U4" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I8" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I8" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::I8" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U8" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U8" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::U8" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::R4" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::R4" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::R4" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::R8" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::R8" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::R8" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Currency" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Currency" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Currency" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::BStr" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::BStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::BStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPStr" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPWStr" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPWStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPWStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPTStr" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPTStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPTStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::ByValTStr" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::ByValTStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::ByValTStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::IUnknown" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::IUnknown" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::IUnknown" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::IDispatch" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::IDispatch" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::IDispatch" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Struct" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Struct" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Struct" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Interface" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Interface" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Interface" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::SafeArray" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::SafeArray" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::SafeArray" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::ByValArray" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::ByValArray" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::ByValArray" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::SysInt" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::SysInt" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::SysInt" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::SysUInt" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::SysUInt" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::SysUInt" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::VBByRefStr" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::VBByRefStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::VBByRefStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::AnsiBStr" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::AnsiBStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::AnsiBStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::TBStr" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::TBStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::TBStr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::VariantBool" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::VariantBool" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::VariantBool" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::FunctionPtr" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::FunctionPtr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::FunctionPtr" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::AsAny" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::AsAny" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::AsAny" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPArray" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPArray" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPArray" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPStruct" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPStruct" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPStruct" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::CustomMarshaler" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::CustomMarshaler" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::CustomMarshaler" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Error" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Error" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::Error" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::IInspectable" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::IInspectable" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::IInspectable" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::HString" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::HString" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::HString" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.UnmanagedType" e="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPUTF8Str" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPUTF8Str" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.UnmanagedType System.Runtime.InteropServices.UnmanagedType::LPUTF8Str" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.IsUnmanagedAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.IsUnmanagedAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.IsUnmanagedAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.IsUnmanagedAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.ContiguousCollectionMarshallerAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.InteropServices.Marshalling.ContiguousCollectionMarshallerAttribute::.ctor()" e="TypeDef:System.Runtime.InteropServices.Marshalling.ContiguousCollectionMarshallerAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.Marshalling.ContiguousCollectionMarshallerAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge b="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn" e="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn" e="Field:System.Span`1&lt;T&gt; System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_managedArray" />
	<edge mark="1" b="Field:System.Span`1&lt;T&gt; System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_managedArray" e="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn" />
	<edge b="Field:System.Span`1&lt;T&gt; System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_managedArray" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;T&gt;" e="TypeDef:System.Span`1" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn" e="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" />
	<edge mark="1" b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn" e="Field:System.Span`1&lt;TUnmanagedElement&gt; System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_span" />
	<edge mark="1" b="Field:System.Span`1&lt;TUnmanagedElement&gt; System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_span" e="TypeDef:System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn" />
	<edge b="Field:System.Span`1&lt;TUnmanagedElement&gt; System.Runtime.InteropServices.Marshalling.SpanMarshaller`2/ManagedToUnmanagedIn::_span" e="TypeSpec:System.Span`1&lt;TUnmanagedElement&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;TUnmanagedElement&gt;" e="TypeDef:System.Span`1" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.CustomMarshallerAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.InteropServices.Marshalling.CustomMarshallerAttribute::.ctor(System.Type,System.Runtime.InteropServices.Marshalling.MarshalMode,System.Type)" e="TypeDef:System.Runtime.InteropServices.Marshalling.CustomMarshallerAttribute" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.Marshalling.CustomMarshallerAttribute::.ctor(System.Type,System.Runtime.InteropServices.Marshalling.MarshalMode,System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Int32 System.Runtime.InteropServices.Marshalling.MarshalMode::value__" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.InteropServices.Marshalling.MarshalMode::value__" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.InteropServices.Marshalling.MarshalMode::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::Default" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::Default" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::Default" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ManagedToUnmanagedIn" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ManagedToUnmanagedIn" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ManagedToUnmanagedIn" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ManagedToUnmanagedRef" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ManagedToUnmanagedRef" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ManagedToUnmanagedRef" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ManagedToUnmanagedOut" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ManagedToUnmanagedOut" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ManagedToUnmanagedOut" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::UnmanagedToManagedIn" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::UnmanagedToManagedIn" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::UnmanagedToManagedIn" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::UnmanagedToManagedRef" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::UnmanagedToManagedRef" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::UnmanagedToManagedRef" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::UnmanagedToManagedOut" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::UnmanagedToManagedOut" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::UnmanagedToManagedOut" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ElementIn" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ElementIn" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ElementIn" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ElementRef" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ElementRef" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ElementRef" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" e="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ElementOut" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ElementOut" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.Marshalling.MarshalMode System.Runtime.InteropServices.Marshalling.MarshalMode::ElementOut" e="TypeDef:System.Runtime.InteropServices.Marshalling.MarshalMode" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::CopyTo(System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void System.ReadOnlySpan`1::CopyTo(System.Span`1&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.InAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::GetPinnableReference()" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1/Enumerator&lt;T&gt; System.ReadOnlySpan`1::GetEnumerator()" e="TypeSpec:System.ReadOnlySpan`1/Enumerator&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1/Enumerator&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1/Enumerator" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1/Enumerator" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1/Enumerator" e="Field:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1/Enumerator::_span" />
	<edge mark="1" b="Field:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1/Enumerator::_span" e="TypeDef:System.ReadOnlySpan`1/Enumerator" />
	<edge b="Field:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1/Enumerator::_span" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge mark="1" b="TypeDef:System.ReadOnlySpan`1/Enumerator" e="Field:System.Int32 System.ReadOnlySpan`1/Enumerator::_index" />
	<edge mark="1" b="Field:System.Int32 System.ReadOnlySpan`1/Enumerator::_index" e="TypeDef:System.ReadOnlySpan`1/Enumerator" />
	<edge mark="1" b="Field:System.Int32 System.ReadOnlySpan`1/Enumerator::_index" e="TypeDef:System.Int32" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::CastUp(System.ReadOnlySpan`1&lt;TDerived&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;TDerived&gt;" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::CastUp(System.ReadOnlySpan`1&lt;TDerived&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge mark="1" b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::get_Empty()" e="Property:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::Empty()" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::get_Empty()" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(System.ArraySegment`1&lt;T&gt;)" e="TypeSpec:System.ArraySegment`1&lt;T&gt;" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(System.ArraySegment`1&lt;T&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.ReadOnlySpan`1&lt;T&gt; System.ReadOnlySpan`1::op_Implicit(T[])" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge mark="1" b="Method:System.Int32 System.ReadOnlySpan`1::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ReadOnlySpan`1::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.ReadOnlySpan`1::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ReadOnlySpan`1::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.ReadOnlySpan`1::op_Inequality(System.ReadOnlySpan`1&lt;T&gt;,System.ReadOnlySpan`1&lt;T&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge b="Method:System.Boolean System.ReadOnlySpan`1::op_Inequality(System.ReadOnlySpan`1&lt;T&gt;,System.ReadOnlySpan`1&lt;T&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Boolean System.ReadOnlySpan`1::op_Inequality(System.ReadOnlySpan`1&lt;T&gt;,System.ReadOnlySpan`1&lt;T&gt;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.ReadOnlySpan`1::get_IsEmpty()" e="Property:System.Boolean System.ReadOnlySpan`1::IsEmpty()" />
	<edge mark="1" b="Method:System.Boolean System.ReadOnlySpan`1::get_IsEmpty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.ReadOnlySpan`1::get_Length()" e="Property:System.Int32 System.ReadOnlySpan`1::Length()" />
	<edge mark="1" b="Method:System.Int32 System.ReadOnlySpan`1::get_Length()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="Property:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::Item(System.Int32)" />
	<edge mark="1" b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeDef:System.Runtime.InteropServices.InAttribute" />
	<edge b="Method:T&amp; modreq(System.Runtime.InteropServices.InAttribute) System.ReadOnlySpan`1::get_Item(System.Int32)" e="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" />
	<edge b="TypeSpec:T&amp; modreq(System.Runtime.InteropServices.InAttribute):System.Private.CoreLib.dll" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;,System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeSpec:T&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.ReadOnlySpan`1::.ctor(T&amp;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.RequiresLocationAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.RequiresLocationAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.RequiresLocationAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.RequiresLocationAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(System.Void*,System.Int32)" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(System.Void*,System.Int32)" e="TypeSpec:System.Void*" />
	<edge mark="1" b="Method:System.Void System.ReadOnlySpan`1::.ctor(System.Void*,System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[],System.Int32,System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeDef:System.ReadOnlySpan`1" />
	<edge b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.ReadOnlySpan`1::.ctor(T[])" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/UnmanagedToManagedOut" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge b="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2" e="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge b="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/UnmanagedToManagedOut" e="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge b="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn" e="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn" e="Field:System.ReadOnlySpan`1&lt;T&gt; System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_managedArray" />
	<edge mark="1" b="Field:System.ReadOnlySpan`1&lt;T&gt; System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_managedArray" e="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn" />
	<edge b="Field:System.ReadOnlySpan`1&lt;T&gt; System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_managedArray" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" e="TypeDef:System.ReadOnlySpan`1" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn" e="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" />
	<edge mark="1" b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn" />
	<edge b="Field:TUnmanagedElement* System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_allocatedMemory" e="TypeSpec:TUnmanagedElement*:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn" e="Field:System.Span`1&lt;TUnmanagedElement&gt; System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_span" />
	<edge mark="1" b="Field:System.Span`1&lt;TUnmanagedElement&gt; System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_span" e="TypeDef:System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn" />
	<edge b="Field:System.Span`1&lt;TUnmanagedElement&gt; System.Runtime.InteropServices.Marshalling.ReadOnlySpanMarshaller`2/ManagedToUnmanagedIn::_span" e="TypeSpec:System.Span`1&lt;TUnmanagedElement&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;TUnmanagedElement&gt;" e="TypeDef:System.Span`1" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.Marshalling.NativeMarshallingAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.InteropServices.Marshalling.NativeMarshallingAttribute::.ctor(System.Type)" e="TypeDef:System.Runtime.InteropServices.Marshalling.NativeMarshallingAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.Marshalling.NativeMarshallingAttribute::.ctor(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:T[] System.SpanDebugView`1::get_Items()" e="Property:T[] System.SpanDebugView`1::Items()" />
	<edge b="Method:T[] System.SpanDebugView`1::get_Items()" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.SpanDebugView`1::.ctor(System.ReadOnlySpan`1&lt;T&gt;)" e="TypeDef:System.SpanDebugView`1:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.SpanDebugView`1::.ctor(System.ReadOnlySpan`1&lt;T&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void System.SpanDebugView`1::.ctor(System.ReadOnlySpan`1&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.SpanDebugView`1::.ctor(System.Span`1&lt;T&gt;)" e="TypeDef:System.SpanDebugView`1:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.SpanDebugView`1::.ctor(System.Span`1&lt;T&gt;)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void System.SpanDebugView`1::.ctor(System.Span`1&lt;T&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::&lt;GetEnumInfo&gt;g__InitializeEnumInfo|7_0(System.RuntimeType,System.Boolean)" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeDef:System.Numerics.INumber`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::&lt;GetEnumInfo&gt;g__InitializeEnumInfo|7_0(System.RuntimeType,System.Boolean)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::&lt;GetEnumInfo&gt;g__InitializeEnumInfo|7_0(System.RuntimeType,System.Boolean)" e="TypeSpec:System.Enum/EnumInfo`1&lt;TStorage&gt;:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Enum/EnumInfo`1&lt;TStorage&gt;:System.Private.CoreLib.dll" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge b="TypeDef:System.Numerics.INumber`1" e="TypeSpec:System.Numerics.INumber`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;TSelf&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeDef:System.Enum" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Enum" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Enum" e="Method:System.String System.Enum::ToString()" />
	<edge b="Method:System.Void System.Enum::.ctor()" e="TypeDef:System.Enum" />
	<edge mark="1" b="Method:System.Void System.Enum::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Enum::AssertValidGenerics()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.ConditionalAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.ConditionalAttribute::.ctor(System.String)" e="TypeDef:System.Diagnostics.ConditionalAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.ConditionalAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge b="Method:System.Boolean System.Enum::AreSorted(TStorage[])" e="TypeSpec:System.IComparable`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;TStorage&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeDef:System.IComparable`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Enum::AreSorted(TStorage[])" e="TypeDef:System.ValueType" />
	<edge b="Method:System.Boolean System.Enum::AreSorted(TStorage[])" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Enum::AreSorted(TStorage[])" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" e="TypeDef:System.ValueType" />
	<edge b="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Enum::AreSequentialFromZero(TStorage[])" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.UInt64" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Object System.Enum::ToObject(System.Type,System.UInt64)" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.UInt64&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.UInt64&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeDef:System.UInt64" e="Method:System.Boolean System.UInt64::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.UInt64" e="Method:System.Int32 System.UInt64::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.UInt64" e="Method:System.String System.UInt64::ToString()" />
	<edge mark="1" b="TypeDef:System.UInt64" e="Field:System.UInt64 System.UInt64::m_value" />
	<edge mark="1" b="Field:System.UInt64 System.UInt64::m_value" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Field:System.UInt64 System.UInt64::m_value" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeDef:System.UInt64" e="Method:System.Boolean System.UInt64::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.UInt64" e="Method:System.Int32 System.UInt64::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.UInt64" e="Method:System.String System.UInt64::ToString()" />
	<edge mark="1" b="Method:System.String System.UInt64::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.UInt64::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Object System.Enum::ToObject(System.Type,System.Int64)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Enum::ToObject(System.Type,System.UInt32)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Enum::ToObject(System.Type,System.UInt16)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Enum::ToObject(System.Type,System.Byte)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Enum::ToObject(System.Type,System.Int32)" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:System.Int16" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Object System.Enum::ToObject(System.Type,System.Int16)" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Int16&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Int16&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeDef:System.Int16" e="Method:System.Boolean System.Int16::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Int16" e="Method:System.Int32 System.Int16::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Int16" e="Method:System.String System.Int16::ToString()" />
	<edge mark="1" b="TypeDef:System.Int16" e="Field:System.Int16 System.Int16::m_value" />
	<edge mark="1" b="Field:System.Int16 System.Int16::m_value" e="TypeDef:System.Int16" />
	<edge mark="1" b="Field:System.Int16 System.Int16::m_value" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeDef:System.Int16" e="Method:System.Boolean System.Int16::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Int16" e="Method:System.Int32 System.Int16::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Int16" e="Method:System.String System.Int16::ToString()" />
	<edge mark="1" b="Method:System.String System.Int16::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Int16::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Int16::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Int16::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Int16::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Int16::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.SByte" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Object System.Enum::ToObject(System.Type,System.SByte)" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.SByte&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.SByte&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeDef:System.SByte" e="Method:System.Boolean System.SByte::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.SByte" e="Method:System.Int32 System.SByte::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.SByte" e="Method:System.String System.SByte::ToString()" />
	<edge mark="1" b="TypeDef:System.SByte" e="Field:System.SByte System.SByte::m_value" />
	<edge mark="1" b="Field:System.SByte System.SByte::m_value" e="TypeDef:System.SByte" />
	<edge mark="1" b="Field:System.SByte System.SByte::m_value" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeDef:System.SByte" e="Method:System.Boolean System.SByte::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.SByte" e="Method:System.Int32 System.SByte::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.SByte" e="Method:System.String System.SByte::ToString()" />
	<edge mark="1" b="Method:System.String System.SByte::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.SByte::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.SByte::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.SByte::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.SByte::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.SByte::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Object System.Enum::ToObject(System.Type,System.Object)" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:System.IFormatProvider" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Enum::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Enum::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.DateTime&gt;" e="TypeDef:System.DateTime" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.DateTime&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.DateTime&gt;" e="TypeDef:System.DateTime" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.DateTime&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.Boolean System.DateTime::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.Int32 System.DateTime::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.String System.DateTime::ToString()" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.Boolean System.DateTime::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.Int32 System.DateTime::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.DateTime" e="Method:System.String System.DateTime::ToString()" />
	<edge mark="1" b="Method:System.String System.DateTime::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.DateTime::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.DateTime::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.DateTime::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Enum::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Decimal&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Decimal&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Boolean System.Decimal::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Int32 System.Decimal::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.String System.Decimal::ToString()" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Field:System.Int32 System.Decimal::_flags" />
	<edge mark="1" b="Field:System.Int32 System.Decimal::_flags" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Field:System.Int32 System.Decimal::_flags" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Field:System.UInt32 System.Decimal::_hi32" />
	<edge mark="1" b="Field:System.UInt32 System.Decimal::_hi32" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Field:System.UInt32 System.Decimal::_hi32" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Field:System.UInt64 System.Decimal::_lo64" />
	<edge mark="1" b="Field:System.UInt64 System.Decimal::_lo64" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Field:System.UInt64 System.Decimal::_lo64" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Boolean System.Decimal::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.Int32 System.Decimal::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Decimal" e="Method:System.String System.Decimal::ToString()" />
	<edge mark="1" b="Method:System.String System.Decimal::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Decimal::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Enum::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeDef:System.Double" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Double&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Double&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeDef:System.Double" e="Method:System.Boolean System.Double::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Double" e="Method:System.Int32 System.Double::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Double" e="Method:System.String System.Double::ToString()" />
	<edge mark="1" b="TypeDef:System.Double" e="Field:System.Double System.Double::m_value" />
	<edge mark="1" b="Field:System.Double System.Double::m_value" e="TypeDef:System.Double" />
	<edge mark="1" b="Field:System.Double System.Double::m_value" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeDef:System.Double" e="Method:System.Boolean System.Double::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Double" e="Method:System.Int32 System.Double::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Double" e="Method:System.String System.Double::ToString()" />
	<edge mark="1" b="Method:System.String System.Double::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Double::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Double::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Double::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Double::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Double::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Enum::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeDef:System.Single" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Single&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Single&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeDef:System.Single" e="Method:System.Boolean System.Single::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Single" e="Method:System.Int32 System.Single::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Single" e="Method:System.String System.Single::ToString()" />
	<edge mark="1" b="TypeDef:System.Single" e="Field:System.Single System.Single::m_value" />
	<edge mark="1" b="Field:System.Single System.Single::m_value" e="TypeDef:System.Single" />
	<edge mark="1" b="Field:System.Single System.Single::m_value" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeDef:System.Single" e="Method:System.Boolean System.Single::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Single" e="Method:System.Int32 System.Single::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Single" e="Method:System.String System.Single::ToString()" />
	<edge mark="1" b="Method:System.String System.Single::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Single::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Single::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Single::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Single::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Single::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Enum::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Enum::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Enum::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Enum::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Enum::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Enum::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Enum::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Enum::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Enum::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Enum::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.TypeCode System.Enum::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.Int32 System.TypeCode::value__" />
	<edge mark="1" b="Field:System.Int32 System.TypeCode::value__" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.Int32 System.TypeCode::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Empty" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Empty" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Empty" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Object" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Object" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Object" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::DBNull" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::DBNull" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::DBNull" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Boolean" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Boolean" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Boolean" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Char" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Char" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Char" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::SByte" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::SByte" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::SByte" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Byte" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Byte" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Byte" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Int16" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Int16" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Int16" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::UInt16" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::UInt16" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::UInt16" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Int32" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Int32" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Int32" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::UInt32" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::UInt32" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::UInt32" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Int64" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Int64" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Int64" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::UInt64" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::UInt64" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::UInt64" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Single" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Single" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Single" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Double" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Double" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Double" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::Decimal" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Decimal" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::Decimal" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::DateTime" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::DateTime" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::DateTime" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeDef:System.TypeCode" e="Field:System.TypeCode System.TypeCode::String" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::String" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Field:System.TypeCode System.TypeCode::String" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.InvalidOperationException System.Enum::CreateUnknownEnumTypeException()" e="TypeDef:System.InvalidOperationException" />
	<edge mark="1" b="TypeDef:System.InvalidOperationException" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.FormatException System.Enum::CreateInvalidFormatSpecifierException()" e="TypeDef:System.FormatException" />
	<edge mark="1" b="TypeDef:System.FormatException" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Enum::ThrowInvalidEmptyParseArgument()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Enum::ThrowInvalidRuntimeType(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.RuntimeType System.Enum::ValidateRuntimeType(System.Type)" e="TypeDef:System.RuntimeType:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Enum::WriteMultipleFoundFlagsNames(System.String[],System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Span`1&lt;System.Char&gt;)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void System.Enum::WriteMultipleFoundFlagsNames(System.String[],System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Span`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Int32&gt;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Void System.Enum::WriteMultipleFoundFlagsNames(System.String[],System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Span`1&lt;System.Char&gt;)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Void System.Enum::WriteMultipleFoundFlagsNames(System.String[],System.ReadOnlySpan`1&lt;System.Int32&gt;,System.Span`1&lt;System.Char&gt;)" e="TypeDef:System.Void" />
	<edge b="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge b="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="TypeDef:System.Numerics.IBitwiseOperators`3" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" e="TypeSpec:System.String[]" />
	<edge b="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge b="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Int32&gt;" />
	<edge b="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryFindFlagsNames(TStorage,System.String[],TStorage[],System.Int32,System.Span`1&lt;System.Int32&gt;,System.Int32&amp;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="TypeDef:System.Numerics.IBitwiseOperators`3" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TSelf,TOther,TResult&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TSelf,TOther,TResult&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge b="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" e="TypeSpec:System.String[]" />
	<edge b="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.String System.Enum::GetSingleFlagsEnumNameForValue(TStorage,System.String[],TStorage[],System.Int32&amp;)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Enum::GetMultipleEnumsFlagsFormatResultLength(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge b="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" e="TypeSpec:System.Enum/EnumInfo`1&lt;TStorage&gt;:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" e="TypeSpec:System.Boolean&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryFormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.Boolean&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge b="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" e="TypeSpec:System.Enum/EnumInfo`1&lt;TStorage&gt;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.String System.Enum::FormatFlagNames(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" e="TypeDef:System.String" />
	<edge b="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.Numerics.INumber`1&lt;TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TUnderlying&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge b="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TUnderlying,TUnderlying,TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TUnderlying,TUnderlying,TUnderlying&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge b="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TUnderlying&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="TypeDef:System.Numerics.IMinMaxValue`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge b="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge b="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryFormatPrimitiveNonDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeDef:System.Boolean" />
	<edge b="TypeDef:System.Numerics.IMinMaxValue`1" e="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge b="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.INumber`1&lt;TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TUnderlying&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge b="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TUnderlying,TUnderlying,TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TUnderlying,TUnderlying,TUnderlying&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge b="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TUnderlying&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge b="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge b="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryFormatPrimitiveDefault(System.RuntimeType,TUnderlying,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::TryFormatUnconstrained(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Enum::TryFormatUnconstrained(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::TryFormatUnconstrained(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryFormatUnconstrained(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.CodeAnalysis.StringSyntaxAttribute::.ctor(System.String)" e="TypeDef:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.StringSyntaxAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeDef:System.Enum" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryFormat(TEnum,System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Enum::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.String System.Enum::Format(System.Type,System.Object,System.String)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryFormatNumberAsHex(System.Byte&amp;,System.Span`1&lt;System.Char&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.String System.Enum::FormatNumberAsHex(System.Byte&amp;)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.String System.Enum::FormatNumberAsHex(System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.String System.Enum::FormatNumberAsHex(System.Byte&amp;)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeSpec:System.Numerics.INumber`1&lt;TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TUnderlying&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge b="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TUnderlying,TUnderlying,TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TUnderlying,TUnderlying,TUnderlying&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge b="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TUnderlying&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge b="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge b="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeSpec:System.Numerics.INumber`1&lt;TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TUnderlying&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge b="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TUnderlying,TUnderlying,TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TUnderlying,TUnderlying,TUnderlying&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge b="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TUnderlying&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge b="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge b="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.String System.Enum::ToString(System.RuntimeType,System.Char,System.Byte&amp;)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" e="TypeSpec:System.Numerics.INumber`1&lt;TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TUnderlying&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge b="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TUnderlying,TUnderlying,TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TUnderlying,TUnderlying,TUnderlying&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge b="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.String System.Enum::ToStringInlined(System.RuntimeType,System.Byte&amp;)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" e="TypeSpec:System.Numerics.INumber`1&lt;TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TUnderlying&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge b="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TUnderlying,TUnderlying,TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TUnderlying,TUnderlying,TUnderlying&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge b="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.String System.Enum::ToString(System.RuntimeType,System.Byte&amp;)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Enum::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Enum::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Enum::ToString(System.String)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Enum::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Enum::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Enum::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Enum::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Enum::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Enum::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Enum::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Object System.Enum::GetValue()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.UInt64 System.Enum::ToUInt64(System.Object)" e="TypeDef:System.UInt64" />
	<edge b="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge b="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" e="TypeSpec:TStorage&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParseByName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TStorage&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeSpec:System.Numerics.INumber`1&lt;TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TUnderlying&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge b="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TUnderlying,TUnderlying,TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TUnderlying,TUnderlying,TUnderlying&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge b="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TUnderlying&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TUnderlying&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge b="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TStorage,TStorage,TStorage&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge b="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeSpec:TUnderlying&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParseRareTypeByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge b="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;TUnderlying&gt;:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;TUnderlying&gt;:System.Private.CoreLib.dll" e="TypeDef:System.IBinaryIntegerParseAndFormatInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.IBinaryIntegerParseAndFormatInfo`1:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge b="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;TStorage&gt;:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;TStorage&gt;:System.Private.CoreLib.dll" e="TypeDef:System.IBinaryIntegerParseAndFormatInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeSpec:TUnderlying&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParseByValueOrName(System.RuntimeType,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TUnderlying&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.Runtime.InteropServices.UnmanagedType" />
	<edge b="TypeDef:System.IBinaryIntegerParseAndFormatInfo`1:System.Private.CoreLib.dll" e="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" />
	<edge mark="1" b="TypeSpec:System.ValueType modreq(System.Runtime.InteropServices.UnmanagedType)" e="TypeDef:System.ValueType" />
	<edge b="TypeDef:System.IBinaryIntegerParseAndFormatInfo`1:System.Private.CoreLib.dll" e="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;TSelf&gt;:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;TSelf&gt;:System.Private.CoreLib.dll" e="TypeDef:System.IBinaryIntegerParseAndFormatInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;TSelf&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;TSelf&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" e="TypeSpec:TEnum&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,TEnum&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" e="TypeSpec:TEnum&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,TEnum&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" e="TypeSpec:TEnum&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParse(System.String,System.Boolean,TEnum&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" e="TypeSpec:TEnum&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,TEnum&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" e="TypeSpec:TEnum&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParse(System.String,TEnum&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Object&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Object&amp;)" e="TypeSpec:System.Object&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Boolean,System.Object&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Object&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Object&amp;)" e="TypeSpec:System.Object&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean,System.Object&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Boolean,System.Object&amp;)" e="TypeSpec:System.Object&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Boolean,System.Object&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object&amp;)" e="TypeSpec:System.Object&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Object&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Object&amp;)" e="TypeSpec:System.Object&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Enum::TryParse(System.Type,System.String,System.Object&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:TEnum System.Enum::Parse(System.String,System.Boolean)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:TEnum System.Enum::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:TEnum System.Enum::Parse(System.String)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;,System.Boolean)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Enum::Parse(System.Type,System.String,System.Boolean)" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Object System.Enum::Parse(System.Type,System.ReadOnlySpan`1&lt;System.Char&gt;)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Enum::Parse(System.Type,System.String)" e="TypeDef:System.Object" />
	<edge b="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" e="TypeSpec:System.IEquatable`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;TStorage&gt;" e="TypeDef:System.IEquatable`1" />
	<edge b="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" e="TypeSpec:System.IComparable`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;TStorage&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Int32 System.Enum::FindDefinedIndex(TStorage[],TStorage)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Enum::IsDefined(System.Type,System.Object)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Enum::IsDefinedPrimitive(System.RuntimeType,TStorage)" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="Method:System.Boolean System.Enum::IsDefinedPrimitive(System.RuntimeType,TStorage)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="Method:System.Boolean System.Enum::IsDefinedPrimitive(System.RuntimeType,TStorage)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Enum::IsDefined(TEnum)" e="TypeDef:System.Enum" />
	<edge mark="1" b="Method:System.Boolean System.Enum::IsDefined(TEnum)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="Method:System.Boolean System.Enum::IsDefined(TEnum)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Enum::HasFlag(System.Enum)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Array System.Enum::GetValuesAsUnderlyingTypeNoCopy(System.RuntimeType)" e="TypeDef:System.Array" />
	<edge mark="1" b="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.RuntimeType)" e="TypeDef:System.Array" />
	<edge mark="1" b="Method:System.Array System.Enum::GetValuesAsUnderlyingType(System.Type)" e="TypeDef:System.Array" />
	<edge mark="1" b="Method:System.Array System.Enum::GetValuesAsUnderlyingType()" e="TypeDef:System.Enum" />
	<edge mark="1" b="Method:System.Array System.Enum::GetValuesAsUnderlyingType()" e="TypeDef:System.ValueType" />
	<edge mark="1" b="Method:System.Array System.Enum::GetValuesAsUnderlyingType()" e="TypeDef:System.Array" />
	<edge mark="1" b="Method:System.Array System.Enum::GetValues(System.Type)" e="TypeDef:System.Array" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute::.ctor(System.String)" e="TypeDef:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:TEnum[] System.Enum::GetValues()" e="TypeDef:System.Enum" />
	<edge mark="1" b="Method:TEnum[] System.Enum::GetValues()" e="TypeDef:System.ValueType" />
	<edge b="Method:TEnum[] System.Enum::GetValues()" e="TypeSpec:TEnum[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Type System.Enum::GetUnderlyingType(System.Type)" e="TypeDef:System.Type" />
	<edge b="Method:System.String[] System.Enum::GetNamesNoCopy(System.RuntimeType)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge b="Method:System.String[] System.Enum::GetNames(System.Type)" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String[] System.Enum::GetNames()" e="TypeDef:System.Enum" />
	<edge mark="1" b="Method:System.String[] System.Enum::GetNames()" e="TypeDef:System.ValueType" />
	<edge b="Method:System.String[] System.Enum::GetNames()" e="TypeSpec:System.String[]" />
	<edge mark="1" b="TypeSpec:System.String[]" e="TypeDef:System.String" />
	<edge b="Method:System.String System.Enum::GetNameInlined(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="Method:System.String System.Enum::GetNameInlined(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.String System.Enum::GetNameInlined(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" e="TypeSpec:System.Enum/EnumInfo`1&lt;TStorage&gt;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.String System.Enum::GetNameInlined(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" e="TypeDef:System.String" />
	<edge b="Method:System.String System.Enum::GetName(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="Method:System.String System.Enum::GetName(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.String System.Enum::GetName(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" e="TypeSpec:System.Enum/EnumInfo`1&lt;TStorage&gt;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.String System.Enum::GetName(System.Enum/EnumInfo`1&lt;TStorage&gt;,TStorage)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Enum::GetName(System.RuntimeType,System.UInt64)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Enum::GetName(System.Type,System.Object)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Enum::GetName(TEnum)" e="TypeDef:System.Enum" />
	<edge mark="1" b="Method:System.String System.Enum::GetName(TEnum)" e="TypeDef:System.ValueType" />
	<edge mark="1" b="Method:System.String System.Enum::GetName(TEnum)" e="TypeDef:System.String" />
	<edge b="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::GetEnumInfo(System.RuntimeType,System.Boolean)" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::GetEnumInfo(System.RuntimeType,System.Boolean)" e="TypeDef:System.ValueType" />
	<edge b="Method:System.Enum/EnumInfo`1&lt;TStorage&gt; System.Enum::GetEnumInfo(System.RuntimeType,System.Boolean)" e="TypeSpec:System.Enum/EnumInfo`1&lt;TStorage&gt;:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Enum/EnumInfo`1&lt;TStorage&gt;:System.Private.CoreLib.dll" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.RuntimeType System.Enum::InternalGetUnderlyingType(System.RuntimeType)" e="TypeDef:System.RuntimeType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType()" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Byte System.Reflection.CorElementType::value__" />
	<edge mark="1" b="Field:System.Byte System.Reflection.CorElementType::value__" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Byte System.Reflection.CorElementType::value__" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_END" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_END" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_END" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_VOID" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_VOID" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_VOID" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_BOOLEAN" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_BOOLEAN" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_BOOLEAN" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_CHAR" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_CHAR" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_CHAR" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_I1" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_I1" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_I1" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_U1" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_U1" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_U1" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_I2" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_I2" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_I2" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_U2" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_U2" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_U2" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_I4" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_I4" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_I4" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_U4" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_U4" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_U4" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_I8" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_I8" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_I8" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_U8" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_U8" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_U8" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_R4" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_R4" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_R4" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_R8" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_R8" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_R8" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_STRING" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_STRING" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_STRING" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_PTR" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_PTR" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_PTR" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_BYREF" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_BYREF" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_BYREF" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_VALUETYPE" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_VALUETYPE" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_VALUETYPE" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_CLASS" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_CLASS" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_CLASS" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_VAR" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_VAR" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_VAR" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_ARRAY" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_ARRAY" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_ARRAY" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_GENERICINST" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_GENERICINST" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_GENERICINST" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_TYPEDBYREF" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_TYPEDBYREF" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_TYPEDBYREF" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_I" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_I" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_I" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_U" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_U" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_U" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_FNPTR" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_FNPTR" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_FNPTR" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_OBJECT" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_OBJECT" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_OBJECT" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_SZARRAY" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_SZARRAY" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_SZARRAY" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_MVAR" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_MVAR" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_MVAR" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_CMOD_REQD" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_CMOD_REQD" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_CMOD_REQD" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_CMOD_OPT" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_CMOD_OPT" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_CMOD_OPT" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_INTERNAL" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_INTERNAL" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_INTERNAL" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_MAX" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_MAX" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_MAX" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_MODIFIER" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_MODIFIER" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_MODIFIER" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_SENTINEL" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_SENTINEL" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_SENTINEL" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" e="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_PINNED" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_PINNED" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Reflection.CorElementType System.Reflection.CorElementType::ELEMENT_TYPE_PINNED" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.RuntimeType)" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge b="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" e="TypeSpec:System.Runtime.CompilerServices.MethodTable*:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" e="TypeDef:System.Reflection.CorElementType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.Byte System.Reflection.CorElementType::value__" />
	<edge mark="1" b="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::ComponentSize" />
	<edge mark="1" b="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::Flags" />
	<edge mark="1" b="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.UInt32 System.Runtime.CompilerServices.MethodTable::BaseSize" />
	<edge mark="1" b="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.UInt16 System.Runtime.CompilerServices.MethodTable::InterfaceCount" />
	<edge mark="1" b="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.Runtime.CompilerServices.MethodTable* System.Runtime.CompilerServices.MethodTable::ParentMethodTable" />
	<edge mark="1" b="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.Runtime.CompilerServices.MethodTableAuxiliaryData* System.Runtime.CompilerServices.MethodTable::AuxiliaryData" />
	<edge mark="1" b="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.Void* System.Runtime.CompilerServices.MethodTable::ElementType" />
	<edge mark="1" b="Method:System.Reflection.CorElementType System.Enum::InternalGetCorElementType(System.Runtime.CompilerServices.MethodTable*)" e="Field:System.Runtime.CompilerServices.MethodTable** System.Runtime.CompilerServices.MethodTable::InterfaceMap" />
	<edge mark="1" b="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" e="Field:System.Object System.RuntimeType::m_keepalive" />
	<edge mark="1" b="Field:System.Object System.RuntimeType::m_keepalive" e="TypeDef:System.RuntimeType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Object System.RuntimeType::m_keepalive" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" e="Field:System.IntPtr System.RuntimeType::m_cache" />
	<edge mark="1" b="Field:System.IntPtr System.RuntimeType::m_cache" e="TypeDef:System.RuntimeType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.IntPtr System.RuntimeType::m_cache" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" e="Field:System.IntPtr System.RuntimeType::m_handle" />
	<edge mark="1" b="Field:System.IntPtr System.RuntimeType::m_handle" e="TypeDef:System.RuntimeType:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.IntPtr System.RuntimeType::m_handle" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Object System.Enum::InternalBoxEnum(System.RuntimeType,System.Int64)" e="Field:System.Int64 System.Int64::m_value" />
	<edge mark="1" b="TypeDef:Interop/BOOL:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" e="ModuleRef:QCall" />
	<edge mark="1" b="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" e="Field:System.Void* System.Runtime.CompilerServices.QCallTypeHandle::_ptr" />
	<edge mark="1" b="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" e="Field:System.IntPtr System.Runtime.CompilerServices.QCallTypeHandle::_handle" />
	<edge mark="1" b="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" e="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" />
	<edge mark="1" b="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" e="Field:System.Void* System.Runtime.CompilerServices.ObjectHandleOnStack::_ptr" />
	<edge mark="1" b="Method:System.Void System.Enum::GetEnumValuesAndNames(System.Runtime.CompilerServices.QCallTypeHandle,System.Runtime.CompilerServices.ObjectHandleOnStack,System.Runtime.CompilerServices.ObjectHandleOnStack,Interop/BOOL)" e="Field:System.Int32 Interop/BOOL::value__" />
	<edge mark="1" b="Field:System.Int32 Interop/BOOL::value__" e="TypeDef:Interop/BOOL:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:System.Int32 Interop/BOOL::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Interop:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:Interop/BOOL:System.Private.CoreLib.dll" e="Field:System.Int32 Interop/BOOL::value__" />
	<edge mark="1" b="TypeDef:Interop/BOOL:System.Private.CoreLib.dll" e="Field:Interop/BOOL Interop/BOOL::FALSE" />
	<edge mark="1" b="Field:Interop/BOOL Interop/BOOL::FALSE" e="TypeDef:Interop/BOOL:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:Interop/BOOL Interop/BOOL::FALSE" e="TypeDef:Interop/BOOL:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:Interop/BOOL:System.Private.CoreLib.dll" e="Field:Interop/BOOL Interop/BOOL::TRUE" />
	<edge mark="1" b="Field:Interop/BOOL Interop/BOOL::TRUE" e="TypeDef:Interop/BOOL:System.Private.CoreLib.dll" />
	<edge mark="1" b="Field:Interop/BOOL Interop/BOOL::TRUE" e="TypeDef:Interop/BOOL:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Enum::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" e="Method:System.Reflection.MethodInfo[] System.RuntimeType::GetMethods(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo[] System.Type::GetConstructors(System.Reflection.BindingFlags)" e="Method:System.Reflection.ConstructorInfo[] System.RuntimeType::GetConstructors(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo[] System.Type::GetProperties(System.Reflection.BindingFlags)" e="Method:System.Reflection.PropertyInfo[] System.RuntimeType::GetProperties(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.EventInfo[] System.Type::GetEvents(System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo[] System.RuntimeType::GetEvents(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo[] System.Type::GetFields(System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo[] System.RuntimeType::GetFields(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type[] System.Type::GetInterfaces()" e="Method:System.Type[] System.RuntimeType::GetInterfaces()" />
	<edge mark="1" b="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" e="Method:System.Type[] System.RuntimeType::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.MemberInfo[] System.Type::GetMembers(System.Reflection.BindingFlags)" e="Method:System.Reflection.MemberInfo[] System.RuntimeType::GetMembers(System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.Type::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.MethodInfo System.RuntimeType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo System.Type::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.ConstructorInfo System.RuntimeType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo System.Type::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.PropertyInfo System.RuntimeType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String,System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo System.RuntimeType::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.Type::GetField(System.String,System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo System.RuntimeType::GetField(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type System.Type::GetInterface(System.String,System.Boolean)" e="Method:System.Type System.RuntimeType::GetInterface(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" e="Method:System.Type System.RuntimeType::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.String System.Type::get_FullName()" e="Method:System.String System.RuntimeType::get_FullName()" />
	<edge mark="1" b="Method:System.String System.Type::get_AssemblyQualifiedName()" e="Method:System.String System.RuntimeType::get_AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.String System.Type::get_Namespace()" e="Method:System.String System.RuntimeType::get_Namespace()" />
	<edge mark="1" b="Method:System.Guid System.Type::get_GUID()" e="Method:System.Guid System.RuntimeType::get_GUID()" />
	<edge mark="1" b="Method:System.String System.Reflection.MemberInfo::get_Name()" e="Method:System.String System.RuntimeType::get_Name()" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.Type::get_Assembly()" e="Method:System.Reflection.Assembly System.RuntimeType::get_Assembly()" />
	<edge mark="1" b="Method:System.Type System.Type::get_BaseType()" e="Method:System.Type System.RuntimeType::get_BaseType()" />
	<edge mark="1" b="Method:System.Reflection.Module System.Type::get_Module()" e="Method:System.Reflection.Module System.RuntimeType::get_Module()" />
	<edge mark="1" b="Method:System.Type System.Type::get_UnderlyingSystemType()" e="Method:System.Type System.RuntimeType::get_UnderlyingSystemType()" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes System.Type::GetAttributeFlagsImpl()" e="Method:System.Reflection.TypeAttributes System.RuntimeType::GetAttributeFlagsImpl()" />
	<edge mark="1" b="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Boolean)" e="Method:System.Object[] System.RuntimeType::GetCustomAttributes(System.Boolean)" />
	<edge mark="1" b="Method:System.Object[] System.Reflection.MemberInfo::GetCustomAttributes(System.Type,System.Boolean)" e="Method:System.Object[] System.RuntimeType::GetCustomAttributes(System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Type System.Type::GetElementType()" e="Method:System.Type System.RuntimeType::GetElementType()" />
	<edge mark="1" b="Method:System.Boolean System.Type::HasElementTypeImpl()" e="Method:System.Boolean System.RuntimeType::HasElementTypeImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsArrayImpl()" e="Method:System.Boolean System.RuntimeType::IsArrayImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MemberInfo::IsDefined(System.Type,System.Boolean)" e="Method:System.Boolean System.RuntimeType::IsDefined(System.Type,System.Boolean)" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsByRefImpl()" e="Method:System.Boolean System.RuntimeType::IsByRefImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsPrimitiveImpl()" e="Method:System.Boolean System.RuntimeType::IsPrimitiveImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsPointerImpl()" e="Method:System.Boolean System.RuntimeType::IsPointerImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsCOMObjectImpl()" e="Method:System.Boolean System.RuntimeType::IsCOMObjectImpl()" />
	<edge mark="1" b="Method:System.Object System.Type::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="Method:System.Object System.RuntimeType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
	<edge b="Method:System.Object System.RuntimeType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.Object[]" />
	<edge b="Method:System.Object System.RuntimeType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="TypeDef:System.Reflection.ParameterModifier" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Object System.RuntimeType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.String[]" />
	<edge mark="1" b="Method:System.Object System.RuntimeType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="Method:System.Object System.Type::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
	<edge mark="1" b="Method:System.Object System.RuntimeType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:System.Reflection.ParameterModifier" e="Field:System.Boolean[] System.Reflection.ParameterModifier::_byRef" />
	<edge mark="1" b="Field:System.Boolean[] System.Reflection.ParameterModifier::_byRef" e="TypeDef:System.Reflection.ParameterModifier" />
	<edge b="Field:System.Boolean[] System.Reflection.ParameterModifier::_byRef" e="TypeSpec:System.Boolean[]" />
	<edge mark="1" b="TypeSpec:System.Boolean[]" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Object System.Type::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.Object[]" />
	<edge b="Method:System.Object System.Type::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge b="Method:System.Object System.Type::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeSpec:System.String[]" />
	<edge mark="1" b="Method:System.Object System.Type::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="Method:System.Object System.RuntimeType::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
	<edge mark="1" b="Method:System.Object System.Type::InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsCOMObjectImpl()" e="Method:System.Boolean System.Type::IsCOMObjectImpl()" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsCOMObjectImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsCOMObjectImpl()" e="Method:System.Boolean System.RuntimeType::IsCOMObjectImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsCOMObjectImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsPointerImpl()" e="Method:System.Boolean System.Type::IsPointerImpl()" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsPointerImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsPointerImpl()" e="Method:System.Boolean System.RuntimeType::IsPointerImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsPointerImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsPrimitiveImpl()" e="Method:System.Boolean System.Type::IsPrimitiveImpl()" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsPrimitiveImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsPrimitiveImpl()" e="Method:System.Boolean System.RuntimeType::IsPrimitiveImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsPrimitiveImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsByRefImpl()" e="Method:System.Boolean System.Type::IsByRefImpl()" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsByRefImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsByRefImpl()" e="Method:System.Boolean System.RuntimeType::IsByRefImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsByRefImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsArrayImpl()" e="Method:System.Boolean System.Type::IsArrayImpl()" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::IsArrayImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsArrayImpl()" e="Method:System.Boolean System.RuntimeType::IsArrayImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::IsArrayImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::HasElementTypeImpl()" e="Method:System.Boolean System.Type::HasElementTypeImpl()" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeType::HasElementTypeImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Type::HasElementTypeImpl()" e="Method:System.Boolean System.RuntimeType::HasElementTypeImpl()" />
	<edge mark="1" b="Method:System.Boolean System.Type::HasElementTypeImpl()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::GetElementType()" e="Method:System.Type System.Type::GetElementType()" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::GetElementType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Type::GetElementType()" e="Method:System.Type System.RuntimeType::GetElementType()" />
	<edge mark="1" b="Method:System.Type System.Type::GetElementType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes System.RuntimeType::GetAttributeFlagsImpl()" e="Method:System.Reflection.TypeAttributes System.Type::GetAttributeFlagsImpl()" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes System.RuntimeType::GetAttributeFlagsImpl()" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Int32 System.Reflection.TypeAttributes::value__" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.TypeAttributes::value__" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.TypeAttributes::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::VisibilityMask" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::VisibilityMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::VisibilityMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NotPublic" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NotPublic" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NotPublic" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Public" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Public" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Public" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedPublic" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedPublic" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedPublic" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedPrivate" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedPrivate" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedPrivate" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedFamily" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedFamily" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedFamily" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedAssembly" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedAssembly" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedAssembly" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedFamANDAssem" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedFamANDAssem" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedFamANDAssem" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedFamORAssem" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedFamORAssem" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::NestedFamORAssem" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::LayoutMask" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::LayoutMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::LayoutMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::AutoLayout" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::AutoLayout" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::AutoLayout" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::SequentialLayout" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::SequentialLayout" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::SequentialLayout" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::ExplicitLayout" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::ExplicitLayout" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::ExplicitLayout" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::ClassSemanticsMask" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::ClassSemanticsMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::ClassSemanticsMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Class" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Class" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Class" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Interface" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Interface" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Interface" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Abstract" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Abstract" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Abstract" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Sealed" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Sealed" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Sealed" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::SpecialName" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::SpecialName" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::SpecialName" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Import" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Import" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Import" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Serializable" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Serializable" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::Serializable" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::WindowsRuntime" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::WindowsRuntime" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::WindowsRuntime" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::StringFormatMask" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::StringFormatMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::StringFormatMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::AnsiClass" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::AnsiClass" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::AnsiClass" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::UnicodeClass" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::UnicodeClass" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::UnicodeClass" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::AutoClass" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::AutoClass" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::AutoClass" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::CustomFormatClass" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::CustomFormatClass" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::CustomFormatClass" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::CustomFormatMask" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::CustomFormatMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::CustomFormatMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::BeforeFieldInit" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::BeforeFieldInit" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::BeforeFieldInit" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::RTSpecialName" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::RTSpecialName" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::RTSpecialName" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::HasSecurity" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::HasSecurity" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::HasSecurity" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="TypeDef:System.Reflection.TypeAttributes" e="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::ReservedMask" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::ReservedMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Field:System.Reflection.TypeAttributes System.Reflection.TypeAttributes::ReservedMask" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes System.Type::GetAttributeFlagsImpl()" e="Method:System.Reflection.TypeAttributes System.RuntimeType::GetAttributeFlagsImpl()" />
	<edge mark="1" b="Method:System.Reflection.TypeAttributes System.Type::GetAttributeFlagsImpl()" e="TypeDef:System.Reflection.TypeAttributes" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::get_UnderlyingSystemType()" e="Property:System.Type System.RuntimeType::UnderlyingSystemType()" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::get_UnderlyingSystemType()" e="Method:System.Type System.Type::get_UnderlyingSystemType()" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::get_UnderlyingSystemType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Type::get_UnderlyingSystemType()" e="Property:System.Type System.Type::UnderlyingSystemType()" />
	<edge mark="1" b="Method:System.Type System.Type::get_UnderlyingSystemType()" e="Method:System.Type System.RuntimeType::get_UnderlyingSystemType()" />
	<edge mark="1" b="Method:System.Type System.Type::get_UnderlyingSystemType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Reflection.Module System.RuntimeType::get_Module()" e="Property:System.Reflection.Module System.RuntimeType::Module()" />
	<edge mark="1" b="Method:System.Reflection.Module System.RuntimeType::get_Module()" e="Method:System.Reflection.Module System.Type::get_Module()" />
	<edge mark="1" b="Method:System.Reflection.Module System.Type::get_Module()" e="Method:System.Reflection.Module System.Reflection.MemberInfo::get_Module()" />
	<edge mark="1" b="Method:System.Reflection.Module System.RuntimeType::get_Module()" e="TypeDef:System.Reflection.Module" />
	<edge mark="1" b="TypeDef:System.Reflection.Module" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.Module System.Reflection.MemberInfo::get_Module()" e="Property:System.Reflection.Module System.Reflection.MemberInfo::Module()" />
	<edge mark="1" b="Method:System.Reflection.Module System.Reflection.MemberInfo::get_Module()" e="TypeDef:System.Reflection.Module" />
	<edge mark="1" b="Method:System.Reflection.Module System.Type::get_Module()" e="Property:System.Reflection.Module System.Type::Module()" />
	<edge mark="1" b="Method:System.Reflection.Module System.Type::get_Module()" e="Method:System.Reflection.Module System.Reflection.MemberInfo::get_Module()" />
	<edge mark="1" b="Method:System.Reflection.Module System.Type::get_Module()" e="Method:System.Reflection.Module System.RuntimeType::get_Module()" />
	<edge mark="1" b="Method:System.Reflection.Module System.Type::get_Module()" e="TypeDef:System.Reflection.Module" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::get_BaseType()" e="Property:System.Type System.RuntimeType::BaseType()" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::get_BaseType()" e="Method:System.Type System.Type::get_BaseType()" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::get_BaseType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Type::get_BaseType()" e="Property:System.Type System.Type::BaseType()" />
	<edge mark="1" b="Method:System.Type System.Type::get_BaseType()" e="Method:System.Type System.RuntimeType::get_BaseType()" />
	<edge mark="1" b="Method:System.Type System.Type::get_BaseType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.RuntimeType::get_Assembly()" e="Property:System.Reflection.Assembly System.RuntimeType::Assembly()" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.RuntimeType::get_Assembly()" e="Method:System.Reflection.Assembly System.Type::get_Assembly()" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.RuntimeType::get_Assembly()" e="TypeDef:System.Reflection.Assembly" />
	<edge mark="1" b="TypeDef:System.Reflection.Assembly" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.Type::get_Assembly()" e="Property:System.Reflection.Assembly System.Type::Assembly()" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.Type::get_Assembly()" e="Method:System.Reflection.Assembly System.RuntimeType::get_Assembly()" />
	<edge mark="1" b="Method:System.Reflection.Assembly System.Type::get_Assembly()" e="TypeDef:System.Reflection.Assembly" />
	<edge mark="1" b="Method:System.Guid System.RuntimeType::get_GUID()" e="Property:System.Guid System.RuntimeType::GUID()" />
	<edge mark="1" b="Method:System.Guid System.RuntimeType::get_GUID()" e="Method:System.Guid System.Type::get_GUID()" />
	<edge mark="1" b="Method:System.Guid System.RuntimeType::get_GUID()" e="TypeDef:System.Guid" />
	<edge mark="1" b="TypeDef:System.Guid" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Guid&gt;" e="TypeDef:System.Guid" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Guid&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Guid&gt;" e="TypeDef:System.Guid" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Guid&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeDef:System.Guid" e="Method:System.Int32 System.Guid::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Guid" e="Method:System.Boolean System.Guid::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Guid" e="Method:System.String System.Guid::ToString()" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Int32 System.Guid::_a" />
	<edge mark="1" b="Field:System.Int32 System.Guid::_a" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Int32 System.Guid::_a" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Int16 System.Guid::_b" />
	<edge mark="1" b="Field:System.Int16 System.Guid::_b" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Int16 System.Guid::_b" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Int16 System.Guid::_c" />
	<edge mark="1" b="Field:System.Int16 System.Guid::_c" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Int16 System.Guid::_c" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Byte System.Guid::_d" />
	<edge mark="1" b="Field:System.Byte System.Guid::_d" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Byte System.Guid::_d" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Byte System.Guid::_e" />
	<edge mark="1" b="Field:System.Byte System.Guid::_e" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Byte System.Guid::_e" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Byte System.Guid::_f" />
	<edge mark="1" b="Field:System.Byte System.Guid::_f" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Byte System.Guid::_f" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Byte System.Guid::_g" />
	<edge mark="1" b="Field:System.Byte System.Guid::_g" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Byte System.Guid::_g" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Byte System.Guid::_h" />
	<edge mark="1" b="Field:System.Byte System.Guid::_h" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Byte System.Guid::_h" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Byte System.Guid::_i" />
	<edge mark="1" b="Field:System.Byte System.Guid::_i" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Byte System.Guid::_i" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Byte System.Guid::_j" />
	<edge mark="1" b="Field:System.Byte System.Guid::_j" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Byte System.Guid::_j" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Guid" e="Field:System.Byte System.Guid::_k" />
	<edge mark="1" b="Field:System.Byte System.Guid::_k" e="TypeDef:System.Guid" />
	<edge mark="1" b="Field:System.Byte System.Guid::_k" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeDef:System.Guid" e="Method:System.Int32 System.Guid::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Guid" e="Method:System.Boolean System.Guid::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Guid" e="Method:System.String System.Guid::ToString()" />
	<edge mark="1" b="Method:System.String System.Guid::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Guid::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Boolean System.Guid::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Guid::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.Guid::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Guid::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Guid System.Type::get_GUID()" e="Property:System.Guid System.Type::GUID()" />
	<edge mark="1" b="Method:System.Guid System.Type::get_GUID()" e="Method:System.Guid System.RuntimeType::get_GUID()" />
	<edge mark="1" b="Method:System.Guid System.Type::get_GUID()" e="TypeDef:System.Guid" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_Namespace()" e="Property:System.String System.RuntimeType::Namespace()" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_Namespace()" e="Method:System.String System.Type::get_Namespace()" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_Namespace()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Type::get_Namespace()" e="Property:System.String System.Type::Namespace()" />
	<edge mark="1" b="Method:System.String System.Type::get_Namespace()" e="Method:System.String System.RuntimeType::get_Namespace()" />
	<edge mark="1" b="Method:System.String System.Type::get_Namespace()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_AssemblyQualifiedName()" e="Property:System.String System.RuntimeType::AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_AssemblyQualifiedName()" e="Method:System.String System.Type::get_AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_AssemblyQualifiedName()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Type::get_AssemblyQualifiedName()" e="Property:System.String System.Type::AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.String System.Type::get_AssemblyQualifiedName()" e="Method:System.String System.RuntimeType::get_AssemblyQualifiedName()" />
	<edge mark="1" b="Method:System.String System.Type::get_AssemblyQualifiedName()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_FullName()" e="Property:System.String System.RuntimeType::FullName()" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_FullName()" e="Method:System.String System.Type::get_FullName()" />
	<edge mark="1" b="Method:System.String System.RuntimeType::get_FullName()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Type::get_FullName()" e="Property:System.String System.Type::FullName()" />
	<edge mark="1" b="Method:System.String System.Type::get_FullName()" e="Method:System.String System.RuntimeType::get_FullName()" />
	<edge mark="1" b="Method:System.String System.Type::get_FullName()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::GetNestedType(System.String,System.Reflection.BindingFlags)" e="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::GetNestedType(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" e="Method:System.Type System.RuntimeType::GetNestedType(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Type System.Type::GetNestedType(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::GetInterface(System.String,System.Boolean)" e="Method:System.Type System.Type::GetInterface(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Type System.RuntimeType::GetInterface(System.String,System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Type::GetInterface(System.String,System.Boolean)" e="Method:System.Type System.RuntimeType::GetInterface(System.String,System.Boolean)" />
	<edge mark="1" b="Method:System.Type System.Type::GetInterface(System.String,System.Boolean)" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.RuntimeType::GetField(System.String,System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo System.Type::GetField(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.RuntimeType::GetField(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.FieldInfo" />
	<edge mark="1" b="TypeDef:System.Reflection.FieldInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.FieldInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.FieldInfo::get_MemberType()" e="Property:System.Reflection.MemberTypes System.Reflection.FieldInfo::MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.FieldInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.FieldInfo::get_MemberType()" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.Type::GetField(System.String,System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo System.RuntimeType::GetField(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo System.Type::GetField(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.FieldInfo" />
	<edge mark="1" b="Method:System.Reflection.EventInfo System.RuntimeType::GetEvent(System.String,System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.EventInfo System.RuntimeType::GetEvent(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="TypeDef:System.Reflection.EventInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.EventInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.EventInfo::get_MemberType()" e="Property:System.Reflection.MemberTypes System.Reflection.EventInfo::MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.EventInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.EventInfo::get_MemberType()" e="TypeDef:System.Reflection.MemberTypes" />
	<edge mark="1" b="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String,System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo System.RuntimeType::GetEvent(System.String,System.Reflection.BindingFlags)" />
	<edge mark="1" b="Method:System.Reflection.EventInfo System.Type::GetEvent(System.String,System.Reflection.BindingFlags)" e="TypeDef:System.Reflection.EventInfo" />
	<edge b="Method:System.Reflection.PropertyInfo System.RuntimeType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.PropertyInfo System.RuntimeType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo System.RuntimeType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.PropertyInfo System.Type::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo System.RuntimeType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.PropertyInfo" />
	<edge mark="1" b="TypeDef:System.Reflection.PropertyInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.PropertyInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.PropertyInfo::get_MemberType()" e="Property:System.Reflection.MemberTypes System.Reflection.PropertyInfo::MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.PropertyInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.PropertyInfo::get_MemberType()" e="TypeDef:System.Reflection.MemberTypes" />
	<edge b="Method:System.Reflection.PropertyInfo System.Type::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.PropertyInfo System.Type::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo System.Type::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.PropertyInfo System.RuntimeType::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo System.Type::GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.PropertyInfo" />
	<edge mark="1" b="TypeDef:System.Reflection.CallingConventions" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Reflection.ConstructorInfo System.RuntimeType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.ConstructorInfo System.RuntimeType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo System.RuntimeType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.ConstructorInfo System.Type::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo System.RuntimeType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="TypeDef:System.Reflection.ConstructorInfo" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Reflection.CallingConventions" e="Field:System.Int32 System.Reflection.CallingConventions::value__" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.CallingConventions::value__" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="Field:System.Int32 System.Reflection.CallingConventions::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Reflection.CallingConventions" e="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::Standard" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::Standard" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::Standard" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="TypeDef:System.Reflection.CallingConventions" e="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::VarArgs" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::VarArgs" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::VarArgs" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="TypeDef:System.Reflection.CallingConventions" e="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::Any" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::Any" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::Any" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="TypeDef:System.Reflection.CallingConventions" e="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::HasThis" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::HasThis" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::HasThis" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="TypeDef:System.Reflection.CallingConventions" e="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::ExplicitThis" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::ExplicitThis" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="Field:System.Reflection.CallingConventions System.Reflection.CallingConventions::ExplicitThis" e="TypeDef:System.Reflection.CallingConventions" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.ConstructorInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.ConstructorInfo::get_MemberType()" e="Property:System.Reflection.MemberTypes System.Reflection.ConstructorInfo::MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.ConstructorInfo::get_MemberType()" e="Method:System.Reflection.MemberTypes System.Reflection.MemberInfo::get_MemberType()" />
	<edge mark="1" b="Method:System.Reflection.MemberTypes System.Reflection.ConstructorInfo::get_MemberType()" e="TypeDef:System.Reflection.MemberTypes" />
	<edge b="Method:System.Reflection.ConstructorInfo System.Type::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.ConstructorInfo System.Type::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo System.Type::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.ConstructorInfo System.RuntimeType::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo System.Type::GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge b="Method:System.Reflection.MethodInfo System.RuntimeType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.MethodInfo System.RuntimeType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.RuntimeType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.MethodInfo System.Type::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.RuntimeType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.MethodInfo" />
	<edge b="Method:System.Reflection.MethodInfo System.Type::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Type[]" />
	<edge b="Method:System.Reflection.MethodInfo System.Type::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeSpec:System.Reflection.ParameterModifier[]" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.Type::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="Method:System.Reflection.MethodInfo System.RuntimeType::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo System.Type::GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Reflection.MemberInfo[] System.RuntimeType::GetMembers(System.Reflection.BindingFlags)" e="Method:System.Reflection.MemberInfo[] System.Type::GetMembers(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.MemberInfo[] System.RuntimeType::GetMembers(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.MemberInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.MemberInfo[]" e="TypeDef:System.Reflection.MemberInfo" />
	<edge mark="1" b="Method:System.Reflection.MemberInfo[] System.Type::GetMembers(System.Reflection.BindingFlags)" e="Method:System.Reflection.MemberInfo[] System.RuntimeType::GetMembers(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.MemberInfo[] System.Type::GetMembers(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.MemberInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.MemberInfo[]" e="TypeDef:System.Reflection.MemberInfo" />
	<edge mark="1" b="Method:System.Type[] System.RuntimeType::GetNestedTypes(System.Reflection.BindingFlags)" e="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Type[] System.RuntimeType::GetNestedTypes(System.Reflection.BindingFlags)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="TypeSpec:System.Type[]" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" e="Method:System.Type[] System.RuntimeType::GetNestedTypes(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Type[] System.Type::GetNestedTypes(System.Reflection.BindingFlags)" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="TypeSpec:System.Type[]" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type[] System.RuntimeType::GetInterfaces()" e="Method:System.Type[] System.Type::GetInterfaces()" />
	<edge b="Method:System.Type[] System.RuntimeType::GetInterfaces()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="TypeSpec:System.Type[]" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type[] System.Type::GetInterfaces()" e="Method:System.Type[] System.RuntimeType::GetInterfaces()" />
	<edge b="Method:System.Type[] System.Type::GetInterfaces()" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="TypeSpec:System.Type[]" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo[] System.RuntimeType::GetFields(System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo[] System.Type::GetFields(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.FieldInfo[] System.RuntimeType::GetFields(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.FieldInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.FieldInfo[]" e="TypeDef:System.Reflection.FieldInfo" />
	<edge mark="1" b="Method:System.Reflection.FieldInfo[] System.Type::GetFields(System.Reflection.BindingFlags)" e="Method:System.Reflection.FieldInfo[] System.RuntimeType::GetFields(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.FieldInfo[] System.Type::GetFields(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.FieldInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.FieldInfo[]" e="TypeDef:System.Reflection.FieldInfo" />
	<edge mark="1" b="Method:System.Reflection.EventInfo[] System.RuntimeType::GetEvents(System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo[] System.Type::GetEvents(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.EventInfo[] System.RuntimeType::GetEvents(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.EventInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.EventInfo[]" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Reflection.EventInfo[] System.Type::GetEvents(System.Reflection.BindingFlags)" e="Method:System.Reflection.EventInfo[] System.RuntimeType::GetEvents(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.EventInfo[] System.Type::GetEvents(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.EventInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.EventInfo[]" e="TypeDef:System.Reflection.EventInfo" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo[] System.RuntimeType::GetProperties(System.Reflection.BindingFlags)" e="Method:System.Reflection.PropertyInfo[] System.Type::GetProperties(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.PropertyInfo[] System.RuntimeType::GetProperties(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.PropertyInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.PropertyInfo[]" e="TypeDef:System.Reflection.PropertyInfo" />
	<edge mark="1" b="Method:System.Reflection.PropertyInfo[] System.Type::GetProperties(System.Reflection.BindingFlags)" e="Method:System.Reflection.PropertyInfo[] System.RuntimeType::GetProperties(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.PropertyInfo[] System.Type::GetProperties(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.PropertyInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.PropertyInfo[]" e="TypeDef:System.Reflection.PropertyInfo" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo[] System.RuntimeType::GetConstructors(System.Reflection.BindingFlags)" e="Method:System.Reflection.ConstructorInfo[] System.Type::GetConstructors(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.ConstructorInfo[] System.RuntimeType::GetConstructors(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.ConstructorInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.ConstructorInfo[]" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Reflection.ConstructorInfo[] System.Type::GetConstructors(System.Reflection.BindingFlags)" e="Method:System.Reflection.ConstructorInfo[] System.RuntimeType::GetConstructors(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.ConstructorInfo[] System.Type::GetConstructors(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.ConstructorInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.ConstructorInfo[]" e="TypeDef:System.Reflection.ConstructorInfo" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo[] System.RuntimeType::GetMethods(System.Reflection.BindingFlags)" e="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.MethodInfo[] System.RuntimeType::GetMethods(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.MethodInfo[]" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" e="Method:System.Reflection.MethodInfo[] System.RuntimeType::GetMethods(System.Reflection.BindingFlags)" />
	<edge b="Method:System.Reflection.MethodInfo[] System.Type::GetMethods(System.Reflection.BindingFlags)" e="TypeSpec:System.Reflection.MethodInfo[]" />
	<edge mark="1" b="TypeSpec:System.Reflection.MethodInfo[]" e="TypeDef:System.Reflection.MethodInfo" />
	<edge mark="1" b="TypeDef:System.Enum" e="Method:System.Boolean System.Enum::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Enum" e="Method:System.Int32 System.Enum::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Enum" e="Method:System.String System.Enum::ToString()" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.NullableAttribute::.ctor(System.Byte)" e="TypeDef:System.Runtime.CompilerServices.NullableAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.NullableAttribute::.ctor(System.Byte)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Void System.Enum/&lt;&gt;c__63`1::&lt;FormatNumberAsHex&gt;b__63_0(System.Span`1&lt;System.Char&gt;,System.IntPtr)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Void System.Enum/&lt;&gt;c__63`1::&lt;FormatNumberAsHex&gt;b__63_0(System.Span`1&lt;System.Char&gt;,System.IntPtr)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Enum/&lt;&gt;c__63`1::.ctor()" e="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Enum/&lt;&gt;c__63`1::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Buffers.SpanAction`2" e="Method:System.Void System.Buffers.SpanAction`2::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:System.Buffers.SpanAction`2" e="Method:System.Void System.Buffers.SpanAction`2::Invoke(System.Span`1&lt;T&gt;,TArg)" />
	<edge b="Method:System.Void System.Buffers.SpanAction`2::Invoke(System.Span`1&lt;T&gt;,TArg)" e="TypeSpec:System.Span`1&lt;T&gt;" />
	<edge mark="1" b="Method:System.Void System.Buffers.SpanAction`2::Invoke(System.Span`1&lt;T&gt;,TArg)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Buffers.SpanAction`2::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Buffers.SpanAction`2" />
	<edge mark="1" b="Method:System.Void System.Buffers.SpanAction`2::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.IntPtr&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.IntPtr&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.Boolean System.IntPtr::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.Int32 System.IntPtr::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.String System.IntPtr::ToString()" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Field:System.IntPtr System.IntPtr::_value" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.Boolean System.IntPtr::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.Int32 System.IntPtr::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.IntPtr" e="Method:System.String System.IntPtr::ToString()" />
	<edge mark="1" b="Method:System.String System.IntPtr::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.IntPtr::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Char&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Char&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.Char&gt;:System.Private.CoreLib.dll" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.Char&gt;:System.Private.CoreLib.dll" e="TypeDef:System.IBinaryIntegerParseAndFormatInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Char" e="Method:System.Int32 System.Char::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Char" e="Method:System.Boolean System.Char::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Char" e="Method:System.String System.Char::ToString()" />
	<edge mark="1" b="TypeDef:System.Char" e="Field:System.Char System.Char::m_value" />
	<edge mark="1" b="Field:System.Char System.Char::m_value" e="TypeDef:System.Char" />
	<edge mark="1" b="Field:System.Char System.Char::m_value" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeDef:System.Char" e="Method:System.Int32 System.Char::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Char" e="Method:System.Boolean System.Char::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Char" e="Method:System.String System.Char::ToString()" />
	<edge mark="1" b="Method:System.String System.Char::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Char::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Boolean System.Char::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Char::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.Char::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Char::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void System.Enum/&lt;&gt;c__63`1::.cctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Enum/&lt;&gt;c__63`1:System.Private.CoreLib.dll" e="TypeDef:System.ValueType" />
	<edge mark="1" b="Method:TResult[] System.Enum/EnumInfo`1::CloneValues()" e="TypeDef:System.ValueType" />
	<edge b="Method:TResult[] System.Enum/EnumInfo`1::CloneValues()" e="TypeSpec:TResult[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" e="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" e="TypeSpec:TStorage[]:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" e="TypeSpec:System.String[]" />
	<edge mark="1" b="Method:System.Void System.Enum/EnumInfo`1::.ctor(System.Boolean,TStorage[],System.String[])" e="TypeDef:System.Void" />
	<edge b="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" e="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TStorage&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeDef:System.Enum/EnumInfo`1:System.Private.CoreLib.dll" e="TypeDef:System.ValueType" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.Int32 System.ValueType/ValueTypeHashCodeStrategy::value__" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::None" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ReferenceField" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::DoubleField" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::SingleField" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::FastGetHashCode" />
	<edge mark="1" b="TypeDef:System.ValueType/ValueTypeHashCodeStrategy:System.Private.CoreLib.dll" e="Field:System.ValueType/ValueTypeHashCodeStrategy System.ValueType/ValueTypeHashCodeStrategy::ValueTypeOverride" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Int32&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Int32&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.Int32&gt;:System.Private.CoreLib.dll" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.Int32&gt;:System.Private.CoreLib.dll" e="TypeDef:System.IBinaryIntegerParseAndFormatInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Int32" e="Method:System.Boolean System.Int32::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Int32" e="Method:System.Int32 System.Int32::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Int32" e="Method:System.String System.Int32::ToString()" />
	<edge mark="1" b="TypeDef:System.Int32" e="Field:System.Int32 System.Int32::m_value" />
	<edge mark="1" b="TypeDef:System.Int32" e="Method:System.Boolean System.Int32::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Int32" e="Method:System.Int32 System.Int32::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Int32" e="Method:System.String System.Int32::ToString()" />
	<edge mark="1" b="Method:System.String System.Int32::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Int32::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Int32::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Int32::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Int32::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Void System.MulticastDelegate::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Boolean System.MulticastDelegate::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Delegate System.MulticastDelegate::CombineImpl(System.Delegate)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Delegate System.MulticastDelegate::RemoveImpl(System.Delegate)" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Delegate[] System.MulticastDelegate::GetInvocationList()" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Int32 System.MulticastDelegate::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Object System.MulticastDelegate::GetTarget()" />
	<edge mark="1" b="TypeDef:System.MulticastDelegate" e="Method:System.Reflection.MethodInfo System.MulticastDelegate::GetMethodImpl()" />
	<edge mark="1" b="TypeDef:System.Delegate/InvocationListEnumerator`1" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate:test.exe" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate:test.exe" e="Method:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicDelegate::Invoke()" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/HideNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/HideNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/HideNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/HideNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicNestedType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicNestedType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicNestedType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesType/PublicNestedType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.EventHandler`1" e="Method:System.Void System.EventHandler`1::.ctor(System.Object,System.IntPtr)" />
	<edge mark="1" b="TypeDef:System.EventHandler`1" e="Method:System.Void System.EventHandler`1::Invoke(System.Object,TEventArgs)" />
	<edge mark="1" b="Method:System.Void System.EventHandler`1::Invoke(System.Object,TEventArgs)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.EventHandler`1::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void System.EventHandler`1::.ctor(System.Object,System.IntPtr)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.CompilerGeneratedAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.CompilerGeneratedAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Boolean&gt;" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Boolean&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Boolean&gt;" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.Boolean&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeDef:System.Boolean" e="Method:System.Int32 System.Boolean::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Boolean" e="Method:System.String System.Boolean::ToString()" />
	<edge mark="1" b="TypeDef:System.Boolean" e="Method:System.Boolean System.Boolean::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Boolean" e="Field:System.Boolean System.Boolean::m_value" />
	<edge mark="1" b="Field:System.Boolean System.Boolean::m_value" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Field:System.Boolean System.Boolean::m_value" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Boolean" e="Method:System.Int32 System.Boolean::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Boolean" e="Method:System.String System.Boolean::ToString()" />
	<edge mark="1" b="TypeDef:System.Boolean" e="Method:System.Boolean System.Boolean::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Boolean::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Boolean::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.String System.Boolean::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Boolean::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.Boolean::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Boolean::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_PublicStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_PublicStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_PublicStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicStaticBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_PublicPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_PublicPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_PublicPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_PublicPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::HideMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::PublicBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PublicStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PublicStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PublicStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PublicStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PublicStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PublicStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PublicProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PublicProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PublicProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PublicProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::HideMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicMethod2(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PublicMethod1()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_ProtectedStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_ProtectedStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_ProtectedStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedStaticBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_ProtectedPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::get_ProtectedPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsBaseType::ProtectedBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PrivateStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PrivateStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PrivateStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PrivateStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PrivateStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PrivateStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_ProtectedStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_ProtectedStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_ProtectedStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_ProtectedStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_ProtectedStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_ProtectedStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PrivateProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_PrivateProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PrivateProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_PrivateProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_ProtectedProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::set_ProtectedProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_ProtectedProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::get_ProtectedProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::PrivateMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::ProtectedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllMethodsType::InternalMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Object::Finalize()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Object System.Object::MemberwiseClone()" e="TypeDef:System.Object" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::set_ProtectedStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::get_ProtectedStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::get_ProtectedStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::get_ProtectedStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::&lt;ProtectedStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedStaticBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::get_ProtectedPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::get_ProtectedPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsBaseType::ProtectedBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_PrivateStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_PrivateStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_PrivateStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::&lt;PrivateStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_PrivateStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_PrivateStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_PrivateStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::&lt;PrivateStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_ProtectedStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_ProtectedStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_ProtectedStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::&lt;ProtectedStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_ProtectedStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_ProtectedStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_ProtectedStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::&lt;ProtectedStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_PrivateProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_PrivateProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_PrivateProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_PrivateProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_ProtectedProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::set_ProtectedProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_ProtectedProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::get_ProtectedProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::PrivateMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::ProtectedMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicMethodsType::InternalMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Delegate" e="Method:System.Int32 System.Delegate::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Object::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Delegate" e="Method:System.Boolean System.Delegate::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Object::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.ValueType" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.Object::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Type System.Object::GetType()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Type System.Object::GetType()" e="Method:System.Void System.Type::.ctor()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Reflection.MemberTypes System.Type::get_MemberType()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Reflection.Module System.Type::get_Module()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Type System.Type::get_DeclaringType()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Type System.Type::get_ReflectedType()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.String System.Type::ToString()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Boolean System.Type::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Int32 System.Type::GetHashCode()" />
	<edge b="Method:System.Void System.Type::.ctor()" e="TypeDef:System.Type" />
	<edge mark="1" b="Method:System.Void System.Type::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Int32 System.Type::GetHashCode()" e="Method:System.Int32 System.Reflection.MemberInfo::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Reflection.MemberInfo::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Type::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Reflection.MemberInfo::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Int32 System.Type::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.Reflection.MemberInfo::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.Type::Equals(System.Object)" e="Method:System.Boolean System.Reflection.MemberInfo::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MemberInfo::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Type::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MemberInfo::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Boolean System.Type::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.MemberInfo::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.String System.Type::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.Type::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicStaticEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_PublicStaticPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_PublicStaticPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_PublicStaticPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_PublicStaticPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::&lt;PublicStaticPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicStaticBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicEventOnBase" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicEventOnBase" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicEventOnBase" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_PublicPropertyOnBase(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::set_PublicPropertyOnBase(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_PublicPropertyOnBase()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicPropertyOnBase()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::get_PublicPropertyOnBase()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::HideMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsBaseType::PublicBaseMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" />
	<edge mark="1" b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType:test.exe" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicStaticEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_HideStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_HideStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_HideStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::&lt;HideStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_HideStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_HideStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_HideStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::&lt;HideStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_PublicStaticProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_PublicStaticProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_PublicStaticProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType:test.exe" />
	<edge mark="1" b="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::&lt;PublicStaticProperty&gt;k__BackingField" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_PublicStaticProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_PublicStaticProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_PublicStaticProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::&lt;PublicStaticProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicStaticMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicEvent" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicEvent" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Event:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicEvent" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_HideProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_HideProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_HideProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_HideProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_PublicProperty(System.Boolean)" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicProperty()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::set_PublicProperty(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_PublicProperty()" e="Property:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicProperty()" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::get_PublicProperty()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::HideMethod()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicMethod2(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicMethodsType::PublicMethod1()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType::.ctor()" e="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType::i" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType::i" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType:test.exe" />
	<edge mark="1" b="Field:System.Int32 Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType::i" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBeforeFieldInitType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.cctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor(System.Int32,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor(System.Int32,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor(System.Int32,System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsType::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllConstructorsBaseType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.cctor()" e="TypeDef:System.Void" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.ctor(System.Int32,System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.ctor(System.Int32,System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.ctor(System.Int32,System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsType::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicConstructorsBaseType:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBeforeFieldInitType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBeforeFieldInitType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBeforeFieldInitType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBeforeFieldInitType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsType::.ctor(System.Int32)" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsType::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsType::.ctor(System.Int32)" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBaseType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBaseType:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBaseType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBaseType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicConstructorsBaseType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBeforeFieldInitType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBeforeFieldInitType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBeforeFieldInitType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBeforeFieldInitType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorType::.ctor()" e="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBaseType::.ctor()" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBaseType:test.exe" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBaseType:test.exe" e="Module:test.exe" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBaseType::.ctor()" e="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBaseType:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBaseType::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicParameterlessConstructorBaseType::.ctor()" e="Method:System.Void System.Object::.ctor()" />
	<edge mark="1" b="Method:System.Void System.Object::.ctor()" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAll(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireInterfaces(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/InterfacesBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllEvents(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicEvents(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicEvents(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllProperties(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicProperties(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicProperties(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllNestedTypes(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllNestedTypesBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicNestedTypes(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/NonPublicNestedTypesBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicNestedTypes(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PublicNestedTypesBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllFields(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicFields(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicFields(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllMethods(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicMethods(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicMethods(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireAllConstructors(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequireNonPublicConstructors(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicConstructors(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:Mono.Linker.Tests.Cases.DataFlow.MemberTypes/PrivateParameterlessConstructorBaseType:test.exe" e="Module:test.exe" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes::RequirePublicParameterlessConstructor(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.RuntimeTypeHandle" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)" e="TypeDef:System.Type" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.RuntimeTypeHandle&gt;" e="TypeDef:System.RuntimeTypeHandle" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.RuntimeTypeHandle&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeDef:System.RuntimeTypeHandle" e="Method:System.Int32 System.RuntimeTypeHandle::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.RuntimeTypeHandle" e="Method:System.Boolean System.RuntimeTypeHandle::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.RuntimeTypeHandle" e="Field:System.RuntimeType System.RuntimeTypeHandle::m_type" />
	<edge mark="1" b="Field:System.RuntimeType System.RuntimeTypeHandle::m_type" e="TypeDef:System.RuntimeTypeHandle" />
	<edge mark="1" b="Field:System.RuntimeType System.RuntimeTypeHandle::m_type" e="TypeDef:System.RuntimeType:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.RuntimeTypeHandle" e="Method:System.Int32 System.RuntimeTypeHandle::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.RuntimeTypeHandle" e="Method:System.Boolean System.RuntimeTypeHandle::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeTypeHandle::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeTypeHandle::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Int32 System.RuntimeTypeHandle::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.RuntimeTypeHandle::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Reflection.MemberTypes System.Type::get_MemberType()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Reflection.Module System.Type::get_Module()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Type System.Type::get_DeclaringType()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Type System.Type::get_ReflectedType()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.String System.Type::ToString()" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Boolean System.Type::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.Type" e="Method:System.Int32 System.Type::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute::.ctor(System.String)" e="TypeDef:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.IList`1::RemoveAt(System.Int32)" e="Method:System.Void System.ArraySegment`1::System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.ICollection`1::Remove(T)" e="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Remove(T)" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.IList`1::Insert(System.Int32,T)" e="Method:System.Void System.ArraySegment`1::System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32,T)" />
	<edge mark="1" b="Method:System.Int32 System.Collections.Generic.IList`1::IndexOf(T)" e="Method:System.Int32 System.ArraySegment`1::System.Collections.Generic.IList&lt;T&gt;.IndexOf(T)" />
	<edge mark="1" b="Method:System.Collections.IEnumerator System.Collections.IEnumerable::GetEnumerator()" e="Method:System.Collections.IEnumerator System.ArraySegment`1::System.Collections.IEnumerable.GetEnumerator()" />
	<edge mark="1" b="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1::GetEnumerator()" e="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.ArraySegment`1::System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.ICollection`1::CopyTo(T[],System.Int32)" e="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.ICollection`1::Contains(T)" e="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Contains(T)" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.ICollection`1::Clear()" e="Method:System.Void System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Clear()" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.ICollection`1::Add(T)" e="Method:System.Void System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Add(T)" />
	<edge mark="1" b="Method:System.Void System.Collections.Generic.IList`1::set_Item(System.Int32,T)" e="Method:System.Void System.ArraySegment`1::System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32,T)" />
	<edge mark="1" b="Method:T System.Collections.Generic.IList`1::get_Item(System.Int32)" e="Method:T System.ArraySegment`1::System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32)" />
	<edge mark="1" b="Method:T System.Collections.Generic.IReadOnlyList`1::get_Item(System.Int32)" e="Method:T System.ArraySegment`1::System.Collections.Generic.IReadOnlyList&lt;T&gt;.get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Collections.Generic.ICollection`1::get_IsReadOnly()" e="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.Decimal::Equals(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.RuntimeTypeHandle::Equals(System.RuntimeTypeHandle)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.RuntimeMethodHandle::Equals(System.RuntimeMethodHandle)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.Boolean::Equals(System.Boolean)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.Byte::Equals(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.Char::Equals(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.DateTime::Equals(System.DateTime)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.Double::Equals(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.Guid::Equals(System.Guid)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.Int16::Equals(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.Int32::Equals(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.Int64::Equals(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.IntPtr::Equals(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.SByte::Equals(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.Single::Equals(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.UInt16::Equals(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.UInt32::Equals(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.UInt64::Equals(System.UInt64)" />
	<edge mark="1" b="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="Method:System.Void System.Decimal::System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="Method:System.Void System.RuntimeTypeHandle::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="Method:System.Void System.RuntimeMethodHandle::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="Method:System.Void System.DateTime::System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="Method:System.Void System.IntPtr::System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Decimal::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Boolean::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Byte::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Char::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.DateTime::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Double::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Int16::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Int32::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Int64::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.SByte::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.Single::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.UInt16::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.UInt32::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.UInt64::System.IConvertible.ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Decimal::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Boolean::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Byte::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Char::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.DateTime::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Double::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Int16::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Int32::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Int64::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.SByte::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.Single::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.UInt16::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.UInt32::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.UInt64::System.IConvertible.ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Decimal::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Boolean::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Byte::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Char::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.DateTime::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Double::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Int16::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Int32::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Int64::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.SByte::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.Single::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.UInt16::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.UInt32::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.UInt64::System.IConvertible.ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Decimal::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Boolean::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Byte::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Char::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.DateTime::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Double::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Int16::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Int32::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Int64::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.SByte::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.Single::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.UInt16::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.UInt32::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" e="Method:System.Double System.UInt64::System.IConvertible.ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Decimal::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Boolean::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Byte::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Char::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.DateTime::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Double::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Int16::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Int32::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Int64::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.SByte::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.Single::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.UInt16::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.UInt32::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" e="Method:System.Single System.UInt64::System.IConvertible.ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Decimal::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Boolean::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Byte::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Char::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.DateTime::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Double::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Int16::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Int32::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Int64::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.SByte::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.Single::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.UInt16::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.UInt32::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.UInt64::System.IConvertible.ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Decimal::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Boolean::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Byte::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Char::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.DateTime::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Double::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Int16::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Int32::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Int64::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.SByte::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.Single::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.UInt16::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.UInt32::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.UInt64::System.IConvertible.ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Decimal::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Boolean::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Byte::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Char::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.DateTime::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Double::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Int16::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Int32::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Int64::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.SByte::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.Single::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.UInt16::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.UInt32::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.UInt64::System.IConvertible.ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Decimal::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Boolean::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Byte::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Char::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.DateTime::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Double::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Int16::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Int32::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Int64::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.SByte::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.Single::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.UInt16::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.UInt32::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.UInt64::System.IConvertible.ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Decimal::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Boolean::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Byte::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Char::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.DateTime::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Double::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Int16::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Int32::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Int64::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.SByte::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.Single::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.UInt16::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.UInt32::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.UInt64::System.IConvertible.ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Decimal::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Boolean::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Byte::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Char::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.DateTime::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Double::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Int16::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Int32::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Int64::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.SByte::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.Single::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.UInt16::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.UInt32::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.UInt64::System.IConvertible.ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Decimal::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Boolean::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Byte::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Char::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.DateTime::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Double::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Int16::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Int32::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Int64::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.SByte::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.Single::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.UInt16::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.UInt32::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" e="Method:System.Byte System.UInt64::System.IConvertible.ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Decimal::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Boolean::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Byte::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Char::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.DateTime::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Double::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Int16::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Int32::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Int64::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.SByte::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.Single::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.UInt16::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.UInt32::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" e="Method:System.SByte System.UInt64::System.IConvertible.ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Decimal::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Boolean::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Byte::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Char::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.DateTime::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Double::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Int16::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Int32::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Int64::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.SByte::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.Single::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.UInt16::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.UInt32::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" e="Method:System.Char System.UInt64::System.IConvertible.ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Decimal::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Boolean::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Byte::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Char::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.DateTime::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Double::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Int16::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Int32::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Int64::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.SByte::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.Single::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.UInt16::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.UInt32::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.UInt64::System.IConvertible.ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Decimal::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Boolean::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Byte::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Char::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.DateTime::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Double::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Int16::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Int32::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Int64::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.SByte::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.Single::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.UInt16::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.UInt32::GetTypeCode()" />
	<edge mark="1" b="Method:System.TypeCode System.IConvertible::GetTypeCode()" e="Method:System.TypeCode System.UInt64::GetTypeCode()" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Char::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Guid::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Decimal::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Byte::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Char::System.IFormattable.ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.DateTime::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Double::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Guid::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Int16::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Int32::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Int64::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.IntPtr::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.SByte::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.Single::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.UInt16::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.UInt32::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" e="Method:System.String System.UInt64::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Decimal::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Boolean::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Byte::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Char::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.DateTime::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Double::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Int16::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Int32::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Int64::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.SByte::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.Single::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.UInt16::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.UInt32::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.IConvertible::ToString(System.IFormatProvider)" e="Method:System.String System.UInt64::ToString(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.Decimal::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.Boolean::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.Byte::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.Char::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.DateTime::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.Double::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.Guid::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.Int16::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.Int32::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.Int64::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.IntPtr::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.SByte::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.Single::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.UInt16::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.UInt32::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.UInt64::CompareTo(System.Object)" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Byte&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.Byte&gt;:System.Private.CoreLib.dll" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.Byte&gt;:System.Private.CoreLib.dll" e="TypeDef:System.IBinaryIntegerParseAndFormatInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.Int64&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.Int64&gt;:System.Private.CoreLib.dll" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.Int64&gt;:System.Private.CoreLib.dll" e="TypeDef:System.IBinaryIntegerParseAndFormatInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.UInt32&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.UInt32&gt;:System.Private.CoreLib.dll" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.UInt32&gt;:System.Private.CoreLib.dll" e="TypeDef:System.IBinaryIntegerParseAndFormatInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.UInt16&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.UInt16&gt;:System.Private.CoreLib.dll" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.UInt16&gt;:System.Private.CoreLib.dll" e="TypeDef:System.IBinaryIntegerParseAndFormatInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;TSelf&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.UInt64&gt;:System.Private.CoreLib.dll" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.UInt64&gt;:System.Private.CoreLib.dll" e="TypeDef:System.IBinaryIntegerParseAndFormatInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.Int16&gt;:System.Private.CoreLib.dll" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.Int16&gt;:System.Private.CoreLib.dll" e="TypeDef:System.IBinaryIntegerParseAndFormatInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.SByte&gt;:System.Private.CoreLib.dll" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.IBinaryIntegerParseAndFormatInfo`1&lt;System.SByte&gt;:System.Private.CoreLib.dll" e="TypeDef:System.IBinaryIntegerParseAndFormatInfo`1:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMinMaxValue`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IMinMaxValue`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PrivateEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PrivateEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::ProtectedEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_ProtectedEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::remove_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::PublicEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::add_PublicEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_HideProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_HideProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;HideProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PrivateProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PrivateProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PrivateProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_ProtectedProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_ProtectedProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;ProtectedProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::set_PublicProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::get_PublicProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllType::&lt;PublicProperty&gt;k__BackingField" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::HideEvent" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_HideEvent(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PrivateEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PrivateEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::ProtectedEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_ProtectedEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::remove_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" />
	<edge mark="1" b="Method:System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)" e="TypeDef:System.Delegate" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="Field:System.EventHandler`1&lt;System.EventArgs&gt; Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::PublicEventOnBase" />
	<edge b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::add_PublicEventOnBase(System.EventHandler`1&lt;System.EventArgs&gt;)" e="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventArgs" />
	<edge b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" />
	<edge mark="1" b="TypeSpec:System.EventHandler`1&lt;System.EventArgs&gt;" e="TypeDef:System.EventHandler`1" />
	<edge mark="1" b="MethodSpec:!!0 System.Threading.Interlocked::CompareExchange&lt;System.EventHandler`1&lt;System.EventArgs&gt;&gt;(!!0&amp;,!!0,!!0)" e="Method:T System.Threading.Interlocked::CompareExchange(T&amp;,T,T)" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_HideProperty(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_HideProperty()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;HideProperty&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PrivatePropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivatePropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PrivatePropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PrivatePropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_ProtectedPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_ProtectedPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;ProtectedPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Void Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::set_PublicPropertyOnBase(System.Boolean)" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::get_PublicPropertyOnBase()" e="Field:System.Boolean Mono.Linker.Tests.Cases.DataFlow.MemberTypes/AllBaseType::&lt;PublicPropertyOnBase&gt;k__BackingField" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.Decimal::CompareTo(System.Decimal)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.Boolean::CompareTo(System.Boolean)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.Byte::CompareTo(System.Byte)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.Char::CompareTo(System.Char)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.DateTime::CompareTo(System.DateTime)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.Double::CompareTo(System.Double)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.Guid::CompareTo(System.Guid)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.Int16::CompareTo(System.Int16)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.Int32::CompareTo(System.Int32)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.Int64::CompareTo(System.Int64)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.IntPtr::CompareTo(System.IntPtr)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.SByte::CompareTo(System.SByte)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.Single::CompareTo(System.Single)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.UInt16::CompareTo(System.UInt16)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.UInt32::CompareTo(System.UInt32)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.UInt64::CompareTo(System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.Decimal System.Decimal::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.Byte System.Byte::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.Char System.Char::System.IParsable&lt;System.Char&gt;.Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.Double System.Double::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.Int16 System.Int16::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.Int32 System.Int32::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.Int64 System.Int64::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.IntPtr System.IntPtr::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.SByte System.SByte::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.Single System.Single::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.UInt16 System.UInt16::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.UInt32 System.UInt32::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IParsable`1::Parse(System.String,System.IFormatProvider)" e="Method:System.UInt64 System.UInt64::Parse(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Decimal System.Decimal::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Byte System.Byte::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Double System.Double::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Int16 System.Int16::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Int32 System.Int32::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Int64 System.Int64::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.IntPtr System.IntPtr::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.SByte System.SByte::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Single System.Single::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.UInt16 System.UInt16::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.UInt32 System.UInt32::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.UInt64 System.UInt64::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Decimal::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Byte::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Double::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int16::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int32::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int64::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.SByte::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Single::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt16::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt32::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt64::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Char&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" />
	<edge mark="1" b="TypeDef:System.IUtf8SpanFormattable" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Char::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.Decimal System.Decimal::op_Addition(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IAdditionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Addition(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IAdditionOperators&lt;System.Char,System.Char,System.Char&gt;.op_Addition(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.Double System.Double::System.Numerics.IAdditionOperators&lt;System.Double,System.Double,System.Double&gt;.op_Addition(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IAdditionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Addition(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IAdditionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Addition(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IAdditionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Addition(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IAdditionOperators&lt;nint,nint,nint&gt;.op_Addition(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IAdditionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Addition(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.Single System.Single::System.Numerics.IAdditionOperators&lt;System.Single,System.Single,System.Single&gt;.op_Addition(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IAdditionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Addition(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IAdditionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Addition(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_Addition(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IAdditionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Addition(System.UInt64,System.UInt64)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeDef:System.Numerics.IAdditionOperators`3" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IAdditionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_CheckedAddition(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IAdditionOperators&lt;System.Char,System.Char,System.Char&gt;.op_CheckedAddition(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IAdditionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_CheckedAddition(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IAdditionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_CheckedAddition(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IAdditionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_CheckedAddition(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IAdditionOperators&lt;nint,nint,nint&gt;.op_CheckedAddition(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IAdditionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_CheckedAddition(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IAdditionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_CheckedAddition(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IAdditionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_CheckedAddition(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditionOperators`3::op_CheckedAddition(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IAdditionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_CheckedAddition(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.Decimal System.Decimal::System.Numerics.IAdditiveIdentity&lt;System.Decimal,System.Decimal&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.Byte System.Byte::System.Numerics.IAdditiveIdentity&lt;System.Byte,System.Byte&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.Char System.Char::System.Numerics.IAdditiveIdentity&lt;System.Char,System.Char&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.Double System.Double::System.Numerics.IAdditiveIdentity&lt;System.Double,System.Double&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.Int16 System.Int16::System.Numerics.IAdditiveIdentity&lt;System.Int16,System.Int16&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.Int32 System.Int32::System.Numerics.IAdditiveIdentity&lt;System.Int32,System.Int32&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.Int64 System.Int64::System.Numerics.IAdditiveIdentity&lt;System.Int64,System.Int64&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.IntPtr System.IntPtr::System.Numerics.IAdditiveIdentity&lt;nint,nint&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.SByte System.SByte::System.Numerics.IAdditiveIdentity&lt;System.SByte,System.SByte&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.Single System.Single::System.Numerics.IAdditiveIdentity&lt;System.Single,System.Single&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.UInt16 System.UInt16::System.Numerics.IAdditiveIdentity&lt;System.UInt16,System.UInt16&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.UInt32 System.UInt32::System.Numerics.IAdditiveIdentity&lt;System.UInt32,System.UInt32&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IAdditiveIdentity`2::get_AdditiveIdentity()" e="Method:System.UInt64 System.UInt64::System.Numerics.IAdditiveIdentity&lt;System.UInt64,System.UInt64&gt;.get_AdditiveIdentity()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeDef:System.Numerics.IBinaryInteger`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="Method:System.ValueTuple`2&lt;System.Byte,System.Byte&gt; System.Byte::DivRem(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="Method:System.ValueTuple`2&lt;System.Int16,System.Int16&gt; System.Int16::DivRem(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="Method:System.ValueTuple`2&lt;System.Int32,System.Int32&gt; System.Int32::DivRem(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="Method:System.ValueTuple`2&lt;System.Int64,System.Int64&gt; System.Int64::DivRem(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="Method:System.ValueTuple`2&lt;System.IntPtr,System.IntPtr&gt; System.IntPtr::DivRem(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="Method:System.ValueTuple`2&lt;System.SByte,System.SByte&gt; System.SByte::DivRem(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="Method:System.ValueTuple`2&lt;System.UInt16,System.UInt16&gt; System.UInt16::DivRem(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="Method:System.ValueTuple`2&lt;System.UInt32,System.UInt32&gt; System.UInt32::DivRem(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="Method:System.ValueTuple`2&lt;System.UInt64,System.UInt64&gt; System.UInt64::DivRem(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.Byte System.Byte::LeadingZeroCount(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.LeadingZeroCount(System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.Int16 System.Int16::LeadingZeroCount(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.Int32 System.Int32::LeadingZeroCount(System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.Int64 System.Int64::LeadingZeroCount(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.IntPtr System.IntPtr::LeadingZeroCount(System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.SByte System.SByte::LeadingZeroCount(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.UInt16 System.UInt16::LeadingZeroCount(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.UInt32 System.UInt32::LeadingZeroCount(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::LeadingZeroCount(TSelf)" e="Method:System.UInt64 System.UInt64::LeadingZeroCount(System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.Byte System.Byte::PopCount(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.PopCount(System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.Int16 System.Int16::PopCount(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.Int32 System.Int32::PopCount(System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.Int64 System.Int64::PopCount(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.IntPtr System.IntPtr::PopCount(System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.SByte System.SByte::PopCount(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.UInt16 System.UInt16::PopCount(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.UInt32 System.UInt32::PopCount(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::PopCount(TSelf)" e="Method:System.UInt64 System.UInt64::PopCount(System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.Byte System.Byte::RotateLeft(System.Byte,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.RotateLeft(System.Char,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.Int16 System.Int16::RotateLeft(System.Int16,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.Int32 System.Int32::RotateLeft(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.Int64 System.Int64::RotateLeft(System.Int64,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.IntPtr System.IntPtr::RotateLeft(System.IntPtr,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.SByte System.SByte::RotateLeft(System.SByte,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.UInt16 System.UInt16::RotateLeft(System.UInt16,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.UInt32 System.UInt32::RotateLeft(System.UInt32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateLeft(TSelf,System.Int32)" e="Method:System.UInt64 System.UInt64::RotateLeft(System.UInt64,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.Byte System.Byte::RotateRight(System.Byte,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.RotateRight(System.Char,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.Int16 System.Int16::RotateRight(System.Int16,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.Int32 System.Int32::RotateRight(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.Int64 System.Int64::RotateRight(System.Int64,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.IntPtr System.IntPtr::RotateRight(System.IntPtr,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.SByte System.SByte::RotateRight(System.SByte,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.UInt16 System.UInt16::RotateRight(System.UInt16,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.UInt32 System.UInt32::RotateRight(System.UInt32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::RotateRight(TSelf,System.Int32)" e="Method:System.UInt64 System.UInt64::RotateRight(System.UInt64,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.Byte System.Byte::TrailingZeroCount(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TrailingZeroCount(System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.Int16 System.Int16::TrailingZeroCount(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.Int32 System.Int32::TrailingZeroCount(System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.Int64 System.Int64::TrailingZeroCount(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.IntPtr System.IntPtr::TrailingZeroCount(System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.SByte System.SByte::TrailingZeroCount(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.UInt16 System.UInt16::TrailingZeroCount(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.UInt32 System.UInt32::TrailingZeroCount(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryInteger`1::TrailingZeroCount(TSelf)" e="Method:System.UInt64 System.UInt64::TrailingZeroCount(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Char&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Char&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,TSelf&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt64&amp;)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="Method:System.Int32 System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="Method:System.Int32 System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.GetByteCount()" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeDef:System.Numerics.IBinaryNumber`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.Byte System.Byte::System.Numerics.IBinaryNumber&lt;System.Byte&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.Char System.Char::System.Numerics.IBinaryNumber&lt;System.Char&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.Double System.Double::System.Numerics.IBinaryNumber&lt;System.Double&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.Int16 System.Int16::System.Numerics.IBinaryNumber&lt;System.Int16&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.Int32 System.Int32::System.Numerics.IBinaryNumber&lt;System.Int32&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.Int64 System.Int64::System.Numerics.IBinaryNumber&lt;System.Int64&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.IntPtr System.IntPtr::System.Numerics.IBinaryNumber&lt;nint&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.SByte System.SByte::System.Numerics.IBinaryNumber&lt;System.SByte&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.Single System.Single::System.Numerics.IBinaryNumber&lt;System.Single&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.UInt16 System.UInt16::System.Numerics.IBinaryNumber&lt;System.UInt16&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.UInt32 System.UInt32::System.Numerics.IBinaryNumber&lt;System.UInt32&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Method:System.UInt64 System.UInt64::System.Numerics.IBinaryNumber&lt;System.UInt64&gt;.get_AllBitsSet()" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.Byte::IsPow2(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.IBinaryNumber&lt;System.Char&gt;.IsPow2(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.Double::IsPow2(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.Int16::IsPow2(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.Int32::IsPow2(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.Int64::IsPow2(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.IntPtr::IsPow2(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.SByte::IsPow2(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.Single::IsPow2(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.UInt16::IsPow2(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.UInt32::IsPow2(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryNumber`1::IsPow2(TSelf)" e="Method:System.Boolean System.UInt64::IsPow2(System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.Byte System.Byte::Log2(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.Char System.Char::System.Numerics.IBinaryNumber&lt;System.Char&gt;.Log2(System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.Double System.Double::Log2(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.Int16 System.Int16::Log2(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.Int32 System.Int32::Log2(System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.Int64 System.Int64::Log2(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.IntPtr System.IntPtr::Log2(System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.SByte System.SByte::Log2(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.Single System.Single::Log2(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.UInt16 System.UInt16::Log2(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.UInt32 System.UInt32::Log2(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::Log2(TSelf)" e="Method:System.UInt64 System.UInt64::Log2(System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IBitwiseOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_BitwiseAnd(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IBitwiseOperators&lt;System.Char,System.Char,System.Char&gt;.op_BitwiseAnd(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.Double System.Double::System.Numerics.IBitwiseOperators&lt;System.Double,System.Double,System.Double&gt;.op_BitwiseAnd(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IBitwiseOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_BitwiseAnd(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_BitwiseAnd(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IBitwiseOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_BitwiseAnd(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IBitwiseOperators&lt;nint,nint,nint&gt;.op_BitwiseAnd(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IBitwiseOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_BitwiseAnd(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.Single System.Single::System.Numerics.IBitwiseOperators&lt;System.Single,System.Single,System.Single&gt;.op_BitwiseAnd(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IBitwiseOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_BitwiseAnd(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IBitwiseOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_BitwiseAnd(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseAnd(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IBitwiseOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_BitwiseAnd(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IBitwiseOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_BitwiseOr(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IBitwiseOperators&lt;System.Char,System.Char,System.Char&gt;.op_BitwiseOr(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.Double System.Double::System.Numerics.IBitwiseOperators&lt;System.Double,System.Double,System.Double&gt;.op_BitwiseOr(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IBitwiseOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_BitwiseOr(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_BitwiseOr(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IBitwiseOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_BitwiseOr(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IBitwiseOperators&lt;nint,nint,nint&gt;.op_BitwiseOr(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IBitwiseOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_BitwiseOr(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.Single System.Single::System.Numerics.IBitwiseOperators&lt;System.Single,System.Single,System.Single&gt;.op_BitwiseOr(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IBitwiseOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_BitwiseOr(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IBitwiseOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_BitwiseOr(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_BitwiseOr(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IBitwiseOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_BitwiseOr(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IBitwiseOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_ExclusiveOr(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IBitwiseOperators&lt;System.Char,System.Char,System.Char&gt;.op_ExclusiveOr(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.Double System.Double::System.Numerics.IBitwiseOperators&lt;System.Double,System.Double,System.Double&gt;.op_ExclusiveOr(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IBitwiseOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_ExclusiveOr(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_ExclusiveOr(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IBitwiseOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_ExclusiveOr(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IBitwiseOperators&lt;nint,nint,nint&gt;.op_ExclusiveOr(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IBitwiseOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_ExclusiveOr(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.Single System.Single::System.Numerics.IBitwiseOperators&lt;System.Single,System.Single,System.Single&gt;.op_ExclusiveOr(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IBitwiseOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_ExclusiveOr(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IBitwiseOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_ExclusiveOr(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_ExclusiveOr(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IBitwiseOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_ExclusiveOr(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.Byte System.Byte::System.Numerics.IBitwiseOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_OnesComplement(System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.Char System.Char::System.Numerics.IBitwiseOperators&lt;System.Char,System.Char,System.Char&gt;.op_OnesComplement(System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.Double System.Double::System.Numerics.IBitwiseOperators&lt;System.Double,System.Double,System.Double&gt;.op_OnesComplement(System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.IBitwiseOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_OnesComplement(System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_OnesComplement(System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.IBitwiseOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_OnesComplement(System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IBitwiseOperators&lt;nint,nint,nint&gt;.op_OnesComplement(System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.SByte System.SByte::System.Numerics.IBitwiseOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_OnesComplement(System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.Single System.Single::System.Numerics.IBitwiseOperators&lt;System.Single,System.Single,System.Single&gt;.op_OnesComplement(System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.IBitwiseOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_OnesComplement(System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.IBitwiseOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_OnesComplement(System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IBitwiseOperators`3::op_OnesComplement(TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.IBitwiseOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_OnesComplement(System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.Decimal::op_LessThan(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.Byte::System.Numerics.IComparisonOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_LessThan(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.Char::System.Numerics.IComparisonOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_LessThan(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.Double::op_LessThan(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.Int16::System.Numerics.IComparisonOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_LessThan(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_LessThan(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.Int64::System.Numerics.IComparisonOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_LessThan(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.IntPtr::System.Numerics.IComparisonOperators&lt;nint,nint,System.Boolean&gt;.op_LessThan(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.SByte::System.Numerics.IComparisonOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_LessThan(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.Single::op_LessThan(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.UInt16::System.Numerics.IComparisonOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_LessThan(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.UInt32::System.Numerics.IComparisonOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_LessThan(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThan(TSelf,TOther)" e="Method:System.Boolean System.UInt64::System.Numerics.IComparisonOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_LessThan(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Decimal::op_LessThanOrEqual(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Byte::System.Numerics.IComparisonOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_LessThanOrEqual(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Char::System.Numerics.IComparisonOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_LessThanOrEqual(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Double::op_LessThanOrEqual(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Int16::System.Numerics.IComparisonOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_LessThanOrEqual(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_LessThanOrEqual(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Int64::System.Numerics.IComparisonOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_LessThanOrEqual(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.IntPtr::System.Numerics.IComparisonOperators&lt;nint,nint,System.Boolean&gt;.op_LessThanOrEqual(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.SByte::System.Numerics.IComparisonOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_LessThanOrEqual(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Single::op_LessThanOrEqual(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.UInt16::System.Numerics.IComparisonOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_LessThanOrEqual(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.UInt32::System.Numerics.IComparisonOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_LessThanOrEqual(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_LessThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.UInt64::System.Numerics.IComparisonOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_LessThanOrEqual(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.Decimal::op_GreaterThan(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.Byte::System.Numerics.IComparisonOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_GreaterThan(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.Char::System.Numerics.IComparisonOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_GreaterThan(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.Double::op_GreaterThan(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.Int16::System.Numerics.IComparisonOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_GreaterThan(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_GreaterThan(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.Int64::System.Numerics.IComparisonOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_GreaterThan(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.IntPtr::System.Numerics.IComparisonOperators&lt;nint,nint,System.Boolean&gt;.op_GreaterThan(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.SByte::System.Numerics.IComparisonOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_GreaterThan(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.Single::op_GreaterThan(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.UInt16::System.Numerics.IComparisonOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_GreaterThan(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.UInt32::System.Numerics.IComparisonOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_GreaterThan(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThan(TSelf,TOther)" e="Method:System.Boolean System.UInt64::System.Numerics.IComparisonOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_GreaterThan(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Decimal::op_GreaterThanOrEqual(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Byte::System.Numerics.IComparisonOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_GreaterThanOrEqual(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Char::System.Numerics.IComparisonOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_GreaterThanOrEqual(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Double::op_GreaterThanOrEqual(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Int16::System.Numerics.IComparisonOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_GreaterThanOrEqual(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_GreaterThanOrEqual(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Int64::System.Numerics.IComparisonOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_GreaterThanOrEqual(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.IntPtr::System.Numerics.IComparisonOperators&lt;nint,nint,System.Boolean&gt;.op_GreaterThanOrEqual(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.SByte::System.Numerics.IComparisonOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_GreaterThanOrEqual(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.Single::op_GreaterThanOrEqual(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.UInt16::System.Numerics.IComparisonOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_GreaterThanOrEqual(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.UInt32::System.Numerics.IComparisonOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_GreaterThanOrEqual(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IComparisonOperators`3::op_GreaterThanOrEqual(TSelf,TOther)" e="Method:System.Boolean System.UInt64::System.Numerics.IComparisonOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_GreaterThanOrEqual(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.Decimal System.Decimal::op_Decrement(System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.Byte System.Byte::System.Numerics.IDecrementOperators&lt;System.Byte&gt;.op_Decrement(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.Char System.Char::System.Numerics.IDecrementOperators&lt;System.Char&gt;.op_Decrement(System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.Double System.Double::System.Numerics.IDecrementOperators&lt;System.Double&gt;.op_Decrement(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.IDecrementOperators&lt;System.Int16&gt;.op_Decrement(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.IDecrementOperators&lt;System.Int32&gt;.op_Decrement(System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.IDecrementOperators&lt;System.Int64&gt;.op_Decrement(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IDecrementOperators&lt;nint&gt;.op_Decrement(System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.SByte System.SByte::System.Numerics.IDecrementOperators&lt;System.SByte&gt;.op_Decrement(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.Single System.Single::System.Numerics.IDecrementOperators&lt;System.Single&gt;.op_Decrement(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.IDecrementOperators&lt;System.UInt16&gt;.op_Decrement(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.IDecrementOperators&lt;System.UInt32&gt;.op_Decrement(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_Decrement(TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.IDecrementOperators&lt;System.UInt64&gt;.op_Decrement(System.UInt64)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeDef:System.Numerics.IDecrementOperators`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.Byte System.Byte::System.Numerics.IDecrementOperators&lt;System.Byte&gt;.op_CheckedDecrement(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.Char System.Char::System.Numerics.IDecrementOperators&lt;System.Char&gt;.op_CheckedDecrement(System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.IDecrementOperators&lt;System.Int16&gt;.op_CheckedDecrement(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.IDecrementOperators&lt;System.Int32&gt;.op_CheckedDecrement(System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.IDecrementOperators&lt;System.Int64&gt;.op_CheckedDecrement(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IDecrementOperators&lt;nint&gt;.op_CheckedDecrement(System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.SByte System.SByte::System.Numerics.IDecrementOperators&lt;System.SByte&gt;.op_CheckedDecrement(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.IDecrementOperators&lt;System.UInt16&gt;.op_CheckedDecrement(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.IDecrementOperators&lt;System.UInt32&gt;.op_CheckedDecrement(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IDecrementOperators`1::op_CheckedDecrement(TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.IDecrementOperators&lt;System.UInt64&gt;.op_CheckedDecrement(System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.Decimal System.Decimal::op_Division(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IDivisionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Division(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IDivisionOperators&lt;System.Char,System.Char,System.Char&gt;.op_Division(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.Double System.Double::System.Numerics.IDivisionOperators&lt;System.Double,System.Double,System.Double&gt;.op_Division(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IDivisionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Division(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IDivisionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Division(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IDivisionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Division(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IDivisionOperators&lt;nint,nint,nint&gt;.op_Division(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IDivisionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Division(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.Single System.Single::System.Numerics.IDivisionOperators&lt;System.Single,System.Single,System.Single&gt;.op_Division(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IDivisionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Division(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IDivisionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Division(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IDivisionOperators`3::op_Division(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IDivisionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Division(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.Decimal::op_Equality(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.Byte::System.Numerics.IEqualityOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_Equality(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.Char::System.Numerics.IEqualityOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_Equality(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.Double::op_Equality(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.Int16::System.Numerics.IEqualityOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_Equality(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.Int32::System.Numerics.IEqualityOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_Equality(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.Int64::System.Numerics.IEqualityOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_Equality(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.IntPtr::op_Equality(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.SByte::System.Numerics.IEqualityOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_Equality(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.Single::op_Equality(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.UInt16::System.Numerics.IEqualityOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_Equality(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.UInt32::System.Numerics.IEqualityOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_Equality(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Equality(TSelf,TOther)" e="Method:System.Boolean System.UInt64::System.Numerics.IEqualityOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_Equality(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.Decimal::op_Inequality(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.Byte::System.Numerics.IEqualityOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_Inequality(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.Char::System.Numerics.IEqualityOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_Inequality(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.Double::op_Inequality(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.Int16::System.Numerics.IEqualityOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_Inequality(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.Int32::System.Numerics.IEqualityOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_Inequality(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.Int64::System.Numerics.IEqualityOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_Inequality(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.IntPtr::op_Inequality(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.SByte::System.Numerics.IEqualityOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_Inequality(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.Single::op_Inequality(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.UInt16::System.Numerics.IEqualityOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_Inequality(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.UInt32::System.Numerics.IEqualityOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_Inequality(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IEqualityOperators`3::op_Inequality(TSelf,TOther)" e="Method:System.Boolean System.UInt64::System.Numerics.IEqualityOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_Inequality(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.Decimal System.Decimal::op_Increment(System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.Byte System.Byte::System.Numerics.IIncrementOperators&lt;System.Byte&gt;.op_Increment(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.Char System.Char::System.Numerics.IIncrementOperators&lt;System.Char&gt;.op_Increment(System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.Double System.Double::System.Numerics.IIncrementOperators&lt;System.Double&gt;.op_Increment(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.IIncrementOperators&lt;System.Int16&gt;.op_Increment(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.IIncrementOperators&lt;System.Int32&gt;.op_Increment(System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.IIncrementOperators&lt;System.Int64&gt;.op_Increment(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IIncrementOperators&lt;nint&gt;.op_Increment(System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.SByte System.SByte::System.Numerics.IIncrementOperators&lt;System.SByte&gt;.op_Increment(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.Single System.Single::System.Numerics.IIncrementOperators&lt;System.Single&gt;.op_Increment(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.IIncrementOperators&lt;System.UInt16&gt;.op_Increment(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.IIncrementOperators&lt;System.UInt32&gt;.op_Increment(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_Increment(TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.IIncrementOperators&lt;System.UInt64&gt;.op_Increment(System.UInt64)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeDef:System.Numerics.IIncrementOperators`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.Byte System.Byte::System.Numerics.IIncrementOperators&lt;System.Byte&gt;.op_CheckedIncrement(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.Char System.Char::System.Numerics.IIncrementOperators&lt;System.Char&gt;.op_CheckedIncrement(System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.IIncrementOperators&lt;System.Int16&gt;.op_CheckedIncrement(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.IIncrementOperators&lt;System.Int32&gt;.op_CheckedIncrement(System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.IIncrementOperators&lt;System.Int64&gt;.op_CheckedIncrement(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IIncrementOperators&lt;nint&gt;.op_CheckedIncrement(System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.SByte System.SByte::System.Numerics.IIncrementOperators&lt;System.SByte&gt;.op_CheckedIncrement(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.IIncrementOperators&lt;System.UInt16&gt;.op_CheckedIncrement(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.IIncrementOperators&lt;System.UInt32&gt;.op_CheckedIncrement(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IIncrementOperators`1::op_CheckedIncrement(TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.IIncrementOperators&lt;System.UInt64&gt;.op_CheckedIncrement(System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MinValue()" e="Method:System.Decimal System.Decimal::System.Numerics.IMinMaxValue&lt;System.Decimal&gt;.get_MinValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MinValue()" e="Method:System.Byte System.Byte::System.Numerics.IMinMaxValue&lt;System.Byte&gt;.get_MinValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MinValue()" e="Method:System.Char System.Char::System.Numerics.IMinMaxValue&lt;System.Char&gt;.get_MinValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MinValue()" e="Method:System.Double System.Double::System.Numerics.IMinMaxValue&lt;System.Double&gt;.get_MinValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MinValue()" e="Method:System.Int16 System.Int16::System.Numerics.IMinMaxValue&lt;System.Int16&gt;.get_MinValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MinValue()" e="Method:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.get_MinValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MinValue()" e="Method:System.Int64 System.Int64::System.Numerics.IMinMaxValue&lt;System.Int64&gt;.get_MinValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MinValue()" e="Method:System.IntPtr System.IntPtr::System.Numerics.IMinMaxValue&lt;nint&gt;.get_MinValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MinValue()" e="Method:System.SByte System.SByte::System.Numerics.IMinMaxValue&lt;System.SByte&gt;.get_MinValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MinValue()" e="Method:System.Single System.Single::System.Numerics.IMinMaxValue&lt;System.Single&gt;.get_MinValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MinValue()" e="Method:System.UInt16 System.UInt16::System.Numerics.IMinMaxValue&lt;System.UInt16&gt;.get_MinValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MinValue()" e="Method:System.UInt32 System.UInt32::System.Numerics.IMinMaxValue&lt;System.UInt32&gt;.get_MinValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MinValue()" e="Method:System.UInt64 System.UInt64::System.Numerics.IMinMaxValue&lt;System.UInt64&gt;.get_MinValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MaxValue()" e="Method:System.Decimal System.Decimal::System.Numerics.IMinMaxValue&lt;System.Decimal&gt;.get_MaxValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MaxValue()" e="Method:System.Byte System.Byte::System.Numerics.IMinMaxValue&lt;System.Byte&gt;.get_MaxValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MaxValue()" e="Method:System.Char System.Char::System.Numerics.IMinMaxValue&lt;System.Char&gt;.get_MaxValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MaxValue()" e="Method:System.Double System.Double::System.Numerics.IMinMaxValue&lt;System.Double&gt;.get_MaxValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MaxValue()" e="Method:System.Int16 System.Int16::System.Numerics.IMinMaxValue&lt;System.Int16&gt;.get_MaxValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MaxValue()" e="Method:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.get_MaxValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MaxValue()" e="Method:System.Int64 System.Int64::System.Numerics.IMinMaxValue&lt;System.Int64&gt;.get_MaxValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MaxValue()" e="Method:System.IntPtr System.IntPtr::System.Numerics.IMinMaxValue&lt;nint&gt;.get_MaxValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MaxValue()" e="Method:System.SByte System.SByte::System.Numerics.IMinMaxValue&lt;System.SByte&gt;.get_MaxValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MaxValue()" e="Method:System.Single System.Single::System.Numerics.IMinMaxValue&lt;System.Single&gt;.get_MaxValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MaxValue()" e="Method:System.UInt16 System.UInt16::System.Numerics.IMinMaxValue&lt;System.UInt16&gt;.get_MaxValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MaxValue()" e="Method:System.UInt32 System.UInt32::System.Numerics.IMinMaxValue&lt;System.UInt32&gt;.get_MaxValue()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IMinMaxValue`1::get_MaxValue()" e="Method:System.UInt64 System.UInt64::System.Numerics.IMinMaxValue&lt;System.UInt64&gt;.get_MaxValue()" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.Decimal System.Decimal::op_Modulus(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IModulusOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Modulus(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IModulusOperators&lt;System.Char,System.Char,System.Char&gt;.op_Modulus(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.Double System.Double::System.Numerics.IModulusOperators&lt;System.Double,System.Double,System.Double&gt;.op_Modulus(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IModulusOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Modulus(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IModulusOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Modulus(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IModulusOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Modulus(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IModulusOperators&lt;nint,nint,nint&gt;.op_Modulus(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IModulusOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Modulus(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.Single System.Single::System.Numerics.IModulusOperators&lt;System.Single,System.Single,System.Single&gt;.op_Modulus(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IModulusOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Modulus(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IModulusOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Modulus(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IModulusOperators`3::op_Modulus(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IModulusOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Modulus(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.Decimal System.Decimal::System.Numerics.IMultiplicativeIdentity&lt;System.Decimal,System.Decimal&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.Byte System.Byte::System.Numerics.IMultiplicativeIdentity&lt;System.Byte,System.Byte&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.Char System.Char::System.Numerics.IMultiplicativeIdentity&lt;System.Char,System.Char&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.Double System.Double::System.Numerics.IMultiplicativeIdentity&lt;System.Double,System.Double&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.Int16 System.Int16::System.Numerics.IMultiplicativeIdentity&lt;System.Int16,System.Int16&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.Int32 System.Int32::System.Numerics.IMultiplicativeIdentity&lt;System.Int32,System.Int32&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.Int64 System.Int64::System.Numerics.IMultiplicativeIdentity&lt;System.Int64,System.Int64&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.IntPtr System.IntPtr::System.Numerics.IMultiplicativeIdentity&lt;nint,nint&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.SByte System.SByte::System.Numerics.IMultiplicativeIdentity&lt;System.SByte,System.SByte&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.Single System.Single::System.Numerics.IMultiplicativeIdentity&lt;System.Single,System.Single&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.UInt16 System.UInt16::System.Numerics.IMultiplicativeIdentity&lt;System.UInt16,System.UInt16&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.UInt32 System.UInt32::System.Numerics.IMultiplicativeIdentity&lt;System.UInt32,System.UInt32&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplicativeIdentity`2::get_MultiplicativeIdentity()" e="Method:System.UInt64 System.UInt64::System.Numerics.IMultiplicativeIdentity&lt;System.UInt64,System.UInt64&gt;.get_MultiplicativeIdentity()" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.Decimal System.Decimal::op_Multiply(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IMultiplyOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Multiply(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IMultiplyOperators&lt;System.Char,System.Char,System.Char&gt;.op_Multiply(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.Double System.Double::System.Numerics.IMultiplyOperators&lt;System.Double,System.Double,System.Double&gt;.op_Multiply(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IMultiplyOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Multiply(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IMultiplyOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Multiply(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IMultiplyOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Multiply(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IMultiplyOperators&lt;nint,nint,nint&gt;.op_Multiply(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IMultiplyOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Multiply(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.Single System.Single::System.Numerics.IMultiplyOperators&lt;System.Single,System.Single,System.Single&gt;.op_Multiply(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IMultiplyOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Multiply(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IMultiplyOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Multiply(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_Multiply(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IMultiplyOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Multiply(System.UInt64,System.UInt64)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeDef:System.Numerics.IMultiplyOperators`3" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IMultiplyOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_CheckedMultiply(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IMultiplyOperators&lt;System.Char,System.Char,System.Char&gt;.op_CheckedMultiply(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IMultiplyOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_CheckedMultiply(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IMultiplyOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_CheckedMultiply(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IMultiplyOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_CheckedMultiply(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IMultiplyOperators&lt;nint,nint,nint&gt;.op_CheckedMultiply(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IMultiplyOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_CheckedMultiply(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IMultiplyOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_CheckedMultiply(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IMultiplyOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_CheckedMultiply(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IMultiplyOperators`3::op_CheckedMultiply(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IMultiplyOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_CheckedMultiply(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.Decimal System.Decimal::Clamp(System.Decimal,System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.Byte System.Byte::Clamp(System.Byte,System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.Double System.Double::Clamp(System.Double,System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.Int16 System.Int16::Clamp(System.Int16,System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.Int32 System.Int32::Clamp(System.Int32,System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.Int64 System.Int64::Clamp(System.Int64,System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::Clamp(System.IntPtr,System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.SByte System.SByte::Clamp(System.SByte,System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.Single System.Single::Clamp(System.Single,System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::Clamp(System.UInt16,System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::Clamp(System.UInt32,System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Clamp(TSelf,TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::Clamp(System.UInt64,System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.Decimal System.Decimal::CopySign(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.Byte System.Byte::System.Numerics.INumber&lt;System.Byte&gt;.CopySign(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.Double System.Double::CopySign(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.Int16 System.Int16::CopySign(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.Int32 System.Int32::CopySign(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.Int64 System.Int64::CopySign(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::CopySign(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.SByte System.SByte::CopySign(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.Single System.Single::CopySign(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.INumber&lt;System.UInt16&gt;.CopySign(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.INumber&lt;System.UInt32&gt;.CopySign(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::CopySign(TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.INumber&lt;System.UInt64&gt;.CopySign(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.Decimal System.Decimal::Max(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.Byte System.Byte::Max(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.Double System.Double::Max(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.Int16 System.Int16::Max(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.Int32 System.Int32::Max(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.Int64 System.Int64::Max(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::Max(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.SByte System.SByte::Max(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.Single System.Single::Max(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::Max(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::Max(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Max(TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::Max(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.Decimal System.Decimal::System.Numerics.INumber&lt;System.Decimal&gt;.MaxNumber(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.Byte System.Byte::System.Numerics.INumber&lt;System.Byte&gt;.MaxNumber(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.Double System.Double::MaxNumber(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.INumber&lt;System.Int16&gt;.MaxNumber(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.INumber&lt;System.Int32&gt;.MaxNumber(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.INumber&lt;System.Int64&gt;.MaxNumber(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.INumber&lt;nint&gt;.MaxNumber(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.SByte System.SByte::System.Numerics.INumber&lt;System.SByte&gt;.MaxNumber(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.Single System.Single::MaxNumber(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.INumber&lt;System.UInt16&gt;.MaxNumber(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.INumber&lt;System.UInt32&gt;.MaxNumber(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MaxNumber(TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.INumber&lt;System.UInt64&gt;.MaxNumber(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.Decimal System.Decimal::Min(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.Byte System.Byte::Min(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.Double System.Double::Min(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.Int16 System.Int16::Min(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.Int32 System.Int32::Min(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.Int64 System.Int64::Min(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::Min(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.SByte System.SByte::Min(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.Single System.Single::Min(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::Min(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::Min(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::Min(TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::Min(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.Decimal System.Decimal::System.Numerics.INumber&lt;System.Decimal&gt;.MinNumber(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.Byte System.Byte::System.Numerics.INumber&lt;System.Byte&gt;.MinNumber(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.Double System.Double::MinNumber(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.INumber&lt;System.Int16&gt;.MinNumber(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.INumber&lt;System.Int32&gt;.MinNumber(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.INumber&lt;System.Int64&gt;.MinNumber(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.INumber&lt;nint&gt;.MinNumber(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.SByte System.SByte::System.Numerics.INumber&lt;System.SByte&gt;.MinNumber(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.Single System.Single::MinNumber(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.INumber&lt;System.UInt16&gt;.MinNumber(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.INumber&lt;System.UInt32&gt;.MinNumber(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumber`1::MinNumber(TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.INumber&lt;System.UInt64&gt;.MinNumber(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.Decimal::Sign(System.Decimal)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.Byte::Sign(System.Byte)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.Double::Sign(System.Double)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.Int16::Sign(System.Int16)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.Int32::Sign(System.Int32)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.Int64::Sign(System.Int64)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.IntPtr::Sign(System.IntPtr)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.SByte::Sign(System.SByte)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.Single::Sign(System.Single)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.UInt16::Sign(System.UInt16)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.UInt32::Sign(System.UInt32)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="Method:System.Int32 System.UInt64::Sign(System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.Double System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.Single System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.get_One()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_One()" e="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.get_One()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.get_Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumberBase`1::get_Radix()" e="Method:System.Int32 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.get_Radix()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.Double System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.Single System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::get_Zero()" e="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.get_Zero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.Decimal System.Decimal::Abs(System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.Abs(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.Abs(System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.Double System.Double::Abs(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.Int16 System.Int16::Abs(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.Int32 System.Int32::Abs(System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.Int64 System.Int64::Abs(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.IntPtr System.IntPtr::Abs(System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.SByte System.SByte::Abs(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.Single System.Single::Abs(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.Abs(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.Abs(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Abs(TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.Abs(System.UInt64)" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeDef:System.Numerics.INumberBase`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.Decimal System.Decimal::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.Byte System.Byte::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.Double System.Double::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.Int16 System.Int16::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.Int32 System.Int32::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.Int64 System.Int64::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.IntPtr System.IntPtr::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.SByte System.SByte::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.Single System.Single::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.UInt16 System.UInt16::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.UInt32 System.UInt32::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="Method:System.UInt64 System.UInt64::CreateChecked(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.Decimal System.Decimal::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.Byte System.Byte::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.Double System.Double::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.Int16 System.Int16::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.Int32 System.Int32::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.Int64 System.Int64::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.IntPtr System.IntPtr::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.SByte System.SByte::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.Single System.Single::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.UInt16 System.UInt16::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.UInt32 System.UInt32::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="Method:System.UInt64 System.UInt64::CreateSaturating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.Decimal System.Decimal::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.Byte System.Byte::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.Double System.Double::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.Int16 System.Int16::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.Int32 System.Int32::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.Int64 System.Int64::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.IntPtr System.IntPtr::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.SByte System.SByte::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.Single System.Single::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.UInt16 System.UInt16::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.UInt32 System.UInt32::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="Method:System.UInt64 System.UInt64::CreateTruncating(TOther)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.Decimal::IsCanonical(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsCanonical(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsCanonical(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.IsCanonical(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsCanonical(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsCanonical(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsCanonical(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsCanonical(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsCanonical(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.IsCanonical(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsCanonical(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsCanonical(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsCanonical(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsCanonical(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsComplexNumber(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsComplexNumber(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsComplexNumber(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.IsComplexNumber(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsComplexNumber(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsComplexNumber(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsComplexNumber(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsComplexNumber(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsComplexNumber(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.IsComplexNumber(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsComplexNumber(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsComplexNumber(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsComplexNumber(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsComplexNumber(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.Decimal::IsEvenInteger(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.Byte::IsEvenInteger(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsEvenInteger(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.Double::IsEvenInteger(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.Int16::IsEvenInteger(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.Int32::IsEvenInteger(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.Int64::IsEvenInteger(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.IntPtr::IsEvenInteger(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.SByte::IsEvenInteger(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.Single::IsEvenInteger(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.UInt16::IsEvenInteger(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.UInt32::IsEvenInteger(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsEvenInteger(TSelf)" e="Method:System.Boolean System.UInt64::IsEvenInteger(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsFinite(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsFinite(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsFinite(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.Double::IsFinite(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsFinite(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsFinite(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsFinite(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsFinite(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsFinite(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.Single::IsFinite(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsFinite(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsFinite(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsFinite(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsFinite(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsImaginaryNumber(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsImaginaryNumber(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsImaginaryNumber(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.IsImaginaryNumber(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsImaginaryNumber(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsImaginaryNumber(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsImaginaryNumber(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsImaginaryNumber(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsImaginaryNumber(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.IsImaginaryNumber(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsImaginaryNumber(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsImaginaryNumber(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsImaginaryNumber(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsImaginaryNumber(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsInfinity(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsInfinity(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsInfinity(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.Double::IsInfinity(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsInfinity(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsInfinity(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsInfinity(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsInfinity(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsInfinity(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.Single::IsInfinity(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsInfinity(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsInfinity(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInfinity(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsInfinity(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.Decimal::IsInteger(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsInteger(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsInteger(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.Double::IsInteger(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsInteger(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsInteger(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsInteger(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsInteger(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsInteger(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.Single::IsInteger(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsInteger(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsInteger(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsInteger(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsInteger(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsNaN(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsNaN(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsNaN(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.Double::IsNaN(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsNaN(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsNaN(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsNaN(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsNaN(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsNaN(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.Single::IsNaN(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsNaN(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsNaN(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNaN(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsNaN(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.Decimal::IsNegative(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsNegative(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsNegative(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.Double::IsNegative(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.Int16::IsNegative(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.Int32::IsNegative(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.Int64::IsNegative(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.IntPtr::IsNegative(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.SByte::IsNegative(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.Single::IsNegative(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsNegative(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsNegative(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegative(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsNegative(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsNegativeInfinity(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsNegativeInfinity(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsNegativeInfinity(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.Double::IsNegativeInfinity(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsNegativeInfinity(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsNegativeInfinity(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsNegativeInfinity(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsNegativeInfinity(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsNegativeInfinity(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.Single::IsNegativeInfinity(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsNegativeInfinity(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsNegativeInfinity(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNegativeInfinity(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsNegativeInfinity(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsNormal(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsNormal(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsNormal(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.Double::IsNormal(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsNormal(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsNormal(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsNormal(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsNormal(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsNormal(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.Single::IsNormal(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsNormal(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsNormal(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsNormal(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsNormal(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.Decimal::IsOddInteger(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.Byte::IsOddInteger(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsOddInteger(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.Double::IsOddInteger(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.Int16::IsOddInteger(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.Int32::IsOddInteger(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.Int64::IsOddInteger(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.IntPtr::IsOddInteger(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.SByte::IsOddInteger(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.Single::IsOddInteger(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.UInt16::IsOddInteger(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.UInt32::IsOddInteger(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsOddInteger(TSelf)" e="Method:System.Boolean System.UInt64::IsOddInteger(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.Decimal::IsPositive(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsPositive(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsPositive(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.Double::IsPositive(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.Int16::IsPositive(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.Int32::IsPositive(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.Int64::IsPositive(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.IntPtr::IsPositive(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.SByte::IsPositive(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.Single::IsPositive(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsPositive(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsPositive(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositive(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsPositive(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsPositiveInfinity(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsPositiveInfinity(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsPositiveInfinity(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.Double::IsPositiveInfinity(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsPositiveInfinity(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsPositiveInfinity(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsPositiveInfinity(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsPositiveInfinity(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsPositiveInfinity(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.Single::IsPositiveInfinity(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsPositiveInfinity(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsPositiveInfinity(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsPositiveInfinity(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsPositiveInfinity(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsRealNumber(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsRealNumber(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsRealNumber(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.Double::IsRealNumber(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsRealNumber(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsRealNumber(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsRealNumber(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsRealNumber(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsRealNumber(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.Single::IsRealNumber(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsRealNumber(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsRealNumber(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsRealNumber(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsRealNumber(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsSubnormal(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsSubnormal(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsSubnormal(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.Double::IsSubnormal(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsSubnormal(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsSubnormal(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsSubnormal(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsSubnormal(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsSubnormal(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.Single::IsSubnormal(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsSubnormal(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsSubnormal(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsSubnormal(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsSubnormal(System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsZero(System.Decimal)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsZero(System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsZero(System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.IsZero(System.Double)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsZero(System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsZero(System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsZero(System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsZero(System.IntPtr)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsZero(System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.IsZero(System.Single)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsZero(System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsZero(System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::IsZero(TSelf)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsZero(System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.Decimal System.Decimal::MaxMagnitude(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.MaxMagnitude(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.MaxMagnitude(System.Char,System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.Double System.Double::MaxMagnitude(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.Int16 System.Int16::MaxMagnitude(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.Int32 System.Int32::MaxMagnitude(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.Int64 System.Int64::MaxMagnitude(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::MaxMagnitude(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.SByte System.SByte::MaxMagnitude(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.Single System.Single::MaxMagnitude(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.MaxMagnitude(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.MaxMagnitude(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitude(TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.MaxMagnitude(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.MaxMagnitudeNumber(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.MaxMagnitudeNumber(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.MaxMagnitudeNumber(System.Char,System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.Double System.Double::MaxMagnitudeNumber(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.MaxMagnitudeNumber(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.MaxMagnitudeNumber(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.MaxMagnitudeNumber(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.MaxMagnitudeNumber(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.MaxMagnitudeNumber(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.Single System.Single::MaxMagnitudeNumber(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.MaxMagnitudeNumber(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.MaxMagnitudeNumber(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MaxMagnitudeNumber(TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.MaxMagnitudeNumber(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.Decimal System.Decimal::MinMagnitude(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.MinMagnitude(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.MinMagnitude(System.Char,System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.Double System.Double::MinMagnitude(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.Int16 System.Int16::MinMagnitude(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.Int32 System.Int32::MinMagnitude(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.Int64 System.Int64::MinMagnitude(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::MinMagnitude(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.SByte System.SByte::MinMagnitude(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.Single System.Single::MinMagnitude(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.MinMagnitude(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.MinMagnitude(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitude(TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.MinMagnitude(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.MinMagnitudeNumber(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.MinMagnitudeNumber(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.MinMagnitudeNumber(System.Char,System.Char)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.Double System.Double::MinMagnitudeNumber(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.MinMagnitudeNumber(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.MinMagnitudeNumber(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.MinMagnitudeNumber(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.MinMagnitudeNumber(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.MinMagnitudeNumber(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.Single System.Single::MinMagnitudeNumber(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.MinMagnitudeNumber(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.MinMagnitudeNumber(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::MinMagnitudeNumber(TSelf,TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.MinMagnitudeNumber(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromChecked(TOther,System.Decimal&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromChecked(TOther,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromChecked(TOther,System.Char&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromChecked(TOther,System.Double&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromChecked(TOther,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromChecked(TOther,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromChecked(TOther,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromChecked(TOther,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromChecked(TOther,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromChecked(TOther,System.Single&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromChecked(TOther,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromChecked(TOther,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromChecked(TOther,TSelf&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromChecked(TOther,System.UInt64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromSaturating(TOther,System.Decimal&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromSaturating(TOther,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromSaturating(TOther,System.Char&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromSaturating(TOther,System.Double&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromSaturating(TOther,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromSaturating(TOther,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromSaturating(TOther,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromSaturating(TOther,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromSaturating(TOther,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromSaturating(TOther,System.Single&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromSaturating(TOther,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromSaturating(TOther,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromSaturating(TOther,TSelf&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromSaturating(TOther,System.UInt64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromTruncating(TOther,System.Decimal&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromTruncating(TOther,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromTruncating(TOther,System.Char&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromTruncating(TOther,System.Double&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromTruncating(TOther,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromTruncating(TOther,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromTruncating(TOther,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromTruncating(TOther,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromTruncating(TOther,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromTruncating(TOther,System.Single&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromTruncating(TOther,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromTruncating(TOther,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertFromTruncating(TOther,TSelf&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromTruncating(TOther,System.UInt64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToChecked(System.Decimal,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToChecked(System.Double,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToChecked(System.Int64,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToChecked(System.IntPtr,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToChecked(System.SByte,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToChecked(System.Single,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToChecked(TSelf,TOther&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToChecked(System.UInt64,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToSaturating(System.Decimal,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToSaturating(System.Double,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToSaturating(System.Int64,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToSaturating(System.IntPtr,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToSaturating(System.SByte,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToSaturating(System.Single,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToSaturating(TSelf,TOther&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToSaturating(System.UInt64,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToTruncating(System.Decimal,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToTruncating(System.Double,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToTruncating(System.Int64,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToTruncating(System.IntPtr,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToTruncating(System.SByte,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToTruncating(System.Single,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryConvertToTruncating(TSelf,TOther&amp;)" e="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToTruncating(System.UInt64,TOther&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Decimal::TryParse(System.String,System.IFormatProvider,System.Decimal&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Byte::TryParse(System.String,System.IFormatProvider,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Char::System.IParsable&lt;System.Char&gt;.TryParse(System.String,System.IFormatProvider,System.Char&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Double::TryParse(System.String,System.IFormatProvider,System.Double&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int16::TryParse(System.String,System.IFormatProvider,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int32::TryParse(System.String,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int64::TryParse(System.String,System.IFormatProvider,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::TryParse(System.String,System.IFormatProvider,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.SByte::TryParse(System.String,System.IFormatProvider,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Single::TryParse(System.String,System.IFormatProvider,System.Single&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt16::TryParse(System.String,System.IFormatProvider,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt32::TryParse(System.String,System.IFormatProvider,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IParsable`1::TryParse(System.String,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt64::TryParse(System.String,System.IFormatProvider,System.UInt64&amp;)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IShiftOperators&lt;System.Byte,System.Int32,System.Byte&gt;.op_LeftShift(System.Byte,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IShiftOperators&lt;System.Char,System.Int32,System.Char&gt;.op_LeftShift(System.Char,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IShiftOperators&lt;System.Int16,System.Int32,System.Int16&gt;.op_LeftShift(System.Int16,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_LeftShift(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IShiftOperators&lt;System.Int64,System.Int32,System.Int64&gt;.op_LeftShift(System.Int64,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IShiftOperators&lt;nint,System.Int32,nint&gt;.op_LeftShift(System.IntPtr,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IShiftOperators&lt;System.SByte,System.Int32,System.SByte&gt;.op_LeftShift(System.SByte,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IShiftOperators&lt;System.UInt16,System.Int32,System.UInt16&gt;.op_LeftShift(System.UInt16,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IShiftOperators&lt;System.UInt32,System.Int32,System.UInt32&gt;.op_LeftShift(System.UInt32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_LeftShift(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IShiftOperators&lt;System.UInt64,System.Int32,System.UInt64&gt;.op_LeftShift(System.UInt64,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IShiftOperators&lt;System.Byte,System.Int32,System.Byte&gt;.op_RightShift(System.Byte,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IShiftOperators&lt;System.Char,System.Int32,System.Char&gt;.op_RightShift(System.Char,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IShiftOperators&lt;System.Int16,System.Int32,System.Int16&gt;.op_RightShift(System.Int16,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_RightShift(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IShiftOperators&lt;System.Int64,System.Int32,System.Int64&gt;.op_RightShift(System.Int64,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IShiftOperators&lt;nint,System.Int32,nint&gt;.op_RightShift(System.IntPtr,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IShiftOperators&lt;System.SByte,System.Int32,System.SByte&gt;.op_RightShift(System.SByte,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IShiftOperators&lt;System.UInt16,System.Int32,System.UInt16&gt;.op_RightShift(System.UInt16,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IShiftOperators&lt;System.UInt32,System.Int32,System.UInt32&gt;.op_RightShift(System.UInt32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_RightShift(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IShiftOperators&lt;System.UInt64,System.Int32,System.UInt64&gt;.op_RightShift(System.UInt64,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.IShiftOperators&lt;System.Byte,System.Int32,System.Byte&gt;.op_UnsignedRightShift(System.Byte,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.IShiftOperators&lt;System.Char,System.Int32,System.Char&gt;.op_UnsignedRightShift(System.Char,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.IShiftOperators&lt;System.Int16,System.Int32,System.Int16&gt;.op_UnsignedRightShift(System.Int16,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_UnsignedRightShift(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.IShiftOperators&lt;System.Int64,System.Int32,System.Int64&gt;.op_UnsignedRightShift(System.Int64,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IShiftOperators&lt;nint,System.Int32,nint&gt;.op_UnsignedRightShift(System.IntPtr,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.IShiftOperators&lt;System.SByte,System.Int32,System.SByte&gt;.op_UnsignedRightShift(System.SByte,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.IShiftOperators&lt;System.UInt16,System.Int32,System.UInt16&gt;.op_UnsignedRightShift(System.UInt16,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.IShiftOperators&lt;System.UInt32,System.Int32,System.UInt32&gt;.op_UnsignedRightShift(System.UInt32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IShiftOperators`3::op_UnsignedRightShift(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.IShiftOperators&lt;System.UInt64,System.Int32,System.UInt64&gt;.op_UnsignedRightShift(System.UInt64,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Char System.Char::System.ISpanParsable&lt;System.Char&gt;.Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.ISpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Decimal&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Char::System.ISpanParsable&lt;System.Char&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Char&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Double&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Single&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.ISpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt64&amp;)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.Decimal System.Decimal::op_Subtraction(System.Decimal,System.Decimal)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.ISubtractionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Subtraction(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.ISubtractionOperators&lt;System.Char,System.Char,System.Char&gt;.op_Subtraction(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.Double System.Double::System.Numerics.ISubtractionOperators&lt;System.Double,System.Double,System.Double&gt;.op_Subtraction(System.Double,System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.ISubtractionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Subtraction(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.ISubtractionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Subtraction(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.ISubtractionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Subtraction(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.ISubtractionOperators&lt;nint,nint,nint&gt;.op_Subtraction(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.ISubtractionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Subtraction(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.Single System.Single::System.Numerics.ISubtractionOperators&lt;System.Single,System.Single,System.Single&gt;.op_Subtraction(System.Single,System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.ISubtractionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Subtraction(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.ISubtractionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Subtraction(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_Subtraction(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.ISubtractionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Subtraction(System.UInt64,System.UInt64)" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Decimal,System.Decimal,System.Decimal&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeDef:System.Numerics.ISubtractionOperators`3" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Byte,System.Byte,System.Byte&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Char,System.Char,System.Char&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Double,System.Double,System.Double&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int16,System.Int16,System.Int16&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int32,System.Int32,System.Int32&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Int64,System.Int64,System.Int64&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.IntPtr,System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.SByte,System.SByte,System.SByte&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.Single,System.Single,System.Single&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt16,System.UInt16,System.UInt16&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt32,System.UInt32,System.UInt32&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;System.UInt64,System.UInt64,System.UInt64&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.Byte System.Byte::System.Numerics.ISubtractionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_CheckedSubtraction(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.Char System.Char::System.Numerics.ISubtractionOperators&lt;System.Char,System.Char,System.Char&gt;.op_CheckedSubtraction(System.Char,System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.Int16 System.Int16::System.Numerics.ISubtractionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_CheckedSubtraction(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.Int32 System.Int32::System.Numerics.ISubtractionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_CheckedSubtraction(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.Int64 System.Int64::System.Numerics.ISubtractionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_CheckedSubtraction(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.IntPtr System.IntPtr::System.Numerics.ISubtractionOperators&lt;nint,nint,nint&gt;.op_CheckedSubtraction(System.IntPtr,System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.SByte System.SByte::System.Numerics.ISubtractionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_CheckedSubtraction(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.UInt16 System.UInt16::System.Numerics.ISubtractionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_CheckedSubtraction(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.UInt32 System.UInt32::System.Numerics.ISubtractionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_CheckedSubtraction(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.ISubtractionOperators`3::op_CheckedSubtraction(TSelf,TOther)" e="Method:System.UInt64 System.UInt64::System.Numerics.ISubtractionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_CheckedSubtraction(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.Decimal System.Decimal::op_UnaryNegation(System.Decimal)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.Byte System.Byte::System.Numerics.IUnaryNegationOperators&lt;System.Byte,System.Byte&gt;.op_UnaryNegation(System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.Char System.Char::System.Numerics.IUnaryNegationOperators&lt;System.Char,System.Char&gt;.op_UnaryNegation(System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.Double System.Double::System.Numerics.IUnaryNegationOperators&lt;System.Double,System.Double&gt;.op_UnaryNegation(System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.IUnaryNegationOperators&lt;System.Int16,System.Int16&gt;.op_UnaryNegation(System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.IUnaryNegationOperators&lt;System.Int32,System.Int32&gt;.op_UnaryNegation(System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.IUnaryNegationOperators&lt;System.Int64,System.Int64&gt;.op_UnaryNegation(System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IUnaryNegationOperators&lt;nint,nint&gt;.op_UnaryNegation(System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.SByte System.SByte::System.Numerics.IUnaryNegationOperators&lt;System.SByte,System.SByte&gt;.op_UnaryNegation(System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.Single System.Single::System.Numerics.IUnaryNegationOperators&lt;System.Single,System.Single&gt;.op_UnaryNegation(System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.IUnaryNegationOperators&lt;System.UInt16,System.UInt16&gt;.op_UnaryNegation(System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.IUnaryNegationOperators&lt;System.UInt32,System.UInt32&gt;.op_UnaryNegation(System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_UnaryNegation(TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.IUnaryNegationOperators&lt;System.UInt64,System.UInt64&gt;.op_UnaryNegation(System.UInt64)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Decimal,System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Decimal,System.Decimal&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeDef:System.Numerics.IUnaryNegationOperators`2" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Byte,System.Byte&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Char,System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Char,System.Char&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Double,System.Double&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int16,System.Int16&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int32,System.Int32&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Int64,System.Int64&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.SByte,System.SByte&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.Single,System.Single&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.UInt16,System.UInt16&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.UInt32,System.UInt32&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;System.UInt64,System.UInt64&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.Byte System.Byte::System.Numerics.IUnaryNegationOperators&lt;System.Byte,System.Byte&gt;.op_CheckedUnaryNegation(System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.Char System.Char::System.Numerics.IUnaryNegationOperators&lt;System.Char,System.Char&gt;.op_CheckedUnaryNegation(System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.IUnaryNegationOperators&lt;System.Int16,System.Int16&gt;.op_CheckedUnaryNegation(System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.IUnaryNegationOperators&lt;System.Int32,System.Int32&gt;.op_CheckedUnaryNegation(System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.IUnaryNegationOperators&lt;System.Int64,System.Int64&gt;.op_CheckedUnaryNegation(System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IUnaryNegationOperators&lt;nint,nint&gt;.op_CheckedUnaryNegation(System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.SByte System.SByte::System.Numerics.IUnaryNegationOperators&lt;System.SByte,System.SByte&gt;.op_CheckedUnaryNegation(System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.IUnaryNegationOperators&lt;System.UInt16,System.UInt16&gt;.op_CheckedUnaryNegation(System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.IUnaryNegationOperators&lt;System.UInt32,System.UInt32&gt;.op_CheckedUnaryNegation(System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryNegationOperators`2::op_CheckedUnaryNegation(TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.IUnaryNegationOperators&lt;System.UInt64,System.UInt64&gt;.op_CheckedUnaryNegation(System.UInt64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.Decimal System.Decimal::op_UnaryPlus(System.Decimal)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.Byte System.Byte::System.Numerics.IUnaryPlusOperators&lt;System.Byte,System.Byte&gt;.op_UnaryPlus(System.Byte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.Char System.Char::System.Numerics.IUnaryPlusOperators&lt;System.Char,System.Char&gt;.op_UnaryPlus(System.Char)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.Double System.Double::System.Numerics.IUnaryPlusOperators&lt;System.Double,System.Double&gt;.op_UnaryPlus(System.Double)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.Int16 System.Int16::System.Numerics.IUnaryPlusOperators&lt;System.Int16,System.Int16&gt;.op_UnaryPlus(System.Int16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.Int32 System.Int32::System.Numerics.IUnaryPlusOperators&lt;System.Int32,System.Int32&gt;.op_UnaryPlus(System.Int32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.Int64 System.Int64::System.Numerics.IUnaryPlusOperators&lt;System.Int64,System.Int64&gt;.op_UnaryPlus(System.Int64)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.IntPtr System.IntPtr::System.Numerics.IUnaryPlusOperators&lt;nint,nint&gt;.op_UnaryPlus(System.IntPtr)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.SByte System.SByte::System.Numerics.IUnaryPlusOperators&lt;System.SByte,System.SByte&gt;.op_UnaryPlus(System.SByte)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.Single System.Single::System.Numerics.IUnaryPlusOperators&lt;System.Single,System.Single&gt;.op_UnaryPlus(System.Single)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.UInt16 System.UInt16::System.Numerics.IUnaryPlusOperators&lt;System.UInt16,System.UInt16&gt;.op_UnaryPlus(System.UInt16)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.UInt32 System.UInt32::System.Numerics.IUnaryPlusOperators&lt;System.UInt32,System.UInt32&gt;.op_UnaryPlus(System.UInt32)" />
	<edge mark="1" b="Method:TResult System.Numerics.IUnaryPlusOperators`2::op_UnaryPlus(TSelf)" e="Method:System.UInt64 System.UInt64::System.Numerics.IUnaryPlusOperators&lt;System.UInt64,System.UInt64&gt;.op_UnaryPlus(System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Decimal&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeDef:System.IUtf8SpanParsable`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:TSelf System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Byte&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Char&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Double&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Int16&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Int32&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Int64&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.IntPtr&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.SByte&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.Single&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.UInt16&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.UInt32&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;System.UInt64&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Decimal&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Byte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Double&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.IntPtr&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.SByte&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Single&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt16&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt64&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::get_IsSigned()" e="Method:System.Boolean System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.get_IsSigned()" />
	<edge mark="1" b="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::get_IsSigned()" e="Method:System.Boolean System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.get_IsSigned()" />
	<edge mark="1" b="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::get_IsSigned()" e="Method:System.Boolean System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.get_IsSigned()" />
	<edge mark="1" b="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::get_IsSigned()" e="Method:System.Boolean System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_IsSigned()" />
	<edge mark="1" b="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::get_IsSigned()" e="Method:System.Boolean System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.get_IsSigned()" />
	<edge mark="1" b="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::get_IsSigned()" e="Method:System.Boolean System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.get_IsSigned()" />
	<edge mark="1" b="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::get_IsSigned()" e="Method:System.Boolean System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.get_IsSigned()" />
	<edge mark="1" b="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::get_IsSigned()" e="Method:System.Boolean System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.get_IsSigned()" />
	<edge mark="1" b="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::get_IsSigned()" e="Method:System.Boolean System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.get_IsSigned()" />
	<edge mark="1" b="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxDigitCount()" e="Method:System.Int32 System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.get_MaxDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxDigitCount()" e="Method:System.Int32 System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.get_MaxDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxDigitCount()" e="Method:System.Int32 System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.get_MaxDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxDigitCount()" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxDigitCount()" e="Method:System.Int32 System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.get_MaxDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxDigitCount()" e="Method:System.Int32 System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.get_MaxDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxDigitCount()" e="Method:System.Int32 System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.get_MaxDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxDigitCount()" e="Method:System.Int32 System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.get_MaxDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxDigitCount()" e="Method:System.Int32 System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.get_MaxDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxHexDigitCount()" e="Method:System.Int32 System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.get_MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxHexDigitCount()" e="Method:System.Int32 System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.get_MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxHexDigitCount()" e="Method:System.Int32 System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.get_MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxHexDigitCount()" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxHexDigitCount()" e="Method:System.Int32 System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.get_MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxHexDigitCount()" e="Method:System.Int32 System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.get_MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxHexDigitCount()" e="Method:System.Int32 System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.get_MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxHexDigitCount()" e="Method:System.Int32 System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.get_MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.IBinaryIntegerParseAndFormatInfo`1::get_MaxHexDigitCount()" e="Method:System.Int32 System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.get_MaxHexDigitCount()" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::get_MaxValueDiv10()" e="Method:System.Byte System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.get_MaxValueDiv10()" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::get_MaxValueDiv10()" e="Method:System.Char System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.get_MaxValueDiv10()" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::get_MaxValueDiv10()" e="Method:System.Int16 System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.get_MaxValueDiv10()" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::get_MaxValueDiv10()" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxValueDiv10()" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::get_MaxValueDiv10()" e="Method:System.Int64 System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.get_MaxValueDiv10()" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::get_MaxValueDiv10()" e="Method:System.SByte System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.get_MaxValueDiv10()" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::get_MaxValueDiv10()" e="Method:System.UInt16 System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.get_MaxValueDiv10()" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::get_MaxValueDiv10()" e="Method:System.UInt32 System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.get_MaxValueDiv10()" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::get_MaxValueDiv10()" e="Method:System.UInt64 System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.get_MaxValueDiv10()" />
	<edge mark="1" b="Method:System.String System.IBinaryIntegerParseAndFormatInfo`1::get_OverflowMessage()" e="Method:System.String System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.get_OverflowMessage()" />
	<edge mark="1" b="Method:System.String System.IBinaryIntegerParseAndFormatInfo`1::get_OverflowMessage()" e="Method:System.String System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.get_OverflowMessage()" />
	<edge mark="1" b="Method:System.String System.IBinaryIntegerParseAndFormatInfo`1::get_OverflowMessage()" e="Method:System.String System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.get_OverflowMessage()" />
	<edge mark="1" b="Method:System.String System.IBinaryIntegerParseAndFormatInfo`1::get_OverflowMessage()" e="Method:System.String System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_OverflowMessage()" />
	<edge mark="1" b="Method:System.String System.IBinaryIntegerParseAndFormatInfo`1::get_OverflowMessage()" e="Method:System.String System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.get_OverflowMessage()" />
	<edge mark="1" b="Method:System.String System.IBinaryIntegerParseAndFormatInfo`1::get_OverflowMessage()" e="Method:System.String System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.get_OverflowMessage()" />
	<edge mark="1" b="Method:System.String System.IBinaryIntegerParseAndFormatInfo`1::get_OverflowMessage()" e="Method:System.String System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.get_OverflowMessage()" />
	<edge mark="1" b="Method:System.String System.IBinaryIntegerParseAndFormatInfo`1::get_OverflowMessage()" e="Method:System.String System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.get_OverflowMessage()" />
	<edge mark="1" b="Method:System.String System.IBinaryIntegerParseAndFormatInfo`1::get_OverflowMessage()" e="Method:System.String System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.get_OverflowMessage()" />
	<edge mark="1" b="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::IsGreaterThanAsUnsigned(TSelf,TSelf)" e="Method:System.Boolean System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.IsGreaterThanAsUnsigned(System.Byte,System.Byte)" />
	<edge mark="1" b="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::IsGreaterThanAsUnsigned(TSelf,TSelf)" e="Method:System.Boolean System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.IsGreaterThanAsUnsigned(System.Char,System.Char)" />
	<edge mark="1" b="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::IsGreaterThanAsUnsigned(TSelf,TSelf)" e="Method:System.Boolean System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.IsGreaterThanAsUnsigned(System.Int16,System.Int16)" />
	<edge mark="1" b="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::IsGreaterThanAsUnsigned(TSelf,TSelf)" e="Method:System.Boolean System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.IsGreaterThanAsUnsigned(System.Int32,System.Int32)" />
	<edge mark="1" b="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::IsGreaterThanAsUnsigned(TSelf,TSelf)" e="Method:System.Boolean System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.IsGreaterThanAsUnsigned(System.Int64,System.Int64)" />
	<edge mark="1" b="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::IsGreaterThanAsUnsigned(TSelf,TSelf)" e="Method:System.Boolean System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.IsGreaterThanAsUnsigned(System.SByte,System.SByte)" />
	<edge mark="1" b="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::IsGreaterThanAsUnsigned(TSelf,TSelf)" e="Method:System.Boolean System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.IsGreaterThanAsUnsigned(System.UInt16,System.UInt16)" />
	<edge mark="1" b="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::IsGreaterThanAsUnsigned(TSelf,TSelf)" e="Method:System.Boolean System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.IsGreaterThanAsUnsigned(System.UInt32,System.UInt32)" />
	<edge mark="1" b="Method:System.Boolean System.IBinaryIntegerParseAndFormatInfo`1::IsGreaterThanAsUnsigned(TSelf,TSelf)" e="Method:System.Boolean System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.IsGreaterThanAsUnsigned(System.UInt64,System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy10(TSelf)" e="Method:System.Byte System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.MultiplyBy10(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy10(TSelf)" e="Method:System.Char System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.MultiplyBy10(System.Char)" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy10(TSelf)" e="Method:System.Int16 System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.MultiplyBy10(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy10(TSelf)" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.MultiplyBy10(System.Int32)" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy10(TSelf)" e="Method:System.Int64 System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.MultiplyBy10(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy10(TSelf)" e="Method:System.SByte System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.MultiplyBy10(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy10(TSelf)" e="Method:System.UInt16 System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.MultiplyBy10(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy10(TSelf)" e="Method:System.UInt32 System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.MultiplyBy10(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy10(TSelf)" e="Method:System.UInt64 System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.MultiplyBy10(System.UInt64)" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy16(TSelf)" e="Method:System.Byte System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.MultiplyBy16(System.Byte)" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy16(TSelf)" e="Method:System.Char System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.MultiplyBy16(System.Char)" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy16(TSelf)" e="Method:System.Int16 System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.MultiplyBy16(System.Int16)" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy16(TSelf)" e="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.MultiplyBy16(System.Int32)" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy16(TSelf)" e="Method:System.Int64 System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.MultiplyBy16(System.Int64)" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy16(TSelf)" e="Method:System.SByte System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.MultiplyBy16(System.SByte)" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy16(TSelf)" e="Method:System.UInt16 System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.MultiplyBy16(System.UInt16)" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy16(TSelf)" e="Method:System.UInt32 System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.MultiplyBy16(System.UInt32)" />
	<edge mark="1" b="Method:TSelf System.IBinaryIntegerParseAndFormatInfo`1::MultiplyBy16(TSelf)" e="Method:System.UInt64 System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.MultiplyBy16(System.UInt64)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="TypeDef:System.Numerics.IFloatingPoint`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Ceiling(TSelf)" e="Method:System.Decimal System.Decimal::Ceiling(System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Ceiling(TSelf)" e="Method:System.Double System.Double::Ceiling(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Ceiling(TSelf)" e="Method:System.Single System.Single::Ceiling(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Floor(TSelf)" e="Method:System.Decimal System.Decimal::Floor(System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Floor(TSelf)" e="Method:System.Double System.Double::Floor(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Floor(TSelf)" e="Method:System.Single System.Single::Floor(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf)" e="Method:System.Decimal System.Decimal::Round(System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf)" e="Method:System.Double System.Double::Round(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf)" e="Method:System.Single System.Single::Round(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf,System.Int32)" e="Method:System.Decimal System.Decimal::Round(System.Decimal,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf,System.Int32)" e="Method:System.Double System.Double::Round(System.Double,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf,System.Int32)" e="Method:System.Single System.Single::Round(System.Single,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf,System.MidpointRounding)" e="Method:System.Decimal System.Decimal::Round(System.Decimal,System.MidpointRounding)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf,System.MidpointRounding)" e="Method:System.Double System.Double::Round(System.Double,System.MidpointRounding)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf,System.MidpointRounding)" e="Method:System.Single System.Single::Round(System.Single,System.MidpointRounding)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf,System.Int32,System.MidpointRounding)" e="Method:System.Decimal System.Decimal::Round(System.Decimal,System.Int32,System.MidpointRounding)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf,System.Int32,System.MidpointRounding)" e="Method:System.Double System.Double::Round(System.Double,System.Int32,System.MidpointRounding)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Round(TSelf,System.Int32,System.MidpointRounding)" e="Method:System.Single System.Single::Round(System.Single,System.Int32,System.MidpointRounding)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Truncate(TSelf)" e="Method:System.Decimal System.Decimal::Truncate(System.Decimal)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Truncate(TSelf)" e="Method:System.Double System.Double::Truncate(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPoint`1::Truncate(TSelf)" e="Method:System.Single System.Single::Truncate(System.Single)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentByteCount()" e="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetExponentByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentByteCount()" e="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetExponentByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentByteCount()" e="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetExponentByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentShortestBitLength()" e="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetExponentShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentShortestBitLength()" e="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetExponentShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentShortestBitLength()" e="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetExponentShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandByteCount()" e="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetSignificandByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandByteCount()" e="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetSignificandByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandByteCount()" e="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetSignificandByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandBitLength()" e="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetSignificandBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandBitLength()" e="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetSignificandBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandBitLength()" e="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetSignificandBitLength()" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointConstants`1::get_E()" e="Method:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.get_E()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointConstants`1::get_E()" e="Method:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.get_E()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointConstants`1::get_E()" e="Method:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.get_E()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointConstants`1::get_Pi()" e="Method:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.get_Pi()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointConstants`1::get_Pi()" e="Method:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.get_Pi()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointConstants`1::get_Pi()" e="Method:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.get_Pi()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointConstants`1::get_Tau()" e="Method:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.get_Tau()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointConstants`1::get_Tau()" e="Method:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.get_Tau()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointConstants`1::get_Tau()" e="Method:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.get_Tau()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IExponentialFunctions`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IExponentialFunctions`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IExponentialFunctions`1" />
	<edge mark="1" b="TypeDef:System.Numerics.IExponentialFunctions`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IExponentialFunctions`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IExponentialFunctions`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IExponentialFunctions`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::ExpM1(TSelf)" e="Method:System.Double System.Double::ExpM1(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::ExpM1(TSelf)" e="Method:System.Single System.Single::ExpM1(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp2(TSelf)" e="Method:System.Double System.Double::Exp2(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp2(TSelf)" e="Method:System.Single System.Single::Exp2(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp2M1(TSelf)" e="Method:System.Double System.Double::Exp2M1(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp2M1(TSelf)" e="Method:System.Single System.Single::Exp2M1(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp10(TSelf)" e="Method:System.Double System.Double::Exp10(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp10(TSelf)" e="Method:System.Single System.Single::Exp10(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp10M1(TSelf)" e="Method:System.Double System.Double::Exp10M1(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp10M1(TSelf)" e="Method:System.Single System.Single::Exp10M1(System.Single)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPointIeee754`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPointIeee754`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPointIeee754`1" />
	<edge mark="1" b="TypeDef:System.Numerics.IFloatingPointIeee754`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPointIeee754`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPointIeee754`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPointIeee754`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::Lerp(TSelf,TSelf,TSelf)" e="Method:System.Double System.Double::Lerp(System.Double,System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::Lerp(TSelf,TSelf,TSelf)" e="Method:System.Single System.Single::Lerp(System.Single,System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::ReciprocalEstimate(TSelf)" e="Method:System.Double System.Double::ReciprocalEstimate(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::ReciprocalEstimate(TSelf)" e="Method:System.Single System.Single::ReciprocalEstimate(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::ReciprocalSqrtEstimate(TSelf)" e="Method:System.Double System.Double::ReciprocalSqrtEstimate(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::ReciprocalSqrtEstimate(TSelf)" e="Method:System.Single System.Single::ReciprocalSqrtEstimate(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::ScaleB(TSelf,System.Int32)" e="Method:System.Double System.Double::ScaleB(System.Double,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::ScaleB(TSelf,System.Int32)" e="Method:System.Single System.Single::ScaleB(System.Single,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Acosh(TSelf)" e="Method:System.Double System.Double::Acosh(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Acosh(TSelf)" e="Method:System.Single System.Single::Acosh(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Asinh(TSelf)" e="Method:System.Double System.Double::Asinh(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Asinh(TSelf)" e="Method:System.Single System.Single::Asinh(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Atanh(TSelf)" e="Method:System.Double System.Double::Atanh(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Atanh(TSelf)" e="Method:System.Single System.Single::Atanh(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Cosh(TSelf)" e="Method:System.Double System.Double::Cosh(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Cosh(TSelf)" e="Method:System.Single System.Single::Cosh(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Sinh(TSelf)" e="Method:System.Double System.Double::Sinh(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Sinh(TSelf)" e="Method:System.Single System.Single::Sinh(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Tanh(TSelf)" e="Method:System.Double System.Double::Tanh(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IHyperbolicFunctions`1::Tanh(TSelf)" e="Method:System.Single System.Single::Tanh(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log(TSelf)" e="Method:System.Double System.Double::Log(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log(TSelf)" e="Method:System.Single System.Single::Log(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log(TSelf,TSelf)" e="Method:System.Double System.Double::Log(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log(TSelf,TSelf)" e="Method:System.Single System.Single::Log(System.Single,System.Single)" />
	<edge mark="1" b="TypeSpec:System.Numerics.ILogarithmicFunctions`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.ILogarithmicFunctions`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.ILogarithmicFunctions`1" />
	<edge mark="1" b="TypeDef:System.Numerics.ILogarithmicFunctions`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.ILogarithmicFunctions`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.ILogarithmicFunctions`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.ILogarithmicFunctions`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::LogP1(TSelf)" e="Method:System.Double System.Double::LogP1(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::LogP1(TSelf)" e="Method:System.Single System.Single::LogP1(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log2P1(TSelf)" e="Method:System.Double System.Double::Log2P1(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log2P1(TSelf)" e="Method:System.Single System.Single::Log2P1(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log10(TSelf)" e="Method:System.Double System.Double::Log10(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log10(TSelf)" e="Method:System.Single System.Single::Log10(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log10P1(TSelf)" e="Method:System.Double System.Double::Log10P1(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ILogarithmicFunctions`1::Log10P1(TSelf)" e="Method:System.Single System.Single::Log10P1(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IPowerFunctions`1::Pow(TSelf,TSelf)" e="Method:System.Double System.Double::Pow(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IPowerFunctions`1::Pow(TSelf,TSelf)" e="Method:System.Single System.Single::Pow(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IRootFunctions`1::Cbrt(TSelf)" e="Method:System.Double System.Double::Cbrt(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IRootFunctions`1::Cbrt(TSelf)" e="Method:System.Single System.Single::Cbrt(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IRootFunctions`1::Hypot(TSelf,TSelf)" e="Method:System.Double System.Double::Hypot(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IRootFunctions`1::Hypot(TSelf,TSelf)" e="Method:System.Single System.Single::Hypot(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IRootFunctions`1::RootN(TSelf,System.Int32)" e="Method:System.Double System.Double::RootN(System.Double,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IRootFunctions`1::RootN(TSelf,System.Int32)" e="Method:System.Single System.Single::RootN(System.Single,System.Int32)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IRootFunctions`1::Sqrt(TSelf)" e="Method:System.Double System.Double::Sqrt(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IRootFunctions`1::Sqrt(TSelf)" e="Method:System.Single System.Single::Sqrt(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Acos(TSelf)" e="Method:System.Double System.Double::Acos(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Acos(TSelf)" e="Method:System.Single System.Single::Acos(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::AcosPi(TSelf)" e="Method:System.Double System.Double::AcosPi(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::AcosPi(TSelf)" e="Method:System.Single System.Single::AcosPi(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Asin(TSelf)" e="Method:System.Double System.Double::Asin(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Asin(TSelf)" e="Method:System.Single System.Single::Asin(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::AsinPi(TSelf)" e="Method:System.Double System.Double::AsinPi(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::AsinPi(TSelf)" e="Method:System.Single System.Single::AsinPi(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Atan(TSelf)" e="Method:System.Double System.Double::Atan(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Atan(TSelf)" e="Method:System.Single System.Single::Atan(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::AtanPi(TSelf)" e="Method:System.Double System.Double::AtanPi(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::AtanPi(TSelf)" e="Method:System.Single System.Single::AtanPi(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Cos(TSelf)" e="Method:System.Double System.Double::Cos(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Cos(TSelf)" e="Method:System.Single System.Single::Cos(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::CosPi(TSelf)" e="Method:System.Double System.Double::CosPi(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::CosPi(TSelf)" e="Method:System.Single System.Single::CosPi(System.Single)" />
	<edge mark="1" b="TypeSpec:System.Numerics.ITrigonometricFunctions`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.Numerics.ITrigonometricFunctions`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.ITrigonometricFunctions`1" />
	<edge mark="1" b="TypeDef:System.Numerics.ITrigonometricFunctions`1" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeSpec:System.Numerics.ITrigonometricFunctions`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.Numerics.ITrigonometricFunctions`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.ITrigonometricFunctions`1" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::DegreesToRadians(TSelf)" e="Method:System.Double System.Double::DegreesToRadians(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::DegreesToRadians(TSelf)" e="Method:System.Single System.Single::DegreesToRadians(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::RadiansToDegrees(TSelf)" e="Method:System.Double System.Double::RadiansToDegrees(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::RadiansToDegrees(TSelf)" e="Method:System.Single System.Single::RadiansToDegrees(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Sin(TSelf)" e="Method:System.Double System.Double::Sin(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Sin(TSelf)" e="Method:System.Single System.Single::Sin(System.Single)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.ITrigonometricFunctions`1::SinCos(TSelf)" e="Method:System.ValueTuple`2&lt;System.Double,System.Double&gt; System.Double::SinCos(System.Double)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.ITrigonometricFunctions`1::SinCos(TSelf)" e="Method:System.ValueTuple`2&lt;System.Single,System.Single&gt; System.Single::SinCos(System.Single)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.ITrigonometricFunctions`1::SinCosPi(TSelf)" e="Method:System.ValueTuple`2&lt;System.Double,System.Double&gt; System.Double::SinCosPi(System.Double)" />
	<edge mark="1" b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.ITrigonometricFunctions`1::SinCosPi(TSelf)" e="Method:System.ValueTuple`2&lt;System.Single,System.Single&gt; System.Single::SinCosPi(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::SinPi(TSelf)" e="Method:System.Double System.Double::SinPi(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::SinPi(TSelf)" e="Method:System.Single System.Single::SinPi(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Tan(TSelf)" e="Method:System.Double System.Double::Tan(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::Tan(TSelf)" e="Method:System.Single System.Single::Tan(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::TanPi(TSelf)" e="Method:System.Double System.Double::TanPi(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ITrigonometricFunctions`1::TanPi(TSelf)" e="Method:System.Single System.Single::TanPi(System.Single)" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.Guid::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:TSelf System.Numerics.ISignedNumber`1::get_NegativeOne()" e="Method:System.Decimal System.Decimal::System.Numerics.ISignedNumber&lt;System.Decimal&gt;.get_NegativeOne()" />
	<edge mark="1" b="Method:TSelf System.Numerics.ISignedNumber`1::get_NegativeOne()" e="Method:System.Double System.Double::System.Numerics.ISignedNumber&lt;System.Double&gt;.get_NegativeOne()" />
	<edge mark="1" b="Method:TSelf System.Numerics.ISignedNumber`1::get_NegativeOne()" e="Method:System.Single System.Single::System.Numerics.ISignedNumber&lt;System.Single&gt;.get_NegativeOne()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp(TSelf)" e="Method:System.Double System.Double::Exp(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IExponentialFunctions`1::Exp(TSelf)" e="Method:System.Single System.Single::Exp(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_Epsilon()" e="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_Epsilon()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_Epsilon()" e="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_Epsilon()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_NaN()" e="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_NaN()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_NaN()" e="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_NaN()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_NegativeInfinity()" e="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_NegativeInfinity()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_NegativeInfinity()" e="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_NegativeInfinity()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_NegativeZero()" e="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_NegativeZero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_NegativeZero()" e="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_NegativeZero()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_PositiveInfinity()" e="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_PositiveInfinity()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::get_PositiveInfinity()" e="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_PositiveInfinity()" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::Atan2(TSelf,TSelf)" e="Method:System.Double System.Double::Atan2(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::Atan2(TSelf,TSelf)" e="Method:System.Single System.Single::Atan2(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::Atan2Pi(TSelf,TSelf)" e="Method:System.Double System.Double::Atan2Pi(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::Atan2Pi(TSelf,TSelf)" e="Method:System.Single System.Single::Atan2Pi(System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::BitDecrement(TSelf)" e="Method:System.Double System.Double::BitDecrement(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::BitDecrement(TSelf)" e="Method:System.Single System.Single::BitDecrement(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::BitIncrement(TSelf)" e="Method:System.Double System.Double::BitIncrement(System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::BitIncrement(TSelf)" e="Method:System.Single System.Single::BitIncrement(System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::FusedMultiplyAdd(TSelf,TSelf,TSelf)" e="Method:System.Double System.Double::FusedMultiplyAdd(System.Double,System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::FusedMultiplyAdd(TSelf,TSelf,TSelf)" e="Method:System.Single System.Single::FusedMultiplyAdd(System.Single,System.Single,System.Single)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::Ieee754Remainder(TSelf,TSelf)" e="Method:System.Double System.Double::Ieee754Remainder(System.Double,System.Double)" />
	<edge mark="1" b="Method:TSelf System.Numerics.IFloatingPointIeee754`1::Ieee754Remainder(TSelf,TSelf)" e="Method:System.Single System.Single::Ieee754Remainder(System.Single,System.Single)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPointIeee754`1::ILogB(TSelf)" e="Method:System.Int32 System.Double::ILogB(System.Double)" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPointIeee754`1::ILogB(TSelf)" e="Method:System.Int32 System.Single::ILogB(System.Single)" />
	<edge mark="1" b="Method:System.Int32 System.Single::ILogB(System.Single)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Double::ILogB(System.Double)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Single System.Single::Ieee754Remainder(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Ieee754Remainder(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::FusedMultiplyAdd(System.Single,System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::FusedMultiplyAdd(System.Double,System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::BitIncrement(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::BitIncrement(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::BitDecrement(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::BitDecrement(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Atan2Pi(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Atan2Pi(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Atan2(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Atan2(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_PositiveInfinity()" e="Property:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.PositiveInfinity()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_PositiveInfinity()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_PositiveInfinity()" e="Property:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.PositiveInfinity()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_PositiveInfinity()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_NegativeZero()" e="Property:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.NegativeZero()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_NegativeZero()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_NegativeZero()" e="Property:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.NegativeZero()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_NegativeZero()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_NegativeInfinity()" e="Property:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.NegativeInfinity()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_NegativeInfinity()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_NegativeInfinity()" e="Property:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.NegativeInfinity()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_NegativeInfinity()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_NaN()" e="Property:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.NaN()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_NaN()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_NaN()" e="Property:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.NaN()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_NaN()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_Epsilon()" e="Property:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.Epsilon()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointIeee754&lt;System.Single&gt;.get_Epsilon()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_Epsilon()" e="Property:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.Epsilon()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointIeee754&lt;System.Double&gt;.get_Epsilon()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Exp(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Exp(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.ISignedNumber&lt;System.Single&gt;.get_NegativeOne()" e="Property:System.Single System.Single::System.Numerics.ISignedNumber&lt;System.Single&gt;.NegativeOne()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.ISignedNumber&lt;System.Single&gt;.get_NegativeOne()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.ISignedNumber&lt;System.Double&gt;.get_NegativeOne()" e="Property:System.Double System.Double::System.Numerics.ISignedNumber&lt;System.Double&gt;.NegativeOne()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.ISignedNumber&lt;System.Double&gt;.get_NegativeOne()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.ISignedNumber&lt;System.Decimal&gt;.get_NegativeOne()" e="Property:System.Decimal System.Decimal::System.Numerics.ISignedNumber&lt;System.Decimal&gt;.NegativeOne()" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.ISignedNumber&lt;System.Decimal&gt;.get_NegativeOne()" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Guid::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Guid::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Guid::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Guid::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Guid::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Single System.Single::TanPi(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::TanPi(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Tan(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Tan(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::SinPi(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::SinPi(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="Method:System.ValueTuple`2&lt;System.Single,System.Single&gt; System.Single::SinCosPi(System.Single)" e="TypeSpec:System.ValueTuple`2&lt;System.Single,System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Single,System.Single&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeDef:System.ValueTuple`2" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.TupleElementNamesAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.TupleElementNamesAttribute::.ctor(System.String[])" e="TypeDef:System.Runtime.CompilerServices.TupleElementNamesAttribute" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.TupleElementNamesAttribute::.ctor(System.String[])" e="TypeSpec:System.String[]" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.TupleElementNamesAttribute::.ctor(System.String[])" e="TypeDef:System.Void" />
	<edge b="TypeSpec:System.IEquatable`1&lt;System.ValueTuple`2&lt;T1,T2&gt;&gt;" e="TypeSpec:System.ValueTuple`2&lt;T1,T2&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;T1,T2&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;System.ValueTuple`2&lt;T1,T2&gt;&gt;" e="TypeDef:System.IEquatable`1" />
	<edge b="TypeSpec:System.IComparable`1&lt;System.ValueTuple`2&lt;T1,T2&gt;&gt;" e="TypeSpec:System.ValueTuple`2&lt;T1,T2&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;T1,T2&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;System.ValueTuple`2&lt;T1,T2&gt;&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeDef:System.ValueTuple`2" e="Method:System.Boolean System.ValueTuple`2::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ValueTuple`2" e="Method:System.Int32 System.ValueTuple`2::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ValueTuple`2" e="Method:System.String System.ValueTuple`2::ToString()" />
	<edge mark="1" b="TypeDef:System.ValueTuple`2" e="Method:System.Boolean System.ValueTuple`2::Equals(System.Object)" />
	<edge mark="1" b="TypeDef:System.ValueTuple`2" e="Method:System.Int32 System.ValueTuple`2::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.ValueTuple`2" e="Method:System.String System.ValueTuple`2::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueTuple`2::ToString()" e="Method:System.String System.ValueType::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueType::ToString()" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Method:System.String System.ValueTuple`2::ToString()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.Int32 System.ValueTuple`2::GetHashCode()" e="Method:System.Int32 System.ValueType::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueType::GetHashCode()" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="Method:System.Int32 System.ValueTuple`2::GetHashCode()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.ValueTuple`2::Equals(System.Object)" e="Method:System.Boolean System.ValueType::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueType::Equals(System.Object)" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Method:System.Boolean System.ValueTuple`2::Equals(System.Object)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="Method:System.ValueTuple`2&lt;System.Double,System.Double&gt; System.Double::SinCosPi(System.Double)" e="TypeSpec:System.ValueTuple`2&lt;System.Double,System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Double,System.Double&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Single,System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="Method:System.ValueTuple`2&lt;System.Single,System.Single&gt; System.Single::SinCos(System.Single)" e="TypeSpec:System.ValueTuple`2&lt;System.Single,System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Single,System.Single&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Double,System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="Method:System.ValueTuple`2&lt;System.Double,System.Double&gt; System.Double::SinCos(System.Double)" e="TypeSpec:System.ValueTuple`2&lt;System.Double,System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Double,System.Double&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="Method:System.Single System.Single::Sin(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Sin(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::RadiansToDegrees(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::RadiansToDegrees(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::DegreesToRadians(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::DegreesToRadians(System.Double)" e="TypeDef:System.Double" />
	<edge b="TypeDef:System.Numerics.ITrigonometricFunctions`1" e="TypeSpec:System.Numerics.ITrigonometricFunctions`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.ITrigonometricFunctions`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.ITrigonometricFunctions`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;TSelf&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="Method:System.Single System.Single::CosPi(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::CosPi(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Cos(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Cos(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::AtanPi(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::AtanPi(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Atan(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Atan(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::AsinPi(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::AsinPi(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Asin(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Asin(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::AcosPi(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::AcosPi(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Acos(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Acos(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Sqrt(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Sqrt(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::RootN(System.Single,System.Int32)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::RootN(System.Double,System.Int32)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Hypot(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Hypot(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Cbrt(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Cbrt(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Pow(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Pow(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Log10P1(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Log10P1(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Log10(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Log10(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Log2P1(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Log2P1(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::LogP1(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::LogP1(System.Double)" e="TypeDef:System.Double" />
	<edge b="TypeDef:System.Numerics.ILogarithmicFunctions`1" e="TypeSpec:System.Numerics.ILogarithmicFunctions`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.ILogarithmicFunctions`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.ILogarithmicFunctions`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;TSelf&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="Method:System.Single System.Single::Log(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Log(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Log(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Log(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Tanh(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Tanh(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Sinh(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Sinh(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Cosh(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Cosh(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Atanh(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Atanh(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Asinh(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Asinh(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Acosh(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Acosh(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::ScaleB(System.Single,System.Int32)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::ScaleB(System.Double,System.Int32)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::ReciprocalSqrtEstimate(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::ReciprocalSqrtEstimate(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::ReciprocalEstimate(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::ReciprocalEstimate(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Lerp(System.Single,System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Lerp(System.Double,System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge b="TypeDef:System.Numerics.IFloatingPointIeee754`1" e="TypeSpec:System.Numerics.IFloatingPointIeee754`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPointIeee754`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IFloatingPointIeee754`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IExponentialFunctions`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IExponentialFunctions`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;TSelf&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;TSelf&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.ILogarithmicFunctions`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.ILogarithmicFunctions`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.ITrigonometricFunctions`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.ITrigonometricFunctions`1" />
	<edge mark="1" b="Method:System.Single System.Single::Exp10M1(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Exp10M1(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Exp10(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Exp10(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Exp2M1(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Exp2M1(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::Exp2(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Exp2(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Single System.Single::ExpM1(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::ExpM1(System.Double)" e="TypeDef:System.Double" />
	<edge b="TypeDef:System.Numerics.IExponentialFunctions`1" e="TypeSpec:System.Numerics.IExponentialFunctions`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IExponentialFunctions`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IExponentialFunctions`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;TSelf&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.get_Tau()" e="Property:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.Tau()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.get_Tau()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.get_Tau()" e="Property:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.Tau()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.get_Tau()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.get_Tau()" e="Property:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.Tau()" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.get_Tau()" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.get_Pi()" e="Property:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.Pi()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.get_Pi()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.get_Pi()" e="Property:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.Pi()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.get_Pi()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.get_Pi()" e="Property:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.Pi()" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.get_Pi()" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.get_E()" e="Property:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.E()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IFloatingPointConstants&lt;System.Single&gt;.get_E()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.get_E()" e="Property:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.E()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IFloatingPointConstants&lt;System.Double&gt;.get_E()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.get_E()" e="Property:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.E()" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IFloatingPointConstants&lt;System.Decimal&gt;.get_E()" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteSignificandBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IFloatingPoint`1::TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.TryWriteExponentBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetSignificandBitLength()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetSignificandBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetSignificandBitLength()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetSignificandBitLength()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetSignificandBitLength()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetSignificandBitLength()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetSignificandBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetSignificandBitLength()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetSignificandBitLength()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetSignificandBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetSignificandBitLength()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetSignificandBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetSignificandBitLength()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetSignificandBitLength()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetSignificandBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetSignificandByteCount()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetSignificandByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetSignificandByteCount()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetSignificandByteCount()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetSignificandByteCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetSignificandByteCount()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetSignificandByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetSignificandByteCount()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetSignificandByteCount()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetSignificandByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetSignificandByteCount()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetSignificandByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetSignificandByteCount()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetSignificandByteCount()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetSignificandByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetSignificandByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetExponentShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetExponentShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetExponentShortestBitLength()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetExponentShortestBitLength()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetExponentShortestBitLength()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetExponentShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetExponentShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetExponentShortestBitLength()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetExponentShortestBitLength()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetExponentShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetExponentShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetExponentShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetExponentShortestBitLength()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetExponentShortestBitLength()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetExponentShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetExponentByteCount()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetExponentByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Single" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetExponentByteCount()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Single&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Single&gt;::GetExponentByteCount()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Single::System.Numerics.IFloatingPoint&lt;System.Single&gt;.GetExponentByteCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetExponentByteCount()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetExponentByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Double" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetExponentByteCount()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Double&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Double&gt;::GetExponentByteCount()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Double::System.Numerics.IFloatingPoint&lt;System.Double&gt;.GetExponentByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetExponentByteCount()" e="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetExponentByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Decimal" />
	<edge b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetExponentByteCount()" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IFloatingPoint`1&lt;System.Decimal&gt;::GetExponentByteCount()" e="Method:System.Int32 System.Numerics.IFloatingPoint`1::GetExponentByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::System.Numerics.IFloatingPoint&lt;System.Decimal&gt;.GetExponentByteCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Single System.Single::Truncate(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Truncate(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Truncate(System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeDef:System.MidpointRounding" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Single System.Single::Round(System.Single,System.Int32,System.MidpointRounding)" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeDef:System.MidpointRounding" e="Field:System.Int32 System.MidpointRounding::value__" />
	<edge mark="1" b="Field:System.Int32 System.MidpointRounding::value__" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="Field:System.Int32 System.MidpointRounding::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.MidpointRounding" e="Field:System.MidpointRounding System.MidpointRounding::ToEven" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::ToEven" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::ToEven" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="TypeDef:System.MidpointRounding" e="Field:System.MidpointRounding System.MidpointRounding::AwayFromZero" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::AwayFromZero" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::AwayFromZero" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="TypeDef:System.MidpointRounding" e="Field:System.MidpointRounding System.MidpointRounding::ToZero" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::ToZero" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::ToZero" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="TypeDef:System.MidpointRounding" e="Field:System.MidpointRounding System.MidpointRounding::ToNegativeInfinity" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::ToNegativeInfinity" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::ToNegativeInfinity" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="TypeDef:System.MidpointRounding" e="Field:System.MidpointRounding System.MidpointRounding::ToPositiveInfinity" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::ToPositiveInfinity" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="Field:System.MidpointRounding System.MidpointRounding::ToPositiveInfinity" e="TypeDef:System.MidpointRounding" />
	<edge mark="1" b="Method:System.Double System.Double::Round(System.Double,System.Int32,System.MidpointRounding)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Round(System.Decimal,System.Int32,System.MidpointRounding)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Single System.Single::Round(System.Single,System.MidpointRounding)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Round(System.Double,System.MidpointRounding)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Round(System.Decimal,System.MidpointRounding)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Single System.Single::Round(System.Single,System.Int32)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Round(System.Double,System.Int32)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Round(System.Decimal,System.Int32)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Single System.Single::Round(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Round(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Round(System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Single System.Single::Floor(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Floor(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Floor(System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Single System.Single::Ceiling(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.Double::Ceiling(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Ceiling(System.Decimal)" e="TypeDef:System.Decimal" />
	<edge b="TypeDef:System.Numerics.IFloatingPoint`1" e="TypeSpec:System.Numerics.IFloatingPoint`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IFloatingPoint`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IFloatingPoint`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;TSelf&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;TSelf&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.MultiplyBy16(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.MultiplyBy16(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.MultiplyBy16(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.MultiplyBy16(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.MultiplyBy16(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.MultiplyBy16(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.MultiplyBy16(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Char System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.MultiplyBy16(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.MultiplyBy16(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.MultiplyBy10(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.MultiplyBy10(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.MultiplyBy10(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.MultiplyBy10(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.MultiplyBy10(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.MultiplyBy10(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.MultiplyBy10(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Char System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.MultiplyBy10(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.MultiplyBy10(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.IsGreaterThanAsUnsigned(System.UInt64,System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.IsGreaterThanAsUnsigned(System.UInt32,System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.IsGreaterThanAsUnsigned(System.UInt16,System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.IsGreaterThanAsUnsigned(System.SByte,System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.IsGreaterThanAsUnsigned(System.Int64,System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.IsGreaterThanAsUnsigned(System.Int32,System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.IsGreaterThanAsUnsigned(System.Int16,System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.IsGreaterThanAsUnsigned(System.Char,System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.IsGreaterThanAsUnsigned(System.Byte,System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.String System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.get_OverflowMessage()" e="Property:System.String System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.OverflowMessage()" />
	<edge mark="1" b="Method:System.String System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.get_OverflowMessage()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.get_OverflowMessage()" e="Property:System.String System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.OverflowMessage()" />
	<edge mark="1" b="Method:System.String System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.get_OverflowMessage()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.get_OverflowMessage()" e="Property:System.String System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.OverflowMessage()" />
	<edge mark="1" b="Method:System.String System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.get_OverflowMessage()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.get_OverflowMessage()" e="Property:System.String System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.OverflowMessage()" />
	<edge mark="1" b="Method:System.String System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.get_OverflowMessage()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.get_OverflowMessage()" e="Property:System.String System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.OverflowMessage()" />
	<edge mark="1" b="Method:System.String System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.get_OverflowMessage()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_OverflowMessage()" e="Property:System.String System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.OverflowMessage()" />
	<edge mark="1" b="Method:System.String System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_OverflowMessage()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.get_OverflowMessage()" e="Property:System.String System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.OverflowMessage()" />
	<edge mark="1" b="Method:System.String System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.get_OverflowMessage()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.get_OverflowMessage()" e="Property:System.String System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.OverflowMessage()" />
	<edge mark="1" b="Method:System.String System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.get_OverflowMessage()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.get_OverflowMessage()" e="Property:System.String System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.OverflowMessage()" />
	<edge mark="1" b="Method:System.String System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.get_OverflowMessage()" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.get_MaxValueDiv10()" e="Property:System.UInt64 System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.MaxValueDiv10()" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.get_MaxValueDiv10()" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.get_MaxValueDiv10()" e="Property:System.UInt32 System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.MaxValueDiv10()" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.get_MaxValueDiv10()" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.get_MaxValueDiv10()" e="Property:System.UInt16 System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.MaxValueDiv10()" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.get_MaxValueDiv10()" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.get_MaxValueDiv10()" e="Property:System.SByte System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.MaxValueDiv10()" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.get_MaxValueDiv10()" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.get_MaxValueDiv10()" e="Property:System.Int64 System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.MaxValueDiv10()" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.get_MaxValueDiv10()" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxValueDiv10()" e="Property:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.MaxValueDiv10()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxValueDiv10()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.get_MaxValueDiv10()" e="Property:System.Int16 System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.MaxValueDiv10()" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.get_MaxValueDiv10()" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Char System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.get_MaxValueDiv10()" e="Property:System.Char System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.MaxValueDiv10()" />
	<edge mark="1" b="Method:System.Char System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.get_MaxValueDiv10()" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.get_MaxValueDiv10()" e="Property:System.Byte System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.MaxValueDiv10()" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.get_MaxValueDiv10()" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.get_MaxHexDigitCount()" e="Property:System.Int32 System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.get_MaxHexDigitCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.get_MaxHexDigitCount()" e="Property:System.Int32 System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.get_MaxHexDigitCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.get_MaxHexDigitCount()" e="Property:System.Int32 System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.get_MaxHexDigitCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.get_MaxHexDigitCount()" e="Property:System.Int32 System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.get_MaxHexDigitCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.get_MaxHexDigitCount()" e="Property:System.Int32 System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.get_MaxHexDigitCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxHexDigitCount()" e="Property:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxHexDigitCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.get_MaxHexDigitCount()" e="Property:System.Int32 System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.get_MaxHexDigitCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.get_MaxHexDigitCount()" e="Property:System.Int32 System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.get_MaxHexDigitCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.get_MaxHexDigitCount()" e="Property:System.Int32 System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.MaxHexDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.get_MaxHexDigitCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.get_MaxDigitCount()" e="Property:System.Int32 System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.MaxDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.get_MaxDigitCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.get_MaxDigitCount()" e="Property:System.Int32 System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.MaxDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.get_MaxDigitCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.get_MaxDigitCount()" e="Property:System.Int32 System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.MaxDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.get_MaxDigitCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.get_MaxDigitCount()" e="Property:System.Int32 System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.MaxDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.get_MaxDigitCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.get_MaxDigitCount()" e="Property:System.Int32 System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.MaxDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.get_MaxDigitCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxDigitCount()" e="Property:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.MaxDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_MaxDigitCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.get_MaxDigitCount()" e="Property:System.Int32 System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.MaxDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.get_MaxDigitCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.get_MaxDigitCount()" e="Property:System.Int32 System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.MaxDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.get_MaxDigitCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.get_MaxDigitCount()" e="Property:System.Int32 System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.MaxDigitCount()" />
	<edge mark="1" b="Method:System.Int32 System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.get_MaxDigitCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.get_IsSigned()" e="Property:System.Boolean System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.IsSigned()" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt64&gt;.get_IsSigned()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.get_IsSigned()" e="Property:System.Boolean System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.IsSigned()" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt32&gt;.get_IsSigned()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.get_IsSigned()" e="Property:System.Boolean System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.IsSigned()" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.IBinaryIntegerParseAndFormatInfo&lt;System.UInt16&gt;.get_IsSigned()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.get_IsSigned()" e="Property:System.Boolean System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.IsSigned()" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.IBinaryIntegerParseAndFormatInfo&lt;System.SByte&gt;.get_IsSigned()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.get_IsSigned()" e="Property:System.Boolean System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.IsSigned()" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int64&gt;.get_IsSigned()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_IsSigned()" e="Property:System.Boolean System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.IsSigned()" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int32&gt;.get_IsSigned()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.get_IsSigned()" e="Property:System.Boolean System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.IsSigned()" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.IBinaryIntegerParseAndFormatInfo&lt;System.Int16&gt;.get_IsSigned()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.get_IsSigned()" e="Property:System.Boolean System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.IsSigned()" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.IBinaryIntegerParseAndFormatInfo&lt;System.Char&gt;.get_IsSigned()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.get_IsSigned()" e="Property:System.Boolean System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.IsSigned()" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.IBinaryIntegerParseAndFormatInfo&lt;System.Byte&gt;.get_IsSigned()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.Single&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Single&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.Double&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Double&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.Decimal&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,System.Decimal&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.IUtf8SpanParsable`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider,TSelf&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute::.ctor(System.Boolean)" e="TypeDef:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute::.ctor(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:TSelf System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:TSelf System.Numerics.INumberBase`1::System.IUtf8SpanParsable&lt;TSelf&gt;.Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:TSelf System.IUtf8SpanParsable`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="TypeDef:System.IUtf8SpanParsable`1" e="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Int32 System.Globalization.NumberStyles::value__" />
	<edge mark="1" b="Field:System.Int32 System.Globalization.NumberStyles::value__" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Int32 System.Globalization.NumberStyles::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::None" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::None" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::None" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowLeadingWhite" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowLeadingWhite" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowLeadingWhite" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowTrailingWhite" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowTrailingWhite" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowTrailingWhite" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowLeadingSign" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowLeadingSign" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowLeadingSign" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowTrailingSign" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowTrailingSign" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowTrailingSign" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowParentheses" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowParentheses" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowParentheses" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowDecimalPoint" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowDecimalPoint" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowDecimalPoint" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowThousands" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowThousands" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowThousands" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowExponent" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowExponent" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowExponent" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowCurrencySymbol" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowCurrencySymbol" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowCurrencySymbol" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowHexSpecifier" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowHexSpecifier" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowHexSpecifier" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowBinarySpecifier" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowBinarySpecifier" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::AllowBinarySpecifier" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Integer" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Integer" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Integer" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::HexNumber" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::HexNumber" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::HexNumber" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::BinaryNumber" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::BinaryNumber" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::BinaryNumber" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Number" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Number" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Number" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Float" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Float" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Float" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Currency" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Currency" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Currency" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeDef:System.Globalization.NumberStyles" e="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Any" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Any" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="Field:System.Globalization.NumberStyles System.Globalization.NumberStyles::Any" e="TypeDef:System.Globalization.NumberStyles" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.Single&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.Double&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.Decimal&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeSpec:TSelf&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::TryParse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider,TSelf&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:TSelf System.Numerics.INumberBase`1::Parse(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IUnaryPlusOperators&lt;System.UInt64,System.UInt64&gt;.op_UnaryPlus(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IUnaryPlusOperators&lt;System.UInt32,System.UInt32&gt;.op_UnaryPlus(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IUnaryPlusOperators&lt;System.UInt16,System.UInt16&gt;.op_UnaryPlus(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IUnaryPlusOperators&lt;System.Single,System.Single&gt;.op_UnaryPlus(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IUnaryPlusOperators&lt;System.SByte,System.SByte&gt;.op_UnaryPlus(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IUnaryPlusOperators&lt;nint,nint&gt;.op_UnaryPlus(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IUnaryPlusOperators&lt;System.Int64,System.Int64&gt;.op_UnaryPlus(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IUnaryPlusOperators&lt;System.Int32,System.Int32&gt;.op_UnaryPlus(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IUnaryPlusOperators&lt;System.Int16,System.Int16&gt;.op_UnaryPlus(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IUnaryPlusOperators&lt;System.Double,System.Double&gt;.op_UnaryPlus(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IUnaryPlusOperators&lt;System.Char,System.Char&gt;.op_UnaryPlus(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IUnaryPlusOperators&lt;System.Byte,System.Byte&gt;.op_UnaryPlus(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_UnaryPlus(System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IUnaryNegationOperators&lt;System.UInt64,System.UInt64&gt;.op_CheckedUnaryNegation(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IUnaryNegationOperators&lt;System.UInt32,System.UInt32&gt;.op_CheckedUnaryNegation(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IUnaryNegationOperators&lt;System.UInt16,System.UInt16&gt;.op_CheckedUnaryNegation(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IUnaryNegationOperators&lt;System.SByte,System.SByte&gt;.op_CheckedUnaryNegation(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IUnaryNegationOperators&lt;nint,nint&gt;.op_CheckedUnaryNegation(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IUnaryNegationOperators&lt;System.Int64,System.Int64&gt;.op_CheckedUnaryNegation(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IUnaryNegationOperators&lt;System.Int32,System.Int32&gt;.op_CheckedUnaryNegation(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IUnaryNegationOperators&lt;System.Int16,System.Int16&gt;.op_CheckedUnaryNegation(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IUnaryNegationOperators&lt;System.Char,System.Char&gt;.op_CheckedUnaryNegation(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IUnaryNegationOperators&lt;System.Byte,System.Byte&gt;.op_CheckedUnaryNegation(System.Byte)" e="TypeDef:System.Byte" />
	<edge b="TypeDef:System.Numerics.IUnaryNegationOperators`2" e="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TResult&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TResult&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IUnaryNegationOperators&lt;System.UInt64,System.UInt64&gt;.op_UnaryNegation(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IUnaryNegationOperators&lt;System.UInt32,System.UInt32&gt;.op_UnaryNegation(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IUnaryNegationOperators&lt;System.UInt16,System.UInt16&gt;.op_UnaryNegation(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IUnaryNegationOperators&lt;System.Single,System.Single&gt;.op_UnaryNegation(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IUnaryNegationOperators&lt;System.SByte,System.SByte&gt;.op_UnaryNegation(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IUnaryNegationOperators&lt;nint,nint&gt;.op_UnaryNegation(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IUnaryNegationOperators&lt;System.Int64,System.Int64&gt;.op_UnaryNegation(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IUnaryNegationOperators&lt;System.Int32,System.Int32&gt;.op_UnaryNegation(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IUnaryNegationOperators&lt;System.Int16,System.Int16&gt;.op_UnaryNegation(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IUnaryNegationOperators&lt;System.Double,System.Double&gt;.op_UnaryNegation(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IUnaryNegationOperators&lt;System.Char,System.Char&gt;.op_UnaryNegation(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IUnaryNegationOperators&lt;System.Byte,System.Byte&gt;.op_UnaryNegation(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_UnaryNegation(System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.ISubtractionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_CheckedSubtraction(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.ISubtractionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_CheckedSubtraction(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.ISubtractionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_CheckedSubtraction(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.ISubtractionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_CheckedSubtraction(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.ISubtractionOperators&lt;nint,nint,nint&gt;.op_CheckedSubtraction(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.ISubtractionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_CheckedSubtraction(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.ISubtractionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_CheckedSubtraction(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.ISubtractionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_CheckedSubtraction(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.ISubtractionOperators&lt;System.Char,System.Char,System.Char&gt;.op_CheckedSubtraction(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.ISubtractionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_CheckedSubtraction(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge b="TypeDef:System.Numerics.ISubtractionOperators`3" e="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TOther,TResult&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TOther,TResult&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.ISubtractionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Subtraction(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.ISubtractionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Subtraction(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.ISubtractionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Subtraction(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.ISubtractionOperators&lt;System.Single,System.Single,System.Single&gt;.op_Subtraction(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.ISubtractionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Subtraction(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.ISubtractionOperators&lt;nint,nint,nint&gt;.op_Subtraction(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.ISubtractionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Subtraction(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.ISubtractionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Subtraction(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.ISubtractionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Subtraction(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.ISubtractionOperators&lt;System.Double,System.Double,System.Double&gt;.op_Subtraction(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.ISubtractionOperators&lt;System.Char,System.Char,System.Char&gt;.op_Subtraction(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.ISubtractionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Subtraction(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Subtraction(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.Single&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Single&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.Double&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Double&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Char::System.ISpanParsable&lt;System.Char&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Char&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Char::System.ISpanParsable&lt;System.Char&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Char&amp;)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.ISpanParsable&lt;System.Char&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Char&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.Decimal&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider,System.Decimal&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Char System.Char::System.ISpanParsable&lt;System.Char&gt;.Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Char System.Char::System.ISpanParsable&lt;System.Char&gt;.Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IShiftOperators&lt;System.UInt64,System.Int32,System.UInt64&gt;.op_UnsignedRightShift(System.UInt64,System.Int32)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IShiftOperators&lt;System.UInt32,System.Int32,System.UInt32&gt;.op_UnsignedRightShift(System.UInt32,System.Int32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IShiftOperators&lt;System.UInt16,System.Int32,System.UInt16&gt;.op_UnsignedRightShift(System.UInt16,System.Int32)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IShiftOperators&lt;System.SByte,System.Int32,System.SByte&gt;.op_UnsignedRightShift(System.SByte,System.Int32)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IShiftOperators&lt;nint,System.Int32,nint&gt;.op_UnsignedRightShift(System.IntPtr,System.Int32)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IShiftOperators&lt;System.Int64,System.Int32,System.Int64&gt;.op_UnsignedRightShift(System.Int64,System.Int32)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_UnsignedRightShift(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IShiftOperators&lt;System.Int16,System.Int32,System.Int16&gt;.op_UnsignedRightShift(System.Int16,System.Int32)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IShiftOperators&lt;System.Char,System.Int32,System.Char&gt;.op_UnsignedRightShift(System.Char,System.Int32)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IShiftOperators&lt;System.Byte,System.Int32,System.Byte&gt;.op_UnsignedRightShift(System.Byte,System.Int32)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IShiftOperators&lt;System.UInt64,System.Int32,System.UInt64&gt;.op_RightShift(System.UInt64,System.Int32)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IShiftOperators&lt;System.UInt32,System.Int32,System.UInt32&gt;.op_RightShift(System.UInt32,System.Int32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IShiftOperators&lt;System.UInt16,System.Int32,System.UInt16&gt;.op_RightShift(System.UInt16,System.Int32)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IShiftOperators&lt;System.SByte,System.Int32,System.SByte&gt;.op_RightShift(System.SByte,System.Int32)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IShiftOperators&lt;nint,System.Int32,nint&gt;.op_RightShift(System.IntPtr,System.Int32)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IShiftOperators&lt;System.Int64,System.Int32,System.Int64&gt;.op_RightShift(System.Int64,System.Int32)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_RightShift(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IShiftOperators&lt;System.Int16,System.Int32,System.Int16&gt;.op_RightShift(System.Int16,System.Int32)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IShiftOperators&lt;System.Char,System.Int32,System.Char&gt;.op_RightShift(System.Char,System.Int32)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IShiftOperators&lt;System.Byte,System.Int32,System.Byte&gt;.op_RightShift(System.Byte,System.Int32)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IShiftOperators&lt;System.UInt64,System.Int32,System.UInt64&gt;.op_LeftShift(System.UInt64,System.Int32)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IShiftOperators&lt;System.UInt32,System.Int32,System.UInt32&gt;.op_LeftShift(System.UInt32,System.Int32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IShiftOperators&lt;System.UInt16,System.Int32,System.UInt16&gt;.op_LeftShift(System.UInt16,System.Int32)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IShiftOperators&lt;System.SByte,System.Int32,System.SByte&gt;.op_LeftShift(System.SByte,System.Int32)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IShiftOperators&lt;nint,System.Int32,nint&gt;.op_LeftShift(System.IntPtr,System.Int32)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IShiftOperators&lt;System.Int64,System.Int32,System.Int64&gt;.op_LeftShift(System.Int64,System.Int32)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IShiftOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_LeftShift(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IShiftOperators&lt;System.Int16,System.Int32,System.Int16&gt;.op_LeftShift(System.Int16,System.Int32)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IShiftOperators&lt;System.Char,System.Int32,System.Char&gt;.op_LeftShift(System.Char,System.Int32)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IShiftOperators&lt;System.Byte,System.Int32,System.Byte&gt;.op_LeftShift(System.Byte,System.Int32)" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.String,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::TryParse(System.String,System.IFormatProvider,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.String,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::TryParse(System.String,System.IFormatProvider,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.String,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::TryParse(System.String,System.IFormatProvider,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.String,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.Single&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Single::TryParse(System.String,System.IFormatProvider,System.Single&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.String,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::TryParse(System.String,System.IFormatProvider,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.String,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::TryParse(System.String,System.IFormatProvider,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.String,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::TryParse(System.String,System.IFormatProvider,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.String,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::TryParse(System.String,System.IFormatProvider,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.String,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::TryParse(System.String,System.IFormatProvider,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.String,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.Double&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Double::TryParse(System.String,System.IFormatProvider,System.Double&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Char::System.IParsable&lt;System.Char&gt;.TryParse(System.String,System.IFormatProvider,System.Char&amp;)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.IParsable&lt;System.Char&gt;.TryParse(System.String,System.IFormatProvider,System.Char&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.String,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::TryParse(System.String,System.IFormatProvider,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.String,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.Decimal&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::TryParse(System.String,System.IFormatProvider,System.Decimal&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToTruncating(System.UInt64,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToTruncating(System.UInt64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToTruncating(System.UInt64,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToTruncating(System.UInt32,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToTruncating(System.UInt16,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToTruncating(System.Single,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToTruncating(System.Single,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToTruncating(System.Single,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToTruncating(System.SByte,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToTruncating(System.SByte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToTruncating(System.SByte,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToTruncating(System.IntPtr,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToTruncating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToTruncating(System.IntPtr,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToTruncating(System.Int64,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToTruncating(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToTruncating(System.Int64,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToTruncating(System.Int32,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToTruncating(System.Int16,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToTruncating(System.Double,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToTruncating(System.Double,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToTruncating(System.Double,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToTruncating(System.Char,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToTruncating(System.Byte,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToTruncating(System.Decimal,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToTruncating(System.Decimal,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToTruncating(System.Decimal,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToSaturating(System.UInt64,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToSaturating(System.UInt64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToSaturating(System.UInt64,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToSaturating(System.UInt32,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToSaturating(System.UInt16,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToSaturating(System.Single,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToSaturating(System.Single,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToSaturating(System.Single,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToSaturating(System.SByte,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToSaturating(System.SByte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToSaturating(System.SByte,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToSaturating(System.IntPtr,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToSaturating(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToSaturating(System.IntPtr,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToSaturating(System.Int64,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToSaturating(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToSaturating(System.Int64,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToSaturating(System.Int32,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToSaturating(System.Int16,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToSaturating(System.Double,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToSaturating(System.Double,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToSaturating(System.Double,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToSaturating(System.Char,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToSaturating(System.Byte,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToSaturating(System.Decimal,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToSaturating(System.Decimal,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToSaturating(System.Decimal,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToChecked(System.UInt64,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToChecked(System.UInt64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertToChecked(System.UInt64,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertToChecked(System.UInt32,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertToChecked(System.UInt16,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToChecked(System.Single,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToChecked(System.Single,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertToChecked(System.Single,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToChecked(System.SByte,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToChecked(System.SByte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertToChecked(System.SByte,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToChecked(System.IntPtr,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToChecked(System.IntPtr,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertToChecked(System.IntPtr,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToChecked(System.Int64,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToChecked(System.Int64,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertToChecked(System.Int64,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertToChecked(System.Int32,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertToChecked(System.Int16,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToChecked(System.Double,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToChecked(System.Double,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertToChecked(System.Double,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertToChecked(System.Char,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertToChecked(System.Byte,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToChecked(System.Decimal,TOther&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToChecked(System.Decimal,TOther&amp;)" e="TypeSpec:TOther&amp;:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertToChecked(System.Decimal,TOther&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromTruncating(TOther,System.UInt64&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromTruncating(TOther,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromTruncating(TOther,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromTruncating(TOther,System.UInt32&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromTruncating(TOther,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromTruncating(TOther,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromTruncating(TOther,System.UInt16&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromTruncating(TOther,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromTruncating(TOther,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromTruncating(TOther,System.Single&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromTruncating(TOther,System.Single&amp;)" e="TypeSpec:System.Single&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromTruncating(TOther,System.Single&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromTruncating(TOther,System.SByte&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromTruncating(TOther,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromTruncating(TOther,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromTruncating(TOther,System.IntPtr&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromTruncating(TOther,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromTruncating(TOther,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromTruncating(TOther,System.Int64&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromTruncating(TOther,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromTruncating(TOther,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromTruncating(TOther,System.Int32&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromTruncating(TOther,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromTruncating(TOther,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromTruncating(TOther,System.Int16&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromTruncating(TOther,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromTruncating(TOther,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromTruncating(TOther,System.Double&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromTruncating(TOther,System.Double&amp;)" e="TypeSpec:System.Double&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromTruncating(TOther,System.Double&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromTruncating(TOther,System.Char&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromTruncating(TOther,System.Char&amp;)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromTruncating(TOther,System.Char&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromTruncating(TOther,System.Byte&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromTruncating(TOther,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromTruncating(TOther,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromTruncating(TOther,System.Decimal&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromTruncating(TOther,System.Decimal&amp;)" e="TypeSpec:System.Decimal&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromTruncating(TOther,System.Decimal&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromSaturating(TOther,System.UInt64&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromSaturating(TOther,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromSaturating(TOther,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromSaturating(TOther,System.UInt32&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromSaturating(TOther,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromSaturating(TOther,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromSaturating(TOther,System.UInt16&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromSaturating(TOther,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromSaturating(TOther,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromSaturating(TOther,System.Single&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromSaturating(TOther,System.Single&amp;)" e="TypeSpec:System.Single&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromSaturating(TOther,System.Single&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromSaturating(TOther,System.SByte&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromSaturating(TOther,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromSaturating(TOther,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromSaturating(TOther,System.IntPtr&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromSaturating(TOther,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromSaturating(TOther,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromSaturating(TOther,System.Int64&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromSaturating(TOther,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromSaturating(TOther,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromSaturating(TOther,System.Int32&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromSaturating(TOther,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromSaturating(TOther,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromSaturating(TOther,System.Int16&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromSaturating(TOther,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromSaturating(TOther,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromSaturating(TOther,System.Double&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromSaturating(TOther,System.Double&amp;)" e="TypeSpec:System.Double&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromSaturating(TOther,System.Double&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromSaturating(TOther,System.Char&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromSaturating(TOther,System.Char&amp;)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromSaturating(TOther,System.Char&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromSaturating(TOther,System.Byte&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromSaturating(TOther,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromSaturating(TOther,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromSaturating(TOther,System.Decimal&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromSaturating(TOther,System.Decimal&amp;)" e="TypeSpec:System.Decimal&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromSaturating(TOther,System.Decimal&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromChecked(TOther,System.UInt64&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromChecked(TOther,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.TryConvertFromChecked(TOther,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromChecked(TOther,System.UInt32&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromChecked(TOther,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.TryConvertFromChecked(TOther,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromChecked(TOther,System.UInt16&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromChecked(TOther,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.TryConvertFromChecked(TOther,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromChecked(TOther,System.Single&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromChecked(TOther,System.Single&amp;)" e="TypeSpec:System.Single&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.TryConvertFromChecked(TOther,System.Single&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromChecked(TOther,System.SByte&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromChecked(TOther,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.TryConvertFromChecked(TOther,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromChecked(TOther,System.IntPtr&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromChecked(TOther,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.TryConvertFromChecked(TOther,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromChecked(TOther,System.Int64&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromChecked(TOther,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.TryConvertFromChecked(TOther,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromChecked(TOther,System.Int32&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromChecked(TOther,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.TryConvertFromChecked(TOther,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromChecked(TOther,System.Int16&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromChecked(TOther,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.TryConvertFromChecked(TOther,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromChecked(TOther,System.Double&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromChecked(TOther,System.Double&amp;)" e="TypeSpec:System.Double&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.TryConvertFromChecked(TOther,System.Double&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromChecked(TOther,System.Char&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromChecked(TOther,System.Char&amp;)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryConvertFromChecked(TOther,System.Char&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromChecked(TOther,System.Byte&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromChecked(TOther,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.TryConvertFromChecked(TOther,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromChecked(TOther,System.Decimal&amp;)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromChecked(TOther,System.Decimal&amp;)" e="TypeSpec:System.Decimal&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.TryConvertFromChecked(TOther,System.Decimal&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.MinMagnitudeNumber(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.MinMagnitudeNumber(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.MinMagnitudeNumber(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::MinMagnitudeNumber(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.MinMagnitudeNumber(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.MinMagnitudeNumber(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.MinMagnitudeNumber(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.MinMagnitudeNumber(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.MinMagnitudeNumber(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::MinMagnitudeNumber(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.MinMagnitudeNumber(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.MinMagnitudeNumber(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.MinMagnitudeNumber(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.MinMagnitude(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.MinMagnitude(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.MinMagnitude(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::MinMagnitude(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::MinMagnitude(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::MinMagnitude(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::MinMagnitude(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::MinMagnitude(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::MinMagnitude(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::MinMagnitude(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.MinMagnitude(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.MinMagnitude(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::MinMagnitude(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.MaxMagnitudeNumber(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.MaxMagnitudeNumber(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.MaxMagnitudeNumber(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::MaxMagnitudeNumber(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.MaxMagnitudeNumber(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.MaxMagnitudeNumber(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.MaxMagnitudeNumber(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.MaxMagnitudeNumber(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.MaxMagnitudeNumber(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::MaxMagnitudeNumber(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.MaxMagnitudeNumber(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.MaxMagnitudeNumber(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.MaxMagnitudeNumber(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.MaxMagnitude(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.MaxMagnitude(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.MaxMagnitude(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::MaxMagnitude(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::MaxMagnitude(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::MaxMagnitude(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::MaxMagnitude(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::MaxMagnitude(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::MaxMagnitude(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::MaxMagnitude(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.MaxMagnitude(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.MaxMagnitude(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::MaxMagnitude(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsZero(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsZero(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsZero(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.IsZero(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsZero(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsZero(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsZero(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsZero(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsZero(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.IsZero(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsZero(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsZero(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsZero(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsSubnormal(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsSubnormal(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsSubnormal(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsSubnormal(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsSubnormal(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsSubnormal(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsSubnormal(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsSubnormal(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsSubnormal(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsSubnormal(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsSubnormal(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsSubnormal(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsSubnormal(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsRealNumber(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsRealNumber(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsRealNumber(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsRealNumber(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsRealNumber(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsRealNumber(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsRealNumber(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsRealNumber(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsRealNumber(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsRealNumber(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsRealNumber(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsRealNumber(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsRealNumber(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsPositiveInfinity(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsPositiveInfinity(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsPositiveInfinity(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsPositiveInfinity(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsPositiveInfinity(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsPositiveInfinity(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsPositiveInfinity(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsPositiveInfinity(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsPositiveInfinity(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsPositiveInfinity(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsPositiveInfinity(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsPositiveInfinity(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsPositiveInfinity(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsPositive(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsPositive(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsPositive(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsPositive(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::IsPositive(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::IsPositive(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::IsPositive(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::IsPositive(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::IsPositive(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsPositive(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsPositive(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsPositive(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::IsPositive(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::IsOddInteger(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::IsOddInteger(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::IsOddInteger(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsOddInteger(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::IsOddInteger(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::IsOddInteger(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::IsOddInteger(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::IsOddInteger(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::IsOddInteger(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsOddInteger(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsOddInteger(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::IsOddInteger(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::IsOddInteger(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsNormal(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsNormal(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsNormal(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsNormal(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsNormal(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsNormal(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsNormal(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsNormal(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsNormal(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsNormal(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsNormal(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsNormal(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsNormal(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsNegativeInfinity(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsNegativeInfinity(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsNegativeInfinity(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsNegativeInfinity(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsNegativeInfinity(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsNegativeInfinity(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsNegativeInfinity(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsNegativeInfinity(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsNegativeInfinity(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsNegativeInfinity(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsNegativeInfinity(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsNegativeInfinity(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsNegativeInfinity(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsNegative(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsNegative(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsNegative(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsNegative(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::IsNegative(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::IsNegative(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::IsNegative(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::IsNegative(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::IsNegative(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsNegative(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsNegative(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsNegative(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::IsNegative(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsNaN(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsNaN(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsNaN(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsNaN(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsNaN(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsNaN(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsNaN(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsNaN(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsNaN(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsNaN(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsNaN(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsNaN(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsNaN(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsInteger(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsInteger(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsInteger(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsInteger(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsInteger(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsInteger(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsInteger(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsInteger(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsInteger(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsInteger(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsInteger(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsInteger(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::IsInteger(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsInfinity(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsInfinity(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsInfinity(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsInfinity(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsInfinity(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsInfinity(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsInfinity(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsInfinity(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsInfinity(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsInfinity(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsInfinity(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsInfinity(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsInfinity(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsImaginaryNumber(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsImaginaryNumber(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsImaginaryNumber(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.IsImaginaryNumber(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsImaginaryNumber(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsImaginaryNumber(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsImaginaryNumber(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsImaginaryNumber(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsImaginaryNumber(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.IsImaginaryNumber(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsImaginaryNumber(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsImaginaryNumber(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsImaginaryNumber(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsFinite(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsFinite(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsFinite(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsFinite(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsFinite(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsFinite(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsFinite(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsFinite(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsFinite(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsFinite(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsFinite(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsFinite(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsFinite(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::IsEvenInteger(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::IsEvenInteger(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::IsEvenInteger(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsEvenInteger(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::IsEvenInteger(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::IsEvenInteger(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::IsEvenInteger(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::IsEvenInteger(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::IsEvenInteger(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsEvenInteger(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsEvenInteger(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::IsEvenInteger(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::IsEvenInteger(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsComplexNumber(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsComplexNumber(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsComplexNumber(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.IsComplexNumber(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsComplexNumber(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsComplexNumber(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsComplexNumber(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsComplexNumber(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsComplexNumber(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.IsComplexNumber(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsComplexNumber(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsComplexNumber(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.IsComplexNumber(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.IsCanonical(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.IsCanonical(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.IsCanonical(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.IsCanonical(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.IsCanonical(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.IsCanonical(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.IsCanonical(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.IsCanonical(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.IsCanonical(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.IsCanonical(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.IsCanonical(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.IsCanonical(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::IsCanonical(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.UInt64 System.UInt64::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::CreateTruncating(TOther)" e="TypeDef:System.UInt64" />
	<edge b="Method:System.UInt32 System.UInt32::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::CreateTruncating(TOther)" e="TypeDef:System.UInt32" />
	<edge b="Method:System.UInt16 System.UInt16::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::CreateTruncating(TOther)" e="TypeDef:System.UInt16" />
	<edge b="Method:System.Single System.Single::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Single System.Single::CreateTruncating(TOther)" e="TypeDef:System.Single" />
	<edge b="Method:System.SByte System.SByte::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.SByte System.SByte::CreateTruncating(TOther)" e="TypeDef:System.SByte" />
	<edge b="Method:System.IntPtr System.IntPtr::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::CreateTruncating(TOther)" e="TypeDef:System.IntPtr" />
	<edge b="Method:System.Int64 System.Int64::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Int64 System.Int64::CreateTruncating(TOther)" e="TypeDef:System.Int64" />
	<edge b="Method:System.Int32 System.Int32::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Int32 System.Int32::CreateTruncating(TOther)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int16 System.Int16::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Int16 System.Int16::CreateTruncating(TOther)" e="TypeDef:System.Int16" />
	<edge b="Method:System.Double System.Double::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Double System.Double::CreateTruncating(TOther)" e="TypeDef:System.Double" />
	<edge b="Method:System.Byte System.Byte::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Byte System.Byte::CreateTruncating(TOther)" e="TypeDef:System.Byte" />
	<edge b="Method:System.Decimal System.Decimal::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::CreateTruncating(TOther)" e="TypeDef:System.Decimal" />
	<edge b="Method:TSelf System.Numerics.INumberBase`1::CreateTruncating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.UInt64 System.UInt64::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::CreateSaturating(TOther)" e="TypeDef:System.UInt64" />
	<edge b="Method:System.UInt32 System.UInt32::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::CreateSaturating(TOther)" e="TypeDef:System.UInt32" />
	<edge b="Method:System.UInt16 System.UInt16::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::CreateSaturating(TOther)" e="TypeDef:System.UInt16" />
	<edge b="Method:System.Single System.Single::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Single System.Single::CreateSaturating(TOther)" e="TypeDef:System.Single" />
	<edge b="Method:System.SByte System.SByte::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.SByte System.SByte::CreateSaturating(TOther)" e="TypeDef:System.SByte" />
	<edge b="Method:System.IntPtr System.IntPtr::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::CreateSaturating(TOther)" e="TypeDef:System.IntPtr" />
	<edge b="Method:System.Int64 System.Int64::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Int64 System.Int64::CreateSaturating(TOther)" e="TypeDef:System.Int64" />
	<edge b="Method:System.Int32 System.Int32::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Int32 System.Int32::CreateSaturating(TOther)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int16 System.Int16::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Int16 System.Int16::CreateSaturating(TOther)" e="TypeDef:System.Int16" />
	<edge b="Method:System.Double System.Double::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Double System.Double::CreateSaturating(TOther)" e="TypeDef:System.Double" />
	<edge b="Method:System.Byte System.Byte::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Byte System.Byte::CreateSaturating(TOther)" e="TypeDef:System.Byte" />
	<edge b="Method:System.Decimal System.Decimal::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::CreateSaturating(TOther)" e="TypeDef:System.Decimal" />
	<edge b="Method:TSelf System.Numerics.INumberBase`1::CreateSaturating(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="Method:System.UInt64 System.UInt64::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::CreateChecked(TOther)" e="TypeDef:System.UInt64" />
	<edge b="Method:System.UInt32 System.UInt32::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::CreateChecked(TOther)" e="TypeDef:System.UInt32" />
	<edge b="Method:System.UInt16 System.UInt16::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::CreateChecked(TOther)" e="TypeDef:System.UInt16" />
	<edge b="Method:System.Single System.Single::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Single System.Single::CreateChecked(TOther)" e="TypeDef:System.Single" />
	<edge b="Method:System.SByte System.SByte::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.SByte System.SByte::CreateChecked(TOther)" e="TypeDef:System.SByte" />
	<edge b="Method:System.IntPtr System.IntPtr::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::CreateChecked(TOther)" e="TypeDef:System.IntPtr" />
	<edge b="Method:System.Int64 System.Int64::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Int64 System.Int64::CreateChecked(TOther)" e="TypeDef:System.Int64" />
	<edge b="Method:System.Int32 System.Int32::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Int32 System.Int32::CreateChecked(TOther)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int16 System.Int16::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Int16 System.Int16::CreateChecked(TOther)" e="TypeDef:System.Int16" />
	<edge b="Method:System.Double System.Double::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Double System.Double::CreateChecked(TOther)" e="TypeDef:System.Double" />
	<edge b="Method:System.Byte System.Byte::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Byte System.Byte::CreateChecked(TOther)" e="TypeDef:System.Byte" />
	<edge b="Method:System.Decimal System.Decimal::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::CreateChecked(TOther)" e="TypeDef:System.Decimal" />
	<edge b="Method:TSelf System.Numerics.INumberBase`1::CreateChecked(TOther)" e="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TOther&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge b="TypeDef:System.Numerics.INumberBase`1" e="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;TSelf&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.Abs(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.Abs(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.Abs(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::Abs(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::Abs(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Abs(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Abs(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Abs(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Abs(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::Abs(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.Abs(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.Abs(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Abs(System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.get_Zero()" e="Property:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.Zero()" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.get_Zero()" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.get_Zero()" e="Property:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.Zero()" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.get_Zero()" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.get_Zero()" e="Property:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.Zero()" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.get_Zero()" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.get_Zero()" e="Property:System.Single System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.Zero()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.get_Zero()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.get_Zero()" e="Property:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.Zero()" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.get_Zero()" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.get_Zero()" e="Property:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.Zero()" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.get_Zero()" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.get_Zero()" e="Property:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.Zero()" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.get_Zero()" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Zero()" e="Property:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.Zero()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Zero()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.get_Zero()" e="Property:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.Zero()" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.get_Zero()" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.get_Zero()" e="Property:System.Double System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.Zero()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.get_Zero()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.get_Zero()" e="Property:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.Zero()" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.get_Zero()" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.get_Zero()" e="Property:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.Zero()" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.get_Zero()" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.get_Zero()" e="Property:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.Zero()" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.get_Zero()" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.get_Radix()" e="Property:System.Int32 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.get_Radix()" e="Property:System.Int32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.get_Radix()" e="Property:System.Int32 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.get_Radix()" e="Property:System.Int32 System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.get_Radix()" e="Property:System.Int32 System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.get_Radix()" e="Property:System.Int32 System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.get_Radix()" e="Property:System.Int32 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Radix()" e="Property:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.get_Radix()" e="Property:System.Int32 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.get_Radix()" e="Property:System.Int32 System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.get_Radix()" e="Property:System.Int32 System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.get_Radix()" e="Property:System.Int32 System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.get_Radix()" e="Property:System.Int32 System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.Radix()" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.get_Radix()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.get_One()" e="Property:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.One()" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumberBase&lt;System.UInt64&gt;.get_One()" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.get_One()" e="Property:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.One()" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumberBase&lt;System.UInt32&gt;.get_One()" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.get_One()" e="Property:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.One()" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumberBase&lt;System.UInt16&gt;.get_One()" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.get_One()" e="Property:System.Single System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.One()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.INumberBase&lt;System.Single&gt;.get_One()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.get_One()" e="Property:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.One()" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.INumberBase&lt;System.SByte&gt;.get_One()" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.get_One()" e="Property:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.One()" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.INumberBase&lt;nint&gt;.get_One()" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.get_One()" e="Property:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.One()" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.INumberBase&lt;System.Int64&gt;.get_One()" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_One()" e="Property:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.One()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumberBase&lt;System.Int32&gt;.get_One()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.get_One()" e="Property:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.One()" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.INumberBase&lt;System.Int16&gt;.get_One()" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.get_One()" e="Property:System.Double System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.One()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.INumberBase&lt;System.Double&gt;.get_One()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.get_One()" e="Property:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.One()" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.get_One()" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.get_One()" e="Property:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.One()" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumberBase&lt;System.Byte&gt;.get_One()" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.get_One()" e="Property:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.One()" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.INumberBase&lt;System.Decimal&gt;.get_One()" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::Sign(System.UInt64)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::Sign(System.UInt32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::Sign(System.UInt16)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Single::Sign(System.Single)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.SByte::Sign(System.SByte)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::Sign(System.IntPtr)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int64::Sign(System.Int64)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Sign(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int16::Sign(System.Int16)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Double::Sign(System.Double)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Byte::Sign(System.Byte)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::Sign(System.Decimal)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.INumber`1::Sign(TSelf)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumber&lt;System.UInt64&gt;.MinNumber(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumber&lt;System.UInt32&gt;.MinNumber(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumber&lt;System.UInt16&gt;.MinNumber(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::MinNumber(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.INumber&lt;System.SByte&gt;.MinNumber(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.INumber&lt;nint&gt;.MinNumber(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.INumber&lt;System.Int64&gt;.MinNumber(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumber&lt;System.Int32&gt;.MinNumber(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.INumber&lt;System.Int16&gt;.MinNumber(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::MinNumber(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumber&lt;System.Byte&gt;.MinNumber(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.INumber&lt;System.Decimal&gt;.MinNumber(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Min(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Min(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Min(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::Min(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::Min(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Min(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Min(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Min(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Min(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::Min(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::Min(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Min(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumber&lt;System.UInt64&gt;.MaxNumber(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumber&lt;System.UInt32&gt;.MaxNumber(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumber&lt;System.UInt16&gt;.MaxNumber(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::MaxNumber(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.INumber&lt;System.SByte&gt;.MaxNumber(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.INumber&lt;nint&gt;.MaxNumber(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.INumber&lt;System.Int64&gt;.MaxNumber(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.INumber&lt;System.Int32&gt;.MaxNumber(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.INumber&lt;System.Int16&gt;.MaxNumber(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::MaxNumber(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumber&lt;System.Byte&gt;.MaxNumber(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.INumber&lt;System.Decimal&gt;.MaxNumber(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Max(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Max(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Max(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::Max(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::Max(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Max(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Max(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Max(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Max(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::Max(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::Max(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Max(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.INumber&lt;System.UInt64&gt;.CopySign(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.INumber&lt;System.UInt32&gt;.CopySign(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.INumber&lt;System.UInt16&gt;.CopySign(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::CopySign(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::CopySign(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::CopySign(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::CopySign(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::CopySign(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::CopySign(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::CopySign(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.INumber&lt;System.Byte&gt;.CopySign(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::CopySign(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Clamp(System.UInt64,System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Clamp(System.UInt32,System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Clamp(System.UInt16,System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::Clamp(System.Single,System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::Clamp(System.SByte,System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Clamp(System.IntPtr,System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Clamp(System.Int64,System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Clamp(System.Int32,System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Clamp(System.Int16,System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::Clamp(System.Double,System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Byte System.Byte::Clamp(System.Byte,System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Clamp(System.Decimal,System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IMultiplyOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_CheckedMultiply(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IMultiplyOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_CheckedMultiply(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IMultiplyOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_CheckedMultiply(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IMultiplyOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_CheckedMultiply(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IMultiplyOperators&lt;nint,nint,nint&gt;.op_CheckedMultiply(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IMultiplyOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_CheckedMultiply(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IMultiplyOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_CheckedMultiply(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IMultiplyOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_CheckedMultiply(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IMultiplyOperators&lt;System.Char,System.Char,System.Char&gt;.op_CheckedMultiply(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IMultiplyOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_CheckedMultiply(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge b="TypeDef:System.Numerics.IMultiplyOperators`3" e="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TOther,TResult&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TOther,TResult&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IMultiplyOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Multiply(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IMultiplyOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Multiply(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IMultiplyOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Multiply(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IMultiplyOperators&lt;System.Single,System.Single,System.Single&gt;.op_Multiply(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IMultiplyOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Multiply(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IMultiplyOperators&lt;nint,nint,nint&gt;.op_Multiply(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IMultiplyOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Multiply(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IMultiplyOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Multiply(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IMultiplyOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Multiply(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IMultiplyOperators&lt;System.Double,System.Double,System.Double&gt;.op_Multiply(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IMultiplyOperators&lt;System.Char,System.Char,System.Char&gt;.op_Multiply(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IMultiplyOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Multiply(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Multiply(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IMultiplicativeIdentity&lt;System.UInt64,System.UInt64&gt;.get_MultiplicativeIdentity()" e="Property:System.UInt64 System.UInt64::System.Numerics.IMultiplicativeIdentity&lt;System.UInt64,System.UInt64&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IMultiplicativeIdentity&lt;System.UInt64,System.UInt64&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IMultiplicativeIdentity&lt;System.UInt32,System.UInt32&gt;.get_MultiplicativeIdentity()" e="Property:System.UInt32 System.UInt32::System.Numerics.IMultiplicativeIdentity&lt;System.UInt32,System.UInt32&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IMultiplicativeIdentity&lt;System.UInt32,System.UInt32&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IMultiplicativeIdentity&lt;System.UInt16,System.UInt16&gt;.get_MultiplicativeIdentity()" e="Property:System.UInt16 System.UInt16::System.Numerics.IMultiplicativeIdentity&lt;System.UInt16,System.UInt16&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IMultiplicativeIdentity&lt;System.UInt16,System.UInt16&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IMultiplicativeIdentity&lt;System.Single,System.Single&gt;.get_MultiplicativeIdentity()" e="Property:System.Single System.Single::System.Numerics.IMultiplicativeIdentity&lt;System.Single,System.Single&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IMultiplicativeIdentity&lt;System.Single,System.Single&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IMultiplicativeIdentity&lt;System.SByte,System.SByte&gt;.get_MultiplicativeIdentity()" e="Property:System.SByte System.SByte::System.Numerics.IMultiplicativeIdentity&lt;System.SByte,System.SByte&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IMultiplicativeIdentity&lt;System.SByte,System.SByte&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IMultiplicativeIdentity&lt;nint,nint&gt;.get_MultiplicativeIdentity()" e="Property:System.IntPtr System.IntPtr::System.Numerics.IMultiplicativeIdentity&lt;nint,nint&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IMultiplicativeIdentity&lt;nint,nint&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IMultiplicativeIdentity&lt;System.Int64,System.Int64&gt;.get_MultiplicativeIdentity()" e="Property:System.Int64 System.Int64::System.Numerics.IMultiplicativeIdentity&lt;System.Int64,System.Int64&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IMultiplicativeIdentity&lt;System.Int64,System.Int64&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IMultiplicativeIdentity&lt;System.Int32,System.Int32&gt;.get_MultiplicativeIdentity()" e="Property:System.Int32 System.Int32::System.Numerics.IMultiplicativeIdentity&lt;System.Int32,System.Int32&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IMultiplicativeIdentity&lt;System.Int32,System.Int32&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IMultiplicativeIdentity&lt;System.Int16,System.Int16&gt;.get_MultiplicativeIdentity()" e="Property:System.Int16 System.Int16::System.Numerics.IMultiplicativeIdentity&lt;System.Int16,System.Int16&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IMultiplicativeIdentity&lt;System.Int16,System.Int16&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IMultiplicativeIdentity&lt;System.Double,System.Double&gt;.get_MultiplicativeIdentity()" e="Property:System.Double System.Double::System.Numerics.IMultiplicativeIdentity&lt;System.Double,System.Double&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IMultiplicativeIdentity&lt;System.Double,System.Double&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IMultiplicativeIdentity&lt;System.Char,System.Char&gt;.get_MultiplicativeIdentity()" e="Property:System.Char System.Char::System.Numerics.IMultiplicativeIdentity&lt;System.Char,System.Char&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IMultiplicativeIdentity&lt;System.Char,System.Char&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IMultiplicativeIdentity&lt;System.Byte,System.Byte&gt;.get_MultiplicativeIdentity()" e="Property:System.Byte System.Byte::System.Numerics.IMultiplicativeIdentity&lt;System.Byte,System.Byte&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IMultiplicativeIdentity&lt;System.Byte,System.Byte&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IMultiplicativeIdentity&lt;System.Decimal,System.Decimal&gt;.get_MultiplicativeIdentity()" e="Property:System.Decimal System.Decimal::System.Numerics.IMultiplicativeIdentity&lt;System.Decimal,System.Decimal&gt;.MultiplicativeIdentity()" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IMultiplicativeIdentity&lt;System.Decimal,System.Decimal&gt;.get_MultiplicativeIdentity()" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IModulusOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Modulus(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IModulusOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Modulus(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IModulusOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Modulus(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IModulusOperators&lt;System.Single,System.Single,System.Single&gt;.op_Modulus(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IModulusOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Modulus(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IModulusOperators&lt;nint,nint,nint&gt;.op_Modulus(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IModulusOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Modulus(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IModulusOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Modulus(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IModulusOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Modulus(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IModulusOperators&lt;System.Double,System.Double,System.Double&gt;.op_Modulus(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IModulusOperators&lt;System.Char,System.Char,System.Char&gt;.op_Modulus(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IModulusOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Modulus(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Modulus(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IMinMaxValue&lt;System.UInt64&gt;.get_MaxValue()" e="Property:System.UInt64 System.UInt64::System.Numerics.IMinMaxValue&lt;System.UInt64&gt;.MaxValue()" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IMinMaxValue&lt;System.UInt64&gt;.get_MaxValue()" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IMinMaxValue&lt;System.UInt32&gt;.get_MaxValue()" e="Property:System.UInt32 System.UInt32::System.Numerics.IMinMaxValue&lt;System.UInt32&gt;.MaxValue()" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IMinMaxValue&lt;System.UInt32&gt;.get_MaxValue()" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IMinMaxValue&lt;System.UInt16&gt;.get_MaxValue()" e="Property:System.UInt16 System.UInt16::System.Numerics.IMinMaxValue&lt;System.UInt16&gt;.MaxValue()" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IMinMaxValue&lt;System.UInt16&gt;.get_MaxValue()" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IMinMaxValue&lt;System.Single&gt;.get_MaxValue()" e="Property:System.Single System.Single::System.Numerics.IMinMaxValue&lt;System.Single&gt;.MaxValue()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IMinMaxValue&lt;System.Single&gt;.get_MaxValue()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IMinMaxValue&lt;System.SByte&gt;.get_MaxValue()" e="Property:System.SByte System.SByte::System.Numerics.IMinMaxValue&lt;System.SByte&gt;.MaxValue()" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IMinMaxValue&lt;System.SByte&gt;.get_MaxValue()" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IMinMaxValue&lt;nint&gt;.get_MaxValue()" e="Property:System.IntPtr System.IntPtr::System.Numerics.IMinMaxValue&lt;nint&gt;.MaxValue()" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IMinMaxValue&lt;nint&gt;.get_MaxValue()" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IMinMaxValue&lt;System.Int64&gt;.get_MaxValue()" e="Property:System.Int64 System.Int64::System.Numerics.IMinMaxValue&lt;System.Int64&gt;.MaxValue()" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IMinMaxValue&lt;System.Int64&gt;.get_MaxValue()" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.get_MaxValue()" e="Property:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.MaxValue()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.get_MaxValue()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IMinMaxValue&lt;System.Int16&gt;.get_MaxValue()" e="Property:System.Int16 System.Int16::System.Numerics.IMinMaxValue&lt;System.Int16&gt;.MaxValue()" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IMinMaxValue&lt;System.Int16&gt;.get_MaxValue()" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IMinMaxValue&lt;System.Double&gt;.get_MaxValue()" e="Property:System.Double System.Double::System.Numerics.IMinMaxValue&lt;System.Double&gt;.MaxValue()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IMinMaxValue&lt;System.Double&gt;.get_MaxValue()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IMinMaxValue&lt;System.Char&gt;.get_MaxValue()" e="Property:System.Char System.Char::System.Numerics.IMinMaxValue&lt;System.Char&gt;.MaxValue()" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IMinMaxValue&lt;System.Char&gt;.get_MaxValue()" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IMinMaxValue&lt;System.Byte&gt;.get_MaxValue()" e="Property:System.Byte System.Byte::System.Numerics.IMinMaxValue&lt;System.Byte&gt;.MaxValue()" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IMinMaxValue&lt;System.Byte&gt;.get_MaxValue()" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IMinMaxValue&lt;System.Decimal&gt;.get_MaxValue()" e="Property:System.Decimal System.Decimal::System.Numerics.IMinMaxValue&lt;System.Decimal&gt;.MaxValue()" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IMinMaxValue&lt;System.Decimal&gt;.get_MaxValue()" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IMinMaxValue&lt;System.UInt64&gt;.get_MinValue()" e="Property:System.UInt64 System.UInt64::System.Numerics.IMinMaxValue&lt;System.UInt64&gt;.MinValue()" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IMinMaxValue&lt;System.UInt64&gt;.get_MinValue()" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IMinMaxValue&lt;System.UInt32&gt;.get_MinValue()" e="Property:System.UInt32 System.UInt32::System.Numerics.IMinMaxValue&lt;System.UInt32&gt;.MinValue()" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IMinMaxValue&lt;System.UInt32&gt;.get_MinValue()" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IMinMaxValue&lt;System.UInt16&gt;.get_MinValue()" e="Property:System.UInt16 System.UInt16::System.Numerics.IMinMaxValue&lt;System.UInt16&gt;.MinValue()" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IMinMaxValue&lt;System.UInt16&gt;.get_MinValue()" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IMinMaxValue&lt;System.Single&gt;.get_MinValue()" e="Property:System.Single System.Single::System.Numerics.IMinMaxValue&lt;System.Single&gt;.MinValue()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IMinMaxValue&lt;System.Single&gt;.get_MinValue()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IMinMaxValue&lt;System.SByte&gt;.get_MinValue()" e="Property:System.SByte System.SByte::System.Numerics.IMinMaxValue&lt;System.SByte&gt;.MinValue()" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IMinMaxValue&lt;System.SByte&gt;.get_MinValue()" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IMinMaxValue&lt;nint&gt;.get_MinValue()" e="Property:System.IntPtr System.IntPtr::System.Numerics.IMinMaxValue&lt;nint&gt;.MinValue()" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IMinMaxValue&lt;nint&gt;.get_MinValue()" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IMinMaxValue&lt;System.Int64&gt;.get_MinValue()" e="Property:System.Int64 System.Int64::System.Numerics.IMinMaxValue&lt;System.Int64&gt;.MinValue()" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IMinMaxValue&lt;System.Int64&gt;.get_MinValue()" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.get_MinValue()" e="Property:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.MinValue()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IMinMaxValue&lt;System.Int32&gt;.get_MinValue()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IMinMaxValue&lt;System.Int16&gt;.get_MinValue()" e="Property:System.Int16 System.Int16::System.Numerics.IMinMaxValue&lt;System.Int16&gt;.MinValue()" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IMinMaxValue&lt;System.Int16&gt;.get_MinValue()" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IMinMaxValue&lt;System.Double&gt;.get_MinValue()" e="Property:System.Double System.Double::System.Numerics.IMinMaxValue&lt;System.Double&gt;.MinValue()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IMinMaxValue&lt;System.Double&gt;.get_MinValue()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IMinMaxValue&lt;System.Char&gt;.get_MinValue()" e="Property:System.Char System.Char::System.Numerics.IMinMaxValue&lt;System.Char&gt;.MinValue()" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IMinMaxValue&lt;System.Char&gt;.get_MinValue()" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IMinMaxValue&lt;System.Byte&gt;.get_MinValue()" e="Property:System.Byte System.Byte::System.Numerics.IMinMaxValue&lt;System.Byte&gt;.MinValue()" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IMinMaxValue&lt;System.Byte&gt;.get_MinValue()" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IMinMaxValue&lt;System.Decimal&gt;.get_MinValue()" e="Property:System.Decimal System.Decimal::System.Numerics.IMinMaxValue&lt;System.Decimal&gt;.MinValue()" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IMinMaxValue&lt;System.Decimal&gt;.get_MinValue()" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IIncrementOperators&lt;System.UInt64&gt;.op_CheckedIncrement(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IIncrementOperators&lt;System.UInt32&gt;.op_CheckedIncrement(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IIncrementOperators&lt;System.UInt16&gt;.op_CheckedIncrement(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IIncrementOperators&lt;System.SByte&gt;.op_CheckedIncrement(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IIncrementOperators&lt;nint&gt;.op_CheckedIncrement(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IIncrementOperators&lt;System.Int64&gt;.op_CheckedIncrement(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IIncrementOperators&lt;System.Int32&gt;.op_CheckedIncrement(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IIncrementOperators&lt;System.Int16&gt;.op_CheckedIncrement(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IIncrementOperators&lt;System.Char&gt;.op_CheckedIncrement(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IIncrementOperators&lt;System.Byte&gt;.op_CheckedIncrement(System.Byte)" e="TypeDef:System.Byte" />
	<edge b="TypeDef:System.Numerics.IIncrementOperators`1" e="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IIncrementOperators&lt;System.UInt64&gt;.op_Increment(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IIncrementOperators&lt;System.UInt32&gt;.op_Increment(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IIncrementOperators&lt;System.UInt16&gt;.op_Increment(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IIncrementOperators&lt;System.Single&gt;.op_Increment(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IIncrementOperators&lt;System.SByte&gt;.op_Increment(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IIncrementOperators&lt;nint&gt;.op_Increment(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IIncrementOperators&lt;System.Int64&gt;.op_Increment(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IIncrementOperators&lt;System.Int32&gt;.op_Increment(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IIncrementOperators&lt;System.Int16&gt;.op_Increment(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IIncrementOperators&lt;System.Double&gt;.op_Increment(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IIncrementOperators&lt;System.Char&gt;.op_Increment(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IIncrementOperators&lt;System.Byte&gt;.op_Increment(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Increment(System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IEqualityOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_Inequality(System.UInt64,System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IEqualityOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_Inequality(System.UInt32,System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IEqualityOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_Inequality(System.UInt16,System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::op_Inequality(System.Single,System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IEqualityOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_Inequality(System.SByte,System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::op_Inequality(System.IntPtr,System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IEqualityOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_Inequality(System.Int64,System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IEqualityOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_Inequality(System.Int32,System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IEqualityOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_Inequality(System.Int16,System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::op_Inequality(System.Double,System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IEqualityOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_Inequality(System.Char,System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IEqualityOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_Inequality(System.Byte,System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::op_Inequality(System.Decimal,System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IEqualityOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_Equality(System.UInt64,System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IEqualityOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_Equality(System.UInt32,System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IEqualityOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_Equality(System.UInt16,System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::op_Equality(System.Single,System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IEqualityOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_Equality(System.SByte,System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::op_Equality(System.IntPtr,System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IEqualityOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_Equality(System.Int64,System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IEqualityOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_Equality(System.Int32,System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IEqualityOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_Equality(System.Int16,System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::op_Equality(System.Double,System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IEqualityOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_Equality(System.Char,System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IEqualityOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_Equality(System.Byte,System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::op_Equality(System.Decimal,System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IDivisionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Division(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IDivisionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Division(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IDivisionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Division(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IDivisionOperators&lt;System.Single,System.Single,System.Single&gt;.op_Division(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IDivisionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Division(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IDivisionOperators&lt;nint,nint,nint&gt;.op_Division(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IDivisionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Division(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IDivisionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Division(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IDivisionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Division(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IDivisionOperators&lt;System.Double,System.Double,System.Double&gt;.op_Division(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IDivisionOperators&lt;System.Char,System.Char,System.Char&gt;.op_Division(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IDivisionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Division(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Division(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IDecrementOperators&lt;System.UInt64&gt;.op_CheckedDecrement(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IDecrementOperators&lt;System.UInt32&gt;.op_CheckedDecrement(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IDecrementOperators&lt;System.UInt16&gt;.op_CheckedDecrement(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IDecrementOperators&lt;System.SByte&gt;.op_CheckedDecrement(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IDecrementOperators&lt;nint&gt;.op_CheckedDecrement(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IDecrementOperators&lt;System.Int64&gt;.op_CheckedDecrement(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IDecrementOperators&lt;System.Int32&gt;.op_CheckedDecrement(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IDecrementOperators&lt;System.Int16&gt;.op_CheckedDecrement(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IDecrementOperators&lt;System.Char&gt;.op_CheckedDecrement(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IDecrementOperators&lt;System.Byte&gt;.op_CheckedDecrement(System.Byte)" e="TypeDef:System.Byte" />
	<edge b="TypeDef:System.Numerics.IDecrementOperators`1" e="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IDecrementOperators&lt;System.UInt64&gt;.op_Decrement(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IDecrementOperators&lt;System.UInt32&gt;.op_Decrement(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IDecrementOperators&lt;System.UInt16&gt;.op_Decrement(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IDecrementOperators&lt;System.Single&gt;.op_Decrement(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IDecrementOperators&lt;System.SByte&gt;.op_Decrement(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IDecrementOperators&lt;nint&gt;.op_Decrement(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IDecrementOperators&lt;System.Int64&gt;.op_Decrement(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IDecrementOperators&lt;System.Int32&gt;.op_Decrement(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IDecrementOperators&lt;System.Int16&gt;.op_Decrement(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IDecrementOperators&lt;System.Double&gt;.op_Decrement(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IDecrementOperators&lt;System.Char&gt;.op_Decrement(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IDecrementOperators&lt;System.Byte&gt;.op_Decrement(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Decrement(System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IComparisonOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_GreaterThanOrEqual(System.UInt64,System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IComparisonOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_GreaterThanOrEqual(System.UInt32,System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IComparisonOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_GreaterThanOrEqual(System.UInt16,System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::op_GreaterThanOrEqual(System.Single,System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IComparisonOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_GreaterThanOrEqual(System.SByte,System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.IComparisonOperators&lt;nint,nint,System.Boolean&gt;.op_GreaterThanOrEqual(System.IntPtr,System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IComparisonOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_GreaterThanOrEqual(System.Int64,System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_GreaterThanOrEqual(System.Int32,System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IComparisonOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_GreaterThanOrEqual(System.Int16,System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::op_GreaterThanOrEqual(System.Double,System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IComparisonOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_GreaterThanOrEqual(System.Char,System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IComparisonOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_GreaterThanOrEqual(System.Byte,System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::op_GreaterThanOrEqual(System.Decimal,System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IComparisonOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_GreaterThan(System.UInt64,System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IComparisonOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_GreaterThan(System.UInt32,System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IComparisonOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_GreaterThan(System.UInt16,System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::op_GreaterThan(System.Single,System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IComparisonOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_GreaterThan(System.SByte,System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.IComparisonOperators&lt;nint,nint,System.Boolean&gt;.op_GreaterThan(System.IntPtr,System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IComparisonOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_GreaterThan(System.Int64,System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_GreaterThan(System.Int32,System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IComparisonOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_GreaterThan(System.Int16,System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::op_GreaterThan(System.Double,System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IComparisonOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_GreaterThan(System.Char,System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IComparisonOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_GreaterThan(System.Byte,System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::op_GreaterThan(System.Decimal,System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IComparisonOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_LessThanOrEqual(System.UInt64,System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IComparisonOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_LessThanOrEqual(System.UInt32,System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IComparisonOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_LessThanOrEqual(System.UInt16,System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::op_LessThanOrEqual(System.Single,System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IComparisonOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_LessThanOrEqual(System.SByte,System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.IComparisonOperators&lt;nint,nint,System.Boolean&gt;.op_LessThanOrEqual(System.IntPtr,System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IComparisonOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_LessThanOrEqual(System.Int64,System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_LessThanOrEqual(System.Int32,System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IComparisonOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_LessThanOrEqual(System.Int16,System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::op_LessThanOrEqual(System.Double,System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IComparisonOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_LessThanOrEqual(System.Char,System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IComparisonOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_LessThanOrEqual(System.Byte,System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::op_LessThanOrEqual(System.Decimal,System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IComparisonOperators&lt;System.UInt64,System.UInt64,System.Boolean&gt;.op_LessThan(System.UInt64,System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IComparisonOperators&lt;System.UInt32,System.UInt32,System.Boolean&gt;.op_LessThan(System.UInt32,System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IComparisonOperators&lt;System.UInt16,System.UInt16,System.Boolean&gt;.op_LessThan(System.UInt16,System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::op_LessThan(System.Single,System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IComparisonOperators&lt;System.SByte,System.SByte,System.Boolean&gt;.op_LessThan(System.SByte,System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.IComparisonOperators&lt;nint,nint,System.Boolean&gt;.op_LessThan(System.IntPtr,System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IComparisonOperators&lt;System.Int64,System.Int64,System.Boolean&gt;.op_LessThan(System.Int64,System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IComparisonOperators&lt;System.Int32,System.Int32,System.Boolean&gt;.op_LessThan(System.Int32,System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IComparisonOperators&lt;System.Int16,System.Int16,System.Boolean&gt;.op_LessThan(System.Int16,System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::op_LessThan(System.Double,System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IComparisonOperators&lt;System.Char,System.Char,System.Boolean&gt;.op_LessThan(System.Char,System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IComparisonOperators&lt;System.Byte,System.Byte,System.Boolean&gt;.op_LessThan(System.Byte,System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::op_LessThan(System.Decimal,System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IBitwiseOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_OnesComplement(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IBitwiseOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_OnesComplement(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IBitwiseOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_OnesComplement(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IBitwiseOperators&lt;System.Single,System.Single,System.Single&gt;.op_OnesComplement(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IBitwiseOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_OnesComplement(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IBitwiseOperators&lt;nint,nint,nint&gt;.op_OnesComplement(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IBitwiseOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_OnesComplement(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_OnesComplement(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IBitwiseOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_OnesComplement(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IBitwiseOperators&lt;System.Double,System.Double,System.Double&gt;.op_OnesComplement(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBitwiseOperators&lt;System.Char,System.Char,System.Char&gt;.op_OnesComplement(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IBitwiseOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_OnesComplement(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IBitwiseOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_ExclusiveOr(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IBitwiseOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_ExclusiveOr(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IBitwiseOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_ExclusiveOr(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IBitwiseOperators&lt;System.Single,System.Single,System.Single&gt;.op_ExclusiveOr(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IBitwiseOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_ExclusiveOr(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IBitwiseOperators&lt;nint,nint,nint&gt;.op_ExclusiveOr(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IBitwiseOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_ExclusiveOr(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_ExclusiveOr(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IBitwiseOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_ExclusiveOr(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IBitwiseOperators&lt;System.Double,System.Double,System.Double&gt;.op_ExclusiveOr(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBitwiseOperators&lt;System.Char,System.Char,System.Char&gt;.op_ExclusiveOr(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IBitwiseOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_ExclusiveOr(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IBitwiseOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_BitwiseOr(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IBitwiseOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_BitwiseOr(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IBitwiseOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_BitwiseOr(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IBitwiseOperators&lt;System.Single,System.Single,System.Single&gt;.op_BitwiseOr(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IBitwiseOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_BitwiseOr(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IBitwiseOperators&lt;nint,nint,nint&gt;.op_BitwiseOr(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IBitwiseOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_BitwiseOr(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_BitwiseOr(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IBitwiseOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_BitwiseOr(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IBitwiseOperators&lt;System.Double,System.Double,System.Double&gt;.op_BitwiseOr(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBitwiseOperators&lt;System.Char,System.Char,System.Char&gt;.op_BitwiseOr(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IBitwiseOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_BitwiseOr(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IBitwiseOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_BitwiseAnd(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IBitwiseOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_BitwiseAnd(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IBitwiseOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_BitwiseAnd(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IBitwiseOperators&lt;System.Single,System.Single,System.Single&gt;.op_BitwiseAnd(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IBitwiseOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_BitwiseAnd(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IBitwiseOperators&lt;nint,nint,nint&gt;.op_BitwiseAnd(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IBitwiseOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_BitwiseAnd(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IBitwiseOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_BitwiseAnd(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IBitwiseOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_BitwiseAnd(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IBitwiseOperators&lt;System.Double,System.Double,System.Double&gt;.op_BitwiseAnd(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBitwiseOperators&lt;System.Char,System.Char,System.Char&gt;.op_BitwiseAnd(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IBitwiseOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_BitwiseAnd(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Log2(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Log2(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Log2(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::Log2(System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::Log2(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Log2(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Log2(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Log2(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Log2(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::Log2(System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBinaryNumber&lt;System.Char&gt;.Log2(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::Log2(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::IsPow2(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::IsPow2(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::IsPow2(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::IsPow2(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::IsPow2(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::IsPow2(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::IsPow2(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::IsPow2(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::IsPow2(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::IsPow2(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IBinaryNumber&lt;System.Char&gt;.IsPow2(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::IsPow2(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IBinaryNumber&lt;System.UInt64&gt;.get_AllBitsSet()" e="Property:System.UInt64 System.UInt64::System.Numerics.IBinaryNumber&lt;System.UInt64&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IBinaryNumber&lt;System.UInt64&gt;.get_AllBitsSet()" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IBinaryNumber&lt;System.UInt32&gt;.get_AllBitsSet()" e="Property:System.UInt32 System.UInt32::System.Numerics.IBinaryNumber&lt;System.UInt32&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IBinaryNumber&lt;System.UInt32&gt;.get_AllBitsSet()" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IBinaryNumber&lt;System.UInt16&gt;.get_AllBitsSet()" e="Property:System.UInt16 System.UInt16::System.Numerics.IBinaryNumber&lt;System.UInt16&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IBinaryNumber&lt;System.UInt16&gt;.get_AllBitsSet()" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IBinaryNumber&lt;System.Single&gt;.get_AllBitsSet()" e="Property:System.Single System.Single::System.Numerics.IBinaryNumber&lt;System.Single&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IBinaryNumber&lt;System.Single&gt;.get_AllBitsSet()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IBinaryNumber&lt;System.SByte&gt;.get_AllBitsSet()" e="Property:System.SByte System.SByte::System.Numerics.IBinaryNumber&lt;System.SByte&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IBinaryNumber&lt;System.SByte&gt;.get_AllBitsSet()" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IBinaryNumber&lt;nint&gt;.get_AllBitsSet()" e="Property:System.IntPtr System.IntPtr::System.Numerics.IBinaryNumber&lt;nint&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IBinaryNumber&lt;nint&gt;.get_AllBitsSet()" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IBinaryNumber&lt;System.Int64&gt;.get_AllBitsSet()" e="Property:System.Int64 System.Int64::System.Numerics.IBinaryNumber&lt;System.Int64&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IBinaryNumber&lt;System.Int64&gt;.get_AllBitsSet()" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IBinaryNumber&lt;System.Int32&gt;.get_AllBitsSet()" e="Property:System.Int32 System.Int32::System.Numerics.IBinaryNumber&lt;System.Int32&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IBinaryNumber&lt;System.Int32&gt;.get_AllBitsSet()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IBinaryNumber&lt;System.Int16&gt;.get_AllBitsSet()" e="Property:System.Int16 System.Int16::System.Numerics.IBinaryNumber&lt;System.Int16&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IBinaryNumber&lt;System.Int16&gt;.get_AllBitsSet()" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IBinaryNumber&lt;System.Double&gt;.get_AllBitsSet()" e="Property:System.Double System.Double::System.Numerics.IBinaryNumber&lt;System.Double&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IBinaryNumber&lt;System.Double&gt;.get_AllBitsSet()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBinaryNumber&lt;System.Char&gt;.get_AllBitsSet()" e="Property:System.Char System.Char::System.Numerics.IBinaryNumber&lt;System.Char&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBinaryNumber&lt;System.Char&gt;.get_AllBitsSet()" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IBinaryNumber&lt;System.Byte&gt;.get_AllBitsSet()" e="Property:System.Byte System.Byte::System.Numerics.IBinaryNumber&lt;System.Byte&gt;.AllBitsSet()" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IBinaryNumber&lt;System.Byte&gt;.get_AllBitsSet()" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:TSelf System.Numerics.IBinaryNumber`1::get_AllBitsSet()" e="Property:TSelf System.Numerics.IBinaryNumber`1::AllBitsSet()" />
	<edge b="TypeDef:System.Numerics.IBinaryNumber`1" e="TypeSpec:System.Numerics.IBinaryNumber`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;TSelf&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;TSelf&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteLittleEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="Method:System.Boolean System.Numerics.IBinaryInteger`1::TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryWriteBigEndian(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Int32 System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.GetByteCount()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::GetByteCount()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::GetByteCount()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::GetByteCount()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetByteCount()" />
	<edge mark="1" b="Method:System.Int32 System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.GetByteCount()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt64&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt32&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.UInt16&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.SByte&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.IntPtr&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int64&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int32&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Int16&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Char&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Char&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge b="Method:System.Int32 System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.GetShortestBitLength()" e="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::GetShortestBitLength()" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::GetShortestBitLength()" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Numerics.IBinaryInteger`1&lt;System.Byte&gt;::GetShortestBitLength()" e="Method:System.Int32 System.Numerics.IBinaryInteger`1::GetShortestBitLength()" />
	<edge mark="1" b="Method:System.Int32 System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.GetShortestBitLength()" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.SByte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.IntPtr&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Char&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Char&amp;)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Char&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Byte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryReadLittleEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.Numerics.IBinaryInteger&lt;System.UInt64&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.Numerics.IBinaryInteger&lt;System.UInt32&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.Numerics.IBinaryInteger&lt;System.UInt16&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.SByte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.Numerics.IBinaryInteger&lt;System.SByte&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.IntPtr&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::System.Numerics.IBinaryInteger&lt;nint&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.Numerics.IBinaryInteger&lt;System.Int64&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.Numerics.IBinaryInteger&lt;System.Int32&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.Numerics.IBinaryInteger&lt;System.Int16&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Char&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Char&amp;)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Char&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Byte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.Numerics.IBinaryInteger&lt;System.Byte&gt;.TryReadBigEndian(System.ReadOnlySpan`1&lt;System.Byte&gt;,System.Boolean,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::TrailingZeroCount(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::TrailingZeroCount(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::TrailingZeroCount(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::TrailingZeroCount(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::TrailingZeroCount(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::TrailingZeroCount(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::TrailingZeroCount(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::TrailingZeroCount(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.TrailingZeroCount(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::TrailingZeroCount(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::RotateRight(System.UInt64,System.Int32)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::RotateRight(System.UInt32,System.Int32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::RotateRight(System.UInt16,System.Int32)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::RotateRight(System.SByte,System.Int32)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::RotateRight(System.IntPtr,System.Int32)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::RotateRight(System.Int64,System.Int32)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::RotateRight(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::RotateRight(System.Int16,System.Int32)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.RotateRight(System.Char,System.Int32)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::RotateRight(System.Byte,System.Int32)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::RotateLeft(System.UInt64,System.Int32)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::RotateLeft(System.UInt32,System.Int32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::RotateLeft(System.UInt16,System.Int32)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::RotateLeft(System.SByte,System.Int32)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::RotateLeft(System.IntPtr,System.Int32)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::RotateLeft(System.Int64,System.Int32)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::RotateLeft(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::RotateLeft(System.Int16,System.Int32)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.RotateLeft(System.Char,System.Int32)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::RotateLeft(System.Byte,System.Int32)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::PopCount(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::PopCount(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::PopCount(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::PopCount(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::PopCount(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::PopCount(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::PopCount(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::PopCount(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.PopCount(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::PopCount(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::LeadingZeroCount(System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::LeadingZeroCount(System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::LeadingZeroCount(System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::LeadingZeroCount(System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::LeadingZeroCount(System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::LeadingZeroCount(System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::LeadingZeroCount(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::LeadingZeroCount(System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IBinaryInteger&lt;System.Char&gt;.LeadingZeroCount(System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::LeadingZeroCount(System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.UInt64,System.UInt64&gt;" e="TypeDef:System.UInt64" />
	<edge b="Method:System.ValueTuple`2&lt;System.UInt64,System.UInt64&gt; System.UInt64::DivRem(System.UInt64,System.UInt64)" e="TypeSpec:System.ValueTuple`2&lt;System.UInt64,System.UInt64&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.UInt64,System.UInt64&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.UInt32,System.UInt32&gt;" e="TypeDef:System.UInt32" />
	<edge b="Method:System.ValueTuple`2&lt;System.UInt32,System.UInt32&gt; System.UInt32::DivRem(System.UInt32,System.UInt32)" e="TypeSpec:System.ValueTuple`2&lt;System.UInt32,System.UInt32&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.UInt32,System.UInt32&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.UInt16,System.UInt16&gt;" e="TypeDef:System.UInt16" />
	<edge b="Method:System.ValueTuple`2&lt;System.UInt16,System.UInt16&gt; System.UInt16::DivRem(System.UInt16,System.UInt16)" e="TypeSpec:System.ValueTuple`2&lt;System.UInt16,System.UInt16&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.UInt16,System.UInt16&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.SByte,System.SByte&gt;" e="TypeDef:System.SByte" />
	<edge b="Method:System.ValueTuple`2&lt;System.SByte,System.SByte&gt; System.SByte::DivRem(System.SByte,System.SByte)" e="TypeSpec:System.ValueTuple`2&lt;System.SByte,System.SByte&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.SByte,System.SByte&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.IntPtr" />
	<edge b="Method:System.ValueTuple`2&lt;System.IntPtr,System.IntPtr&gt; System.IntPtr::DivRem(System.IntPtr,System.IntPtr)" e="TypeSpec:System.ValueTuple`2&lt;System.IntPtr,System.IntPtr&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.IntPtr,System.IntPtr&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Int64,System.Int64&gt;" e="TypeDef:System.Int64" />
	<edge b="Method:System.ValueTuple`2&lt;System.Int64,System.Int64&gt; System.Int64::DivRem(System.Int64,System.Int64)" e="TypeSpec:System.ValueTuple`2&lt;System.Int64,System.Int64&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Int64,System.Int64&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Int32,System.Int32&gt;" e="TypeDef:System.Int32" />
	<edge b="Method:System.ValueTuple`2&lt;System.Int32,System.Int32&gt; System.Int32::DivRem(System.Int32,System.Int32)" e="TypeSpec:System.ValueTuple`2&lt;System.Int32,System.Int32&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Int32,System.Int32&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Int16,System.Int16&gt;" e="TypeDef:System.Int16" />
	<edge b="Method:System.ValueTuple`2&lt;System.Int16,System.Int16&gt; System.Int16::DivRem(System.Int16,System.Int16)" e="TypeSpec:System.ValueTuple`2&lt;System.Int16,System.Int16&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Int16,System.Int16&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Byte,System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.ValueTuple`2&lt;System.Byte,System.Byte&gt; System.Byte::DivRem(System.Byte,System.Byte)" e="TypeSpec:System.ValueTuple`2&lt;System.Byte,System.Byte&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;System.Byte,System.Byte&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge b="Method:System.ValueTuple`2&lt;TSelf,TSelf&gt; System.Numerics.IBinaryInteger`1::DivRem(TSelf,TSelf)" e="TypeSpec:System.ValueTuple`2&lt;TSelf,TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.ValueTuple`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.ValueTuple`2" />
	<edge b="TypeDef:System.Numerics.IBinaryInteger`1" e="TypeSpec:System.Numerics.IBinaryInteger`1&lt;TSelf&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryInteger`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IBinaryInteger`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBinaryNumber`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IBinaryNumber`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IBitwiseOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IBitwiseOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumber`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumber`1" />
	<edge mark="1" b="TypeSpec:System.IComparable`1&lt;TSelf&gt;" e="TypeDef:System.IComparable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.INumberBase`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.INumberBase`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IDecrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IDecrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.IEquatable`1&lt;TSelf&gt;" e="TypeDef:System.IEquatable`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IIncrementOperators`1&lt;TSelf&gt;" e="TypeDef:System.Numerics.IIncrementOperators`1" />
	<edge mark="1" b="TypeSpec:System.Numerics.IMultiplyOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IMultiplyOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.ISubtractionOperators`3&lt;TSelf,TSelf,TSelf&gt;" e="TypeDef:System.Numerics.ISubtractionOperators`3" />
	<edge mark="1" b="TypeSpec:System.Numerics.IUnaryNegationOperators`2&lt;TSelf,TSelf&gt;" e="TypeDef:System.Numerics.IUnaryNegationOperators`2" />
	<edge mark="1" b="TypeSpec:System.IUtf8SpanParsable`1&lt;TSelf&gt;" e="TypeDef:System.IUtf8SpanParsable`1" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IAdditiveIdentity&lt;System.UInt64,System.UInt64&gt;.get_AdditiveIdentity()" e="Property:System.UInt64 System.UInt64::System.Numerics.IAdditiveIdentity&lt;System.UInt64,System.UInt64&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IAdditiveIdentity&lt;System.UInt64,System.UInt64&gt;.get_AdditiveIdentity()" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IAdditiveIdentity&lt;System.UInt32,System.UInt32&gt;.get_AdditiveIdentity()" e="Property:System.UInt32 System.UInt32::System.Numerics.IAdditiveIdentity&lt;System.UInt32,System.UInt32&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IAdditiveIdentity&lt;System.UInt32,System.UInt32&gt;.get_AdditiveIdentity()" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IAdditiveIdentity&lt;System.UInt16,System.UInt16&gt;.get_AdditiveIdentity()" e="Property:System.UInt16 System.UInt16::System.Numerics.IAdditiveIdentity&lt;System.UInt16,System.UInt16&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IAdditiveIdentity&lt;System.UInt16,System.UInt16&gt;.get_AdditiveIdentity()" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IAdditiveIdentity&lt;System.Single,System.Single&gt;.get_AdditiveIdentity()" e="Property:System.Single System.Single::System.Numerics.IAdditiveIdentity&lt;System.Single,System.Single&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IAdditiveIdentity&lt;System.Single,System.Single&gt;.get_AdditiveIdentity()" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IAdditiveIdentity&lt;System.SByte,System.SByte&gt;.get_AdditiveIdentity()" e="Property:System.SByte System.SByte::System.Numerics.IAdditiveIdentity&lt;System.SByte,System.SByte&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IAdditiveIdentity&lt;System.SByte,System.SByte&gt;.get_AdditiveIdentity()" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IAdditiveIdentity&lt;nint,nint&gt;.get_AdditiveIdentity()" e="Property:System.IntPtr System.IntPtr::System.Numerics.IAdditiveIdentity&lt;nint,nint&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IAdditiveIdentity&lt;nint,nint&gt;.get_AdditiveIdentity()" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IAdditiveIdentity&lt;System.Int64,System.Int64&gt;.get_AdditiveIdentity()" e="Property:System.Int64 System.Int64::System.Numerics.IAdditiveIdentity&lt;System.Int64,System.Int64&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IAdditiveIdentity&lt;System.Int64,System.Int64&gt;.get_AdditiveIdentity()" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IAdditiveIdentity&lt;System.Int32,System.Int32&gt;.get_AdditiveIdentity()" e="Property:System.Int32 System.Int32::System.Numerics.IAdditiveIdentity&lt;System.Int32,System.Int32&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IAdditiveIdentity&lt;System.Int32,System.Int32&gt;.get_AdditiveIdentity()" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IAdditiveIdentity&lt;System.Int16,System.Int16&gt;.get_AdditiveIdentity()" e="Property:System.Int16 System.Int16::System.Numerics.IAdditiveIdentity&lt;System.Int16,System.Int16&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IAdditiveIdentity&lt;System.Int16,System.Int16&gt;.get_AdditiveIdentity()" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IAdditiveIdentity&lt;System.Double,System.Double&gt;.get_AdditiveIdentity()" e="Property:System.Double System.Double::System.Numerics.IAdditiveIdentity&lt;System.Double,System.Double&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IAdditiveIdentity&lt;System.Double,System.Double&gt;.get_AdditiveIdentity()" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IAdditiveIdentity&lt;System.Char,System.Char&gt;.get_AdditiveIdentity()" e="Property:System.Char System.Char::System.Numerics.IAdditiveIdentity&lt;System.Char,System.Char&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IAdditiveIdentity&lt;System.Char,System.Char&gt;.get_AdditiveIdentity()" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IAdditiveIdentity&lt;System.Byte,System.Byte&gt;.get_AdditiveIdentity()" e="Property:System.Byte System.Byte::System.Numerics.IAdditiveIdentity&lt;System.Byte,System.Byte&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IAdditiveIdentity&lt;System.Byte,System.Byte&gt;.get_AdditiveIdentity()" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IAdditiveIdentity&lt;System.Decimal,System.Decimal&gt;.get_AdditiveIdentity()" e="Property:System.Decimal System.Decimal::System.Numerics.IAdditiveIdentity&lt;System.Decimal,System.Decimal&gt;.AdditiveIdentity()" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.Numerics.IAdditiveIdentity&lt;System.Decimal,System.Decimal&gt;.get_AdditiveIdentity()" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IAdditionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_CheckedAddition(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IAdditionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_CheckedAddition(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IAdditionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_CheckedAddition(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IAdditionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_CheckedAddition(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IAdditionOperators&lt;nint,nint,nint&gt;.op_CheckedAddition(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IAdditionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_CheckedAddition(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IAdditionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_CheckedAddition(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IAdditionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_CheckedAddition(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IAdditionOperators&lt;System.Char,System.Char,System.Char&gt;.op_CheckedAddition(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IAdditionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_CheckedAddition(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge b="TypeDef:System.Numerics.IAdditionOperators`3" e="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TOther,TResult&gt;" />
	<edge mark="1" b="TypeSpec:System.Numerics.IAdditionOperators`3&lt;TSelf,TOther,TResult&gt;" e="TypeDef:System.Numerics.IAdditionOperators`3" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.Numerics.IAdditionOperators&lt;System.UInt64,System.UInt64,System.UInt64&gt;.op_Addition(System.UInt64,System.UInt64)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.Numerics.IAdditionOperators&lt;System.UInt32,System.UInt32,System.UInt32&gt;.op_Addition(System.UInt32,System.UInt32)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.Numerics.IAdditionOperators&lt;System.UInt16,System.UInt16,System.UInt16&gt;.op_Addition(System.UInt16,System.UInt16)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::System.Numerics.IAdditionOperators&lt;System.Single,System.Single,System.Single&gt;.op_Addition(System.Single,System.Single)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.Numerics.IAdditionOperators&lt;System.SByte,System.SByte,System.SByte&gt;.op_Addition(System.SByte,System.SByte)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::System.Numerics.IAdditionOperators&lt;nint,nint,nint&gt;.op_Addition(System.IntPtr,System.IntPtr)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.Numerics.IAdditionOperators&lt;System.Int64,System.Int64,System.Int64&gt;.op_Addition(System.Int64,System.Int64)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.Numerics.IAdditionOperators&lt;System.Int32,System.Int32,System.Int32&gt;.op_Addition(System.Int32,System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.Numerics.IAdditionOperators&lt;System.Int16,System.Int16,System.Int16&gt;.op_Addition(System.Int16,System.Int16)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::System.Numerics.IAdditionOperators&lt;System.Double,System.Double,System.Double&gt;.op_Addition(System.Double,System.Double)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.IAdditionOperators&lt;System.Char,System.Char,System.Char&gt;.op_Addition(System.Char,System.Char)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.Numerics.IAdditionOperators&lt;System.Byte,System.Byte,System.Byte&gt;.op_Addition(System.Byte,System.Byte)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::op_Addition(System.Decimal,System.Decimal)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Char::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Char::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Char::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Byte&gt;" e="TypeDef:System.Byte" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Byte&gt;" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.IUtf8SpanFormattable::TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Numerics.INumberBase`1::System.IUtf8SpanFormattable.TryFormat(System.Span`1&lt;System.Byte&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.Single&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Single::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.Double&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Double::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Char&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Char&amp;)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Char&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.Decimal&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::TryParse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt64::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" e="TypeSpec:System.UInt64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt32::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" e="TypeSpec:System.UInt32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.UInt16::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" e="TypeSpec:System.UInt16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Single::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" e="TypeSpec:System.Single&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Single::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.SByte::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" e="TypeSpec:System.SByte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.IntPtr::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" e="TypeSpec:System.IntPtr&amp;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.IntPtr&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int64::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" e="TypeSpec:System.Int64&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int32::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Int16::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" e="TypeSpec:System.Int16&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Double::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" e="TypeSpec:System.Double&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Double::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char&amp;)" e="TypeSpec:System.Char&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Char&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Byte::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" e="TypeSpec:System.Byte&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte&amp;)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Boolean System.Decimal::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" e="TypeSpec:System.Decimal&amp;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal&amp;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Single System.Single::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.SByte System.SByte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Double System.Double::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Byte System.Byte::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Parse(System.ReadOnlySpan`1&lt;System.Char&gt;,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.Numerics.INumberBase&lt;System.Char&gt;.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Single System.Single::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.SByte System.SByte::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.IntPtr System.IntPtr::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.IntPtr" />
	<edge mark="1" b="Method:System.Int64 System.Int64::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int32 System.Int32::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int16 System.Int16::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Double System.Double::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Char System.Char::System.IParsable&lt;System.Char&gt;.Parse(System.String,System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Byte System.Byte::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::Parse(System.String,System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::CompareTo(System.UInt64)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::CompareTo(System.UInt32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::CompareTo(System.UInt16)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Single::CompareTo(System.Single)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.SByte::CompareTo(System.SByte)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::CompareTo(System.IntPtr)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int64::CompareTo(System.Int64)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int32::CompareTo(System.Int32)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int16::CompareTo(System.Int16)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Guid::CompareTo(System.Guid)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Double::CompareTo(System.Double)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.DateTime::CompareTo(System.DateTime)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Char::CompareTo(System.Char)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Byte::CompareTo(System.Byte)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Boolean::CompareTo(System.Boolean)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::CompareTo(System.Decimal)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Single::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.SByte::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.IntPtr::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int64::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int32::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int16::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Guid::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Double::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.DateTime::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Char::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Byte::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Boolean::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.String System.UInt64::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.UInt32::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.UInt16::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Single::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.SByte::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Int64::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Int32::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Int16::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Double::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.DateTime::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Char::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Byte::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Boolean::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Decimal::ToString(System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.UInt64::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.UInt32::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.UInt16::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Single::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.SByte::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.IntPtr::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Int64::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Int32::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Int16::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Guid::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Double::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.DateTime::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Char::System.IFormattable.ToString(System.String,System.IFormatProvider)" e="Method:System.String System.IFormattable::ToString(System.String,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.String System.Char::System.IFormattable.ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Byte::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="Method:System.String System.Decimal::ToString(System.String,System.IFormatProvider)" e="TypeDef:System.String" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Single::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.SByte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Int64::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Int32::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Int16::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Guid::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Guid::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Guid::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Guid::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Guid::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Double::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Char::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Char::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Char::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="Method:System.Boolean System.ISpanFormattable::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.ISpanFormattable.TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Byte::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeSpec:System.Span`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Span`1&lt;System.Char&gt;" />
	<edge b="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.Int32&amp;" />
	<edge mark="1" b="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" e="TypeDef:System.Char" />
	<edge b="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeSpec:System.ReadOnlySpan`1&lt;System.Char&gt;" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::TryFormat(System.Span`1&lt;System.Char&gt;,System.Int32&amp;,System.ReadOnlySpan`1&lt;System.Char&gt;,System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.TypeCode System.UInt64::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.UInt32::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.UInt16::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Single::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.SByte::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Int64::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Int32::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Int16::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Double::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.DateTime::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Char::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Byte::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Boolean::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.TypeCode System.Decimal::GetTypeCode()" e="TypeDef:System.TypeCode" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Single::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.SByte::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Int64::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Int32::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Int16::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Double::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Char::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Byte::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Boolean::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Boolean::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.IConvertible.ToBoolean(System.IFormatProvider)" e="Method:System.Boolean System.IConvertible::ToBoolean(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::System.IConvertible.ToBoolean(System.IFormatProvider)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Char System.UInt64::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.UInt64::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.UInt32::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.UInt32::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.UInt16::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.UInt16::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Single::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Single::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.SByte::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.SByte::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Int64::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Int64::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Int32::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Int32::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Int16::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Int16::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Double::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Double::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.DateTime::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.DateTime::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Char::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Char::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Byte::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Byte::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Boolean::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Boolean::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.Char System.Decimal::System.IConvertible.ToChar(System.IFormatProvider)" e="Method:System.Char System.IConvertible::ToChar(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Char System.Decimal::System.IConvertible.ToChar(System.IFormatProvider)" e="TypeDef:System.Char" />
	<edge mark="1" b="Method:System.SByte System.UInt64::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.UInt64::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.UInt32::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.UInt32::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.UInt16::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.UInt16::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Single::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Single::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.SByte::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Int64::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Int64::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Int32::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Int32::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Int16::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Int16::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Double::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Double::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.DateTime::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.DateTime::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Char::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Char::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Byte::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Byte::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Boolean::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Boolean::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.SByte System.Decimal::System.IConvertible.ToSByte(System.IFormatProvider)" e="Method:System.SByte System.IConvertible::ToSByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.SByte System.Decimal::System.IConvertible.ToSByte(System.IFormatProvider)" e="TypeDef:System.SByte" />
	<edge mark="1" b="Method:System.Byte System.UInt64::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.UInt64::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.UInt32::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.UInt32::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.UInt16::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.UInt16::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Single::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Single::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.SByte::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.SByte::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Int64::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Int64::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Int32::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Int32::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Int16::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Int16::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Double::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Double::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.DateTime::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.DateTime::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Char::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Char::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Byte::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Boolean::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Boolean::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Byte System.Decimal::System.IConvertible.ToByte(System.IFormatProvider)" e="Method:System.Byte System.IConvertible::ToByte(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Byte System.Decimal::System.IConvertible.ToByte(System.IFormatProvider)" e="TypeDef:System.Byte" />
	<edge mark="1" b="Method:System.Int16 System.UInt64::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.UInt64::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.UInt32::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.UInt32::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.UInt16::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.UInt16::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Single::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Single::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.SByte::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.SByte::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Int64::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Int64::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Int32::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Int32::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Int16::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Double::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Double::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.DateTime::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.DateTime::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Char::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Char::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Byte::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Byte::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Boolean::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Boolean::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.Int16 System.Decimal::System.IConvertible.ToInt16(System.IFormatProvider)" e="Method:System.Int16 System.IConvertible::ToInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int16 System.Decimal::System.IConvertible.ToInt16(System.IFormatProvider)" e="TypeDef:System.Int16" />
	<edge mark="1" b="Method:System.UInt16 System.UInt64::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.UInt64::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.UInt32::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.UInt32::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.UInt16::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Single::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Single::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.SByte::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.SByte::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Int64::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Int64::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Int32::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Int32::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Int16::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Int16::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Double::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Double::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.DateTime::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.DateTime::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Char::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Char::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Byte::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Byte::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Boolean::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Boolean::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.UInt16 System.Decimal::System.IConvertible.ToUInt16(System.IFormatProvider)" e="Method:System.UInt16 System.IConvertible::ToUInt16(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt16 System.Decimal::System.IConvertible.ToUInt16(System.IFormatProvider)" e="TypeDef:System.UInt16" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.UInt64::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.UInt32::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.UInt16::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Single::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Single::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.SByte::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.SByte::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int64::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Int64::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Int32::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Int16::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Int16::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Double::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Double::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.DateTime::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.DateTime::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Char::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Char::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Byte::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Byte::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Boolean::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Boolean::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::System.IConvertible.ToInt32(System.IFormatProvider)" e="Method:System.Int32 System.IConvertible::ToInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int32 System.Decimal::System.IConvertible.ToInt32(System.IFormatProvider)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.UInt32 System.UInt64::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.UInt64::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.UInt32::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.UInt16::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.UInt16::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Single::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Single::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.SByte::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.SByte::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Int64::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Int64::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Int32::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Int32::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Int16::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Int16::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Double::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Double::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.DateTime::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.DateTime::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Char::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Char::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Byte::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Byte::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Boolean::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Boolean::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.UInt32 System.Decimal::System.IConvertible.ToUInt32(System.IFormatProvider)" e="Method:System.UInt32 System.IConvertible::ToUInt32(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt32 System.Decimal::System.IConvertible.ToUInt32(System.IFormatProvider)" e="TypeDef:System.UInt32" />
	<edge mark="1" b="Method:System.Int64 System.UInt64::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.UInt64::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.UInt32::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.UInt32::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.UInt16::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.UInt16::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Single::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Single::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.SByte::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.SByte::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Int64::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Int32::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Int32::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Int16::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Int16::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Double::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Double::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.DateTime::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.DateTime::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Char::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Char::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Byte::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Byte::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Boolean::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Boolean::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.Int64 System.Decimal::System.IConvertible.ToInt64(System.IFormatProvider)" e="Method:System.Int64 System.IConvertible::ToInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Int64 System.Decimal::System.IConvertible.ToInt64(System.IFormatProvider)" e="TypeDef:System.Int64" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.UInt64::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.UInt32::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.UInt32::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.UInt16::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.UInt16::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Single::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Single::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.SByte::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.SByte::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Int64::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Int64::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Int32::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Int32::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Int16::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Int16::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Double::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Double::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.DateTime::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.DateTime::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Char::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Char::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Byte::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Byte::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Boolean::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Boolean::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.UInt64 System.Decimal::System.IConvertible.ToUInt64(System.IFormatProvider)" e="Method:System.UInt64 System.IConvertible::ToUInt64(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.UInt64 System.Decimal::System.IConvertible.ToUInt64(System.IFormatProvider)" e="TypeDef:System.UInt64" />
	<edge mark="1" b="Method:System.Single System.UInt64::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.UInt64::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.UInt32::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.UInt32::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.UInt16::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.UInt16::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Single::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Single::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.SByte::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.SByte::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Int64::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Int64::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Int32::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Int32::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Int16::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Int16::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Double::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Double::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.DateTime::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.DateTime::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Char::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Char::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Byte::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Byte::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Boolean::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Boolean::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Single System.Decimal::System.IConvertible.ToSingle(System.IFormatProvider)" e="Method:System.Single System.IConvertible::ToSingle(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Single System.Decimal::System.IConvertible.ToSingle(System.IFormatProvider)" e="TypeDef:System.Single" />
	<edge mark="1" b="Method:System.Double System.UInt64::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.UInt64::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.UInt32::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.UInt32::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.UInt16::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.UInt16::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Single::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Single::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.SByte::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.SByte::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Int64::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Int64::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Int32::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Int32::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Int16::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Int16::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Double::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Double::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.DateTime::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.DateTime::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Char::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Char::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Byte::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Byte::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Boolean::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Boolean::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Double System.Decimal::System.IConvertible.ToDouble(System.IFormatProvider)" e="Method:System.Double System.IConvertible::ToDouble(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Double System.Decimal::System.IConvertible.ToDouble(System.IFormatProvider)" e="TypeDef:System.Double" />
	<edge mark="1" b="Method:System.Decimal System.UInt64::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.UInt64::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.UInt32::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.UInt32::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.UInt16::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.UInt16::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Single::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Single::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.SByte::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.SByte::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Int64::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Int64::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Int32::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Int32::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Int16::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Int16::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Double::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Double::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.DateTime::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.DateTime::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Char::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Char::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Byte::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Byte::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Boolean::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Boolean::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.IConvertible.ToDecimal(System.IFormatProvider)" e="Method:System.Decimal System.IConvertible::ToDecimal(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Decimal System.Decimal::System.IConvertible.ToDecimal(System.IFormatProvider)" e="TypeDef:System.Decimal" />
	<edge mark="1" b="Method:System.DateTime System.UInt64::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.UInt64::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.UInt32::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.UInt32::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.UInt16::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.UInt16::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Single::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Single::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.SByte::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.SByte::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Int64::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Int64::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Int32::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Int32::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Int16::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Int16::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Double::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Double::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.DateTime::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.DateTime::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Char::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Char::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Byte::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Byte::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Boolean::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Boolean::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.DateTime System.Decimal::System.IConvertible.ToDateTime(System.IFormatProvider)" e="Method:System.DateTime System.IConvertible::ToDateTime(System.IFormatProvider)" />
	<edge mark="1" b="Method:System.DateTime System.Decimal::System.IConvertible.ToDateTime(System.IFormatProvider)" e="TypeDef:System.DateTime" />
	<edge mark="1" b="Method:System.Object System.UInt64::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.UInt64::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.UInt32::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.UInt32::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.UInt16::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.UInt16::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Single::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Single::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.SByte::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.SByte::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Int64::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Int64::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Int32::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Int32::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Int16::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Int16::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Double::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Double::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.DateTime::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.DateTime::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Char::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Char::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Byte::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Byte::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Boolean::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Boolean::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Object System.Decimal::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="Method:System.Object System.IConvertible::ToType(System.Type,System.IFormatProvider)" />
	<edge mark="1" b="Method:System.Object System.Decimal::System.IConvertible.ToType(System.Type,System.IFormatProvider)" e="TypeDef:System.Object" />
	<edge mark="1" b="Method:System.Void System.IntPtr::System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void System.IntPtr::System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.DateTime::System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void System.DateTime::System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.RuntimeMethodHandle::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.RuntimeTypeHandle::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Void System.Decimal::System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="Method:System.Void System.Runtime.Serialization.ISerializable::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
	<edge mark="1" b="Method:System.Void System.Decimal::System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.UInt64::Equals(System.UInt64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt32::Equals(System.UInt32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.UInt16::Equals(System.UInt16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Single::Equals(System.Single)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.SByte::Equals(System.SByte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.IntPtr::Equals(System.IntPtr)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int64::Equals(System.Int64)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int32::Equals(System.Int32)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Int16::Equals(System.Int16)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Guid::Equals(System.Guid)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Double::Equals(System.Double)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.DateTime::Equals(System.DateTime)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Char::Equals(System.Char)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Byte::Equals(System.Byte)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Boolean::Equals(System.Boolean)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeMethodHandle::Equals(System.RuntimeMethodHandle)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.RuntimeTypeHandle::Equals(System.RuntimeTypeHandle)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.Decimal::Equals(System.Decimal)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()" e="Property:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly()" />
	<edge b="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()" e="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::get_IsReadOnly()" />
	<edge b="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::get_IsReadOnly()" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.ICollection`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::get_IsReadOnly()" e="Method:System.Boolean System.Collections.Generic.ICollection`1::get_IsReadOnly()" />
	<edge mark="1" b="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:T System.ArraySegment`1::System.Collections.Generic.IReadOnlyList&lt;T&gt;.get_Item(System.Int32)" e="Property:T System.ArraySegment`1::System.Collections.Generic.IReadOnlyList&lt;T&gt;.Item(System.Int32)" />
	<edge b="Method:T System.ArraySegment`1::System.Collections.Generic.IReadOnlyList&lt;T&gt;.get_Item(System.Int32)" e="MemberRef:T System.Collections.Generic.IReadOnlyList`1&lt;T&gt;::get_Item(System.Int32)" />
	<edge b="MemberRef:T System.Collections.Generic.IReadOnlyList`1&lt;T&gt;::get_Item(System.Int32)" e="TypeSpec:System.Collections.Generic.IReadOnlyList`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IReadOnlyList`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IReadOnlyList`1" />
	<edge mark="1" b="MemberRef:T System.Collections.Generic.IReadOnlyList`1&lt;T&gt;::get_Item(System.Int32)" e="Method:T System.Collections.Generic.IReadOnlyList`1::get_Item(System.Int32)" />
	<edge mark="1" b="Method:T System.ArraySegment`1::System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32)" e="Property:T System.ArraySegment`1::System.Collections.Generic.IList&lt;T&gt;.Item(System.Int32)" />
	<edge b="Method:T System.ArraySegment`1::System.Collections.Generic.IList&lt;T&gt;.get_Item(System.Int32)" e="MemberRef:T System.Collections.Generic.IList`1&lt;T&gt;::get_Item(System.Int32)" />
	<edge b="MemberRef:T System.Collections.Generic.IList`1&lt;T&gt;::get_Item(System.Int32)" e="TypeSpec:System.Collections.Generic.IList`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IList`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IList`1" />
	<edge mark="1" b="MemberRef:T System.Collections.Generic.IList`1&lt;T&gt;::get_Item(System.Int32)" e="Method:T System.Collections.Generic.IList`1::get_Item(System.Int32)" />
	<edge mark="1" b="Method:System.Void System.ArraySegment`1::System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32,T)" e="Property:T System.ArraySegment`1::System.Collections.Generic.IList&lt;T&gt;.Item(System.Int32)" />
	<edge b="Method:System.Void System.ArraySegment`1::System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32,T)" e="MemberRef:System.Void System.Collections.Generic.IList`1&lt;T&gt;::set_Item(System.Int32,T)" />
	<edge b="MemberRef:System.Void System.Collections.Generic.IList`1&lt;T&gt;::set_Item(System.Int32,T)" e="TypeSpec:System.Collections.Generic.IList`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IList`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IList`1" />
	<edge mark="1" b="MemberRef:System.Void System.Collections.Generic.IList`1&lt;T&gt;::set_Item(System.Int32,T)" e="Method:System.Void System.Collections.Generic.IList`1::set_Item(System.Int32,T)" />
	<edge mark="1" b="Method:System.Void System.ArraySegment`1::System.Collections.Generic.IList&lt;T&gt;.set_Item(System.Int32,T)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Add(T)" e="MemberRef:System.Void System.Collections.Generic.ICollection`1&lt;T&gt;::Add(T)" />
	<edge b="MemberRef:System.Void System.Collections.Generic.ICollection`1&lt;T&gt;::Add(T)" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.ICollection`1" />
	<edge mark="1" b="MemberRef:System.Void System.Collections.Generic.ICollection`1&lt;T&gt;::Add(T)" e="Method:System.Void System.Collections.Generic.ICollection`1::Add(T)" />
	<edge mark="1" b="Method:System.Void System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Add(T)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Clear()" e="MemberRef:System.Void System.Collections.Generic.ICollection`1&lt;T&gt;::Clear()" />
	<edge b="MemberRef:System.Void System.Collections.Generic.ICollection`1&lt;T&gt;::Clear()" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.ICollection`1" />
	<edge mark="1" b="MemberRef:System.Void System.Collections.Generic.ICollection`1&lt;T&gt;::Clear()" e="Method:System.Void System.Collections.Generic.ICollection`1::Clear()" />
	<edge mark="1" b="Method:System.Void System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Clear()" e="TypeDef:System.Void" />
	<edge b="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Contains(T)" e="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::Contains(T)" />
	<edge b="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::Contains(T)" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.ICollection`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::Contains(T)" e="Method:System.Boolean System.Collections.Generic.ICollection`1::Contains(T)" />
	<edge mark="1" b="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Contains(T)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeSpec:T[]:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.ArraySegment`1::CopyTo(T[],System.Int32)" e="TypeDef:System.Void" />
	<edge b="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.ArraySegment`1::System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()" e="MemberRef:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1&lt;T&gt;::GetEnumerator()" />
	<edge b="MemberRef:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1&lt;T&gt;::GetEnumerator()" e="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerable`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IEnumerable`1" />
	<edge mark="1" b="MemberRef:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1&lt;T&gt;::GetEnumerator()" e="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.Collections.Generic.IEnumerable`1::GetEnumerator()" />
	<edge b="Method:System.Collections.Generic.IEnumerator`1&lt;T&gt; System.ArraySegment`1::System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()" e="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IEnumerator`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IEnumerator`1" />
	<edge mark="1" b="Method:System.Collections.IEnumerator System.ArraySegment`1::System.Collections.IEnumerable.GetEnumerator()" e="Method:System.Collections.IEnumerator System.Collections.IEnumerable::GetEnumerator()" />
	<edge mark="1" b="Method:System.Collections.IEnumerator System.ArraySegment`1::System.Collections.IEnumerable.GetEnumerator()" e="TypeDef:System.Collections.IEnumerator" />
	<edge b="Method:System.Int32 System.ArraySegment`1::System.Collections.Generic.IList&lt;T&gt;.IndexOf(T)" e="MemberRef:System.Int32 System.Collections.Generic.IList`1&lt;T&gt;::IndexOf(T)" />
	<edge b="MemberRef:System.Int32 System.Collections.Generic.IList`1&lt;T&gt;::IndexOf(T)" e="TypeSpec:System.Collections.Generic.IList`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IList`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IList`1" />
	<edge mark="1" b="MemberRef:System.Int32 System.Collections.Generic.IList`1&lt;T&gt;::IndexOf(T)" e="Method:System.Int32 System.Collections.Generic.IList`1::IndexOf(T)" />
	<edge mark="1" b="Method:System.Int32 System.ArraySegment`1::System.Collections.Generic.IList&lt;T&gt;.IndexOf(T)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Void System.ArraySegment`1::System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32,T)" e="MemberRef:System.Void System.Collections.Generic.IList`1&lt;T&gt;::Insert(System.Int32,T)" />
	<edge b="MemberRef:System.Void System.Collections.Generic.IList`1&lt;T&gt;::Insert(System.Int32,T)" e="TypeSpec:System.Collections.Generic.IList`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IList`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IList`1" />
	<edge mark="1" b="MemberRef:System.Void System.Collections.Generic.IList`1&lt;T&gt;::Insert(System.Int32,T)" e="Method:System.Void System.Collections.Generic.IList`1::Insert(System.Int32,T)" />
	<edge mark="1" b="Method:System.Void System.ArraySegment`1::System.Collections.Generic.IList&lt;T&gt;.Insert(System.Int32,T)" e="TypeDef:System.Void" />
	<edge b="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Remove(T)" e="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::Remove(T)" />
	<edge b="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::Remove(T)" e="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.ICollection`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.ICollection`1" />
	<edge mark="1" b="MemberRef:System.Boolean System.Collections.Generic.ICollection`1&lt;T&gt;::Remove(T)" e="Method:System.Boolean System.Collections.Generic.ICollection`1::Remove(T)" />
	<edge mark="1" b="Method:System.Boolean System.ArraySegment`1::System.Collections.Generic.ICollection&lt;T&gt;.Remove(T)" e="TypeDef:System.Boolean" />
	<edge b="Method:System.Void System.ArraySegment`1::System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32)" e="MemberRef:System.Void System.Collections.Generic.IList`1&lt;T&gt;::RemoveAt(System.Int32)" />
	<edge b="MemberRef:System.Void System.Collections.Generic.IList`1&lt;T&gt;::RemoveAt(System.Int32)" e="TypeSpec:System.Collections.Generic.IList`1&lt;T&gt;" />
	<edge mark="1" b="TypeSpec:System.Collections.Generic.IList`1&lt;T&gt;" e="TypeDef:System.Collections.Generic.IList`1" />
	<edge mark="1" b="MemberRef:System.Void System.Collections.Generic.IList`1&lt;T&gt;::RemoveAt(System.Int32)" e="Method:System.Void System.Collections.Generic.IList`1::RemoveAt(System.Int32)" />
	<edge mark="1" b="Method:System.Void System.ArraySegment`1::System.Collections.Generic.IList&lt;T&gt;.RemoveAt(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.IEquatable`1::Equals(T)" e="Method:System.Boolean System.ValueTuple`2::Equals(System.ValueTuple`2&lt;T1,T2&gt;)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable::CompareTo(System.Object)" e="Method:System.Int32 System.ValueTuple`2::System.IComparable.CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.IComparable`1::CompareTo(T)" e="Method:System.Int32 System.ValueTuple`2::CompareTo(System.ValueTuple`2&lt;T1,T2&gt;)" />
	<edge b="Method:System.Int32 System.ValueTuple`2::CompareTo(System.ValueTuple`2&lt;T1,T2&gt;)" e="TypeSpec:System.ValueTuple`2&lt;T1,T2&gt;" />
	<edge mark="1" b="Method:System.Int32 System.ValueTuple`2::CompareTo(System.ValueTuple`2&lt;T1,T2&gt;)" e="TypeDef:System.Int32" />
	<edge mark="1" b="Method:System.Int32 System.ValueTuple`2::System.IComparable.CompareTo(System.Object)" e="Method:System.Int32 System.IComparable::CompareTo(System.Object)" />
	<edge mark="1" b="Method:System.Int32 System.ValueTuple`2::System.IComparable.CompareTo(System.Object)" e="TypeDef:System.Int32" />
	<edge b="Method:System.Boolean System.ValueTuple`2::Equals(System.ValueTuple`2&lt;T1,T2&gt;)" e="TypeSpec:System.ValueTuple`2&lt;T1,T2&gt;" />
	<edge mark="1" b="Method:System.Boolean System.ValueTuple`2::Equals(System.ValueTuple`2&lt;T1,T2&gt;)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler:System.Private.CoreLib.dll" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Boolean System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::SkipAssembly(System.Reflection.Assembly)" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Void System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::ClearCache(System.Type)" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Boolean System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::RequiresClearingAllTypes(System.Type[])" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Object System.Object::MemberwiseClone()" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Void System.Object::Finalize()" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Void System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::ClearCache(System.Type[])" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Type System.Object::GetType()" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.String System.Object::ToString()" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Boolean System.Object::Equals(System.Object)" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Boolean System.Object::Equals(System.Object,System.Object)" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Boolean System.Object::ReferenceEquals(System.Object,System.Object)" />
	<edge mark="1" b="Assembly:System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" e="Method:System.Int32 System.Object::GetHashCode()" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.SkipLocalsInitAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.SkipLocalsInitAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.SkipLocalsInitAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.SkipLocalsInitAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.NullablePublicOnlyAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.NullablePublicOnlyAttribute::.ctor(System.Boolean)" e="TypeDef:System.Runtime.CompilerServices.NullablePublicOnlyAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.NullablePublicOnlyAttribute::.ctor(System.Boolean)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.Versioning.RequiresPreviewFeaturesAttribute::.ctor()" e="TypeDef:System.Runtime.Versioning.RequiresPreviewFeaturesAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.Versioning.RequiresPreviewFeaturesAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyTitleAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyTitleAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.AssemblyTitleAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyTitleAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyProductAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyProductAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.AssemblyProductAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyProductAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyInformationalVersionAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyInformationalVersionAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.AssemblyInformationalVersionAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyInformationalVersionAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyFileVersionAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyFileVersionAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.AssemblyFileVersionAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyFileVersionAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyDescriptionAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyDescriptionAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.AssemblyDescriptionAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyDescriptionAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyCopyrightAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyCopyrightAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.AssemblyCopyrightAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyCopyrightAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyConfigurationAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyConfigurationAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.AssemblyConfigurationAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyConfigurationAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyCompanyAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyCompanyAttribute::.ctor(System.String)" e="TypeDef:System.Reflection.AssemblyCompanyAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyCompanyAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.Versioning.TargetFrameworkAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Runtime.Versioning.TargetFrameworkAttribute::set_FrameworkDisplayName(System.String)" e="Property:System.String System.Runtime.Versioning.TargetFrameworkAttribute::FrameworkDisplayName()" />
	<edge mark="1" b="Method:System.Void System.Runtime.Versioning.TargetFrameworkAttribute::set_FrameworkDisplayName(System.String)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Runtime.Versioning.TargetFrameworkAttribute::.ctor(System.String)" e="TypeDef:System.Runtime.Versioning.TargetFrameworkAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.Versioning.TargetFrameworkAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.DisableRuntimeMarshallingAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.DisableRuntimeMarshallingAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.DisableRuntimeMarshallingAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.DisableRuntimeMarshallingAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Resources.NeutralResourcesLanguageAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Resources.NeutralResourcesLanguageAttribute::.ctor(System.String)" e="TypeDef:System.Resources.NeutralResourcesLanguageAttribute" />
	<edge mark="1" b="Method:System.Void System.Resources.NeutralResourcesLanguageAttribute::.ctor(System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Reflection.AssemblyMetadataAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.AssemblyMetadataAttribute::.ctor(System.String,System.String)" e="TypeDef:System.Reflection.AssemblyMetadataAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.AssemblyMetadataAttribute::.ctor(System.String,System.String)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute::.ctor(System.Runtime.InteropServices.DllImportSearchPath)" e="TypeDef:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute::.ctor(System.Runtime.InteropServices.DllImportSearchPath)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" e="Field:System.Int32 System.Runtime.InteropServices.DllImportSearchPath::value__" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.InteropServices.DllImportSearchPath::value__" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="Field:System.Int32 System.Runtime.InteropServices.DllImportSearchPath::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" e="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::UseDllDirectoryForDependencies" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::UseDllDirectoryForDependencies" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::UseDllDirectoryForDependencies" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" e="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::ApplicationDirectory" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::ApplicationDirectory" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::ApplicationDirectory" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" e="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::UserDirectories" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::UserDirectories" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::UserDirectories" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" e="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::System32" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::System32" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::System32" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" e="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::SafeDirectories" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::SafeDirectories" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::SafeDirectories" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" e="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::AssemblyDirectory" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::AssemblyDirectory" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::AssemblyDirectory" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" e="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::LegacyBehavior" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::LegacyBehavior" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge mark="1" b="Field:System.Runtime.InteropServices.DllImportSearchPath System.Runtime.InteropServices.DllImportSearchPath::LegacyBehavior" e="TypeDef:System.Runtime.InteropServices.DllImportSearchPath" />
	<edge b="Method:System.Void System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::ClearCache(System.Type[])" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Void System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::ClearCache(System.Type[])" e="TypeDef:System.Void" />
	<edge b="Method:System.Boolean System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::RequiresClearingAllTypes(System.Type[])" e="TypeSpec:System.Type[]" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::RequiresClearingAllTypes(System.Type[])" e="TypeDef:System.Boolean" />
	<edge mark="1" b="Method:System.Void System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::ClearCache(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="Method:System.Boolean System.Reflection.Metadata.RuntimeTypeMetadataUpdateHandler::SkipAssembly(System.Reflection.Assembly)" e="TypeDef:System.Boolean" />
	<edge mark="1" b="TypeDef:System.Reflection.Metadata.MetadataUpdateHandlerAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Reflection.Metadata.MetadataUpdateHandlerAttribute::.ctor(System.Type)" e="TypeDef:System.Reflection.Metadata.MetadataUpdateHandlerAttribute" />
	<edge mark="1" b="Method:System.Void System.Reflection.Metadata.MetadataUpdateHandlerAttribute::.ctor(System.Type)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.ExtensionAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.ExtensionAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.ExtensionAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.ExtensionAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.RefSafetyRulesAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.RefSafetyRulesAttribute::.ctor(System.Int32)" e="TypeDef:System.Runtime.CompilerServices.RefSafetyRulesAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.RefSafetyRulesAttribute::.ctor(System.Int32)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggableAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Diagnostics.DebuggableAttribute::.ctor(System.Diagnostics.DebuggableAttribute/DebuggingModes)" e="TypeDef:System.Diagnostics.DebuggableAttribute" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Diagnostics.DebuggableAttribute::.ctor(System.Diagnostics.DebuggableAttribute/DebuggingModes)" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" e="Field:System.Int32 System.Diagnostics.DebuggableAttribute/DebuggingModes::value__" />
	<edge mark="1" b="Field:System.Int32 System.Diagnostics.DebuggableAttribute/DebuggingModes::value__" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="Field:System.Int32 System.Diagnostics.DebuggableAttribute/DebuggingModes::value__" e="TypeDef:System.Int32" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" e="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::None" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::None" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::None" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" e="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::Default" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::Default" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::Default" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" e="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::DisableOptimizations" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::DisableOptimizations" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::DisableOptimizations" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" e="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::IgnoreSymbolStoreSequencePoints" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::IgnoreSymbolStoreSequencePoints" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::IgnoreSymbolStoreSequencePoints" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" e="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::EnableEditAndContinue" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::EnableEditAndContinue" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="Field:System.Diagnostics.DebuggableAttribute/DebuggingModes System.Diagnostics.DebuggableAttribute/DebuggingModes::EnableEditAndContinue" e="TypeDef:System.Diagnostics.DebuggableAttribute/DebuggingModes" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::set_WrapNonExceptionThrows(System.Boolean)" e="Property:System.Boolean System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::WrapNonExceptionThrows()" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::set_WrapNonExceptionThrows(System.Boolean)" e="TypeDef:System.Void" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::.ctor()" e="TypeDef:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::.ctor()" e="TypeDef:System.Void" />
	<edge mark="1" b="TypeDef:System.Runtime.CompilerServices.CompilationRelaxationsAttribute" e="Module:System.Private.CoreLib.dll" />
	<edge b="Method:System.Void System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(System.Int32)" e="TypeDef:System.Runtime.CompilerServices.CompilationRelaxationsAttribute" />
	<edge mark="1" b="Method:System.Void System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(System.Int32)" e="TypeDef:System.Void" />
</dependencies>